Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:   1


PC     Object              I  Line    Source 
                           A     1    
                           A     2    ; PROSE for EZ80P by Phil Ruston 2011
                           A     3    ; Compile with Zilog ZDS II
                           A     4    
                           A     5    ;----------------------------------------------
                           A     6    	.assume ADL = 1
                           A     7    ;----------------------------------------------
                           A     8    
                           B     0    	include	'ez80_cpu_equates.asm'
                           B     1    ;--- EZ80 Internal Ports ----------------------
                           B     2    
       0000009A            B     3    PB_DR			equ 09ah
       0000009B            B     4    PB_DDR			equ 09bh
       0000009C            B     5    PB_ALT1			equ 09ch
       0000009D            B     6    PB_ALT2			equ 09dh
                           B     7    
       0000009E            B     8    PC_DR			equ 09eh
       0000009F            B     9    PC_DDR			equ 09fh
       000000A0            B    10    PC_ALT1			equ 0a0h
       000000A1            B    11    PC_ALT2			equ 0a1h
                           B    12    
       000000A2            B    13    PD_DR			equ 0a2h
       000000A3            B    14    PD_DDR			equ 0a3h
       000000A4            B    15    PD_ALT1			equ 0a4h
       000000A5            B    16    PD_ALT2			equ 0a5h
                           B    17    
       000000C0            B    18    UART0_RBR		equ 0c0h
       000000C0            B    19    UART0_THR		equ 0c0h
       000000C0            B    20    UART0_BRG_L		equ 0c0h
       000000C1            B    21    UART0_BRG_H		equ 0c1h
       000000C1            B    22    UART0_IER		equ 0c1h
       000000C2            B    23    UART0_FCTL		equ 0c2h
       000000C3            B    24    UART0_LCTL		equ 0c3h
       000000C4            B    25    UART0_MCTL		equ 0c4h
       000000C5            B    26    UART0_LSR		equ 0c5h
       000000C6            B    27    UART0_MSR		equ 0c6h
                           B    28    
       000000A8            B    29    CS0_LBR			equ 0a8h			;eZ80 wait 
       000000A9            B    30    CS0_UBR			equ 0a9h
       000000AA            B    31    CS0_CTL			equ 0aah			
       000000AB            B    32    CS1_LBR			equ 0abh			;eZ80 wait 
       000000AC            B    33    CS1_UBR			equ 0ach
       000000AD            B    34    CS1_CTL			equ 0adh
       000000AE            B    35    CS2_LBR			equ 0aeh			;eZ80 wait 
       000000AF            B    36    CS2_UBR			equ 0afh
       000000B0            B    37    CS2_CTL			equ 0b0h
       000000B1            B    38    CS3_LBR			equ 0b1h			;eZ80 wait 
       000000B2            B    39    CS3_UBR			equ 0b2h
       000000B3            B    40    CS3_CTL			equ 0b3h
                           B    41    
       00000080            B    42    TMR0_CTL		equ 080h			;timer 0 eq
       00000081            B    43    TMR0_DR_L		equ 081h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:   2


PC     Object              I  Line    Source ..\..\Includes\ez80_cpu_equates.asm
       00000081            B    44    TMR0_RR_L		equ 081h
       00000082            B    45    TMR0_DR_H		equ 082h
       00000082            B    46    TMR0_RR_H		equ 082h
       00000092            B    47    TMR_ISS			equ 092h
                           B    48    
       000000ED            B    49    RTC_CTRL		equ 0edh			;RTC equate
       000000EC            B    50    RTC_ACTRL		equ 0ech
       000000E0            B    51    RTC_SEC			equ 0e0h
       000000E1            B    52    RTC_MIN			equ 0e1h
       000000E2            B    53    RTC_HRS			equ 0e2h
       000000E3            B    54    RTC_DOW			equ 0e3h
       000000E4            B    55    RTC_DOM			equ 0e4h
       000000E5            B    56    RTC_MON			equ 0e5h
       000000E6            B    57    RTC_YR			equ 0e6h
       000000E7            B    58    RTC_CEN			equ 0e7h
                           B    59    
                           B    60    ;----------------------------------------------
                           B     0    	include	'amoeba_hardware_equates.asm'
                           B     1    ;-- AMOEBA Hardware equates -------------------
                           B     2    
       00000000            B     3    port_pic_data  			equ 000h
       00000001            B     4    port_pic_ctrl			equ 001h
       00000001            B     5    port_hw_flags			equ 001h
       00000002            B     6    port_sdc_ctrl			equ 002h	; this is a
       00000002            B     7    port_keyboard_data		equ 002h
       00000003            B     8    port_sdc_data		 	equ 003h	
       00000004            B     9    port_memory_paging		equ 004h
       00000005            B    10    port_irq_ctrl			equ 005h
       00000005            B    11    port_irq_flags			equ 005h
       00000006            B    12    port_nmi_ack			equ 006h
       00000007            B    13    port_ps2_ctrl			equ 007h
       00000008            B    14    port_selector			equ 008h
       00000006            B    15    port_mouse_data			equ 006h
       00000009            B    16    port_clear_flags		equ 009h
                           B    17    
       00000000            B    18    sdc_power				equ 0		;(port_sd_c
       00000001            B    19    sdc_cs					equ 1		;(port_sd_c
       00000002            B    20    sdc_speed				equ 2 		;(port_sd_c
                           B    21    
       00000004            B    22    sdc_serializer_busy		equ 4 		;(port_hw_f
       00000005            B    23    vrt						equ 5		;(port_hw_f
                           B    24    
                           B    25    
                           B    26    ;-- Memory locations --------------------------
                           B    27    
       00000000            B    28    sysram_addr				equ 0000000h
       00800000            B    29    vram_a_addr				equ 0800000h
       00C00000            B    30    vram_b_addr				equ 0c00000h
                           B    31    
                           B    32    ;-- Hardware registers ------------------------
                           B    33    
       00FF0000            B    34    hw_palette				equ 0ff0000h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:   3


PC     Object              I  Line    Source ..\..\Includes\amoeba_hardware_equates.asm
       00FF0800            B    35    hw_sprite_registers		equ 0ff0800h
       00FF1000            B    36    hw_video_parameters		equ 0ff1000h
       00FF1400            B    37    hw_audio_registers		equ 0ff1400h
       00FF1800            B    38    hw_video_settings		equ 0ff1800h
                           B    39    
       00FF1000            B    40    tilemap_parameters		equ hw_video_parameters
       00FF1020            B    41    bitmap_parameters		equ hw_video_parameters
                           B    42    
       00FF1800            B    43    video_control			equ hw_video_settings+0
       00FF1801            B    44    sprite_control			equ hw_video_settings+0
       00FF1802            B    45    bgnd_palette_select		equ hw_video_settings+0
       00FF1803            B    46    sprite_palette_select	equ hw_video_settings+0
       00FF1804            B    47    right_border_position	equ hw_video_settings+0
       00FF1805            B    48    irq_line_lo				equ hw_video_settings+0
       00FF1806            B    49    irq_line_hi				equ hw_video_settings+0
                           B    50    
                           B    51    ;----------------------------------------------
                           B     0    	include 'misc_system_equates.asm'
                           B     1    
                           B     2    ;-- System Equates ----------------------------
                           B     3    
       00000A00            B     4    os_location		equ 0a00h
                           B     5    
       00000A14            B     6    prose_return 	equ os_location + 14h
       00000A20            B     7    prose_kernal 	equ os_location + 20h
                           B     8    
                           B     9    ;----------------------------------------------
                           A    12    	
                           A    13    ;----------------------------------------------
                           A    14    
       00000037            A    15    prose_version			equ 37h
       00000107            A    16    amoeba_version_required	equ 107h
                           A    17    
       0007FFFF            A    18    sys_mem_top				equ 07ffffh
                           A    19    
                           A    20    ;----------------------------------------------
                           A    21    ; Assembly options
                           A    22    ;----------------------------------------------
                           A    23    
       00000008            A    24    max_volumes				equ 8
                           A    25    
       00000050            A    26    max_buffer_chars		equ 80		; applies t
                           A    27    
                           A    28    ;----------------------------------------------
                           A    29    			
000A00                     A    30    			org os_location
                           A    31    			
000A00 00 00 00 00 00 00   A    32    				blkb 16,0						000A06 00 00 00 00 00 00 
000A0C 00 00 00 00 
                           A    33    			
                           A    34    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:   4


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A    35    			
000A10 C3 4E 0A 00         A    36    				jp os_first_run					000A14 C3 DE 0E 00         A    37    				jp extcmd_return				000A18 C3000000            A    38    				jp 0							000A1C C3000000            A    39    				jp 0							                           A    40    				
                           A    41    ;----------------------------------------------
                           A    42    
                           A    43    ; External apps can call kernal routines by doi
                           A    44    ; Set A to kernal routine number required (see 
                           A    45    ; (this routine is always located at os_locatio
                           A    46    
000A20 D9                  A    47    				exx
000A21 DD22 48 61 00       A    48    				ld (kernal_ix_cache),ix
000A26 DD21 6C 55 00       A    49    				ld ix,kernal_table				000A2B 11030000            A    50    				ld de,3
000A2F 57                  A    51    				ld d,a
000A30 ED5C                A    52    				mlt de
000A32 DD19                A    53    				add ix,de						000A34 DD3700              A    54    				ld ix,(ix)						                           A    55    				
000A37 E3                  A    56    				ex (sp),hl
000A38 7D                  A    57    				ld a,l							000A39 E601                A    58    				and 1							000A3B E3                  A    59    				ex (sp),hl
000A3C D9                  A    60    				exx
000A3D FDE5                A    61    				push iy
000A3F CD 4C 0A 00         A    62    				call kr_jump					000A43 FDE1                A    63    				pop iy							000A45 DD2A 48 61 00       A    64    				ld ix,(kernal_ix_cache)
000A4A 5BC9                A    65    				ret.l							                           A    66    				
000A4C DDE9                A    67    kr_jump			jp (ix)							                           A    68    						
                           A    69    ;----------------------------------------------
                           A    70    
                           A    71    ; *******************
                           A    72    ; *   START UP OS   *
                           A    73    ; *******************
                           A    74    
000A4E                     A    75    os_first_run
                           A    76    	
000A4E B7                  A    77    				or a							000A4F 20 05               A    78    				jr nz,os_cold_start		
000A51 78                  A    79    				ld a,b
000A52 32 D6 5F 00         A    80    				ld (boot_drive),a				                           A    81    
000A56                     A    82    os_cold_start
000A56 ED7D                A    83    				stmix							000A58 F3                  A    84    				di								000A59 ED5E                A    85    				im 2							000A5B AF                  A    86    				xor a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:   5


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000A5C ED6D                A    87    				ld MB,a							000A5E 4031FFFF            A    88    				ld.sis sp,0ffffh				000A62 31FFFF07            A    89    				ld sp,sys_mem_top				                           A    90    
000A66 CD E0 3B 00         A    91    				call disable_irqs
000A6A CD 84 3D 00         A    92    				call disable_all_nmis
                           A    93    				
000A6E 3A 15 61 00         A    94    				ld a,(first_run)				000A72 B7                  A    95    				or a
000A73 28 11               A    96    				jr z,dont_resetkb
000A75 CD 27 41 00         A    97    				call init_keyboard
000A79 28 06               A    98    				jr z,kb_ok
000A7B 21 16 61 00         A    99    				ld hl,devices_connected
000A7F CB86                A   100    				res 0,(hl)
000A81 AF                  A   101    kb_ok			xor a
000A82 32 15 61 00         A   102    				ld (first_run),a
000A86                     A   103    dont_resetkb
                           A   104    				
000A86 21 20 64 00         A   105    				ld hl,packed_font_start
000A8A 11000080            A   106    				ld de,vram_a_addr
000A8E 01 E2 02 00         A   107    				ld bc,packed_font_end-packed_fo
000A92 CD 08 16 00         A   108    				call unpack_rle
000A96 CD C4 35 00         A   109    				call convert_font
                           A   110    
000A9A CD 15 37 00         A   111    				call test_amoeba_vers
                           A   112    				
000A9E 21 48 61 00         A   113    				ld hl,os_variables				000AA2 01 CA 01 00         A   114    				ld bc,last_os_var-os_variables
000AA6 AF                  A   115    				xor a
000AA7 CD BD 15 00         A   116    				call os_bchl_memfill
                           A   117    	
000AAB CD 66 40 00         A   118    				call hwsc_default_hw_settings
000AAF CD BB 43 00         A   119    				call hwsc_disable_audio
                           A   120    				
000AB3 3A 4E 5F 00         A   121    				ld a,(video_mode)
000AB7 CD 96 15 00         A   122    				call os_set_vmode				                           A   123    				
000ABB 21 53 56 00         A   124    				ld hl,welcome_message			000ABF CD 51 0F 00         A   125    				call os_print_string
                           A   126    				
000AC3 CD 05 37 00         A   127    				call os_get_mem_high			000AC7 EB                  A   128    				ex de,hl
000AC8 CD 31 13 00         A   129    				call os_show_hex_address
                           A   130    
000ACC CD F9 13 00         A   131    				call os_new_line
000AD0 CD F9 13 00         A   132    				call os_new_line
000AD4 CD 69 32 00         A   133    				call os_cmd_vers				000AD8 CD 5D 32 00         A   134    				call os_cmd_remount				                           A   135    
000ADC CD F9 13 00         A   136    				call os_new_line				                           A   137    
000AE0 CD E5 41 00         A   138    				call purge_keyboard
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:   6


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A   139    				
000AE4 CD AB 3B 00         A   140    				call set_irq_vector
000AE8 CD BD 3B 00         A   141    				call enable_os_irqs
000AEC FB                  A   142    				ei
000AED CD 64 3D 00         A   143    				call set_nmi_vector
                           A   144    				
000AF1 21 16 61 00         A   145    				ld hl,devices_connected			000AF5 CB46                A   146    				bit 0,(hl)
000AF7 20 08               A   147    				jr nz,kb_present
000AF9 21 D6 5B 00         A   148    				ld hl,no_keyboard_msg
000AFD CD 30 14 00         A   149    				call os_show_packed_text
000B01                     A   150    kb_present				
000B01 21 A3 56 00         A   151    				ld hl,startup_script_fn
000B05 22 74 62 00         A   152    				ld (os_args_loc),hl
000B09 CD 9A 32 00         A   153    				call os_cmd_exec				                           A   154    									
000B0D 3A 14 61 00         A   155    				ld a,(frozen)					000B11 B7                  A   156    				or a
000B12 28 11               A   157    				jr z,os_main_loop
000B14 AF                  A   158    				xor a
000B15 32 14 61 00         A   159    				ld (frozen),a
000B19 21 FB 56 00         A   160    				ld hl,nmi_freeze_txt
000B1D CD 51 0F 00         A   161    				call os_print_string
000B21 CD B4 2D 00         A   162    				call os_cmd_r
                           A   163    				
                           A   164    
                           A   165    ;==============================================
                           A   166    
000B25 CD 56 40 00         A   167    os_main_loop	call hwsc_wait_vrt				                           A   168    
000B29 CD A2 0F 00         A   169    				call os_cursor_flash
                           A   170    
000B2D CD 5C 44 00         A   171    				call os_get_key_press
000B31 20 F2               A   172    				jr nz,os_main_loop
                           A   173    	
000B33 32 E7 62 00         A   174    				ld (current_scancode),a
000B37 78                  A   175    				ld a,b
000B38 32 E8 62 00         A   176    				ld (current_asciicode),a		                           A   177    	
000B3C CD 35 3F 00         A   178    				call hwsc_remove_cursor
000B40 3E18                A   179    				ld a,24							000B42 32 B5 61 00         A   180    				ld (cursorflashtimer),a			000B46 AF                  A   181    				xor a
000B47 32 B6 61 00         A   182    				ld (cursor_status),a
                           A   183    				
000B4B 3A E7 62 00         A   184    				ld a,(current_scancode)			000B4F FE70                A   185    				cp 70h
000B51 20 0C               A   186    				jr nz,os_notins
000B53 3A 76 5F 00         A   187     				ld a,(overwrite_mode)
000B57 EE01                A   188    				xor 1
000B59 32 76 5F 00         A   189    				ld (overwrite_mode),a
000B5D 18 C6               A   190    				jr os_main_loop
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:   7


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A   191    
000B5F FE6C                A   192    os_notins		cp 6ch
000B61 20 07               A   193    				jr nz,not_homekey
000B63 AF                  A   194    				xor a
000B64 32 B3 61 00         A   195    				ld (cursor_x),a
000B68 18 BB               A   196    				jr os_main_loop
                           A   197    								
000B6A FE69                A   198    not_homekey		cp 69h
000B6C 20 24               A   199    				jr nz,not_endkey
000B6E 3A B2 61 00         A   200    				ld a,(cursor_y)					000B72 4F                  A   201    				ld c,a
000B73 3A 7C 5F 00         A   202    				ld a,(charmap_columns)
000B77 47                  A   203    				ld b,a
000B78 05                  A   204    fendloop		dec b
000B79 CD A3 3F 00         A   205    				call hwsc_get_charmap_addr_xy
000B7D 7E                  A   206    				ld a,(hl)
000B7E FE20                A   207    				cp 20h
000B80 28 F6               A   208    				jr z,fendloop
000B82 04                  A   209    				inc b
000B83 3A 7C 5F 00         A   210    				ld a,(charmap_columns)
000B87 B8                  A   211    				cp b
000B88 20 01               A   212    				jr nz,endxposok
000B8A 05                  A   213    				dec b
000B8B 78                  A   214    endxposok		ld a,b
000B8C 32 B3 61 00         A   215    				ld (cursor_x),a
000B90 18 93               A   216    				jr os_main_loop
                           A   217    
000B92 21 B3 61 00         A   218    not_endkey		ld hl,cursor_x					000B96 FE6B                A   219    				cp 06bh			
000B98 20 10               A   220    				jr nz,os_ntlft
000B9A 35                  A   221    				dec (hl)
000B9B 7E                  A   222    				ld a,(hl)
000B9C FEFF                A   223    				cp 0ffh	
000B9E 20 85               A   224    				jr nz,os_main_loop
000BA0 3A 7C 5F 00         A   225    				ld a,(charmap_columns)
000BA4 3D                  A   226    				dec a
000BA5 77                  A   227    				ld (hl),a						000BA6 C3 25 0B 00         A   228    				jr os_main_loop
                           A   229    
000BAA FE74                A   230    os_ntlft		cp 074h							000BAC 20 10               A   231    				jr nz,os_ntrig
000BAE 34                  A   232    				inc (hl)
000BAF 3A 7C 5F 00         A   233    				ld a,(charmap_columns)
000BB3 BE                  A   234    				cp (hl)
000BB4 C2 25 0B 00         A   235    				jr nz,os_main_loop
000BB8 3600                A   236    				ld (hl),0						000BBA C3 25 0B 00         A   237    				jr os_main_loop
                           A   238    
000BBE 21 B2 61 00         A   239    os_ntrig		ld hl,cursor_y
000BC2 FE75                A   240    				cp 075h							000BC4 20 0D               A   241    				jr nz,os_ntup
000BC6 35                  A   242    				dec (hl)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:   8


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000BC7 CB7E                A   243    				bit 7,(hl)
000BC9 CA 25 0B 00         A   244    				jr z,os_main_loop
000BCD 3600                A   245    				ld (hl),0						000BCF C3 25 0B 00         A   246    				jr os_main_loop
                           A   247    
000BD3 FE72                A   248    os_ntup			cp 072h
000BD5 20 14               A   249    				jr nz,os_ntdwn					000BD7 34                  A   250    				inc (hl)
000BD8 3A 79 5F 00         A   251    				ld a,(charmap_rows)
000BDC BE                  A   252    				cp (hl)
000BDD C2 25 0B 00         A   253    				jr nz,os_main_loop
000BE1 3D                  A   254    				dec a
000BE2 77                  A   255    				ld (hl),a						000BE3 CD C1 3E 00         A   256    				call hwsc_scroll_up
000BE7 C3 25 0B 00         A   257    				jr os_main_loop
                           A   258    
000BEB FE71                A   259    os_ntdwn		cp 071h							000BED 20 08               A   260    				jr nz,os_nodel		
000BEF 3A B3 61 00         A   261    				ld a,(cursor_x)					000BF3 47                  A   262    				ld b,a
000BF4 04                  A   263    				inc b
000BF5 18 13               A   264    				jr os_chrbk
                           A   265    
000BF7 FE66                A   266    os_nodel		cp 066h							000BF9 20 17               A   267    				jr nz,os_nbksp
000BFB 3A B3 61 00         A   268    				ld a,(cursor_x)					000BFF B7                  A   269    				or a							000C00 CA 25 0B 00         A   270    				jp z,os_main_loop
000C04 47                  A   271    				ld b,a
000C05 3D                  A   272    				dec a
000C06 32 B3 61 00         A   273    				ld (cursor_x),a					000C0A CD BB 3F 00         A   274    os_chrbk		call hwsc_chars_left			000C0E C3 25 0B 00         A   275    				jp os_main_loop
                           A   276    
000C12 FE5A                A   277    os_nbksp		cp 05ah							000C14 CA 5C 0C 00         A   278    				jp z,os_enter_pressed
                           A   279    	
000C18 3A E8 62 00         A   280    				ld a,(current_asciicode)		000C1C FE20                A   281    				cp 32							000C1E 38 38               A   282    				jr c,os_nvdun					                           A   283    
000C20 FE7B                A   284    				cp 07bh							000C22 30 12               A   285    				jr nc,os_gtcha					000C24 FE61                A   286    				cp 061h
000C26 38 04               A   287    				jr c,os_ntupc
000C28 D620                A   288    				sub 020h
000C2A 18 0A               A   289    				jr os_gtcha
000C2C FE5B                A   290    os_ntupc		cp 05bh
000C2E 30 06               A   291    				jr nc,os_gtcha
000C30 FE41                A   292    				cp 041h
000C32 38 02               A   293    				jr c,os_gtcha
000C34 C620                A   294    				add a,020h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:   9


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000C36 57                  A   295    os_gtcha		ld d,a							000C37 3A 76 5F 00         A   296    				ld a,(overwrite_mode)			000C3B B7                  A   297    				or a
000C3C CC F4 3F 00         A   298    				call z,hwsc_chars_right
                           A   299    				
000C40 ED4B B2 61 00       A   300    os_schi			ld bc,(cursor_pos)				000C45 7A                  A   301    				ld a,d							000C46 CD FC 3E 00         A   302    				call hwsc_plot_char		
000C4A 21 B3 61 00         A   303    				ld hl,cursor_x					000C4E 34                  A   304    				inc (hl)
000C4F 3A 7C 5F 00         A   305    				ld a,(charmap_columns)
000C53 BE                  A   306    				cp (hl)							000C54 20 02               A   307    				jr nz,os_nvdun
000C56 3600                A   308    				ld (hl),0
                           A   309    
000C58 C3 25 0B 00         A   310    os_nvdun		jp os_main_loop
                           A   311    	
                           A   312    
                           A   313    ;----------------------------------------------
                           A   314    
000C5C                     A   315    os_enter_pressed
                           A   316    	
000C5C CD 37 40 00         A   317    				call hwsc_charline_to_command_s
                           A   318    
000C60 AF                  A   319    				xor a
000C61 32 B3 61 00         A   320    				ld (cursor_x),a					000C65 21 B2 61 00         A   321    				ld hl,cursor_y					000C69 34                  A   322    				inc (hl)
000C6A 3A 79 5F 00         A   323    				ld a,(charmap_rows)
000C6E BE                  A   324    				cp (hl)
000C6F 20 06               A   325    				jr nz,os_esdok
000C71 3D                  A   326    				dec a
000C72 77                  A   327    				ld (hl),a
000C73 CD C1 3E 00         A   328    				call hwsc_scroll_up
                           A   329    
000C77 CD 7F 0C 00         A   330    os_esdok		call os_parse_cmd_chk_ps		                           A   331    
000C7B C3 25 0B 00         A   332    post_csb		jp os_main_loop
                           A   333    
                           A   334    	
                           A   335    ;----------------------------------------------
                           A   336    
                           A   337    
000C7F                     A   338    os_parse_cmd_chk_ps
                           A   339    
000C7F CD 92 0C 00         A   340    				call os_parse_command_line
000C83 FEFE                A   341    				cp 0feh							000C85 C0                  A   342    				ret nz
000C86 01500000            A   343    				ld bc,max_buffer_chars			000C8A 11 D0 61 00         A   344    				ld de,commandstring				000C8E EDB0                A   345    				ldir
000C90 18 ED               A   346    				jr os_parse_cmd_chk_ps
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  10


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A   347    
                           A   348    	
                           A   349    ;----------------------------------------------
                           A   350    	
000C92                     A   351    os_parse_command_line
                           A   352    
000C92 3E01                A   353    				ld a,1
000C94 32 4B 61 00         A   354    				ld (store_registers),a			                           A   355    
000C98 21 D0 61 00         A   356    				ld hl,commandstring				000C9C 0650                A   357    				ld b,max_buffer_chars			000C9E CD EF 0F 00         A   358    				call os_scan_for_non_space		000CA2 B7                  A   359    				or a							000CA3 C8                  A   360    				ret z
000CA4 11 39 57 00         A   361    				ld de,dictionary-1				000CA8 D5                  A   362    				push de
000CA9 D1                  A   363    compcstr		pop de
000CAA E5                  A   364    				push hl
000CAB FDE1                A   365    				pop iy
000CAD 13                  A   366    notacmd			inc de
000CAE 1A                  A   367    				ld a,(de)
000CAF FE01                A   368    				cp 1							000CB1 CA 4D 0D 00         A   369    				jp z,os_no_kernal_command_found
000CB5 CB7F                A   370    				bit 7,a
000CB7 28 F4               A   371    				jr z,notacmd					000CB9 E67F                A   372    				and 07fh
000CBB 4F                  A   373    				ld c,a							000CBC D5                  A   374    				push de
000CBD 13                  A   375    cmdnscan		inc de
000CBE FD7E00              A   376    				ld a,(iy)						000CC1 CD 5A 12 00         A   377    				call os_uppercasify
000CC5 47                  A   378    				ld b,a
000CC6 1A                  A   379    				ld a,(de)						000CC7 B8                  A   380    				cp b
000CC8 FD23                A   381    				inc iy
000CCA 28 F1               A   382    				jr z,cmdnscan					000CCC 1A                  A   383    nomatch			ld a,(de)						000CCD B7                  A   384    				or a
000CCE 28 04               A   385    				jr z,posmatch					000CD0 CB7F                A   386    				bit 7,a			
000CD2 28 D5               A   387    				jr z,compcstr					000CD4 FD7EFF              A   388    posmatch		ld a,(iy-1)						000CD7 FE20                A   389    				cp 32
000CD9 20 CE               A   390    				jr nz,compcstr					                           A   391    	
000CDB D1                  A   392    				pop de				
000CDC FDE5                A   393    				push iy							000CDE E1                  A   394    				pop hl
000CDF CD EF 0F 00         A   395    				call os_scan_for_non_space
000CE3 22 74 62 00         A   396    				ld (os_args_loc),hl				                           A   397    	
000CE7 21 D8 5C 00         A   398    				ld hl,os_cmd_locs
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  11


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000CEB 11030000            A   399    				ld de,3
000CEF 51                  A   400    				ld d,c
000CF0 ED5C                A   401    				mlt de							000CF2 19                  A   402    				add hl,de
000CF3 ED37                A   403    				ld ix,(hl)						                           A   404    
000CF5 2A 74 62 00         A   405    				ld hl,(os_args_loc)				000CF9 CD 24 0F 00         A   406    				call os_run_command				                           A   407    
000CFD B7                  A   408    				or a
000CFE C8                  A   409    				ret z							000CFF FE01                A   410    				cp 1
000D01 20 13               A   411    				jr nz,show_erm
000D03 78                  A   412    os_hwe1			ld a,b							000D04 21 3D 5A 00         A   413    os_hwerr		ld hl,hex_byte_txt		
000D08 CD 9C 10 00         A   414    				call hexbyte_to_ascii	
000D0C 21 C9 5B 00         A   415    				ld hl,hw_err_msg
000D10 CD 30 14 00         A   416    				call os_show_packed_text
000D14 AF                  A   417    				xor a
000D15 C9                  A   418    				ret
                           A   419    
000D16 01000000            A   420    show_erm		ld bc,0							000D1A 4F                  A   421    				ld c,a
000D1B D680                A   422    				sub 080h						000D1D 38 11               A   423    				jr c,no_trans					000D1F 21 FD 5D 00         A   424    				ld hl,kernal_error_code_transla
000D23 CB77                A   425    				bit 6,a							000D25 28 06               A   426    				jr z,not_fs_err					000D27 21 0B 5E 00         A   427    				ld hl,fs_error_code_translation
000D2B D640                A   428    				sub 040h
000D2D 4F                  A   429    not_fs_err		ld c,a
000D2E 09                  A   430    				add hl,bc
000D2F 4E                  A   431    				ld c,(hl)
000D30 0600                A   432    no_trans		ld b,0
000D32 21 3E 5D 00         A   433    				ld hl,packed_msg_list
000D36 7E                  A   434    findmsg			ld a,(hl)
000D37 FEFF                A   435    				cp 0ffh
000D39 C8                  A   436    				ret z							000D3A 23                  A   437    				inc hl
000D3B B7                  A   438    				or a
000D3C 20 F8               A   439    				jr nz,findmsg					000D3E 04                  A   440    				inc b
000D3F 79                  A   441    				ld a,c							000D40 B8                  A   442    				cp b
000D41 20 F3               A   443    				jr nz,findmsg
000D43 CD 30 14 00         A   444    				call os_show_packed_text
000D47 CD F9 13 00         A   445    				call os_new_line
000D4B AF                  A   446    				xor a
000D4C C9                  A   447    				ret
                           A   448    	
                           A   449    
000D4D                     A   450    os_no_kernal_command_found
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  12


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A   451    
000D4D 3E30                A   452    				ld a,030h						000D4F 32 DF 5F 00         A   453    fvolcmd			ld (vol_txt+4),a				000D53 F5                  A   454    				push af			
000D54 11 DC 5F 00         A   455    				ld de,vol_txt+1		
000D58 0605                A   456    				ld b,5			
000D5A CD 20 12 00         A   457    				call os_compare_strings	
000D5E 28 08               A   458    				jr z,gotvolcmd		
000D60 F1                  A   459    				pop af				
000D61 3C                  A   460    				inc a			
000D62 FE38                A   461    				cp 030h+max_volumes		
000D64 20 E9               A   462    				jr nz,fvolcmd		
000D66 18 0B               A   463    				jr novolcmd		
000D68 F1                  A   464    gotvolcmd		pop af
000D69 D630                A   465    				sub 030h
000D6B CD F7 1A 00         A   466    				call os_change_volume
000D6F C3 0F 0F 00         A   467    				jp extcmderf					                           A   468    		
                           A   469    
                           A   470    
000D73 7E                  A   471    novolcmd		ld a,(hl)						000D74 FE47                A   472    				cp 'G'							000D76 20 29               A   473    				jr nz,not_g_cmd					000D78 23                  A   474    				inc hl
000D79 7E                  A   475    				ld a,(hl)
000D7A 2B                  A   476    				dec hl
000D7B FE20                A   477    				cp ' '
000D7D 20 22               A   478    				jr nz,not_g_cmd
000D7F 23                  A   479    				inc hl
000D80 CD EF 0F 00         A   480    				call os_scan_for_non_space
000D84 22 74 62 00         A   481    				ld (os_args_loc),hl				000D88 B7                  A   482    				or a
000D89 20 04               A   483    				jr nz,gotgargs
000D8B 3E1F                A   484    				ld a,01fh						000D8D 18 87               A   485    				jr show_erm
000D8F CD DB 10 00         A   486    gotgargs		call ascii_to_hex_no_scan		000D93 B7                  A   487    				or a
000D94 20 80               A   488    				jr nz,show_erm
000D96 CD 73 3D 00         A   489    				call enable_button_nmi			000D9A D5                  A   490    				push de
000D9B DDE1                A   491    				pop ix			
000D9D C3 24 0F 00         A   492    				jp os_run_command				                           A   493    				
                           A   494    				
                           A   495    
000DA1 22 74 62 00         A   496    not_g_cmd		ld (os_args_loc),hl				000DA5 22 77 62 00         A   497    				ld (os_args_pos_cache),hl
000DA9 CD 23 10 00         A   498    				call os_args_to_fn_append_ezp	                           A   499    	
000DAD CD 2E 0F 00         A   500    				call cache_dir_block			                           A   501    
000DB1 CD 6F 48 00         A   502    				call fs_check_disk_format		Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  13


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000DB5 38 38               A   503    				jr c,os_ndfxc					000DB7 20 36               A   504    				jr nz,os_ndfxc
                           A   505    	
000DB9 CD 18 4A 00         A   506    				call fs_open_file_command		000DBD DA 04 0D 00         A   507    				jp c,os_hwerr			 		000DC1 28 36               A   508    				jr z,os_gecmd					                           A   509    
000DC3 CD E9 49 00         A   510    				call fs_goto_root_dir_command	000DC7 21 9A 56 00         A   511    				ld hl,os_dos_cmds_txt
000DCB CD B1 52 00         A   512    				call fs_hl_to_filename
000DCF CD C2 49 00         A   513    				call fs_change_dir_command		000DD3 DA 04 0D 00         A   514    				jp c,os_hwerr
000DD7 20 16               A   515    				jr nz,os_ndfxc					                           A   516    	
000DD9 2A 77 62 00         A   517    				ld hl,(os_args_pos_cache)		000DDD 22 74 62 00         A   518    				ld (os_args_loc),hl
000DE1 CD 23 10 00         A   519    				call os_args_to_fn_append_ezp	000DE5 CD 18 4A 00         A   520    				call fs_open_file_command		000DE9 DA 04 0D 00         A   521    				jp c,os_hwerr
000DED 28 0A               A   522    				jr z,os_gecmd
000DEF CD 3A 0F 00         A   523    os_ndfxc		call restore_dir_block			000DF3 3E0B                A   524    				ld a,0bh						000DF5 C3 16 0D 00         A   525    				jp show_erm
                           A   526    
000DF9 2A 74 62 00         A   527    os_gecmd		ld hl,(os_args_loc)				000DFD CD EF 0F 00         A   528    				call os_scan_for_non_space		000E01 22 74 62 00         A   529    				ld (os_args_loc),hl
                           A   530    
000E05 11100000            A   531    				ld de,16
000E09 CD 6B 16 00         A   532    				call os_set_load_length			000E0D 21 02 69 00         A   533    				ld hl,scratch_pad
000E11 22 3F 55 00         A   534    				ld (fs_ez80_address),hl
000E15 CD 6B 4A 00         A   535    				call fs_read_data_command
000E19 DA 04 0D 00         A   536    				jp c,os_hwerr					000E1D C2 16 0D 00         A   537    				jp nz,show_erm					000E21 2A 04 69 00         A   538    				ld hl,(scratch_pad+2)
000E25 1150524F            A   539    				ld de,04f5250h					000E29 AF                  A   540    				xor a	
000E2A ED52                A   541    				sbc hl,de
000E2C 28 0A               A   542    				jr z,loc_header
000E2E CD 3A 0F 00         A   543    				call restore_dir_block			000E32 3E1A                A   544    				ld a,01ah						000E34 C3 16 0D 00         A   545    				jp show_erm						                           A   546    				
000E38 3A 11 69 00         A   547    loc_header		ld a,(scratch_pad+15)			000E3C 32 47 61 00         A   548    				ld (store_adl),a			
000E40 CD 18 4A 00         A   549    				call fs_open_file_command		000E44 DA 04 0D 00         A   550    				jp c,os_hwerr
000E48 20 A5               A   551    				jr nz,os_ndfxc
000E4A 2A 07 69 00         A   552    				ld hl,(scratch_pad+5)			000E4E 22 3F 55 00         A   553    				ld (fs_ez80_address),hl
000E52 ED5B 17 61 00       A   554    				ld de,(sysram_os_highest)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  14


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000E57 AF                  A   555    				xor a
000E58 E5                  A   556    				push hl
000E59 ED52                A   557    				sbc hl,de
000E5B E1                  A   558    				pop hl
000E5C 30 0A               A   559    				jr nc,osmemok
000E5E CD 3A 0F 00         A   560    				call restore_dir_block			000E62 3E26                A   561    				ld a,026h
000E64 C3 16 0D 00         A   562    				jp show_erm
                           A   563    
000E68 ED5B 0D 69 00       A   564    osmemok			ld de,(scratch_pad+11)			000E6D 7B                  A   565    				ld a,e
000E6E B2                  A   566    				or d
000E6F 28 14               A   567    				jr z,noprov_spec				000E71 21370000            A   568    				ld hl,prose_version
000E75 AF                  A   569    				xor a
000E76 40ED52              A   570    				sbc.sis hl,de					000E79 30 0A               A   571    				jr nc,noprov_spec
000E7B CD 3A 0F 00         A   572    				call restore_dir_block
000E7F 3E1B                A   573    				ld a,01bh						000E81 C3 16 0D 00         A   574    				jp show_erm
                           A   575    				
000E85 CD AB 40 00         A   576    noprov_spec		call hwsc_get_version			000E89 2A 0F 69 00         A   577    				ld hl,(scratch_pad+13)			000E8D EB                  A   578    				ex de,hl						000E8E 7B                  A   579    				ld a,e
000E8F B2                  A   580    				or d
000E90 28 10               A   581    				jr z,nohwv_spec					000E92 AF                  A   582    				xor a
000E93 40ED52              A   583    				sbc.sis hl,de					000E96 30 0A               A   584    				jr nc,nohwv_spec
000E98 CD 3A 0F 00         A   585    				call restore_dir_block
000E9C 3E2B                A   586    				ld a,02bh						000E9E C3 16 0D 00         A   587    				jp show_erm
                           A   588    
000EA2 ED5B 0A 69 00       A   589    nohwv_spec		ld de,(scratch_pad+8)			000EA7 3A 0C 69 00         A   590    				ld a,(scratch_pad+10)			000EAB B2                  A   591    				or d
000EAC B3                  A   592    				or e
000EAD 28 04               A   593    				jr z,readcode					000EAF CD 6B 16 00         A   594    				call os_set_load_length			                           A   595    		
000EB3 2A 07 69 00         A   596    readcode		ld hl,(scratch_pad+5)
000EB7 22 7D 62 00         A   597    				ld (os_extcmd_jmp_addr),hl		000EBB CD 6B 4A 00         A   598    				call fs_read_data_command
000EBF F5                  A   599    				push af
000EC0 CD 3A 0F 00         A   600    				call restore_dir_block			000EC4 F1                  A   601    				pop af
000EC5 DA 04 0D 00         A   602    				jp c,os_hwerr					000EC9 C2 16 0D 00         A   603    				jp nz,show_erm					                           A   604    	
000ECD CD 73 3D 00         A   605    				call enable_button_nmi			000ED1 DD2A 7D 62 00       A   606    				ld ix,(os_extcmd_jmp_addr)		Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  15


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000ED6 2A 74 62 00         A   607    				ld hl,(os_args_loc)				000EDA C3 24 0F 00         A   608    				jp os_run_command				                           A   609    
000EDE F5                  A   610    extcmd_return	push af							000EDF CD 66 40 00         A   611    				call hwsc_default_hw_settings	000EE3 3A 4B 61 00         A   612    				ld a,(store_registers)
000EE7 B7                  A   613    				or a
000EE8 28 06               A   614    				jr z,skp_strg
000EEA F1                  A   615    				pop af
000EEB CD 72 13 00         A   616    				call os_store_CPU_regs			000EEF F5                  A   617    				push af
000EF0 F1                  A   618    skp_strg		pop af
                           A   619    
000EF1 F5                  A   620    cntuasr			push af
000EF2 C5                  A   621    				push bc							000EF3 21 02 69 00         A   622    				ld hl,scratch_pad				000EF7 CD 9C 10 00         A   623    				call hexbyte_to_ascii
000EFB 3600                A   624    				ld (hl),0
000EFD 11 02 69 00         A   625    				ld de,scratch_pad
000F01 21 13 57 00         A   626    				ld hl,error_txt
000F05 CD AA 1B 00         A   627    				call os_set_envar
000F09 CD 7E 3D 00         A   628    				call disable_button_nmi			000F0D C1                  A   629    				pop bc
000F0E F1                  A   630    				pop af
000F0F B7                  A   631    extcmderf		or a							000F10 C8                  A   632    				ret z	
000F11 FE01                A   633    				cp 1							000F13 CA 03 0D 00         A   634    				jp z,os_hwe1					000F17 FEFF                A   635    				cp 0ffh							000F19 CA 56 0A 00         A   636    				jp z,os_cold_start
000F1D FEFE                A   637    				cp 0feh							000F1F C8                  A   638    				ret z
000F20 C3 16 0D 00         A   639    				jp show_erm						                           A   640    				
                           A   641    ;----------------------------------------------
                           A   642    
000F24                     A   643    os_run_command									000F24 ED3906              A   644    				out0 (port_nmi_ack),a			000F27 DD22 4C 61 00       A   645    				ld (com_start_addr),ix			000F2C DDE9                A   646    				jp (ix)							                           A   647    
                           A   648    ;----------------------------------------------
                           A   649    
000F2E                     A   650    cache_dir_block
                           A   651    
                           A   652    	
000F2E D5                  A   653    				push de
000F2F CD 9B 1A 00         A   654    				call fs_get_dir_cluster	
000F33 ED53 7A 62 00       A   655    				ld (os_dir_block_cache),de
000F38 D1                  A   656    				pop de	
000F39 C9                  A   657    				ret
                           A   658    		
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  16


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A   659    
000F3A                     A   660    restore_dir_block
                           A   661    
000F3A D5                  A   662    				push de
000F3B ED5B 7A 62 00       A   663    				ld de,(os_dir_block_cache)
000F40 CD A7 1A 00         A   664    				call fs_update_dir_cluster
000F44 D1                  A   665    				pop de
000F45 C9                  A   666    				ret
                           A   667    		
                           A   668    ;==============================================
                           A   669    ; Routines called by command line
                           A   670    ;==============================================
                           A   671    
                           A   672    ; Set:-
                           A   673    ; HL to address of string
                           A   674    ; c = y
                           A   675    ; b = x
                           A   676    
000F46                     A   677    ext_print_string
                           A   678    
000F46 CC E4 15 00         A   679    				call z,mbase_hl
000F4A 18 05               A   680    				jr os_print_string
                           A   681    
000F4C                     A   682    os_print_string_cond
                           A   683    
000F4C CD 4E 1A 00         A   684    				call test_quiet_mode
000F50 C0                  A   685    				ret nz
                           A   686    
000F51                     A   687    os_print_string
                           A   688    
000F51 D5                  A   689    				push de
000F52 C5                  A   690    				push bc
000F53 ED4B B2 61 00       A   691    				ld bc,(cursor_pos)				000F58 7E                  A   692    prstr_lp		ld a,(hl)
000F59 23                  A   693    				inc hl
000F5A B7                  A   694    				or a
000F5B 20 09               A   695    				jr nz,prstr_ne
000F5D ED43 B2 61 00       A   696    				ld (cursor_pos),bc
000F62 C1                  A   697    				pop bc
000F63 D1                  A   698    				pop de
000F64 AF                  A   699    				xor a							000F65 C9                  A   700    				ret
                           A   701    
000F66 FE0D                A   702    prstr_ne		cp 13
000F68 20 04               A   703    				jr nz,not_cr
000F6A 0600                A   704    				ld b,0
000F6C 18 EA               A   705    				jr prstr_lp
000F6E FE0A                A   706    not_cr			cp 10
000F70 28 12               A   707    				jr z,line_feed				
000F72 FE0B                A   708    				cp 11
000F74 28 0C               A   709    				jr z,next_line
000F76 CD FC 3E 00         A   710    				call hwsc_plot_char
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  17


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000F7A 04                  A   711    				inc b
000F7B 3A 7C 5F 00         A   712    				ld a,(charmap_columns)
000F7F B8                  A   713    				cp b
000F80 20 D6               A   714    				jr nz,prstr_lp
000F82 0600                A   715    next_line		ld b,0
000F84 0C                  A   716    line_feed		inc c
000F85 3A 79 5F 00         A   717    				ld a,(charmap_rows)
000F89 B9                  A   718    				cp c
000F8A 20 CC               A   719    				jr nz,prstr_lp
000F8C 0D                  A   720    				dec c
000F8D CD C1 3E 00         A   721    				call hwsc_scroll_up
000F91 18 C5               A   722    				jr prstr_lp
                           A   723    
                           A   724    ;----------------------------------------------
                           A   725    
000F93 21 C0 62 00         A   726    os_print_char	ld hl,char_to_print
000F97 77                  A   727    				ld (hl),a
000F98 18 B7               A   728    				jr os_print_string
                           A   729    
                           A   730    ;----------------------------------------------
                           A   731    
000F9A F5                  A   732    home_cursor		push af
000F9B AF                  A   733    				xor a
000F9C 32 B3 61 00         A   734    				ld (cursor_x),a
000FA0 F1                  A   735    				pop af
000FA1 C9                  A   736    				ret
                           A   737    				
                           A   738    ;----------------------------------------------
                           A   739    
000FA2                     A   740    os_cursor_flash
                           A   741    
000FA2 21 B5 61 00         A   742    				ld hl,cursorflashtimer
000FA6 34                  A   743    				inc (hl)
000FA7 7E                  A   744    				ld a,(hl)
000FA8 FE19                A   745    				cp 25
000FAA C0                  A   746    				ret nz
000FAB 3600                A   747    				ld (hl),0
000FAD 3A B6 61 00         A   748    				ld a,(cursor_status)
000FB1 EE01                A   749    				xor 1
000FB3 32 B6 61 00         A   750    				ld (cursor_status),a
000FB7 28 15               A   751    				jr z,no_cursor
000FB9 3E5F                A   752    				ld a,05fh
000FBB 21 76 5F 00         A   753    				ld hl,overwrite_mode
000FBF CB46                A   754    				bit 0,(hl)
000FC1 28 02               A   755    				jr z,cursor_selected
000FC3 3E7F                A   756    				ld a,07fh
                           A   757    				
000FC5 CD D4 0F 00         A   758    cursor_selected	call os_set_cursor_image
000FC9 CD 4F 3F 00         A   759    				call hwsc_draw_cursor			000FCD C9                  A   760    				ret
                           A   761    
000FCE CD 35 3F 00         A   762    no_cursor		call hwsc_remove_cursor
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  18


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000FD2 C9                  A   763    				ret
                           A   764    
                           A   765    
                           A   766    ;----------------------------------------------
                           A   767    
000FD3                     A   768    ext_set_cursor_image
                           A   769    
000FD3 7B                  A   770    				ld a,e
                           A   771    				
000FD4                     A   772    os_set_cursor_image
                           A   773    			
000FD4 32 77 5F 00         A   774    				ld (cursor_image_char),a
000FD8 BF                  A   775    				cp a
000FD9 C9                  A   776    				ret
                           A   777    
                           A   778    ;----------------------------------------------
                           A   779    
000FDA                     A   780    os_next_arg
                           A   781    
000FDA CD E6 0F 00         A   782    				call os_scan_for_space
000FDE B7                  A   783    				or a
000FDF C8                  A   784    				ret z
000FE0 CD EF 0F 00         A   785    				call os_scan_for_non_space
000FE4 B7                  A   786    				or a
000FE5 C9                  A   787    				ret
                           A   788    
                           A   789    
                           A   790    ;----------------------------------------------
                           A   791    	
                           A   792    
000FE6                     A   793    os_scan_for_space
                           A   794    
000FE6 7E                  A   795    os_sfspl 		ld a,(hl)						000FE7 B7                  A   796    				or a							000FE8 C8                  A   797    				ret z
000FE9 FE20                A   798    				cp ' '
000FEB C8                  A   799    				ret z
000FEC 23                  A   800    				inc hl
000FED 18 F7               A   801    				jr os_sfspl
                           A   802    	
                           A   803    
                           A   804    ;----------------------------------------------
                           A   805    	
                           A   806    
000FEF                     A   807    os_scan_for_non_space
                           A   808    
000FEF 2B                  A   809    				dec hl							000FF0 23                  A   810    os_nsplp		inc hl			
000FF1 7E                  A   811    				ld a,(hl)			
000FF2 B7                  A   812    				or a			
000FF3 C8                  A   813    				ret z							000FF4 FE20                A   814    				cp ' '
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  19


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000FF6 28 F8               A   815    				jr z,os_nsplp
000FF8 C9                  A   816    				ret
                           A   817    	
                           A   818    	
                           A   819    ;----------------------------------------------
                           A   820    
000FF9                     A   821    os_args_to_alt_filename
                           A   822    
000FF9 CD 53 10 00         A   823    				call os_atfn_pre				000FFD C8                  A   824    				ret z
000FFE CD AB 52 00         A   825    				call fs_hl_to_alt_filename
001002 18 09               A   826    				jr os_atfrl
                           A   827    	
                           A   828    	
                           A   829    	
                           A   830    		
001004                     A   831    os_args_to_filename
                           A   832    
001004 CD 53 10 00         A   833    				call os_atfn_pre				001008 C8                  A   834    				ret z
001009 CD B1 52 00         A   835    				call fs_hl_to_filename	
                           A   836    
00100D 7E                  A   837    os_atfrl		ld a,(hl)						00100E B7                  A   838    				or a							00100F 28 0B               A   839    				jr z,os_cfne
001011 FE20                A   840    				cp 32
001013 28 07               A   841    				jr z,os_cfne
001015 FE2F                A   842    				cp 02fh
001017 28 03               A   843    				jr z,os_cfne
001019 23                  A   844    				inc hl
00101A 18 F1               A   845    				jr os_atfrl	
00101C 22 74 62 00         A   846    os_cfne			ld (os_args_loc),hl				001020 79                  A   847    				ld a,c			
001021 B7                  A   848    				or a							001022 C9                  A   849    				ret
                           A   850    
                           A   851    
                           A   852    
                           A   853    
001023                     A   854    os_args_to_fn_append_ezp
                           A   855    
                           A   856    	
001023 CD 53 10 00         A   857    				call os_atfn_pre				001027 C8                  A   858    				ret z
001028 11 4F 61 00         A   859    				ld de,temp_string
00102C 7E                  A   860    ccmdtlp			ld a,(hl)						00102D B7                  A   861    				or a
00102E 28 0D               A   862    				jr z,goteocmd
001030 FE20                A   863    				cp ' '
001032 28 09               A   864    				jr z,goteocmd
001034 FE2E                A   865    				cp '.'
001036 28 05               A   866    				jr z,goteocmd
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  20


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001038 12                  A   867    				ld (de),a
001039 13                  A   868    				inc de
00103A 23                  A   869    				inc hl
00103B 18 EF               A   870    				jr ccmdtlp
                           A   871    	
00103D E5                  A   872    goteocmd		push hl
00103E 21 ED 56 00         A   873    				ld hl,ezp_extension_txt
001042 01050000            A   874    				ld bc,5
001046 EDB0                A   875    				ldir 
001048 21 4F 61 00         A   876    				ld hl,temp_string
00104C CD B1 52 00         A   877    				call fs_hl_to_filename
001050 E1                  A   878    				pop hl
001051 18 BA               A   879    				jr os_atfrl
                           A   880    	
                           A   881    
                           A   882    
                           A   883    
001053                     A   884    os_atfn_pre
                           A   885    
001053 2A 74 62 00         A   886    				ld hl,(os_args_loc)				001057 CD EF 0F 00         A   887    				call os_scan_for_non_space
00105B B7                  A   888    				or a
00105C C8                  A   889    				ret z
00105D 7E                  A   890    				ld a,(hl)
00105E FE2F                A   891    				cp 02fh							001060 20 01               A   892    				jr nz,notfsl1
001062 23                  A   893    				inc hl
001063 AF                  A   894    notfsl1			xor a
001064 3C                  A   895    				inc a
001065 C9                  A   896    				ret
                           A   897    
                           A   898    
                           A   899    ;--------- Number <-> String functions --------
                           A   900    
                           A   901    
001066                     A   902    os_clear_output_line
                           A   903    
001066 C5                  A   904    				push bc
001067 E5                  A   905    				push hl			
001068 21 22 62 00         A   906    				ld hl,output_line
00106C 01500000            A   907    				ld bc,max_buffer_chars
001070 3E20                A   908    				ld a,32
001072 CD BD 15 00         A   909    				call os_bchl_memfill
001076 E1                  A   910    				pop hl
001077 C1                  A   911    				pop bc
001078 C9                  A   912    				ret
                           A   913    	
                           A   914    	
                           A   915    	
001079                     A   916    os_skip_leading_ascii_zeros
                           A   917    
001079 7E                  A   918    slazlp			ld a,(hl)						Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  21


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00107A FE30                A   919    				cp '0'							00107C C0                  A   920    				ret nz
00107D 23                  A   921    				inc hl
00107E 10 F9               A   922    				djnz slazlp
001080 C9                  A   923    				ret
                           A   924    	
                           A   925    
                           A   926    
001081                     A   927    os_leading_ascii_zeros_to_spaces
                           A   928    
001081 E5                  A   929    				push hl
001082 7E                  A   930    clazlp			ld a,(hl)						001083 FE30                A   931    				cp '0'							001085 20 05               A   932    				jr nz,claze	
001087 3620                A   933    				ld (hl),' '
001089 23                  A   934    				inc hl
00108A 10 F6               A   935    				djnz clazlp
00108C E1                  A   936    claze			pop hl
00108D C9                  A   937    				ret
                           A   938    	
                           A   939    
                           A   940    
                           A   941    		
00108E                     A   942    n_hexbytes_to_ascii
                           A   943    
00108E 1A                  A   944    				ld a,(de)						00108F CD 9C 10 00         A   945    				call hexbyte_to_ascii			001093 1B                  A   946    				dec de
001094 10 F8               A   947    				djnz n_hexbytes_to_ascii
001096 C9                  A   948    				ret
                           A   949    			
                           A   950    			
                           A   951    
001097                     A   952    ext_hexbyte_to_ascii
                           A   953    
001097 CC E4 15 00         A   954    				call z,mbase_hl
00109B 7B                  A   955    				ld a,e
                           A   956    
00109C                     A   957    hexbyte_to_ascii
                           A   958    
00109C C5                  A   959    				push bc
00109D 47                  A   960    				ld b,a							00109E CB3F                A   961    				srl a							0010A0 CB3F                A   962    				srl a
0010A2 CB3F                A   963    				srl a
0010A4 CB3F                A   964    				srl a
0010A6 CD B8 10 00         A   965    				call hxdigconv
0010AA 77                  A   966    				ld (hl),a
0010AB 23                  A   967    				inc hl
0010AC 78                  A   968    				ld a,b
0010AD E60F                A   969    				and 0fh
0010AF CD B8 10 00         A   970    				call hxdigconv
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  22


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0010B3 77                  A   971    				ld (hl),a
0010B4 23                  A   972    				inc hl
0010B5 C1                  A   973    				pop bc
0010B6 AF                  A   974    				xor a							0010B7 C9                  A   975    				ret
                           A   976    				
0010B8 C630                A   977    hxdigconv		add a,030h
0010BA FE3A                A   978    				cp 03ah
0010BC 38 02               A   979    				jr c,hxdone
0010BE C607                A   980    				add a,7
0010C0 C9                  A   981    hxdone			ret
                           A   982    
                           A   983    
                           A   984    
                           A   985    
0010C1                     A   986    hexword_to_ascii	
                           A   987    
0010C1 7A                  A   988    				ld a,d							0010C2 CD 9C 10 00         A   989    				call hexbyte_to_ascii
0010C6 7B                  A   990    				ld a,e
0010C7 CD 9C 10 00         A   991    				call hexbyte_to_ascii
0010CB C9                  A   992    				ret
                           A   993    	
                           A   994    
                           A   995    
                           A   996    
0010CC                     A   997    ext_ascii_to_hexword
                           A   998    		
0010CC CC E4 15 00         A   999    				call z,mbase_hl
                           A  1000    
0010D0                     A  1001    ascii_to_hexword
                           A  1002    	
0010D0 CD EF 0F 00         A  1003    				call os_scan_for_non_space		0010D4 B7                  A  1004    				or a
0010D5 20 04               A  1005    				jr nz,ascii_to_hex_no_scan
0010D7 3E81                A  1006    				ld a,081h						0010D9 B7                  A  1007    				or a
0010DA C9                  A  1008    				ret	
                           A  1009    
                           A  1010    	
0010DB                     A  1011    ascii_to_hex_no_scan
                           A  1012    
0010DB DDE5                A  1013    				push ix
0010DD C5                  A  1014    				push bc
0010DE DD210000 00         A  1015    				ld ix,0
0010E3 0606                A  1016    				ld b,6							0010E5 CD 11 11 00         A  1017    athlp			call ascii_to_hex_digit
0010E9 FEF0                A  1018    				cp 0f0h							0010EB 28 17               A  1019    				jr z,athend
0010ED FED0                A  1020    				cp 0d0h
0010EF 28 13               A  1021    				jr z,athend						0010F1 FE10                A  1022    				cp 16
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  23


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0010F3 30 17               A  1023    				jr nc,badhex					0010F5 DD29                A  1024    				add ix,ix						0010F7 DD29                A  1025    				add ix,ix
0010F9 DD29                A  1026    				add ix,ix
0010FB DD29                A  1027    				add ix,ix
0010FD DDB5                A  1028    				or a,ixl
0010FF DD6F                A  1029    				ld ixl,a
001101 23                  A  1030    				inc hl
001102 10 E1               A  1031    				djnz athlp
001104 DDE5                A  1032    athend			push ix
001106 D1                  A  1033    				pop de
001107 AF                  A  1034    				xor a
001108 C1                  A  1035    ath_quit		pop bc
001109 DDE1                A  1036    				pop ix							00110B C9                  A  1037    				ret
                           A  1038    		
00110C 3E82                A  1039    badhex			ld a,82h						00110E B7                  A  1040    				or a
00110F 18 F7               A  1041    				jr ath_quit
                           A  1042    				
                           A  1043    	
                           A  1044    		
001111                     A  1045    ascii_to_hex_digit
                           A  1046    
001111 7E                  A  1047    				ld a,(hl)						001112 FE61                A  1048    				cp 061h
001114 38 02               A  1049    				jr c,hc_uppercase
001116 D620                A  1050    				sub 020h						001118 D63A                A  1051    hc_uppercase	sub 03ah						00111A 38 02               A  1052    				jr c,zeronine
00111C C6F9                A  1053    				add a,0f9h
00111E C60A                A  1054    zeronine		add a,0ah
001120 C9                  A  1055    				ret
                           A  1056    
                           A  1057    
                           A  1058    ;--------- Text Input / Non-numeric string func
                           A  1059    
                           A  1060    ; Waits for user to enter a string of character
                           A  1061    ; Before calling, set:  HL = destination of str
                           A  1062    ;                        E = max number of char
                           A  1063    ; Returns:   A  = number of characters in enter
                           A  1064    
                           A  1065    
001121                     A  1066    ext_user_input
001121 CC E4 15 00         A  1067    				call z,mbase_hl
                           A  1068    				
001125                     A  1069    os_user_input
001125 AF                  A  1070    				xor a
001126 32 49 5F 00         A  1071    				ld (ui_index),a
00112A 22 4B 5F 00         A  1072    				ld (ui_string_addr),hl
00112E 7B                  A  1073    				ld a,e
00112F 32 4A 5F 00         A  1074    				ld (ui_maxchars),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  24


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1075    				
001133 3A 76 5F 00         A  1076    				ld a,(overwrite_mode)
001137 32 CF 61 00         A  1077    				ld (ui_im_cache),a
00113B AF                  A  1078    				xor a
00113C 32 76 5F 00         A  1079    				ld (overwrite_mode),a			                           A  1080    				
001140 CD 4F 3F 00         A  1081    ui_loop			call hwsc_draw_cursor			001144 CD 01 44 00         A  1082    				call os_wait_key_press			001148 32 E7 62 00         A  1083    				ld (current_scancode),a
00114C 78                  A  1084    				ld a,b
00114D 32 E8 62 00         A  1085    				ld (current_asciicode),a		001151 CD 35 3F 00         A  1086    				call hwsc_remove_cursor
                           A  1087    	
001155 3A E7 62 00         A  1088    				ld a,(current_scancode)
001159 FE66                A  1089    				cp 066h							00115B 20 1F               A  1090    				jr nz,os_nuibs
00115D 3A 49 5F 00         A  1091    				ld a,(ui_index)
001161 B7                  A  1092    				or a
001162 28 DC               A  1093    				jr z,ui_loop					001164 21 B3 61 00         A  1094    				ld hl,cursor_x					001168 35                  A  1095    				dec (hl)						001169 46                  A  1096    os_uixok		ld b,(hl)		
00116A 3A B2 61 00         A  1097    				ld a,(cursor_y)
00116E 4F                  A  1098    				ld c,a
00116F 3E20                A  1099    				ld a,32
001171 CD FC 3E 00         A  1100    				call hwsc_plot_char
001175 21 49 5F 00         A  1101    				ld hl,ui_index
001179 35                  A  1102    				dec (hl)						00117A 18 C4               A  1103    				jr ui_loop
                           A  1104    
00117C FE76                A  1105    os_nuibs		cp 076h							00117E 28 6B               A  1106    				jr z,ui_aborted
001180 FE5A                A  1107    				cp 05ah							001182 28 46               A  1108    				jr z,ui_enter_pressed
                           A  1109    	
001184 3A 49 5F 00         A  1110    				ld a,(ui_index)					001188 21 4A 5F 00         A  1111    				ld hl,ui_maxchars
00118C BE                  A  1112    				cp (hl)
00118D 28 B1               A  1113    				jr z,ui_loop	
                           A  1114    
00118F 3A E8 62 00         A  1115    				ld a,(current_asciicode)		001193 FE20                A  1116    				cp 32							001195 38 A9               A  1117    				jr c,ui_loop					                           A  1118    
001197 57                  A  1119    ui_gtcha		ld d,a
001198 2A 4B 5F 00         A  1120    				ld hl,(ui_string_addr)
00119C 3A 49 5F 00         A  1121    				ld a,(ui_index)
0011A0 01000000            A  1122    				ld bc,0
0011A4 4F                  A  1123    				ld c,a
0011A5 09                  A  1124    				add hl,bc
0011A6 72                  A  1125    				ld (hl),d						0011A7 3C                  A  1126    				inc a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  25


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0011A8 32 49 5F 00         A  1127    				ld (ui_index),a					                           A  1128    				
0011AC ED4B B2 61 00       A  1129    				ld bc,(cursor_y)				0011B1 7A                  A  1130    				ld a,d
0011B2 CD FC 3E 00         A  1131    				call hwsc_plot_char		
0011B6 21 B3 61 00         A  1132    				ld hl,cursor_x					0011BA 34                  A  1133    				inc (hl)
0011BB 3A 7C 5F 00         A  1134    				ld a,(charmap_columns)			0011BF BE                  A  1135    				cp (hl)
0011C0 C2 40 11 00         A  1136    				jp nz,ui_loop
0011C4 3600                A  1137    				ld (hl),0
0011C6 C3 40 11 00         A  1138    				jp ui_loop
                           A  1139    
0011CA                     A  1140    ui_enter_pressed
                           A  1141    				
0011CA 3A CF 61 00         A  1142    				ld a,(ui_im_cache)				0011CE 32 76 5F 00         A  1143    				ld (overwrite_mode),a
0011D2 3A 49 5F 00         A  1144    				ld a,(ui_index)					0011D6 B7                  A  1145    				or a
0011D7 20 04               A  1146    				jr nz,ui_data
0011D9 3E81                A  1147    				ld a,081h						0011DB B7                  A  1148    				or a
0011DC C9                  A  1149    				ret
0011DD 2A 4B 5F 00         A  1150    ui_data			ld hl,(ui_string_addr)
0011E1 11000000            A  1151    				ld de,0
0011E5 5F                  A  1152    				ld e,a
0011E6 19                  A  1153    				add hl,de
0011E7 3600                A  1154    				ld (hl),0						0011E9 BF                  A  1155    				cp a							0011EA C9                  A  1156    				ret
                           A  1157    
0011EB 3A CF 61 00         A  1158    ui_aborted		ld a,(ui_im_cache)				0011EF 32 76 5F 00         A  1159    				ld (overwrite_mode),a
0011F3 3E80                A  1160    				ld a,080h						0011F5 B7                  A  1161    				or a							0011F6 C9                  A  1162    				ret
                           A  1163    		
                           A  1164    ;----------------------------------------------
                           A  1165    	
0011F7                     A  1166    os_count_lines
                           A  1167    
0011F7 E5                  A  1168    				push hl							0011F8 0679                A  1169    				ld b,'y'						0011FA 21 B7 61 00         A  1170    				ld hl,os_linecount			
0011FE 34                  A  1171    				inc (hl)						0011FF 3A 79 5F 00         A  1172    				ld a,(charmap_rows)
001203 D604                A  1173    				sub 4
001205 BE                  A  1174    				cp (hl)
001206 20 0E               A  1175    				jr nz,os_nntpo
001208 3600                A  1176    				ld (hl),0
00120A 21 F2 56 00         A  1177    				ld hl,os_more_txt
00120E CD 51 0F 00         A  1178    				call os_print_string
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  26


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001212 CD 01 44 00         A  1179    				call os_wait_key_press	
001216 E1                  A  1180    os_nntpo		pop hl
001217 C9                  A  1181    				ret
                           A  1182    
                           A  1183    ;----------------------------------------------
                           A  1184    
001218                     A  1185    ext_compare_strings
                           A  1186    	
001218 CC E4 15 00         A  1187    				call z,mbase_hl
00121C CC F5 15 00         A  1188    				call z,mbase_de
                           A  1189    				
001220                     A  1190    os_compare_strings
                           A  1191    
                           A  1192    ; both strings at HL/DE should be zero terminat
                           A  1193    ; compare will fail if string lengths are diffe
                           A  1194    ; unless count (B) is reached first
                           A  1195    ; Case is ignored
                           A  1196    ; Zero flag set on return if same
                           A  1197    
001220 E5                  A  1198    				push hl							001221 D5                  A  1199    				push de							001222 1A                  A  1200    ocslp			ld a,(de)						001223 B7                  A  1201    				or a
001224 28 0C               A  1202    				jr z,ocsbt
001226 CD 63 12 00         A  1203    				call case_insensitive_compare	00122A 20 0E               A  1204    				jr nz,ocs_diff
00122C 13                  A  1205    				inc de
00122D 23                  A  1206    				inc hl
00122E 10 F2               A  1207    				djnz ocslp
001230 18 04               A  1208    				jr ocs_same
001232 1A                  A  1209    ocsbt			ld a,(de)						001233 B6                  A  1210    				or (hl)
001234 20 04               A  1211    				jr nz,ocs_diff
001236 D1                  A  1212    ocs_same		pop de
001237 E1                  A  1213    				pop hl
001238 AF                  A  1214    				xor a							001239 C9                  A  1215    				ret
00123A D1                  A  1216    ocs_diff		pop de
00123B E1                  A  1217    				pop hl
00123C AF                  A  1218    				xor a							00123D 3C                  A  1219    				inc a
00123E C9                  A  1220    				ret
                           A  1221    
                           A  1222    
                           A  1223    ;----------------------------------------------
                           A  1224    
00123F                     A  1225    os_copy_ascii_run
                           A  1226    
                           A  1227    ;INPUT HL = source ($00 or $20 terminates)
                           A  1228    ;      DE = dest
                           A  1229    ;       b = max chars
                           A  1230    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  27


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1231    ;OUTPUT HL/DE = end of runs
                           A  1232    ;           c = char count
                           A  1233    	
00123F 0E00                A  1234    				ld c,0
001241 7E                  A  1235    cpyar_lp		ld a,(hl)
001242 B7                  A  1236    				or a
001243 C8                  A  1237    				ret z
001244 FE20                A  1238    				cp 32
001246 C8                  A  1239    				ret z
001247 12                  A  1240    				ld (de),a
001248 23                  A  1241    				inc hl
001249 13                  A  1242    				inc de
00124A 0C                  A  1243    				inc c
00124B 10 F4               A  1244    				djnz cpyar_lp
00124D C9                  A  1245    				ret
                           A  1246    
                           A  1247    ;----------------------------------------------
                           A  1248    
00124E                     A  1249    uppercasify_string
                           A  1250    
                           A  1251    ; Set HL to string location ($00 quits)
                           A  1252    ; Set B to max number of chars
                           A  1253    
00124E 7E                  A  1254    				ld a,(hl)
00124F B7                  A  1255    				or a
001250 C8                  A  1256    				ret z
001251 CD 5A 12 00         A  1257    				call os_uppercasify
001255 77                  A  1258    				ld (hl),a
001256 23                  A  1259    				inc hl
001257 10 F5               A  1260    				djnz uppercasify_string	
001259 C9                  A  1261    				ret
                           A  1262    	
                           A  1263    
00125A                     A  1264    os_uppercasify
                           A  1265    
                           A  1266    ; INPUT/OUTPUT A = ascii char to make uppercase
                           A  1267    
00125A FE61                A  1268    				cp 061h			
00125C D8                  A  1269    				ret c
00125D FE7B                A  1270    				cp 07bh
00125F D0                  A  1271    				ret nc
001260 D620                A  1272    				sub 020h				
001262 C9                  A  1273    				ret
                           A  1274    
                           A  1275    ;----------------------------------------------
                           A  1276    
001263                     A  1277    case_insensitive_compare
                           A  1278    
                           A  1279    ; compares A with (HL) disregarding the case of
                           A  1280    ; Zero flag set if the characters are the same
                           A  1281    ; all registers are preserved.
                           A  1282    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  28


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001263 C5                  A  1283    				push bc					
001264 4F                  A  1284    				ld c,a
                           A  1285    
001265 CD 5A 12 00         A  1286    				call os_uppercasify				001269 47                  A  1287    				ld b,a
00126A 7E                  A  1288    				ld a,(hl)
00126B CD 5A 12 00         A  1289    				call os_uppercasify
00126F B8                  A  1290    				cp b
                           A  1291    
001270 79                  A  1292    				ld a,c
001271 C1                  A  1293    				pop bc
001272 C9                  A  1294    				ret
                           A  1295    
                           A  1296    ;----------------------------------------------
                           A  1297    
001273                     A  1298    os_decimal_add
                           A  1299    
                           A  1300    ;INPUT HL = source LSB, DE = dest LSB, b = numb
                           A  1301    
001273 C5                  A  1302    				push bc
001274 0E00                A  1303    				ld c,0
001276 1A                  A  1304    decdlp			ld a,(de)
001277 86                  A  1305    				add a,(hl)
001278 81                  A  1306    				add a,c
001279 FE0A                A  1307    				cp 10
00127B 38 0B               A  1308    				jr c,daddnc
00127D D60A                A  1309    				sub 10
00127F 0E01                A  1310    				ld c,1
001281 12                  A  1311    decnclp			ld (de),a
001282 23                  A  1312    				inc hl
001283 13                  A  1313    				inc de
001284 10 F0               A  1314    				djnz decdlp
001286 C1                  A  1315    				pop bc
001287 C9                  A  1316    				ret
001288 0E00                A  1317    daddnc			ld c,0
00128A 18 F5               A  1318    				jr decnclp
                           A  1319    	
                           A  1320    ;----------------------------------------------
                           A  1321    
00128C                     A  1322    os_hex_to_decimal
                           A  1323    
                           A  1324    ; INPUT xDE hex longword
                           A  1325    ; OUTPUT xHL = decimal LSB address (8 digits) 
                           A  1326    
       00006902            A  1327    hex_to_convert		equ scratch_pad
       00006905            A  1328    decimal_digits		equ scratch_pad+3
       0000690D            A  1329    decimal_add_digits	equ scratch_pad+3+8
                           A  1330    
00128C ED53 02 69 00       A  1331    				ld (hex_to_convert),de
                           A  1332    		
001291 21 0D 69 00         A  1333    				ld hl,decimal_add_digits
001295 E5                  A  1334    				push hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  29


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001296 11 05 69 00         A  1335    				ld de,decimal_digits
00129A AF                  A  1336    				xor a
00129B 0608                A  1337    				ld b,8
00129D 12                  A  1338    setupdec		ld (de),a
00129E 77                  A  1339    				ld (hl),a
00129F 23                  A  1340    				inc hl
0012A0 13                  A  1341    				inc de
0012A1 10 FA               A  1342    				djnz setupdec
0012A3 E1                  A  1343    				pop hl
0012A4 3601                A  1344    				ld (hl),1
                           A  1345    	
0012A6 21 02 69 00         A  1346    				ld hl,hex_to_convert
0012AA 0603                A  1347    				ld b,3
0012AC C5                  A  1348    decconvlp		push bc
0012AD 7E                  A  1349    				ld a,(hl)
0012AE CD CC 12 00         A  1350    				call decadder
0012B2 CD E5 12 00         A  1351    				call decaddx16
0012B6 7E                  A  1352    				ld a,(hl)
0012B7 0F                  A  1353    				rrca
0012B8 0F                  A  1354    				rrca
0012B9 0F                  A  1355    				rrca
0012BA 0F                  A  1356    				rrca
0012BB CD CC 12 00         A  1357    				call decadder
0012BF CD E5 12 00         A  1358    				call decaddx16
0012C3 C1                  A  1359    				pop bc
0012C4 23                  A  1360    				inc hl
0012C5 10 E5               A  1361    				djnz decconvlp
0012C7 21 05 69 00         A  1362    				ld hl,decimal_digits
0012CB C9                  A  1363    				ret
                           A  1364    
                           A  1365    
                           A  1366    
0012CC E60F                A  1367    decadder		and 15
0012CE C8                  A  1368    				ret z
0012CF 47                  A  1369    				ld b,a
0012D0 E5                  A  1370    				push hl
0012D1 C5                  A  1371    daddlp			push bc
0012D2 11 05 69 00         A  1372    				ld de,decimal_digits
0012D6 21 0D 69 00         A  1373    				ld hl,decimal_add_digits
0012DA 0608                A  1374    				ld b,8
0012DC CD 73 12 00         A  1375    				call os_decimal_add
0012E0 C1                  A  1376    				pop bc
0012E1 10 EE               A  1377    				djnz daddlp	
0012E3 E1                  A  1378    				pop hl
0012E4 C9                  A  1379    				ret
                           A  1380    			
                           A  1381    				
0012E5 E5                  A  1382    decaddx16		push hl
0012E6 0604                A  1383    				ld b,4							0012E8 C5                  A  1384    x16loop			push bc
0012E9 11 0D 69 00         A  1385    				ld de,decimal_add_digits
0012ED 21 0D 69 00         A  1386    				ld hl,decimal_add_digits
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  30


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0012F1 0608                A  1387    				ld b,8
0012F3 CD 73 12 00         A  1388    				call os_decimal_add
0012F7 C1                  A  1389    				pop bc
0012F8 10 EE               A  1390    				djnz x16loop	
0012FA E1                  A  1391    				pop hl
0012FB C9                  A  1392    				ret
                           A  1393    	
                           A  1394    	
                           A  1395    ;----------------------------------------------
                           A  1396    
0012FC                     A  1397    os_show_decimal
                           A  1398    
0012FC 11 22 62 00         A  1399    				ld de,output_line				001300 01090000            A  1400    				ld bc,9
001304 09                  A  1401    				add hl,bc
001305 060A                A  1402    				ld b,10
001307 7E                  A  1403    shdeclp			ld a,(hl)
001308 B7                  A  1404    				or a
001309 28 04               A  1405    				jr z,dnodigit
00130B C630                A  1406    				add a,030h
00130D 12                  A  1407    				ld (de),a
00130E 13                  A  1408    				inc de
00130F 2B                  A  1409    dnodigit		dec hl
001310 10 F5               A  1410    				djnz shdeclp
001312 AF                  A  1411    				xor a
001313 12                  A  1412    				ld (de),a
001314 CD 5C 13 00         A  1413    				call os_print_output_line
001318 C9                  A  1414    				ret
                           A  1415    				
                           A  1416    ;----------------------------------------------
                           A  1417    		
001319                     A  1418    os_copy_to_output_line
                           A  1419    	
001319 D5                  A  1420    				push de
00131A C5                  A  1421    				push bc
00131B 11 22 62 00         A  1422    				ld de,output_line				00131F 01510000            A  1423    				ld bc,max_buffer_chars+1		001323 EDA0                A  1424    os_cloll		ldi
001325 7E                  A  1425    				ld a,(hl)
001326 B7                  A  1426    				or a
001327 28 04               A  1427    				jr z,os_clold
001329 78                  A  1428    				ld a,b
00132A B1                  A  1429    				or c
00132B 20 F6               A  1430    				jr nz,os_cloll
00132D 12                  A  1431    os_clold		ld (de),a
00132E C1                  A  1432    				pop bc
00132F D1                  A  1433    				pop de
001330 C9                  A  1434    				ret
                           A  1435    
                           A  1436    
                           A  1437    ;----------------------------------------------
                           A  1438    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  31


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001331                     A  1439    os_show_hex_address
                           A  1440    
001331 E5                  A  1441    				push hl							001332 21 22 62 00         A  1442    				ld hl,output_line
001336 ED53 C4 61 00       A  1443    				ld (hex_address),de
00133B 3A C6 61 00         A  1444    				ld a,(hex_address+2)
00133F CD 9C 10 00         A  1445    				call hexbyte_to_ascii
001343 18 10               A  1446    				jr shw_nt
                           A  1447    				
                           A  1448    
001345                     A  1449    os_show_hex_byte
                           A  1450    
001345 E5                  A  1451    				push hl							001346 21 22 62 00         A  1452    				ld hl,output_line
00134A CD 9C 10 00         A  1453    				call hexbyte_to_ascii
00134E 18 09               A  1454    				jr shb_nt
                           A  1455    
                           A  1456    
                           A  1457    
001350                     A  1458    os_show_hex_word
                           A  1459    
001350 E5                  A  1460    				push hl							001351 21 22 62 00         A  1461    				ld hl,output_line
001355 CD C1 10 00         A  1462    shw_nt			call hexword_to_ascii
001359 3600                A  1463    shb_nt			ld (hl),0
00135B E1                  A  1464    				pop hl
                           A  1465    
                           A  1466    	
                           A  1467    
00135C                     A  1468    os_print_output_line
                           A  1469    
00135C E5                  A  1470    				push hl
00135D 21 22 62 00         A  1471    				ld hl,output_line
001361 CD 51 0F 00         A  1472    cproline		call os_print_string
001365 E1                  A  1473    				pop hl
001366 C9                  A  1474    				ret
                           A  1475    
                           A  1476    
                           A  1477    
001367                     A  1478    os_print_output_line_skip_zeroes
                           A  1479    
001367 E5                  A  1480    				push hl
001368 21 22 62 00         A  1481    				ld hl,output_line
00136C CD 79 10 00         A  1482    				call os_skip_leading_ascii_zero
001370 18 EF               A  1483    				jr cproline
                           A  1484    				
                           A  1485    		
                           A  1486    ;----------------------------------------------
                           A  1487    
001372                     A  1488    os_store_CPU_regs
                           A  1489    
001372 F3                  A  1490    				di								Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  32


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1491    
001373 33                  A  1492    				inc sp							001374 33                  A  1493    				inc sp
001375 33                  A  1494    				inc sp
001376 ED73 40 61 00       A  1495    				ld (store_spl),sp
00137B 3B                  A  1496    				dec sp							00137C 3B                  A  1497    				dec sp
00137D 3B                  A  1498    				dec sp
                           A  1499    				
00137E F5                  A  1500    				push af
00137F 32 23 61 00         A  1501    				ld (store_a1),a					001383 08                  A  1502    				ex af,af'
001384 32 2D 61 00         A  1503    				ld (store_a2),a
001388 08                  A  1504    				ex af,af'
001389 ED43 24 61 00       A  1505    				ld (store_bc1),bc		
00138E ED53 27 61 00       A  1506    				ld (store_de1),de
001393 22 2A 61 00         A  1507    				ld (store_hl1),hl
001397 D9                  A  1508    				exx
001398 ED43 2E 61 00       A  1509    				ld (store_bc2),bc
00139D ED53 31 61 00       A  1510    				ld (store_de2),de
0013A2 22 34 61 00         A  1511    				ld (store_hl2),hl
0013A6 D9                  A  1512    				exx
0013A7 DD22 37 61 00       A  1513    				ld (store_ix),ix
0013AC FD22 3A 61 00       A  1514    				ld (store_iy),iy
                           A  1515    				
0013B1 ED6E                A  1516    			    ld a,MB
0013B3 32 45 61 00         A  1517    				ld (store_mbase),a
                           A  1518    								
0013B7 C5                  A  1519    				push bc
0013B8 0600                A  1520    				ld b,0
0013BA 20 02               A  1521    				jr nz,zfstzero					0013BC CBF0                A  1522    				set 6,b
                           A  1523    
0013BE 30 02               A  1524    zfstzero		jr nc,cfstzero					0013C0 CBC0                A  1525    				set 0,b
                           A  1526    
0013C2 F2 C8 13 00         A  1527    cfstzero		jp p,sfstzero					0013C6 CBF8                A  1528    				set 7,b
                           A  1529    
0013C8 EA CE 13 00         A  1530    sfstzero		jp pe,pfstzero					0013CC CBD0                A  1531    				set 2,b
                           A  1532    
0013CE ED57                A  1533    pfstzero		ld a,i			
0013D0 EA D6 13 00         A  1534    				jp pe,ifstzero					0013D4 CBE0                A  1535    				set 4,b
                           A  1536    
0013D6 78                  A  1537    ifstzero		ld a,b
0013D7 32 46 61 00         A  1538    				ld (store_f),a
                           A  1539    				
0013DB 3E00                A  1540    				ld a,os_location/65536			0013DD ED6D                A  1541    				ld MB,a							0013DF 40ED73 43 61        A  1542    				ld.sis (store_sps),sp
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  33


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0013E4 3A 45 61 00         A  1543    				ld a,(store_mbase)				0013E8 ED6D                A  1544    				ld MB,a
                           A  1545    				
0013EA C1                  A  1546    				pop bc
0013EB F1                  A  1547    				pop af
0013EC FB                  A  1548    				ei
0013ED C9                  A  1549    				ret
                           A  1550    
                           A  1551    
                           A  1552    
0013EE                     A  1553    os_dont_store_registers
                           A  1554    
0013EE AF                  A  1555    				xor a
0013EF 32 4B 61 00         A  1556    				ld (store_registers),a			0013F3 C9                  A  1557    				ret
                           A  1558    	
                           A  1559    	
                           A  1560    ;----------------------------------------------
                           A  1561    
0013F4                     A  1562    os_new_line_cond
                           A  1563    
0013F4 CD 4E 1A 00         A  1564    				call test_quiet_mode
0013F8 C0                  A  1565    				ret nz
                           A  1566    
                           A  1567    	
0013F9                     A  1568    os_new_line
                           A  1569    
0013F9 E5                  A  1570    				push hl
0013FA 21 0A 57 00         A  1571    				ld hl,crlfx2_txt+1
0013FE CD 51 0F 00         A  1572    				call os_print_string
001402 E1                  A  1573    				pop hl
001403 C9                  A  1574    				ret
                           A  1575    				
                           A  1576    ;----------------------------------------------
                           A  1577    
001404                     A  1578    os_set_cursor_position
                           A  1579    				
                           A  1580    												001404 3A 79 5F 00         A  1581    				ld a,(charmap_rows)				001408 3D                  A  1582    				dec a							001409 B9                  A  1583    				cp c
00140A 38 14               A  1584    				jr c,badpos
00140C 79                  A  1585    				ld a,c
00140D 32 B2 61 00         A  1586    				ld (cursor_y),a
                           A  1587    				
001411 3A 7C 5F 00         A  1588    				ld a,(charmap_columns)
001415 3D                  A  1589    				dec a
001416 B8                  A  1590    				cp b
001417 38 07               A  1591    				jr c,badpos
001419 78                  A  1592    				ld a,b
00141A 32 B3 61 00         A  1593    				ld (cursor_x),a
00141E AF                  A  1594    				xor a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  34


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00141F C9                  A  1595    				ret				
                           A  1596    
001420 3E88                A  1597    badpos			ld a,88h						001422 B7                  A  1598    				or a
001423 C9                  A  1599    				ret
                           A  1600    
                           A  1601    
                           A  1602    					
                           A  1603    	
                           A  1604    	
001424                     A  1605    os_get_cursor_position
                           A  1606    
001424 ED4B B2 61 00       A  1607    				ld bc,(cursor_pos)				001429 BF                  A  1608    				cp a							00142A C9                  A  1609    				ret
                           A  1610    
                           A  1611    
                           A  1612    ;----------------------------------------------
                           A  1613    
00142B                     A  1614    os_show_packed_text_cond
                           A  1615    
00142B CD 4E 1A 00         A  1616    				call test_quiet_mode
00142F C0                  A  1617    				ret nz
                           A  1618    
                           A  1619    	
001430                     A  1620    os_show_packed_text
                           A  1621    
                           A  1622    ; Construct sentence from internal dictionary u
                           A  1623    	
001430 C5                  A  1624    				push bc
001431 D5                  A  1625    				push de
001432 DDE5                A  1626    				push ix
001434 DD21 22 62 00       A  1627    				ld ix,output_line
001439 7E                  A  1628    readpind		ld a,(hl)
00143A B7                  A  1629    				or a
00143B 20 10               A  1630    				jr nz,getword					00143D DD2B                A  1631    				dec ix							00143F DD7700              A  1632    				ld (ix),a						                           A  1633    			
001442 E5                  A  1634    				push hl
001443 CD 5C 13 00         A  1635    				call os_print_output_line
001447 E1                  A  1636    				pop hl
                           A  1637    			
001448 DDE1                A  1638    				pop ix
00144A D1                  A  1639    				pop de
00144B C1                  A  1640    				pop bc
00144C C9                  A  1641    				ret
                           A  1642    				
00144D 11 39 57 00         A  1643    getword			ld de,dictionary-1
001451 0E00                A  1644    				ld c,0
001453 13                  A  1645    dictloop		inc de
001454 1A                  A  1646    				ld a,(de)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  35


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001455 B7                  A  1647    				or a							001456 28 04               A  1648    				jr z,faword
001458 CB7F                A  1649    				bit 7,a							00145A 28 F7               A  1650    				jr z,dictloop	
                           A  1651    			
00145C 0C                  A  1652    faword			inc c							00145D 79                  A  1653    				ld a,c
00145E BE                  A  1654    				cp (hl)
00145F 20 F2               A  1655    				jr nz,dictloop
001461 13                  A  1656    copytol			inc de							001462 1A                  A  1657    				ld a,(de)
001463 B7                  A  1658    				or a
001464 28 0B               A  1659    				jr z,eoword						001466 CB7F                A  1660    				bit 7,a
001468 20 07               A  1661    				jr nz,eoword
00146A DD7700              A  1662    				ld (ix),a						00146D DD23                A  1663    				inc ix
00146F 18 F0               A  1664    				jr copytol
001471 DD360020            A  1665    eoword			ld (ix),32						001475 DD23                A  1666    				inc ix
001477 23                  A  1667    				inc hl
001478 18 BF               A  1668    				jr readpind
                           A  1669    
                           A  1670    
                           A  1671    		
                           A  1672    ;--------- Mouse functions --------------------
                           A  1673    
00147A                     A  1674    os_set_mouse_window
                           A  1675    
                           A  1676    ; Set: HL/DE = window size mouse pointer is to 
                           A  1677    	
00147A 22 F9 62 00         A  1678    				ld (mouse_window_size_x),hl	 
00147E ED53 FC 62 00       A  1679    				ld (mouse_window_size_y),de
001483 21000000            A  1680    				ld hl,0
001487 22 FF 62 00         A  1681    				ld (mouse_abs_x),hl
00148B 22 02 63 00         A  1682    				ld (mouse_abs_y),hl
00148F 3E01                A  1683    				ld a,1
001491 32 11 63 00         A  1684    				ld (mouse_new_window),a
001495 AF                  A  1685    				xor a
001496 C9                  A  1686    				ret
                           A  1687    				
                           A  1688    			
001497                     A  1689    os_get_mouse_motion
                           A  1690    			
                           A  1691    ; Returns: ZF = Set: Relative X coord in HL, Re
                           A  1692    ;          ZF = Not set: Mouse driver not initi
                           A  1693    			
001497 3A 16 61 00         A  1694    				ld a,(devices_connected)
00149B E602                A  1695    				and 2
00149D EE02                A  1696    				xor 2
00149F C0                  A  1697    				ret nz
0014A0 AF                  A  1698    ms_reread		xor a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  36


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0014A1 32 F8 62 00         A  1699    				ld (mouse_updated),a
0014A5 2A F1 62 00         A  1700    				ld hl,(mouse_disp_x)			0014A9 ED5B F4 62 00       A  1701    				ld de,(mouse_disp_y)
0014AE 3A F8 62 00         A  1702    				ld a,(mouse_updated)			0014B2 B7                  A  1703    				or a
0014B3 20 EB               A  1704    				jr nz,ms_reread
0014B5 AF                  A  1705    mouse_end		xor a
0014B6 3A F7 62 00         A  1706    				ld a,(mouse_wheel)
0014BA 47                  A  1707    				ld b,a
0014BB 3A F0 62 00         A  1708    				ld a,(mouse_buttons)
0014BF C9                  A  1709    				ret
                           A  1710    			
                           A  1711    			
0014C0                     A  1712    os_get_mouse_position
                           A  1713    
                           A  1714    ; Returns: ZF = Set: Abolute X coord in HL, Abs
                           A  1715    ;          ZF = Not set: Mouse driver not initi
                           A  1716    				
0014C0 CD 97 14 00         A  1717    				call os_get_mouse_motion
0014C4 C0                  A  1718    				ret nz
0014C5 22 0B 63 00         A  1719    				ld (mouse_disp_x_buffer),hl
0014C9 ED53 0E 63 00       A  1720    				ld (mouse_disp_y_buffer),de
0014CE 3A 11 63 00         A  1721    				ld a,(mouse_new_window)
0014D2 B7                  A  1722    				or a
0014D3 20 6C               A  1723    				jr nz,ms_nmw
                           A  1724    
0014D5 ED5B 05 63 00       A  1725    				ld de,(mouse_disp_x_old)
0014DA AF                  A  1726    				xor a
0014DB ED52                A  1727    				sbc hl,de
0014DD EB                  A  1728    				ex de,hl
0014DE 2A FF 62 00         A  1729    				ld hl,(mouse_abs_x)
0014E2 19                  A  1730    				add hl,de
0014E3 E5                  A  1731    				push hl
0014E4 C1                  A  1732    				pop bc
0014E5 DD210000 80         A  1733    				ld ix,800000h					0014EA DD09                A  1734    				add ix,bc
0014EC 30 06               A  1735    				jr nc,ms_x_ok1
0014EE 01000000            A  1736    				ld bc,0
0014F2 18 10               A  1737    				jr ms_x_ok2
0014F4 ED5B F9 62 00       A  1738    ms_x_ok1		ld de,(mouse_window_size_x)
0014F9 AF                  A  1739    				xor a
0014FA ED52                A  1740    				sbc hl,de
0014FC 38 06               A  1741    				jr c,ms_x_ok2
0014FE ED4B F9 62 00       A  1742    				ld bc,(mouse_window_size_x)		001503 0B                  A  1743    				dec bc
001504 ED43 FF 62 00       A  1744    ms_x_ok2		ld (mouse_abs_x),bc
                           A  1745    					
001509 2A 0E 63 00         A  1746    				ld hl,(mouse_disp_y_buffer)
00150D ED5B 08 63 00       A  1747    				ld de,(mouse_disp_y_old)
001512 AF                  A  1748    				xor a
001513 ED52                A  1749    				sbc hl,de
001515 EB                  A  1750    				ex de,hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  37


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001516 2A 02 63 00         A  1751    				ld hl,(mouse_abs_y)
00151A 19                  A  1752    				add hl,de
00151B E5                  A  1753    				push hl
00151C C1                  A  1754    				pop bc
00151D DD210000 80         A  1755    				ld ix,800000h					001522 DD09                A  1756    				add ix,bc
001524 30 06               A  1757    				jr nc,ms_y_ok1
001526 01000000            A  1758    				ld bc,0
00152A 18 10               A  1759    				jr ms_y_ok2
00152C ED5B FC 62 00       A  1760    ms_y_ok1		ld de,(mouse_window_size_y)
001531 AF                  A  1761    				xor a
001532 ED52                A  1762    				sbc hl,de
001534 38 06               A  1763    				jr c,ms_y_ok2
001536 ED4B FC 62 00       A  1764    				ld bc,(mouse_window_size_y)		00153B 0B                  A  1765    				dec bc
00153C ED43 02 63 00       A  1766    ms_y_ok2		ld (mouse_abs_y),bc
                           A  1767    
                           A  1768    				
001541 2A 0B 63 00         A  1769    ms_nmw			ld hl,(mouse_disp_x_buffer)
001545 22 05 63 00         A  1770    				ld (mouse_disp_x_old),hl
001549 2A 0E 63 00         A  1771    				ld hl,(mouse_disp_y_buffer)
00154D 22 08 63 00         A  1772    				ld (mouse_disp_y_old),hl
                           A  1773    				
001551 2A FF 62 00         A  1774    				ld hl,(mouse_abs_x)
001555 ED5B 02 63 00       A  1775    				ld de,(mouse_abs_y)
                           A  1776    				
00155A AF                  A  1777    				xor a
00155B 32 11 63 00         A  1778    				ld (mouse_new_window),a
00155F C3 B5 14 00         A  1779    				jp mouse_end
                           A  1780    				
                           A  1781    	
                           A  1782    ;==============================================
                           A  1783    ;----- General Subroutines --------------------
                           A  1784    ;==============================================
                           A  1785    
                           A  1786    ; .--------------.
                           A  1787    ; ! CRC Checksum !
                           A  1788    ; '--------------'
                           A  1789    
                           A  1790    ; makes 16 bit checksum in HL, src addr = DE, l
                           A  1791    
001563                     A  1792    crc_checksum
                           A  1793    
001563 21FFFF00            A  1794    				ld hl,0ffffh		
001567 1A                  A  1795    crcloop			ld a,(de)			
001568 AC                  A  1796    				xor h			
001569 67                  A  1797    				ld h,a			
00156A 0608                A  1798    				ld b,8
00156C 4029                A  1799    crcbyte			add.sis hl,hl					00156E 30 08               A  1800    				jr nc,crcnext
001570 7C                  A  1801    				ld a,h
001571 EE10                A  1802    				xor 10h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  38


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001573 67                  A  1803    				ld h,a
001574 7D                  A  1804    				ld a,l
001575 EE21                A  1805    				xor 21h
001577 6F                  A  1806    				ld l,a
001578 10 F2               A  1807    crcnext			djnz crcbyte
00157A 13                  A  1808    				inc de
00157B 0D                  A  1809    				dec c
00157C 20 E9               A  1810    				jr nz,crcloop
00157E C9                  A  1811    				ret
                           A  1812    
                           A  1813    
                           A  1814    ;----------------------------------------------
                           A  1815    
00157F                     A  1816    os_get_key_mod_flags
                           A  1817    
00157F 3A E6 62 00         A  1818    				ld a,(key_mod_flags)
001583 BF                  A  1819    				cp a							001584 C9                  A  1820    				ret
                           A  1821    
                           A  1822    ;----------------------------------------------
                           A  1823    
001585                     A  1824    os_get_vmode
                           A  1825    			
001585 3A 79 5F 00         A  1826    				ld a,(charmap_rows)
001589 4F                  A  1827    				ld c,a
00158A 3A 7C 5F 00         A  1828    				ld a,(charmap_columns)
00158E 47                  A  1829    				ld b,a
00158F 3A 4E 5F 00         A  1830    				ld a,(video_mode)
001593 BF                  A  1831    				cp a						; Z
001594 C9                  A  1832    				ret
                           A  1833    
                           A  1834    ;----------------------------------------------
                           A  1835    
001595 7B                  A  1836    ext_set_vmode	ld a,e
                           A  1837    
001596 FE04                A  1838    os_set_vmode	cp 4
001598 38 04               A  1839    				jr c,vm_range_ok
00159A 3E88                A  1840    				ld a,88h					;ou
00159C B7                  A  1841    				or a
00159D C9                  A  1842    				ret
                           A  1843    				
00159E 32 4E 5F 00         A  1844    vm_range_ok		ld (video_mode),a
0015A2 21030000            A  1845    				ld hl,3
0015A6 67                  A  1846    				ld h,a
0015A7 ED6C                A  1847    				mlt hl
0015A9 11 7F 5F 00         A  1848    				ld de,vmode_parameter_list
0015AD 19                  A  1849    				add hl,de
0015AE 7E                  A  1850    				ld a,(hl)
0015AF 23                  A  1851    				inc hl
0015B0 46                  A  1852    				ld b,(hl)
0015B1 23                  A  1853    				inc hl
0015B2 4E                  A  1854    				ld c,(hl)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  39


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0015B3 CD E9 3D 00         A  1855    				call set_charmap_parameters
                           A  1856    				
0015B7 CD 86 3E 00         A  1857    				call hwsc_clear_screen
                           A  1858    
0015BB AF                  A  1859    				xor a				
0015BC C9                  A  1860    				ret
                           A  1861    
                           A  1862    
                           A  1863    ;----------------------------------------------
                           A  1864    
0015BD                     A  1865    os_bchl_memfill
                           A  1866    
                           A  1867    ; fill memory from xHL with A. Count in xBC.
                           A  1868    		
0015BD 77                  A  1869    mf_loop			ld (hl),a
0015BE EDA1                A  1870    				cpi								0015C0 EA BD 15 00         A  1871    				jp pe,mf_loop
0015C4 C9                  A  1872    				ret
                           A  1873    	
                           A  1874    ;----------------------------------------------
                           A  1875    
0015C5 7B                  A  1876    ext_set_pen		ld a,e
                           A  1877    
0015C6 32 4F 5F 00         A  1878    os_set_pen		ld (current_pen),a
0015CA BF                  A  1879    				cp a							0015CB C9                  A  1880    				ret
                           A  1881    
                           A  1882    ;----------------------------------------------
                           A  1883    	
0015CC 3A 4F 5F 00         A  1884    os_get_pen		ld a,(current_pen)
0015D0 BF                  A  1885    				cp a							0015D1 C9                  A  1886    				ret	
                           A  1887    
                           A  1888    ;----------------------------------------------
                           A  1889    
0015D2                     A  1890    ext_background_colours
                           A  1891    				
0015D2 CC E4 15 00         A  1892    				call z,mbase_hl
0015D6 C3 7A 3E 00         A  1893    				jp hswc_set_ui_colours
                           A  1894    				
                           A  1895    				
                           A  1896    ;----------------------------------------------
                           A  1897    
0015DA                     A  1898    os_get_xde_msb	
                           A  1899    			
0015DA ED53 CA 61 00       A  1900    				ld (xrr_temp),de				0015DF 3A CC 61 00         A  1901    				ld a,(xrr_temp+2)
0015E3 C9                  A  1902    				ret
                           A  1903    
                           A  1904    ;----------------------------------------------
                           A  1905    
0015E4 F5                  A  1906    mbase_hl		push af
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  40


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0015E5 22 CA 61 00         A  1907    				ld (xrr_temp),hl				0015E9 ED6E                A  1908    				ld a,MB
0015EB 32 CC 61 00         A  1909    				ld (xrr_temp+2),a
0015EF 2A CA 61 00         A  1910    				ld hl,(xrr_temp)
0015F3 F1                  A  1911    				pop af
0015F4 C9                  A  1912    				ret
                           A  1913    				
0015F5 F5                  A  1914    mbase_de		push af
0015F6 ED53 CA 61 00       A  1915    				ld (xrr_temp),de				0015FB ED6E                A  1916    				ld a,MB
0015FD 32 CC 61 00         A  1917    				ld (xrr_temp+2),a
001601 ED5B CA 61 00       A  1918    				ld de,(xrr_temp)
001606 F1                  A  1919    				pop af
001607 C9                  A  1920    				ret
                           A  1921    
                           A  1922    
                           A  1923    ;----------------------------------------------
                           A  1924    ; Unpacks Phil's Z80P_RLE packed files - V1.02 
                           A  1925    ;----------------------------------------------
                           A  1926    
001608                     A  1927    unpack_rle
                           A  1928    
                           A  1929    ;set xHL = source address of packed file
                           A  1930    ;set xDE = destination address for unpacked dat
                           A  1931    ;set xBC = length of packed file
                           A  1932    
001608 E5                  A  1933    			push hl	
001609 DDE1                A  1934    			pop ix
00160B 0B                  A  1935    			dec bc								00160C 23                  A  1936    			inc hl
00160D DD7E00              A  1937    unp_gtok	ld a,(ix)							001610 BE                  A  1938    unp_next	cp (hl)								001611 28 07               A  1939    			jr z,unp_brun						001613 EDA0                A  1940    			ldi									001615 EA 10 16 00         A  1941    			jp pe,unp_next						001619 C9                  A  1942    			ret
                           A  1943    	
00161A C5                  A  1944    unp_brun	push bc								00161B 23                  A  1945    			inc hl		
00161C 7E                  A  1946    			ld a,(hl)							00161D 23                  A  1947    			inc hl		
00161E 46                  A  1948    			ld b,(hl)							00161F 23                  A  1949    			inc hl
                           A  1950    	
001620 12                  A  1951    unp_rllp	ld (de),a							001621 13                  A  1952    			inc de			
001622 10 FC               A  1953    			djnz unp_rllp
                           A  1954    	
001624 C1                  A  1955    			pop bc	
001625 0B                  A  1956    			dec bc								001626 0B                  A  1957    			dec bc
001627 0B                  A  1958    			dec bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  41


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001628 E5                  A  1959    			push hl								001629 21000000            A  1960    			ld hl,0
00162D B7                  A  1961    			or a
00162E ED4A                A  1962    			adc hl,bc
001630 E1                  A  1963    			pop hl
001631 20 DA               A  1964    			jr nz,unp_gtok
001633 C9                  A  1965    			ret	
                           A  1966    	
                           A  1967    ;----------------------------------------------
                           A  1968    ; Commonly called error messages - gets message
                           A  1969    ;----------------------------------------------
                           A  1970    
                           A  1971    
001634 3E0D                A  1972    os_no_fn_error		ld a,0dh
001636 B7                  A  1973    					or a
001637 C9                  A  1974    					ret
                           A  1975    			
001638 3E15                A  1976    os_fn_too_long		ld a,15h
00163A B7                  A  1977    					or a
00163B C9                  A  1978    					ret
                           A  1979    				
00163C 3E16                A  1980    os_no_start_addr	ld a,16h
00163E B7                  A  1981    					or a
00163F C9                  A  1982    					ret
                           A  1983    			
001640 3E17                A  1984    os_no_filesize		ld a,17h
001642 B7                  A  1985    					or a
001643 C9                  A  1986    					ret
                           A  1987    			
001644 3E18                A  1988    os_abort_save		ld a,18h
001646 B7                  A  1989    					or a
001647 C9                  A  1990    					ret
                           A  1991    			
001648 3E1C                A  1992    os_no_e_addr_error	ld a,1ch
00164A B7                  A  1993    					or a
00164B C9                  A  1994    					ret
                           A  1995    			
00164C 3E1D                A  1996    os_no_d_addr_error	ld a,1dh
00164E B7                  A  1997    					or a
00164F C9                  A  1998    					ret
                           A  1999    				
001650 3E1E                A  2000    os_range_error		ld a,1eh
001652 B7                  A  2001    					or a
001653 C9                  A  2002    					ret
                           A  2003    			
001654 3E1F                A  2004    os_no_args_error	ld a,1fh
001656 B7                  A  2005    					or a
001657 C9                  A  2006    					ret	
                           A  2007    
                           A  2008    ;----------------------------------------------
                           A  2009    
                           A  2010    ; Set xHL to address of zero terminated filenam
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  42


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2011    ; RETURNS:	C:xDE  = File length
                           A  2012    ;    		HL     = Start cluster of file
                           A  2013    
001658 CC E4 15 00         A  2014    ext_find_file	call z,mbase_hl
                           A  2015    
00165C CD B1 52 00         A  2016    os_find_file	call fs_hl_to_filename
001660 CD 18 4A 00         A  2017    				call fs_open_file_command		001664 38 01               A  2018    				jr c,os_fferr					001666 C9                  A  2019    				ret								                           A  2020    					
001667 47                  A  2021    os_fferr		ld b,a							001668 AF                  A  2022    				xor a			
001669 3C                  A  2023    				inc a							00166A C9                  A  2024    				ret	
                           A  2025    
                           A  2026    ;----------------------------------------------
                           A  2027    
00166B                     A  2028    os_set_load_length
                           A  2029    
00166B ED53 36 55 00       A  2030    				ld (fs_file_transfer_length),de
001670 BF                  A  2031    				cp a							001671 C9                  A  2032    				ret
                           A  2033    				
                           A  2034    ;----------------------------------------------
                           A  2035    
001672                     A  2036    ext_set_file_pointer
                           A  2037    
001672 79                  A  2038    				ld a,c
                           A  2039    				
001673                     A  2040    os_set_file_pointer
                           A  2041    
                           A  2042    ; Moves the 'start of file' pointer allowing ra
                           A  2043    ; Note: File pointer is reset by opening a file
                           A  2044    ; by normal read function.
                           A  2045    
001673 ED53 2A 55 00       A  2046    				ld (fs_file_pointer),de			001678 32 2D 55 00         A  2047    				ld (fs_file_pointer+3),a
00167C F5                  A  2048    				push af
00167D AF                  A  2049    				xor a
00167E 32 5C 55 00         A  2050    				ld (fs_filepointer_valid),a		001682 F1                  A  2051    				pop af
001683 BF                  A  2052    				cp a							001684 C9                  A  2053    				ret
                           A  2054    				
                           A  2055    ;----------------------------------------------
                           A  2056    
                           A  2057    ; set xHL = load address 
                           A  2058    ; (Before calling this routine, call os_find_fi
                           A  2059    
001685                     A  2060    ext_read_bytes_from_file
                           A  2061    
001685 CC E4 15 00         A  2062    				call z,mbase_hl					Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  43


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2063    				
001689                     A  2064    os_read_bytes_from_file
                           A  2065    
001689 22 3F 55 00         A  2066    				ld (fs_ez80_address),hl			00168D CD 6B 4A 00         A  2067    				call fs_read_data_command
001691 38 D4               A  2068    				jr c,os_fferr
001693 C9                  A  2069    				ret
                           A  2070    
                           A  2071    ;----------------------------------------------
                           A  2072    
                           A  2073    ; Before calling, set xHL = address of zero ter
                           A  2074    
001694 CC E4 15 00         A  2075    ext_create_file	call z,mbase_hl
                           A  2076    
001698 CD B1 52 00         A  2077    os_create_file	call fs_hl_to_filename
00169C CD 43 4D 00         A  2078    				call fs_create_file_command		0016A0 DA 67 16 00         A  2079    				jp c,os_fferr					0016A4 C9                  A  2080    				ret
                           A  2081    
                           A  2082    ;----------------------------------------------
                           A  2083    
0016A5                     A  2084    ext_write_bytes_to_file
                           A  2085    
0016A5 CC E4 15 00         A  2086    				call z,mbase_hl
0016A9 CC F5 15 00         A  2087    				call z,mbase_de
                           A  2088    
0016AD                     A  2089    os_write_bytes_to_file
                           A  2090    
                           A  2091    ; Before calling, set..
                           A  2092    
                           A  2093    ; xDE   = address to save data from
                           A  2094    ; xBC   = number of bytes to save
                           A  2095    ; xHL   = address of null-terminated ascii name
                           A  2096    
                           A  2097    ; On return:
                           A  2098    
                           A  2099    ; If zero flag NOT set, there was an error.
                           A  2100    ; If   A = $00, b = hardware error code
                           A  2101    ; Else A = File system error code
                           A  2102    
                           A  2103    ; NOTE:
                           A  2104    ; Will return 'file not found' if the file has 
                           A  2105    				
0016AD ED43 36 55 00       A  2106    				ld (fs_file_transfer_length),bc
0016B2 ED53 3F 55 00       A  2107    				ld (fs_ez80_address),de	 	
0016B7 CD B1 52 00         A  2108    				call fs_hl_to_filename
0016BB CD 75 4D 00         A  2109    				call fs_write_bytes_to_file_com
0016BF DA 67 16 00         A  2110    				jp c,os_fferr
0016C3 C9                  A  2111    				ret
                           A  2112    		
                           A  2113    		
                           A  2114    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  44


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2115    	
                           A  2116    
0016C4                     A  2117    os_check_volume_format
                           A  2118    
0016C4 CD 6F 48 00         A  2119    				call fs_check_disk_format
0016C8 DA 67 16 00         A  2120    os_rffsc		jp c,os_fferr
0016CC C9                  A  2121    				ret
                           A  2122    
                           A  2123    ;----------------------------------------------
                           A  2124    
                           A  2125    
0016CD 7B                  A  2126    ext_format		ld a,e
0016CE CC E4 15 00         A  2127    				call z,mbase_hl					                           A  2128    
0016D2 E5                  A  2129    os_format		push hl							0016D3 CD E1 1A 00         A  2130    				call dev_to_driver_lookup
0016D7 E1                  A  2131    				pop hl
0016D8 38 04               A  2132    				jr c,sdevok
0016DA 3ED0                A  2133    				ld a,0d0h						0016DC B7                  A  2134    				or a
0016DD C9                  A  2135    				ret
                           A  2136    
0016DE F5                  A  2137    sdevok			push af				
0016DF 11 06 55 00         A  2138    				ld de,fs_sought_filename
0016E3 CD C0 53 00         A  2139    				call fs_clear_filename
0016E7 060B                A  2140    				ld b,11
0016E9 CD 3F 12 00         A  2141    				call os_copy_ascii_run
0016ED F1                  A  2142    				pop af
                           A  2143    				
0016EE 21 D8 5F 00         A  2144    				ld hl,current_driver
0016F2 46                  A  2145    				ld b,(hl)
0016F3 77                  A  2146    				ld (hl),a
0016F4 C5                  A  2147    				push bc
0016F5 E5                  A  2148    				push hl
0016F6 CD E4 46 00         A  2149    				call fs_format_device_command
0016FA E1                  A  2150    				pop hl
0016FB C1                  A  2151    				pop bc
0016FC 70                  A  2152    				ld (hl),b
0016FD 18 C9               A  2153    				jr os_rffsc
                           A  2154    
                           A  2155    
                           A  2156    ;----------------------------------------------
                           A  2157    
                           A  2158    
0016FF CC E4 15 00         A  2159    ext_make_dir	call z,mbase_hl					                           A  2160    
001703 CD B1 52 00         A  2161    os_make_dir		call fs_hl_to_filename
001707 CD BB 4B 00         A  2162    				call fs_make_dir_command
00170B 18 BB               A  2163    				jr os_rffsc
                           A  2164    
                           A  2165    
                           A  2166    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  45


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2167    
                           A  2168    
00170D CC E4 15 00         A  2169    ext_change_dir	call z,mbase_hl					                           A  2170    
001711 CD B1 52 00         A  2171    os_change_dir	call fs_hl_to_filename
001715 CD C2 49 00         A  2172    				call fs_change_dir_command
001719 18 AD               A  2173    				jr os_rffsc
                           A  2174    				
                           A  2175    	
                           A  2176    ;----------------------------------------------
                           A  2177    	
                           A  2178    	
00171B CD F5 49 00         A  2179    os_parent_dir	call fs_parent_dir_command
00171F 18 A7               A  2180    				jr os_rffsc
                           A  2181    				
                           A  2182    
                           A  2183    ;----------------------------------------------
                           A  2184    
                           A  2185    	
001721 CD E9 49 00         A  2186    os_root_dir		call fs_goto_root_dir_command
001725 18 A1               A  2187    				jr os_rffsc
                           A  2188    
                           A  2189    
                           A  2190    ;----------------------------------------------
                           A  2191    
                           A  2192    
001727 CC E4 15 00         A  2193    ext_erase_file	call z,mbase_hl					                           A  2194    
00172B CD B1 52 00         A  2195    os_erase_file	call fs_hl_to_filename
00172F CD 0C 4F 00         A  2196    				call fs_erase_file_command
001733 18 93               A  2197    				jr os_rffsc
                           A  2198    	
                           A  2199    
                           A  2200    ;----------------------------------------------
                           A  2201    
                           A  2202    
001735                     A  2203    os_goto_first_dir_entry	
                           A  2204    
001735 CD 67 4F 00         A  2205    				call fs_goto_first_dir_entry
001739 18 8D               A  2206    				jr os_rffsc
                           A  2207    
                           A  2208    
                           A  2209    ;----------------------------------------------
                           A  2210    
                           A  2211    
00173B                     A  2212    os_get_dir_entry		
                           A  2213    
00173B CD 7E 4F 00         A  2214    				call fs_get_dir_entry	
00173F 18 87               A  2215    				jr os_rffsc
                           A  2216    
                           A  2217    
                           A  2218    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  46


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2219    
                           A  2220    
001741                     A  2221    os_goto_next_dir_entry	
                           A  2222    	
001741 CD 0B 50 00         A  2223    				call fs_goto_next_dir_entry	
001745 18 81               A  2224    				jr os_rffsc
                           A  2225    
                           A  2226    
                           A  2227    ;----------------------------------------------
                           A  2228    
                           A  2229    
001747                     A  2230    os_get_current_dir_name
                           A  2231    
001747 CD 77 53 00         A  2232    				call fs_get_current_dir_name
00174B C3 C8 16 00         A  2233    				jr os_rffsc
                           A  2234    				
                           A  2235    
                           A  2236    ;----------------------------------------------
                           A  2237    
                           A  2238    
00174F CC E4 15 00         A  2239    ext_rename_file	call z,mbase_hl
001753 CC F5 15 00         A  2240    				call z,mbase_de
                           A  2241    
001757 D5                  A  2242    os_rename_file	push de
001758 CD AB 52 00         A  2243    				call fs_hl_to_alt_filename		00175C E1                  A  2244    				pop hl				
00175D CD B1 52 00         A  2245    				call fs_hl_to_filename	
001761 CD 23 4F 00         A  2246    				call fs_rename_command
001765 C3 C8 16 00         A  2247    				jr os_rffsc
                           A  2248    				
                           A  2249    
                           A  2250    ;----------------------------------------------
                           A  2251    
                           A  2252    
001769 CC E4 15 00         A  2253    ext_delete_dir	call z,mbase_hl					                           A  2254    
00176D CD B1 52 00         A  2255    os_delete_dir	call fs_hl_to_filename
001771 CD 94 4C 00         A  2256    				call fs_delete_dir_command
001775 C3 C8 16 00         A  2257    				jp os_rffsc
                           A  2258    	
                           A  2259    	
                           A  2260    ;----- LOW LEVEL SECTOR ACCESS ETC FOR EXTERNAL
                           A  2261    
                           A  2262    
001779                     A  2263    ext_read_sector
001779 CD C4 17 00         A  2264    				call ext_sector_access_preamble
00177D C0                  A  2265    				ret nz
00177E 32 D8 5F 00         A  2266    				ld (current_driver),a
001782 CD 4E 54 00         A  2267    				call fs_read_sector
001786 20 11               A  2268    				jr nz,sect_done
001788 38 0F               A  2269    				jr c,sect_done
00178A 21 02 67 00         A  2270    				ld hl,sector_buffer
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  47


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00178E ED5B E8 5F 00       A  2271    				ld de,(sector_rd_wr_addr)
001793 01000200            A  2272    				ld bc,512
001797 EDB0                A  2273    				ldir			
001799 F5                  A  2274    sect_done		push af
00179A 3A 08 61 00         A  2275    				ld a,(sys_driver_backup)		00179E 32 D8 5F 00         A  2276    				ld (current_driver),a
0017A2 F1                  A  2277    				pop af
0017A3 C3 C8 16 00         A  2278    				jp os_rffsc
                           A  2279    				
                           A  2280    
0017A7                     A  2281    ext_write_sector
                           A  2282    			
0017A7 CD C4 17 00         A  2283    				call ext_sector_access_preamble
0017AB C0                  A  2284    				ret nz
0017AC 32 D8 5F 00         A  2285    				ld (current_driver),a
0017B0 2A E8 5F 00         A  2286    				ld hl,(sector_rd_wr_addr)
0017B4 11 02 67 00         A  2287    				ld de,sector_buffer
0017B8 01000200            A  2288    				ld bc,512
0017BC EDB0                A  2289    				ldir			
0017BE CD 77 54 00         A  2290    				call fs_write_sector
0017C2 18 D5               A  2291    				jr sect_done
                           A  2292    
                           A  2293    
0017C4                     A  2294    ext_sector_access_preamble
                           A  2295    
0017C4 CC E4 15 00         A  2296    				call z,mbase_hl
0017C8 22 E8 5F 00         A  2297    				ld (sector_rd_wr_addr),hl
                           A  2298    				
0017CC 78                  A  2299    				ld a,b
0017CD F5                  A  2300    				push af							0017CE DD21 AE 61 00       A  2301    				ld ix,sector_lba0
0017D3 DD1F00              A  2302    				ld (ix),de						0017D6 DD7103              A  2303    				ld (ix+3),c
0017D9 CD E1 1A 00         A  2304    				call dev_to_driver_lookup		0017DD E5                  A  2305    				push hl
0017DE DDE1                A  2306    				pop ix
0017E0 2A AE 61 00         A  2307    				ld hl,(sector_lba0)				0017E4 3A B1 61 00         A  2308    				ld a,(sector_lba3)				0017E8 DD0701              A  2309    				ld bc,(ix+1)					0017EB B7                  A  2310    				or a							0017EC ED42                A  2311    				sbc hl,bc
0017EE DD9E04              A  2312    				sbc a,(ix+4)
0017F1 38 05               A  2313    				jr c,range_ok
0017F3 F1                  A  2314    				pop af
0017F4 3ED5                A  2315    				ld a,0d5h						0017F6 B7                  A  2316    				or a							0017F7 C9                  A  2317    				ret
                           A  2318    	
0017F8 3A D8 5F 00         A  2319    range_ok		ld a,(current_driver)
0017FC 32 08 61 00         A  2320    				ld (sys_driver_backup),a
001800 F1                  A  2321    				pop af							001801 CD E1 1A 00         A  2322    				call dev_to_driver_lookup
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  48


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001805 30 02               A  2323    				jr nc,bad_dev
001807 BF                  A  2324    os_null			cp a							001808 C9                  A  2325    				ret
                           A  2326    					
001809 3ED0                A  2327    bad_dev			ld a,0d0h						00180B B7                  A  2328    				or a							00180C C9                  A  2329    				ret	
                           A  2330    			
                           A  2331    
                           A  2332    ;----------------------------------------------
                           A  2333    
                           A  2334    
00180D                     A  2335    os_get_device_info
                           A  2336    
00180D 21 83 60 00         A  2337    				ld hl,host_device_hardware_info
001811 11 9C 3B 00         A  2338    				ld de,driver_table
001815 3A D9 5F 00         A  2339    				ld a,(device_count)
001819 47                  A  2340    				ld b,a
00181A 3A D8 5F 00         A  2341    				ld a,(current_driver)
00181E BF                  A  2342    				cp a
00181F C9                  A  2343    				ret
                           A  2344    
                           A  2345    
                           A  2346    
                           A  2347    
001820                     A  2348    os_get_volume_info
                           A  2349    
001820 21 03 60 00         A  2350    				ld hl,volume_mount_list	
001824 3A DA 5F 00         A  2351    				ld a,(volume_count)
001828 47                  A  2352    				ld b,a
001829 3A D7 5F 00         A  2353    				ld a,(current_volume)
00182D C9                  A  2354    				ret
                           A  2355    				
                           A  2356    		
                           A  2357    ;----------------------------------------------
                           A  2358    
                           A  2359    
00182E                     A  2360    ext_serial_get_header
                           A  2361    
00182E CC E4 15 00         A  2362    				call z,mbase_hl
001832 7B                  A  2363    				ld a,e
001833 CD 77 44 00         A  2364    				call serial_get_header
001837 DDE5                A  2365    				push ix
001839 D1                  A  2366    				pop de
00183A C9                  A  2367    				ret
                           A  2368    				
                           A  2369    				
00183B                     A  2370    ext_serial_receive_file
                           A  2371    				
00183B CC E4 15 00         A  2372    				call z,mbase_hl
00183F CD 12 45 00         A  2373    				call serial_receive_file
001843 C9                  A  2374    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  49


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2375    				
                           A  2376    	
001844                     A  2377    ext_serial_send_file
                           A  2378    
001844 CC E4 15 00         A  2379    				call z,mbase_hl					001848 CC F5 15 00         A  2380    				call z,mbase_de					00184C D5                  A  2381    				push de	
00184D DDE1                A  2382    				pop ix							00184F C5                  A  2383    				push bc							001850 D1                  A  2384    				pop de							001851 CD DB 45 00         A  2385    				call serial_send_file
001855 C9                  A  2386    				ret
                           A  2387    
                           A  2388    
001856                     A  2389    ext_serial_tx
001856 7B                  A  2390    				ld a,e
001857 CD C5 3D 00         A  2391    				call send_serial_byte
00185B AF                  A  2392    				xor a							00185C C9                  A  2393    				ret
                           A  2394    
                           A  2395    
00185D                     A  2396    ext_serial_rx
00185D 7B                  A  2397    				ld a,e
00185E 32 A7 5F 00         A  2398    				ld (serial_timeout),a
001862 CD 8A 3D 00         A  2399    				call receive_serial_byte
001866 C9                  A  2400    				ret
                           A  2401    				
                           A  2402    
                           A  2403    ;----------------------------------------------
                           A  2404    
001867                     A  2405    ext_mount_volumes
                           A  2406    
001867 7B                  A  2407    				ld a,e
                           A  2408    
001868                     A  2409    os_mount_volumes
                           A  2410    				
001868 32 09 61 00         A  2411    				ld (os_quiet_mode),a			                           A  2412    				
00186C 21 91 56 00         A  2413    				ld hl,storage_txt
001870 CD 4C 0F 00         A  2414    				call os_print_string_cond
001874 CD 9C 18 00         A  2415    				call mount_go
001878 AF                  A  2416    				xor a
001879 32 D7 5F 00         A  2417    tvloop			ld (current_volume),a
00187D CD F7 1A 00         A  2418    				call os_change_volume			001881 C8                  A  2419    				ret z							001882 3A D7 5F 00         A  2420    				ld a,(current_volume)			001886 3C                  A  2421    				inc a
001887 FE08                A  2422    				cp max_volumes
001889 20 EE               A  2423    				jr nz,tvloop
00188B 3A D9 5F 00         A  2424    				ld a,(device_count)
00188F B7                  A  2425    				or a
001890 20 08               A  2426    				jr nz,mfsdevs
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  50


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001892 21 D5 5D 00         A  2427    				ld hl,none_found_msg
001896 CD 2B 14 00         A  2428    				call os_show_packed_text_cond
00189A AF                  A  2429    mfsdevs			xor a
00189B C9                  A  2430    				ret
                           A  2431    
                           A  2432    
                           A  2433    
00189C 21 03 60 00         A  2434    mount_go		ld hl,volume_mount_list			0018A0 01800000            A  2435    				ld bc,max_volumes*16
0018A4 AF                  A  2436    clrdl_lp		xor a
0018A5 CD BD 15 00         A  2437    				call os_bchl_memfill
                           A  2438    								
0018A9 21 EB 5F 00         A  2439    				ld hl,volume_dir_clusters		0018AD 01180000            A  2440    				ld bc,max_volumes*3		
0018B1 AF                  A  2441    				xor a	
0018B2 CD BD 15 00         A  2442    				call os_bchl_memfill	
                           A  2443    			
0018B6 11 83 60 00         A  2444    				ld de,host_device_hardware_info
0018BA ED53 03 61 00       A  2445    				ld (dhwn_temp_pointer),de
                           A  2446    				
0018BF FD21 03 60 00       A  2447    				ld iy,volume_mount_list
0018C4 AF                  A  2448    				xor a
0018C5 32 DA 5F 00         A  2449    				ld (volume_count),a
0018C9 32 D9 5F 00         A  2450    				ld (device_count),a
0018CD 32 D8 5F 00         A  2451    mnt_loop		ld (current_driver),a			0018D1 CD 6D 1A 00         A  2452    				call locate_driver_base			0018D5 21000000            A  2453    				ld hl,0
0018D9 AF                  A  2454    				xor a
0018DA ED5A                A  2455    				adc hl,de
0018DC C8                  A  2456    				ret z							0018DD EB                  A  2457    				ex de,hl						0018DE FDE5                A  2458    				push iy
0018E0 CD F1 18 00         A  2459    				call find_dev					0018E4 FDE1                A  2460    				pop iy							0018E6 CC F2 18 00         A  2461    				call z,got_dev		
0018EA 3A D8 5F 00         A  2462    nxt_drv			ld a,(current_driver)			0018EE 3C                  A  2463    				inc a
0018EF 18 DC               A  2464    				jr mnt_loop
                           A  2465    
                           A  2466    				
0018F1 E9                  A  2467    find_dev		jp (hl)
                           A  2468    			
                           A  2469    			
0018F2 E5                  A  2470    got_dev			push hl							0018F3 D5                  A  2471    				push de							0018F4 C5                  A  2472    				push bc
0018F5 CD F4 13 00         A  2473    				call os_new_line_cond			0018F9 015B0100            A  2474    				ld bc,015bh
0018FD CD 7E 1A 00         A  2475    				call os_print_multiple_chars_co
001901 3A D8 5F 00         A  2476    				ld a,(current_driver)
001905 CD 6D 1A 00         A  2477    				call locate_driver_base
001909 210C0000            A  2478    				ld hl,0ch
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  51


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00190D 19                  A  2479    				add hl,de
00190E CD 4C 0F 00         A  2480    				call os_print_string_cond		001912 015D0100            A  2481    				ld bc,015dh
001916 CD 7E 1A 00         A  2482    				call os_print_multiple_chars_co
00191A C1                  A  2483    				pop bc
00191B D1                  A  2484    				pop de
00191C AF                  A  2485    				xor a
00191D 32 07 61 00         A  2486    				ld (vols_on_device_temp),a
                           A  2487    				
001921 21 D9 5F 00         A  2488    				ld hl,device_count
001925 34                  A  2489    				inc (hl)						001926 3A D8 5F 00         A  2490    				ld a,(current_driver)
00192A 2A 03 61 00         A  2491    				ld hl,(dhwn_temp_pointer)	
00192E 77                  A  2492    				ld (hl),a
00192F 23                  A  2493    				inc hl
001930 73                  A  2494    				ld (hl),e						001931 FD7304              A  2495    				ld (iy+4),e						001934 23                  A  2496    				inc hl							001935 72                  A  2497    				ld (hl),d
001936 FD7205              A  2498    				ld (iy+5),d
001939 23                  A  2499    				inc hl
00193A 71                  A  2500    				ld (hl),c			
00193B FD7106              A  2501    				ld (iy+6),c
00193E 23                  A  2502    				inc hl
00193F 70                  A  2503    				ld (hl),b						001940 23                  A  2504    				inc hl
001941 D1                  A  2505    				pop de
001942 EB                  A  2506    				ex de,hl
001943 01160000            A  2507    				ld bc,22
001947 EDB0                A  2508    				ldir							001949 AF                  A  2509    				xor a
00194A 0605                A  2510    				ld b,5		
00194C 12                  A  2511    clrrode			ld (de),a						00194D 13                  A  2512    				inc de
00194E 10 FC               A  2513    				djnz clrrode
001950 ED53 03 61 00       A  2514    				ld (dhwn_temp_pointer),de		                           A  2515    					
001955 AF                  A  2516    				xor a							001956 FDE5                A  2517    fnxtpart		push iy
001958 CD 0D 48 00         A  2518    				call fs_get_partition_info
00195C FDE1                A  2519    				pop iy
00195E 38 31               A  2520    				jr c,nxt_dev					001960 FECE                A  2521    				cp 0ceh							001962 28 2D               A  2522    				jr z,nxt_dev
001964 F5                  A  2523    				push af
001965 FD360001            A  2524    				ld (iy),1						001969 3A D8 5F 00         A  2525    				ld a,(current_driver)
00196D FD7701              A  2526    				ld (iy+1),a						001970 3A 06 61 00         A  2527    				ld a,(partition_temp)	
001974 FD7707              A  2528    				ld (iy+7),a						001977 F1                  A  2529    				pop af
001978 B7                  A  2530    				or a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  52


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001979 28 35               A  2531    				jr z,dev_mbr
00197B AF                  A  2532    				xor a
00197C FD7708              A  2533    				ld (iy+8),a						00197F FD7709              A  2534    				ld (iy+9),a						001982 FD770A              A  2535    				ld (iy+10),a					001985 FD770B              A  2536    				ld (iy+11),a
001988 CD FC 19 00         A  2537    				call show_vol_info
00198C CD ED 19 00         A  2538    				call test_max_vol
001990 C8                  A  2539    				ret z							                           A  2540    			
001991 3A 07 61 00         A  2541    nxt_dev			ld a,(vols_on_device_temp)		001995 B7                  A  2542    				or a
001996 C0                  A  2543    				ret nz		
001997 CD 4E 1A 00         A  2544    				call test_quiet_mode
00199B 20 06               A  2545    				jr nz,skp_cu
00199D 3E0A                A  2546    				ld a,10
00199F 32 B3 61 00         A  2547    				ld (cursor_x),a
0019A3 21 D2 5D 00         A  2548    skp_cu			ld hl,no_vols_msg				0019A7 CD 2B 14 00         A  2549    				call os_show_packed_text_cond
0019AB CD F4 13 00         A  2550    				call os_new_line_cond
0019AF C9                  A  2551    				ret
                           A  2552    				
                           A  2553    			
0019B0 11040000            A  2554    dev_mbr			ld de,4
0019B4 19                  A  2555    				add hl,de
0019B5 7E                  A  2556    				ld a,(hl)						0019B6 B7                  A  2557    				or a
0019B7 C8                  A  2558    				ret z							0019B8 19                  A  2559    				add hl,de
                           A  2560    				
0019B9 FDE5                A  2561    				push iy
0019BB 0604                A  2562    				ld b,4
0019BD 7E                  A  2563    sfmbrlp			ld a,(hl)						0019BE FD7708              A  2564    				ld (iy+8),a
0019C1 23                  A  2565    				inc hl
0019C2 FD23                A  2566    				inc iy
0019C4 10 F7               A  2567    				djnz sfmbrlp
0019C6 FDE1                A  2568    				pop iy
0019C8 FDE5                A  2569    				push iy
0019CA 0603                A  2570    				ld b,3	
0019CC 7E                  A  2571    nsivlp			ld a,(hl)
0019CD FD7704              A  2572    				ld (iy+4),a						0019D0 23                  A  2573    				inc hl
0019D1 FD23                A  2574    				inc iy
0019D3 10 F7               A  2575    				djnz nsivlp
0019D5 FDE1                A  2576    				pop iy
                           A  2577    				
0019D7 CD FC 19 00         A  2578    				call show_vol_info
0019DB CD ED 19 00         A  2579    				call test_max_vol	
0019DF C8                  A  2580    				ret z							0019E0 3A 06 61 00         A  2581    				ld a,(partition_temp)
0019E4 3C                  A  2582    				inc a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  53


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0019E5 FE04                A  2583    				cp 4							0019E7 C2 56 19 00         A  2584    				jp nz,fnxtpart
0019EB 18 A4               A  2585    				jr nxt_dev
                           A  2586    				
                           A  2587    
0019ED                     A  2588    test_max_vol
                           A  2589    			
0019ED 11100000            A  2590    				ld de,16
0019F1 FD19                A  2591    				add iy,de			
0019F3 21 DA 5F 00         A  2592    				ld hl,volume_count
0019F7 34                  A  2593    				inc (hl)
0019F8 7E                  A  2594    				ld a,(hl)
0019F9 FE08                A  2595    				cp max_volumes
0019FB C9                  A  2596    				ret
                           A  2597    			
                           A  2598    			
0019FC                     A  2599    show_vol_info
                           A  2600    				
0019FC CD 4E 1A 00         A  2601    				call test_quiet_mode
001A00 20 06               A  2602    				jr nz,skp_cm2
001A02 3E09                A  2603    				ld a,9			
001A04 32 B3 61 00         A  2604    				ld (cursor_x),a
001A08 3A DA 5F 00         A  2605    skp_cm2			ld a,(volume_count)
001A0C F5                  A  2606    				push af
001A0D C630                A  2607    				add a,30h		
001A0F 32 DF 5F 00         A  2608    				ld (vol_txt+4),a	
001A13 21 DB 5F 00         A  2609    				ld hl,vol_txt
001A17 CD 4C 0F 00         A  2610    				call os_print_string_cond		001A1B 21 07 61 00         A  2611    				ld hl,vols_on_device_temp
001A1F CBC6                A  2612    				set 0,(hl)						                           A  2613    			
001A21 F1                  A  2614    				pop af
001A22 FDE5                A  2615    				push iy
001A24 CD F7 1A 00         A  2616    				call os_change_volume			001A28 28 0A               A  2617    				jr z,vform_ok					001A2A 21 82 5D 00         A  2618    svi_fe			ld hl,format_err_msg		
001A2E CD 2B 14 00         A  2619    svi_pem			call os_show_packed_text_cond	001A32 18 0D               A  2620    				jr skpsvl
                           A  2621    			
001A34 CD 62 50 00         A  2622    vform_ok		call fs_get_volume_label
001A38 38 0E               A  2623    				jr c,svi_hwe
001A3A B7                  A  2624    				or a
001A3B 20 ED               A  2625    				jr nz,svi_fe
001A3D CD 4C 0F 00         A  2626    				call os_print_string_cond		                           A  2627    			
001A41 CD F4 13 00         A  2628    skpsvl			call os_new_line_cond
001A45 FDE1                A  2629    				pop iy
001A47 C9                  A  2630    				ret
                           A  2631    				
001A48 21 CE 5B 00         A  2632    svi_hwe			ld hl,disk_err_msg
001A4C 18 E0               A  2633    				jr svi_pem
                           A  2634    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  54


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2635    			
001A4E                     A  2636    test_quiet_mode
                           A  2637    			
001A4E 3A 09 61 00         A  2638    				ld a,(os_quiet_mode)
001A52 B7                  A  2639    				or a
001A53 C9                  A  2640    				ret
                           A  2641    
                           A  2642    ;----------------------------------------------
                           A  2643    
                           A  2644    
001A54                     A  2645    show_dev_driver_name
                           A  2646    	
                           A  2647    	
001A54 CD 6D 1A 00         A  2648    				call locate_driver_base			001A58 EB                  A  2649    				ex de,hl
001A59 110C0000            A  2650    				ld de,0ch
001A5D 19                  A  2651    				add hl,de
001A5E CD 51 0F 00         A  2652    				call os_print_string			001A62 C5                  A  2653    				push bc
001A63 01200100            A  2654    				ld bc,0120h
001A67 CD 83 1A 00         A  2655    				call os_print_multiple_chars	001A6B C1                  A  2656    				pop bc
001A6C C9                  A  2657    				ret
                           A  2658    
                           A  2659    
001A6D                     A  2660    locate_driver_base
                           A  2661    
001A6D E5                  A  2662    				push hl							001A6E 11030000            A  2663    				ld de,3							001A72 57                  A  2664    				ld d,a
001A73 ED5C                A  2665    				mlt de
001A75 21 9C 3B 00         A  2666    				ld hl,driver_table
001A79 19                  A  2667    				add hl,de
001A7A ED17                A  2668    				ld de,(hl)
001A7C E1                  A  2669    				pop hl
001A7D C9                  A  2670    				ret
                           A  2671    				
                           A  2672    		
                           A  2673    ;----------------------------------------------
                           A  2674    
001A7E                     A  2675    os_print_multiple_chars_cond
                           A  2676    
001A7E CD 4E 1A 00         A  2677    				call test_quiet_mode
001A82 C0                  A  2678    				ret nz
                           A  2679    			
001A83                     A  2680    os_print_multiple_chars
                           A  2681    
                           A  2682    ;c = char
                           A  2683    ;b = count
001A83 C5                  A  2684    				push bc
001A84 E5                  A  2685    				push hl
001A85 79                  A  2686    				ld a,c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  55


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001A86 21 0C 57 00         A  2687    				ld hl,rep_char_txt
001A8A 77                  A  2688    				ld (hl),a
001A8B E5                  A  2689    pmch_lp			push hl
001A8C CD 51 0F 00         A  2690    				call os_print_string
001A90 E1                  A  2691    				pop hl
001A91 10 F8               A  2692    				djnz pmch_lp
001A93 E1                  A  2693    				pop hl
001A94 C1                  A  2694    				pop bc
001A95 C9                  A  2695    				ret
                           A  2696    
                           A  2697    ;----------------------------------------------
                           A  2698    
                           A  2699    
001A96 7B                  A  2700    ext_plot_char	ld a,e
001A97 C3 FC 3E 00         A  2701    				jp hwsc_plot_char
                           A  2702    				
                           A  2703    
                           A  2704    ;----------------------------------------------
                           A  2705    ; Some file system related routines 
                           A  2706    ;----------------------------------------------
                           A  2707    
                           A  2708    
001A9B                     A  2709    fs_get_dir_cluster
                           A  2710    
                           A  2711    
001A9B F5                  A  2712    				push af							001A9C E5                  A  2713    				push hl			
001A9D CD B3 1A 00         A  2714    				call fs_get_dir_cluster_address
001AA1 ED17                A  2715    				ld de,(hl)
001AA3 E1                  A  2716    dclopdone		pop hl
001AA4 F1                  A  2717    				pop af
001AA5 BF                  A  2718    				cp a							001AA6 C9                  A  2719    				ret
                           A  2720    				
                           A  2721    
                           A  2722    
                           A  2723    
                           A  2724    
001AA7                     A  2725    fs_update_dir_cluster
                           A  2726    
001AA7 F5                  A  2727    				push af							001AA8 E5                  A  2728    				push hl			
001AA9 D5                  A  2729    				push de			
001AAA CD B3 1A 00         A  2730    				call fs_get_dir_cluster_address
001AAE D1                  A  2731    				pop de
001AAF ED1F                A  2732    				ld (hl),de
001AB1 18 F0               A  2733    				jr dclopdone
                           A  2734    			
                           A  2735    
                           A  2736    
                           A  2737    
                           A  2738    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  56


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001AB3                     A  2739    fs_get_dir_cluster_address
                           A  2740    
001AB3 21 EB 5F 00         A  2741    				ld hl,volume_dir_clusters		001AB7 3A D7 5F 00         A  2742    				ld a,(current_volume)	
001ABB 11030000            A  2743    				ld de,3
001ABF 57                  A  2744    				ld d,a
001AC0 ED5C                A  2745    				mlt de
001AC2 19                  A  2746    				add hl,de
001AC3 C9                  A  2747    				ret
                           A  2748    				
                           A  2749    	
                           A  2750    
                           A  2751    	
                           A  2752    	
001AC4                     A  2753    fs_get_total_sectors
                           A  2754    
                           A  2755    
001AC4 F5                  A  2756    				push af
001AC5 E5                  A  2757    				push hl							001AC6 CD D5 1A 00         A  2758    				call fs_calc_volume_offset	
001ACA 21 07 60 00         A  2759    				ld hl,volume_mount_list+4
001ACE 19                  A  2760    				add hl,de
001ACF ED17                A  2761    				ld de,(hl)
001AD1 E1                  A  2762    				pop hl
001AD2 F1                  A  2763    				pop af
001AD3 BF                  A  2764    				cp a							001AD4 C9                  A  2765    				ret
                           A  2766    
                           A  2767    
                           A  2768    
                           A  2769    
                           A  2770    
001AD5                     A  2771    fs_calc_volume_offset
                           A  2772    
001AD5 3A D7 5F 00         A  2773    				ld a,(current_volume)			001AD9 11100000            A  2774    calc_vol		ld de,16
001ADD 57                  A  2775    				ld d,a
001ADE ED5C                A  2776    				mlt de
001AE0 C9                  A  2777    				ret
                           A  2778    
                           A  2779    
                           A  2780    
                           A  2781    
                           A  2782    
001AE1                     A  2783    dev_to_driver_lookup
                           A  2784    
001AE1 21 D9 5F 00         A  2785    				ld hl,device_count				001AE5 BE                  A  2786    				cp (hl)							001AE6 D0                  A  2787    				ret nc
001AE7 11200000            A  2788    				ld de,32						001AEB 57                  A  2789    				ld d,a
001AEC ED5C                A  2790    				mlt de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  57


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001AEE 21 83 60 00         A  2791    				ld hl,host_device_hardware_info
001AF2 19                  A  2792    				add hl,de
001AF3 7E                  A  2793    				ld a,(hl)
001AF4 37                  A  2794    				scf
001AF5 C9                  A  2795    				ret
                           A  2796    				
                           A  2797    
                           A  2798    
001AF6                     A  2799    ext_change_volume
                           A  2800    
001AF6 7B                  A  2801    				ld a,e
                           A  2802    
001AF7                     A  2803    os_change_volume
                           A  2804    
001AF7 47                  A  2805    				ld b,a							001AF8 FE08                A  2806    				cp max_volumes		
001AFA 30 22               A  2807    				jr nc,fs_ccv2					                           A  2808    			
001AFC 3A D7 5F 00         A  2809    				ld a,(current_volume)			001B00 F5                  A  2810    				push af
001B01 78                  A  2811    				ld a,b
001B02 32 D7 5F 00         A  2812    				ld (current_volume),a			001B06 CD 22 1B 00         A  2813    				call fs_set_driver_for_volume	                           A  2814    				
001B0A CD 6F 48 00         A  2815    				call fs_check_disk_format		001B0E 38 05               A  2816    				jr c,fs_cant_chg_vols	
001B10 20 03               A  2817    				jr nz,fs_cant_chg_vols
001B12 F1                  A  2818    				pop af							001B13 AF                  A  2819    				xor a							001B14 C9                  A  2820    				ret
                           A  2821    
                           A  2822    
001B15                     A  2823    fs_cant_chg_vols
                           A  2824    			
001B15 F1                  A  2825    				pop af
001B16 32 D7 5F 00         A  2826    				ld (current_volume),a			001B1A CD 22 1B 00         A  2827    				call fs_set_driver_for_volume	                           A  2828    				
001B1E 3ECF                A  2829    fs_ccv2			ld a,0cfh						001B20 B7                  A  2830    				or a
001B21 C9                  A  2831    				ret
                           A  2832    					
                           A  2833    	
001B22                     A  2834    fs_set_driver_for_volume
                           A  2835    
001B22 CD D5 1A 00         A  2836    				call fs_calc_volume_offset		001B26 21 04 60 00         A  2837    				ld hl,volume_mount_list+1
001B2A 19                  A  2838    				add hl,de
001B2B 7E                  A  2839    				ld a,(hl)
001B2C 32 D8 5F 00         A  2840    				ld (current_driver),a
001B30 C9                  A  2841    				ret
                           A  2842    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  58


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2843    
                           A  2844    ;----------------------------------------------
                           A  2845    
001B31                     A  2846    ext_file_sector_list
                           A  2847    
                           A  2848    ;Input HL = cluster, E = sector offset
                           A  2849    
                           A  2850    ;Output HL = new cluster, E = new sector number
                           A  2851    ;       IX = address of LBA0 LSB of sector (int
                           A  2852    
                           A  2853    				
001B31 3A EF 54 00         A  2854    				ld a,(fs_cluster_size)
001B35 BB                  A  2855    				cp e
001B36 20 0A               A  2856    				jr nz,fsl_sc
001B38 CD F6 52 00         A  2857    				call get_fat_entry_for_cluster
001B3C DA 67 16 00         A  2858    				jp c,os_fferr
001B40 1E00                A  2859    				ld e,0
001B42 CD CD 53 00         A  2860    fsl_sc			call cluster_and_offset_to_lba
001B46 1C                  A  2861    				inc e
001B47 01 AE 61 00         A  2862    fsl_done		ld bc,sector_lba0
001B4B BF                  A  2863    				cp a							001B4C C9                  A  2864    				ret
                           A  2865    
                           A  2866    ;----------------------------------------------
                           A  2867    
001B4D                     A  2868    os_get_disk_sector_ptr
                           A  2869     
001B4D 21 AE 61 00         A  2870    				ld hl,sector_lba0
001B51 11 02 67 00         A  2871    				ld de,sector_buffer
001B55 BF                  A  2872    				cp a
001B56 C9                  A  2873    				ret
                           A  2874    				
                           A  2875    ;----------------------------------------------
                           A  2876    
                           A  2877    
001B57 E5                  A  2878    os_count_chars	push hl							001B58 01000000            A  2879    				ld bc,0
001B5C 7E                  A  2880    cch_lp			ld a,(hl)
001B5D B7                  A  2881    				or a
001B5E 28 04               A  2882    				jr z,cch_end
001B60 23                  A  2883    				inc hl
001B61 03                  A  2884    				inc bc
001B62 18 F8               A  2885    				jr cch_lp
001B64 E1                  A  2886    cch_end			pop hl
001B65 C9                  A  2887    				ret
                           A  2888    				
                           A  2889    			
                           A  2890    ;----------------------------------------------
                           A  2891    ; Environment variable code V0.01
                           A  2892    ;----------------------------------------------
                           A  2893    
       00000100            A  2894    envar_buffer_size equ 256
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  59


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2895    
                           A  2896    ;----------------------------------------------
                           A  2897    
001B66                     A  2898    ext_get_envar
001B66 CC E4 15 00         A  2899    				call z,mbase_hl
                           A  2900    
001B6A                     A  2901    os_get_envar
                           A  2902    
                           A  2903    ;Set: 		HL = name of required variable
                           A  2904    ;Returns:	ZF Set: DE = address of variable's 
                           A  2905    ;        	ZF Not Set: Couldn't find variable
                           A  2906    				
001B6A DD21 12 63 00       A  2907    				ld ix,envar_list-1
001B6F CD 57 1B 00         A  2908    env_fname		call os_count_chars				001B73 78                  A  2909    				ld a,b
001B74 B1                  A  2910    				or c
001B75 28 27               A  2911    				jr z,env_bad
                           A  2912    								
001B77 ED1201              A  2913    env_cname		lea de,ix+1
001B7A 1A                  A  2914    				ld a,(de)
001B7B FEFF                A  2915    				cp 0ffh
001B7D 28 1F               A  2916    				jr z,env_bad
001B7F C5                  A  2917    				push bc
001B80 41                  A  2918    				ld b,c
001B81 CD 20 12 00         A  2919    				call os_compare_strings
001B85 C1                  A  2920    				pop bc
001B86 20 06               A  2921    				jr nz,env_nomatch
001B88 03                  A  2922    				inc bc							001B89 EB                  A  2923    				ex de,hl
001B8A 09                  A  2924    				add hl,bc
001B8B EB                  A  2925    				ex de,hl						001B8C AF                  A  2926    				xor a
001B8D C9                  A  2927    				ret			
                           A  2928    				
001B8E DD23                A  2929    env_nomatch		inc ix							001B90 CD 36 1C 00         A  2930    				call check_envar_bounds
001B94 20 08               A  2931    				jr nz,env_bad
001B96 DD7E00              A  2932    				ld a,(ix)
001B99 B7                  A  2933    				or a
001B9A 28 DB               A  2934    				jr z,env_cname
001B9C 18 F0               A  2935    				jr env_nomatch
                           A  2936    
001B9E 3E82                A  2937    env_bad			ld a,82h						001BA0 B7                  A  2938    				or a
001BA1 C9                  A  2939    				ret	
                           A  2940    				
                           A  2941    ;----------------------------------------------
                           A  2942    
001BA2                     A  2943    ext_set_envar
                           A  2944    
                           A  2945    ;HL = addr of variable name (zero terminated)
                           A  2946    ;DE = addr of data for variable (zero terminate
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  60


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2947    
                           A  2948    ;Returns:
                           A  2949    ;ZF = Set: OK
                           A  2950    ;ZF = Not Set: No enough space for new variable
                           A  2951    		
001BA2 CC E4 15 00         A  2952    				call z,mbase_hl
001BA6 CC F5 15 00         A  2953    				call z,mbase_de
                           A  2954    
001BAA 7E                  A  2955    os_set_envar	ld a,(hl)						001BAB B7                  A  2956    				or a
001BAC 28 F0               A  2957    				jr z,env_bad
001BAE 1A                  A  2958    				ld a,(de)
001BAF B7                  A  2959    				or a
001BB0 28 EC               A  2960    				jr z,env_bad
                           A  2961    
001BB2 E5                  A  2962    				push hl
001BB3 D5                  A  2963    				push de
001BB4 CD 00 1C 00         A  2964    				call os_delete_envar			001BB8 D1                  A  2965    				pop de
001BB9 E1                  A  2966    				pop hl
                           A  2967    				
001BBA DD2A 1D 64 00       A  2968    				ld ix,(envar_top_loc)			001BBF CD 36 1C 00         A  2969    env_enlp		call check_envar_bounds
001BC3 20 D9               A  2970    				jr nz,env_bad
001BC5 7E                  A  2971    				ld a,(hl)						001BC6 DD7700              A  2972    				ld (ix),a
001BC9 B7                  A  2973    				or a
001BCA 28 05               A  2974    				jr z,env_ndone
001BCC 23                  A  2975    				inc hl
001BCD DD23                A  2976    				inc ix
001BCF 18 EE               A  2977    				jr env_enlp
                           A  2978    				
001BD1 CD 36 1C 00         A  2979    env_ndone		call check_envar_bounds			001BD5 20 C7               A  2980    				jr nz,env_bad
001BD7 DD36003D            A  2981    				ld (ix),'='
001BDB DD23                A  2982    				inc ix
                           A  2983    
001BDD CD 36 1C 00         A  2984    env_evlp		call check_envar_bounds			001BE1 20 BB               A  2985    				jr nz,env_bad
001BE3 1A                  A  2986    				ld a,(de)
001BE4 DD7700              A  2987    				ld (ix),a
001BE7 B7                  A  2988    				or a
001BE8 28 05               A  2989    				jr z,env_vdone
001BEA 13                  A  2990    				inc de
001BEB DD23                A  2991    				inc ix
001BED 18 EE               A  2992    				jr env_evlp
                           A  2993    
001BEF DD23                A  2994    env_vdone		inc ix
001BF1 DD3600FF            A  2995    				ld (ix),0ffh
001BF5 DD22 1D 64 00       A  2996    				ld (envar_top_loc),ix			001BFA AF                  A  2997    				xor a
001BFB C9                  A  2998    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  61


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2999    
                           A  3000    	
                           A  3001    ;----------------------------------------------
                           A  3002    
001BFC                     A  3003    ext_delete_envar
                           A  3004    
001BFC CC E4 15 00         A  3005    				call z,mbase_hl
                           A  3006    
001C00                     A  3007    os_delete_envar
                           A  3008    
                           A  3009    ;HL = name of required variable (null terminate
                           A  3010    ;ZF = Set: OK
                           A  3011    ;ZF = Not Set: Didnt find named variable
                           A  3012    
                           A  3013    
001C00 CD 6A 1B 00         A  3014    				call os_get_envar				001C04 C0                  A  3015    				ret nz
                           A  3016    				
001C05 D5                  A  3017    				push de
001C06 E1                  A  3018    				pop hl
001C07 AF                  A  3019    				xor a
001C08 ED42                A  3020    				sbc hl,bc						                           A  3021    				
001C0A 13                  A  3022    env_fnxt		inc de							001C0B D5                  A  3023    				push de
001C0C DDE1                A  3024    				pop ix
001C0E CD 36 1C 00         A  3025    				call check_envar_bounds
001C12 20 8A               A  3026    				jr nz,env_bad
001C14 1A                  A  3027    				ld a,(de)
001C15 B7                  A  3028    				or a
001C16 20 F2               A  3029    				jr nz,env_fnxt
                           A  3030    
001C18 13                  A  3031    env_gnxt		inc de							001C19 EB                  A  3032    				ex de,hl
001C1A 7E                  A  3033    env_collp		ld a,(hl)
001C1B 12                  A  3034    				ld (de),a						001C1C FEFF                A  3035    				cp 0ffh
001C1E 28 0F               A  3036    				jr z,env_clspd					001C20 E5                  A  3037    				push hl
001C21 DDE1                A  3038    				pop ix
001C23 CD 36 1C 00         A  3039    				call check_envar_bounds
001C27 C2 9E 1B 00         A  3040    				jr nz,env_bad
001C2B 23                  A  3041    				inc hl
001C2C 13                  A  3042    				inc de
001C2D 18 EB               A  3043    				jr env_collp
                           A  3044    
001C2F ED53 1D 64 00       A  3045    env_clspd		ld (envar_top_loc),de			001C34 AF                  A  3046    				xor a
001C35 C9                  A  3047    				ret
                           A  3048    				
                           A  3049    ;----------------------------------------------
                           A  3050    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  62


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001C36                     A  3051    check_envar_bounds
                           A  3052    
001C36 C5                  A  3053    				push bc
001C37 E5                  A  3054    				push hl
001C38 DDE5                A  3055    				push ix
001C3A E1                  A  3056    				pop hl
001C3B 01 14 64 00         A  3057    				ld bc,1+(envar_list+envar_buffe
001C3F AF                  A  3058    				xor a
001C40 ED42                A  3059    				sbc hl,bc
001C42 38 05               A  3060    				jr c,env_bok
001C44 AF                  A  3061    				xor a
001C45 3C                  A  3062    				inc a
001C46 E1                  A  3063    				pop hl
001C47 C1                  A  3064    				pop bc
001C48 C9                  A  3065    				ret
                           A  3066    
001C49 AF                  A  3067    env_bok			xor a
001C4A E1                  A  3068    				pop hl
001C4B C1                  A  3069    				pop bc
001C4C C9                  A  3070    				ret
                           A  3071    						
                           A  3072    ;----------------------------------------------
                           A  3073    
001C4D                     A  3074    os_get_keymap_location
                           A  3075    
001C4D 21 23 5E 00         A  3076    				ld hl,unshifted_keymap
001C51 BF                  A  3077    				cp a							001C52 C9                  A  3078    				ret
                           A  3079    
                           A  3080    
                           A  3081    ;----------------------------------------------
                           A  3082    
                           A  3083    
001C53 CC E4 15 00         A  3084    ext_play_audio	call z,mbase_hl
                           A  3085    				
001C57 CD 6E 43 00         A  3086    os_play_audio	call hwsc_play_audio
001C5B C9                  A  3087    				ret
                           A  3088    				
                           A  3089    				
                           A  3090    ;==============================================
                           A  3091    ; Internal OS command routines
                           A  3092    ;==============================================
                           A  3093    
                           B     0    	include 'commands\c.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"c" - Copy memory command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
001C5C                     B     5    os_cmd_c
                           B     6    
001C5C CD 92 1C 00         B     7    				call get_start_and_end			                           B     8    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  63


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\c.asm
001C60 CD BB 1C 00         B     9    				call hexword_or_bust			001C64 CA 4C 16 00         B    10    				jp z,os_no_d_addr_error
001C68 ED53 C1 61 00       B    11    				ld (copy_dest_address),de
                           B    12    						
001C6D CD 80 1C 00         B    13    				call test_mem_range				001C71 DA 50 16 00         B    14    				jp c,os_range_error				001C75 ED5B C1 61 00       B    15    				ld de,(copy_dest_address)
001C7A EDB0                B    16    				ldir
                           B    17    
001C7C 3E20                B    18    copy_done		ld a,020h						001C7E B7                  B    19    				or a
001C7F C9                  B    20    				ret
                           B    21    			
                           B    22    			
                           B    23    ;----------------------------------------------
                           B    24    			
001C80                     B    25    test_mem_range
                           B    26    			
                           B    27    ; on return:
                           B    28    ;
                           B    29    ; carry flag: Set = bad range
                           B    30    ; xBC = run length on return
                           B    31    ; xHL = start address
                           B    32    			
001C80 2A BE 61 00         B    33    				ld hl,(cmdop_end_address)	
001C84 ED4B BB 61 00       B    34    				ld bc,(cmdop_start_address)
001C89 C5                  B    35    				push bc
001C8A AF                  B    36    				xor a
001C8B ED42                B    37    				sbc hl,bc
001C8D E5                  B    38    				push hl
001C8E C1                  B    39    				pop bc
001C8F 03                  B    40    				inc bc
001C90 E1                  B    41    				pop hl
001C91 C9                  B    42    				ret
                           B    43    				
                           B    44    ;----------------------------------------------
                           B    45    			
001C92                     B    46    get_start_and_end
                           B    47    			
001C92 CD D0 10 00         B    48    				call ascii_to_hexword			001C96 ED53 BB 61 00       B    49    				ld (cmdop_start_address),de
001C9B 23                  B    50    				inc hl
001C9C 28 09               B    51    				jr z,st_addrok
001C9E E1                  B    52    				pop hl							001C9F FE82                B    53    				cp 82h							001CA1 28 02               B    54    				jr z,c_badhex
001CA3 3E16                B    55    				ld a,016h						001CA5 B7                  B    56    c_badhex		or a
001CA6 C9                  B    57    				ret
                           B    58    				
001CA7 CD D0 10 00         B    59    st_addrok		call ascii_to_hexword			001CAB ED53 BE 61 00       B    60    				ld (cmdop_end_address),de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  64


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\c.asm
001CB0 23                  B    61    				inc hl
001CB1 B7                  B    62    				or a
001CB2 C8                  B    63    				ret z
001CB3 E1                  B    64    				pop hl							001CB4 FE82                B    65    				cp 82h							001CB6 28 ED               B    66    				jr z,c_badhex
001CB8 3E1C                B    67    				ld a,01ch						001CBA C9                  B    68    				ret
                           B    69    				
                           B    70    ;----------------------------------------------
                           B    71    
001CBB                     B    72    hexword_or_bust
                           B    73    
                           B    74    ; Set HL to string address:
                           B    75    ; Returns to parent routine ONLY if the string 
                           B    76    ; DE = hex word. If no hex found, the zero flag
                           B    77    ; If chars are invalid hex, returns to grandpar
                           B    78    
001CBB CD D0 10 00         B    79    				call ascii_to_hexword		
001CBF FE82                B    80    				cp 82h
001CC1 20 03               B    81    				jr nz,hex_good
001CC3 E1                  B    82    				pop hl						; r
001CC4 B7                  B    83    				or a	
001CC5 C9                  B    84    				ret			 
001CC6 FE81                B    85    hex_good		cp 081h						; n
001CC8 C9                  B    86    				ret
                           B    87    	
                           B    88    ;----------------------------------------------
                           B    89    
                           B     0    	include 'commands\cd.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'cd' - Change Dir command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
001CC9                     B     5    os_cmd_cd	
                           B     6    
001CC9 CD C4 16 00         B     7    				call os_check_volume_format	
001CCD C0                  B     8    				ret nz
                           B     9    			
                           B    10    			
001CCE 7E                  B    11    				ld a,(hl)						001CCF B7                  B    12    				or a				
001CD0 CA 77 1D 00         B    13    				jp z,cd_show_path		
                           B    14    			
                           B    15    			
001CD4 7E                  B    16    				ld a,(hl)						001CD5 23                  B    17    				inc hl
001CD6 46                  B    18    				ld b,(hl)
001CD7 2B                  B    19    				dec hl
001CD8 FE2E                B    20    				cp '.'			
001CDA 20 08               B    21    				jr nz,cd_nual
001CDC B8                  B    22    				cp b
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  65


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\cd.asm
001CDD 20 05               B    23    				jr nz,cd_nual
001CDF CD 1B 17 00         B    24    				call os_parent_dir	
001CE3 C9                  B    25    				ret
                           B    26    			
                           B    27    			
001CE4 FE2F                B    28    cd_nual			cp 02fh			
001CE6 20 05               B    29    				jr nz,cd_nogor					001CE8 CD 21 17 00         B    30    				call os_root_dir	
001CEC C9                  B    31    				ret
                           B    32    				
                           B    33    				
001CED FE25                B    34    cd_nogor		cp '%'							001CEF 20 1F               B    35    				jr nz,cd_no_assign
001CF1 CD 6A 1B 00         B    36    				call os_get_envar
001CF5 28 04               B    37    				jr z,cd_evok
001CF7 3ED1                B    38    				ld a,0d1h						001CF9 B7                  B    39    				or a
001CFA C9                  B    40    				ret
001CFB 11000000            B    41    cd_evok			ld de,0
001CFF 5E                  B    42    				ld e,(hl)
001D00 23                  B    43    				inc hl
001D01 56                  B    44    				ld d,(hl)
001D02 23                  B    45    				inc hl
001D03 7E                  B    46    				ld a,(hl)
001D04 D5                  B    47    				push de
001D05 CD F7 1A 00         B    48    				call os_change_volume
001D09 D1                  B    49    				pop de
001D0A C0                  B    50    				ret nz
001D0B CD A7 1A 00         B    51    				call fs_update_dir_cluster
001D0F C9                  B    52    				ret
                           B    53    				
                           B    54    				
001D10                     B    55    cd_no_assign
                           B    56    			
001D10 3A D7 5F 00         B    57    				ld a,(current_volume)
001D14 32 05 69 00         B    58    				ld (original_vol_cd_cmd),a
                           B    59    			
001D18 E5                  B    60    				push hl
001D19 DDE1                B    61    				pop ix
001D1B DD7E04              B    62    				ld a,(ix+4)
001D1E FE3A                B    63    				cp ':'							001D20 20 25               B    64    				jr nz,cd_nchvol
001D22 11 DC 5F 00         B    65    				ld de,vol_txt+1
001D26 0603                B    66    				ld b,3
001D28 CD 20 12 00         B    67    				call os_compare_strings
001D2C 20 19               B    68    				jr nz,cd_nchvol
001D2E 11050000            B    69    				ld de,5
001D32 19                  B    70    				add hl,de
001D33 22 74 62 00         B    71    				ld (os_args_loc),hl				001D37 DD7E03              B    72    				ld a,(ix+3)						001D3A D630                B    73    				sub 030h
001D3C CD F7 1A 00         B    74    				call os_change_volume
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  66


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\cd.asm
001D40 C0                  B    75    				ret nz							001D41 CD 21 17 00         B    76    				call os_root_dir				001D45 18 11               B    77    				jr cd_mol						                           B    78    				
                           B    79    			
001D47 CD 9B 1A 00         B    80    cd_nchvol		call fs_get_dir_cluster
001D4B ED53 02 69 00       B    81    				ld (original_dir_cd_cmd),de
                           B    82    			
001D50 E5                  B    83    cd_mollp		push hl
001D51 CD 11 17 00         B    84    				call os_change_dir				001D55 E1                  B    85    				pop hl
001D56 20 0A               B    86    				jr nz,cd_dcherr
001D58 7E                  B    87    cd_mol			ld a,(hl)						001D59 23                  B    88    				inc hl
001D5A B7                  B    89    				or a
001D5B C8                  B    90    				ret z
001D5C FE2F                B    91    				cp 02fh
001D5E 28 F0               B    92    				jr z,cd_mollp
001D60 18 F6               B    93    				jr cd_mol
                           B    94    					
001D62                     B    95    cd_dcherr	
                           B    96    			
001D62 F5                  B    97    				push af							001D63 ED5B 02 69 00       B    98    				ld de,(original_dir_cd_cmd)
001D68 CD A7 1A 00         B    99    				call fs_update_dir_cluster
001D6C 3A 05 69 00         B   100    				ld a,(original_vol_cd_cmd)
001D70 CD F7 1A 00         B   101    				call os_change_volume	
001D74 F1                  B   102    				pop af
001D75 B7                  B   103    				or a
001D76 C9                  B   104    				ret
                           B   105    				
                           B   106    ;----------------------------------------------
                           B   107    			
001D77                     B   108    cd_show_path
                           B   109    			
                           B   110    			
       00000010            B   111    max_dirs	equ 16
                           B   112    			
001D77 0610                B   113    				ld b,max_dirs
001D79 0E00                B   114    				ld c,0
001D7B C5                  B   115    lp1				push bc
001D7C CD 9B 1A 00         B   116    				call fs_get_dir_cluster
001D80 C1                  B   117    				pop bc
001D81 D5                  B   118    				push de
001D82 0C                  B   119    				inc c
001D83 C5                  B   120    				push bc
001D84 CD 1B 17 00         B   121    				call os_parent_dir
001D88 C1                  B   122    				pop bc
001D89 20 02               B   123    				jr nz,shdir_lp
001D8B 10 EE               B   124    				djnz lp1
                           B   125    				
001D8D D1                  B   126    shdir_lp		pop de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  67


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\cd.asm
001D8E C5                  B   127    				push bc
001D8F CD A7 1A 00         B   128    				call fs_update_dir_cluster
001D93 CD 47 17 00         B   129    				call os_get_current_dir_name
001D97 CD 51 0F 00         B   130    				call os_print_string
001D9B 21 AD 1D 00         B   131    				ld hl,cd_fwdslash_txt
001D9F CD 51 0F 00         B   132    				call os_print_string
001DA3 C1                  B   133    				pop bc
001DA4 0D                  B   134    				dec c
001DA5 20 E6               B   135    				jr nz,shdir_lp
                           B   136    			
001DA7 CD F9 13 00         B   137    				call os_new_line	
001DAB AF                  B   138    				xor a
001DAC C9                  B   139    				ret
                           B   140    			
001DAD 2F00                B   141    cd_fwdslash_txt	db '/',0	
                           B   142    			
                           B   143    ;----------------------------------------------
                           B   144    			
       00006902            B   145    original_dir_cd_cmd		equ scratch_pad 
       00006905            B   146    original_vol_cd_cmd	 	equ scratch_pad+3
                           B   147    					
                           B   148    ;----------------------------------------------
                           B     0    	include 'commands\cls.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"cls" - Clear screen command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
001DAF                     B     5    os_cmd_cls
                           B     6    
001DAF CD 86 3E 00         B     7    				call hwsc_clear_screen
001DB3 AF                  B     8    				xor a
001DB4 C9                  B     9    				ret
                           B    10    				
                           B    11    ;----------------------------------------------
                           B    12    	
                           B     0    	include 'commands\colon.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;":" for write hex bytes command. V0.02 - ADL m
                           B     3    ;----------------------------------------------
                           B     4    
001DB5                     B     5    os_cmd_colon
                           B     6    	
001DB5 CD BB 1C 00         B     7    				call hexword_or_bust			001DB9 CA 3C 16 00         B     8    				jp z,os_no_start_addr			001DBD D5                  B     9    				push de
001DBE DDE1                B    10    				pop ix							                           B    11    			
001DC0 CD BB 1C 00         B    12    wmblp			call hexword_or_bust			001DC4 28 07               B    13    				jr z,os_ccmdn
001DC6 DD7300              B    14    				ld (ix),e						001DC9 DD23                B    15    				inc ix
001DCB 18 F3               B    16    				jr wmblp
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  68


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\colon.asm
                           B    17    
001DCD AF                  B    18    os_ccmdn		xor a
001DCE C9                  B    19    				ret
                           B    20    		
                           B    21    
                           B    22    ;----------------------------------------------
                           B     0    	include 'commands\d.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; OS "D" Command: EZ80 Disassembler V0.02
                           B     3    ; Totally and utterly unoptimized!
                           B     4    ;----------------------------------------------
                           B     5    
001DCF FD21 B6 23 00       B     6    os_cmd_d		ld iy,prefix_bits_loc
001DD4 FDCB 07 C6          B     7    				set adl_dis,(iy+var_adl)
                           B     8    
001DD8 CD BB 1C 00         B     9    os_cmd_d_go		call hexword_or_bust			001DDC 28 05               B    10    				jr z,d_no_hex					001DDE ED53 2D 29 00       B    11    				ld (dis_addr),de
                           B    12    				
001DE3 3A 79 5F 00         B    13    d_no_hex		ld a,(charmap_rows)				001DE7 D602                B    14    				sub a,2
001DE9 47                  B    15    				ld b,a
001DEA C5                  B    16    dis_loop		push bc
                           B    17    				
001DEB DD2A 2D 29 00       B    18    				ld ix,(dis_addr)				001DF0 CD 98 23 00         B    19    				call show_ix					001DF4 3E20                B    20    				ld a,' '
001DF6 CD 8C 23 00         B    21    				call show_ascii_char
                           B    22    
001DFA FD21 B6 23 00       B    23    				ld iy,prefix_bits_loc
001DFF FD360000            B    24    				ld (iy),0						001E03 CD 3F 1E 00         B    25    				call dis_instr					001E07 DD23                B    26    				inc ix							                           B    27    				
001E09 3E1A                B    28    				ld a,26							001E0B 32 B3 61 00         B    29    				ld (cursor_pos+1),a				001E0F ED4B 2D 29 00       B    30    				ld bc,(dis_addr)
001E14 DD22 2D 29 00       B    31    				ld (dis_addr),ix				001E19 DDE5                B    32    				push ix
001E1B E1                  B    33    				pop hl
001E1C AF                  B    34    				xor a
001E1D ED42                B    35    				sbc hl,bc						001E1F 7D                  B    36    				ld a,l
001E20 E607                B    37    				and 7
001E22 6F                  B    38    				ld l,a
001E23 0A                  B    39    shexoplp		ld a,(bc)						001E24 CD 7B 23 00         B    40    				call show_hex_byte
001E28 3E20                B    41    				ld a,' '
001E2A CD 8C 23 00         B    42    				call show_ascii_char
001E2E 03                  B    43    				inc bc
001E2F 2D                  B    44    				dec l
001E30 20 F1               B    45    				jr nz,shexoplp
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  69


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B    46    				
001E32 CD F9 13 00         B    47    				call os_new_line
001E36 C1                  B    48    				pop bc
001E37 10 B1               B    49    				djnz dis_loop
                           B    50    
001E39 CD F9 13 00         B    51    				call os_new_line
001E3D AF                  B    52    				xor a
001E3E C9                  B    53    				ret
                           B    54    
                           B    55    
                           B    56    ;- Handle op code prefixes --------------------
                           B    57    			
       00000000            B    58    cb_prefix			equ 0					
       00000001            B    59    ed_prefix			equ 1
       00000002            B    60    sub_ix_prefix		equ 2
       00000003            B    61    sub_iy_prefix		equ 3
       00000004            B    62    ddcb_fdcb_prefix	equ 4					; p
       00000005            B    63    dot_l_prefix		equ 5
       00000006            B    64    il_prefix			equ 6
       00000007            B    65    show_adl_prefix		equ 7
                           B    66    
       00000000            B    67    adl_dis				equ 0					; b
                           B    68    
                           B    69    
001E3F DD7E00              B    70    dis_instr	ld a,(ix)						; c
                           B    71    			
001E42 FDCB 07 46          B    72    			bit adl_dis,(iy+var_adl)		; i
001E46 28 04               B    73    			jr z,z80_list					; T
001E48 FDCB00F6            B    74    			set il_prefix,(iy)				; a
001E4C                     B    75    z80_list			
                           B    76    			
                           B    77    ;----------------------------------------------
                           B    78    
001E4C FE40                B    79    			cp 40h
001E4E 20 0A               B    80    			jr nz,not_sis
001E50 FDCB00B6            B    81    			res il_prefix,(iy)
001E54 FDCB00AE            B    82    			res dot_l_prefix,(iy)
001E58 18 28               B    83    			jr set_adl_pf
                           B    84    			
001E5A FE49                B    85    not_sis		cp 49h
001E5C 20 0A               B    86    			jr nz,not_lis
001E5E FDCB00B6            B    87    			res il_prefix,(iy)
001E62 FDCB00EE            B    88    			set dot_l_prefix,(iy)
001E66 18 1A               B    89    			jr set_adl_pf
                           B    90    			
001E68 FE52                B    91    not_lis		cp 52h
001E6A 20 0A               B    92    			jr nz,not_sil
001E6C FDCB00F6            B    93    			set il_prefix,(iy)
001E70 FDCB00AE            B    94    			res dot_l_prefix,(iy)
001E74 18 0C               B    95    			jr set_adl_pf
                           B    96    			
001E76 FE5B                B    97    not_sil		cp 5bh
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  70


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
001E78 20 11               B    98    			jr nz,not_adl_prefix_byte
001E7A FDCB00F6            B    99    			set il_prefix,(iy)
001E7E FDCB00EE            B   100    			set dot_l_prefix,(iy)
                           B   101    			
001E82 FDCB00FE            B   102    set_adl_pf	set show_adl_prefix,(iy)
001E86 DD23                B   103    			inc ix
001E88 DD7E00              B   104    			ld a,(ix)	
                           B   105    			
                           B   106    ;----------------------------------------------
                           B   107    
001E8B                     B   108    not_adl_prefix_byte			
                           B   109    			
001E8B FECB                B   110    			cp 0cbh								001E8D 20 08               B   111    			jr nz,not_cb
001E8F FDCB00C6            B   112    do_cb		set cb_prefix,(iy)
001E93 DD23                B   113    			inc ix
001E95 18 3A               B   114    			jr not_traditional_prefix_byte
                           B   115    
001E97 FEED                B   116    not_cb		cp 0edh
001E99 20 08               B   117    			jr nz,not_ed
001E9B FDCB00CE            B   118    do_ed		set ed_prefix,(iy)
001E9F DD23                B   119    			inc ix
001EA1 18 2E               B   120    			jr not_traditional_prefix_byte
                           B   121    
001EA3 FEDD                B   122    not_ed		cp 0ddh
001EA5 20 18               B   123    			jr nz,not_dd
001EA7 CD DA 20 00         B   124    do_dd		call check_nxt_byte_prefix			001EAB 28 92               B   125    			jr z,dis_instr						001EAD FDCB00D6            B   126    			set sub_ix_prefix,(iy)
001EB1 FECB                B   127    xdcb_query	cp 0cbh								001EB3 20 1C               B   128    			jr nz,not_traditional_prefix_byte	001EB5 FDCB00E6            B   129    			set ddcb_fdcb_prefix,(iy)
001EB9 DD23                B   130    			inc ix								001EBB DD23                B   131    			inc ix								001EBD 18 12               B   132    			jr not_traditional_prefix_byte
                           B   133    
001EBF FEFD                B   134    not_dd		cp 0fdh
001EC1 20 0E               B   135    			jr nz,not_traditional_prefix_byte
001EC3 CD DA 20 00         B   136    do_fd		call check_nxt_byte_prefix
001EC7 CA 3F 1E 00         B   137    			jr z,dis_instr	
001ECB FDCB00DE            B   138    			set sub_iy_prefix,(iy)
001ECF 18 E0               B   139    			jr xdcb_query
                           B   140    
001ED1                     B   141    not_traditional_prefix_byte
                           B   142    
                           B   143    ;----------------------------------------------
                           B   144    
001ED1 DD7E00              B   145    			ld a,(ix)	
001ED4 E6C0                B   146    			and 11000000b			; seperate 
001ED6 07                  B   147    			rlca
001ED7 07                  B   148    			rlca
001ED8 FD77 01             B   149    			ld (iy+var_x),a			;var x= val
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  71


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   150    			
001EDB DD7E00              B   151    			ld a,(ix)
001EDE E638                B   152    			and 00111000b
001EE0 CB3F                B   153    			srl a
001EE2 CB3F                B   154    			srl a
001EE4 CB3F                B   155    			srl a	
001EE6 FD77 02             B   156    			ld (iy+var_y),a			;var x = vl
                           B   157    
001EE9 DD7E00              B   158    			ld a,(ix)
001EEC E607                B   159    			and 00000111b
001EEE FD77 03             B   160    			ld (iy+var_z),a			;var z = va
                           B   161    			
001EF1 DD7E00              B   162    			ld a,(ix)
001EF4 E630                B   163    			and 00110000b
001EF6 CB3F                B   164    			srl a
001EF8 CB3F                B   165    			srl a
001EFA CB3F                B   166    			srl a
001EFC CB3F                B   167    			srl a
001EFE FD77 04             B   168    			ld (iy+var_p),a			; var p = v
                           B   169    			
001F01 DD7E00              B   170    			ld a,(ix)
001F04 E608                B   171    			and 00001000b
001F06 CB3F                B   172    			srl a
001F08 CB3F                B   173    			srl a
001F0A CB3F                B   174    			srl a
001F0C FD77 05             B   175    			ld (iy+var_q),a				;var q 
                           B   176    
001F0F CD E8 20 00         B   177    			call find_instruction_ascii		; g
                           B   178    	
                           B   179    ;----------------------------------------------
                           B   180    
001F13 78                  B   181    index_table	ld a,b							; a
001F14 B7                  B   182    			or a
001F15 28 07               B   183    			jr z,parse_instr				; m
001F17 CB7E                B   184    d_filp		bit 7,(hl)						; w
001F19 23                  B   185    			inc hl							; o
001F1A 28 FB               B   186    			jr z,d_filp					
001F1C 10 F9               B   187    			djnz d_filp
                           B   188    										
                           B   189    			
001F1E FD21 B6 23 00       B   190    parse_instr	ld iy,opcode_vars
001F23 01000000            B   191    			ld bc,0
001F27 7E                  B   192    			ld a,(hl)						;ge
001F28 FE80                B   193    			cp 80h
001F2A C8                  B   194    			ret z
001F2B E67F                B   195    			and 7fh
                           B   196    			
001F2D FE26                B   197    			cp '&'							;sy
001F2F 20 28               B   198    			jr nz,not_adlsym
001F31 FDCB007E            B   199    			bit show_adl_prefix,(iy)		;do
001F35 CA C3 20 00         B   200    			jr z,next_opcode_ascii_char
001F39 0600                B   201    			ld b,0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  72


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
001F3B FDCB006E            B   202    			bit dot_l_prefix,(iy)
001F3F 28 02               B   203    			jr z,naplsb
001F41 CBC0                B   204    			set 0,b
001F43 FDCB0076            B   205    naplsb		bit il_prefix,(iy)
001F47 28 02               B   206    			jr z,napmsb
001F49 CBC8                B   207    			set 1,b
001F4B E5                  B   208    napmsb		push hl
001F4C 21 15 29 00         B   209    			ld hl,adl_prefix_list
001F50 CD 13 1F 00         B   210    			call index_table				; r
001F54 E1                  B   211    			pop hl
001F55 C3 C3 20 00         B   212    			jp next_opcode_ascii_char
                           B   213    
001F59 FE5E                B   214    not_adlsym	cp '^'							;sy
001F5B 20 0D               B   215    			jr nz,d_not_imm8
001F5D DD23                B   216    			inc ix							;th
001F5F DD7E00              B   217    			ld a,(ix)
001F62 CD 7B 23 00         B   218    			call show_hex_byte
001F66 C3 C3 20 00         B   219    			jp next_opcode_ascii_char
                           B   220    					
001F6A FE21                B   221    d_not_imm8	cp '!'							;sy
001F6C 20 26               B   222    			jr nz,d_not_imm16					001F6E 11020000            B   223    			ld de,2
001F72 FDCB0076            B   224    			bit il_prefix,(iy)				;ad
001F76 28 08               B   225    			jr z,imm16
001F78 13                  B   226    			inc de
001F79 DD7E03              B   227    			ld a,(ix+3)
001F7C CD 7B 23 00         B   228    			call show_hex_byte
001F80 DD7E02              B   229    imm16		ld a,(ix+2)						;sh
001F83 CD 7B 23 00         B   230    			call show_hex_byte			
001F87 DD7E01              B   231    			ld a,(ix+1)						;th
001F8A CD 7B 23 00         B   232    			call show_hex_byte
001F8E DD19                B   233    			add ix,de						;ad
001F90 C3 C3 20 00         B   234    			jp next_opcode_ascii_char
                           B   235    
001F94 FE2F                B   236    d_not_imm16	cp '/'							;sy
001F96 20 36               B   237    			jr nz,d_not_sb
001F98 FDCB0066            B   238    			bit ddcb_fdcb_prefix,(iy)
001F9C 28 05               B   239    			jr z,norm_dbyte
001F9E DD7EFF              B   240    			ld a,(ix-1)						;if
001FA1 18 05               B   241    			jr xdcb_dbyte
001FA3 DD23                B   242    norm_dbyte	inc ix
001FA5 DD7E00              B   243    			ld a,(ix)						;th
001FA8 CB7F                B   244    xdcb_dbyte	bit 7,a
001FAA 20 10               B   245    			jr nz,d_sbin					;sh
001FAC F5                  B   246    			push af
001FAD 3E2B                B   247    			ld a,'+'
001FAF CD 8C 23 00         B   248    			call show_ascii_char
001FB3 F1                  B   249    			pop af
001FB4 CD 7B 23 00         B   250    			call show_hex_byte
001FB8 C3 C3 20 00         B   251    			jp next_opcode_ascii_char
001FBC F5                  B   252    d_sbin		push af
001FBD 3E2D                B   253    			ld a,'-'
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  73


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
001FBF CD 8C 23 00         B   254    			call show_ascii_char
001FC3 F1                  B   255    			pop af
001FC4 ED44                B   256    			neg
001FC6 CD 7B 23 00         B   257    			call show_hex_byte
001FCA C3 C3 20 00         B   258    			jp next_opcode_ascii_char
                           B   259    			
001FCE FE64                B   260    d_not_sb	cp 'd'							;sy
001FD0 20 1E               B   261    			jr nz,d_not_pcdip
001FD2 DD23                B   262    			inc ix
001FD4 01000000            B   263    			ld bc,0
001FD8 DD7E00              B   264    			ld a,(ix)
001FDB CB7F                B   265    			bit 7,a
001FDD 28 01               B   266    			jr z,d_spcd_pos
001FDF 0B                  B   267    			dec bc
001FE0 4F                  B   268    d_spcd_pos	ld c,a
001FE1 03                  B   269    			inc bc
001FE2 DDE5                B   270    			push ix
001FE4 DD09                B   271    			add ix,bc
001FE6 CD 98 23 00         B   272    			call show_ix
001FEA DDE1                B   273    			pop ix
001FEC C3 C3 20 00         B   274    			jp next_opcode_ascii_char
                           B   275    
001FF0 FE3E                B   276    d_not_pcdip	cp '>'							;sy
001FF2 20 16               B   277    			jr nz,d_not_sdig
001FF4 23                  B   278    			inc hl							;th
001FF5 01000000            B   279    			ld bc,0
001FF9 4E                  B   280    			ld c,(hl)
001FFA FD21 B6 23 00       B   281    			ld iy,opcode_vars
001FFF FD09                B   282    			add iy,bc
002001 FD7E00              B   283    			ld a,(iy)						;a 
002004 C630                B   284    			add a,30h						;co
002006 C3 BF 20 00         B   285    			jp d_output_char
                           B   286    
00200A FE5F                B   287    d_not_sdig	cp '_'
00200C 20 12               B   288    			jr nz,d_nhlsubst				; s
00200E E5                  B   289    			push hl
00200F 21 ED 28 00         B   290    			ld hl,hl_subs
002013 CD CB 20 00         B   291    hl_subst	call prefix_to_offset
002017 CD 13 1F 00         B   292    			call index_table				; r
00201B E1                  B   293    			pop hl
00201C C3 C3 20 00         B   294    			jp next_opcode_ascii_char
                           B   295    			
002020 FE7C                B   296    d_nhlsubst	cp '|'
002022 20 07               B   297    			jr nz,d_noinvhls
002024 E5                  B   298    			push hl
002025 21 F3 28 00         B   299    			ld hl,inv_hl_subs
002029 18 E8               B   300    			jr hl_subst
                           B   301    			
00202B FE68                B   302    d_noinvhls	cp 'h'							;sy
00202D 20 07               B   303    			jr nz,d_nhsubst
00202F E5                  B   304    			push hl
002030 21 F9 28 00         B   305    			ld hl,h_subs
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  74


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002034 18 DD               B   306    			jr hl_subst
                           B   307    			
002036 FE6C                B   308    d_nhsubst	cp 'l'							;sy
002038 20 07               B   309    			jr nz,d_nlsubst
00203A E5                  B   310    			push hl
00203B 21 00 29 00         B   311    			ld hl,l_subs
00203F 18 D2               B   312    			jr hl_subst
                           B   313    			
002041 FE24                B   314    d_nlsubst	cp '$'
002043 20 07               B   315    			jr nz,d_nihlsubst				; s
002045 E5                  B   316    			push hl
002046 21 07 29 00         B   317    			ld hl,ind_hl_subs
00204A 18 C7               B   318    			jr hl_subst
                           B   319    
                           B   320    
00204C                     B   321    d_nihlsubst	
                           B   322    
00204C FE7E                B   323    			cp '~'							; s
00204E 20 1F               B   324    			jr nz,ntable_r
002050 11 42 28 00         B   325    			ld de,table_r
002054 23                  B   326    do_table 	inc hl
002055 01000000            B   327    			ld bc,0							; t
002059 4E                  B   328    			ld c,(hl)
00205A FD21 B6 23 00       B   329    			ld iy,opcode_vars
00205F FD09                B   330    			add iy,bc
002061 FD4600              B   331    			ld b,(iy)						;in
002064 E5                  B   332    			push hl
002065 EB                  B   333    			ex de,hl
002066 CD 13 1F 00         B   334    			call index_table				; r
00206A E1                  B   335    			pop hl
00206B C3 C3 20 00         B   336    			jp next_opcode_ascii_char
                           B   337    			
00206F 11 4D 28 00         B   338    ntable_r	ld de,table_r2					; s
002073 FE3D                B   339    			cp '='
002075 28 DD               B   340    			jr z,do_table
                           B   341    			
002077 11 58 28 00         B   342    			ld de,table_rp					; s
00207B FE40                B   343    			cp '@'
00207D 28 D5               B   344    			jr z,do_table 
                           B   345    			
00207F 11 5F 28 00         B   346    			ld de,table_rp2					; s
002083 FE2A                B   347    			cp '*'
002085 28 CD               B   348    			jr z,do_table
                           B   349    			
002087 11 C5 28 00         B   350    			ld de,table_rp3					; s
00208B FE3C                B   351    			cp '<'
00208D 28 C5               B   352    			jr z,do_table
                           B   353    			
00208F 11 CD 28 00         B   354    			ld de,table_rp4					; s
002093 FE7D                B   355    			cp '}'
002095 28 BD               B   356    			jr z,do_table
                           B   357    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  75


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002097 11 67 28 00         B   358    			ld de,table_cc					; s
00209B FE23                B   359    			cp '#'
00209D 28 B5               B   360    			jr z,do_table 
                           B   361    			
00209F 11 73 28 00         B   362    			ld de,table_alu					; s
0020A3 FE3A                B   363    			cp ':'
0020A5 28 AD               B   364    			jr z,do_table 
                           B   365    			
0020A7 11 9F 28 00         B   366    			ld de,table_rot					; s
0020AB FE25                B   367    			cp '%'
0020AD 28 A5               B   368    			jr z,do_table 
                           B   369    			
0020AF 11 DD 28 00         B   370    			ld de,table_rst					; s
0020B3 FE3B                B   371    			cp ';'
0020B5 28 9D               B   372    			jr z,do_table 
                           B   373    
0020B7 11 D5 28 00         B   374    			ld de,table_rp5					; s
0020BB FE7B                B   375    			cp '{'
0020BD 28 95               B   376    			jr z,do_table 
                           B   377    
0020BF                     B   378    ntable_bli
                           B   379    
                           B   380    ;----------------------------------------------
                           B   381    
0020BF                     B   382    d_output_char
                           B   383    
0020BF CD 8C 23 00         B   384    			call show_ascii_char
                           B   385    
0020C3                     B   386    next_opcode_ascii_char
                           B   387    
0020C3 CB7E                B   388    			bit 7,(hl)						;if
0020C5 C0                  B   389    			ret nz
0020C6 23                  B   390    			inc hl
0020C7 C3 1E 1F 00         B   391    			jp parse_instr
                           B   392    			
                           B   393    			
                           B   394    ;----------------------------------------------
                           B   395    
                           B   396    
0020CB                     B   397    prefix_to_offset
                           B   398    
0020CB 0602                B   399    			ld b,2							;se
0020CD FDCB005E            B   400    			bit sub_iy_prefix,(iy)
0020D1 C0                  B   401    			ret nz
0020D2 05                  B   402    			dec b
0020D3 FDCB0056            B   403    			bit sub_ix_prefix,(iy)
0020D7 C0                  B   404    			ret nz
0020D8 05                  B   405    			dec b
0020D9 C9                  B   406    			ret
                           B   407    			
                           B   408    			
0020DA                     B   409    check_nxt_byte_prefix			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  76


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   410    
0020DA DD23                B   411    			inc ix
0020DC DD7E00              B   412    			ld a,(ix)
0020DF FEDD                B   413    			cp 0ddh
0020E1 C8                  B   414    			ret z
0020E2 FEED                B   415    			cp 0edh
0020E4 C8                  B   416    			ret z
0020E5 FEFD                B   417    			cp 0fdh
0020E7 C9                  B   418    			ret
                           B   419    			
                           B   420    			
                           B   421    ;==============================================
                           B   422    ;- Find instruction ascii ---------------------
                           B   423    ;==============================================
                           B   424    
                           B   425    ; Returns HL = ptr to ascii name
                           B   426    ;          B = group index (number of instructi
                           B   427    
0020E8                     B   428    find_instruction_ascii
                           B   429    
0020E8 0600                B   430    			ld b,0						; defau
                           B   431    
0020EA FDCB0066            B   432    			bit ddcb_fdcb_prefix,(iy)	; Was t
0020EE 28 12               B   433    			jr z,not_ddcb_fdcb_inst
0020F0 21 1C 28 00         B   434    			ld hl,ddcb_fdcb_z6		
0020F4 FD46 01             B   435    			ld b,(iy+var_x)				; x is 
0020F7 FD7E 03             B   436    			ld a,(iy+var_z)
0020FA FE06                B   437    			cp 6
0020FC C8                  B   438    			ret z
0020FD 21 E4 27 00         B   439    			ld hl,ddcb_fdcb_zn6					002101 C9                  B   440    			ret
                           B   441    			
                           B   442    ;==============================================
                           B   443    
002102                     B   444    not_ddcb_fdcb_inst
                           B   445    
002102 FDCB0046            B   446    			bit cb_prefix,(iy)			;is thi
002106 28 08               B   447    			jr z,not_cb_inst
002108 21 6C 25 00         B   448    			ld hl,cb_group		
00210C FD46 01             B   449    			ld b,(iy+var_x)				; x is 
00210F C9                  B   450    			ret
                           B   451    
                           B   452    ;==============================================
                           B   453    
002110                     B   454    not_cb_inst
                           B   455    
002110 FDCB004E            B   456    			bit ed_prefix,(iy)			;is thi
002114 CA 35 22 00         B   457    			jr z,not_ed_inst
                           B   458    
002118 FD7E 01             B   459    			ld a,(iy+var_x)				;x = 0
00211B B7                  B   460    			or a
00211C 20 56               B   461    			jr nz,notedx0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  77


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   462    		
                           B   463    			
00211E FD7E 03             B   464    			ld a,(iy+var_z)				
002121 B7                  B   465    			or a
002122 20 0D               B   466    			jr nz,notedx0z0
002124 21 93 25 00         B   467    			ld hl,ed_x0_z0_yn6			;x0 / z
002128 FD7E 02             B   468    			ld a,(iy+var_y)
00212B FE06                B   469    			cp 6
00212D C0                  B   470    			ret nz
00212E 0601                B   471    			ld b,1
002130 C9                  B   472    			ret
                           B   473    
002131 FE01                B   474    notedx0z0	cp 1
002133 20 0D               B   475    			jr nz,notedx0z1
002135 21 A4 25 00         B   476    			ld hl,ed_x0_z1				;x0 / z
002139 FD7E 02             B   477    			ld a,(iy+var_y)
00213C FE06                B   478    			cp 6
00213E C0                  B   479    			ret nz
00213F 0601                B   480    			ld b,1
002141 C9                  B   481    			ret
                           B   482    
002142 FE02                B   483    notedx0z1	cp 2
002144 20 05               B   484    			jr nz,notedx0z2
002146 21 BA 25 00         B   485    			ld hl,ed_x0_z2				;x0 / z
00214A C9                  B   486    			ret
                           B   487    
00214B FE03                B   488    notedx0z2	cp 3
00214D 20 05               B   489    			jr nz,notedx0z3
00214F 21 C6 25 00         B   490    			ld hl,ed_x0_z3				;x0 / z
002153 C9                  B   491    			ret
                           B   492    			
002154 FE04                B   493    notedx0z3	cp 4
002156 20 05               B   494    			jr nz,notedx0z4
002158 21 D2 25 00         B   495    			ld hl,ed_x0_z4				;x0 / z
00215C C9                  B   496    			ret
                           B   497    
00215D FE06                B   498    notedx0z4	cp 6
00215F 20 05               B   499    			jr nz,notedx0z6				;x0 / z
002161 21 DC 25 00         B   500    			ld hl,ed_x0_z6
002165 C9                  B   501    			ret
                           B   502    
002166 FE07                B   503    notedx0z6	cp 7
002168 C2 3F 28 00         B   504    			jr nz,bad_opcode			;x0 / z
00216C 21 E7 25 00         B   505    			ld hl,ed_x0_z7
002170 FD46 05             B   506    			ld b,(iy+var_q)
002173 C9                  B   507    			ret
                           B   508    			
                           B   509    ;----------------------------------------------
                           B   510    			
002174 FE01                B   511    notedx0		cp 1	
002176 20 68               B   512    			jr nz,ed_xn1
                           B   513    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  78


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002178 FD7E 03             B   514    			ld a,(iy+var_z)					;x 
00217B B7                  B   515    			or a
00217C 20 0D               B   516    			jr nz,ed_x1_zn0
00217E 21 FC 25 00         B   517    			ld hl,ed_x1_z0_yn6				;z 
002182 FD7E 02             B   518    			ld a,(iy+var_y)
002185 FE06                B   519    			cp 6
002187 C0                  B   520    			ret nz
002188 0601                B   521    			ld b,1
00218A C9                  B   522    			ret
                           B   523    			
00218B FE01                B   524    ed_x1_zn0	cp 1
00218D 20 0D               B   525    			jr nz,ed_x1_zn1
00218F 21 0C 26 00         B   526    			ld hl,ed_x1_z1_yn6				;z 
002193 FD7E 02             B   527    			ld a,(iy+var_y)
002196 FE06                B   528    			cp 6
002198 C0                  B   529    			ret nz
002199 0601                B   530    			ld b,1
00219B C9                  B   531    			ret
                           B   532    		
00219C FE02                B   533    ed_x1_zn1	cp 2
00219E 20 08               B   534    			jr nz,ed_x1_zn2					;z 
0021A0 21 21 26 00         B   535    			ld hl,ed_x1_z2	
0021A4 FD46 05             B   536    			ld b,(iy+var_q)
0021A7 C9                  B   537    			ret
                           B   538    
0021A8 FE03                B   539    ed_x1_zn2	cp 3
0021AA 20 08               B   540    			jr nz,ed_x1_zn3					;z 
0021AC 21 37 26 00         B   541    			ld hl,ed_x1_z3	
0021B0 FD46 05             B   542    			ld b,(iy+var_q)
0021B3 C9                  B   543    			ret
                           B   544    			
0021B4 FE04                B   545    ed_x1_zn3	cp 4							;z 
0021B6 20 08               B   546    			jr nz,ed_x1_zn4
0021B8 21 4C 26 00         B   547    			ld hl,ed_x1_z4
0021BC FD46 02             B   548    			ld b,(iy+var_y)
0021BF C9                  B   549    			ret
                           B   550    			
0021C0 FE05                B   551    ed_x1_zn4	cp 5
0021C2 20 08               B   552    			jr nz,ed_x1_zn5
0021C4 21 84 26 00         B   553    			ld hl,ed_x1_z5					;z 
0021C8 FD46 02             B   554    			ld b,(iy+var_y)
0021CB C9                  B   555    			ret
                           B   556    			
0021CC FE06                B   557    ed_x1_zn5	cp 6
0021CE 20 08               B   558    			jr nz,ed_x1_zn6					;z=
0021D0 21 B3 26 00         B   559    			ld hl,ed_x1_z6
0021D4 FD46 02             B   560    			ld b,(iy+var_y)
0021D7 C9                  B   561    			ret
                           B   562    			
0021D8 21 D8 26 00         B   563    ed_x1_zn6	ld hl,ed_x1_z7					;z=
0021DC FD46 02             B   564    			ld b,(iy+var_y)
0021DF C9                  B   565    			ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  79


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   566    
                           B   567    ;----------------------------------------------
                           B   568    				
0021E0 FE02                B   569    ed_xn1		cp 2
0021E2 20 2E               B   570    			jr nz,ed_xn2
                           B   571    			
0021E4 FD46 02             B   572    			ld b,(iy+var_y)
0021E7 FD7E 03             B   573    			ld a,(iy+var_z)
0021EA B7                  B   574    			or a
0021EB 20 05               B   575    			jr nz,edx2zn0
0021ED 21 FC 26 00         B   576    			ld hl,ed_x2_z0					;x=
0021F1 C9                  B   577    			ret
                           B   578    
0021F2 FE01                B   579    edx2zn0		cp 1
0021F4 20 05               B   580    			jr nz,edx2zn1
0021F6 21 16 27 00         B   581    			ld hl,ed_x2_z1					;x=
0021FA C9                  B   582    			ret
                           B   583    
0021FB FE02                B   584    edx2zn1		cp 2
0021FD 20 05               B   585    			jr nz,edx2zn2
0021FF 21 30 27 00         B   586    			ld hl,ed_x2_z2					;x=
002203 C9                  B   587    			ret
                           B   588    
002204 FE03                B   589    edx2zn2		cp 3
002206 20 05               B   590    			jr nz,edx2zn3
002208 21 60 27 00         B   591    			ld hl,ed_x2_z3					;x=
00220C C9                  B   592    			ret
                           B   593    
00220D 21 92 27 00         B   594    edx2zn3		ld hl,ed_x2_z4					;x=
002211 C9                  B   595    			ret
                           B   596    
                           B   597    ;----------------------------------------------
                           B   598    
002212 FE03                B   599    ed_xn2		cp 3
002214 20 18               B   600    			jr nz,ed_xn3
                           B   601    			
002216 FD46 02             B   602    			ld b,(iy+var_y)
002219 FD7E 03             B   603    			ld a,(iy+var_z)
00221C FE02                B   604    			cp 2
00221E 20 05               B   605    			jr nz,edx3zn2
002220 21 C8 27 00         B   606    			ld hl,ed_x3_z2					;x=
002224 C9                  B   607    			ret
002225 FE03                B   608    edx3zn2		cp 3
002227 20 05               B   609    			jr nz,edx3zn3
002229 21 D6 27 00         B   610    			ld hl,ed_x3_z3					;x=
00222D C9                  B   611    			ret
                           B   612    
00222E                     B   613    edx3zn3
                           B   614    
00222E                     B   615    ed_xn3
                           B   616    
                           B   617    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  80


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   618    
00222E                     B   619    invalid_op
00222E 21 3F 28 00         B   620    			ld hl,bad_opcode				; x
002232 0600                B   621    			ld b,0
002234 C9                  B   622    			ret
                           B   623    			
                           B   624    			
                           B   625    ;========= UNPREFIXED INSTRUCTION =============
                           B   626    
                           B   627    
002235 FD7E 01             B   628    not_ed_inst	ld a,(iy+var_x)				; is X 
002238 B7                  B   629    			or a
002239 C2 D1 22 00         B   630    			jr nz,x_not_zero
                           B   631    
                           B   632    ;----------------------------------------------
                           B   633    
                           B   634    
00223D FD7E 03             B   635    			ld a,(iy+var_z)				;x = 0
002240 B7                  B   636    			or a
002241 20 14               B   637    			jr nz,x0_z_not_zero
002243 21 BE 23 00         B   638    			ld hl,x0_z0
002247 FD7E 02             B   639    			ld a,(iy+var_y)				;y is t
00224A 47                  B   640    			ld b,a
00224B D604                B   641    			sub 4
00224D FD77 06             B   642    			ld (iy+var_calc),a			;var_ca
002250 78                  B   643    			ld a,b
002251 FE04                B   644    			cp 4
002253 D8                  B   645    			ret c
002254 0604                B   646    			ld b,4						;if y >
002256 C9                  B   647    			ret
                           B   648    			
002257                     B   649    x0_z_not_zero		
                           B   650    			
002257 FE01                B   651    			cp 1
002259 20 1A               B   652    			jr nz,x0_z_not_one
00225B FD7E 02             B   653    			ld a,(iy+var_y)				;x=0/z=
00225E FE06                B   654    			cp 6
002260 20 0B               B   655    			jr nz,x0z1yn6
002262 CD 71 23 00         B   656    			call test_ixiy_prefix		;if y=6
002266 28 05               B   657    			jr z,x0z1yn6				;altern
002268 21 F1 23 00         B   658    			ld hl,x0_z1_y6
00226C C9                  B   659    			ret
                           B   660    
00226D 21 DE 23 00         B   661    x0z1yn6		ld hl,x0_z1					;x=0, z
002271 FD46 05             B   662    			ld b,(iy+var_q)				;q is t
002274 C9                  B   663    			ret 
                           B   664    			
002275                     B   665    x0_z_not_one
                           B   666    
002275 FE02                B   667    			cp 2
002277 20 08               B   668    			jr nz,x0_z_not_two
002279 21 F9 23 00         B   669    			ld hl,x0_z2
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  81


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
00227D FD46 02             B   670    			ld b,(iy+var_y)				;y is t
002280 C9                  B   671    			ret
                           B   672    			
002281                     B   673    x0_z_not_two
                           B   674    
002281 FE03                B   675    			cp 3
002283 20 08               B   676    			jr nz,x0_z_not_three
002285 21 45 24 00         B   677    			ld hl,x0_z3
002289 FD46 05             B   678    			ld b,(iy+var_q)				;q is t
00228C C9                  B   679    			ret
                           B   680    			
00228D                     B   681    x0_z_not_three
                           B   682    
00228D FE04                B   683    			cp 4
00228F 20 05               B   684    			jr nz,x0_z_not_four
002291 21 55 24 00         B   685    			ld hl,x0_z4					;no ini
002295 C9                  B   686    			ret			
                           B   687    			
002296                     B   688    x0_z_not_four
                           B   689    
002296 FE05                B   690    			cp 5
002298 20 05               B   691    			jr nz,x0_z_not_five
00229A 21 5D 24 00         B   692    			ld hl,x0_z5					;no ini
00229E C9                  B   693    			ret				
                           B   694    			
00229F                     B   695    x0_z_not_five
                           B   696    
00229F FE06                B   697    			cp 6
0022A1 20 1A               B   698    			jr nz,x0_z_not_six
0022A3 21 65 24 00         B   699    			ld hl,x0_z6					;normal
0022A7 FD7E 02             B   700    			ld a,(iy+var_y)
0022AA FE07                B   701    			cp 7
0022AC C0                  B   702    			ret nz
0022AD FDCB0056            B   703    			bit sub_ix_prefix,(iy)
0022B1 20 05               B   704    			jr nz,altx0z6
0022B3 FDCB005E            B   705    			bit sub_iy_prefix,(iy)
0022B7 C8                  B   706    			ret z	
0022B8 21 6E 24 00         B   707    altx0z6		ld hl,alt_x0_z6				;if dd/
0022BC C9                  B   708    			ret
                           B   709    
                           B   710    
0022BD                     B   711    x0_z_not_six
                           B   712    			
0022BD 21 76 24 00         B   713    			ld hl,x0_z7					;x=0, z
0022C1 FD46 02             B   714    			ld b,(iy+var_y)				;y is n
0022C4 CD 71 23 00         B   715    			call test_ixiy_prefix
0022C8 C8                  B   716    			ret z
0022C9 21 90 24 00         B   717    altx0z7		ld hl,alt_x0_z7				;if dd/
0022CD FD46 05             B   718    			ld b,(iy+var_q)				;this i
0022D0 C9                  B   719    			ret
                           B   720    
                           B   721    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  82


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   722    
0022D1 FE01                B   723    x_not_zero	cp 1						; is x 
0022D3 20 32               B   724    			jr nz,x_not_one
                           B   725    			
0022D5 21 A2 24 00         B   726    			ld hl,x1_table				; x=1
0022D9 CD 71 23 00         B   727    			call test_ixiy_prefix
0022DD 20 11               B   728    			jr nz,pref_x1
0022DF FD7E 02             B   729    			ld a,(iy+var_y)
0022E2 FE06                B   730    			cp 6
0022E4 C0                  B   731    			ret nz
0022E5 FD7E 03             B   732    			ld a,(iy+var_z)
0022E8 FE06                B   733    			cp 6
0022EA C0                  B   734    			ret nz
0022EB 21 C0 24 00         B   735    			ld hl,x1_y6_z6				;if y=6
0022EF C9                  B   736    			ret
                           B   737    
0022F0 FD7E 02             B   738    pref_x1		ld a,(iy+var_y)				
0022F3 FE06                B   739    			cp 6
0022F5 20 05               B   740    			jr nz,x1yn6
0022F7 21 AC 24 00         B   741    			ld hl,x1_y6
0022FB C9                  B   742    			ret
                           B   743    			
0022FC FD7E 03             B   744    x1yn6		ld a,(iy+var_z)
0022FF FE06                B   745    			cp 6
002301 C0                  B   746    			ret nz
002302 21 B6 24 00         B   747    			ld hl,x1_z6
002306 C9                  B   748    			ret
                           B   749    			
                           B   750    ;----------------------------------------------
                           B   751    			
002307 FE02                B   752    x_not_one	cp 2						; is x 
002309 20 05               B   753    			jr nz,x_not_two
00230B 21 C4 24 00         B   754    			ld hl,x2_table				; no in
00230F C9                  B   755    			ret
                           B   756    			
                           B   757    ;----------------------------------------------
                           B   758    
002310 FD7E 03             B   759    x_not_two	ld a,(iy+var_z)				; x mus
002313 B7                  B   760    			or a
002314 20 05               B   761    			jr nz,x3_z_not_zero
002316 21 C9 24 00         B   762    			ld hl,x3_z0					; no in
00231A C9                  B   763    			ret
                           B   764    						
00231B                     B   765    x3_z_not_zero
                           B   766    
00231B FE01                B   767    			cp 1
00231D 20 11               B   768    			jr nz,x3_z_not_one
00231F 21 D1 24 00         B   769    			ld hl,x3_z1_q0
002323 FD7E 05             B   770    			ld a,(iy+var_q)
002326 B7                  B   771    			or a
002327 C8                  B   772    			ret z						; no in
002328 21 D9 24 00         B   773    			ld hl,x3_z1_q1
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  83


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
00232C FD46 04             B   774    			ld b,(iy+var_p)				; index
00232F C9                  B   775    			ret
                           B   776    
002330                     B   777    x3_z_not_one
                           B   778    
002330 FE02                B   779    			cp 2
002332 20 05               B   780    			jr nz,x3_z_not_two
002334 21 F0 24 00         B   781    			ld hl,x3_z2					;no ini
002338 C9                  B   782    			ret
                           B   783    
002339                     B   784    x3_z_not_two
                           B   785    
002339 FE03                B   786    			cp 3
00233B 20 08               B   787    			jr nz,x3_z_not_three
00233D 21 F9 24 00         B   788    			ld hl,x3_z3
002341 FD46 02             B   789    			ld b,(iy+var_y)				;index 
002344 C9                  B   790    			ret
                           B   791    
002345                     B   792    x3_z_not_three
                           B   793    
002345 FE04                B   794    			cp 4
002347 20 05               B   795    			jr nz,x3_z_not_four
002349 21 2E 25 00         B   796    			ld hl,x3_z4				;no initial
00234D C9                  B   797    			ret						
                           B   798    
                           B   799    
00234E                     B   800    x3_z_not_four
                           B   801    
00234E FE05                B   802    			cp 5
002350 20 11               B   803    			jr nz,x3_z_not_five
002352 21 39 25 00         B   804    			ld hl,x3_z5_q0
002356 FD7E 05             B   805    			ld a,(iy+var_q)
002359 B7                  B   806    			or a
00235A C8                  B   807    			ret z						;no ind
00235B 21 42 25 00         B   808    			ld hl,x3_z5_q1
00235F FD46 04             B   809    			ld b,(iy+var_p)				;else i
002362 C9                  B   810    			ret
                           B   811    
002363                     B   812    x3_z_not_five
                           B   813    
002363 FE06                B   814    			cp 6
002365 20 05               B   815    			jr nz,x3_z_not_six
002367 21 60 25 00         B   816    			ld hl,x3_z6					;no ind
00236B C9                  B   817    			ret
                           B   818    
00236C                     B   819    x3_z_not_six
                           B   820    
00236C 21 64 25 00         B   821    			ld hl,x3_z7					;x=3, z
002370 C9                  B   822    			ret
                           B   823    
                           B   824    
                           B   825    ;==============================================
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  84


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   826    
002371                     B   827    test_ixiy_prefix
                           B   828    
002371 FDCB0056            B   829    			bit sub_ix_prefix,(iy)
002375 C0                  B   830    			ret nz
002376 FDCB005E            B   831    			bit sub_iy_prefix,(iy)
00237A C9                  B   832    			ret
                           B   833    			
                           B   834    ;==============================================
                           B   835    
                           B   836    
00237B                     B   837    show_hex_byte
                           B   838    
00237B E5                  B   839    			push hl
00237C 21 28 29 00         B   840    			ld hl,output_byte_txt
002380 E5                  B   841    			push hl
002381 CD 9C 10 00         B   842    			call hexbyte_to_ascii
002385 E1                  B   843    			pop hl
002386 CD 51 0F 00         B   844    			call os_print_string
00238A E1                  B   845    			pop hl
00238B C9                  B   846    			ret
                           B   847    			
                           B   848    
00238C                     B   849    show_ascii_char
                           B   850    
00238C E5                  B   851    			push hl
00238D 21 2B 29 00         B   852    			ld hl,output_char_txt
002391 77                  B   853    			ld (hl),a
002392 CD 51 0F 00         B   854    			call os_print_string
002396 E1                  B   855    			pop hl
002397 C9                  B   856    			ret
                           B   857    		
                           B   858    		
002398 DD22 25 29 00       B   859    show_ix		ld (d_work_address),ix
00239D 3A 27 29 00         B   860    			ld a,(d_work_address+2)
0023A1 CD 7B 23 00         B   861    			call show_hex_byte
0023A5 3A 26 29 00         B   862    			ld a,(d_work_address+1)
0023A9 CD 7B 23 00         B   863    			call show_hex_byte
0023AD 3A 25 29 00         B   864    			ld a,(d_work_address)
0023B1 CD 7B 23 00         B   865    			call show_hex_byte
0023B5 C9                  B   866    			ret
                           B   867    			
                           B   868    ;----------------------------------------------
                           B   869    
                           B   870    ; SYMBOLS:
                           B   871    
                           B   872    ; #  CC_table
                           B   873    ; ~  r table (registers)
                           B   874    ; =  r2 table (registers 2)
                           B   875    ; @  RP table (register pairs 1)
                           B   876    ; *  RP2 table (registers pairs 2)
                           B   877    ; :  ALU table
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  85


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   878    ; %  ROT table
                           B   879    ; _  HL,IX/IY substitute selected by prefix
                           B   880    ; |  HL, IY/IX substitute based on prefix (IX/I
                           B   881    ; $  (HL),(IX+d),(IY+d) substitute selected by 
                           B   882    ; h  H,IXH/IYH substitute selected by prefix
                           B   883    ; l  L,IXL,IYL substitute selected by prefix
                           B   884    ; &  ADL prefix 
                           B   885    
                           B   886    ; ^   n (8 bit immediate)
                           B   887    ; !   nn (16 or 24 bit immediate)
                           B   888    ; d   8 bit signed jump displacement from PC
                           B   889    ; /   8 bit signed byte used for IX+d, IY+d ins
                           B   890    ; >   single digit used by BIT,SET,RES instruct
                           B   891    ; <   RP3 table (register pairs 3)
                           B   892    ; }   RP4 table (register pairs 4)
                           B   893    ; ;   RST table
                           B   894    ; {   RP5 table (register pairs 5)
                           B   895    
0023B6                     B   896    opcode_vars
                           B   897    
0023B6 00                  B   898    prefix_bits_loc	db 0	
0023B7 00                  B   899    var_x_loc		db 0	
0023B8 00                  B   900    var_y_loc		db 0	
0023B9 00                  B   901    var_z_loc		db 0	
0023BA 00                  B   902    var_p_loc		db 0	
0023BB 00                  B   903    var_q_loc		db 0
0023BC 00                  B   904    var_calc_loc	db 0
0023BD 01                  B   905    var_adl_loc		db 1
                           B   906    
       00000000            B   907    prefix_bits		equ opcode_vars-prefix_bits_loc
       00000001            B   908    var_x			equ var_x_loc-opcode_vars
       00000002            B   909    var_y			equ var_y_loc-opcode_vars
       00000003            B   910    var_z			equ var_z_loc-opcode_vars
       00000004            B   911    var_p			equ var_p_loc-opcode_vars
       00000005            B   912    var_q			equ var_q_loc-opcode_vars
       00000006            B   913    var_calc		equ var_calc_loc-opcode_vars
       00000007            B   914    var_adl			equ var_adl_loc-opcode_vars
                           B   915    
                           B   916    ;---- Unprefixed opcodes ----------------------
                           B   917    
                           B   918    
0023BE 4E4FD0              B   919    x0_z0		db 'NO','P'+80h				; y0
0023C1 45582041 462C4146   B   920    			db 'EX AF,AF',27h+80h		; y1 
0023C9 A7 
0023CA 444A4E5A 206480     B   921    			db 'DJNZ ','d',80h			; y2
0023D1 4A522064 80         B   922    			db 'JR ','d',80h			; y3
0023D6 4A522023 06 2C6480   B   923    			db 'JR #',var_calc,',d',80h	; y4-y7
                           B   924    			
0023DE 4C442620 40 04      B   925    x0_z1		db 'LD& @',var_p,',!',80h	; q=0
0023E4 2C2180 
0023E7 41444426 205F2C40   B   926    			db 'ADD& _,@',var_p,80h		; q=1
0023EF 04 80 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  86


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0023F1 4C442620 7C2C2480   B   927    x0_z1_y6	db 'LD& |,$',80h
                           B   928    
0023F9 4C442620 28424329   B   929    x0_z2		db 'LD& (BC),','A'+80h		;y=0
002401 2CC1 
002403 4C442620 412C2842   B   930    			db 'LD& A,(BC',')'+80h		;y=1
00240B 43A9 
00240D 4C442620 28444529   B   931    			db 'LD& (DE),','A'+80h		;y=2
002415 2CC1 
002417 4C442620 412C2844   B   932    			db 'LD& A,(DE',')'+80h		;y=3
00241F 45A9 
002421 4C442620 2821292C   B   933    			db 'LD& (!),','_'+80h		;y=4
002429 DF 
00242A 4C442620 5F2C2821   B   934    			db 'LD& _,(!',')'+80h		;y=5
002432 A9 
002433 4C442620 2821292C   B   935    			db 'LD& (!),','A'+80h		;y=6
00243B C1 
00243C 4C442620 412C2821   B   936    			db 'LD& A,(!',')'+80h		;y=7
002444 A9 
                           B   937    
002445 494E4326 2040 04    B   938    x0_z3		db 'INC& @',var_p,80h		;q=0
00244C 80 
00244D 44454326 2040 04    B   939    			db 'DEC& @',var_p,80h		;q=1
002454 80 
                           B   940    			
002455 494E4326 207E 02    B   941    x0_z4		db 'INC& ~',var_y,80h		
00245C 80 
                           B   942    
00245D 44454326 207E 02    B   943    x0_z5		db 'DEC& ~',var_y,80h		
002464 80 
                           B   944    			
002465 4C442620 7E 02      B   945    x0_z6		db 'LD& ~',var_y,',^',80h	
00246B 2C5E80 
00246E 4C442620 242C7C80   B   946    alt_x0_z6	db 'LD& $,|',80h			; when 
                           B   947    		
002476 524C43C1            B   948    x0_z7		db 'RLC','A'+80h		;y=0
00247A 525243C1            B   949    			db 'RRC','A'+80h		;y=1
00247E 524CC1              B   950    			db 'RL','A'+80h			;y=2
002481 5252C1              B   951    			db 'RR','A'+80h			;y=3
002484 4441C1              B   952    			db 'DA','A'+80h			;y=4
002487 4350CC              B   953    			db 'CP','L'+80h			;y=5
00248A 5343C6              B   954    			db 'SC','F'+80h			;y=6 (and n
00248D 4343C6              B   955    			db 'CC','F'+80h			;y=7 (and n
                           B   956    			
002490 4C442620 7B 04      B   957    alt_x0_z7	db 'LD& {',var_p,',$',80h	;q=0 (D
002496 2C2480 
002499 4C442620 242C7B 04   B   958    			db 'LD& $,{',var_p,80h		;q=1 (D
0024A1 80 
                           B   959    		
                           B   960    
                           B   961    
0024A2 4C442620 7E 02      B   962    x1_table	db 'LD& ~',var_y,',~',var_z,80h	
0024A8 2C7E 03 80 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  87


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0024AC 4C442620 7E 02      B   963    x1_y6	 	db 'LD& ~',var_y,',=',var_z,80h		0024B2 2C3D 03 80 
0024B6 4C442620 3D 02      B   964    x1_z6		db 'LD& =',var_y,',~',var_z,80h		0024BC 2C7E 03 80 
                           B   965    
0024C0 48414CD4            B   966    x1_y6_z6	db 'HAL','T'+80h
                           B   967    
                           B   968    
                           B   969    
0024C4 3A 02 7E 03 80      B   970    x2_table	db ':',var_y,'~',var_z,80h			                           B   971    			
                           B   972    		
                           B   973    		
0024C9 52455426 2023 02    B   974    x3_z0		db 'RET& #',var_y,80h
0024D0 80 
                           B   975    
0024D1 504F5026 202A 04    B   976    x3_z1_q0	db 'POP& *',var_p,80h			
0024D8 80 
0024D9 52455426 80         B   977    x3_z1_q1	db 'RET','&',80h		;p=0
0024DE 4558D8              B   978    			db 'EX','X'+80h			;p=1
0024E1 4A502620 5F80       B   979    			db 'JP& _',80h			;p=2
0024E7 4C442620 53502C5F   B   980    			db 'LD& SP,_',80h		;p=3
0024EF 80 
                           B   981    
0024F0 4A502620 23 02      B   982    x3_z2		db 'JP& #',var_y,',!',80h		
0024F6 2C2180 
                           B   983    
0024F9 4A502620 2180       B   984    x3_z3		db 'JP& !',80h			;y = 0
0024FF 43422070 667880     B   985    			db 'CB pfx',80h			;y = 1
002506 4F555420 285E292C   B   986    			db 'OUT (^),','A'+80h	;y = 2
00250E C1 
00250F 494E2041 2C285EA9   B   987    			db 'IN A,(^',')'+80h	;y = 3
002517 45582620 28535029   B   988    			db 'EX& (SP),','_',80h	;y = 4
00251F 2C5F80 
002522 45582044 452C48CC   B   989    			db 'EX DE,H','L'+80h	;y = 5
00252A 44C9                B   990    			db 'D','I'+80h			;y = 6
00252C 45C9                B   991    			db 'E','I'+80h			;y = 7
                           B   992    
00252E 43414C4C 262023 02   B   993    x3_z4		db 'CALL& #',var_y,',!',80h
002536 2C2180 
                           B   994    
002539 50555348 26202A 04   B   995    x3_z5_q0	db 'PUSH& *',var_p,80h			
002541 80 
002542 43414C4C 26202180   B   996    x3_z5_q1	db 'CALL& !',80h			;p=0
00254A 44442070 667880     B   997    			db 'DD pfx',80h			;p=1
002551 45442070 667880     B   998    			db 'ED pfx',80h			;p=2
002558 20464420 70667880   B   999    			db' FD pfx',80h			;p=3
                           B  1000    
002560 3A 02 5E80          B  1001    x3_z6		db ':',var_y,'^',80h	;ALU_table(
                           B  1002    
002564 52535426 203B 02    B  1003    x3_z7		db 'RST& ;',var_y,80h		; rst_t
00256B 80 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  88


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B  1004    
                           B  1005    
                           B  1006    ;--- CB - Prefixed op-codes--------------------
                           B  1007    
                           B  1008    
00256C 25 02 207E 03 80    B  1009    cb_group		db '%',var_y,' ~',var_z,80h		002572 42495426 203E 02    B  1010    				db 'BIT& >',var_y,',~',var_z,80
002579 2C7E 03 80 
00257D 52455326 203E 02    B  1011    				db 'RES& >',var_y,',~',var_z,80
002584 2C7E 03 80 
002588 53455426 203E 02    B  1012    				db 'SET& >',var_y,',~',var_z,80
00258F 2C7E 03 80 
                           B  1013    
                           B  1014    
                           B  1015    ;---- ED - Prefixed op-codes-------------------
                           B  1016    
002593 494E3020 7E 02      B  1017    ed_x0_z0_yn6	db 'IN0 ~',var_y,',(^',')'+80h
002599 2C285EA9 
00259D 494E3020 285EA9     B  1018    ed_x0_z0_y6		db 'IN0 (^',')'+80h	
                           B  1019    
0025A4 4F555430 20285E29   B  1020    ed_x0_z1		db 'OUT0 (^),~',var_y,80h		0025AC 2C7E 02 80 
0025B0 4C442620 49592C28   B  1021    				db 'LD& IY,(_',')'+80h			0025B8 5FA9 
                           B  1022    
0025BA 4C454126 203C 04    B  1023    ed_x0_z2		db 'LEA& <',var_p,',IX/',80h	0025C1 2C49582F 80 
0025C6 4C454126 207D 04    B  1024    ed_x0_z3		db 'LEA& }',var_p,',IY/',80h
0025CD 2C49592F 80 
0025D2 54535426 20412C7E   B  1025    ed_x0_z4		db 'TST& A,~',var_y,80h
0025DA 02 80 
                           B  1026    
0025DC 4C442620 285F292C   B  1027    ed_x0_z6		db 'LD& (_),}',var_p,80h
0025E4 7D 04 80 
                           B  1028    
0025E7 4C442620 3C 04      B  1029    ed_x0_z7		db 'LD& <',var_p,',(_',')'+80h	0025ED 2C285FA9 
0025F1 4C442620 285F292C   B  1030    				db 'LD& (_),<',var_p,80h		0025F9 3C 04 80 
                           B  1031    
0025FC 494E207E 02         B  1032    ed_x1_z0_yn6	db 'IN ~',var_y,',(BC',')'+80h
002601 2C284243 A9 
002606 494E2028 43A9       B  1033    ed_x1_z0_y6		db 'IN (C',')'+80h
                           B  1034    
00260C 4F555420 28424329   B  1035    ed_x1_z1_yn6	db 'OUT (BC),~',var_y,80h
002614 2C7E 02 80 
002618 4F555420 2843292C   B  1036    ed_x1_z1_y6		db 'OUT (C),','0'+80h
002620 B0 
                           B  1037    
002621 53424326 20484C2C   B  1038    ed_x1_z2		db 'SBC& HL,@',var_p,80h		002629 40 04 80 
00262C 41444326 20484C2C   B  1039    				db 'ADC& HL,@',var_p,80h		Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  89


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002634 40 04 80 
                           B  1040    
002637 4C442620 2821292C   B  1041    ed_x1_z3		db 'LD& (!),@',var_p,80h		00263F 40 04 80 
002642 4C442620 40 04      B  1042    				db 'LD& @',var_p,',(!',')'+80h	002648 2C2821A9 
                           B  1043    
00264C 4E45C7              B  1044    ed_x1_z4		db 'NE','G'+80h				;y=
00264F 4D4C5420 42C3       B  1045    				db 'MLT B','C'+80h			;y=
002655 4C454126 2049582C   B  1046    				db 'LEA& IX,IY/',80h			00265D 49592F80 
002661 4D4C5420 44C5       B  1047    				db 'MLT D','E'+80h			;y=
002667 54535426 20412C5E   B  1048    				db 'TST& A,^',80h			;y=
00266F 80 
002670 4D4C5420 48CC       B  1049    				db 'MLT H','L'+80h			;y=
002676 54535449 4F205E80   B  1050    				db 'TSTIO ^',80h			;y=
00267E 4D4C5420 53D0       B  1051    				db 'MLT S','P'+80h 			;y=
                           B  1052    
002684 5245544E 2680       B  1053    ed_x1_z5		db 'RETN&',80h				;y=
00268A 52455449 2680       B  1054    				db 'RETI&',80h				;y=
002690 4C454126 2049592C   B  1055    				db 'LEA& IY,IX/',80h		;y=
002698 49582F80 
00269C BF                  B  1056    				db '?'+80h					;y=
00269D 50454126 2049582F   B  1057    				db 'PEA& IX/',80h			;y=
0026A5 80 
0026A6 4C44204D 422CC1     B  1058    				db 'LD MB,','A'+80h			;y=
0026AD BF                  B  1059    				db '?'+80h					;y=
0026AE 53544D49 D8         B  1060    				db 'STMI','X'+80h			;y=
                           B  1061    				
                           B  1062    	
0026B3 494D20B0            B  1063    ed_x1_z6		db 'IM ','0'+80h			;y=
0026B7 BF                  B  1064    				db '?'+80h					;y=
0026B8 494D20B1            B  1065    				db 'IM ','1'+80h			;y=
0026BC 494D20B2            B  1066    				db 'IM ','2'+80h			;y=
0026C0 50454126 2049592F   B  1067    				db 'PEA& IY/',80h			;y=
0026C8 80 
0026C9 4C442041 2C4DC2     B  1068    				db 'LD A,','M','B'+80h		;y=
0026D0 534CD0              B  1069    				db 'SL','P'+80h				;y=
0026D3 52534D49 D8         B  1070    				db 'RSMI','X'+80h			;y=
                           B  1071    
0026D8 4C442049 2CC1       B  1072    ed_x1_z7		db 'LD I,','A'+80h			;y=
0026DE 4C442052 2CC1       B  1073    				db 'LD R,','A'+80h			;y=
0026E4 4C442041 2CC9       B  1074    				db 'LD A,','I'+80h			;y=
0026EA 4C442041 2CD2       B  1075    				db 'LD A,','R'+80h			;y=
0026F0 5252C4              B  1076    				db 'RR','D'+80h				;y=
0026F3 524CC4              B  1077    				db 'RL','D'+80h				;y=
0026F6 4E4FD0              B  1078    				db 'NO','P'+80h				;y=
0026F9 4E4FD0              B  1079    				db 'NO','P'+80h				;y=
                           B  1080    
                           B  1081    
0026FC BFBFBFBF            B  1082    ed_x2_z0		db '?'+80h,'?'+80h,'?'+80h,'?'+
002700 4C444926 80         B  1083    				db 'LDI&',80h					Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  90


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002705 4C444426 80         B  1084    				db 'LDD&',80h					00270A 4C444952 2680       B  1085    				db 'LDIR&',80h					002710 4C444452 2680       B  1086    				db 'LDDR&',80h					                           B  1087    
002716 BFBFBFBF            B  1088    ed_x2_z1		db '?'+80h,'?'+80h,'?'+80h,'?'+
00271A 43504926 80         B  1089    				db 'CPI&',80h					00271F 43504426 80         B  1090    				db 'CPD&',80h					002724 43504952 2680       B  1091    				db 'CPIR&',80h					00272A 43504452 2680       B  1092    				db 'CPDR&',80h					                           B  1093    
002730 494E494D 2680       B  1094    ed_x2_z2		db 'INIM&',80h		; y0	
002736 494E444D 2680       B  1095    				db 'INDM&',80h		; y1
00273C 494E494D 522680     B  1096    				db 'INIMR&',80h		; y2
002743 494E444D 522680     B  1097    				db 'INDMR&',80h		; y3
00274A 494E4926 80         B  1098    				db 'INI&',80h		; y4
00274F 494E4426 80         B  1099    				db 'IND&',80h		; y5
002754 494E4952 2680       B  1100    				db 'INIR&',80h		; y6
00275A 494E4452 2680       B  1101    				db 'INDR&',80h		; y7
                           B  1102    
                           B  1103    
002760 4F54494D 2680       B  1104    ed_x2_z3		db 'OTIM&',80h		; y0
002766 4F54444D 2680       B  1105    				db 'OTDM&',80h		; y1
00276C 4F54494D 522680     B  1106    				db 'OTIMR&',80h		; y2
002773 4F54444D 522680     B  1107    				db 'OTDMR&',80h		; y3
00277A 4F555449 2680       B  1108    				db 'OUTI&',80h		; y4
002780 4F555444 2680       B  1109    				db 'OUTD&',80h		; y5
002786 4F544952 2680       B  1110    				db 'OTIR&',80h		; y6
00278C 4F544452 2680       B  1111    				db 'OTDR&',80h		; y7
                           B  1112    
002792 494E4932 2680       B  1113    ed_x2_z4		db 'INI2&',80h		; y0
002798 494E4432 2680       B  1114    				db 'IND2&',80h		; y1
00279E 494E4932 522680     B  1115    				db 'INI2R&',80h		; y2
0027A5 494E4432 522680     B  1116    				db 'IND2R&',80h		; y3
0027AC 4F555449 322680     B  1117    				db 'OUTI2&',80h		; y4
0027B3 4F555444 322680     B  1118    				db 'OUTD2&',80h		; y5
0027BA 4F544932 522680     B  1119    				db 'OTI2R&',80h		; y6
0027C1 4F544432 522680     B  1120    				db 'OTD2R&',80h		; y7
                           B  1121    
                           B  1122    
0027C8 494E4952 582680     B  1123    ed_x3_z2		db 'INIRX&',80h 	; y0
0027CF 494E4452 582680     B  1124    				db 'INDRX&',80h		; y1
                           B  1125    
0027D6 4F544952 582680     B  1126    ed_x3_z3		db 'OTIRX&',80h		; y0
0027DD 4F544452 582680     B  1127    				db 'OTDRX&',80h		; y1
                           B  1128    			
                           B  1129    
                           B  1130    ;--- DDCB or FDCB - Prefixed op-codes----------
                           B  1131    
                           B  1132    
0027E4 4C442620 7E 03      B  1133    ddcb_fdcb_zn6	db 'LD& ~',var_z, ',%',var_y,' 
0027EA 2C25 02 202480 
0027F0 42495426 203E 02    B  1134    				db 'BIT& >',var_y,',$',80h		Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  91


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0027F7 2C2480 
0027FA 4C442620 7E 03      B  1135    				db 'LD& ~',var_z,',RES& >',var_
002800 2C524553 26203E 02 
002808 2C2480 
00280B 4C442620 7E 03      B  1136    				db 'LD& ~',var_z,',SET& >',var_
002811 2C534554 26203E 02 
002819 2C2480 
                           B  1137    
00281C 25 02 202480        B  1138    ddcb_fdcb_z6	db '%',var_y,' $',80h			002821 42495426 203E 02    B  1139    				db 'BIT& >',var_y,',$',80h		002828 2C2480 
00282B 52455326 203E 02    B  1140    				db 'RES& >',var_y,',$',80h		002832 2C2480 
002835 53455426 203E 02    B  1141    				db 'SET& >',var_y,',$',80h		00283C 2C2480 
                           B  1142    
                           B  1143    ;----------------------------------------------
                           B  1144    
00283F 3F3FBF              B  1145    bad_opcode	db '??','?'+80h
                           B  1146    
                           B  1147    ;----------------------------------------------
                           B  1148    
                           B  1149    
002842 C2C3C4C5 68806C80   B  1150    table_r		db 'B'+80h, 'C'+80h, 'D'+80h, 'E'+8
00284A 2480C1 
                           B  1151    
00284D C2C3C4C5 48804C80   B  1152    table_r2	db 'B'+80h, 'C'+80h, 'D'+80h, 'E'+8
002855 2480C1 
                           B  1153    
002858 42C344C5 DF53D0     B  1154    table_rp	db 'B','C'+80h, 'D','E'+80h, '_'+80
                           B  1155    
00285F 42C344C5 5F8041C6   B  1156    table_rp2	db 'B','C'+80h, 'D','E'+80h, '_',+8
                           B  1157    	
002867 4EDADA4E C3C350CF   B  1158    table_cc	db 'N','Z'+80h, 'Z'+80h, 'N','C'+80
00286F 50C5D0CD 
                           B  1159    	
002873 41444426 2041AC41   B  1160    table_alu	db 'ADD& A',','+80h, 'ADC& A',','+8
00287B 44432620 41AC5355 
002883 4226A053 42432041 
00288B 26AC 
00288D 414E4426 A0584F52   B  1161    			db 'AND&',' '+80h, 'XOR&',' '+80h, 
002895 26A04F52 26A04350 
00289D 26A0 
                           B  1162    			
00289F 524C4326 80525243   B  1163    table_rot	db 'RLC&',80h, 'RRC&',80h, 'RL&',80
0028A7 2680524C 26805252 
0028AF 2680 
0028B1 534C4126 80535241   B  1164    			db 'SLA&',80h, 'SRA&',80h, 'SLL&',8
0028B9 2680534C 4C268053 
0028C1 524C2680 
                           B  1165    	
0028C5 42C344C5 48CC49D8   B  1166    table_rp3	db 'B','C'+80h, 'D','E'+80h, 'H','L
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  92


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B  1167    
0028CD 42C344C5 48CC49D9   B  1168    table_rp4	db 'B','C'+80h, 'D','E'+80h, 'H','L
                           B  1169    
0028D5 42C344C5 48CC5F80   B  1170    table_rp5	db 'B','C'+80h, 'D','E'+80h, 'H','L
                           B  1171    
0028DD 30B0                B  1172    table_rst	db '0','0'+80h
0028DF 30B8                B  1173    			db '0','8'+80h
0028E1 31B0                B  1174    			db '1','0'+80h
0028E3 31B8                B  1175    			db '1','8'+80h
0028E5 32B0                B  1176    			db '2','0'+80h
0028E7 32B8                B  1177    			db '2','8'+80h	
0028E9 33B0                B  1178    			db '3','0'+80h
0028EB 33B8                B  1179    			db '3','8'+80h			
                           B  1180    
                           B  1181    ;----------------------------------------------
                           B  1182    
                           B  1183    ; "_" = HL, IX, IY depending on prefix 
                           B  1184    ; "|" = as above with IX/IY switched
                           B  1185    
                           B  1186    ; "h" = H, IXH, IYL depending on prefix
                           B  1187    ; "l" = L, IXL, IYL depending on prefix
                           B  1188    ; "$" = (HL), (IX+d), (IY+d) depending on prefi
                           B  1189    
0028ED 48CC49D8 49D9       B  1190    hl_subs		db 'H','L'+80h, 'I','X'+80h, 'I','Y
0028F3 48CC49D9 49D8       B  1191    inv_hl_subs	db 'H','L'+80h, 'I','Y'+80h, 'I','X
0028F9 C84958C8 4959C8     B  1192    h_subs		db 'H'+80h, 'IX','H'+80h, 'IY','H'+
002900 CC4958CC 4959CC     B  1193    l_subs		db 'L'+80h, 'IX','L'+80h, 'IY','L'+
002907 28484CA9 2849582F   B  1194    ind_hl_subs	db '(HL',')'+80h, '(IX/',')'+80h, '
00290F A9284959 2FA9 
                           B  1195    
                           B  1196    ;----------------------------------------------
                           B  1197    
002915                     B  1198    adl_prefix_list
                           B  1199    
002915 2E5349D3 2E4C49D3   B  1200    			db '.SI','S'+80h, '.LI','S'+80h, '.
00291D 2E5349CC 2E4C49CC 
                           B  1201    
                           B  1202    ;----------------------------------------------
                           B  1203    
002925 000000              B  1204    d_work_address	dw24 0
                           B  1205    
002928 2D2D00              B  1206    output_byte_txt	db "--",0
00292B 2D00                B  1207    output_char_txt	db "-",0
                           B  1208    
00292D 000001              B  1209    dis_addr		dw24 10000h
                           B  1210    
                           B  1211    ;----------------------------------------------
                           B  1212    
                           B     0    	include 'commands\del.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"del" delete file command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  93


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\del.asm
                           B     4    
                           B     5    
002930                     B     6    os_cmd_del
                           B     7    	
002930 CD C4 16 00         B     8    				call os_check_volume_format	
002934 C0                  B     9    				ret nz
                           B    10    			
002935 CD 3D 29 00         B    11    				call filename_or_bust
                           B    12    				
002939 C3 2B 17 00         B    13    				jp os_erase_file			;no
                           B    14    				
                           B    15    				
                           B    16    ;----------------------------------------------
                           B    17    			
00293D                     B    18    filename_or_bust
                           B    19    			
00293D 7E                  B    20    				ld a,(hl)					;is
00293E B7                  B    21    				or a
00293F C0                  B    22    				ret nz
002940 E1                  B    23    				pop hl						;ot
002941 C3 34 16 00         B    24    				jp os_no_fn_error			;so
                           B    25    
                           B    26    ;----------------------------------------------
                           B     0    	include 'commands\dir.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; FAT16 'dir' - show directory command. v0.03 -
                           B     3    ;----------------------------------------------
                           B     4    
002945                     B     5    os_cmd_dir
                           B     6    
002945 CD C4 16 00         B     7    				call os_check_volume_format	
002949 C0                  B     8    				ret nz
                           B     9    				
00294A CD 24 2A 00         B    10    				call div_line
00294E CD 77 53 00         B    11    				call fs_get_current_dir_name	002952 D8                  B    12    				ret c
002953 C0                  B    13    				ret nz
002954 CD 51 0F 00         B    14    				call os_print_string
002958 CD 9B 1A 00         B    15    				call fs_get_dir_cluster			00295C 7A                  B    16    				ld a,d
00295D B3                  B    17    				or e
00295E 20 08               B    18    				jr nz,dcmdnr
002960 CD 62 50 00         B    19    				call fs_get_volume_label
002964 CD 51 0F 00         B    20    				call os_print_string
002968 CD F9 13 00         B    21    dcmdnr			call os_new_line
                           B    22    				
00296C CD 24 2A 00         B    23    nrootdir		call div_line
002970 CD 67 4F 00         B    24    				call fs_goto_first_dir_entry
002974 D8                  B    25    				ret c
002975 20 6F               B    26    				jr nz,os_dlr
002977 AF                  B    27    				xor a
002978 32 B7 61 00         B    28    				ld (os_linecount),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  94


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\dir.asm
                           B    29    				
00297C CD 7E 4F 00         B    30    os_dfllp		call fs_get_dir_entry			002980 D8                  B    31    				ret c
002981 20 63               B    32    				jr nz,os_dlr					002983 C5                  B    33    				push bc
002984 CD 51 0F 00         B    34    				call os_print_string			002988 CD 24 14 00         B    35    				call os_get_cursor_position		00298C 060E                B    36    				ld b,14
00298E CD 04 14 00         B    37    				call os_set_cursor_position	
002992 C1                  B    38    				pop bc
002993 CB40                B    39    				bit 0,b							002995 28 06               B    40    				jr z,os_deif		
002997 21 31 2A 00         B    41    				ld hl,dir_txt					00299B 18 32               B    42    				jr os_dpl
                           B    43    				
00299D 21 AF 56 00         B    44    os_deif			ld hl,os_hex_prefix_txt			0029A1 CD 51 0F 00         B    45    				call os_print_string
0029A5 ED53 02 69 00       B    46    				ld (scratch_pad),de
0029AA 79                  B    47    				ld a,c
0029AB 32 05 69 00         B    48    				ld (scratch_pad+3),a
0029AF 21 22 62 00         B    49    				ld hl,output_line
0029B3 E5                  B    50    				push hl
0029B4 ED5B 04 69 00       B    51    				ld de,(scratch_pad+2)
0029B9 CD C1 10 00         B    52    				call hexword_to_ascii
0029BD ED5B 02 69 00       B    53    				ld de,(scratch_pad)
0029C2 CD C1 10 00         B    54    				call hexword_to_ascii
0029C6 3600                B    55    				ld (hl),0
0029C8 E1                  B    56    				pop hl
0029C9 0607                B    57    				ld b,7							0029CB CD 79 10 00         B    58    				call os_skip_leading_ascii_zero
0029CF CD 51 0F 00         B    59    os_dpl			call os_print_string
0029D3 CD F9 13 00         B    60    				call os_new_line
                           B    61    				
0029D7 CD 0B 50 00         B    62    				call fs_goto_next_dir_entry
0029DB 20 09               B    63    				jr nz,os_dlr					0029DD CD F7 11 00         B    64    				call os_count_lines
0029E1 3E79                B    65    				ld a,'y'
0029E3 B8                  B    66    				cp b
0029E4 28 96               B    67    				jr z,os_dfllp
                           B    68    				
0029E6 CD 24 2A 00         B    69    os_dlr			call div_line					0029EA CD 66 49 00         B    70    				call fs_calc_free_space
0029EE D8                  B    71    				ret c	
0029EF CD FD 29 00         B    72    				call show_hlde_decimal
0029F3 21 37 2A 00         B    73    				ld hl,kb_spare_txt
0029F7 CD 51 0F 00         B    74    				call os_print_string
0029FB AF                  B    75    				xor a
0029FC C9                  B    76    				ret
                           B    77    
                           B    78    ;----------------------------------------------
                           B    79    
0029FD                     B    80    show_hlde_decimal
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  95


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\dir.asm
                           B    81    
0029FD CD 8C 12 00         B    82    				call os_hex_to_decimal			002A01 11070000            B    83    				ld de,7
002A05 19                  B    84    				add hl,de						002A06 43                  B    85    				ld b,e
002A07 11 22 62 00         B    86    				ld de,output_line
002A0B D5                  B    87    				push de
002A0C 7E                  B    88    dec2strlp		ld a,(hl)						002A0D B7                  B    89    				or a
002A0E 20 03               B    90    				jr nz,foundlnz
002A10 2B                  B    91    				dec hl
002A11 10 F9               B    92    				djnz dec2strlp
002A13 04                  B    93    foundlnz		inc b
002A14 7E                  B    94    ndecchar		ld a,(hl)						002A15 C630                B    95    				add a,030h
002A17 12                  B    96    				ld (de),a
002A18 13                  B    97    				inc de
002A19 2B                  B    98    				dec hl
002A1A 10 F8               B    99    				djnz ndecchar
002A1C AF                  B   100    				xor a
002A1D 12                  B   101    				ld (de),a
002A1E E1                  B   102    				pop hl							002A1F CD 51 0F 00         B   103    				call os_print_string
002A23 C9                  B   104    				ret
                           B   105    
                           B   106    ;----------------------------------------------
                           B   107    			
002A24 0E2D                B   108    div_line		ld c,'-'
002A26 0613                B   109    				ld b,19
002A28 CD 83 1A 00         B   110    				call os_print_multiple_chars
002A2C CD F9 13 00         B   111    				call os_new_line
002A30 C9                  B   112    				ret
                           B   113    
                           B   114    ;----------------------------------------------
                           B   115    
002A31 5B444952 5D00       B   116    dir_txt			db '[DIR]',0
                           B   117    
002A37 204B4220 46726565   B   118    kb_spare_txt	db ' KB Free',11,0
002A3F 0B00 
                           B   119    
                           B   120    ;----------------------------------------------
                           B   121    	
                           B     0    	include 'commands\f.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"f" fill memory command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
002A41                     B     5    os_cmd_f			
                           B     6    
002A41 CD 92 1C 00         B     7    				call get_start_and_end			                           B     8    			
002A45 CD BB 1C 00         B     9    				call hexword_or_bust			Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  96


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\f.asm
002A49 CA 54 16 00         B    10    				jp z,os_no_args_error			002A4D 7B                  B    11    				ld a,e
002A4E 32 CE 61 00         B    12    				ld (fillbyte),a
                           B    13    					
002A52 CD 80 1C 00         B    14    				call test_mem_range
002A56 DA 50 16 00         B    15    				jp c,os_range_error				                           B    16    					
002A5A 3A CE 61 00         B    17    				ld a,(fillbyte)
002A5E 77                  B    18    f_floop			ld (hl),a
002A5F EDA1                B    19    				cpi								002A61 EA 5E 2A 00         B    20    				jp pe,f_floop
                           B    21    					
002A65 3E20                B    22    				ld a,020h						002A67 B7                  B    23    				or a
002A68 C9                  B    24    				ret
                           B    25    
                           B    26    ;----------------------------------------------
                           B     0    	include 'commands\format.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"format" - format disk command. V0.05 - ADL mo
                           B     3    ;
                           B     4    ; The internal format routine is limited to for
                           B     5    ; No partition data is allowed.
                           B     6    ;----------------------------------------------
                           B     7    
                           B     8    
002A69                     B     9    os_cmd_format
                           B    10    
002A69 7E                  B    11    				ld a,(hl)						002A6A B7                  B    12    				or a
002A6B 20 04               B    13    				jr nz,fgotargs					002A6D 3E1F                B    14    				ld a,01fh						002A6F B7                  B    15    				or a
002A70 C9                  B    16    				ret
                           B    17    			
002A71 E5                  B    18    fgotargs		push hl
002A72 3E01                B    19    				ld a,1							002A74 CD 68 18 00         B    20    				call os_mount_volumes			002A78 E1                  B    21    				pop hl
                           B    22    				
002A79 11 06 55 00         B    23    				ld de,fs_sought_filename
002A7D CD C0 53 00         B    24    				call fs_clear_filename			002A81 E5                  B    25    				push hl							002A82 CD DA 0F 00         B    26    				call os_next_arg
002A86 20 04               B    27    				jr nz,fgotlab
002A88 21 B8 2B 00         B    28    				ld hl,default_label
002A8C 060B                B    29    fgotlab			ld b,11
002A8E CD 3F 12 00         B    30    				call os_copy_ascii_run
002A92 E1                  B    31    				pop hl
                           B    32    				
002A93 3A D9 5F 00         B    33    				ld a,(device_count)				002A97 B7                  B    34    				or a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  97


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\format.asm
002A98 28 25               B    35    				jr z,fno_dev
002A9A 47                  B    36    				ld b,a
002A9B 0E00                B    37    				ld c,0							002A9D DD21 83 60 00       B    38    				ld ix,host_device_hardware_info
002AA2 DD7E00              B    39    fdev_lp			ld a,(ix)						002AA5 CD 6D 1A 00         B    40    				call locate_driver_base			002AA9 D5                  B    41    				push de
002AAA FDE1                B    42    				pop iy
002AAC ED130C              B    43    				lea de,iy+0ch					002AAF C5                  B    44    				push bc
002AB0 0607                B    45    				ld b,7
002AB2 CD 20 12 00         B    46    				call os_compare_strings
002AB6 C1                  B    47    				pop bc
002AB7 28 0A               B    48    				jr z,format_dev
002AB9 ED3220              B    49    				lea ix,ix+20h					002ABC 0C                  B    50    				inc c
002ABD 10 E3               B    51    				djnz fdev_lp
                           B    52    			
002ABF 3ED0                B    53    fno_dev			ld a,0d0h						002AC1 B7                  B    54    				or a
002AC2 C9                  B    55    				ret
                           B    56    				
                           B    57    			
                           B    58    				
                           B    59    ;----- FORMAT A DEVICE (USE ENTIRE CAPACITY (TR
                           B    60    			
                           B    61    			
002AC3 C5                  B    62    format_dev		push bc
002AC4 CD F9 13 00         B    63    				call os_new_line
002AC8 21 89 2B 00         B    64    				ld hl,form_dev_warn1
002ACC CD 30 14 00         B    65    				call os_show_packed_text
002AD0 C1                  B    66    				pop bc
                           B    67    				
002AD1 79                  B    68    				ld a,c							002AD2 C630                B    69    				add a,030h
002AD4 32 E5 5F 00         B    70    				ld (dev_txt+3),a
002AD8 21 E2 5F 00         B    71    				ld hl,dev_txt	
002ADC CD 51 0F 00         B    72    				call os_print_string			                           B    73    				
002AE0 79                  B    74    				ld a,c
002AE1 CD E1 1A 00         B    75    				call dev_to_driver_lookup		002AE5 E5                  B    76    				push hl
002AE6 32 D8 5F 00         B    77    				ld (current_driver),a
002AEA CD 54 1A 00         B    78    				call show_dev_driver_name		002AEE DDE1                B    79    				pop ix
002AF0 DD1701              B    80    				ld de,(ix+1)
002AF3 FD21 CA 61 00       B    81    				ld iy,xrr_temp
002AF8 FD1F00              B    82    				ld (iy),de						002AFB FDCB023E            B    83    				srl (iy+2)
002AFF FDCB011E            B    84    				rr (iy+1)
002B03 FDCB001E            B    85    				rr (iy+0)						002B07 FD1700              B    86    				ld de,(iy)						Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  98


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\format.asm
002B0A CD FD 29 00         B    87    				call show_hlde_decimal			002B0E 21 C3 2B 00         B    88    				ld hl,kb_txt
002B12 CD 51 0F 00         B    89    				call os_print_string
002B16 ED2205              B    90    				lea hl,ix+5		
002B19 CD 51 0F 00         B    91    				call os_print_string			002B1D 3E29                B    92    				ld a,')'
002B1F CD 93 0F 00         B    93    				call os_print_char
                           B    94    				
002B23 CD F9 13 00         B    95    				call os_new_line
002B27 CD F9 13 00         B    96    				call os_new_line
002B2B 21 90 2B 00         B    97    				ld hl,form_dev_warn2
002B2F CD 80 2B 00         B    98    				call show_packed_text_and_cr
002B33 CD 68 2B 00         B    99    				call confirm_yes
002B37 20 27               B   100    				jr nz,ab_form
                           B   101    				
002B39 21 9A 2B 00         B   102    				ld hl,formatting_txt			002B3D CD 51 0F 00         B   103    				call os_print_string
                           B   104    				
002B41 CD E4 46 00         B   105    				call fs_format_device_command
002B45 38 0F               B   106    				jr c,form_err
002B47 20 0D               B   107    				jr nz,form_err
                           B   108    			
002B49 21 AA 2B 00         B   109    				ld hl,ok_txt					002B4D CD 51 0F 00         B   110    				call os_print_string
                           B   111    				
002B51 CD 5D 32 00         B   112    f_end			call os_cmd_remount				002B55 C9                  B   113    				ret
                           B   114    			
002B56                     B   115    form_err
002B56 21 AF 2B 00         B   116    				ld hl,ferr_txt
002B5A CD 51 0F 00         B   117    				call os_print_string
002B5E 18 F1               B   118    				jr f_end
                           B   119    				
                           B   120    				
                           B   121    ;----------------------------------------------
                           B   122    				
                           B   123    				
002B60 CD F9 13 00         B   124    ab_form			call os_new_line
002B64 3E24                B   125    				ld a,024h						002B66 B7                  B   126    				or a
002B67 C9                  B   127    				ret
                           B   128    				
002B68                     B   129    confirm_yes
                           B   130    			
002B68 21 02 69 00         B   131    				ld hl,scratch_pad
002B6C 1E03                B   132    				ld e,3
002B6E E5                  B   133    				push hl
002B6F CD 25 11 00         B   134    				call os_user_input
002B73 E1                  B   135    				pop hl
002B74 C0                  B   136    				ret nz
002B75 0603                B   137    				ld b,3
002B77 11 9B 5A 00         B   138    				ld de,yes_txt+1
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page:  99


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\format.asm
002B7B CD 20 12 00         B   139    				call os_compare_strings
002B7F C9                  B   140    				ret
                           B   141    			
                           B   142    			
002B80                     B   143    show_packed_text_and_cr
                           B   144    			
002B80 CD 30 14 00         B   145    				call os_show_packed_text
002B84 CD F9 13 00         B   146    				call os_new_line
002B88 C9                  B   147    				ret
                           B   148    			
                           B   149    ;----------------------------------------------
                           B   150    
002B89                     B   151    form_dev_warn1
                           B   152    
002B89 27283640 979700     B   153    				db 027h,028h,036h,040h,097h,097
                           B   154    
002B90                     B   155    form_dev_warn2
                           B   156    
002B90 52467E98 9EA2A3A5   B   157    				db 052h,046h,07eh,098h,09eh,0a2
002B98 9700 
                           B   158    
002B9A                     B   159    formatting_txt
                           B   160    
002B9A 0B0B466F 726D6174   B   161    				db 11,11,'Formatting.. ',0
002BA2 74696E67 2E2E2000 
                           B   162    
002BAA 4F4B0B0B 00         B   163    ok_txt			db 'OK',11,11,0
                           B   164    
002BAF 4552524F 52210B0B   B   165    ferr_txt		db 'ERROR!',11,11,0
002BB7 00 
                           B   166    
002BB8                     B   167    default_label	
                           B   168    
002BB8 50524F53 455F4449   B   169    				db 'PROSE_DISK',0
002BC0 534B00 
                           B   170    
002BC3 4B422028 00         B   171    kb_txt			db 'KB (',0
                           B   172    
                           B   173    ;----------------------------------------------
                           B   174    
       00006906            B   175    fs_drive_sel_cache		equ scratch_pad+4		                           B   176    
                           B   177    ;----------------------------------------------
                           B   178    
                           B     0    	include 'commands\h.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"H" - Hunt in memory command V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
002BC8 CD 92 1C 00         B     5    os_cmd_h		call get_start_and_end			002BCC 22 C7 61 00         B     6    				ld (find_hexstringascii),hl		                           B     7    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 100


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\h.asm
002BD0 CD 80 1C 00         B     8    				call test_mem_range
002BD4 DA 50 16 00         B     9    				jp c,os_range_error				                           B    10    			
002BD8 AF                  B    11    				xor a
002BD9 32 75 2C 00         B    12    				ld (h_ascii_mode),a
                           B    13    				
002BDD 2A C7 61 00         B    14    				ld hl,(find_hexstringascii)
002BE1 0600                B    15    				ld b,0
002BE3 7E                  B    16    h_lfascii		ld a,(hl)						002BE4 B7                  B    17    				or a
002BE5 28 28               B    18    				jr z,h_no_text					002BE7 FE22                B    19    				cp 022h
002BE9 28 03               B    20    				jr z,h_found_quote
002BEB 23                  B    21    				inc hl
002BEC 18 F5               B    22    				jr h_lfascii
002BEE 23                  B    23    h_found_quote	inc hl
002BEF 22 C7 61 00         B    24    				ld (find_hexstringascii),hl
002BF3 7E                  B    25    h_fasc_len		ld a,(hl)
002BF4 B7                  B    26    				or a
002BF5 CA 54 16 00         B    27    				jp z,os_no_args_error			002BF9 FE22                B    28    				cp 022h
002BFB 28 04               B    29    				jr z,h_startas
002BFD 23                  B    30    				inc hl
002BFE 04                  B    31    				inc b
002BFF 18 F2               B    32    				jr h_fasc_len
                           B    33    
002C01 78                  B    34    h_startas		ld a,b
002C02 B7                  B    35    				or a
002C03 CA 54 16 00         B    36    				jp z,os_no_args_error			002C07 3E01                B    37    				ld a,1
002C09 32 75 2C 00         B    38    				ld (h_ascii_mode),a
002C0D 18 16               B    39    				jr h_start_search
                           B    40    						
                           B    41    
002C0F 2A C7 61 00         B    42    h_no_text		ld hl,(find_hexstringascii)
002C13 0600                B    43    				ld b,0							002C15 CD BB 1C 00         B    44    cntfbyts		call hexword_or_bust			002C19 28 04               B    45    				jr z,gthexstr
002C1B 04                  B    46    				inc b
002C1C 23                  B    47    				inc hl
002C1D 18 F6               B    48    				jr cntfbyts
002C1F 78                  B    49    gthexstr		ld a,b
002C20 B7                  B    50    				or a
002C21 CA 54 16 00         B    51    				jp z,os_no_args_error	
                           B    52    
                           B    53    
002C25                     B    54    h_start_search
                           B    55    	
002C25 DD2A BB 61 00       B    56    				ld ix,(cmdop_start_address)		002C2A DDE5                B    57    fndloop1		push ix
002C2C FDE1                B    58    				pop iy
002C2E 48                  B    59    				ld c,b							Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 101


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\h.asm
002C2F 2A C7 61 00         B    60    				ld hl,(find_hexstringascii)
002C33 3A 75 2C 00         B    61    fcmloop			ld a,(h_ascii_mode)
002C37 B7                  B    62    				or a
002C38 28 08               B    63    				jr z,h_hex
002C3A FD7E00              B    64    				ld a,(iy)
002C3D BE                  B    65    				cp (hl)
002C3E 20 23               B    66    				jr nz,nofmatch
002C40 18 0A               B    67    				jr h_matched
002C42 CD D0 10 00         B    68    h_hex			call ascii_to_hexword			002C46 FD7E00              B    69    				ld a,(iy)
002C49 BB                  B    70    				cp e
002C4A 20 17               B    71    				jr nz,nofmatch
002C4C FD23                B    72    h_matched		inc iy
002C4E 23                  B    73    				inc hl
002C4F 0D                  B    74    				dec c
002C50 20 E1               B    75    				jr nz,fcmloop
                           B    76    			
002C52 DDE5                B    77    				push ix							002C54 D1                  B    78    				pop de							002C55 DDE5                B    79    				push ix
002C57 C5                  B    80    				push bc
002C58 CD 31 13 00         B    81    				call os_show_hex_address
002C5C CD F9 13 00         B    82    				call os_new_line
002C60 C1                  B    83    				pop bc
002C61 DDE1                B    84    				pop ix
                           B    85    				
002C63 DDE5                B    86    nofmatch		push ix
002C65 DD23                B    87    				inc ix
002C67 D1                  B    88    				pop de
002C68 2A BE 61 00         B    89    				ld hl,(cmdop_end_address)
002C6C AF                  B    90    				xor a
002C6D ED52                B    91    				sbc hl,de
002C6F 20 B9               B    92    				jr nz,fndloop1
                           B    93    							
002C71 3E20                B    94    				ld a,020h						002C73 B7                  B    95    				or a
002C74 C9                  B    96    				ret
                           B    97    			
                           B    98    ;----------------------------------------------
                           B    99    
002C75 00                  B   100    h_ascii_mode	db 0
                           B   101    
                           B   102    ;----------------------------------------------
                           B     0    	include 'commands\help.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"?" - List commands. V0.03 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
002C76                     B     5    os_cmd_help		
002C76 AF                  B     6    				xor a
002C77 32 B7 61 00         B     7    				ld (os_linecount),a
                           B     8    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 102


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\help.asm
002C7B 21 DB 5B 00         B     9    				ld hl,packed_help1
002C7F CD 30 14 00         B    10    show_page		call os_show_packed_text
002C83 E5                  B    11    				push hl
002C84 CD F9 13 00         B    12    				call os_new_line
002C88 E1                  B    13    				pop hl
002C89 23                  B    14    				inc hl						;sk
002C8A 7E                  B    15    				ld a,(hl)
002C8B FEFF                B    16    				cp 0ffh						;la
002C8D 28 09               B    17    				jr z,last_help_page
                           B    18    				
002C8F CD F7 11 00         B    19    				call os_count_lines
002C93 78                  B    20    				ld a,b
002C94 FE79                B    21    				cp 'y'
002C96 28 E7               B    22    				jr z,show_page
                           B    23    
002C98                     B    24    last_help_page
002C98 AF                  B    25    				xor a
002C99 C9                  B    26    				ret	
                           B    27    	
                           B    28    ;----------------------------------------------
                           B    29    	
                           B     0    	include 'commands\gtr.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;">" for write ascii bytes to memory command. V
                           B     3    ;----------------------------------------------
                           B     4    
002C9A                     B     5    os_cmd_gtr
                           B     6    
002C9A CD BB 1C 00         B     7    				call hexword_or_bust			002C9E CA 3C 16 00         B     8    				jp z,os_no_start_addr
002CA2 23                  B     9    fndquot1		inc hl
002CA3 7E                  B    10    				ld a,(hl)
002CA4 B7                  B    11    				or a
002CA5 CA 54 16 00         B    12    				jp z,os_no_args_error
002CA9 FE22                B    13    				cp 022h							002CAB 20 F5               B    14    				jr nz,fndquot1
002CAD 23                  B    15    				inc hl
002CAE E5                  B    16    				push hl
002CAF 7E                  B    17    fndquot2		ld a,(hl)
002CB0 23                  B    18    				inc hl
002CB1 B7                  B    19    				or a
002CB2 28 15               B    20    				jr z,noquot2
002CB4 FE22                B    21    				cp 022h							002CB6 20 F7               B    22    				jr nz,fndquot2
002CB8 E1                  B    23    				pop hl
                           B    24    					
002CB9 7E                  B    25    wmbalp			ld a,(hl)						002CBA FE22                B    26    				cp 022h
002CBC 28 09               B    27    				jr z,os_gtrdn					002CBE FE7D                B    28    				cp 07dh
002CC0 28 01               B    29    				jr z,skpnasc
002CC2 12                  B    30    				ld (de),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 103


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\gtr.asm
002CC3 13                  B    31    skpnasc			inc de
002CC4 23                  B    32    				inc hl
002CC5 18 F2               B    33    				jr wmbalp
002CC7 AF                  B    34    os_gtrdn		xor a
002CC8 C9                  B    35    				ret	
                           B    36    				
002CC9 E1                  B    37    noquot2			pop hl							002CCA 3E12                B    38    				ld a,012h
002CCC B7                  B    39    				or a
002CCD C9                  B    40    				ret
                           B    41    
                           B    42    ;----------------------------------------------
                           B     0    	include 'commands\lb.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"lb" - Load binary file command. V0.03 - ADL m
                           B     3    ;----------------------------------------------
                           B     4    
002CCE                     B     5    os_cmd_lb
                           B     6    	
002CCE CD C4 16 00         B     7    				call os_check_volume_format	
002CD2 C0                  B     8    				ret nz
                           B     9    				
002CD3 CD 3D 29 00         B    10    				call filename_or_bust			002CD7 CD 5C 16 00         B    11    				call os_find_file				002CDB C0                  B    12    				ret nz
002CDC ED53 05 69 00       B    13    				ld (filesize_cache),de			002CE1 2A 0A 61 00         B    14    				ld hl,(default_load_addr)
002CE5 22 02 69 00         B    15    				ld (data_load_addr),hl			                           B    16    				
002CE9 2A 74 62 00         B    17    				ld hl,(os_args_loc)
002CED CD DA 0F 00         B    18    				call os_next_arg
                           B    19    
002CF1 CD BB 1C 00         B    20    				call hexword_or_bust			002CF5 28 05               B    21    				jr z,os_lbnao					002CF7 ED53 02 69 00       B    22    				ld (data_load_addr),de
                           B    23    
002CFC ED5B 02 69 00       B    24    os_lbnao		ld de,(data_load_addr)			002D01 2A 17 61 00         B    25    				ld hl,(sysram_os_highest)		002D05 2B                  B    26    				dec hl
002D06 AF                  B    27    				xor a
002D07 ED52                B    28    				sbc hl,de
002D09 38 04               B    29    				jr c,os_lbprok
002D0B 3E26                B    30    				ld a,026h						002D0D B7                  B    31    				or a
002D0E C9                  B    32    				ret
                           B    33    				
002D0F 2A 02 69 00         B    34    os_lbprok		ld hl,(data_load_addr)			002D13 CD 89 16 00         B    35    				call os_read_bytes_from_file
002D17 C0                  B    36    				ret nz
                           B    37    			
002D18                     B    38    report_bytes_loaded
                           B    39    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 104


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\lb.asm
002D18 21 AF 56 00         B    40    				ld hl,os_hex_prefix_txt			002D1C CD 51 0F 00         B    41    				call os_print_string			                           B    42    				
002D20 11 07 69 00         B    43    				ld de,filesize_cache+2			002D24 21 22 62 00         B    44    				ld hl,output_line
002D28 0603                B    45    				ld b,3
002D2A CD 8E 10 00         B    46    				call n_hexbytes_to_ascii
002D2E 3600                B    47    				ld (hl),0	
002D30 0605                B    48    				ld b,5							002D32 CD 67 13 00         B    49    				call os_print_output_line_skip_
                           B    50    				
002D36 21 79 5D 00         B    51    				ld hl,bytes_loaded_msg			002D3A CD 30 14 00         B    52    				call os_show_packed_text
                           B    53    				
002D3E 21 0E 57 00         B    54    				ld hl,to_txt					002D42 CD 51 0F 00         B    55    				call os_print_string
                           B    56    
002D46 21 AF 56 00         B    57    				ld hl,os_hex_prefix_txt			002D4A CD 51 0F 00         B    58    				call os_print_string	
                           B    59    
002D4E ED5B 02 69 00       B    60    				ld de,(data_load_addr)			002D53 CD 31 13 00         B    61    				call os_show_hex_address
                           B    62    
002D57 CD F9 13 00         B    63    				call os_new_line
002D5B AF                  B    64    				xor a
002D5C C9                  B    65    				ret
                           B    66    				
                           B    67    ;----------------------------------------------
                           B    68    
       00006902            B    69    data_load_addr	equ scratch_pad
       00006905            B    70    filesize_cache	equ scratch_pad+3
                           B    71    
                           B    72    ;----------------------------------------------
                           B     0    	include 'commands\m.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'m' - Show memory as hex bytes command. V0.02 
                           B     3    ;----------------------------------------------
                           B     4    
       00000010            B     5    bytes_per_line	equ 16
                           B     6    
002D5D CD BB 1C 00         B     7    os_cmd_m		call hexword_or_bust			002D61 28 05               B     8    				jr z,m_no_hex					002D63 ED53 B8 61 00       B     9    				ld (mem_mon_addr),de
                           B    10    				
002D68 0610                B    11    m_no_hex		ld b,16							002D6A C5                  B    12    smbllp			push bc							                           B    13    				
002D6B 21 A4 2D 00         B    14    				ld hl,colon_cmd_prefix			002D6F CD 51 0F 00         B    15    				call os_print_string
002D73 ED5B B8 61 00       B    16    				ld de,(mem_mon_addr)
002D78 CD 31 13 00         B    17    				call os_show_hex_address
                           B    18    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 105


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\m.asm
002D7C 21 22 62 00         B    19    				ld hl,output_line
002D80 0610                B    20    				ld b,bytes_per_line				002D82 3620                B    21    mmbllp			ld (hl),' '
002D84 23                  B    22    				inc hl
002D85 1A                  B    23    				ld a,(de)	
002D86 CD 9C 10 00         B    24    				call hexbyte_to_ascii
002D8A 13                  B    25    				inc de
002D8B 10 F5               B    26    				djnz mmbllp
                           B    27    
002D8D ED53 B8 61 00       B    28    				ld (mem_mon_addr),de
002D92 360B                B    29    				ld (hl),11
002D94 23                  B    30    				inc hl
002D95 3600                B    31    				ld (hl),0
002D97 21 22 62 00         B    32    				ld hl,output_line
002D9B CD 51 0F 00         B    33    				call os_print_string
002D9F C1                  B    34    				pop bc
002DA0 10 C8               B    35    				djnz smbllp
                           B    36    				
002DA2 AF                  B    37    				xor a
002DA3 C9                  B    38    				ret
                           B    39    
                           B    40    ;----------------------------------------------
                           B    41    
002DA4 3A2000              B    42    colon_cmd_prefix	db ': ',0
                           B    43    
                           B    44    ;----------------------------------------------
                           B     0    	include 'commands\md.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"md" - Make dir command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
002DA7                     B     5    os_cmd_md
                           B     6    	
002DA7 CD C4 16 00         B     7    				call os_check_volume_format	
002DAB C0                  B     8    				ret nz
                           B     9    			
002DAC CD 3D 29 00         B    10    				call filename_or_bust
                           B    11    				
002DB0 C3 03 17 00         B    12    				jp os_make_dir			;no poi
                           B    13    				
                           B    14    
                           B    15    ;----------------------------------------------
                           B     0    	include 'commands\r.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'R' - show CPU register values saved on return
                           B     3    ;----------------------------------------------
                           B     4    
002DB4                     B     5    os_cmd_r	
002DB4 DD21 23 61 00       B     6    				ld ix,store_a1					002DB9 21 5E 2E 00         B     7    				ld hl,register_txt
002DBD CD 51 0F 00         B     8    rcmdloop2		call os_print_string
002DC1 7E                  B     9    rcmdloop		ld a,(hl)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 106


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\r.asm
002DC2 FE01                B    10    				cp 1
002DC4 28 0B               B    11    				jr z,showbyte
002DC6 FE02                B    12    				cp 2
002DC8 28 15               B    13    				jr z,showword16
002DCA FE03                B    14    				cp 3
002DCC 28 2E               B    15    				jr z,showaddr
002DCE 23                  B    16    				inc hl
002DCF 18 F0               B    17    				jr rcmdloop
                           B    18    				
002DD1 DD7E00              B    19    showbyte		ld a,(ix)
002DD4 DD23                B    20    				inc ix
002DD6 DDE5                B    21    				push ix
002DD8 E5                  B    22    				push hl
002DD9 CD 45 13 00         B    23    				call os_show_hex_byte
002DDD 18 2A               B    24    				jr showreg
                           B    25    
002DDF DD7E01              B    26    showword16		ld a,(ix+1)
002DE2 DDE5                B    27    				push ix
002DE4 E5                  B    28    				push hl
002DE5 CD 45 13 00         B    29    				call os_show_hex_byte
002DE9 E1                  B    30    				pop hl
002DEA DDE1                B    31    				pop ix
002DEC DD7E00              B    32    				ld a,(ix)
002DEF DD23                B    33    				inc ix
002DF1 DD23                B    34    				inc ix
002DF3 DDE5                B    35    				push ix
002DF5 E5                  B    36    				push hl
002DF6 CD 45 13 00         B    37    				call os_show_hex_byte
002DFA 18 0D               B    38    				jr showreg
                           B    39    
002DFC DD1700              B    40    showaddr		ld de,(ix)
002DFF ED3203              B    41    				lea ix,ix+3
002E02 DDE5                B    42    				push ix
002E04 E5                  B    43    				push hl
002E05 CD 31 13 00         B    44    				call os_show_hex_address
002E09 E1                  B    45    showreg			pop hl
002E0A DDE1                B    46    				pop ix
002E0C 23                  B    47    				inc hl
002E0D 7E                  B    48    				ld a,(hl)
002E0E B7                  B    49    				or a
002E0F 20 AC               B    50    				jr nz,rcmdloop2
                           B    51    			
002E11 CD F9 13 00         B    52    				call os_new_line				002E15 21 C2 2E 00         B    53    				ld hl,flag_txt
002E19 CD 19 13 00         B    54    				call os_copy_to_output_line
002E1D 21 26 62 00         B    55    				ld hl,output_line+4
002E21 01050000            B    56    				ld bc,5
002E25 3A 46 61 00         B    57    				ld a,(store_f)
002E29 CB77                B    58    				bit 6,a							002E2B 28 02               B    59    				jr z,zfzero
002E2D 3631                B    60    				ld (hl),'1'
002E2F 09                  B    61    zfzero			add hl,bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 107


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\r.asm
002E30 CB47                B    62    				bit 0,a							002E32 28 02               B    63    				jr z,cfzero
002E34 3631                B    64    				ld (hl),'1'
002E36 09                  B    65    cfzero			add hl,bc
002E37 CB7F                B    66    				bit 7,a							002E39 28 02               B    67    				jr z,sfzero
002E3B 364D                B    68    				ld (hl),'M'
002E3D 09                  B    69    sfzero			add hl,bc
002E3E CB57                B    70    				bit 2,a							002E40 28 02               B    71    				jr z,pfzero
002E42 364F                B    72    				ld (hl),'O'
002E44 09                  B    73    pfzero			add hl,bc
002E45 23                  B    74    				inc hl
002E46 CB67                B    75    				bit 4,a							002E48 28 02               B    76    				jr z,iffzero
002E4A 3631                B    77    				ld (hl),'1'
002E4C                     B    78    iffzero			
002E4C 01060000            B    79    				ld bc,6
002E50 09                  B    80    				add hl,bc
002E51 3A 47 61 00         B    81    				ld a,(store_adl)
002E55 C630                B    82    				add a,30h
002E57 77                  B    83    				ld (hl),a
002E58 CD 5C 13 00         B    84    				call os_print_output_line
002E5C AF                  B    85    				xor a
002E5D C9                  B    86    				ret
                           B    87    
                           B    88    ;----------------------------------------------
                           B    89    	
                           B    90    
002E5E 20413D00 01         B    91    register_txt		db ' A=',0,1
002E63 20204243 3D0003     B    92    					db '  BC=',0,3
002E6A 20204445 3D0003     B    93    					db '  DE=',0,3
002E71 2020484C 3D0003     B    94    					db '  HL=',0,3
                           B    95    					
002E78 0B                  B    96    					db 11
                           B    97    
002E79 27413D00 01         B    98    					db 027h,'A=',0,1
002E7E 20274243 3D0003     B    99    					db ' ',027h,'BC=',0,3
002E85 20274445 3D0003     B   100    					db ' ',027h,'DE=',0,3
002E8C 2027484C 3D0003     B   101    					db ' ',027h,'HL=',0,3
                           B   102    					
002E93 0B                  B   103    					db 11
                           B   104    
002E94 2049583D 0003       B   105    					db ' IX=',0,3
002E9A 2049593D 0003       B   106    					db ' IY=',0,3
                           B   107    					
002EA0 0B                  B   108    					db 11
                           B   109    					
002EA1 2050433D 0003       B   110    					db ' PC=',0,3
002EA7 204C5350 3D0003     B   111    					db ' LSP=',0,3
002EAE 20535350 3D0002     B   112    					db ' SSP=',0,2
                           B   113    					
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 108


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\r.asm
002EB5 0B                  B   114    					db 11
                           B   115    					
002EB6 204D4241 53453D00   B   116    					db ' MBASE=',0,1,0,0
002EBE 010000 
                           B   117    					
002EC1 0B                  B   118    					db 11
                           B   119    
002EC2 205A463D 30204346   B   120    flag_txt			db ' ZF=0 CF=0 SF=P PV=E IF
002ECA 3D302053 463D5020 
002ED2 50563D45 20494646 
002EDA 3D302041 444C3D30 
002EE2 0B0B00 
                           B   121    		
                           B   122    ;----------------------------------------------
                           B     0    	include 'commands\rd.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"RD" - Remove directory command. V0.02 - ADL m
                           B     3    ;----------------------------------------------
                           B     4    
002EE5                     B     5    os_cmd_rd
                           B     6    
002EE5 CD C4 16 00         B     7    				call os_check_volume_format	
002EE9 C0                  B     8    				ret nz
                           B     9    				
002EEA CD 3D 29 00         B    10    				call filename_or_bust
                           B    11    			
002EEE C3 6D 17 00         B    12    				jp os_delete_dir		;no poi
                           B    13    
                           B    14    
                           B    15    ;----------------------------------------------
                           B     0    	include 'commands\rn.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"rn" - Rename command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
002EF2                     B     5    os_cmd_rn
                           B     6    	
002EF2 CD C4 16 00         B     7    				call os_check_volume_format	
002EF6 C0                  B     8    				ret nz
                           B     9    			
002EF7 CD 3D 29 00         B    10    				call filename_or_bust
002EFB E5                  B    11    				push hl
002EFC D1                  B    12    				pop de
002EFD CD DA 0F 00         B    13    				call os_next_arg
002F01 7E                  B    14    				ld a,(hl)						002F02 B7                  B    15    				or a
002F03 20 04               B    16    				jr nz,rn_grfn
002F05 3E1F                B    17    				ld a,01fh						002F07 B7                  B    18    				or a
002F08 C9                  B    19    				ret
                           B    20    
002F09 EB                  B    21    rn_grfn			ex de,hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 109


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rn.asm
002F0A C3 57 17 00         B    22    				jp os_rename_file				                           B    23    		
                           B    24    ;----------------------------------------------
                           B     0    	include 'commands\sb.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'SB' - Save binary file command. V0.02 - ADL m
                           B     3    ;----------------------------------------------
                           B     4    
002F0E                     B     5    os_cmd_sb
                           B     6    	
002F0E CD C4 16 00         B     7    				call os_check_volume_format		002F12 C0                  B     8    				ret nz
                           B     9    					
002F13 CD 3D 29 00         B    10    				call filename_or_bust			002F17 22 08 69 00         B    11    				ld (sb_save_name_addr),hl
                           B    12    				
002F1B 2A 74 62 00         B    13    				ld hl,(os_args_loc)
002F1F CD DA 0F 00         B    14    				call os_next_arg
002F23 CD BB 1C 00         B    15    				call hexword_or_bust			002F27 CA 3C 16 00         B    16    				jp z,os_no_start_addr			002F2B ED53 02 69 00       B    17    				ld (sb_save_addr),de
                           B    18    				
002F30 CD BB 1C 00         B    19    				call hexword_or_bust			002F34 CA 40 16 00         B    20    				jp z,os_no_filesize
002F38 ED53 05 69 00       B    21    				ld (sb_save_length),de
                           B    22    				
002F3D 2A 08 69 00         B    23    				ld hl,(sb_save_name_addr)		002F41 CD 98 16 00         B    24    				call os_create_file
002F45 28 18               B    25    				jr z,os_sfapp
002F47 FEC9                B    26    				cp 0c9h							002F49 C0                  B    27    				ret nz			
002F4A 21 A2 5B 00         B    28    				ld hl,save_append_msg			002F4E CD 30 14 00         B    29    				call os_show_packed_text
002F52 CD 01 44 00         B    30    				call os_wait_key_press
002F56 3E79                B    31    				ld a,'y'
002F58 B8                  B    32    				cp b
002F59 28 04               B    33    				jr z,os_sfapp
002F5B 3E2C                B    34    				ld a,2ch						002F5D B7                  B    35    				or a
002F5E C9                  B    36    				ret
                           B    37    			
002F5F 2A 08 69 00         B    38    os_sfapp		ld hl,(sb_save_name_addr)		002F63 ED5B 02 69 00       B    39    				ld de,(sb_save_addr)			002F68 ED4B 05 69 00       B    40    				ld bc,(sb_save_length)			002F6D CD AD 16 00         B    41    				call os_write_bytes_to_file
002F71 C0                  B    42    				ret nz	
                           B    43    				
002F72 3E20                B    44    				ld a,020h						002F74 B7                  B    45    				or a
002F75 C9                  B    46    				ret
                           B    47    			
                           B    48    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 110


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\sb.asm
                           B    49    ;----------------------------------------------
                           B    50    
       00006902            B    51    sb_save_addr		equ scratch_pad
       00006905            B    52    sb_save_length		equ scratch_pad+3
       00006908            B    53    sb_save_name_addr	equ scratch_pad+6
                           B    54    
                           B    55    ;----------------------------------------------
                           B     0    	include 'commands\rx.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"RX" - Receive binary file via serial port com
                           B     3    ;----------------------------------------------
                           B     4    
       00000080            B     5    buffer_blocks			 equ 128				       00006A02            B     6    buffer_addr				 equ os_max_addr		       00006902            B     7    rx_buffer_ptr			 equ scratch_pad
       00006905            B     8    serial_file_length_cache equ scratch_pad+3
                           B     9    
                           B    10    
002F76 7E                  B    11    os_cmd_rx		ld a,(hl)						002F77 B7                  B    12    				or a
002F78 CA 34 16 00         B    13    				jp z,os_no_fn_error
                           B    14    				
002F7C 3E3E                B    15    				ld a,'>'						002F7E BE                  B    16    				cp (hl)
002F7F C2 42 30 00         B    17    				jp nz,rx_nrs
002F83 23                  B    18    				inc hl
002F84 3E20                B    19    				ld a,' '
002F86 BE                  B    20    				cp (hl)
002F87 2B                  B    21    				dec hl
002F88 C2 42 30 00         B    22    				jp nz,rx_nrs
                           B    23    				
002F8C CD C4 16 00         B    24    				call os_check_volume_format		002F90 C0                  B    25    				ret nz		
                           B    26    				
002F91 112A0000            B    27    				ld de,02ah						002F95 ED53 94 5F 00       B    28    				ld (serial_filename),de			002F9A CD 46 31 00         B    29    				call rx_get_header
002F9E C0                  B    30    				ret nz
002F9F CD D4 45 00         B    31    				call s_holdack					                           B    32    				
002FA3 21 A8 5F 00         B    33    				ld hl,serial_fileheader			002FA7 CD 98 16 00         B    34    				call os_create_file
002FAB C2 21 30 00         B    35    				jp nz,rxwtd_fail				                           B    36    				
002FAF 21 C2 5B 00         B    37    				ld hl,ser_recsave_msg
002FB3 CD 30 14 00         B    38    				call os_show_packed_text
                           B    39    				
002FB7 2A B8 5F 00         B    40    rx_rnblk		ld hl,(serial_fileheader+16)	002FBB 22 05 69 00         B    41    				ld (serial_file_length_cache),h
002FBF 21 02 6A 00         B    42    				ld hl,buffer_addr
002FC3 22 02 69 00         B    43    				ld (rx_buffer_ptr),hl
002FC7 0680                B    44    				ld b,buffer_blocks				Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 111


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
                           B    45    				
002FC9 CD BC 45 00         B    46    rx_lnb			call s_goodack
002FCD CD 66 45 00         B    47    				call s_getblock
002FD1 28 0F               B    48    				jr z,rxtd_blok
                           B    49    
002FD3 F5                  B    50    				push af							002FD4 CD CD 45 00         B    51    				call s_badack					002FD8 21 A8 5F 00         B    52    				ld hl,serial_fileheader			002FDC CD 2B 17 00         B    53    				call os_erase_file
002FE0 F1                  B    54    				pop af
002FE1 C9                  B    55    				ret
                           B    56    
002FE2 CD D4 45 00         B    57    rxtd_blok		call s_holdack
                           B    58    				
002FE6 21 02 67 00         B    59    				ld hl,sector_buffer
002FEA ED5B 02 69 00       B    60    				ld de,(rx_buffer_ptr)
002FEF 01000100            B    61    				ld bc,256
002FF3 EDB0                B    62    				ldir
002FF5 ED53 02 69 00       B    63    				ld (rx_buffer_ptr),de
                           B    64    				
002FFA 2A B8 5F 00         B    65    				ld hl,(serial_fileheader+16)
002FFE 11000100            B    66    				ld de,256
003002 AF                  B    67    				xor a
003003 ED52                B    68    				sbc hl,de
003005 22 B8 5F 00         B    69    				ld (serial_fileheader+16),hl
003009 28 1D               B    70    				jr z,rx_lbr
00300B 38 1B               B    71    				jr c,rx_lbr
00300D 10 BA               B    72    				djnz rx_lnb
                           B    73    
00300F 01008000            B    74    				ld bc,buffer_blocks*256
003013 11 02 6A 00         B    75    				ld de,buffer_addr
003017 21 A8 5F 00         B    76    				ld hl,serial_fileheader
00301B CD AD 16 00         B    77    				call os_write_bytes_to_file
00301F 28 96               B    78    				jr z,rx_rnblk
003021 F5                  B    79    rxwtd_fail		push af
003022 CD CD 45 00         B    80    				call s_badack
003026 F1                  B    81    				pop af
003027 C9                  B    82    				ret
                           B    83    				
003028 CD BC 45 00         B    84    rx_lbr			call s_goodack
00302C ED4B 05 69 00       B    85    				ld bc,(serial_file_length_cache
003031 11 02 6A 00         B    86    				ld de,buffer_addr
003035 21 A8 5F 00         B    87    				ld hl,serial_fileheader
003039 CD AD 16 00         B    88    				call os_write_bytes_to_file
00303D C0                  B    89    				ret nz	
                           B    90    				
00303E 3E20                B    91    rxtd_done		ld a,020h						003040 B7                  B    92    				or a
003041 C9                  B    93    				ret
                           B    94    
                           B    95    				
                           B    96    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 112


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
                           B    97    				
003042 3E21                B    98    rx_nrs			ld a,'!'						003044 BE                  B    99    				cp (hl)							003045 C2 F0 30 00         B   100    				jr nz,notrxe
003049 23                  B   101    				inc hl
00304A 3E20                B   102    				ld a,' '
00304C BE                  B   103    				cp (hl)
00304D 2B                  B   104    				dec hl
00304E C2 F0 30 00         B   105    				jr nz,notrxe
003052 112A0000            B   106    				ld de,02ah						003056 ED53 94 5F 00       B   107    				ld (serial_filename),de			00305B CD 46 31 00         B   108    				call rx_get_header
00305F C0                  B   109    				ret nz
003060 21 B8 5B 00         B   110    				ld hl,ser_rec2_msg
003064 CD 30 14 00         B   111    				call os_show_packed_text
003068 CD BC 45 00         B   112    				call s_goodack
00306C 3E01                B   113    				ld a,1							00306E 32 A7 5F 00         B   114    				ld (serial_timeout),a
003072 CD 66 45 00         B   115    				call s_getblock					003076 28 07               B   116    				jr z,rxe_fblok
003078 F5                  B   117    rxe_badblock	push af							003079 CD CD 45 00         B   118    				call s_badack					00307D F1                  B   119    				pop af
00307E C9                  B   120    				ret
                           B   121    	
00307F 2A 04 67 00         B   122    rxe_fblok		ld hl,(sector_buffer+2)
003083 1150524F            B   123    				ld de,04f5250h					003087 AF                  B   124    				xor a
003088 28 04               B   125    				jr z,rxe_ok
00308A 3E1A                B   126    				ld a,1ah						00308C B7                  B   127    				or a
00308D C9                  B   128    				ret
00308E 2A 07 67 00         B   129    rxe_ok			ld hl,(sector_buffer+5)			003092 22 8B 5F 00         B   130    				ld (serial_ez80_address),hl
003096 01000100            B   131    				ld bc,256						00309A DD21 A8 5F 00       B   132    				ld ix,serial_fileheader
00309F AF                  B   133    				xor a
0030A0 DDB612              B   134    				or (ix+18)						0030A3 20 0A               B   135    				jr nz,mtones
0030A5 DDB611              B   136    				or a,(ix+17)					0030A8 20 05               B   137    				jr nz,mtones
0030AA 0600                B   138    				ld b,0
0030AC DD4E10              B   139    				ld c,(ix+16)					0030AF 21 02 67 00         B   140    mtones			ld hl,sector_buffer				0030B3 ED5B 8B 5F 00       B   141    				ld de,(serial_ez80_address)		0030B8 EDB0                B   142    				ldir
                           B   143    				
0030BA D5                  B   144    				push de
0030BB CD BC 45 00         B   145    				call s_goodack		
0030BF DDE1                B   146    				pop ix							0030C1 2A B8 5F 00         B   147    				ld hl,(serial_fileheader+16)	0030C5 11000100            B   148    				ld de,256
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 113


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
0030C9 AF                  B   149    				xor a
0030CA ED52                B   150    				sbc hl,de						0030CC 28 18               B   151    				jr z,rxe_done
0030CE 38 16               B   152    				jr c,rxe_done
0030D0 EB                  B   153    				ex de,hl
0030D1 ED53 B8 5F 00       B   154    				ld (serial_fileheader+16),de	0030D6 DD2A 8B 5F 00       B   155    				ld ix,(serial_ez80_address)
0030DB 01000100            B   156    				ld bc,256
0030DF DD09                B   157    				add ix,bc
0030E1 CD 24 45 00         B   158    				call s_gbloop					0030E5 C0                  B   159    				ret nz
0030E6 E1                  B   160    rxe_done		pop hl							0030E7 CD 73 3D 00         B   161    				call enable_button_nmi			0030EB 2A 8B 5F 00         B   162    				ld hl,(serial_ez80_address)
0030EF E9                  B   163    				jp (hl)							                           B   164    				
                           B   165    				
                           B   166    
0030F0 CD 8D 31 00         B   167    notrxe			call clear_serial_filename
                           B   168    				
0030F4 0610                B   169    				ld b,16							0030F6 11 94 5F 00         B   170    				ld de,serial_filename
0030FA CD 3F 12 00         B   171    				call os_copy_ascii_run			0030FE 79                  B   172    				ld a,c
0030FF 32 A6 5F 00         B   173    				ld (serial_fn_length),a
003103 CD E6 0F 00         B   174    				call os_scan_for_space
                           B   175    				
003107 CD BB 1C 00         B   176    				call hexword_or_bust			00310B CA 3C 16 00         B   177    				jp z,os_no_start_addr			00310F ED53 02 69 00       B   178    				ld (data_load_addr),de			003114 2A 17 61 00         B   179    				ld hl,(sysram_os_highest)		003118 2B                  B   180    				dec hl
003119 AF                  B   181    				xor a
00311A ED52                B   182    				sbc hl,de
00311C 38 04               B   183    				jr c,os_prok
00311E 3E26                B   184    				ld a,026h						003120 B7                  B   185    				or a
003121 C9                  B   186    				ret
                           B   187    
003122 CD 46 31 00         B   188    os_prok			call rx_get_header
003126 C0                  B   189    				ret nz
                           B   190    
003127 21 B8 5B 00         B   191    				ld hl,ser_rec2_msg
00312B CD 30 14 00         B   192    				call os_show_packed_text
                           B   193    	
00312F 2A 02 69 00         B   194    				ld hl,(data_load_addr)			003133 CD 12 45 00         B   195    				call serial_receive_file
003137 C0                  B   196    				ret nz							                           B   197    
003138 ED5B B8 5F 00       B   198    				ld de,(serial_fileheader+16)	00313D ED53 05 69 00       B   199    				ld (filesize_cache),de
003142 C3 18 2D 00         B   200    				jp report_bytes_loaded			Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 114


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
                           B   201    				
                           B   202    ;----------------------------------------------
                           B   203    
003146                     B   204    rx_get_header
003146 21 B4 5B 00         B   205    				ld hl,ser_rec_msg
00314A CD 30 14 00         B   206    				call os_show_packed_text
                           B   207    				
00314E 3E00                B   208    				ld a,0
003150 32 C9 5F 00         B   209    				ld (anim_wait_count),a			003154 3A C9 5F 00         B   210    get_hdr_loop	ld a,(anim_wait_count)
003158 3C                  B   211    				inc a
003159 47                  B   212    				ld b,a
00315A FE06                B   213    				cp 6
00315C 20 07               B   214    				jr nz,notsix
00315E 0E20                B   215    				ld c,' '
003160 0605                B   216    				ld b,5
003162 AF                  B   217    				xor a
003163 18 02               B   218    				jr mcharset
003165 0E2E                B   219    notsix			ld c,'.'
003167 32 C9 5F 00         B   220    mcharset		ld (anim_wait_count),a
00316B CD 83 1A 00         B   221    				call os_print_multiple_chars
00316F CD 9A 0F 00         B   222    				call home_cursor
                           B   223    				
003173 21 94 5F 00         B   224    				ld hl,serial_filename			003177 3E01                B   225    				ld a,1							003179 CD 77 44 00         B   226    				call serial_get_header
00317D C8                  B   227    				ret z
00317E FE83                B   228    				cp 083h							003180 C0                  B   229    				ret nz
003181 CD 5C 44 00         B   230    				call os_get_key_press
003185 FE76                B   231    				cp 076h
003187 20 CB               B   232    				jr nz,get_hdr_loop
003189 3E80                B   233    				ld a,080h						00318B B7                  B   234    notsto			or a
00318C C9                  B   235    				ret								                           B   236    							
                           B   237    
                           B   238    ;----------------------------------------------
                           B   239    
00318D                     B   240    clear_serial_filename
                           B   241    
00318D E5                  B   242    				push hl							00318E 21 94 5F 00         B   243    				ld hl,serial_filename
003192 01100000            B   244    				ld bc,16
003196 AF                  B   245    				xor a
003197 CD BD 15 00         B   246    				call os_bchl_memfill
00319B E1                  B   247    				pop hl
00319C C9                  B   248    				ret
                           B   249    
                           B   250    ;----------------------------------------------
                           B     0    	include 'commands\tx.asm'
                           B     1    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 115


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\tx.asm
                           B     2    ;'TX' - Transmit binary file via serial port co
                           B     3    ;----------------------------------------------
                           B     4    
00319D 7E                  B     5    os_cmd_tx		ld a,(hl)						00319E B7                  B     6    				or a
00319F CA 34 16 00         B     7    				jp z,os_no_fn_error
                           B     8    			
0031A3 E5                  B     9    				push hl							0031A4 21 94 5F 00         B    10    				ld hl,serial_filename
0031A8 01100000            B    11    				ld bc,16
0031AC AF                  B    12    				xor a
0031AD CD BD 15 00         B    13    				call os_bchl_memfill
0031B1 E1                  B    14    				pop hl
                           B    15    			
0031B2 0610                B    16    				ld b,16							0031B4 11 94 5F 00         B    17    				ld de,serial_filename
0031B8 CD 3F 12 00         B    18    				call os_copy_ascii_run			0031BC 79                  B    19    				ld a,c
0031BD 32 A6 5F 00         B    20    				ld (serial_fn_length),a
0031C1 CD E6 0F 00         B    21    				call os_scan_for_space
                           B    22    							
0031C5 CD BB 1C 00         B    23    				call hexword_or_bust			0031C9 CA 3C 16 00         B    24    				jp z,os_no_start_addr			0031CD ED53 8B 5F 00       B    25    				ld (serial_ez80_address),de
                           B    26    			
0031D2 CD BB 1C 00         B    27    				call hexword_or_bust			0031D6 CA 40 16 00         B    28    				jp z,os_no_filesize
0031DA ED53 8E 5F 00       B    29    				ld (serial_file_length),de
0031DF 21000000            B    30    				ld hl,0
0031E3 3E07                B    31    				ld a,07h						0031E5 B7                  B    32    				or a
0031E6 ED5A                B    33    				adc hl,de
0031E8 28 1D               B    34    				jr z,s_error
                           B    35    				
0031EA 21 BD 5B 00         B    36    				ld hl,ser_send_msg
0031EE CD 30 14 00         B    37    				call os_show_packed_text
                           B    38    			
0031F2 ED5B 8E 5F 00       B    39    				ld de,(serial_file_length)
0031F7 21 94 5F 00         B    40    				ld hl,serial_filename			0031FB DD2A 8B 5F 00       B    41    				ld ix,(serial_ez80_address)
003200 CD DB 45 00         B    42    				call serial_send_file
003204 C0                  B    43    				ret nz			
                           B    44    			
003205 3E20                B    45    				ld a,020h						003207 B7                  B    46    s_error			or a
003208 C9                  B    47    				ret
                           B    48    				
                           B    49    			
                           B    50    ;----------------------------------------------
                           B     0    	include 'commands\t.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'T' - Show memory as ascii text command. V0.02
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 116


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\t.asm
                           B     3    ;----------------------------------------------
                           B     4    
003209 CD BB 1C 00         B     5    os_cmd_t		call hexword_or_bust			00320D 28 05               B     6    				jr z,t_no_hex					00320F ED53 B8 61 00       B     7    				ld (mem_mon_addr),de
                           B     8    							
003214 0610                B     9    t_no_hex		ld b,16
003216 C5                  B    10    smaalp			push bc
                           B    11    				
003217 21 5A 32 00         B    12    				ld hl,gtr_cmd_prefix			00321B CD 51 0F 00         B    13    				call os_print_string
00321F ED5B B8 61 00       B    14    				ld de,(mem_mon_addr)
003224 CD 31 13 00         B    15    				call os_show_hex_address
                           B    16    
003228 21 22 62 00         B    17    				ld hl,output_line
00322C 3620                B    18    				ld (hl),' '
00322E 23                  B    19    				inc hl
00322F 3622                B    20    				ld (hl),022h
003231 0610                B    21    				ld b,16
003233 23                  B    22    mabllp			inc hl
003234 1A                  B    23    				ld a,(de)	
003235 FE20                B    24    				cp 020h
003237 38 04               B    25    				jr c,chchar
003239 FE7F                B    26    				cp 07fh
00323B 38 02               B    27    				jr c,nchchar
00323D 3E7C                B    28    chchar			ld a,07ch
00323F 77                  B    29    nchchar			ld (hl),a
003240 13                  B    30    				inc de
003241 10 F0               B    31    				djnz mabllp
                           B    32    
003243 ED53 B8 61 00       B    33    				ld (mem_mon_addr),de
003248 23                  B    34    				inc hl
003249 3622                B    35    				ld (hl),022h
00324B 23                  B    36    				inc hl
00324C 360B                B    37    				ld (hl),11
00324E 23                  B    38    				inc hl
00324F 3600                B    39    				ld (hl),0
003251 CD 5C 13 00         B    40    				call os_print_output_line
003255 C1                  B    41    				pop bc
003256 10 BE               B    42    				djnz smaalp
003258 AF                  B    43    				xor a
003259 C9                  B    44    				ret
                           B    45    	
                           B    46    ;----------------------------------------------
                           B    47    
00325A 3E2000              B    48    gtr_cmd_prefix	db '> ',0
                           B    49    
                           B    50    ;----------------------------------------------
                           B     0    	include 'commands\mount.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; "MOUNT" = Re-mount and show drives v0.02 - AD
                           B     3    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 117


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\mount.asm
                           B     4    
00325D                     B     5    os_cmd_remount
                           B     6    
00325D 3E00                B     7    				ld a,0							00325F CD 68 18 00         B     8    				call os_mount_volumes
003263 CD F9 13 00         B     9    				call os_new_line
003267 AF                  B    10    				xor a
003268 C9                  B    11    				ret
                           B    12    
                           B    13    ;----------------------------------------------
                           B    14    	
                           B     0    	include 'commands\vers.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; "Vers" = Show OS / Hardware version v0.02 - A
                           B     3    ;----------------------------------------------
                           B     4    
003269                     B     5    os_cmd_vers
                           B     6    
003269 21 B1 56 00         B     7    				ld hl,os_version_txt
00326D CD 51 0F 00         B     8    				call os_print_string
                           B     9    			
003271 CD AB 40 00         B    10    				call hwsc_get_version
003275 D5                  B    11    				push de
003276 EB                  B    12    				ex de,hl
003277 CD 50 13 00         B    13    				call os_show_hex_word
                           B    14    				
00327B 21 D4 56 00         B    15    				ld hl,fwd_slash_txt
00327F CD 51 0F 00         B    16    				call os_print_string
                           B    17    				
003283 21 BF 56 00         B    18    				ld hl,hw_version_txt
003287 CD 51 0F 00         B    19    				call os_print_string
00328B D1                  B    20    				pop de
00328C CD 50 13 00         B    21    				call os_show_hex_word
                           B    22    				
003290 CD F9 13 00         B    23    				call os_new_line
003294 CD F9 13 00         B    24    				call os_new_line	
003298 AF                  B    25    				xor a
003299 C9                  B    26    				ret
                           B    27    	
                           B    28    ;----------------------------------------------
                           B    29    	
                           B     0    	include 'commands\exec.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"exec" - execute script V0.04 - ADL mode
                           B     3    ;
                           B     4    ; Notes: Changing drives within a script not su
                           B     5    ;        Scripts cannot launch scripts as this 
                           B     6    ;		 Abort with CRTL + C
                           B     7    ;
                           B     8    ;        Supports: IF [CONDITION] jumps. Syntax
                           B     9    ;        
                           B    10    ;          "IF ENVAR = STRING LABEL" (or IF ENV
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 118


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\exec.asm
                           B    11    ;          (goto LABEL must be declared as [LAB
                           B    12    ;----------------------------------------------
                           B    13    
       00000010            B    14    max_if_chars		equ 16 ;(string size for en
                           B    15    
       00000000            B    16    scr_in_script		equ 0
       00000001            B    17    scr_find_new_line	equ 1
       00000002            B    18    scr_if_condition	equ 2
       00000003            B    19    scr_end				equ 3
                           B    20    
                           B    21    
00329A 21 89 62 00         B    22    os_cmd_exec		ld hl,script_flags				00329E CB46                B    23    				bit scr_in_script,(hl)
0032A0 C2 31 34 00         B    24    				jp nz,script_error
0032A4 E5                  B    25    				push hl
0032A5 CD AD 32 00         B    26    				call do_script
0032A9 E1                  B    27    				pop hl
0032AA CB86                B    28    				res scr_in_script,(hl)
0032AC C9                  B    29    				ret
                           B    30    				
0032AD CBC6                B    31    do_script		set scr_in_script,(hl)
                           B    32    			
0032AF 2A 74 62 00         B    33    				ld hl,(os_args_loc)				0032B3 11 A1 61 00         B    34    				ld de,script_fn					0032B7 060D                B    35    				ld b,13
0032B9 CD 3F 12 00         B    36    				call os_copy_ascii_run
0032BD AF                  B    37    				xor a
0032BE 12                  B    38    				ld (de),a
                           B    39    				
0032BF CD 9B 1A 00         B    40    				call fs_get_dir_cluster			0032C3 ED53 80 62 00       B    41    				ld (script_dir),de
                           B    42    				
0032C8 CD C4 16 00         B    43    				call os_check_volume_format		0032CC C0                  B    44    				ret nz
                           B    45    				
0032CD CD FD 33 00         B    46    				call new_script
                           B    47    
                           B    48    ;----------------------------------------------
                           B    49    
                           B    50    
0032D1 3A E6 62 00         B    51    scrp_loop		ld a,(key_mod_flags)			0032D5 E602                B    52    				and 2
0032D7 28 12               B    53    				jr z,no_quit_script	
0032D9 CD 5C 44 00         B    54    				call os_get_key_press
0032DD FE21                B    55    				cp 021h							0032DF 20 0A               B    56    				jr nz,no_quit_script
                           B    57    
0032E1 21 D1 5B 00         B    58    				ld hl,script_aborted_msg
0032E5 CD 30 14 00         B    59    				call os_show_packed_text
0032E9 AF                  B    60    				xor a							0032EA C9                  B    61    				ret
                           B    62    					
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 119


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\exec.asm
                           B    63    
0032EB CD 10 34 00         B    64    no_quit_script	call open_script				0032EF C0                  B    65    				ret nz
0032F0 CD 3B 34 00         B    66    				call read_script				0032F4 C0                  B    67    				ret nz
0032F5 21 89 62 00         B    68    				ld hl,script_flags				0032F9 CB5E                B    69    				bit scr_end,(hl)
0032FB 28 02               B    70    				jr z,scr_to_do
0032FD AF                  B    71    scr_done		xor a
0032FE C9                  B    72    				ret
                           B    73    				
0032FF 21 D0 61 00         B    74    scr_to_do		ld hl,commandstring				003303 7E                  B    75    				ld a,(hl)
003304 FE5B                B    76    				cp '['
003306 28 1C               B    77    				jr z,exec_scr_next
                           B    78    
003308 11 19 57 00         B    79    				ld de,if_command_txt			00330C 0603                B    80    				ld b,3
00330E CD 20 12 00         B    81    				call os_compare_strings
003312 28 18               B    82    				jr z,do_exec_if
                           B    83    				
003314 11 1C 57 00         B    84    				ld de,end_command_txt			003318 0604                B    85    				ld b,4
00331A CD 20 12 00         B    86    				call os_compare_strings
00331E 28 DD               B    87    				jr z,scr_done
                           B    88    			
003320 CD 7F 0C 00         B    89    				call os_parse_cmd_chk_ps		                           B    90    				
003324 21 89 62 00         B    91    exec_scr_next	ld hl,script_flags
003328 CBCE                B    92    				set scr_find_new_line,(hl)
00332A 18 A5               B    93    				jr scrp_loop
                           B    94    	
                           B    95    ;----------------------------------------------
                           B    96    
                           B    97    ; Handle "IF" instructions in the format:
                           B    98    
                           B    99    ; "IF ENVAR = VALUE LABLE"
                           B   100    ; "IF ENVAR <> VALUE LABLE"
                           B   101    ;  (LABEL must be declared at start of a script
                           B   102    ;  square brackets ([label]) with no other data
                           B   103    
00332C 21 D2 61 00         B   104    do_exec_if		ld hl,commandstring+2			003330 CD EF 0F 00         B   105    				call os_scan_for_non_space
003334 CA 31 34 00         B   106    				jr z,script_error				003338 11 8A 62 00         B   107    				ld de,if_name_txt
00333C 0610                B   108    				ld b,max_if_chars
00333E CD 3F 12 00         B   109    				call os_copy_ascii_run			003342 AF                  B   110    				xor a
003343 12                  B   111    				ld (de),a
                           B   112    				
003344 CD EF 0F 00         B   113    				call os_scan_for_non_space		003348 CA 31 34 00         B   114    				jr z,script_error
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 120


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\exec.asm
00334C DD21 89 62 00       B   115    				ld ix,script_flags
003351 DDCB0096            B   116    				res scr_if_condition,(ix)
003355 7E                  B   117    				ld a,(hl)
003356 FE3D                B   118    				cp '='
003358 28 04               B   119    				jr z,if_equals
00335A DDCB00D6            B   120    				set scr_if_condition,(ix)		                           B   121    
00335E CD E6 0F 00         B   122    if_equals		call os_scan_for_space			003362 CD EF 0F 00         B   123    				call os_scan_for_non_space		003366 CA 31 34 00         B   124    				jr z,script_error
00336A 11 9C 62 00         B   125    				ld de,if_value_txt				00336E 0610                B   126    				ld b,max_if_chars
003370 CD 3F 12 00         B   127    				call os_copy_ascii_run
003374 AF                  B   128    				xor a
003375 12                  B   129    				ld (de),a
                           B   130    				
003376 CD EF 0F 00         B   131    				call os_scan_for_non_space
00337A CA 31 34 00         B   132    				jr z,script_error
00337E 11 AE 62 00         B   133    				ld de,if_label_txt				003382 0610                B   134    				ld b,max_if_chars
003384 CD 3F 12 00         B   135    				call os_copy_ascii_run			003388 AF                  B   136    				xor a
003389 12                  B   137    				ld (de),a						                           B   138    								
00338A 21 8A 62 00         B   139    				ld hl,if_name_txt				00338E CD 6A 1B 00         B   140    				call os_get_envar				003392 C2 24 33 00         B   141    				jp nz,exec_scr_next				                           B   142    								
003396 21 9C 62 00         B   143    				ld hl,if_value_txt
00339A DD21 89 62 00       B   144    				ld ix,script_flags
00339F DDCB0056            B   145    				bit scr_if_condition,(ix)
0033A3 20 0A               B   146    				jr nz,if_cond_diff
0033A5 CD 20 12 00         B   147    				call os_compare_strings			0033A9 C2 24 33 00         B   148    				jp nz,exec_scr_next				0033AD 18 08               B   149    				jr if_cond_met
0033AF CD 20 12 00         B   150    if_cond_diff	call os_compare_strings			0033B3 CA 24 33 00         B   151    				jp z,exec_scr_next				                           B   152    
0033B7 CD FD 33 00         B   153    if_cond_met		call new_script					                           B   154    
0033BB CD 10 34 00         B   155    find_if_label	call open_script				0033BF C0                  B   156    				ret nz
                           B   157    
0033C0 CD 3B 34 00         B   158    				call read_script
0033C4 C0                  B   159    				ret nz
0033C5 21 89 62 00         B   160    				ld hl,script_flags
0033C9 CB5E                B   161    				bit scr_end,(hl)
0033CB C2 FD 32 00         B   162    				jp nz,scr_done
                           B   163    				
0033CF 21 D0 61 00         B   164    				ld hl,commandstring				0033D3 7E                  B   165    				ld a,(hl)
0033D4 FE5B                B   166    				cp '['
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 121


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\exec.asm
0033D6 20 1D               B   167    				jr nz,not_a_label				                           B   168    				
0033D8 23                  B   169    if_find_csb		inc hl
0033D9 7E                  B   170    				ld a,(hl)
0033DA B7                  B   171    				or a
0033DB 28 18               B   172    				jr z,not_a_label				0033DD FE5D                B   173    				cp ']'							0033DF 20 F7               B   174    				jr nz,if_find_csb
0033E1 3600                B   175    				ld (hl),0						0033E3 21 D1 61 00         B   176    				ld hl,commandstring+1
0033E7 11 AE 62 00         B   177    				ld de,if_label_txt				0033EB 0610                B   178    				ld b,max_if_chars
0033ED CD 20 12 00         B   179    				call os_compare_strings
0033F1 CA 24 33 00         B   180    				jp z,exec_scr_next				                           B   181    
0033F5 21 89 62 00         B   182    not_a_label		ld hl,script_flags
0033F9 CBCE                B   183    				set scr_find_new_line,(hl)		0033FB 18 BE               B   184    				jr find_if_label
                           B   185    											
                           B   186    ;----------------------------------------------
                           B   187    
0033FD E5                  B   188    new_script		push hl
0033FE 21000000            B   189    				ld hl,0
003402 22 83 62 00         B   190    				ld (script_file_offset),hl		003406 21 89 62 00         B   191    				ld hl,script_flags
00340A CB8E                B   192    				res scr_find_new_line,(hl)		00340C CB9E                B   193    				res scr_end,(hl)
00340E E1                  B   194    				pop hl
00340F C9                  B   195    				ret
                           B   196    								
                           B   197    ;----------------------------------------------
                           B   198    
003410 CD 9B 1A 00         B   199    open_script		call fs_get_dir_cluster			003414 D5                  B   200    				push de
003415 ED5B 80 62 00       B   201    				ld de,(script_dir)				00341A CD A7 1A 00         B   202    				call fs_update_dir_cluster
                           B   203    				
00341E 21 A1 61 00         B   204    				ld hl,script_fn					003422 CD 5C 16 00         B   205    				call os_find_file				003426 ED53 86 62 00       B   206    				ld (script_length),de			00342B D1                  B   207    				pop de
00342C C0                  B   208    				ret nz
00342D 79                  B   209    				ld a,c							00342E B7                  B   210    				or a
00342F 28 04               B   211    				jr z,scr_flok
                           B   212    				
003431 3E8C                B   213    script_error	ld a,08ch
003433 B7                  B   214    				or a
003434 C9                  B   215    				ret
                           B   216    				
003435 CD A7 1A 00         B   217    scr_flok		call fs_update_dir_cluster		003439 AF                  B   218    				xor a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 122


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\exec.asm
00343A C9                  B   219    				ret
                           B   220    				
                           B   221    ;----------------------------------------------
                           B   222    
                           B   223    
00343B 21 D0 61 00         B   224    read_script		ld hl,commandstring				00343F 01500000            B   225    				ld bc,max_buffer_chars			003443 3E20                B   226    				ld a,32
003445 CD BD 15 00         B   227    				call os_bchl_memfill
                           B   228    				
003449 11500000            B   229    				ld de,max_buffer_chars			00344D CD 6B 16 00         B   230    				call os_set_load_length
                           B   231    				
003451 AF                  B   232    				xor a
003452 2A 86 62 00         B   233    				ld hl,(script_length)
003456 ED5B 83 62 00       B   234    				ld de,(script_file_offset)		00345B 37                  B   235    				scf
00345C ED52                B   236    				sbc hl,de						00345E 30 08               B   237    				jr nc,not_eoscr					003460 21 89 62 00         B   238    				ld hl,script_flags
003464 CBDE                B   239    				set scr_end,(hl)				003466 AF                  B   240    				xor a
003467 C9                  B   241    				ret
003468 CD 73 16 00         B   242    not_eoscr		call os_set_file_pointer
                           B   243    
00346C 21 D0 61 00         B   244    				ld hl,commandstring				003470 CD 89 16 00         B   245    				call os_read_bytes_from_file
003474 B7                  B   246    				or a			
003475 28 03               B   247    				jr z,scr_load_ok
003477 FECC                B   248    				cp 0cch							003479 C0                  B   249    				ret nz							                           B   250    
00347A 21 89 62 00         B   251    scr_load_ok		ld hl,script_flags
00347E CB4E                B   252    				bit scr_find_new_line,(hl)		003480 20 17               B   253    				jr nz,scr_fnl					                           B   254    
003482 21 D0 61 00         B   255    				ld hl,commandstring				003486 0650                B   256    				ld b,max_buffer_chars
003488 7E                  B   257    scr_fcr			ld a,(hl)
003489 FE20                B   258    				cp 32
00348B 38 05               B   259    				jr c,scr_gotclcr
00348D 23                  B   260    				inc hl
00348E 10 F8               B   261    				djnz scr_fcr
003490 AF                  B   262    				xor a
003491 C9                  B   263    				ret
003492 3620                B   264    scr_gotclcr		ld (hl),32						003494 23                  B   265    				inc hl
003495 10 FB               B   266    				djnz scr_gotclcr
003497 AF                  B   267    				xor a
003498 C9                  B   268    				ret
                           B   269    
003499 FD2A 83 62 00       B   270    scr_fnl			ld iy,(script_file_offset)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 123


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\exec.asm
00349E 21 D0 61 00         B   271    				ld hl,commandstring	
0034A2 7E                  B   272    scr_find_cr		ld a,(hl)						0034A3 B7                  B   273    				or a
0034A4 20 07               B   274    				jr nz,scr_neocl					0034A6 FD22 83 62 00       B   275    scr_eocl		ld (script_file_offset),iy
0034AB 18 8E               B   276    				jr read_script				
0034AD FE20                B   277    scr_neocl		cp 20h							0034AF 38 05               B   278    				jr c,scr_got_cr
0034B1 23                  B   279    				inc hl
0034B2 FD23                B   280    				inc iy
0034B4 18 EC               B   281    				jr scr_find_cr
                           B   282    				
0034B6 7E                  B   283    scr_got_cr		ld a,(hl)
0034B7 B7                  B   284    				or a							0034B8 28 EC               B   285    				jr z,scr_eocl					0034BA FE20                B   286    				cp 20h
0034BC 30 05               B   287    				jr nc,scr_got_ch				0034BE 23                  B   288    				inc hl
0034BF FD23                B   289    				inc iy
0034C1 18 F3               B   290    				jr scr_got_cr
                           B   291    
0034C3 FD22 83 62 00       B   292    scr_got_ch		ld (script_file_offset),iy
0034C8 21 89 62 00         B   293    				ld hl,script_flags				0034CC CB8E                B   294    				res scr_find_new_line,(hl)
0034CE C3 3B 34 00         B   295    				jr read_script
                           B   296    
                           B   297    
                           B   298    ;----------------------------------------------
                           B   299    
                           B   300    		
                           B   301    				
                           B   302    				
                           B   303    				
                           B   304    				
                           B   305    				
                           B     0    	include 'commands\ltn.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; OS "<" Command: Update mem hex bytes and re-d
                           B     3    ;
                           B     4    ; Not currently enabled in PROSE
                           B     5    ;----------------------------------------------
                           B     6    
0034D2                     B     7    os_cmd_ltn
                           B     8    
0034D2 AF                  B     9    				xor a
0034D3 C9                  B    10    				ret
                           B    11    
                           B    12    
                           B    13    ;----------------------------------------------
                           B    14    	
                           B     0    	include 'commands\pen.asm'
                           B     1    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 124


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\pen.asm
                           B     2    ;"Pen" - Change attribute v0.03 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
0034D4                     B     5    os_cmd_pen
                           B     6    	
0034D4 0612                B     7    				ld b,18							0034D6 DD21 4F 5F 00       B     8    				ld ix,current_pen
                           B     9    				
0034DB CD BB 1C 00         B    10    chpenlp			call hexword_or_bust			0034DF 28 0D               B    11    				jr z,pendone					0034E1 23                  B    12    				inc hl
0034E2 DD7300              B    13    				ld (ix),e
0034E5 DD7201              B    14    				ld (ix+1),d
0034E8 DD23                B    15    				inc ix
0034EA DD23                B    16    				inc ix
0034EC 10 ED               B    17    				djnz chpenlp	
                           B    18    				
0034EE 21 53 5F 00         B    19    pendone			ld hl,pen_palette				0034F2 CD 7A 3E 00         B    20    				call hswc_set_ui_colours
0034F6 AF                  B    21    				xor a
0034F7 C9                  B    22    				ret
                           B    23    
                           B    24    ;----------------------------------------------
                           B     0    	include 'commands\palette.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"Palette" - Change attribute v0.01 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
0034F8                     B     5    os_cmd_palette
                           B     6    
0034F8 0610                B     7    				ld b,16							0034FA DD21 53 5F 00       B     8    				ld ix,pen_palette
                           B     9    				
0034FF 0E00                B    10    				ld c,0
003501 C5                  B    11    chcollp			push bc
003502 CD BB 1C 00         B    12    				call hexword_or_bust			003506 C1                  B    13    				pop bc
003507 28 0E               B    14    				jr z,colrdone					003509 0C                  B    15    				inc c
00350A 23                  B    16    				inc hl
00350B DD7300              B    17    				ld (ix),e
00350E DD7201              B    18    				ld (ix+1),d
003511 DD23                B    19    				inc ix
003513 DD23                B    20    				inc ix
003515 10 EA               B    21    				djnz chcollp
                           B    22    			
003517 79                  B    23    colrdone		ld a,c
003518 B7                  B    24    				or a
003519 20 04               B    25    				jr nz,pal_ok
00351B 3E81                B    26    				ld a,81h						00351D B7                  B    27    				or a
00351E C9                  B    28    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 125


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\palette.asm
00351F 21 53 5F 00         B    29    pal_ok			ld hl,pen_palette
003523 CD 7A 3E 00         B    30    				call hswc_set_ui_colours	
003527 AF                  B    31    				xor a
003528 C9                  B    32    				ret
                           B    33    
                           B    34    ;----------------------------------------------
                           B     0    	include 'commands\mouse.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; "Mouse" = Reset / Enable Mouse Driver v0.05 -
                           B     3    ;----------------------------------------------
                           B     4    
       00000280            B     5    window_width_pixels		equ 640
       000001E0            B     6    window_height_pixels	equ 480
                           B     7    
       00000064            B     8    default_sample_rate 	equ 100			; 100 s
       00000003            B     9    default_resolution		equ 03h			; 8 cou
       000000E6            B    10    default_scaling			equ 0e6h		; valid
                           B    11    
003529                     B    12    os_cmd_mouse
                           B    13    
                           B    14    		
003529 CD DA 3B 00         B    15    				call disable_ms_irq
                           B    16    
00352D 21 16 61 00         B    17    				ld hl,devices_connected
003531 CB8E                B    18    				res 1,(hl)
                           B    19    		
003533 CD F0 41 00         B    20    				call init_mouse
003537 C0                  B    21    				ret nz
                           B    22    			
003538 AF                  B    23    				xor a
003539 32 EF 62 00         B    24    				ld (mouse_packet_index),a
00353D 32 F0 62 00         B    25    				ld (mouse_buttons),a
003541 21000000            B    26    				ld hl,0
003545 22 F1 62 00         B    27    				ld (mouse_disp_x),hl
003549 22 F4 62 00         B    28    				ld (mouse_disp_y),hl
                           B    29    
00354D 21800200            B    30    				ld hl,window_width_pixels
003551 11E00100            B    31    				ld de,window_height_pixels
003555 CD 7A 14 00         B    32    				call os_set_mouse_window
                           B    33    
003559 CD D4 3B 00         B    34    				call enable_ms_irq
                           B    35    
00355D 21 16 61 00         B    36    				ld hl,devices_connected
003561 CBCE                B    37    				set 1,(hl)
003563 AF                  B    38    				xor a
003564 C9                  B    39    				ret				
                           B    40    				
                           B    41    ;----------------------------------------------
                           B    42    	
                           B     0    	include 'commands\vmode.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"vmode" - Change video mode - ADL mode 0.3
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 126


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\vmode.asm
                           B     3    ;----------------------------------------------
                           B     4    
003565                     B     5    os_cmd_vmode
                           B     6    	
003565 CD BB 1C 00         B     7    				call hexword_or_bust			003569 20 04               B     8    				jr nz,vm_data					00356B 3E81                B     9    				ld a,81h						00356D B7                  B    10    				or a
00356E C9                  B    11    				ret
                           B    12    
00356F 7B                  B    13    vm_data			ld a,e
003570 CD 96 15 00         B    14    				call os_set_vmode
003574 C9                  B    15    				ret
                           B    16    				
                           B    17    ;----------------------------------------------
                           B     0    	include 'commands\font.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"font" - replace font. V0.01 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
003575                     B     5    os_cmd_font
                           B     6    	
003575 CD C4 16 00         B     7    				call os_check_volume_format	
003579 C0                  B     8    				ret nz
                           B     9    				
00357A CD 3D 29 00         B    10    				call filename_or_bust			00357E 22 02 69 00         B    11    				ld (scratch_pad),hl
                           B    12    
003582 CD 9B 1A 00         B    13    				call fs_get_dir_cluster			003586 ED53 05 69 00       B    14    				ld (scratch_pad+3),de
                           B    15    				
00358B CD 21 17 00         B    16    				call os_root_dir				00358F C0                  B    17    				ret nz
003590 21 FE 35 00         B    18    				ld hl,fonts_fn
003594 CD 11 17 00         B    19    				call os_change_dir
003598 20 1E               B    20    				jr nz,no_font
                           B    21    				
00359A 2A 02 69 00         B    22    				ld hl,(scratch_pad)
00359E CD 5C 16 00         B    23    				call os_find_file				0035A2 20 14               B    24    				jr nz,no_font
                           B    25    				
0035A4 11000800            B    26    				ld de,800h
0035A8 CD 6B 16 00         B    27    				call os_set_load_length			                           B    28    
0035AC 21000080            B    29    				ld hl,vram_a_addr				0035B0 CD 89 16 00         B    30    				call os_read_bytes_from_file
0035B4 CD C4 35 00         B    31    				call convert_font
                           B    32    				
0035B8 F5                  B    33    no_font			push af
0035B9 ED5B 05 69 00       B    34    				ld de,(scratch_pad+3)			0035BE CD A7 1A 00         B    35    				call fs_update_dir_cluster
0035C2 F1                  B    36    				pop af
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 127


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\font.asm
0035C3 C9                  B    37    				ret
                           B    38    				
                           B    39    
                           B    40    ;----------------------------------------------
                           B    41    				
0035C4 1EFF                B    42    convert_font	ld e,255						0035C6 01080000            B    43    				ld bc,8
0035CA 21F80780            B    44    				ld hl,vram_a_addr+07f8h	
0035CE CD D9 35 00         B    45    conv_allch		call char_to_font
0035D2 AF                  B    46    				xor a
0035D3 ED42                B    47    				sbc hl,bc
0035D5 1D                  B    48    				dec e
0035D6 20 F6               B    49    				jr nz,conv_allch
0035D8 C9                  B    50    				ret
                           B    51    
                           B    52    ;----------------------------------------------
                           B    53    
                           B    54    ; set E = character number
                           B    55    ;     HL = character source def address
                           B    56    
0035D9 E5                  B    57    char_to_font	push hl
0035DA C5                  B    58    				push bc
0035DB 01400000            B    59    				ld bc,64
0035DF 43                  B    60    				ld b,e
0035E0 ED4C                B    61    				mlt bc
0035E2 DD210000 80         B    62    				ld ix,vram_a_addr
0035E7 DD09                B    63    				add ix,bc
0035E9 CD F1 35 00         B    64    				call conv_char
0035ED C1                  B    65    				pop bc
0035EE E1                  B    66    				pop hl
0035EF AF                  B    67    				xor a
0035F0 C9                  B    68    				ret
                           B    69    	
                           B    70    ;----------------------------------------------
                           B    71    
0035F1 0608                B    72    conv_char		ld b,8
0035F3 7E                  B    73    bfontlp1		ld a,(hl)
0035F4 DD7700              B    74    				ld (ix),a
0035F7 23                  B    75    				inc hl
0035F8 ED3208              B    76    				lea ix,ix+8
0035FB 10 F6               B    77    				djnz bfontlp1
0035FD C9                  B    78    				ret	
                           B    79    				
                           B    80    ;----------------------------------------------
                           B    81    
0035FE 666F6E74 7300       B    82    fonts_fn		db "fonts",0
                           B    83    
                           B    84    ;----------------------------------------------
                           B     0    	include 'commands\set.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"set" - set an environment variable v0.01
                           B     3    ;
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 128


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\set.asm
                           B     4    ; Command should be in format: "SET BLAH=SOMETH
                           B     5    ;
                           B     6    ;----------------------------------------------
                           B     7    
003604 7E                  B     8    os_cmd_set		ld a,(hl)					; i
003605 B7                  B     9    				or a
003606 28 3B               B    10    				jr z,show_envars
                           B    11    
003608 11 05 69 00         B    12    				ld de,scratch_pad+3			; p
00360C 7E                  B    13    evsalp1			ld a,(hl)
00360D 12                  B    14    				ld (de),a
00360E B7                  B    15    				or a
00360F 28 2E               B    16    				jr z,set_bad_args
003611 FE3D                B    17    				cp '='
003613 28 04               B    18    				jr z,evsadone1
003615 23                  B    19    				inc hl
003616 13                  B    20    				inc de
003617 18 F3               B    21    				jr evsalp1
003619 AF                  B    22    evsadone1		xor a
00361A 12                  B    23    				ld (de),a
00361B 13                  B    24    				inc de
00361C 23                  B    25    				inc hl
00361D ED53 02 69 00       B    26    				ld (scratch_pad),de
                           B    27    
003622 7E                  B    28    evsalp2			ld a,(hl)
003623 12                  B    29    				ld (de),a
003624 FE20                B    30    				cp ' '
003626 28 07               B    31    				jr z,evsadone2
003628 B7                  B    32    				or a
003629 28 14               B    33    				jr z,set_bad_args
00362B 23                  B    34    				inc hl
00362C 13                  B    35    				inc de
00362D 18 F3               B    36    				jr evsalp2
00362F AF                  B    37    evsadone2		xor a
003630 12                  B    38    				ld (de),a
                           B    39    				
003631 21 05 69 00         B    40    				ld hl,scratch_pad+3
003635 ED5B 02 69 00       B    41    				ld de,(scratch_pad)
00363A CD AA 1B 00         B    42    				call os_set_envar
00363E C9                  B    43    				ret
                           B    44    
00363F 3E82                B    45    set_bad_args	ld a,82h
003641 B7                  B    46    				or a
003642 C9                  B    47    				ret
                           B    48    				
                           B    49    
003643 21 13 63 00         B    50    show_envars		ld hl,envar_list
                           B    51    				
003647 7E                  B    52    show_envlp		ld a,(hl)
003648 FEFF                B    53    				cp 0ffh
00364A 28 12               B    54    				jr z,set_done
00364C E5                  B    55    				push hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 129


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\set.asm
00364D CD 51 0F 00         B    56    				call os_print_string
003651 CD F9 13 00         B    57    				call os_new_line
003655 E1                  B    58    				pop hl
                           B    59    				
003656 23                  B    60    set_fnl			inc hl
003657 7E                  B    61    				ld a,(hl)
003658 B7                  B    62    				or a
003659 20 FB               B    63    				jr nz,set_fnl
00365B 23                  B    64    				inc hl
00365C 18 E9               B    65    				jr show_envlp
                           B    66    				
00365E AF                  B    67    set_done		xor a
00365F C9                  B    68    				ret
                           B    69    								
                           B    70    ;----------------------------------------------
                           B     0    	include 'commands\dz.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; OS "DZ" Command: Z80-mode Disassemble V0.01
                           B     3    ;----------------------------------------------
                           B     4    
003660 FD21 B6 23 00       B     5    os_cmd_dz		ld iy,prefix_bits_loc
003665 FDCB 07 86          B     6    				res adl_dis,(iy+var_adl)
003669 C3 D8 1D 00         B     7    				jp os_cmd_d_go
                           B     8    				
                           B     9    ;----------------------------------------------
                           B     0    	include 'commands\sound.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"Sound" - Play a section of Audio RAM v1.00
                           B     3    ;----------------------------------------------
                           B     4    
00366D 11FFFF00            B     5    os_cmd_sound	ld de,0ffffh					003671 ED53 00 37 00       B     6    				ld (aud_per),de
003676 3E40                B     7    				ld a,64
003678 32 02 37 00         B     8    				ld (aud_vol),a
00367C 3E11                B     9    				ld a,11h
00367E 32 03 37 00         B    10    				ld (aud_chans),a
                           B    11    				
003682 CD BB 1C 00         B    12    				call hexword_or_bust			003686 20 06               B    13    				jr nz,alocok					003688 CD BB 43 00         B    14    				call hwsc_disable_audio			00368C AF                  B    15    				xor a
00368D C9                  B    16    				ret
00368E ED53 F4 36 00       B    17    alocok			ld (aud_loc),de
003693 ED53 FA 36 00       B    18    				ld (aud_loc_loop),de
                           B    19    				
003698 CD BB 1C 00         B    20    				call hexword_or_bust
00369C 20 04               B    21    				jr nz,gotaudlen
00369E 3E8D                B    22    missaudpar		ld a,8dh						0036A0 B7                  B    23    				or a
0036A1 C9                  B    24    				ret				
0036A2 ED53 F7 36 00       B    25    gotaudlen		ld (aud_len),de
0036A7 ED53 FD 36 00       B    26    				ld (aud_len_loop),de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 130


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\sound.asm
                           B    27    				
0036AC CD BB 1C 00         B    28    				call hexword_or_bust
0036B0 28 33               B    29    				jr z,play_sound
0036B2 7B                  B    30    				ld a,e
0036B3 32 00 37 00         B    31    				ld (aud_per),a
0036B7 7A                  B    32    				ld a,d
0036B8 32 01 37 00         B    33    				ld (aud_per+1),a
                           B    34    				
0036BC CD BB 1C 00         B    35    				call hexword_or_bust
0036C0 28 23               B    36    				jr z,play_sound
0036C2 7B                  B    37    				ld a,e
0036C3 32 02 37 00         B    38    				ld (aud_vol),a
                           B    39    				
0036C7 CD BB 1C 00         B    40    				call hexword_or_bust
0036CB 28 18               B    41    				jr z,play_sound
0036CD 7B                  B    42    				ld a,e
0036CE 32 03 37 00         B    43    				ld (aud_chans),a
                           B    44    				
0036D2 CD BB 1C 00         B    45    				call hexword_or_bust
0036D6 28 0D               B    46    				jr z,play_sound
0036D8 7B                  B    47    				ld a,e
0036D9 B7                  B    48    				or a
0036DA 20 09               B    49    				jr nz,play_sound
0036DC 11010000            B    50    				ld de,1
0036E0 ED53 FD 36 00       B    51    				ld (aud_len_loop),de
                           B    52    				
0036E5 21 F4 36 00         B    53    play_sound		ld hl,audio_structure
0036E9 3A 03 37 00         B    54    				ld a,(aud_chans)
0036ED 4F                  B    55    				ld c,a
0036EE CD 6E 43 00         B    56    				call hwsc_play_audio
0036F2 AF                  B    57    				xor a
0036F3 C9                  B    58    				ret
                           B    59    				
                           B    60    
                           B    61    ;----------------------------------------------
                           B    62    
0036F4                     B    63    audio_structure
                           B    64    
0036F4 000000              B    65    aud_loc			dw24 0			;loc
0036F7 000000              B    66    aud_len			dw24 0			;len
0036FA 000000              B    67    aud_loc_loop	dw24 0	  	    ;loop loc
0036FD 000000              B    68    aud_len_loop	dw24 0		    ;loop len
                           B    69    
003700 FFFF                B    70    aud_per			dw 0ffffh		;per
003702 40                  B    71    aud_vol			db 64			;vol
                           B    72    
003703 11                  B    73    aud_chans		db 11h			;channels to pl
                           B    74    
                           B    75    ;----------------------------------------------
                           B    76    		
                           A  3128    
003704 C9                  A  3129    os_cmd_unused	ret		; <- dummy command, sho
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 131


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  3130    
                           A  3131    ;----------------------------------------------
                           A  3132    
003705                     A  3133    os_get_mem_high
                           A  3134    
003705 2A 17 61 00         A  3135    		ld hl,(sysram_os_highest)
003709 ED5B 1A 61 00       A  3136    		ld de,(vram_a_os_highest)
00370E ED4B 1D 61 00       A  3137    		ld bc,(vram_b_os_highest)
003713 AF                  A  3138    		xor a
003714 C9                  A  3139    		ret
                           A  3140    
                           A  3141    ;----------------------------------------------
                           A  3142    
003715                     A  3143    test_amoeba_vers
                           A  3144    
003715 CD AB 40 00         A  3145    				call hwsc_get_version			003719 21060100            A  3146    				ld hl,amoeba_version_required-1
00371D AF                  A  3147    				xor a
00371E ED52                A  3148    				sbc hl,de
003720 D8                  A  3149    				ret c
                           A  3150    				
003721 21 35 57 00         A  3151    				ld hl,hw_warn_txt2
003725 11070100            A  3152    				ld de,amoeba_version_required
003729 CD C1 10 00         A  3153    				call hexword_to_ascii
                           A  3154    				
00372D 21004080            A  3155    				ld hl,vram_a_addr+16384			003731 222010FF            A  3156    				ld (bitmap_parameters),hl		003735 3600                A  3157    				ld (hl),0
003737 E5                  A  3158    				push hl
003738 D1                  A  3159    				pop de
003739 13                  A  3160    				inc de
00373A 01002C01            A  3161    				ld bc,320*240
00373E EDB0                A  3162    				ldir
                           A  3163    					
003740 DD2138D1 80         A  3164    				ld ix,vram_a_addr+16384+(320*11
003745 FD21 20 57 00       A  3165    				ld iy,hw_warn_txt1				00374A FD7E00              A  3166    nextwchar		ld a,(iy)
00374D B7                  A  3167    				or a
00374E 28 3B               A  3168    				jr z,wmsg_done
003750 21400000            A  3169    				ld hl,64
003754 67                  A  3170    				ld h,a
003755 ED6C                A  3171    				mlt hl
003757 11000080            A  3172    				ld de,vram_a_addr
00375B 19                  A  3173    				add hl,de						00375C 0E08                A  3174    				ld c,8
00375E 7E                  A  3175    wpixlp2			ld a,(hl)
00375F 0608                A  3176    				ld b,8
003761 CB17                A  3177    wpixlp1			rl a
003763 30 06               A  3178    				jr nc,nowpix
003765 DD360001            A  3179    				ld (ix),1
003769 18 04               A  3180    				jr wpixd
00376B DD360000            A  3181    nowpix			ld (ix),0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 132


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00376F DD23                A  3182    wpixd			inc ix
003771 10 EE               A  3183    				djnz wpixlp1
003773 11380100            A  3184    				ld de,320-8
003777 DD19                A  3185    				add ix,de
003779 11080000            A  3186    				ld de,8
00377D 19                  A  3187    				add hl,de
00377E 0D                  A  3188    				dec c
00377F 20 DD               A  3189    				jr nz,wpixlp2
                           A  3190    				
003781 1108F6FF            A  3191    				ld de,8-(320*8)
003785 DD19                A  3192    				add ix,de
003787 FD23                A  3193    				inc iy
003789 18 BF               A  3194    				jr nextwchar
                           A  3195    
                           A  3196    
00378B CD E5 41 00         A  3197    wmsg_done		call purge_keyboard
00378F CD AB 3B 00         A  3198    				call set_irq_vector
003793 CD BD 3B 00         A  3199    				call enable_os_irqs
003797 FB                  A  3200    				ei
                           A  3201    
003798 CD 56 40 00         A  3202    wmsg_loop		call hwsc_wait_vrt			;	                           A  3203    				
00379C 11CC0C00            A  3204    				ld de,ccch
0037A0 21 B5 61 00         A  3205    				ld hl,cursorflashtimer
0037A4 34                  A  3206    				inc (hl)
0037A5 7E                  A  3207    				ld a,(hl)
0037A6 E640                A  3208    				and 64
0037A8 28 04               A  3209    				jr z,got_wcolour
0037AA 11000000            A  3210    				ld de,000h
0037AE ED530200 FF         A  3211    got_wcolour		ld (hw_palette+2),de
                           A  3212    								
0037B3 CD 5C 44 00         A  3213    				call os_get_key_press
0037B7 FE76                A  3214    				cp 76h
0037B9 20 DD               A  3215    				jr nz,wmsg_loop
0037BB C3000000            A  3216    				jp 0
                           A  3217    				
                           A  3218    ;----------------------------------------------
                           A  3219    ; Storage Device Drivers
                           A  3220    ;----------------------------------------------
                           A  3221    
                           B     0    	include		'prose_sdcard_driver_v110.asm'	                           B     1    ;----------------------------------------------
                           B     2    ; Low level Z80 MMC/SDC/SDHC card access routin
                           B     3    ;----------------------------------------------
                           B     4    ;
                           B     5    ; V1.10 - SDHC support added
                           B     6    ;
                           B     7    ; Limitations:
                           B     8    ; ------------
                           B     9    ; Does not check for block size
                           B    10    ;
                           B    11    ; Somewhat arbitrary timimg due to quirks of my
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 133


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
                           B    12    ; which means the data from the card following 
                           B    13    ; byte is skipped by the send_command routine.)
                           B    14    
                           B    15    
                           B    16    ;----------------------------------------------
                           B    17    ;
                           B    18    ; Key Routines:      Input Parameters          
                           B    19    ; -------------      ----------------          
                           B    20    ; sd_initialize		no arguments required      
                           B    21    ; sd_read_sector	[sector_lba0-3]				                           B    22    ; sd_write_sector	[sector_lba0-3]    			                           B    23    ;
                           B    24    ; (Assume all other registers are trashed.)
                           B    25    ;
                           B    26    ;----------------------------------------------
                           B    27    
                           B    28    ; Routines respond with Zero Flag set if operat
                           B    29    
                           B    30    ; $01 - SPI mode failed	 
                           B    31    ; $10 - MMC init failed	
                           B    32    ; $11 - SD init failed	
                           B    33    ; $12 - SDHC init failed	
                           B    34    ; $13 - voltage range bad	
                           B    35    ; $14 - check pattern bad
                           B    36    ; $20 - illegal command
                           B    37    ; $21 - bad command response
                           B    38    ; $22 - data token timeout
                           B    39    ; $23 - write timeout
                           B    40    ; $24 - write failed
                           B    41    ;
                           B    42    ;----------------------------------------------
                           B    43    
                           B    44    ; Define "sector_buffer" in main code (512 byte
                           B    45    
                           B    46    ;----------------------------------------------
                           B    47    
       00000041            B    48    CMD1	equ 40h + 1
       00000049            B    49    CMD9	equ 40h + 9
       0000004A            B    50    CMD10	equ 40h + 10
       0000004D            B    51    CMD13	equ 40h + 13
       00000051            B    52    CMD17	equ 40h + 17
       00000058            B    53    CMD24	equ 40h + 24
       00000069            B    54    ACMD41	equ 40h + 41
       00000077            B    55    CMD55	equ 40h + 55
       0000007A            B    56    CMD58	equ 40h + 58
                           B    57    
       00000001            B    58    sd_error_spi_mode_failed		equ 01h
                           B    59    
       00000010            B    60    sd_error_mmc_init_failed		equ 10h
       00000011            B    61    sd_error_sd_init_failed			equ 11h
       00000012            B    62    sd_error_sdhc_init_failed		equ 12h
       00000013            B    63    sd_error_vrange_bad				equ 13h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 134


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
       00000014            B    64    sd_error_check_pattern_bad		equ 14h
                           B    65    
       00000020            B    66    sd_error_illegal_command		equ 20h
       00000021            B    67    sd_error_bad_command_response	equ 21h
       00000022            B    68    sd_error_data_token_timeout		equ 22h
       00000023            B    69    sd_error_write_timeout			equ 23h
       00000024            B    70    sd_error_write_failed			equ 24h
                           B    71    
                           B    72    ;----------------------------------------------
                           B    73    ; PROSE STANDARD DRIVER HEADER
                           B    74    ;----------------------------------------------
                           B    75    
0037BF C3 D3 37 00         B    76    sd_card_driver	jp sd_initialize			; $
0037C3 C3 F5 37 00         B    77    				jp sd_read_sector			; $
0037C7 C3 FB 37 00         B    78    				jp sd_write_sector			; $
0037CB 53445F43 41524400   B    79    				db "SD_CARD",0				; $
                           B    80    
                           B    81    ;----------------------------------------------
                           B    82    ; SD Card INITIALIZE code begins...
                           B    83    ;----------------------------------------------
                           B    84    
0037D3 CD 01 38 00         B    85    sd_initialize	call sd_init_main
0037D7 B7                  B    86    				or a						; i
0037D8 28 05               B    87    				jr z,sd_inok
0037DA CD 92 3B 00         B    88    				call sd_power_off			; i
0037DE C9                  B    89    				ret
                           B    90    
0037DF CD 97 3B 00         B    91    sd_inok			call sd_spi_port_fast		; o
                           B    92    
0037E3 CD 63 39 00         B    93    				call sd_read_cid			; a
0037E7 20 06               B    94    				jr nz,sd_done
0037E9 E5                  B    95    				push hl						; c
0037EA CD CC 38 00         B    96    				call sd_read_csd
0037EE E1                  B    97    				pop hl
                           B    98    
0037EF CD 7A 3B 00         B    99    sd_done			call sd_deselect_card		; R
0037F3 B7                  B   100    				or a						; I
0037F4 C9                  B   101    				ret				 
                           B   102    
                           B   103    ;----------------------------------------------
                           B   104    		
0037F5 CD E7 39 00         B   105    sd_read_sector	call sd_read_sector_main
0037F9 18 F4               B   106    				jr sd_done
                           B   107    
                           B   108    ;----------------------------------------------
                           B   109    	
0037FB CD 0D 3A 00         B   110    sd_write_sector	call sd_write_sector_main
0037FF 18 EE               B   111    				jr sd_done
                           B   112    	
                           B   113    ;----------------------------------------------
                           B   114    	
003801 AF                  B   115    sd_init_main	xor a							Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 135


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
003802 32 11 3B 00         B   116    				ld (sd_card_info),a			
                           B   117    
003806 CD 92 3B 00         B   118    				call sd_power_off				                           B   119    				
00380A 11004000            B   120    				ld de,16384						00380E CD C6 40 00         B   121    				call hwsc_time_delay
                           B   122    							
003812 CD 86 3B 00         B   123    				call sd_power_on				                           B   124    
003816 11830000            B   125    				ld de,131						00381A CD C6 40 00         B   126    				call hwsc_time_delay
                           B   127    				
00381E 060A                B   128    				ld b,10							003820 CD 96 3A 00         B   129    sd_ecilp		call sd_send_eight_clocks
003824 10 FA               B   130    				djnz sd_ecilp
                           B   131    				
003826 21 E5 3A 00         B   132    				ld hl,CMD0_string				00382A CD AE 3A 00         B   133    				call sd_send_command_string		00382E FE01                B   134    				cp 01h							003830 28 03               B   135    				jr z,sd_spi_mode_ok
                           B   136    				
003832 3E01                B   137    				ld a,sd_error_spi_mode_failed
003834 C9                  B   138    				ret		
                           B   139    
                           B   140    ; ---- CARD IS IN IDLE MODE -------------------
                           B   141    
003835 21 EB 3A 00         B   142    sd_spi_mode_ok	ld hl,CMD8_string				003839 CD AE 3A 00         B   143    				call sd_send_command_string
00383D FE01                B   144    				cp 01h
00383F 20 52               B   145    				jr nz,sd_sdc_init				                           B   146    
003841 0604                B   147    				ld b,4
003843 CD D6 3A 00         B   148    				call sd_read_bytes_to_sector_bu
003847 3E01                B   149    				ld a,1
003849 23                  B   150    				inc hl
00384A 23                  B   151    				inc hl
00384B BE                  B   152    				cp (hl)							00384C 28 03               B   153    				jr z,sd_vrok
00384E 3E13                B   154    				ld a,sd_error_vrange_bad
003850 C9                  B   155    				ret				
                           B   156    
003851 3EAA                B   157    sd_vrok			ld a,0aah
003853 23                  B   158    				inc hl
003854 BE                  B   159    				cp (hl)
003855 28 03               B   160    				jr z,sd_check_pattern_ok
003857 3E14                B   161    				ld a,sd_error_check_pattern_bad
003859 C9                  B   162    				ret
                           B   163    				
00385A                     B   164    sd_check_pattern_ok
                           B   165    
                           B   166    ;------ SDHC CARD CAN WORK AT 2.7v - 3.6v -----
                           B   167    	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 136


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
00385A 01401F00            B   168    				ld bc,8000						                           B   169    
00385E 3E77                B   170    sdhc_iwl		ld a,CMD55						003860 CD 9D 3A 00         B   171    				call sd_send_command_null_args
                           B   172    				
003864 21 F1 3A 00         B   173    				ld hl,ACMD41HCS_string			003868 CD AE 3A 00         B   174    				call sd_send_command_string
00386C 28 0C               B   175    				jr z,sdhc_init_ok				00386E CB57                B   176    				bit 2,a
003870 20 05               B   177    				jr nz,sdhc_if					                           B   178    				
003872 0B                  B   179    				dec bc
003873 78                  B   180    				ld a,b
003874 B1                  B   181    				or c
003875 20 E7               B   182    				jr nz,sdhc_iwl
                           B   183    				
003877 3E12                B   184    sdhc_if			ld a,sd_error_sdhc_init_failed	003879 C9                  B   185    				ret
                           B   186    				
00387A                     B   187    sdhc_init_ok
                           B   188    
                           B   189    ;------ SDHC CARD IS INITIALIZED --------------
                           B   190    
00387A 3E7A                B   191    				ld a,CMD58						00387C CD 9D 3A 00         B   192    				call sd_send_command_null_args
                           B   193    					
003880 0604                B   194    				ld b,4							003882 CD D6 3A 00         B   195    				call sd_read_bytes_to_sector_bu
003886 7E                  B   196    				ld a,(hl)
003887 E640                B   197    				and 040h						003889 0F                  B   198    				rrca
00388A 0F                  B   199    				rrca 
00388B F602                B   200    				or 00000010b				
00388D 32 11 3B 00         B   201    				ld (sd_card_info),a				003891 AF                  B   202    				xor a							003892 C9                  B   203    				ret
                           B   204    
                           B   205    	
                           B   206    ;-------- NOT AN SDHC CARD, TRY SD INIT -------
                           B   207    
003893 01401F00            B   208    sd_sdc_init		ld bc,8000						                           B   209    
003897 3E77                B   210    sd_iwl			ld a,CMD55						003899 CD 9D 3A 00         B   211    				call sd_send_command_null_args
                           B   212    
00389D 3E69                B   213    				ld a,ACMD41						00389F CD 9D 3A 00         B   214    				call sd_send_command_null_args
0038A3 28 0C               B   215    				jr z,sd_rdy						                           B   216    				
0038A5 CB57                B   217    				bit 2,a				
0038A7 20 10               B   218    				jr nz,sd_mmc_init				                           B   219    							
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 137


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
0038A9 0B                  B   220    				dec bc
0038AA 78                  B   221    				ld a,b
0038AB B1                  B   222    				or c
0038AC 20 E9               B   223    				jr nz,sd_iwl
                           B   224    				
0038AE 3E11                B   225    				ld a,sd_error_sd_init_failed	0038B0 C9                  B   226    				ret
                           B   227    				
0038B1 3E01                B   228    sd_rdy			ld a,1
0038B3 32 11 3B 00         B   229    				ld (sd_card_info),a				0038B7 AF                  B   230    				xor a							0038B8 C9                  B   231    				ret	
                           B   232    
                           B   233    ;-------- NOT AN SDHC OR SD CARD, TRY MMC INIT 
                           B   234    
0038B9 01401F00            B   235    sd_mmc_init		ld bc,8000						                           B   236    
0038BD 3E41                B   237    sdmmc_iwl		ld a,CMD1
0038BF CD 9D 3A 00         B   238    				call sd_send_command_null_args	0038C3 C8                  B   239    				ret z							                           B   240    				
0038C4 0B                  B   241    sd_mnrdy		dec bc
0038C5 78                  B   242    				ld a,b
0038C6 B1                  B   243    				or c
0038C7 20 F4               B   244    				jr nz,sdmmc_iwl
                           B   245    				
0038C9 3E10                B   246    				ld a,sd_error_mmc_init_failed	0038CB C9                  B   247    				ret
                           B   248    	
                           B   249    ;----------------------------------------------
                           B   250    
                           B   251    ; Returns BC:DE = Total capacity of card (in se
                           B   252    
0038CC                     B   253    sd_read_csd
                           B   254    				
0038CC 3E49                B   255    				ld a,CMD9						0038CE CD 9D 3A 00         B   256    				call sd_send_command_null_args	0038D2 C2 F3 39 00         B   257    				jp nz,sd_bcr_error				                           B   258    
0038D6 CD 81 3A 00         B   259    				call sd_wait_data_token			0038DA C2 FC 39 00         B   260    				jp nz,sd_dt_timeout	
                           B   261    
0038DE 0612                B   262    sd_id_ok		ld b,18							0038E0 CD D6 3A 00         B   263    				call sd_read_bytes_to_sector_bu
                           B   264    
0038E4 DD21 02 67 00       B   265    				ld ix,sector_buffer				0038E9 DDCB0076            B   266    				bit 6,(ix)
0038ED 28 19               B   267    				jr z,sd_csd_v1
                           B   268    
0038EF DD6E09              B   269    sd_csd_v2		ld l,(ix+9)						0038F2 DD6608              B   270    				ld h,(ix+8)
0038F5 23                  B   271    				inc hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 138


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
0038F6 3E0A                B   272    				ld a,10
0038F8 01000000            B   273    				ld bc,0
0038FC 4029                B   274    sd_csd2lp		add.sis hl,hl
0038FE CB11                B   275    				rl c
003900 CB10                B   276    				rl b
003902 3D                  B   277    				dec a
003903 20 F7               B   278    				jr nz,sd_csd2lp
003905 EB                  B   279    				ex de,hl						003906 AF                  B   280    				xor a
003907 C9                  B   281    				ret
                           B   282    				
003908 DD7E06              B   283    sd_csd_v1		ld a,(ix+6)						00390B E603                B   284    				and 00000011b
00390D 57                  B   285    				ld d,a
00390E DD5E07              B   286    				ld e,(ix+7)
003911 DD7E08              B   287    				ld a,(ix+8)
003914 E6C0                B   288    				and 11000000b
003916 CB27                B   289    				sla a
003918 CB13                B   290    				rl e
00391A CB12                B   291    				rl d
00391C CB27                B   292    				sla a
00391E CB13                B   293    				rl e
003920 CB12                B   294    				rl d							                           B   295    				
003922 DD7E09              B   296    				ld a,(ix+9)
003925 E603                B   297    				and 00000011b
003927 47                  B   298    				ld b,a
003928 DD7E0A              B   299    				ld a,(ix+10)
00392B E680                B   300    				and 10000000b
00392D CB27                B   301    				sla a
00392F CB10                B   302    				rl b							                           B   303    				
003931 04                  B   304    				inc b
003932 04                  B   305    				inc b
003933 21000000            B   306    				ld hl,0
003937 CB23                B   307    sd_cmsh			sla e
003939 CB12                B   308    				rl d
00393B CB15                B   309    				rl l
00393D CB14                B   310    				rl h
00393F 10 F6               B   311    				djnz sd_cmsh					                           B   312    				
003941 DD7E05              B   313    				ld a,(ix+5)
003944 E60F                B   314    				and 00001111b					003946 28 17               B   315    				jr z,sd_nbls
003948 47                  B   316    				ld b,a
003949 CB23                B   317    sd_blsh			sla e
00394B CB12                B   318    				rl d
00394D CB15                B   319    				rl l
00394F CB14                B   320    				rl h
003951 10 F6               B   321    				djnz sd_blsh					                           B   322    				
003953 0609                B   323    				ld b,9							Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 139


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
003955 CB3C                B   324    sd_cbsec		srl h
003957 CB1D                B   325    				rr l
003959 CB1A                B   326    				rr d
00395B CB1B                B   327    				rr e
00395D 10 F6               B   328    				djnz sd_cbsec
                           B   329    
00395F E5                  B   330    sd_nbls			push hl
003960 C1                  B   331    				pop bc							003961 AF                  B   332    				xor a
003962 C9                  B   333    				ret
                           B   334    
                           B   335    ;----------------------------------------------
                           B   336    
003963                     B   337    sd_read_cid
                           B   338    	
                           B   339    ; Returns HL = Pointer to device ID string
                           B   340    
003963 3E4A                B   341    				ld a,CMD10						003965 CD 9D 3A 00         B   342    				call sd_send_command_null_args
003969 C2 F3 39 00         B   343    				jp nz,sd_bcr_error				                           B   344    
00396D CD 81 3A 00         B   345    				call sd_wait_data_token			003971 C2 FC 39 00         B   346    				jp nz,sd_dt_timeout
                           B   347    					
003975 0612                B   348    				ld b,18
003977 CD D6 3A 00         B   349    				call sd_read_bytes_to_sector_bu
                           B   350    				
00397B 21 05 67 00         B   351    				ld hl,sector_buffer+03h			00397F 11 22 67 00         B   352    				ld de,sector_buffer+20h
003983 01050000            B   353    				ld bc,5
003987 3A 11 3B 00         B   354    				ld a,(sd_card_info)
00398B E60F                B   355    				and 0fh
00398D 20 01               B   356    				jr nz,sd_cn5
00398F 03                  B   357    				inc bc
003990 EDB0                B   358    sd_cn5			ldir
003992 E5                  B   359    				push hl
003993 D5                  B   360    				push de
003994 21 F7 3A 00         B   361    				ld hl,sd_vnchars
003998 01140000            B   362    				ld bc,20
00399C EDB0                B   363    				ldir
00399E D1                  B   364    				pop de
00399F E1                  B   365    				pop hl
0039A0 13                  B   366    				inc de
0039A1 13                  B   367    				inc de
0039A2 7E                  B   368    				ld a,(hl)
0039A3 CB3F                B   369    				srl a
0039A5 CB3F                B   370    				srl a
0039A7 CB3F                B   371    				srl a
0039A9 CB3F                B   372    				srl a
0039AB C630                B   373    				add a,30h						0039AD 12                  B   374    				ld (de),a
0039AE 13                  B   375    				inc de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 140


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
0039AF 13                  B   376    				inc de
0039B0 7E                  B   377    				ld a,(hl)
0039B1 E60F                B   378    				and 0fh
0039B3 C630                B   379    				add a,30h
0039B5 12                  B   380    				ld (de),a						0039B6 13                  B   381    				inc de
0039B7 13                  B   382    				inc de
0039B8 13                  B   383    				inc de
0039B9 13                  B   384    				inc de
0039BA 13                  B   385    				inc de
0039BB 23                  B   386    				inc hl
0039BC 0604                B   387    				ld b,4
0039BE 7E                  B   388    sd_snulp		ld a,(hl)						0039BF CB3F                B   389    				srl a
0039C1 CB3F                B   390    				srl a
0039C3 CB3F                B   391    				srl a
0039C5 CB3F                B   392    				srl a
0039C7 C630                B   393    				add a,30h
0039C9 FE3A                B   394    				cp 3ah
0039CB 38 02               B   395    				jr c,sd_hvl1
0039CD C607                B   396    				add a,07h
0039CF 12                  B   397    sd_hvl1			ld (de),a
0039D0 13                  B   398    				inc de
0039D1 7E                  B   399    				ld a,(hl)
0039D2 E60F                B   400    				and 0fh
0039D4 C630                B   401    				add a,30h
0039D6 FE3A                B   402    				cp 3ah
0039D8 38 02               B   403    				jr c,sd_hvl2
0039DA C607                B   404    				add a,07h
0039DC 12                  B   405    sd_hvl2			ld (de),a
0039DD 13                  B   406    				inc de
0039DE 23                  B   407    				inc hl
0039DF 10 DD               B   408    				djnz sd_snulp
                           B   409    				
0039E1 21 22 67 00         B   410    				ld hl,sector_buffer+20h			0039E5 AF                  B   411    				xor a
0039E6 C9                  B   412    				ret
                           B   413    
                           B   414    ;----------------------------------------------
                           B   415    ; SD Card READ SECTOR code begins...
                           B   416    ;----------------------------------------------
                           B   417    	
0039E7                     B   418    sd_read_sector_main
                           B   419    
                           B   420    ; 512 bytes are returned in sector buffer
                           B   421    
0039E7 CD 58 3A 00         B   422    				call sd_set_sector_addr
                           B   423    
0039EB 3E51                B   424    				ld a,CMD17						0039ED CD A9 3A 00         B   425    				call sd_send_command_current_ar
0039F1 28 03               B   426    				jr z,sd_rscr_ok					0039F3 3E21                B   427    sd_bcr_error	ld a,sd_error_bad_command_respo
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 141


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
0039F5 C9                  B   428    				ret
                           B   429    
0039F6 CD 81 3A 00         B   430    sd_rscr_ok		call sd_wait_data_token			0039FA 28 03               B   431    				jr z,sd_dt_ok					0039FC 3E22                B   432    sd_dt_timeout	ld a,sd_error_data_token_timeou
0039FE C9                  B   433    				ret
                           B   434    
0039FF 21 02 67 00         B   435    sd_dt_ok		ld hl,sector_buffer
003A03 CD 27 3B 00         B   436    				call sd_read_513_bytes			003A07 CD 1F 3B 00         B   437    				call sd_get_byte
                           B   438    				
003A0B AF                  B   439    				xor a							003A0C C9                  B   440    				ret
                           B   441    
                           B   442    ;----------------------------------------------
                           B   443    ; SD Card WRITE SECTOR code begins...
                           B   444    ;----------------------------------------------
                           B   445    
003A0D                     B   446    sd_write_sector_main
                           B   447    	
003A0D CD 58 3A 00         B   448    				call sd_set_sector_addr
                           B   449    
003A11 3E58                B   450    				ld a,CMD24						003A13 CD A9 3A 00         B   451    				call sd_send_command_current_ar
003A17 20 DA               B   452    				jr nz,sd_bcr_error				                           B   453    				
003A19 CD 96 3A 00         B   454    				call sd_send_eight_clocks		                           B   455    
003A1D 3EFE                B   456    				ld a,0feh
003A1F CD 12 3B 00         B   457    				call sd_send_byte				                           B   458    
003A23 21 02 67 00         B   459    				ld hl,sector_buffer
003A27 CD 56 3B 00         B   460    				call sd_write_512_bytes			003A2B CD 96 3A 00         B   461    				call sd_send_eight_clocks		003A2F CD 96 3A 00         B   462    				call sd_send_eight_clocks		                           B   463    		
003A33 CD 1F 3B 00         B   464    				call sd_get_byte				003A37 E61F                B   465    				and 1fh
003A39 CB3F                B   466    				srl a
003A3B FE02                B   467    				cp 02h
003A3D 28 03               B   468    				jr z,sd_wr_ok
                           B   469    
003A3F 3E24                B   470    sd_write_fail	ld a,sd_error_write_failed
003A41 C9                  B   471    				ret
                           B   472    
003A42 01FFFF00            B   473    sd_wr_ok		ld bc,65535						003A46 CD 1F 3B 00         B   474    sd_wcbsy		call sd_get_byte				003A4A FEFF                B   475    				cp 0ffh
003A4C 20 02               B   476    				jr nz,sd_busy
003A4E AF                  B   477    				xor a							003A4F C9                  B   478    				ret
                           B   479    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 142


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
003A50 0B                  B   480    sd_busy			dec bc
003A51 78                  B   481    				ld a,b
003A52 B1                  B   482    				or c
003A53 20 F1               B   483    				jr nz,sd_wcbsy
                           B   484    
003A55                     B   485    sd_card_busy_timeout
                           B   486    
003A55 3E23                B   487    				ld a,sd_error_write_timeout
003A57 C9                  B   488    				ret	
                           B   489    
                           B   490    ;----------------------------------------------
                           B   491    
003A58                     B   492    sd_set_sector_addr
                           B   493    				
003A58 21 AE 61 00         B   494    				ld hl,sector_lba0
003A5C 4E                  B   495    				ld c,(hl)
003A5D 23                  B   496    				inc hl
003A5E 5E                  B   497    				ld e,(hl)
003A5F 23                  B   498    				inc hl
003A60 56                  B   499    				ld d,(hl)
003A61 23                  B   500    				inc hl
003A62 46                  B   501    				ld b,(hl)					; s
                           B   502    
003A63 3A 11 3B 00         B   503    				ld a,(sd_card_info)
003A67 E610                B   504    				and 10h
003A69 20 0A               B   505    				jr nz,lbatoargs				; i
003A6B 69                  B   506    				ld l,c
003A6C 63                  B   507    				ld h,e
003A6D 7A                  B   508    				ld a,d						; o
003A6E 4029                B   509    				add.sis hl,hl
003A70 8F                  B   510    				adc a,a	
003A71 EB                  B   511    				ex de,hl
003A72 47                  B   512    				ld b,a
003A73 0E00                B   513    				ld c,0
003A75 21 0C 3B 00         B   514    lbatoargs		ld hl,cmd_generic_args
003A79 70                  B   515    				ld (hl),b
003A7A 23                  B   516    				inc hl
003A7B 72                  B   517    				ld (hl),d
003A7C 23                  B   518    				inc hl
003A7D 73                  B   519    				ld (hl),e
003A7E 23                  B   520    				inc hl
003A7F 71                  B   521    				ld (hl),c
003A80 C9                  B   522    				ret
                           B   523    	
                           B   524    	
                           B   525    ;----------------------------------------------
                           B   526    
003A81                     B   527    sd_wait_data_token
                           B   528    
003A81 C5                  B   529    				push bc
003A82 01401F00            B   530    				ld bc,8000				
003A86 CD 1F 3B 00         B   531    sd_wdt			call sd_get_byte			; r
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 143


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
003A8A FEFE                B   532    				cp 0feh
003A8C 28 06               B   533    				jr z,sd_gdt
003A8E 0B                  B   534    				dec bc
003A8F 78                  B   535    				ld a,b
003A90 B1                  B   536    				or c
003A91 20 F3               B   537    				jr nz,sd_wdt
003A93 0C                  B   538    				inc c						; d
003A94 C1                  B   539    sd_gdt			pop bc
003A95 C9                  B   540    				ret
                           B   541    
                           B   542    ;----------------------------------------------
                           B   543    
003A96                     B   544    sd_send_eight_clocks
                           B   545    
003A96 3EFF                B   546    				ld a,0ffh
003A98 CD 12 3B 00         B   547    				call sd_send_byte
003A9C C9                  B   548    				ret
                           B   549    
                           B   550    ;----------------------------------------------
                           B   551    
                           B   552    
003A9D                     B   553    sd_send_command_null_args
                           B   554    
003A9D 21000000            B   555    				ld hl,0
003AA1 22 0C 3B 00         B   556    				ld (cmd_generic_args),hl	; c
003AA5 22 0D 3B 00         B   557    				ld (cmd_generic_args+1),hl	
                           B   558    				
                           B   559    				
                           B   560    	
003AA9                     B   561    sd_send_command_current_args
                           B   562    	
003AA9 21 0B 3B 00         B   563    				ld hl,cmd_generic
003AAD 77                  B   564    				ld (hl),a
                           B   565    
                           B   566    
                           B   567    
003AAE                     B   568    sd_send_command_string
                           B   569    
                           B   570    ; set HL = location of 6 byte command string
                           B   571    ; returns command response in A (ZF set if $00)
                           B   572    
                           B   573    
003AAE CD 72 3B 00         B   574    				call sd_select_card				                           B   575    						
003AB2 CD 96 3A 00         B   576    				call sd_send_eight_clocks		                           B   577    				
003AB6 C5                  B   578    				push bc
003AB7 0606                B   579    				ld b,6
003AB9 7E                  B   580    sd_sclp			ld a,(hl)
003ABA CD 12 3B 00         B   581    				call sd_send_byte				003ABE 23                  B   582    				inc hl
003ABF 10 F8               B   583    				djnz sd_sclp
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 144


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
003AC1 C1                  B   584    				pop bc
                           B   585    				
003AC2 CD 1F 3B 00         B   586    				call sd_get_byte				                           B   587    					
                           B   588    
003AC6                     B   589    sd_wait_valid_response
                           B   590    				
003AC6 C5                  B   591    				push bc
003AC7 0600                B   592    				ld b,0
003AC9 CD 1F 3B 00         B   593    sd_wncrl		call sd_get_byte				003ACD CB7F                B   594    				bit 7,a							003ACF 28 02               B   595    				jr z,sd_gcr
003AD1 10 F6               B   596    				djnz sd_wncrl
                           B   597    								
003AD3 B7                  B   598    sd_gcr			or a							003AD4 C1                  B   599    				pop bc
003AD5 C9                  B   600    				ret
                           B   601    				
                           B   602    	
                           B   603    ;----------------------------------------------
                           B   604    
003AD6                     B   605    sd_read_bytes_to_sector_buffer
                           B   606    
003AD6 21 02 67 00         B   607    				ld hl,sector_buffer
                           B   608    	
003ADA                     B   609    sd_read_bytes
                           B   610    
                           B   611    ; set HL to dest address for data
                           B   612    ; set B to number of bytes required  
                           B   613    
003ADA E5                  B   614    				push hl
003ADB CD 1F 3B 00         B   615    sd_rblp			call sd_get_byte
003ADF 77                  B   616    				ld (hl),a
003AE0 23                  B   617    				inc hl
003AE1 10 F8               B   618    				djnz sd_rblp
003AE3 E1                  B   619    				pop hl
003AE4 C9                  B   620    				ret
                           B   621    	
                           B   622    ;----------------------------------------------
                           B   623    
                           B   624    ; This data can be placed in ROM:
                           B   625    
003AE5 40000000 0095       B   626    CMD0_string			db 40h,00h,00h,00h,00h,95h
003AEB 48000001 AA87       B   627    CMD8_string			db 48h,00h,00h,01h,aah,87h
003AF1 69400000 0001       B   628    ACMD41HCS_string	db 69h,40h,00h,00h,00h,01h
003AF7 2076782E 7820534E   B   629    sd_vnchars			db " vx.x SN:00000000 ",0,0
003AFF 3A303030 30303030 
003B07 30200000 
                           B   630    
                           B   631    
                           B   632    ; The following variables need to be placed in 
                           B   633    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 145


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
003B0B 00                  B   634    cmd_generic			db 00h
003B0C 00000000            B   635    cmd_generic_args	db 00h,00h,00h,00h
003B10 01                  B   636    cmd_generic_crc		db 01h
                           B   637    
003B11 00                  B   638    sd_card_info		db 0	; Bit [4] = CCS (bl
                           B   639    
                           B   640    
                           B   641    ;==============================================
                           B   642    
                           B   643    ;----------------------------------------------
                           B   644    
                           C     0    include "ez80p_sdcard_code.asm"				;EZ
                           C     1    ;----------------------------------------------
                           C     2    ; eZ80P Specific SD card low-level routines v1.
                           C     3    ;----------------------------------------------
                           C     4    
003B12                     C     5    sd_send_byte
                           C     6    
                           C     7    ;Put byte to send to card in A
                           C     8    
003B12 ED3903              C     9    					out0 (port_sdc_data),a
003B15 C5                  C    10    					push bc
003B16 0E01                C    11    					ld c,port_hw_flags
003B18 ED7410              C    12    sd_wb_loop			tstio 1<<sdc_serializer_bus
003B1B 20 FB               C    13    					jr nz,sd_wb_loop			003B1D C1                  C    14    					pop bc
003B1E C9                  C    15    					ret
                           C    16    
                           C    17    ;----------------------------------------------
                           C    18    
003B1F                     C    19    sd_get_byte
                           C    20    
                           C    21    ; Returns byte read from card in A
                           C    22    
003B1F CD 96 3A 00         C    23    					call sd_send_eight_clocks
003B23 ED3803              C    24    					in0 a,(port_sdc_data)
003B26 C9                  C    25    					ret
                           C    26    
                           C    27    ;----------------------------------------------
                           C    28    
003B27                     C    29    sd_read_513_bytes
                           C    30    
                           C    31    ; optimized sector read
                           C    32    ; set hl = dest location for bytes
                           C    33    ; note: The last byte read (CRC) is not put int
                           C    34    
003B27 C5                  C    35    					push bc
003B28 D5                  C    36    					push de
003B29 1EFF                C    37    					ld e,0ffh
003B2B ED1903              C    38    					out0 (port_sdc_data),e		003B2E 0E01                C    39    					ld c,port_hw_flags			003B30 0600                C    40    					ld b,0						Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 146


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_sdcard_code.asm
                           C    41    
003B32 ED7410              C    42    sd_wser_loop1		tstio 1<<sdc_serializer_bus
003B35 20 FB               C    43    					jr nz,sd_wser_loop1			003B37 DB03                C    44    					in a,(port_sdc_data)		                           C    45    					
003B39 ED1903              C    46    sd_512_loop			out0 (port_sdc_data),e		003B3C 77                  C    47    					ld (hl),a					003B3D 23                  C    48    					inc hl						                           C    49    					
003B3E ED7410              C    50    sd_wser_loop2		tstio 1<<sdc_serializer_bus
003B41 20 FB               C    51    					jr nz,sd_wser_loop2			003B43 DB03                C    52    					in a,(port_sdc_data)		                           C    53    												003B45 ED1903              C    54    					out0 (port_sdc_data),e		003B48 77                  C    55    					ld (hl),a					003B49 23                  C    56    					inc hl						                           C    57    					
003B4A ED7410              C    58    sd_wser_loop3		tstio 1<<sdc_serializer_bus
003B4D 20 FB               C    59    					jr nz,sd_wser_loop3			003B4F DB03                C    60    					in a,(port_sdc_data)		                           C    61    					
003B51 10 E6               C    62    					djnz sd_512_loop
003B53 D1                  C    63    					pop de
003B54 C1                  C    64    					pop bc
003B55 C9                  C    65    					ret
                           C    66    					
                           C    67    ;----------------------------------------------
                           C    68    					
003B56                     C    69    sd_write_512_bytes
                           C    70    
                           C    71    ;optimized sector write
                           C    72    ;set hl = source location for bytes
                           C    73    
003B56 0E01                C    74    					ld c,port_hw_flags			003B58 0600                C    75    					ld b,0						003B5A 7E                  C    76    					ld a,(hl)
003B5B ED3903              C    77    sd_wr512_loop		out0 (port_sdc_data),a
003B5E 23                  C    78    					inc hl
003B5F 7E                  C    79    					ld a,(hl)
003B60 ED7410              C    80    sd_wser_loop4		tstio 1<<sdc_serializer_bus
003B63 20 FB               C    81    					jr nz,sd_wser_loop4			003B65 ED3903              C    82    					out0 (port_sdc_data),a
003B68 23                  C    83    					inc hl
003B69 7E                  C    84    					ld a,(hl)
003B6A ED7410              C    85    sd_wser_loop5		tstio 1<<sdc_serializer_bus
003B6D 20 FB               C    86    					jr nz,sd_wser_loop5
003B6F 10 EA               C    87    					djnz sd_wr512_loop
003B71 C9                  C    88    					ret
                           C    89    
                           C    90    			
                           C    91    ;----------------------------------------------
                           C    92    ; SD Card control
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 147


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_sdcard_code.asm
                           C    93    ;----------------------------------------------
                           C    94    
003B72 F5                  C    95    sd_select_card		push af
003B73 3E02                C    96    					ld a,00h+(1<<sdc_cs)		003B75 ED3902              C    97    sd_wr_sdc_ctrl		out0 (port_sdc_ctrl),a
003B78 F1                  C    98    					pop af
003B79 C9                  C    99    					ret
                           C   100    
                           C   101    
003B7A F5                  C   102    sd_deselect_card	push af
003B7B 3E82                C   103    					ld a,080h+(1<<sdc_cs)		003B7D ED3902              C   104    					out0 (port_sdc_ctrl),a
003B80 CD 96 3A 00         C   105    					call sd_send_eight_clocks	003B84 F1                  C   106    					pop af
003B85 C9                  C   107    					ret
                           C   108    
                           C   109    
003B86 F5                  C   110    sd_power_on			push af
003B87 3A040000            C   111    					ld a,(1<<sdc_speed)			003B8B ED3902              C   112    					out0 (port_sdc_ctrl),a		003B8E 3E83                C   113    					ld a,80h+(1<<sdc_power)+(1<
003B90 18 E3               C   114    					jr sd_wr_sdc_ctrl			                           C   115    
                           C   116    
003B92 F5                  C   117    sd_power_off		push af
003B93 3E01                C   118    					ld a,00h+(1<<sdc_power)		003B95 18 DE               C   119    					jr sd_wr_sdc_ctrl			                           C   120    
                           C   121    
003B97 F5                  C   122    sd_spi_port_fast	push af
003B98 3E84                C   123    					ld a,80h+(1<<sdc_speed)		003B9A 18 D9               C   124    					jr sd_wr_sdc_ctrl
                           C   125    
                           C   126    
                           C   127    ;----------------------------------------------
                           B   646    
                           B   647    ;----------------------------------------------
                           A  3223    	
                           A  3224    ; Additional storage device driver source can b
                           A  3225    ; Also add the driver's PROSE header address la
                           A  3226    
003B9C BF3700              A  3227    driver_table		dw24 sd_card_driver	; Stora
003B9F 000000              A  3228    					dw24 0 				; Stora
003BA2 000000              A  3229    					dw24 0				; Stora
003BA5 000000              A  3230    					dw24 0				; Stora
                           A  3231    					
003BA8 000000              A  3232    					dw24 0				; Essen
                           A  3233    					
                           A  3234    ;----------------------------------------------
                           A  3235    ; IO routines
                           A  3236    ;----------------------------------------------
                           A  3237    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 148


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
                           B     0    	include		'ez80p_interrupt_code.asm'		                           B     1    ;----------------------------------------------
                           B     2    ; ez80p interrupt code v0.05 (MADL mode)
                           B     3    ;----------------------------------------------
                           B     4    
003BAB                     B     5    set_irq_vector
                           B     6    
003BAB AF                  B     7    				xor a
003BAC ED47                B     8    				ld i,a
003BAE 3EC3                B     9    				ld a,c3h						003BB0 32320000            B    10    				ld (032h),a	
003BB4 21 E6 3B 00         B    11    				ld hl,int_routine				003BB8 22330000            B    12    				ld (033h),hl
003BBC C9                  B    13    				ret
                           B    14    
                           B    15    
                           B    16    
003BBD 21 16 61 00         B    17    enable_os_irqs	ld hl,devices_connected			003BC1 CB46                B    18    				bit 0,(hl)
003BC3 C4 CE 3B 00         B    19    				call nz,enable_kb_irq
003BC7 CB4E                B    20    				bit 1,(hl)
003BC9 C4 D4 3B 00         B    21    				call nz,enable_ms_irq
003BCD C9                  B    22    				ret
                           B    23    
                           B    24    
003BCE 3E81                B    25    enable_kb_irq	ld a,10000001b
003BD0 ED3905              B    26    				out0 (port_irq_ctrl),a			003BD3 C9                  B    27    				ret
                           B    28    
003BD4 3E82                B    29    enable_ms_irq	ld a,10000010b
003BD6 ED3905              B    30    				out0 (port_irq_ctrl),a			003BD9 C9                  B    31    				ret
                           B    32    
003BDA 3E02                B    33    disable_ms_irq	ld a,00000010b
003BDC ED3905              B    34    				out0 (port_irq_ctrl),a			003BDF C9                  B    35    				ret
                           B    36    
003BE0 3E3F                B    37    disable_irqs	ld a,00111111b
003BE2 ED3905              B    38    				out0 (port_irq_ctrl),a			003BE5 C9                  B    39    				ret
                           B    40    			
                           B    41    ;----------------------------------------------
                           B    42    
                           B    43    
003BE6                     B    44    int_routine
003BE6 F5                  B    45    				push af							003BE7 ED3807              B    46    				in0 a,(port_ps2_ctrl)			003BEA CB67                B    47    				bit 4,a
003BEC C4 FE 3B 00         B    48    				call nz,kb_interrupt_handler
003BF0 ED3807              B    49    				in0 a,(port_ps2_ctrl)			003BF3 CB6F                B    50    				bit 5,a
003BF5 C4 A0 3C 00         B    51    				call nz,ms_interrupt_handler
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 149


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
003BF9 F1                  B    52    				pop af
                           B    53    
003BFA FB                  B    54    				ei								003BFB 5BED4D              B    55    				reti.l							                           B    56    
                           B    57    ;----------------------------------------------
                           B    58    ; Keyboard IRQ routine v0.03
                           B    59    ;----------------------------------------------
                           B    60    
003BFE                     B    61    kb_interrupt_handler
                           B    62    
                           B    63    ;--- irq test ---------------------------------
                           B    64    
                           B    65    ;				push bc
                           B    66    ;				ld a,0ffh
                           B    67    ;				ld (hw_palette),a
                           B    68    ;				ld b,0
                           B    69    ;testlp1		djnz testlp1
                           B    70    ;				ld a,0
                           B    71    ;				ld (hw_palette),a
                           B    72    ;				pop bc
                           B    73    				
                           B    74    ;--- end of test ------------------------------
                           B    75    
                           B    76    
003BFE E5                  B    77    				push hl							003BFF C5                  B    78    				push bc
                           B    79    				
003C00 ED3802              B    80    key_loop		in0 a,(port_keyboard_data)		003C03 47                  B    81    				ld b,a
                           B    82    
003C04 3A E4 62 00         B    83    				ld a,(key_release_mode)
003C08 B7                  B    84    				or a
003C09 28 20               B    85    				jr z,key_pressed
                           B    86    			
003C0B 78                  B    87    				ld a,b							003C0C FEE0                B    88    				cp 0e0h							003C0E 28 61               B    89    				jr z,kirq_done	
003C10 FEE1                B    90    				cp 0e1h
003C12 28 5D               B    91    				jr z,kirq_done	
                           B    92    				
003C14 CD 7B 3C 00         B    93    				call qualifiers					003C18 7D                  B    94    				ld a,l
003C19 2F                  B    95    				cpl
003C1A 6F                  B    96    				ld l,a
003C1B 3A E6 62 00         B    97    				ld a,(key_mod_flags)
003C1F A5                  B    98    				and l							003C20 32 E6 62 00         B    99    				ld (key_mod_flags),a
003C24 AF                  B   100    				xor a
003C25 32 E4 62 00         B   101    				ld (key_release_mode),a
003C29 18 46               B   102    				jr kirq_done
                           B   103    	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 150


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
                           B   104    
003C2B 78                  B   105    key_pressed		ld a,b							003C2C FEE0                B   106    				cp 0e0h							003C2E 28 41               B   107    				jr z,kirq_done	
003C30 FEE1                B   108    				cp 0e1h
003C32 28 3D               B   109    				jr z,kirq_done	
                           B   110    			
003C34 FEF0                B   111    				cp 0f0h							003C36 20 08               B   112    				jr nz,not_krel
003C38 3E01                B   113    				ld a,1							003C3A 32 E4 62 00         B   114    				ld (key_release_mode),a			003C3E 18 31               B   115    				jr kirq_done
                           B   116    	
                           B   117    	
003C40 CD 7B 3C 00         B   118    not_krel		call qualifiers					003C44 3A E6 62 00         B   119    				ld a,(key_mod_flags)			003C48 B5                  B   120    				or l
003C49 32 E6 62 00         B   121    				ld (key_mod_flags),a			003C4D 68                  B   122    				ld l,b
003C4E 01000000            B   123    				ld bc,0
003C52 3A E2 62 00         B   124    				ld a,(key_buf_wr_idx)
003C56 4F                  B   125    				ld c,a
003C57 7D                  B   126    				ld a,l
003C58 21 C2 62 00         B   127    				ld hl,scancode_buffer
003C5C 09                  B   128    				add hl,bc
003C5D 77                  B   129    				ld (hl),a						003C5E 0E10                B   130    				ld c,16
003C60 09                  B   131    				add hl,bc
003C61 3A E6 62 00         B   132    				ld a,(key_mod_flags)			003C65 77                  B   133    				ld (hl),a	
003C66 3A E2 62 00         B   134    				ld a,(key_buf_wr_idx)
003C6A 3C                  B   135    				inc a
003C6B E60F                B   136    				and 15
003C6D 32 E2 62 00         B   137    				ld (key_buf_wr_idx),a			                           B   138    				
003C71 ED3807              B   139    kirq_done		in0 a,(port_ps2_ctrl)			003C74 CB67                B   140    				bit 4,a	
003C76 20 88               B   141    				jr nz,key_loop
                           B   142    
003C78 C1                  B   143    				pop bc
003C79 E1                  B   144    				pop hl
003C7A C9                  B   145    				ret
                           B   146    
                           B   147    
003C7B 2E40                B   148    qualifiers		ld l,040h		;apps
003C7D FE2F                B   149    				cp 02fh
003C7F C8                  B   150    				ret z
                           B   151    			
003C80 2E20                B   152    				ld l,020h		;r gui
003C82 FE27                B   153    				cp 027h
003C84 C8                  B   154    				ret z
                           B   155    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 151


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
003C85 2E10                B   156    				ld l,010h		;r shift
003C87 FE59                B   157    				cp 059h
003C89 C8                  B   158    				ret z
                           B   159    			
003C8A 2E08                B   160    				ld l,08h		; alt
003C8C FE11                B   161    				cp 011h
003C8E C8                  B   162    				ret z
                           B   163    			
003C8F 2E04                B   164    				ld l,04h		; l gui
003C91 FE1F                B   165    				cp 01fh
                           B   166    			
003C93 2E02                B   167    				ld l,02h		;l ctrl / r ctr
003C95 FE14                B   168    				cp 14h
003C97 C8                  B   169    				ret z
                           B   170    			
003C98 2E01                B   171    				ld l,01h		;l shift
003C9A FE12                B   172    				cp 12h
003C9C C8                  B   173    				ret z
                           B   174    				
003C9D 2E00                B   175    				ld l,0
003C9F C9                  B   176    				ret
                           B   177    
                           B   178    ;----------------------------------------------
                           B   179    ; Mouse IRQ routine v0.03
                           B   180    ;----------------------------------------------
                           B   181    
003CA0                     B   182    ms_interrupt_handler
                           B   183    
                           B   184    ;--- irq test ---------------------------------
                           B   185    
                           B   186    ;				push bc
                           B   187    ;				ld a,0ffh
                           B   188    ;				ld (hw_palette),a
                           B   189    ;				ld b,0
                           B   190    ;testlp1		djnz testlp1
                           B   191    ;				ld a,0
                           B   192    ;				ld (hw_palette),a
                           B   193    ;				pop bc
                           B   194    				
                           B   195    ;--- end of test ------------------------------
                           B   196    
                           B   197    
003CA0 C5                  B   198    				push bc							003CA1 D5                  B   199    				push de							003CA2 E5                  B   200    				push hl							                           B   201    							
003CA3 11000000            B   202    ms_loop			ld de,0		
003CA7 3A EF 62 00         B   203    				ld a,(mouse_packet_index)		003CAB 5F                  B   204    				ld e,a
003CAC 21 EB 62 00         B   205    				ld hl,mouse_packet	
003CB0 19                  B   206    				add hl,de
003CB1 ED3806              B   207    				in0 a,(port_mouse_data)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 152


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
003CB4 77                  B   208    				ld (hl),a
                           B   209    								
003CB5 21 EA 62 00         B   210    				ld hl,mouse_packet_size
003CB9 1C                  B   211    				inc e							003CBA 7B                  B   212    				ld a,e
003CBB BE                  B   213    				cp (hl)
003CBC 20 4F               B   214    				jr nz,msubpkt
                           B   215    
003CBE 3A EB 62 00         B   216    				ld a,(mouse_packet)				003CC2 4F                  B   217    				ld c,a	
003CC3 E607                B   218    				and 0111b
003CC5 32 F0 62 00         B   219    				ld (mouse_buttons),a
                           B   220    				
003CC9 11000000            B   221    				ld de,0							003CCD CB61                B   222    				bit 4,c
003CCF 28 01               B   223    				jr z,mxsignpos
003CD1 1B                  B   224    				dec de
003CD2 3A EC 62 00         B   225    mxsignpos		ld a,(mouse_packet+1)
003CD6 5F                  B   226    				ld e,a
003CD7 2A F1 62 00         B   227    				ld hl,(mouse_disp_x)
003CDB 19                  B   228    				add hl,de
003CDC 22 F1 62 00         B   229    				ld (mouse_disp_x),hl
                           B   230    				
003CE0 11000000            B   231    				ld de,0							003CE4 CB69                B   232    				bit 5,c
003CE6 28 01               B   233    				jr z,mysignpos
003CE8 1B                  B   234    				dec de
003CE9 3A ED 62 00         B   235    mysignpos		ld a,(mouse_packet+2)
003CED 5F                  B   236    				ld e,a
003CEE 2A F4 62 00         B   237    				ld hl,(mouse_disp_y)			003CF2 AF                  B   238    				xor a							003CF3 ED52                B   239    				sbc hl,de
003CF5 22 F4 62 00         B   240    				ld (mouse_disp_y),hl
                           B   241    				
003CF9 21 EE 62 00         B   242    				ld hl,mouse_packet+3			003CFD 3A F7 62 00         B   243    				ld a,(mouse_wheel)
003D01 86                  B   244    				add a,(hl)
003D02 32 F7 62 00         B   245    				ld (mouse_wheel),a
                           B   246    				
003D06 3E01                B   247    				ld a,1
003D08 32 F8 62 00         B   248    				ld (mouse_updated),a			                           B   249    				
003D0C AF                  B   250    				xor a
003D0D 32 EF 62 00         B   251    msubpkt			ld (mouse_packet_index),a
                           B   252    				
003D11 ED3807              B   253    				in0 a,(port_ps2_ctrl)			003D14 CB6F                B   254    				bit 5,a
003D16 20 8B               B   255    				jr nz,ms_loop				
                           B   256    				
003D18 E1                  B   257    				pop hl
003D19 D1                  B   258    				pop de
003D1A C1                  B   259    				pop bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 153


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
003D1B C9                  B   260    				ret
                           B   261    				
                           B   262    ;----------------------------------------------
                           B   263    ; ez80p NMI code v0.03
                           B   264    ;----------------------------------------------
                           B   265    
003D1C F5                  B   266    nmi_routine		push af							003D1D ED3805              B   267    				in0 a,(port_irq_flags)			003D20 CB77                B   268    				bit 6,a							003D22 20 09               B   269    				jr nz,freeze
003D24 3E20                B   270    				ld a,00100000b					003D26 ED3909              B   271    				out0 (port_clear_flags),a		003D29 F1                  B   272    				pop af
003D2A 5BED45              B   273    				retn.l
                           B   274    				
003D2D F1                  B   275    freeze			pop af
003D2E CD 72 13 00         B   276    				call os_store_CPU_regs
                           B   277    				
003D32 21000000            B   278    				ld hl,0
003D36 39                  B   279    				add hl,sp
003D37 7E                  B   280    				ld a,(hl)						003D38 E601                B   281    				and 1
003D3A 32 47 61 00         B   282    				ld (store_adl),a
003D3E 20 0A               B   283    				jr nz,adl_freeze
003D40 23                  B   284    				inc hl
003D41 5E                  B   285    				ld e,(hl)						003D42 23                  B   286    				inc hl
003D43 56                  B   287    				ld d,(hl)
003D44 CD F5 15 00         B   288    				call mbase_de
003D48 18 02               B   289    				jr got_pc
                           B   290    				
003D4A 33                  B   291    adl_freeze		inc sp
003D4B D1                  B   292    				pop de							003D4C ED53 3D 61 00       B   293    got_pc			ld (store_pc),de				                           B   294    				
003D51 CD 7E 3D 00         B   295    				call disable_button_nmi
003D55 3E40                B   296    				ld a,01000000b
003D57 ED3909              B   297    				out0 (port_clear_flags),a		003D5A 3E01                B   298    				ld a,1
003D5C 32 14 61 00         B   299    				ld (frozen),a
003D60 C3 56 0A 00         B   300    				jp os_cold_start				                           B   301    
                           B   302    ;----------------------------------------------
                           B   303    
                           B   304    ;nmi_routine
                           B   305    ;
                           B   306    ;				push af							                           B   307    ;				push bc
                           B   308    ;				ld a,0ffh
                           B   309    ;				ld (hw_palette),a
                           B   310    ;				ld b,0
                           B   311    ;nmi_testlp2		djnz nmi_testlp2
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 154


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
                           B   312    ;				ld a,0
                           B   313    ;				ld (hw_palette),a
                           B   314    ;				pop bc
                           B   315    ;				ld a,01100000b
                           B   316    ;				out0 (port_clear_flags)
                           B   317    ;				pop af
                           B   318    ;				retn.l							                           B   319    
                           B   320    ;----------------------------------------------
                           B   321    
003D64                     B   322    set_nmi_vector
                           B   323    
003D64 3EC3                B   324    				ld a,0c3h						003D66 32660000            B   325    				ld (066h),a
003D6A 21 1C 3D 00         B   326    				ld hl,nmi_routine				003D6E 22670000            B   327    				ld (067h),hl
003D72 C9                  B   328    				ret
                           B   329    
                           B   330    ;----------------------------------------------
                           B   331    
003D73                     B   332    enable_button_nmi
                           B   333    
003D73 3E40                B   334    				ld a,01000000b
003D75 ED3909              B   335    				out0 (port_clear_flags),a		003D78 3EC0                B   336    				ld a,11000000b					003D7A ED3905              B   337    				out0 (port_irq_ctrl),a			003D7D C9                  B   338    				ret
                           B   339    
                           B   340    
003D7E                     B   341    disable_button_nmi
                           B   342    
003D7E 3E40                B   343    				ld a,01000000b					003D80 ED3905              B   344    				out0 (port_irq_ctrl),a
003D83 C9                  B   345    				ret
                           B   346    
                           B   347    
003D84                     B   348    disable_all_nmis
                           B   349    
003D84 3E60                B   350    				ld a,01100000b					003D86 ED3905              B   351    				out0 (port_irq_ctrl),a
003D89 C9                  B   352    				ret
                           B   353    				
                           B   354    ;----------------------------------------------
                           B   355    
                           B     0    	include		'ez80p_rs232_code.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; ez80p low level RS232 code v0.03 (ADL mode)
                           B     3    ;----------------------------------------------
                           B     4    		
003D8A                     B     5    receive_serial_byte
                           B     6    
                           B     7    ; If zero flag set on return OK, A = received b
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 155


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_rs232_code.asm
                           B     8    ; Else timed out (and also A = error $83: time 
                           B     9    
003D8A C5                  B    10    				push bc
003D8B 3A A7 5F 00         B    11    				ld a,(serial_timeout)
003D8F 47                  B    12    				ld b,a
003D90 3ECC                B    13    rx_set_timer	ld a,cch
003D92 ED3981              B    14    				out0 (TMR0_RR_L),a				003D95 3E0C                B    15    				ld a,0ch
003D97 ED3982              B    16    				out0 (TMR0_RR_H),a				003D9A 3E03                B    17    				ld a,00000011b					003D9C ED3980              B    18    				out0 (TMR0_CTL),a				003D9F ED3880              B    19    				in0 a,(TMR0_CTL)				                           B    20    				
003DA2 0EC5                B    21    rx_byte_lp		ld c,UART0_LSR					003DA4 ED7401              B    22    				tstio 1							003DA7 20 0E               B    23    				jr nz,rx_in_buffer
003DA9 AF                  B    24    				xor a
003DAA B0                  B    25    				or b
003DAB 28 13               B    26    				jr z,rx_time_out
003DAD 0E80                B    27    				ld c,TMR0_CTL	
003DAF ED7480              B    28    				tstio 128						003DB2 28 EE               B    29    				jr z,rx_byte_lp		
003DB4 05                  B    30    				dec b
003DB5 18 D9               B    31    				jr rx_set_timer
                           B    32    
003DB7 01C00000            B    33    rx_in_buffer	ld bc,UART0_RBR
003DBB ED78                B    34    				in a,(bc)						003DBD C1                  B    35    				pop bc
003DBE BF                  B    36    				cp a							003DBF C9                  B    37    				ret
                           B    38    
003DC0 C1                  B    39    rx_time_out		pop bc
003DC1 3E83                B    40    				ld a,083h						003DC3 B7                  B    41    				or a							003DC4 C9                  B    42    				ret
                           B    43    
                           B    44    
                           B    45    
                           B    46    ;----------------------------------------------
                           B    47    
003DC5                     B    48    send_serial_byte
                           B    49    
                           B    50    ; set A to the byte to send
                           B    51    
003DC5 C5                  B    52    				push bc
003DC6 0EC5                B    53    				ld c,UART0_LSR					003DC8 ED7420              B    54    rs232_swait		tstio 020h						003DCB 28 FB               B    55    				jr z,rs232_swait
003DCD 01C00000            B    56    				ld bc,UART0_THR
003DD1 ED79                B    57    				out (c),a						003DD3 C1                  B    58    				pop bc
003DD4 C9                  B    59    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 156


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_rs232_code.asm
                           B    60    
                           B    61    ;----------------------------------------------
                           B    62    
003DD5                     B    63    send_serial_bytes
                           B    64    
                           B    65    ; set D to the first byte to send
                           B    66    ; and E to the second byte to send
                           B    67    
003DD5 7A                  B    68    				ld a,d
003DD6 CD C5 3D 00         B    69    				call send_serial_byte
003DDA 7B                  B    70    				ld a,e
003DDB CD C5 3D 00         B    71    				call send_serial_byte
003DDF C9                  B    72    				ret
                           B    73    
                           B    74    ;----------------------------------------------
                           B    75    
003DE0                     B    76    hwsc_flush_serial_buffer
                           B    77    
003DE0 C5                  B    78    				push bc
003DE1 01C00000            B    79    				ld bc,UART0_RBR
003DE5 ED78                B    80    				in a,(bc)						003DE7 C1                  B    81    				pop bc
003DE8 C9                  B    82    				ret
                           B    83    
                           B    84    ;----------------------------------------------
                           B    85    		
                           B     0    	include		'ez80p_video_code.asm'
                           B     1    ;---------------------------------
                           B     2    ; ez80p-specific video code v0.10
                           B     3    ; Character Mode Routines
                           B     4    ;---------------------------------
                           B     5    
       00804000            B     6    charmap_addr	equ vram_a_addr+04000h			                           B     7    
003DE9                     B     8    set_charmap_parameters
                           B     9    
                           B    10    ;set
                           B    11    ; a = line/pixel doubling (bit 0 = line double,
                           B    12    ; b = columns
                           B    13    ; c = rows
                           B    14    
003DE9 E603                B    15    				and 3
003DEB 32 78 5F 00         B    16    				ld (video_doubling),a
003DEF 79                  B    17    				ld a,c
003DF0 32 79 5F 00         B    18    				ld (charmap_rows),a
003DF4 78                  B    19    				ld a,b
003DF5 32 7C 5F 00         B    20    				ld (charmap_columns),a
003DF9 21000000            B    21    				ld hl,0
003DFD 69                  B    22    				ld l,c
003DFE 60                  B    23    				ld h,b
003DFF ED6C                B    24    				mlt hl
003E01 29                  B    25    				add hl,hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 157


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003E02 22 20 61 00         B    26    				ld (charmap_size),hl
003E06 11004080            B    27    				ld de,charmap_addr
003E0A 19                  B    28    				add hl,de
003E0B 22 1A 61 00         B    29    				ld (vram_a_os_highest),hl		                           B    30    				
003E0F CD 15 3E 00         B    31    				call os_set_video_hw_regs
003E13 AF                  B    32    				xor a
003E14 C9                  B    33    				ret
                           B    34    				
                           B    35    
003E15                     B    36    os_set_video_hw_regs
                           B    37    
003E15 3A 78 5F 00         B    38    				ld a,(video_doubling)
003E19 CB27                B    39    				sla a
003E1B F618                B    40    				or 00011000b
003E1D 320018FF            B    41    				ld (video_control),a			003E21 AF                  B    42    				xor a
003E22 320218FF            B    43    				ld (bgnd_palette_select),a
003E26 3E63                B    44    				ld a,99
003E28 320418FF            B    45    				ld (right_border_position),a
                           B    46    
003E2C DD210010 FF         B    47    				ld ix,tilemap_parameters		003E31 21004080            B    48    				ld hl,charmap_addr
003E35 DD2F00              B    49    				ld (ix),hl			   			                           B    50    
003E38 21020000            B    51    				ld hl,2
003E3C DD2F04              B    52    				ld (ix+04h),hl					                           B    53    				
003E3F 21000008            B    54    				ld hl,80000h
003E43 11000000            B    55    				ld de,0
003E47 3A 7C 5F 00         B    56    				ld a,(charmap_columns)
003E4B 5F                  B    57    				ld e,a
003E4C AF                  B    58    				xor a
003E4D ED52                B    59    				sbc hl,de
003E4F AF                  B    60    				xor a
003E50 ED52                B    61    				sbc hl,de
003E52 DD2F08              B    62    				ld (ix+08h),hl					                           B    63    				
003E55 21000000            B    64    				ld hl,0
003E59 DD2F0C              B    65    				ld (ix+0ch),hl					                           B    66    				
003E5C 3A 7C 5F 00         B    67    				ld a,(charmap_columns)
003E60 3D                  B    68    				dec a
003E61 DD7710              B    69    				ld (ix+10h),a					                           B    70    				
003E64 3E00                B    71    				ld a,0
003E66 DD7711              B    72    				ld (ix+11h),a					003E69 DD7712              B    73    				ld (ix+12h),a					                           B    74    
003E6C 21 53 5F 00         B    75    				ld hl,pen_palette
003E70 CD 7A 3E 00         B    76    				call hswc_set_ui_colours
                           B    77    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 158


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003E74 CD A5 40 00         B    78    				call hwsc_disable_sprites
                           B    79    				
003E78 AF                  B    80    				xor a							003E79 C9                  B    81    				ret
                           B    82    
                           B    83    ;----------------------------------------------
                           B    84    				
003E7A                     B    85    hswc_set_ui_colours
                           B    86    
003E7A 110000FF            B    87    				ld de,hw_palette
003E7E 01200000            B    88    				ld bc,16*2
003E82 EDB0                B    89    				ldir
003E84 AF                  B    90    				xor a							003E85 C9                  B    91    				ret
                           B    92    
                           B    93    
                           B    94    ;----------------------------------------------
                           B    95    
003E86                     B    96    hwsc_clear_screen
                           B    97    
003E86 21004080            B    98    				ld hl,charmap_addr				003E8A 3620                B    99    				ld (hl),32						003E8C 23                  B   100    				inc hl
003E8D CD AC 3E 00         B   101    				call get_fill_attr
003E91 77                  B   102    				ld (hl),a
003E92 23                  B   103    				inc hl
003E93 EB                  B   104    				ex de,hl
003E94 21004080            B   105    				ld hl,charmap_addr
003E98 ED4B 20 61 00       B   106    				ld bc,(charmap_size)
003E9D 0B                  B   107    				dec bc
003E9E 0B                  B   108    				dec bc
003E9F EDB0                B   109    				ldir
                           B   110    				
003EA1 01000000            B   111    				ld bc,0
003EA5 ED43 B2 61 00       B   112    				ld (cursor_y),bc
003EAA AF                  B   113    				xor a							003EAB C9                  B   114    				ret
                           B   115    				
                           B   116    				
003EAC D5                  B   117    get_fill_attr	push de
003EAD 3A 4F 5F 00         B   118    				ld a,(current_pen)
003EB1 E60F                B   119    				and 0fh
003EB3 5F                  B   120    				ld e,a
003EB4 3A 51 5F 00         B   121    				ld a,(background_colour)
003EB8 0F                  B   122    				rrca
003EB9 0F                  B   123    				rrca
003EBA 0F                  B   124    				rrca
003EBB 0F                  B   125    				rrca
003EBC E6F0                B   126    				and 0f0h
003EBE B3                  B   127    				or e
003EBF D1                  B   128    				pop de
003EC0 C9                  B   129    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 159


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
                           B   130    				
                           B   131    
                           B   132    ;----------------------------------------------
                           B   133    
003EC1                     B   134    hwsc_scroll_up	
                           B   135    				
003EC1 C5                  B   136    				push bc
003EC2 D5                  B   137    				push de
003EC3 E5                  B   138    				push hl
                           B   139    
003EC4 2A 20 61 00         B   140    				ld hl,(charmap_size)
003EC8 ED5B 7C 5F 00       B   141    				ld de,(charmap_columns)
003ECD AF                  B   142    				xor a
003ECE ED52                B   143    				sbc hl,de
003ED0 ED52                B   144    				sbc hl,de						003ED2 E5                  B   145    				push hl
003ED3 C1                  B   146    				pop bc							003ED4 21004080            B   147    				ld hl,charmap_addr
003ED8 E5                  B   148    				push hl
003ED9 19                  B   149    				add hl,de
003EDA 19                  B   150    				add hl,de
003EDB D1                  B   151    				pop de
003EDC EDB0                B   152    				ldir
                           B   153    				
003EDE EB                  B   154    				ex de,hl						003EDF E5                  B   155    				push hl
003EE0 3620                B   156    				ld (hl),32
003EE2 23                  B   157    				inc hl
003EE3 CD AC 3E 00         B   158    				call get_fill_attr
003EE7 77                  B   159    				ld (hl),a
003EE8 2A 7C 5F 00         B   160    				ld hl,(charmap_columns)
003EEC 2B                  B   161    				dec hl
003EED 29                  B   162    				add hl,hl
003EEE E5                  B   163    				push hl
003EEF C1                  B   164    				pop bc
003EF0 E1                  B   165    				pop hl
003EF1 E5                  B   166    				push hl
003EF2 D1                  B   167    				pop de
003EF3 13                  B   168    				inc de
003EF4 13                  B   169    				inc de
003EF5 EDB0                B   170    				ldir
                           B   171    				
003EF7 E1                  B   172    				pop hl
003EF8 D1                  B   173    				pop de
003EF9 C1                  B   174    				pop bc
003EFA AF                  B   175    				xor a							003EFB C9                  B   176    				ret
                           B   177    
                           B   178    
                           B   179    ;----------------------------------------------
                           B   180    
003EFC                     B   181    hwsc_plot_char
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 160


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
                           B   182    
                           B   183    ; Set:
                           B   184    ; ----
                           B   185    ; A = ascii char
                           B   186    ; B = x character coordinate 
                           B   187    ; C = y character coordinate
                           B   188    
003EFC E5                  B   189    				push hl							003EFD D5                  B   190    				push de
003EFE F5                  B   191    				push af
                           B   192    
003EFF 3A 79 5F 00         B   193    				ld a,(charmap_rows)				003F03 3D                  B   194    				dec a
003F04 B9                  B   195    				cp c							003F05 38 08               B   196    				jr c,win_err
003F07 3A 7C 5F 00         B   197    				ld a,(charmap_columns)
003F0B 3D                  B   198    				dec a
003F0C B8                  B   199    				cp b
003F0D 30 07               B   200    				jr nc,win_ok
003F0F F1                  B   201    win_err			pop af
003F10 D1                  B   202    				pop de
003F11 E1                  B   203    				pop hl
003F12 3E88                B   204    				ld a,88h						003F14 B7                  B   205    				or a
003F15 C9                  B   206    				ret
                           B   207    				
003F16 2A 7C 5F 00         B   208    win_ok			ld hl,(charmap_columns)			003F1A 61                  B   209    				ld h,c
003F1B ED6C                B   210    				mlt hl
003F1D 11000000            B   211    				ld de,0
003F21 58                  B   212    				ld e,b
003F22 19                  B   213    				add hl,de
003F23 29                  B   214    				add hl,hl
003F24 11004080            B   215    				ld de,charmap_addr
003F28 19                  B   216    				add hl,de
003F29 F1                  B   217    				pop af
003F2A 77                  B   218    				ld (hl),a
003F2B 23                  B   219    				inc hl
003F2C 3A 4F 5F 00         B   220    				ld a,(current_pen)
003F30 77                  B   221    				ld (hl),a
003F31 D1                  B   222    				pop de
003F32 E1                  B   223    				pop hl
003F33 AF                  B   224    				xor a
003F34 C9                  B   225    				ret
                           B   226    				
                           B   227    				
                           B   228    ;----------------------------------------------
                           B   229    
003F35                     B   230    hwsc_remove_cursor
                           B   231    
003F35 3A 75 5F 00         B   232    				ld a,(cursor_present)			003F39 B7                  B   233    				or a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 161


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003F3A C8                  B   234    				ret z
003F3B ED4B B2 61 00       B   235    				ld bc,(cursor_y)
003F40 CD A3 3F 00         B   236    				call hwsc_get_charmap_addr_xy
003F44 3A 74 5F 00         B   237    				ld a,(char_under_cursor)
003F48 77                  B   238    				ld (hl),a
003F49 AF                  B   239    				xor a
003F4A 32 75 5F 00         B   240    				ld (cursor_present),a
003F4E C9                  B   241    				ret
                           B   242    
                           B   243    
003F4F                     B   244    hwsc_draw_cursor
                           B   245    								
003F4F 3A 75 5F 00         B   246    				ld a,(cursor_present)			003F53 B7                  B   247    				or a
003F54 C0                  B   248    				ret nz
003F55 3C                  B   249    				inc a
003F56 32 75 5F 00         B   250    				ld (cursor_present),a
                           B   251    				
003F5A ED4B B2 61 00       B   252    				ld bc,(cursor_y)
003F5F CD A3 3F 00         B   253    				call hwsc_get_charmap_addr_xy
003F63 7E                  B   254    				ld a,(hl)						003F64 32 74 5F 00         B   255    				ld (char_under_cursor),a		003F68 36FF                B   256    				ld (hl),ffh						                           B   257    				
003F6A 11400000            B   258    				ld de,64						003F6E 57                  B   259    				ld d,a
003F6F ED5C                B   260    				mlt de
003F71 FD210000 80         B   261    				ld iy,vram_a_addr				003F76 FD19                B   262    				add iy,de						                           B   263    				
003F78 21400000            B   264    				ld hl,64
003F7C 3A 77 5F 00         B   265    				ld a,(cursor_image_char)
003F80 67                  B   266    				ld h,a
003F81 ED6C                B   267    				mlt hl
003F83 11000080            B   268    				ld de,vram_a_addr
003F87 19                  B   269    				add hl,de
                           B   270    				
003F88 DD21C03F 80         B   271    				ld ix,vram_a_addr+03fc0h
003F8D 11080000            B   272    				ld de,8
003F91 0608                B   273    				ld b,8
003F93 FD7E00              B   274    cur_loop		ld a,(iy)						003F96 AE                  B   275    				xor (hl)						003F97 DD7700              B   276    				ld (ix),a						003F9A FD19                B   277    				add iy,de
003F9C DD19                B   278    				add ix,de
003F9E 19                  B   279    				add hl,de
003F9F 10 F2               B   280    				djnz cur_loop
                           B   281    				
003FA1 AF                  B   282    				xor a
003FA2 C9                  B   283    				ret
                           B   284    				
                           B   285    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 162


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
                           B   286    ;----------------------------------------------
                           B   287    
003FA3                     B   288    hwsc_get_charmap_addr_xy
                           B   289    
                           B   290    ; returns address of charmap in xHL for charact
                           B   291    ; and attrmap in xDE
                           B   292    				
003FA3 2A 7C 5F 00         B   293    				ld hl,(charmap_columns)			003FA7 61                  B   294    				ld h,c
003FA8 ED6C                B   295    				mlt hl
003FAA 11000000            B   296    				ld de,0
003FAE 58                  B   297    				ld e,b
003FAF 19                  B   298    				add hl,de
003FB0 29                  B   299    				add hl,hl
003FB1 11004080            B   300    				ld de,charmap_addr
003FB5 19                  B   301    				add hl,de
003FB6 E5                  B   302    				push hl
003FB7 D1                  B   303    				pop de
003FB8 13                  B   304    				inc de
003FB9 AF                  B   305    				xor a
003FBA C9                  B   306    				ret
                           B   307    								
                           B   308    ;----------------------------------------------
                           B   309    
003FBB                     B   310    hwsc_chars_left
                           B   311    
                           B   312    ; moves characters (in character map) on the cu
                           B   313    
003FBB E5                  B   314    				push hl
003FBC D5                  B   315    				push de
003FBD C5                  B   316    				push bc
                           B   317    				
003FBE 2A 7C 5F 00         B   318    				ld hl,(charmap_columns)
003FC2 3A B2 61 00         B   319    				ld a,(cursor_y)
003FC6 67                  B   320    				ld h,a
003FC7 ED6C                B   321    				mlt hl
003FC9 11000000            B   322    				ld de,0
003FCD 58                  B   323    				ld e,b
003FCE 19                  B   324    				add hl,de
003FCF 29                  B   325    				add hl,hl
003FD0 11004080            B   326    				ld de,charmap_addr
003FD4 19                  B   327    				add hl,de
                           B   328    				
003FD5 3A 7C 5F 00         B   329    				ld a,(charmap_columns)
003FD9 90                  B   330    				sub b
003FDA CB27                B   331    				sla a
003FDC 01000000            B   332    				ld bc,0
003FE0 4F                  B   333    				ld c,a
003FE1 E5                  B   334    				push hl
003FE2 D1                  B   335    				pop de
003FE3 1B                  B   336    				dec de
003FE4 1B                  B   337    				dec de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 163


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003FE5 EDB0                B   338    				ldir
                           B   339    				
003FE7 3E20                B   340    				ld a,32						;pu
003FE9 12                  B   341    				ld (de),a
003FEA 13                  B   342    				inc de
003FEB CD AC 3E 00         B   343    				call get_fill_attr
003FEF 12                  B   344    				ld (de),a
                           B   345    				
003FF0 C1                  B   346    				pop bc
003FF1 D1                  B   347    				pop de
003FF2 E1                  B   348    				pop hl
003FF3 C9                  B   349    				ret
                           B   350    
                           B   351    
                           B   352    ;----------------------------------------------
                           B   353    
                           B   354    
003FF4                     B   355    hwsc_chars_right
                           B   356    
                           B   357    ; moves characters on current line right from c
                           B   358    
003FF4 C5                  B   359    				push bc
003FF5 D5                  B   360    				push de
003FF6 E5                  B   361    				push hl
                           B   362    	
003FF7 21 B3 61 00         B   363    				ld hl,cursor_x				
003FFB 3A 7C 5F 00         B   364    				ld a,(charmap_columns)
003FFF 3D                  B   365    				dec a
004000 BE                  B   366    				cp (hl)			
004001 28 30               B   367    				jr z,chright_end
004003 46                  B   368    				ld b,(hl)
                           B   369    				
004004 2A 7C 5F 00         B   370    				ld hl,(charmap_columns)
004008 3A B2 61 00         B   371    				ld a,(cursor_y)
00400C 3C                  B   372    				inc a							00400D 67                  B   373    				ld h,a
00400E ED6C                B   374    				mlt hl
004010 29                  B   375    				add hl,hl
004011 11004080            B   376    				ld de,charmap_addr
004015 19                  B   377    				add hl,de					
004016 2B                  B   378    				dec hl							004017 E5                  B   379    				push hl
004018 D1                  B   380    				pop de							004019 2B                  B   381    				dec hl
00401A 2B                  B   382    				dec hl							00401B 3A 7C 5F 00         B   383    				ld a,(charmap_columns)
00401F 90                  B   384    				sub b
004020 3D                  B   385    				dec a
004021 CB27                B   386    				sla a
004023 01000000            B   387    				ld bc,0
004027 4F                  B   388    				ld c,a							004028 EDB8                B   389    				lddr
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 164


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
00402A 23                  B   390    				inc hl							00402B 3620                B   391    				ld (hl),32
00402D 23                  B   392    				inc hl
00402E CD AC 3E 00         B   393    				call get_fill_attr
004032 77                  B   394    				ld (hl),a
                           B   395    							
004033 E1                  B   396    chright_end		pop hl	
004034 D1                  B   397    				pop de
004035 C1                  B   398    				pop bc
004036 C9                  B   399    				ret
                           B   400    
                           B   401    ;----------------------------------------------
                           B   402    
                           B   403    
004037                     B   404    hwsc_charline_to_command_string	
                           B   405    				
                           B   406    				
004037 2A 7C 5F 00         B   407    				ld hl,(charmap_columns)			00403B 3A B2 61 00         B   408    				ld a,(cursor_y)
00403F 67                  B   409    				ld h,a
004040 ED6C                B   410    				mlt hl
004042 29                  B   411    				add hl,hl
004043 11004080            B   412    				ld de,charmap_addr
004047 19                  B   413    				add hl,de
004048 11 D0 61 00         B   414    				ld de,commandstring
00404C 0650                B   415    				ld b,max_buffer_chars			00404E 7E                  B   416    copy_to_cmdline	ld a,(hl)
00404F 12                  B   417    				ld (de),a
004050 13                  B   418    				inc de
004051 23                  B   419    				inc hl
004052 23                  B   420    				inc hl
004053 10 F9               B   421    				djnz copy_to_cmdline
004055 C9                  B   422    				ret
                           B   423    
                           B   424    ;----------------------------------------------
                           B   425    
                           B   426    
004056 C5                  B   427    hwsc_wait_vrt	push bc
                           B   428    
004057 0E01                B   429    				ld c,1
004059 ED0909              B   430    				out0 (port_clear_flags),c
                           B   431    
00405C 0E01                B   432    				ld c,port_hw_flags
00405E ED7420              B   433    ewaitvrtlp1		tstio 1<<vrt
004061 28 FB               B   434    				jr z,ewaitvrtlp1
                           B   435    				
004063 C1                  B   436    				pop bc
004064 BF                  B   437    				cp a							004065 C9                  B   438    				ret
                           B   439    
                           B   440    
                           B   441    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 165


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
                           B   442    
                           B     0    	include		'ez80p_misc_code.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;Misc eZ80p specific routines v0.05 (ADL versio
                           B     3    ;----------------------------------------------
                           B     4    
004066                     B     5    hwsc_default_hw_settings
                           B     6    
                           B     7    ; Set up eZ80 Wait states
                           B     8    
004066 3E48                B     9    					ld a,01001000b				004068 ED39AA              B    10    					out0 (CS0_CTL),a
00406B 3E00                B    11    					ld a,000h					00406D ED39A8              B    12    					out0 (CS0_LBR),a
004070 3EFF                B    13    					ld a,0ffh	
004072 ED39A9              B    14    					out0 (CS0_UBR),a			                           B    15    
004075 3E58                B    16    					ld a,01011000b
004077 ED39AD              B    17    					out0 (CS1_CTL),a			00407A 3E00                B    18    					ld a,0
00407C ED39AB              B    19    					out0 (CS1_LBR),a			                           B    20    
                           B    21    ;set up eZ80 GPIO ports
                           B    22    
00407F 3EFF                B    23    					ld a,0ffh
004081 ED399F              B    24    					out0 (PC_DDR),a				004084 AF                  B    25    					xor a
004085 ED39A0              B    26    					out0 (PC_ALT1),a
004088 ED39A1              B    27    					out0 (PC_ALT2),a
                           B    28    					
00408B 3EFF                B    29    					ld a,0ffh					00408D ED39A3              B    30    					out0 (PD_DDR),a				004090 AF                  B    31    					xor a	
004091 ED39A4              B    32    					out0 (PD_ALT1),a			004094 3E0F                B    33    					ld a,00fh				
004096 ED39A5              B    34    					out0 (PD_ALT2),a			                           B    35    
                           B    36    ;set up eZ80 timer
                           B    37    
004099 ED3892              B    38    					in0 a,(TMR_ISS)
00409C E6FC                B    39    					and 11111100b
00409E F601                B    40    					or  00000001b
0040A0 ED3992              B    41    					out0 (TMR_ISS),a			                           B    42    					
0040A3 AF                  B    43    					xor a
0040A4 C9                  B    44    					ret
                           B    45    
                           B    46    
                           B    47    ;----------------------------------------------
                           B    48    
0040A5                     B    49    hwsc_disable_sprites
                           B    50    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 166


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
0040A5 AF                  B    51    					xor a
0040A6 320118FF            B    52    					ld (sprite_control),a		0040AA C9                  B    53    					ret
                           B    54    					
                           B    55    ;----------------------------------------------
                           B    56    
                           B    57    
0040AB 11000000            B    58    hwsc_get_version	ld de,0
0040AF 0610                B    59    					ld b,16
0040B1 78                  B    60    gethwvlp			ld a,b
0040B2 3D                  B    61    					dec a
0040B3 ED3908              B    62    					out0 (port_selector),a		0040B6 DB01                B    63    					in a,(port_hw_flags)		0040B8 CB27                B    64    					sla a
0040BA CB13                B    65    					rl e
0040BC CB12                B    66    					rl d
0040BE 10 F1               B    67    					djnz gethwvlp				                           B    68    									
0040C0 21370000            B    69    					ld hl,prose_version
0040C4 BF                  B    70    					cp a						0040C5 C9                  B    71    					ret
                           B    72    
                           B    73    
                           B    74    
                           B    75    ;----------------------------------------------
                           B    76    ; Timer related 
                           B    77    ;----------------------------------------------
                           B    78    
0040C6                     B    79    hwsc_time_delay
                           B    80    
                           B    81    ; set DE to 32768Hz ticks to wait
                           B    82    
0040C6 CD D2 40 00         B    83    					call set_timeout
0040CA CD E3 40 00         B    84    twaitlp				call test_timeout
0040CE 28 FA               B    85    					jr z,twaitlp
0040D0 AF                  B    86    					xor a						0040D1 C9                  B    87    					ret			
                           B    88    
                           B    89    ;----------------------------------------------
                           B    90    
0040D2 7B                  B    91    set_timeout			ld a,e						0040D3 ED3981              B    92    					out0 (TMR0_RR_L),a			0040D6 7A                  B    93    					ld a,d
0040D7 ED3982              B    94    					out0 (TMR0_RR_H),a			0040DA 3E03                B    95    					ld a,00000011b				0040DC ED3980              B    96    					out0 (TMR0_CTL),a			0040DF ED3880              B    97    					in0 a,(TMR0_CTL)			0040E2 C9                  B    98    					ret
                           B    99    			
0040E3 ED3880              B   100    test_timeout		in0 a,(TMR0_CTL)			0040E6 CB7F                B   101    					bit 7,a
0040E8 C9                  B   102    					ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 167


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B   103    			
                           B   104    ;----------------------------------------------
                           B   105    
0040E9                     B   106    hwsc_read_rtc
0040E9 D5                  B   107    					push de
0040EA C5                  B   108    					push bc
0040EB 0EE0                B   109    hwsc_rtc_rlp		ld c,RTC_SEC
0040ED 0608                B   110    					ld b,8
0040EF 21 0D 61 00         B   111    					ld hl,time_data
0040F3 ED92                B   112    					inimr						0040F5 0EE0                B   113    					ld c,RTC_SEC
0040F7 0600                B   114    					ld b,0
0040F9 1E08                B   115    					ld e,8
0040FB 21 0D 61 00         B   116    					ld hl,time_data
0040FF ED78                B   117    timevloop			in a,(bc)					004101 BE                  B   118    					cp (hl)						004102 20 E7               B   119    					jr nz,hwsc_rtc_rlp			004104 23                  B   120    					inc hl
004105 0C                  B   121    					inc c
004106 1D                  B   122    					dec e
004107 20 F6               B   123    					jr nz,timevloop
004109 21 0D 61 00         B   124    					ld hl,time_data
00410D C1                  B   125    					pop bc
00410E D1                  B   126    					pop de
00410F BF                  B   127    					cp a						004110 C9                  B   128    					ret
                           B   129    
                           B   130    
004111                     B   131    hwsc_write_rtc	
                           B   132    
                           B   133    ; set HL to location of BCD data for RTC: sec/m
                           B   134    
004111 E5                  B   135    					push hl
004112 C5                  B   136    					push bc
004113 3E21                B   137    					ld a,00100001b				004115 ED39ED              B   138    					out0 (RTC_CTRL),a
004118 0EE0                B   139    					ld c,RTC_SEC
00411A 0608                B   140    					ld b,8
00411C ED93                B   141    					otimr
00411E 3E20                B   142    					ld a,00100000b				004120 ED39ED              B   143    					out0 (RTC_CTRL),a
004123 C1                  B   144    					pop bc
004124 E1                  B   145    					pop hl
004125 BF                  B   146    					cp a						004126 C9                  B   147    					ret	
                           B   148    
                           B   149    
                           B   150    ;----------------------------------------------
                           B   151    ; INIT KEYBOARD ROUTINE 
                           B   152    ;----------------------------------------------
                           B   153    
                           B   154    ; ZF set and A = 0 if all OK, else error code i
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 168


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B   155    
004127                     B   156    init_keyboard
                           B   157    
004127 11004000            B   158    			ld de,16384							00412B CD C6 40 00         B   159    			call hwsc_time_delay
00412F F3                  B   160    			di
004130 CD E5 41 00         B   161    			call purge_keyboard
004134 CD 3E 41 00         B   162    			call rs_keyboard
004138 FB                  B   163    			ei
004139 D0                  B   164    			ret nc
00413A 3E8B                B   165    			ld a,08bh							00413C B7                  B   166    			or a
00413D C9                  B   167    			ret
                           B   168    			
                           B   169    			
00413E                     B   170    rs_keyboard
                           B   171    
00413E 3EFF                B   172    			ld a,0ffh
004140 CD 5D 41 00         B   173    			call write_to_keyboard
004144 30 04               B   174    			jr nc,kb_connected
004146 3E8A                B   175    			ld a,08ah							004148 B7                  B   176    			or a
004149 C9                  B   177    			ret
                           B   178    
00414A                     B   179    kb_connected
                           B   180    			
00414A 0605                B   181    			ld b,5
00414C C5                  B   182    kb_initlp	push bc
00414D CD C9 41 00         B   183    			call wait_kb_byte					004151 C1                  B   184    			pop bc
004152 D8                  B   185    			ret c
004153 FEAA                B   186    			cp 0aah
004155 28 04               B   187    			jr z,kb_postok
004157 10 F3               B   188    			djnz kb_initlp						004159 37                  B   189    			scf									00415A C9                  B   190    			ret
                           B   191    			
                           B   192    			
00415B AF                  B   193    kb_postok	xor a
00415C C9                  B   194    			ret
                           B   195    	
                           B   196    	
                           B   197    ;----------------------------------------------
                           B   198    				
00415D                     B   199    write_to_keyboard
                           B   200    
                           B   201    ; Put byte to send to keyboard in A
                           B   202    
00415D 4F                  B   203    			ld c,a								00415E 3E01                B   204    			ld a,01b							004160 ED3907              B   205    			out0 (port_ps2_ctrl),a
                           B   206    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 169


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
004163 110A0000            B   207    			ld de,10
004167 CD C6 40 00         B   208    			call hwsc_time_delay				                           B   209    
00416B 3E03                B   210    			ld a,11b
00416D ED3907              B   211    			out0 (port_ps2_ctrl),a				                           B   212    			
004170 3E02                B   213    			ld a,10b
004172 ED3907              B   214    			out0 (port_ps2_ctrl),a				                           B   215    			
004175 CD 45 43 00         B   216    			call wait_kb_clk_high
                           B   217    			
004179 1601                B   218    			ld d,1								00417B 0608                B   219    			ld b,8								00417D CD 18 43 00         B   220    kdoloop		call wait_kb_clk_low	
004181 D8                  B   221    			ret c
004182 AF                  B   222    			xor a
004183 CBCF                B   223    			set 1,a
004185 CB41                B   224    			bit 0,c
004187 28 03               B   225    			jr z,kdbzero
004189 CB8F                B   226    			res 1,a
00418B 14                  B   227    			inc d
00418C ED3907              B   228    kdbzero		out0 (port_ps2_ctrl),a				00418F CD 45 43 00         B   229    			call wait_kb_clk_high
004193 D8                  B   230    			ret c
004194 CB19                B   231    			rr c
004196 10 E5               B   232    			djnz kdoloop
                           B   233    
004198 CD 18 43 00         B   234    			call wait_kb_clk_low
00419C D8                  B   235    			ret c
00419D AF                  B   236    			xor a
00419E CB42                B   237    			bit 0,d
0041A0 20 02               B   238    			jr nz,kparone
0041A2 CBCF                B   239    			set 1,a
0041A4 ED3907              B   240    kparone		out0 (port_ps2_ctrl),a				0041A7 CD 45 43 00         B   241    			call wait_kb_clk_high
0041AB D8                  B   242    			ret c
                           B   243    			
0041AC CD 18 43 00         B   244    			call wait_kb_clk_low
0041B0 D8                  B   245    			ret c
0041B1 AF                  B   246    			xor a
0041B2 ED3907              B   247    			out0 (port_ps2_ctrl),a				                           B   248    
0041B5 CD 14 43 00         B   249    			call wait_kb_data_low				0041B9 D8                  B   250    			ret c
0041BA CD 18 43 00         B   251    			call wait_kb_clk_low				0041BE D8                  B   252    			ret c
                           B   253    				
0041BF CD 41 43 00         B   254    			call wait_kb_data_high				0041C3 D8                  B   255    			ret c
0041C4 CD 45 43 00         B   256    			call wait_kb_clk_high				0041C8 C9                  B   257    			ret 
                           B   258    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 170


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B   259    
                           B   260    ;----------------------------------------------
                           B   261    
                           B   262    
0041C9                     B   263    wait_kb_byte
                           B   264    
0041C9 11008000            B   265    			ld de,8000h
0041CD CD D2 40 00         B   266    			call set_timeout					                           B   267    
0041D1 ED3807              B   268    wait_kloop	in0 a,(port_ps2_ctrl)
0041D4 CB67                B   269    			bit 4,a
0041D6 20 08               B   270    			jr nz,rec_kbyte
                           B   271    			
0041D8 CD E3 40 00         B   272    			call test_timeout
0041DC 28 F3               B   273    			jr z,wait_kloop
0041DE 37                  B   274    			scf									0041DF C9                  B   275    			ret
                           B   276    			
0041E0 ED3802              B   277    rec_kbyte	in0 a,(port_keyboard_data)			0041E3 B7                  B   278    			or a
0041E4 C9                  B   279    			ret
                           B   280    
                           B   281    
                           B   282    ;----------------------------------------------
                           B   283    
0041E5                     B   284    purge_keyboard
                           B   285    			
0041E5 ED3807              B   286    			in0 a,(port_ps2_ctrl)
0041E8 CB67                B   287    			bit 4,a
0041EA C8                  B   288    			ret z
0041EB ED3802              B   289    			in0 a,(port_keyboard_data)			0041EE 18 F5               B   290    			jr purge_keyboard
                           B   291    
                           B   292    
                           B   293    
                           B   294    ;----------------------------------------------
                           B   295    ; INIT MOUSE ROUTINE 
                           B   296    ;----------------------------------------------
                           B   297    
                           B   298    ; ZF set and A = 0 if all OK, else error code i
                           B   299    
0041F0                     B   300    init_mouse		
0041F0 F3                  B   301    			di
0041F1 CD 09 43 00         B   302    			call purge_mouse
0041F5 CD FF 41 00         B   303    			call rs_mouse
0041F9 FB                  B   304    			ei
0041FA D0                  B   305    			ret nc
0041FB 3E8B                B   306    			ld a,08bh							0041FD B7                  B   307    			or a
0041FE C9                  B   308    			ret
                           B   309    
                           B   310    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 171


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
0041FF                     B   311    rs_mouse
0041FF 3EFF                B   312    			ld a,0ffh							004201 CD 81 42 00         B   313    			call write_to_mouse		
004205 30 04               B   314    			jr nc,mouse_connected
004207 3E8A                B   315    			ld a,08ah							004209 B7                  B   316    			or a
00420A C9                  B   317    			ret
                           B   318    
                           B   319    
00420B                     B   320    mouse_connected
                           B   321    
00420B 0605                B   322    			ld b,5
00420D C5                  B   323    ms_initlp	push bc
00420E CD ED 42 00         B   324    			call wait_mouse_byte				004212 C1                  B   325    			pop bc
004213 D8                  B   326    			ret c
004214 FEAA                B   327    			cp 0aah
004216 28 04               B   328    			jr z,ms_postok
004218 10 F3               B   329    			djnz ms_initlp
00421A 18 43               B   330    			jr bad_mouse
                           B   331    			
00421C CD ED 42 00         B   332    ms_postok	call wait_mouse_byte				004220 D8                  B   333    			ret c
004221 B7                  B   334    			or a
004222 20 3B               B   335    			jr nz,bad_mouse						                           B   336    			
004224 3E03                B   337    			ld a,3
004226 32 EA 62 00         B   338    			ld (mouse_packet_size),a
                           B   339    
00422A 21 CA 5F 00         B   340    			ld hl,intellimouse_seq
00422E 0606                B   341    			ld b,6
004230 CD 63 42 00         B   342    			call mouse_sequence
004234 D8                  B   343    			ret c
                           B   344    			
004235 3EF2                B   345    			ld a,0f2h
004237 CD 72 42 00         B   346    			call write_mouse_wait_ack			00423B D8                  B   347    			ret c
00423C CD ED 42 00         B   348    			call wait_mouse_byte				004240 D8                  B   349    			ret c
004241 32 E9 62 00         B   350    			ld (mouse_id),a
004245 B7                  B   351    			or a								004246 28 0A               B   352    			jr z,standard_mouse
004248 FE03                B   353    			cp 3
00424A 20 13               B   354    			jr nz,bad_mouse						00424C 3E04                B   355    			ld a,4
00424E 32 EA 62 00         B   356    			ld (mouse_packet_size),a
                           B   357    
004252                     B   358    standard_mouse
                           B   359    		
004252 21 D0 5F 00         B   360    			ld hl,mouse_settings_seq
004256 0606                B   361    			ld b,6
004258 CD 63 42 00         B   362    			call mouse_sequence
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 172


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
00425C D8                  B   363    			ret c
00425D AF                  B   364    			xor a								00425E C9                  B   365    			ret
                           B   366    
                           B   367    
00425F 3E89                B   368    bad_mouse	ld a,089h							004261 B7                  B   369    			or a
004262 C9                  B   370    			ret
                           B   371    
                           B   372    
004263                     B   373    mouse_sequence
                           B   374    
004263 7E                  B   375    mseqlp		ld a,(hl)
004264 E5                  B   376    			push hl
004265 C5                  B   377    			push bc
004266 CD 72 42 00         B   378    			call write_mouse_wait_ack
00426A C1                  B   379    			pop bc
00426B E1                  B   380    			pop hl
00426C D8                  B   381    			ret c
00426D 23                  B   382    			inc hl
00426E 10 F3               B   383    			djnz mseqlp
004270 AF                  B   384    			xor a
004271 C9                  B   385    			ret
                           B   386    
                           B   387    
004272                     B   388    write_mouse_wait_ack
                           B   389    			
004272 CD 81 42 00         B   390    			call write_to_mouse
004276 D8                  B   391    			ret c
004277 CD ED 42 00         B   392    			call wait_mouse_byte				00427B D8                  B   393    			ret c
00427C FEFA                B   394    			cp 0fah								00427E C8                  B   395    			ret z
00427F 37                  B   396    			scf
004280 C9                  B   397    			ret
                           B   398    			
                           B   399    ;----------------------------------------------
                           B   400    				
004281                     B   401    write_to_mouse
                           B   402    
                           B   403    ; Put byte to send to mouse in A
                           B   404    
004281 4F                  B   405    			ld c,a								004282 3E04                B   406    			ld a,0100b							004284 ED3907              B   407    			out0 (port_ps2_ctrl),a
                           B   408    
004287 110A0000            B   409    			ld de,10
00428B CD C6 40 00         B   410    			call hwsc_time_delay				                           B   411    
00428F 3E0C                B   412    			ld a,1100b
004291 ED3907              B   413    			out0 (port_ps2_ctrl),a				                           B   414    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 173


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
004294 3E08                B   415    			ld a,1000b
004296 ED3907              B   416    			out0 (port_ps2_ctrl),a				                           B   417    			
004299 CD 4D 43 00         B   418    			call wait_mouse_clk_high
                           B   419    			
00429D 1601                B   420    			ld d,1								00429F 0608                B   421    			ld b,8								0042A1 CD 20 43 00         B   422    mdoloop		call wait_mouse_clk_low	
0042A5 D8                  B   423    			ret c
0042A6 AF                  B   424    			xor a
0042A7 CBDF                B   425    			set 3,a
0042A9 CB41                B   426    			bit 0,c
0042AB 28 03               B   427    			jr z,mdbzero
0042AD CB9F                B   428    			res 3,a
0042AF 14                  B   429    			inc d
0042B0 ED3907              B   430    mdbzero		out0 (port_ps2_ctrl),a				0042B3 CD 4D 43 00         B   431    			call wait_mouse_clk_high
0042B7 D8                  B   432    			ret c
0042B8 CB19                B   433    			rr c
0042BA 10 E5               B   434    			djnz mdoloop
                           B   435    
0042BC CD 20 43 00         B   436    			call wait_mouse_clk_low
0042C0 D8                  B   437    			ret c
0042C1 AF                  B   438    			xor a
0042C2 CB42                B   439    			bit 0,d
0042C4 20 02               B   440    			jr nz,parone
0042C6 CBDF                B   441    			set 3,a
0042C8 ED3907              B   442    parone		out0 (port_ps2_ctrl),a				0042CB CD 4D 43 00         B   443    			call wait_mouse_clk_high
0042CF D8                  B   444    			ret c
                           B   445    			
0042D0 CD 20 43 00         B   446    			call wait_mouse_clk_low
0042D4 D8                  B   447    			ret c
0042D5 AF                  B   448    			xor a
0042D6 ED3907              B   449    			out0 (port_ps2_ctrl),a				                           B   450    
0042D9 CD 1C 43 00         B   451    			call wait_mouse_data_low			0042DD D8                  B   452    			ret c
0042DE CD 20 43 00         B   453    			call wait_mouse_clk_low				0042E2 D8                  B   454    			ret c
                           B   455    				
0042E3 CD 49 43 00         B   456    			call wait_mouse_data_high			0042E7 D8                  B   457    			ret c
0042E8 CD 4D 43 00         B   458    			call wait_mouse_clk_high			0042EC C9                  B   459    			ret 
                           B   460    
                           B   461    ;----------------------------------------------
                           B   462    
                           B   463    
0042ED                     B   464    wait_mouse_byte
                           B   465    
0042ED 11008000            B   466    			ld de,8000h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 174


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
0042F1 CD D2 40 00         B   467    			call set_timeout					                           B   468    
0042F5 ED3807              B   469    wait_mloop	in0 a,(port_ps2_ctrl)
0042F8 CB6F                B   470    			bit 5,a
0042FA 20 08               B   471    			jr nz,rec_mbyte
                           B   472    			
0042FC CD E3 40 00         B   473    			call test_timeout
004300 28 F3               B   474    			jr z,wait_mloop
004302 37                  B   475    			scf									004303 C9                  B   476    			ret
                           B   477    			
004304 ED3806              B   478    rec_mbyte	in0 a,(port_mouse_data)				004307 B7                  B   479    			or a
004308 C9                  B   480    			ret
                           B   481    
                           B   482    ;----------------------------------------------
                           B   483    
004309                     B   484    purge_mouse
                           B   485    			
004309 ED3807              B   486    			in0 a,(port_ps2_ctrl)
00430C CB6F                B   487    			bit 5,a
00430E C8                  B   488    			ret z
00430F ED3806              B   489    			in0 a,(port_mouse_data)			; r
004312 18 F5               B   490    			jr purge_mouse
                           B   491    
                           B   492    
                           B   493    ;----------------------------------------------
                           B   494    
                           B   495    
004314                     B   496    wait_kb_data_low
                           B   497    
004314 3E02                B   498    			ld a,2
004316 18 0A               B   499    			jr test_lo_ps2
                           B   500    			
004318                     B   501    wait_kb_clk_low
                           B   502    
004318 3E01                B   503    			ld a,1
00431A 18 06               B   504    			jr test_lo_ps2			
                           B   505    
00431C                     B   506    wait_mouse_data_low
                           B   507    
00431C 3E08                B   508    			ld a,8
00431E 18 02               B   509    			jr test_lo_ps2
                           B   510    
004320                     B   511    wait_mouse_clk_low
                           B   512    
004320 3E04                B   513    			ld a,4
                           B   514    
004322 C5                  B   515    test_lo_ps2	push bc
004323 D5                  B   516    			push de
004324 4F                  B   517    			ld c,a
004325 11004000            B   518    			ld de,04000h					; a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 175


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
004329 CD D2 40 00         B   519    			call set_timeout
                           B   520    
00432D CD E3 40 00         B   521    nkb_lw		call test_timeout				; t
004331 28 04               B   522    			jr z,nkb_lnto
004333 D1                  B   523    			pop de
004334 C1                  B   524    			pop bc
004335 37                  B   525    			scf								; c
004336 C9                  B   526    			ret
004337 ED3807              B   527    nkb_lnto	in0 a,(port_ps2_ctrl)
00433A A1                  B   528    			and c
00433B 20 F0               B   529    			jr nz,nkb_lw
                           B   530    					
00433D D1                  B   531    			pop de
00433E C1                  B   532    			pop bc
00433F AF                  B   533    			xor a
004340 C9                  B   534    			ret					
                           B   535    
                           B   536    
                           B   537    
                           B   538    
004341                     B   539    wait_kb_data_high
                           B   540    
004341 3E02                B   541    			ld a,2
004343 18 0A               B   542    			jr test_hi_ps2
                           B   543    			
004345                     B   544    wait_kb_clk_high
                           B   545    
004345 3E01                B   546    			ld a,1
004347 18 06               B   547    			jr test_hi_ps2
                           B   548    
                           B   549    
004349                     B   550    wait_mouse_data_high
                           B   551    			
004349 3E08                B   552    			ld a,8
00434B 18 02               B   553    			jr test_hi_ps2
                           B   554    			 
00434D                     B   555    wait_mouse_clk_high
                           B   556    
00434D 3E04                B   557    			ld a,4
                           B   558    
00434F C5                  B   559    test_hi_ps2	push bc
004350 D5                  B   560    			push de
004351 4F                  B   561    			ld c,a
004352 11004000            B   562    			ld de,04000h					; a
004356 CD D2 40 00         B   563    			call set_timeout
                           B   564    
00435A CD E3 40 00         B   565    nkb_hw		call test_timeout				; t
00435E 28 04               B   566    			jr z,nkb_hnto
004360 D1                  B   567    			pop de
004361 C1                  B   568    			pop bc
004362 37                  B   569    			scf								; c
004363 C9                  B   570    			ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 176


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
004364 ED3807              B   571    nkb_hnto	in0 a,(port_ps2_ctrl)
004367 A1                  B   572    			and c
004368 28 F0               B   573    			jr z,nkb_hw
                           B   574    					
00436A D1                  B   575    			pop de
00436B C1                  B   576    			pop bc
00436C AF                  B   577    			xor a							; c
00436D C9                  B   578    			ret
                           B   579    
                           B   580    
                           B   581    ;==============================================
                           B   582    
00436E                     B   583    hwsc_play_audio
                           B   584    
                           B   585    ; set HL register to location of an audio data 
                           B   586    
                           B   587    ; 0 - start 
                           B   588    ; 3 - length
                           B   589    ; 6 - loop start
                           B   590    ; 9 - loop length
                           B   591    ; c - frequency constant
                           B   592    ; e - volume
                           B   593    
                           B   594    ; set C register to set channels wave is to pla
                           B   595    
00436E E5                  B   596    				push hl
00436F FDE1                B   597    				pop iy
004371 DD210014 FF         B   598    				ld ix,hw_audio_registers
004376 CD AB 43 00         B   599    				call audio_reg_wait				                           B   600    				
00437A 0608                B   601    				ld b,8
00437C CB39                B   602    audchanloop		srl c
00437E 30 24               B   603    				jr nc,not_this_chan
                           B   604    				
004380 FD1700              B   605    				ld de,(iy)
004383 DD1F00              B   606    				ld (ix),de						                           B   607    
004386 FD1703              B   608    				ld de,(iy+3)
004389 DD1F04              B   609    				ld (ix+04h),de					                           B   610    				
00438C FD170C              B   611    				ld de,(iy+0ch)
00438F DD1F08              B   612    				ld (ix+08h),de					                           B   613    				
004392 FD5E0E              B   614    				ld e,(iy+0eh)
004395 DD1F0C              B   615    				ld (ix+0ch),de					                           B   616    				
004398 FD1706              B   617    				ld de,(iy+6)
00439B DD1F10              B   618    				ld (ix+10h),de					                           B   619    				
00439E FD1709              B   620    				ld de,(iy+9)
0043A1 DD1F14              B   621    				ld (ix+14h),de					                           B   622    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 177


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
0043A4                     B   623    not_this_chan	
0043A4 ED3220              B   624    				lea ix,ix+20h			
0043A7 10 D3               B   625    				djnz audchanloop
0043A9 AF                  B   626    				xor a
0043AA C9                  B   627    				ret
                           B   628    
                           B   629    
                           B   630    ;----------------------------------------------
                           B   631    
0043AB                     B   632    audio_reg_wait	
                           B   633    
0043AB 3E01                B   634    				ld a,1
0043AD 320314FF            B   635    				ld (hw_audio_registers+3),a		                           B   636    				
0043B1 ED3801              B   637    wait_audreg		in0 a,(port_hw_flags)			0043B4 E640                B   638    				and 040h
0043B6 28 F9               B   639    				jr z,wait_audreg				0043B8 AF                  B   640    				xor a
0043B9 C9                  B   641    				ret
0043BA C9                  B   642    				ret
                           B   643    
                           B   644    
                           B   645    ;----------------------------------------------
                           B   646    				
                           B   647    				
0043BB                     B   648    hwsc_disable_audio
                           B   649    
0043BB AF                  B   650    				xor a
0043BC 320314FF            B   651    				ld (hw_audio_registers+3),a		                           B   652    				
0043C0 DD210014 FF         B   653    				ld ix,hw_audio_registers		0043C5 0608                B   654    				ld b,8
0043C7 11000000            B   655    				ld de,0
0043CB DD1F0C              B   656    disaud_lp		ld (ix+0ch),de
0043CE ED3220              B   657    				lea ix,ix+020h
0043D1 10 F8               B   658    				djnz disaud_lp
0043D3 C9                  B   659    				ret
                           B   660    				
                           B   661    ;----------------------------------------------
                           B   662    
0043D4                     B   663    hwsc_get_joysticks
                           B   664    
0043D4 ED389E              B   665    				in0 a,(PC_DR)				
0043D7 2F                  B   666    				cpl
0043D8 47                  B   667    				ld b,a
0043D9 E60F                B   668    				and 0fh
0043DB 5F                  B   669    				ld e,a
0043DC 78                  B   670    				ld a,b
0043DD 0F                  B   671    				rrca
0043DE 0F                  B   672    				rrca
0043DF 0F                  B   673    				rrca
0043E0 0F                  B   674    				rrca
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 178


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
0043E1 E60F                B   675    				and 0fh
0043E3 57                  B   676    				ld d,a
                           B   677    				
0043E4 ED38A2              B   678    				in0 a,(PD_DR)	
0043E7 CB67                B   679    				bit 4,a						; f
0043E9 20 02               B   680    				jr nz,noj1b1
0043EB CBEA                B   681    				set 5,d
                           B   682    
0043ED CB6F                B   683    noj1b1			bit 5,a						; f
0043EF 20 02               B   684    				jr nz,noj1b0
0043F1 CBE2                B   685    				set 4,d
                           B   686    				
0043F3 CB77                B   687    noj1b0			bit 6,a						; f
0043F5 20 02               B   688    				jr nz,noj0b1
0043F7 CBEB                B   689    				set 5,e
                           B   690    
0043F9 CB7F                B   691    noj0b1			bit 7,a						; f
0043FB 20 02               B   692    				jr nz,noj0b0
0043FD CBE3                B   693    				set 4,e
                           B   694    
0043FF AF                  B   695    noj0b0			xor a
004400 C9                  B   696    				ret
                           B   697    				
                           B   698    				
                           B   699    ;----------------------------------------------
                           B   700    			
                           B   701    				
                           B   702    				
                           A  3242    
                           B     0    	include		'prose_keyboard_routines.asm'	                           B     1    ;----------------------------------------------
                           B     2    ;PROSE KEYBOARD/MOUSE ROUTINES V0.04 (ADL mode)
                           B     3    ;----------------------------------------------
                           B     4    
004401                     B     5    os_wait_key_press
                           B     6    
                           B     7    ; Busy waits for a keypress.
                           B     8    ; Handles the following modifier keys (key_mod_
                           B     9    ; Returns scancode in A and ASCII code in B (B=
                           B    10    ; (ASCII code is modifed by shift / alt key sta
                           B    11    
                           B    12    
004401 D5                  B    13    				push de
004402 51                  B    14    				ld d,c
004403 E5                  B    15    				push hl
                           B    16    				
004404 CD 6E 44 00         B    17    wait_kbuf		call get_kb_buffer_indexes		004408 BE                  B    18    				cp (hl)							004409 28 F9               B    19    				jr z,wait_kbuf		
                           B    20    			
00440B 01000000            B    21    new_key			ld bc,0							00440F 4F                  B    22    				ld c,a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 179


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_keyboard_routines.asm
004410 21 C2 62 00         B    23    				ld hl,scancode_buffer	
004414 09                  B    24    				add hl,bc
004415 7E                  B    25    				ld a,(hl)						                           B    26    
004416 0E10                B    27    				ld c,16
004418 09                  B    28    				add hl,bc						004419 4F                  B    29    				ld c,a							00441A 7E                  B    30    				ld a,(hl)						                           B    31    
00441B 1E00                B    32    				ld e,0							00441D 21 23 5E 00         B    33    				ld hl,unshifted_keymap			                           B    34    
004421 CB4F                B    35    				bit 1,a
004423 28 04               B    36    				jr z,not_ctrl					004425 1E60                B    37    				ld e,96							004427 18 16               B    38    				jr got_keymap					                           B    39    							
004429 CB47                B    40    not_ctrl		bit 0,a
00442B 20 04               B    41    				jr nz,shifted
00442D CB67                B    42    				bit 4,a
00442F 28 06               B    43    				jr z,not_shifted
004431 21 85 5E 00         B    44    shifted			ld hl,shifted_keymap			004435 18 08               B    45    				jr got_keymap
                           B    46    				
004437 CB5F                B    47    not_shifted		bit 3,a
004439 28 04               B    48    				jr z,got_keymap	
00443B 21 E7 5E 00         B    49    				ld hl,alted_keymap				                           B    50    
00443F 79                  B    51    got_keymap		ld a,c							004440 FE62                B    52    				cp 062h
004442 30 07               B    53    				jr nc,gotkdone
004444 09                  B    54    				add hl,bc						004445 7E                  B    55    				ld a,(hl)						004446 93                  B    56    				sub a,e							004447 30 01               B    57    				jr nc,subkey_ok	
004449 AF                  B    58    				xor a							00444A 47                  B    59    subkey_ok		ld b,a
                           B    60    				
00444B 3A E3 62 00         B    61    gotkdone		ld a,(key_buf_rd_idx)			00444F 3C                  B    62    				inc a							004450 E60F                B    63    				and 15
004452 32 E3 62 00         B    64    				ld (key_buf_rd_idx),a			004456 79                  B    65    				ld a,c							004457 E1                  B    66    				pop hl
004458 4A                  B    67    				ld c,d
004459 D1                  B    68    				pop de
00445A BF                  B    69    				cp a							00445B C9                  B    70    				ret
                           B    71    			
                           B    72    		
                           B    73    ;----------------------------------------------
                           B    74    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 180


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_keyboard_routines.asm
00445C                     B    75    os_get_key_press
                           B    76    				
                           B    77    ; Gets a keycode on-the-fly - If one is availab
                           B    78    ; On return, ZF is set if there is a new scanco
                           B    79    ; (ASCII code is modifed by shift key status), 
                           B    80    			
                           B    81    			
00445C D5                  B    82    				push de
00445D 51                  B    83    				ld d,c
00445E E5                  B    84    				push hl
00445F CD 6E 44 00         B    85    				call get_kb_buffer_indexes		004463 BE                  B    86    				cp (hl)							004464 20 A5               B    87    				jr nz,new_key					004466 3E81                B    88    				ld a,81h			
004468 47                  B    89    				ld b,a
004469 B7                  B    90    				or a
00446A E1                  B    91    				pop hl
00446B 4A                  B    92    				ld c,d
00446C D1                  B    93    				pop de
00446D C9                  B    94    				ret
                           B    95    			
                           B    96    ;----------------------------------------------
                           B    97    			
00446E                     B    98    get_kb_buffer_indexes
                           B    99    			
                           B   100    			
00446E 21 E2 62 00         B   101    				ld hl,key_buf_wr_idx			004472 3A E3 62 00         B   102    				ld a,(key_buf_rd_idx)			004476 C9                  B   103    				ret
                           B   104    			
                           B   105    		
                           B   106    ;----------------------------------------------
                           B     0    	include		'prose_serial_routines.asm'
                           B     1    ;**********************************************
                           B     2    ; PROSE Serial File Transfer Routines V0.05 (AD
                           B     3    ;**********************************************
                           B     4    
                           B     5    ;----------------------------------------------
                           B     6    ; .---------------------.
                           B     7    ; ! Receive file header !
                           B     8    ; '---------------------'
                           B     9    ;
                           B    10    ; Before calling set:-
                           B    11    ;
                           B    12    ; HL = Filename ("*" if dont care)
                           B    13    ;  A = Time out in seconds
                           B    14    ;
                           B    15    ; If zero flag set, all OK. IX returns location
                           B    16    ;    Else A=$84 = memory address out of range, 
                           B    17    ;           $87 = Filename mismatch, $86 = chec
                           B    18    ;----------------------------------------------
                           B    19    	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 181


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
                           B    20    
004477                     B    21    serial_get_header
                           B    22    
004477 32 A7 5F 00         B    23    				ld (serial_timeout),a			00447B 22 91 5F 00         B    24    				ld (serial_fn_addr),hl
00447F CD E0 3D 00         B    25    				call hwsc_flush_serial_buffer	                           B    26    
004483 CD 66 45 00         B    27    				call s_getblock					004487 28 0C               B    28    				jr z,s_gbfhok					004489 F5                  B    29    				push af							00448A 3A C8 5F 00         B    30    				ld a,(serial_transfer_started)
00448E B7                  B    31    				or a							00448F C4 CD 45 00         B    32    				call nz,s_badack				004493 F1                  B    33    				pop af
004494 C9                  B    34    				ret
                           B    35    	
004495 21 BC 5F 00         B    36    s_gbfhok		ld hl,serial_header_id			004499 11 16 67 00         B    37    				ld de,sector_buffer+20			00449D 060C                B    38    				ld b,12
00449F CD 20 12 00         B    39    				call os_compare_strings
0044A3 20 0F               B    40    				jr nz,s_nfhdr
0044A5 06E0                B    41    				ld b,256-32						0044A7 21 22 67 00         B    42    				ld hl,sector_buffer+32
0044AB 7E                  B    43    s_chdr			ld a,(hl)
0044AC 23                  B    44    				inc hl
0044AD B7                  B    45    				or a
0044AE 20 04               B    46    				jr nz,s_nfhdr
0044B0 10 F9               B    47    				djnz s_chdr
0044B2 18 08               B    48    				jr s_fhcsok
                           B    49    				
0044B4 CD CD 45 00         B    50    s_nfhdr			call s_badack					0044B8 3E85                B    51    				ld a,085h						0044BA B7                  B    52    				or a
0044BB C9                  B    53    				ret
                           B    54    		
0044BC 21 12 67 00         B    55    s_fhcsok		ld hl,sector_buffer+16			0044C0 11 B8 5F 00         B    56    				ld de,serial_fileheader+16
0044C4 01040000            B    57    				ld bc,4
0044C8 EDB0                B    58    				ldir
                           B    59    				
0044CA 21 02 67 00         B    60    				ld hl,sector_buffer
0044CE 11 A8 5F 00         B    61    				ld de,serial_fileheader			0044D2 0610                B    62    				ld b,16							0044D4 7E                  B    63    s_tuclp			ld a,(hl)						0044D5 B7                  B    64    				or a
0044D6 28 0B               B    65    				jr z,s_ffhswz	
0044D8 CD 5A 12 00         B    66    				call os_uppercasify
0044DC 12                  B    67    				ld (de),a
0044DD 23                  B    68    				inc hl
0044DE 13                  B    69    				inc de
0044DF 10 F3               B    70    				djnz s_tuclp
0044E1 18 04               B    71    				jr s_tucdone
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 182


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
0044E3 12                  B    72    s_ffhswz		ld (de),a
0044E4 13                  B    73    				inc de
0044E5 10 FC               B    74    				djnz s_ffhswz		
                           B    75    	
0044E7 2A 91 5F 00         B    76    s_tucdone		ld hl,(serial_fn_addr)			0044EB 7E                  B    77    				ld a,(hl)
0044EC FE2A                B    78    				cp '*'
0044EE 28 14               B    79    				jr z,s_rffns					0044F0 11 A8 5F 00         B    80    				ld de,serial_fileheader
0044F4 0610                B    81    				ld b,16
0044F6 CD 20 12 00         B    82    				call os_compare_strings
0044FA 28 08               B    83    				jr z,s_rffns
0044FC CD CD 45 00         B    84    s_rfnbad		call s_badack
004500 3E87                B    85    				ld a,087h						004502 B7                  B    86    				or a
004503 C9                  B    87    				ret
                           B    88    				
004504 DD21 A8 5F 00       B    89    s_rffns			ld ix,serial_fileheader			004509 AF                  B    90    				xor a
00450A C9                  B    91    				ret
                           B    92    
00450B F5                  B    93    s_fail			push af				
00450C CD CD 45 00         B    94    				call s_badack		 
004510 F1                  B    95    				pop af
004511 C9                  B    96    				ret
                           B    97    	
                           B    98    ;----------------------------------------------
                           B    99    ; .-------------------.
                           B   100    ; ! Receive file data !
                           B   101    ; '-------------------'
                           B   102    ;
                           B   103    ; Serial_get_header must be called first!
                           B   104    ;
                           B   105    ; Set:
                           B   106    ;
                           B   107    ; xHL = Address to load to [23:0]
                           B   108    ;
                           B   109    ; On return, if Zero flag is set, all OK (IX = 
                           B   110    ; Else A =  $84 = memory address out of range
                           B   111    ;           $85 = comms error
                           B   112    ;----------------------------------------------
                           B   113    
004512                     B   114    serial_receive_file
                           B   115    
004512 3E0A                B   116    				ld a,10							004514 32 A7 5F 00         B   117    				ld (serial_timeout),a
004518 E5                  B   118    				push hl
004519 CD BC 45 00         B   119    				call s_goodack					00451D DDE1                B   120    				pop ix							00451F ED5B B8 5F 00       B   121    				ld de,(serial_fileheader+16)	                           B   122    
004524 CD 66 45 00         B   123    s_gbloop		call s_getblock
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 183


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
004528 20 E1               B   124    				jr nz,s_fail
00452A 0E00                B   125    				ld c,0							00452C FD21 02 67 00       B   126    				ld iy,sector_buffer
004531 FD7E00              B   127    s_rfloop		ld a,(iy)
004534 DD7700              B   128    				ld (ix),a						004537 1B                  B   129    				dec de							004538 21000000            B   130    				ld hl,0
00453C AF                  B   131    				xor a
00453D ED5A                B   132    				adc hl,de						00453F 28 1A               B   133    				jr z,s_rfabr					004541 C5                  B   134    				push bc
004542 01010000            B   135    				ld bc,1
004546 DD09                B   136    				add ix,bc						004548 C1                  B   137    				pop bc
004549 30 05               B   138    				jr nc,s_nbt
00454B 3E84                B   139    				ld a,84h						00454D B7                  B   140    				or a
00454E 18 BB               B   141    				jr s_fail
004550 FD23                B   142    s_nbt			inc iy
004552 0D                  B   143    				dec c
004553 20 DC               B   144    				jr nz,s_rfloop
004555 CD BC 45 00         B   145    				call s_goodack					004559 18 C9               B   146    				jr s_gbloop
                           B   147    			
00455B CD BC 45 00         B   148    s_rfabr			call s_goodack					00455F DD21 A8 5F 00       B   149    				ld ix,serial_fileheader			004564 AF                  B   150    				xor a							004565 C9                  B   151    				ret
                           B   152    			
                           B   153    ;----------------------------------------------
                           B   154    
004566                     B   155    s_getblock
                           B   156    
                           B   157    ; carry set on return if timed out
                           B   158    
004566 AF                  B   159    				xor a
004567 32 C8 5F 00         B   160    				ld (serial_transfer_started),a	00456B E5                  B   161    				push hl							00456C D5                  B   162    				push de
00456D C5                  B   163    				push bc
00456E 21 02 67 00         B   164    				ld hl,sector_buffer				004572 0600                B   165    				ld b,0
004574 D9                  B   166    				exx
004575 21FFFF00            B   167    				ld hl,0ffffh					004579 D9                  B   168    				exx
00457A CD 8A 3D 00         B   169    s_lgb			call receive_serial_byte
00457E 20 38               B   170    				jr nz,s_gberr					004580 F5                  B   171    				push af
004581 3E01                B   172    				ld a,1
004583 32 C8 5F 00         B   173    				ld (serial_transfer_started),a
004587 F1                  B   174    				pop af
004588 77                  B   175    				ld (hl),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 184


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
004589 D9                  B   176    				exx
00458A AC                  B   177    				xor h							00458B 67                  B   178    				ld h,a			
00458C 0608                B   179    				ld b,8
00458E 4029                B   180    rxcrcbyte		add.sis hl,hl					004590 30 08               B   181    				jr nc,rxcrcnext
004592 7C                  B   182    				ld a,h
004593 EE10                B   183    				xor 10h
004595 67                  B   184    				ld h,a
004596 7D                  B   185    				ld a,l
004597 EE21                B   186    				xor 21h
004599 6F                  B   187    				ld l,a
00459A 10 F2               B   188    rxcrcnext		djnz rxcrcbyte
00459C D9                  B   189    				exx
00459D 23                  B   190    				inc hl
00459E 10 DA               B   191    				djnz s_lgb
0045A0 D9                  B   192    				exx								                           B   193    			
0045A1 CD 8A 3D 00         B   194    				call receive_serial_byte		0045A5 20 11               B   195    				jr nz,s_gberr
0045A7 4F                  B   196    				ld c,a
0045A8 CD 8A 3D 00         B   197    				call receive_serial_byte
0045AC 20 0A               B   198    				jr nz,s_gberr		
0045AE 47                  B   199    				ld b,a
                           B   200    				
0045AF AF                  B   201    				xor a							0045B0 52ED42              B   202    				sbc.s hl,bc						0045B3 28 03               B   203    				jr z,s_gberr
                           B   204    			
0045B5 3E86                B   205    				ld a,86h						0045B7 B7                  B   206    				or a							0045B8 C1                  B   207    s_gberr			pop bc
0045B9 D1                  B   208    				pop de
0045BA E1                  B   209    				pop hl
0045BB C9                  B   210    				ret
                           B   211    				
                           B   212    ;----------------------------------------------
                           B   213    
0045BC C5                  B   214    s_goodack		push bc
0045BD 014F4B00            B   215    				ld bc,04b4fh					0045C1 79                  B   216    ackbytes		ld a,c
0045C2 CD C5 3D 00         B   217    				call send_serial_byte
0045C6 78                  B   218    				ld a,b
0045C7 CD C5 3D 00         B   219    				call send_serial_byte
0045CB C1                  B   220    				pop bc
0045CC C9                  B   221    				ret
                           B   222    
0045CD C5                  B   223    s_badack		push bc
0045CE 01585800            B   224    				ld bc,05858h					0045D2 18 ED               B   225    				jr ackbytes
                           B   226    
0045D4 C5                  B   227    s_holdack		push bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 185


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
0045D5 01575700            B   228    				ld bc,05757h					0045D9 18 E6               B   229    				jr ackbytes
                           B   230    				
                           B   231    ;==============================================
                           B   232    
                           B   233    ; .-----------.
                           B   234    ; ! Send file !
                           B   235    ; '-----------'
                           B   236    
                           B   237    ; Before calling set:-
                           B   238    
                           B   239    ;  xHL   = filename
                           B   240    ;  xDE   = length of file
                           B   241    ;  xIX   = Start address [23:0]
                           B   242    
                           B   243    ; On return, if zero flag is set, all OK. Else:
                           B   244    ; $81 = Save length is zero
                           B   245    ; $84 = memory address out of range
                           B   246    ; $85 = comms error
                           B   247    
                           B   248    
0045DB                     B   249    serial_send_file
                           B   250    			
0045DB 3E01                B   251    				ld a,1							0045DD 32 A7 5F 00         B   252    				ld (serial_timeout),a
                           B   253    			
0045E1 DD22 8B 5F 00       B   254    				ld (serial_ez80_address),ix
0045E6 ED53 B8 5F 00       B   255    				ld (serial_fileheader+10h),de	0045EB E5                  B   256    				push hl
0045EC 21000000            B   257    				ld hl,0
0045F0 AF                  B   258    				xor a
0045F1 ED5A                B   259    				adc hl,de
0045F3 20 05               B   260    				jr nz,s_flok
0045F5 E1                  B   261    				pop hl
0045F6 3E81                B   262    				ld a,081h						0045F8 B7                  B   263    				or a							0045F9 C9                  B   264    				ret
                           B   265    			
0045FA 21 A8 5F 00         B   266    s_flok			ld hl,serial_fileheader			0045FE 01100000            B   267    				ld bc,16
004602 AF                  B   268    				xor a
004603 CD BD 15 00         B   269    				call os_bchl_memfill
004607 E1                  B   270    				pop hl							004608 11 A8 5F 00         B   271    				ld de,serial_fileheader
00460C 0610                B   272    				ld b,16
00460E CD 3F 12 00         B   273    				call os_copy_ascii_run
                           B   274    				
004612 21 BC 5F 00         B   275    				ld hl,serial_header_id			004616 11 BC 5F 00         B   276    				ld de,serial_fileheader+014h
00461A 010C0000            B   277    				ld bc,12		
00461E EDB0                B   278    				ldir
                           B   279    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 186


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
004620 DD21 A8 5F 00       B   280    				ld ix,serial_fileheader			004625 11200000            B   281    				ld de,32
004629 CD 5F 46 00         B   282    				call s_makeblock			
00462D C0                  B   283    				ret nz
00462E CD 97 46 00         B   284    				call s_sendblock
004632 C0                  B   285    				ret nz
004633 CD C4 46 00         B   286    				call s_waitack					004637 C0                  B   287    				ret nz							                           B   288    				
004638 DD2A 8B 5F 00       B   289    				ld ix,(serial_ez80_address)
00463D ED5B B8 5F 00       B   290    				ld de,(serial_fileheader+16)	004642 CD 5F 46 00         B   291    s_sbloop		call s_makeblock				004646 38 16               B   292    				jr c,s_rerr
004648 CD 97 46 00         B   293    				call s_sendblock				00464C 38 10               B   294    				jr c,s_rerr	
00464E CD C4 46 00         B   295    				call s_waitack					004652 38 0A               B   296    				jr c,s_rerr
004654 21000000            B   297    				ld hl,0
004658 AF                  B   298    				xor a
004659 ED5A                B   299    				adc hl,de
00465B 20 E5               B   300    				jr nz,s_sbloop					00465D AF                  B   301    				xor a							00465E C9                  B   302    s_rerr			ret
                           B   303    
                           B   304    ;----------------------------------------------
                           B   305    
00465F                     B   306    s_makeblock
                           B   307    
                           B   308    ; set xIX = src addr
                           B   309    ; xDE = byte count
                           B   310    ; a=0 on return if all ok	
                           B   311    
00465F 21 02 67 00         B   312    				ld hl,sector_buffer				004663 01000100            B   313    				ld bc,256						004667 AF                  B   314    				xor a							004668 CD BD 15 00         B   315    				call os_bchl_memfill			                           B   316    				
00466C 0600                B   317    				ld b,0							00466E FD21 02 67 00       B   318    				ld iy,sector_buffer	
004673 DD7E00              B   319    s_sloop			ld a,(ix)
004676 FD7700              B   320    				ld (iy),a
004679 1B                  B   321    				dec de							00467A 21000000            B   322    				ld hl,0
00467E AF                  B   323    				xor a
00467F ED5A                B   324    				adc hl,de
004681 28 12               B   325    				jr z,s_mbend	
004683 FD23                B   326    				inc iy							004685 C5                  B   327    				push bc
004686 01010000            B   328    				ld bc,1
00468A DD09                B   329    				add ix,bc						00468C C1                  B   330    				pop bc							00468D 20 04               B   331    				jr nz,s_sbok
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 187


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
00468F 3E84                B   332    				ld a,84h						004691 B7                  B   333    				or a
004692 C9                  B   334    				ret
004693 10 DE               B   335    s_sbok			djnz s_sloop
004695 AF                  B   336    s_mbend			xor a
004696 C9                  B   337    				ret
                           B   338    
                           B   339    
                           B   340    
004697                     B   341    s_sendblock
                           B   342    
004697 E5                  B   343    				push hl
004698 D5                  B   344    				push de							004699 C5                  B   345    				push bc				
00469A 21 02 67 00         B   346    				ld hl,sector_buffer			
00469E 1E00                B   347    				ld e,0
0046A0 7E                  B   348    s_sblklp		ld a,(hl)
0046A1 CD C5 3D 00         B   349    				call send_serial_byte
0046A5 23                  B   350    				inc hl
0046A6 1D                  B   351    				dec e
0046A7 20 F7               B   352    				jr nz,s_sblklp
0046A9 11 02 67 00         B   353    				ld de,sector_buffer
0046AD 01000000            B   354    				ld bc,0
0046B1 CD 63 15 00         B   355    				call crc_checksum
0046B5 7D                  B   356    				ld a,l
0046B6 CD C5 3D 00         B   357    				call send_serial_byte
0046BA 7C                  B   358    				ld a,h
0046BB CD C5 3D 00         B   359    				call send_serial_byte
0046BF AF                  B   360    				xor a
0046C0 C1                  B   361    s_popall		pop bc
0046C1 D1                  B   362    				pop de
0046C2 E1                  B   363    				pop hl
0046C3 C9                  B   364    				ret
                           B   365    	
                           B   366    
0046C4                     B   367    s_waitack
0046C4 E5                  B   368    				push hl
0046C5 D5                  B   369    				push de
0046C6 C5                  B   370    				push bc
0046C7 CD 8A 3D 00         B   371    				call receive_serial_byte		0046CB 20 F3               B   372    				jr nz,s_popall
0046CD 47                  B   373    				ld b,a
0046CE CD 8A 3D 00         B   374    				call receive_serial_byte
0046D2 20 EC               B   375    				jr nz,s_popall
0046D4 4F                  B   376    				ld c,a
0046D5 264F                B   377    				ld h,'O'
0046D7 2E4B                B   378    				ld l,'K'
0046D9 AF                  B   379    				xor a
0046DA 52ED42              B   380    				sbc.s hl,bc						0046DD 28 E1               B   381    				jr z,s_popall					                           B   382    			
0046DF 3E85                B   383    				ld a,085h						Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 188


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
0046E1 B7                  B   384    				or a
0046E2 18 DC               B   385    				jr s_popall
                           B   386    
                           B   387    	
                           B   388    ;----------------------------------------------
                           B     0    	include		'prose_fat16_code_v08.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; eZ80 FAT16 File System code for PROSE by Phil
                           B     3    ;----------------------------------------------
                           B     4    ;
                           B     5    ; Changes:
                           B     6    ;
                           B     7    ; 0.08 - Speeded up reading of files (pre-calc 
                           B     8    ;        All routines return with ZF not set if
                           B     9    ;
                           B    10    ; 0.07 - Made compatible with v1.10 drivers (ZF
                           B    11    ; 0.06 - Fixed "fs_get_volume_label"
                           B    12    ; 0.05 - Fixed format command
                           B    13    ; 0.04 - File system error codes are now in the
                           B    14    ; 0.03 - ADL mode
                           B    15    ; 0.02 - removed references to banks, added 24 
                           B    16    ; 0.01 - first version based on FLOS routines v
                           B    17    ;
                           B    18    ; Known limitations:
                           B    19    ; ------------------
                           B    20    ; If a disk full error is returned during a fil
                           B    21    ; Allows a file to be created in root even if t
                           B    22    ;        
                           B    23    ;----------------------------------------------
                           B    24    ;
                           B    25    ; All routines return carry clear / zero flag s
                           B    26    ;
                           B    27    ; If carry set there was a driver error, A = Er
                           B    28    ; Check for "carry set" first!
                           B    29    ; If carry clear, check zero flag. If not set: 
                           B    30    ;
                           B    31    ;					$c1  - Disk full
                           B    32    ;					$c2  - file not found
                           B    33    ;             	    $c3  - (root) dir table is 
                           B    34    ;					$c4  - directory requested 
                           B    35    ;             	    $c5  - cant delete dir, it 
                           B    36    ;					$c6  - not a file
                           B    37    ;					$c7  - file length is zero
                           B    38    ;              	    $c8  - out of memory
                           B    39    ;					$c9  - filename already exi
                           B    40    ;					$ca  - already at root dire
                           B    41    ;                  	$cb  - directory not found
                           B    42    ;					$cc  - requested bytes beyo
                           B    43    ;					$cd  - invalid filename
                           B    44    ;					$ce  - unknown/incorrect di
                           B    45    ;					$cf  - invalid volume
                           B    46    ;                 	$d0  - device not present	Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 189


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
                           B    47    ;					$d1  - directory not found	                           B    48    ;                 	$d2  - end of directory lis
                           B    49    ;                 	$d3  - device does not use 
                           B    50    ;                  	$d4  - cant find volume lab
                           B    51    ;                   $d5  - sector out of range
                           B    52    
                           B    53    ;----------------------------------------------
                           B    54    ; Main routines called by external programs
                           B    55    ;----------------------------------------------
                           B    56    
0046E4                     B    57    fs_format_device_command
                           B    58    
                           B    59    ; Creates a single partition (truncated to 2GB)
                           B    60    
                           B    61    
0046E4 3A D9 5F 00         B    62    				ld a,(device_count)				0046E8 47                  B    63    				ld b,a							0046E9 DD21 83 60 00       B    64    				ld ix,host_device_hardware_info
0046EE 3A D8 5F 00         B    65    fdevinfo		ld a,(current_driver)
0046F2 DDBE00              B    66    				cp (ix)
0046F5 28 09               B    67    				jr z,got_dev_info
0046F7 ED3220              B    68    				lea ix,ix+32
0046FA 10 F2               B    69    				djnz fdevinfo
0046FC 3ED0                B    70    				ld a,0d0h						0046FE B7                  B    71    				or a
0046FF C9                  B    72    				ret	
                           B    73    	
004700 CD D4 51 00         B    74    got_dev_info	call fs_clear_sector_buffer		004704 11000000            B    75    				ld de,0							004708 CD F8 47 00         B    76    form_ws			call set_lba_and_write_sector
00470C D8                  B    77    				ret c
00470D 13                  B    78    				inc de
00470E 7A                  B    79    				ld a,d
00470F FE03                B    80    				cp 3
004711 20 F5               B    81    				jr nz,form_ws
                           B    82    	
004713 21 B0 54 00         B    83    				ld hl,bootsector_stub			004717 11 02 67 00         B    84    				ld de,sector_buffer				00471B 013F0000            B    85    				ld bc,03fh
00471F EDB0                B    86    				ldir
                           B    87    	
004721 DD7E04              B    88    				ld a,(ix+4)						004724 B7                  B    89    				or a
004725 20 0C               B    90    				jr nz,above_2gb
004727 2100003F            B    91    				ld hl,3f0000h					00472B DD1701              B    92    				ld de,(ix+1)					00472E AF                  B    93    				xor a			
00472F ED52                B    94    				sbc hl,de						004731 30 08               B    95    				jr nc,lessthan2gb				004733 3E40                B    96    above_2gb		ld a,40h						004735 1100003F            B    97    				ld de,3f0000h					004739 18 11               B    98    				jr spcvalok
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 190


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
                           B    99    
00473B DD4E03              B   100    lessthan2gb		ld c,(ix+3)						00473E 0C                  B   101    				inc c							00473F 3E01                B   102    spc_loop		ld a,1							004741 B9                  B   103    spc_comp		cp c							004742 28 08               B   104    				jr z,spcvalok
004744 07                  B   105    				rlca
004745 FE80                B   106    				cp 080h							004747 20 F8               B   107    				jr nz,spc_comp
004749 0C                  B   108    				inc c			
00474A 18 F3               B   109    				jr spc_loop						                           B   110    							
00474C DD21 02 67 00       B   111    spcvalok		ld ix,sector_buffer
004751 DD770D              B   112    				ld (ix+0dh),a					                           B   113    				
004754 CD DA 15 00         B   114    				call os_get_xde_msb				004758 4F                  B   115    				ld c,a							004759 B7                  B   116    				or a							00475A 20 08               B   117    				jr nz,ts_dword					00475C DD7313              B   118    				ld (ix+13h),e					00475F DD7214              B   119    				ld (ix+14h),d
004762 18 07               B   120    				jr ts_done
004764 DD1F20              B   121    ts_dword		ld (ix+20h),de					004767 DD362300            B   122    				ld (ix+23h),0
                           B   123    
00476B EB                  B   124    ts_done			ex de,hl						00476C 11000000            B   125    				ld de,0						
004770 DD560D              B   126    				ld d,(ix+0dh)					004773 01000000            B   127    				ld bc,0							004777 AF                  B   128    div_tscls		xor a							004778 ED52                B   129    				sbc hl,de
00477A 28 05               B   130    				jr z,gotfats
00477C 38 03               B   131    				jr c,gotfats	
00477E 03                  B   132    				inc bc
00477F 18 F6               B   133    				jr div_tscls
004781 03                  B   134    gotfats			inc bc
004782 DD7116              B   135    				ld (ix+16h),c					004785 DD7017              B   136    				ld (ix+17h),b
004788 ED43 00 55 00       B   137    				ld (fs_sectors_per_fat),bc
                           B   138    				
00478D 010055AA            B   139    				ld bc,0aa5500h
004791 ED43 FF 68 00       B   140    				ld (sector_buffer+1fdh),bc		004796 11000000            B   141    				ld de,0
00479A CD F8 47 00         B   142    				call set_lba_and_write_sector	00479E D8                  B   143    				ret c
                           B   144    				
00479F 21000000            B   145    				ld hl,0
0047A3 DD6E0E              B   146    				ld l,(ix+0eh)					0047A6 DD660F              B   147    				ld h,(ix+0fh)
0047A9 19                  B   148    				add hl,de
0047AA EB                  B   149    				ex de,hl						                           B   150    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 191


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
0047AB CD D4 51 00         B   151    				call fs_clear_sector_buffer		0047AF DD3600FF            B   152    				ld (ix+0),0ffh
0047B3 DD3601F8            B   153    				ld (ix+1),0f8h
0047B7 DD3602FF            B   154    				ld (ix+2),0ffh
0047BB DD3603FF            B   155    				ld (ix+3),0ffh
0047BF CD F8 47 00         B   156    				call set_lba_and_write_sector	0047C3 D8                  B   157    				ret c
                           B   158    
0047C4 2A 00 55 00         B   159    				ld hl,(fs_sectors_per_fat)	
0047C8 19                  B   160    				add hl,de
0047C9 EB                  B   161    				ex de,hl
0047CA CD F8 47 00         B   162    				call set_lba_and_write_sector 	0047CE D8                  B   163    				ret c	
                           B   164    				
0047CF D5                  B   165    				push de							0047D0 CD D4 51 00         B   166    				call fs_clear_sector_buffer
0047D4 21 06 55 00         B   167    				ld hl,fs_sought_filename
0047D8 11 02 67 00         B   168    				ld de,sector_buffer
0047DC 010B0000            B   169    				ld bc,11
0047E0 EDB0                B   170    				ldir							0047E2 D1                  B   171    				pop de							0047E3 DD360B08            B   172    				ld (ix+0bh),8					0047E7 DD361821            B   173    				ld (ix+018h),021h				0047EB 2A 00 55 00         B   174    				ld hl,(fs_sectors_per_fat)		0047EF 19                  B   175    				add hl,de
0047F0 EB                  B   176    				ex de,hl
0047F1 CD F8 47 00         B   177    				call set_lba_and_write_sector	0047F5 D8                  B   178    				ret c	
                           B   179    			
0047F6 AF                  B   180    				xor a							0047F7 C9                  B   181    				ret
                           B   182    	
                           B   183    
                           B   184    
0047F8                     B   185    set_lba_and_write_sector
                           B   186    
0047F8 DDE5                B   187    				push ix
0047FA DD21 AE 61 00       B   188    				ld ix,sector_lba0				0047FF DD1F00              B   189    				ld (ix),de						004802 DD360300            B   190    				ld (ix+3),0
004806 DDE1                B   191    				pop ix
004808 CD 77 54 00         B   192    				call fs_write_sector
00480C C9                  B   193    				ret
                           B   194    				
                           B   195    				
                           B   196    ;----------------------------------------------
                           B   197    
00480D                     B   198    fs_get_partition_info
                           B   199    
                           B   200    ; Set A to partition: $00 to $03
                           B   201    ; On return: If A = $00, xHL = Address of reque
                           B   202    ;            If A = $25, A partition table is n
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 192


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
                           B   203    ;            If A = $13, Disk format is bad 
                           B   204    ;            If carry flag set, there was a har
                           B   205    
                           B   206    
00480D 32 06 61 00         B   207    				ld (partition_temp),a
                           B   208    				
004811 21000000            B   209    				ld hl,0							004815 22 AE 61 00         B   210    				ld (sector_lba0),hl
004819 7D                  B   211    				ld a,l
00481A 32 B1 61 00         B   212    				ld (sector_lba3),a
00481E CD 4E 54 00         B   213    				call fs_read_sector
004822 D8                  B   214    				ret c
                           B   215    			
004823 CD 5E 48 00         B   216    				call fs_check_fat_sig			004827 20 42               B   217    				jr nz,formbad
                           B   218    			
004829 CD 4F 48 00         B   219    				call check_fat16_id				00482D 28 1C               B   220    				jr z,at_pbs						                           B   221    				
00482F 3A C4 68 00         B   222    				ld a,(sector_buffer+01c2h)		004833 E604                B   223    				and 4							004835 28 34               B   224    				jr z,formbad	
004837 11000000            B   225    				ld de,0
00483B 3A 06 61 00         B   226    				ld a,(partition_temp)
00483F 5F                  B   227    				ld e,a
004840 1610                B   228    				ld d,16
004842 ED5C                B   229    				mlt de
004844 21 C0 68 00         B   230    				ld hl,sector_buffer+01beh
004848 19                  B   231    				add hl,de						004849 AF                  B   232    				xor a
00484A C9                  B   233    				ret
                           B   234    					
00484B 3ED3                B   235    at_pbs			ld a,0d3h						00484D B7                  B   236    				or a
00484E C9                  B   237    				ret
                           B   238    
                           B   239    
                           B   240    
00484F                     B   241    check_fat16_id
                           B   242    		
00484F 21 38 67 00         B   243    				ld hl,sector_buffer+036h		004853 11 D8 59 00         B   244    				ld de,fat16_txt			
004857 0605                B   245    				ld b,5
004859 CD 20 12 00         B   246    				call os_compare_strings
00485D C9                  B   247    				ret
                           B   248    				
                           B   249    ;----------------------------------------------
                           B   250    
                           B   251    
00485E                     B   252    fs_check_fat_sig
                           B   253    
00485E 2A 00 69 00         B   254    				ld hl,(sector_buffer+01feh)		Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 193


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
004862 1155AA00            B   255    				ld de,0aa55h
004866 AF                  B   256    				xor a
004867 52ED52              B   257    				sbc.s hl,de						00486A C9                  B   258    				ret
                           B   259    			
                           B   260    			
                           B   261    			
00486B 3ECE                B   262    formbad			ld a,0ceh						00486D B7                  B   263    				or a
00486E C9                  B   264    				ret
                           B   265    
                           B   266    ;----------------------------------------------
                           B   267    
                           B   268    
00486F                     B   269    fs_check_disk_format
                           B   270    
                           B   271    ; ensures disk is FAT16, sets up constants..
                           B   272    	
00486F C5                  B   273    				push bc
004870 D5                  B   274    				push de
004871 E5                  B   275    				push hl
004872 CD 7A 48 00         B   276    				call go_checkf
004876 E1                  B   277    				pop hl
004877 D1                  B   278    				pop de
004878 C1                  B   279    				pop bc
004879 C9                  B   280    				ret
                           B   281    				
00487A CD 41 49 00         B   282    go_checkf		call fs_read_partition_bootsect
00487E D8                  B   283    				ret c
00487F B7                  B   284    				or a
004880 C0                  B   285    				ret nz
                           B   286    				
004881 CD 5E 48 00         B   287    				call fs_check_fat_sig			004885 20 E4               B   288    				jr nz,formbad		
                           B   289    			
004887 CD 4F 48 00         B   290    				call check_fat16_id				00488B 20 DE               B   291    				jr nz,formbad
                           B   292    			
00488D DD21 02 67 00       B   293    				ld ix,sector_buffer
004892 DD270B              B   294    				ld hl,(ix+0bh)					004895 11000200            B   295    				ld de,512						004899 AF                  B   296    				xor a
00489A 52ED52              B   297    				sbc.s hl,de						00489D 20 CC               B   298    				jr nz,formbad
                           B   299    			
00489F DD7E0D              B   300    				ld a,(ix+0dh)					0048A2 32 EF 54 00         B   301    				ld (fs_cluster_size),a
0048A6 CB27                B   302    				sla a
0048A8 32 F1 54 00         B   303    				ld (fs_bytes_per_cluster+1),a
                           B   304    							
0048AC 21000000            B   305    				ld hl,0
0048B0 DD6E0E              B   306    				ld l,(ix+0eh)					Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 194


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
0048B3 DD660F              B   307    				ld h,(ix+0fh)
0048B6 22 F3 54 00         B   308    				ld (fs_fat1_position),hl		0048BA 11000000            B   309    				ld de,0
0048BE DD5E16              B   310    				ld e,(ix+16h)					0048C1 DD5617              B   311    				ld d,(ix+17h)
0048C4 ED53 00 55 00       B   312    				ld (fs_sectors_per_fat),de
0048C9 19                  B   313    				add hl,de
0048CA 22 F6 54 00         B   314    				ld (fs_fat2_position),hl		0048CE 19                  B   315    				add hl,de
0048CF 22 F9 54 00         B   316    				ld (fs_root_dir_position),hl 	0048D3 EB                  B   317    				ex de,hl
0048D4 DD6E11              B   318    				ld l,(ix+11h)					0048D7 DD6612              B   319    				ld h,(ix+12h)					0048DA 7C                  B   320    				ld a,h
0048DB B5                  B   321    				or l
0048DC 28 8D               B   322    				jr z,formbad					0048DE 29                  B   323    				add hl,hl						0048DF 29                  B   324    				add hl,hl						0048E0 29                  B   325    				add hl,hl
0048E1 29                  B   326    				add hl,hl
0048E2 EB                  B   327    				ex de,hl
0048E3 7A                  B   328    				ld a,d
0048E4 32 FF 54 00         B   329    				ld (fs_root_dir_sectors),a		0048E8 01000000            B   330    				ld bc,0
0048EC 4A                  B   331    				ld c,d
0048ED 09                  B   332    				add hl,bc				
0048EE 22 FC 54 00         B   333    				ld (fs_data_area),hl			                           B   334    												0048F2 21000000            B   335    				ld hl,0
0048F6 01000000            B   336    				ld bc,0
0048FA DD4E22              B   337    				ld c,(ix+022h)					0048FD DD4623              B   338    				ld b,(ix+023h)
004900 DD6E13              B   339    				ld l,(ix+013h)					004903 DD6614              B   340    				ld h,(ix+014h)
004906 7C                  B   341    				ld a,h							004907 B5                  B   342    				or l
004908 20 06               B   343    				jr nz,got_tsfbs
00490A DD6E20              B   344    				ld l,(ix+020h)					00490D DD6621              B   345    				ld h,(ix+021h)
004910 ED5B FC 54 00       B   346    got_tsfbs 		ld de,(fs_data_area)
004915 AF                  B   347    				xor a							004916 52ED52              B   348    				sbc.s hl,de						004919 30 02               B   349    				jr nc,nomxcb
00491B 520B                B   350    				dec.s bc
00491D 3A EF 54 00         B   351    nomxcb			ld a,(fs_cluster_size)
004921 CB3F                B   352    fmaxcl			srl a
004923 28 08               B   353    				jr z,got_cmaxc					004925 CB39                B   354    				srl c				
004927 CB1C                B   355    				rr h
004929 CB1D                B   356    				rr l
00492B 18 F4               B   357    				jr fmaxcl
00492D E5                  B   358    got_cmaxc		push hl							Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 195


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
00492E 11F0FF00            B   359    				ld de,0fff0h
004932 AF                  B   360    				xor a
004933 52ED52              B   361    				sbc.s hl,de						004936 38 02               B   362    				jr c,cmaxok
004938 E1                  B   363    				pop hl
004939 D5                  B   364    				push de
00493A E1                  B   365    cmaxok			pop hl
00493B 22 03 55 00         B   366    				ld (fs_max_data_clusters),hl
00493F AF                  B   367    				xor a
004940 C9                  B   368    				ret				
                           B   369    
                           B   370    ;----------------------------------------------
                           B   371    
004941                     B   372    fs_read_partition_bootsector
                           B   373    
004941 CD D5 1A 00         B   374    				call fs_calc_volume_offset		004945 21 03 60 00         B   375    				ld hl,volume_mount_list
004949 19                  B   376    				add hl,de
00494A 7E                  B   377    				ld a,(hl)
00494B B7                  B   378    				or a							00494C 20 04               B   379    				jr nz,fs_volpre
00494E 3ECF                B   380    				ld a,0cfh						004950 B7                  B   381    				or a
004951 C9                  B   382    				ret
                           B   383    			
004952 11080000            B   384    fs_volpre		ld de,8							004956 19                  B   385    				add hl,de
004957 11 AE 61 00         B   386    				ld de,sector_lba0
00495B 01040000            B   387    				ld bc,4
00495F EDB0                B   388    				ldir
004961 CD 4E 54 00         B   389    				call fs_read_sector
004965 C9                  B   390    				ret	
                           B   391    
                           B   392    ;----------------------------------------------
                           B   393    
004966                     B   394    fs_calc_free_space
                           B   395    
                           B   396    ;returns free space in KB in HL:DE
                           B   397    
004966 ED5B 03 55 00       B   398    				ld de,(fs_max_data_clusters)
00496B 13                  B   399    				inc de
00496C 13                  B   400    				inc de							00496D D5                  B   401    				push de
00496E DDE1                B   402    				pop ix
                           B   403    			
004970 AF                  B   404    				xor a
004971 32 48 55 00         B   405    cfs_lp2			ld (fs_working_sector),a
004975 2A F3 54 00         B   406    				ld hl,(fs_fat1_position)
004979 CD 24 54 00         B   407    				call set_abs_lba_and_read_secto
00497D D8                  B   408    				ret c
                           B   409    				
00497E 21 02 67 00         B   410    				ld hl,sector_buffer
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 196


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
004982 0600                B   411    				ld b,0
004984 AF                  B   412    cfs_lp1			xor a
004985 B6                  B   413    				or a,(hl)						004986 23                  B   414    				inc hl							004987 20 03               B   415    				jr nz,cfs_ciu					004989 B6                  B   416    				or a,(hl)
00498A 28 02               B   417    				jr z,cfs_ddcc
00498C DD2B                B   418    cfs_ciu			dec ix							00498E 23                  B   419    cfs_ddcc		inc hl
00498F 1B                  B   420    				dec de
004990 7A                  B   421    				ld a,d
004991 B3                  B   422    				or e
004992 28 09               B   423    				jr z,cfs_ok						004994 10 EE               B   424    				djnz cfs_lp1
004996 3A 48 55 00         B   425    				ld a,(fs_working_sector)
00499A 3C                  B   426    				inc a
00499B 18 D4               B   427    				jr cfs_lp2
                           B   428    				
00499D 3A EF 54 00         B   429    cfs_ok			ld a,(fs_cluster_size)			0049A1 CB3F                B   430    cltoslp			srl a
0049A3 28 04               B   431    				jr z,powdone
0049A5 DD29                B   432    				add ix,ix
0049A7 18 F8               B   433    				jr cltoslp	
0049A9 FD21 CA 61 00       B   434    powdone			ld iy,xrr_temp
0049AE FD3E00              B   435    				ld (iy),ix						0049B1 FDCB023E            B   436    				srl (iy+2)
0049B5 FDCB011E            B   437    				rr (iy+1)
0049B9 FDCB001E            B   438    				rr (iy+0)						0049BD FD1700              B   439    				ld de,(iy)						0049C0 AF                  B   440    				xor a
0049C1 C9                  B   441    				ret
                           B   442    
                           B   443    ;----------------------------------------------
                           B   444    
0049C2                     B   445    fs_change_dir_command
                           B   446    
                           B   447    ; INPUT: HL = directory name ascii (zero/space 
                           B   448    			
                           B   449    			
0049C2 CD E6 51 00         B   450    				call fs_find_filename			0049C6 D8                  B   451    				ret c							0049C7 FEC2                B   452    				cp 0c2h							0049C9 20 04               B   453    				jr nz,founddir
0049CB 3ED1                B   454    				ld a,0d1h						0049CD B7                  B   455    				or a
0049CE C9                  B   456    				ret
                           B   457    
0049CF DDCB0B66            B   458    founddir		bit 4,(ix+0bh)
0049D3 20 04               B   459    				jr nz,fs_isadir
0049D5 3EC4                B   460    				ld a,0c4h
0049D7 B7                  B   461    				or a
0049D8 C9                  B   462    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 197


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
                           B   463    				
0049D9 11000000            B   464    fs_isadir		ld de,0
0049DD DD5E1A              B   465    				ld e,(ix+01ah)
0049E0 DD561B              B   466    				ld d,(ix+01bh)					0049E3 CD A7 1A 00         B   467    				call fs_update_dir_cluster
0049E7 AF                  B   468    				xor a
0049E8 C9                  B   469    				ret
                           B   470    
                           B   471    
                           B   472    ;----------------------------------------------
                           B   473    	
                           B   474    	
0049E9                     B   475    fs_goto_root_dir_command
                           B   476    
0049E9 D5                  B   477    				push de
0049EA 11000000            B   478    				ld de,0
0049EE CD A7 1A 00         B   479    				call fs_update_dir_cluster
0049F2 D1                  B   480    				pop de
0049F3 AF                  B   481    				xor a
0049F4 C9                  B   482    				ret
                           B   483    
                           B   484    ;----------------------------------------------
                           B   485    	
                           B   486    	
0049F5                     B   487    fs_parent_dir_command
                           B   488    
0049F5 CD 9B 1A 00         B   489    				call fs_get_dir_cluster
0049F9 7A                  B   490    				ld a,d
0049FA B3                  B   491    				or e
0049FB 20 03               B   492    				jr nz,pdnaroot
0049FD 3ECA                B   493    				ld a,0cah						0049FF C9                  B   494    				ret
004A00 212E2E20            B   495    pdnaroot		ld hl,0202e2eh					004A04 22 06 55 00         B   496    				ld (fs_sought_filename),hl		004A08 21 09 55 00         B   497    				ld hl,fs_sought_filename+3		004A0C 3E20                B   498    				ld a,32
004A0E 01080000            B   499    				ld bc,8
004A12 CD BD 15 00         B   500    				call os_bchl_memfill
004A16 18 AA               B   501    				jr fs_change_dir_command
                           B   502    				
                           B   503    		
                           B   504    ;----------------------------------------------
                           B   505    		
004A18                     B   506    fs_open_file_command
                           B   507    
                           B   508    ; INPUT: xHL = directory name ascii (zero/space
                           B   509    ; OUTPUT: C:xDE  = File length
                           B   510    ;            HL  = Start cluster of file
                           B   511    ;            Internal vars (file pointer reset 
                           B   512    
                           B   513    			
004A18 CD E6 51 00         B   514    				call fs_find_filename			Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 198


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
004A1C D8                  B   515    				ret c							004A1D C0                  B   516    				ret nz							                           B   517    								
004A1E 3EC6                B   518    				ld a,0c6h						004A20 DDCB0B66            B   519    				bit 4,(ix+0bh)
004A24 C0                  B   520    				ret nz
                           B   521    
004A25 AF                  B   522    				xor a
004A26 32 5C 55 00         B   523    				ld (fs_filepointer_valid),a		004A2A 21000000            B   524    				ld hl,0
004A2E 22 2A 55 00         B   525    				ld (fs_file_pointer),hl			004A32 32 2D 55 00         B   526    				ld (fs_file_pointer+3),a		004A36 22 68 55 00         B   527    				ld (fs_sector_last_read_lba0),h
004A3A 32 6B 55 00         B   528    				ld (fs_sector_last_read_lba0+3)
                           B   529    
004A3E DD171C              B   530    				ld de,(ix+01ch)
004A41 D5                  B   531    				push de
004A42 E1                  B   532    				pop hl
004A43 DD4E1F              B   533    				ld c,(ix+01fh)					004A46 ED53 2E 55 00       B   534    				ld (fs_file_length),de			004A4B 79                  B   535    				ld a,c
004A4C 32 31 55 00         B   536    				ld (fs_file_length+3),a			004A50 B7                  B   537    				or a							004A51 28 04               B   538    				jr z,fs_dflsm					004A53 21FFFFFF            B   539    				ld hl,0ffffffh
004A57 22 36 55 00         B   540    fs_dflsm		ld (fs_file_transfer_length),hl
                           B   541    				
004A5B 21000000            B   542    				ld hl,0
004A5F DD6E1A              B   543    				ld l,(ix+01ah)		
004A62 DD661B              B   544    				ld h,(ix+01bh)
004A65 22 39 55 00         B   545    				ld (fs_file_start_cluster),hl	                           B   546    				
004A69 AF                  B   547    				xor a
004A6A C9                  B   548    				ret
                           B   549    
                           B   550    
                           B   551    ;----------------------------------------------
                           B   552    
004A6B                     B   553    fs_read_data_command		
                           B   554    
                           B   555    ;*******************************************
                           B   556    ;*** 'fs_open_file' must be called first ***
                           B   557    ;*******************************************
                           B   558    		
004A6B CD AA 4B 00         B   559    fs_load			call fs_test_transfer_length	004A6F 20 04               B   560    				jr nz,fs_btrok
                           B   561    
004A71 3EC7                B   562    fs_fliz			ld a,0c7h						004A73 B7                  B   563    				or a
004A74 C9                  B   564    				ret
                           B   565    			 
004A75 2A 3F 55 00         B   566    fs_btrok		ld hl,(fs_ez80_address)			Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 199


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
004A79 22 42 55 00         B   567    				ld (fs_ez80_working_address),hl
                           B   568    			
004A7D 2A 2A 55 00         B   569    				ld hl,(fs_file_pointer)			004A81 3A 2D 55 00         B   570    				ld a,(fs_file_pointer+3)		004A85 11010000            B   571    				ld de,1							004A89 19                  B   572    				add hl,de
004A8A CE00                B   573    				adc a,0
004A8C 4F                  B   574    				ld c,a
004A8D EB                  B   575    				ex de,hl						004A8E 2A 2E 55 00         B   576    				ld hl,(fs_file_length)			004A92 3A 31 55 00         B   577    				ld a,(fs_file_length+3)			004A96 B7                  B   578    				or a							004A97 ED52                B   579    				sbc hl,de						004A99 99                  B   580    				sbc a,c
004A9A DA FB 4A 00         B   581    				jp c,fs_rd_eof
                           B   582    					
004A9E 3A 5C 55 00         B   583    fs_fpok			ld a,(fs_filepointer_valid)		004AA2 B7                  B   584    				or a							004AA3 20 46               B   585    				jr nz,fs_get_sector_if_necessar
                           B   586    			
004AA5 3E01                B   587    seek_strt		ld a,1
004AA7 32 5C 55 00         B   588    				ld (fs_filepointer_valid),a
004AAB 2A 39 55 00         B   589    				ld hl,(fs_file_start_cluster)	004AAF 22 3C 55 00         B   590    				ld (fs_file_working_cluster),hl
                           B   591    			
004AB3 3A 2D 55 00         B   592    				ld a,(fs_file_pointer+3)		004AB7 2A 2A 55 00         B   593    				ld hl,(fs_file_pointer)			004ABB ED4B F0 54 00       B   594    fs_fpblp		ld bc,(fs_bytes_per_cluster)
004AC0 AF                  B   595    				xor a
004AC1 ED42                B   596    				sbc hl,bc						004AC3 DE00                B   597    				sbc a,0
004AC5 38 14               B   598    				jr c,fs_fpgbo
004AC7 E5                  B   599    				push hl				
004AC8 2A 3C 55 00         B   600    				ld hl,(fs_file_working_cluster)
004ACC CD F6 52 00         B   601    				call get_fat_entry_for_cluster
004AD0 30 02               B   602    				jr nc,fs_ghok					004AD2 E1                  B   603    				pop hl
004AD3 C9                  B   604    				ret
004AD4 22 3C 55 00         B   605    fs_ghok			ld (fs_file_working_cluster),hl
004AD8 E1                  B   606    				pop hl
004AD9 18 E0               B   607    				jr fs_fpblp
                           B   608    			
004ADB 09                  B   609    fs_fpgbo		add hl,bc						004ADC 7C                  B   610    				ld a,h
004ADD CB3F                B   611    				srl a							004ADF 32 5D 55 00         B   612    				ld (fs_sector_pos_cnt),a
004AE3 7C                  B   613    				ld a,h
004AE4 E601                B   614    				and 01h
004AE6 67                  B   615    				ld h,a
004AE7 22 45 55 00         B   616    				ld (fs_in_sector_offset),hl		                           B   617    
                           B   618    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 200


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
                           B   619    
004AEB                     B   620    fs_get_sector_if_necessary
                           B   621    				
004AEB CD AA 4B 00         B   622    				call fs_test_transfer_length	004AEF 28 64               B   623    				jr z,fs_read_done	
                           B   624    				
004AF1 2A 3C 55 00         B   625    				ld hl,(fs_file_working_cluster)
004AF5 CD 9F 50 00         B   626    				call fs_compare_hl_fff8			004AF9 38 04               B   627    				jr c,fs_rd_noteof		
004AFB 3ECC                B   628    fs_rd_eof		ld a,0cch						004AFD B7                  B   629    				or a
004AFE C9                  B   630    				ret
                           B   631    				
004AFF 2A 3C 55 00         B   632    fs_rd_noteof	ld hl,(fs_file_working_cluster)
004B03 3A 5D 55 00         B   633    				ld a,(fs_sector_pos_cnt)		004B07 CD CD 53 00         B   634    				call cluster_and_offset_to_lba
004B0B CD 93 54 00         B   635    				call fs_is_same_sector_in_buffe
004B0F 28 05               B   636    				jr z,fs_same_sector
004B11 CD 4E 54 00         B   637    				call fs_read_sector				004B15 D8                  B   638    				ret c							                           B   639    			
004B16 21000200            B   640    fs_same_sector	ld hl,512
004B1A ED5B 45 55 00       B   641    				ld de,(fs_in_sector_offset)
004B1F AF                  B   642    				xor a
004B20 ED52                B   643    				sbc hl,de						004B22 E5                  B   644    				push hl
004B23 C1                  B   645    				pop bc							                           B   646    				
004B24 ED5B 36 55 00       B   647    				ld de,(fs_file_transfer_length)
004B29 AF                  B   648    				xor a
004B2A ED52                B   649    				sbc hl,de
004B2C 38 02               B   650    				jr c,fs_got_bc					004B2E D5                  B   651    				push de							004B2F C1                  B   652    				pop bc
                           B   653    
004B30 21 02 67 00         B   654    fs_got_bc		ld hl,sector_buffer
004B34 ED5B 45 55 00       B   655    				ld de,(fs_in_sector_offset)		004B39 19                  B   656    				add hl,de
004B3A ED5B 42 55 00       B   657    				ld de,(fs_ez80_working_address)
004B3F C5                  B   658    				push bc
004B40 EDB0                B   659    				ldir							004B42 ED53 42 55 00       B   660    				ld (fs_ez80_working_address),de
004B47 C1                  B   661    				pop bc
004B48 CD 7E 4B 00         B   662    				call fs_adjust_fp_tl_so
004B4C 2A 45 55 00         B   663    				ld hl,(fs_in_sector_offset)
004B50 7C                  B   664    				ld a,h
004B51 FE02                B   665    				cp 02h							004B53 28 02               B   666    				jr z,fs_new_sec
004B55 AF                  B   667    fs_read_done	xor a
004B56 C9                  B   668    				ret
                           B   669    
004B57 21000000            B   670    fs_new_sec		ld hl,0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 201


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
004B5B 22 45 55 00         B   671    				ld (fs_in_sector_offset),hl		004B5F 21 5D 55 00         B   672    				ld hl,fs_sector_pos_cnt			004B63 34                  B   673    				inc (hl)
004B64 3A EF 54 00         B   674    				ld a,(fs_cluster_size)
004B68 BE                  B   675    				cp (hl)
004B69 20 80               B   676    				jr nz,fs_get_sector_if_necessar
                           B   677    				
004B6B 3600                B   678    				ld (hl),0						004B6D 2A 3C 55 00         B   679    				ld hl,(fs_file_working_cluster)
004B71 CD F6 52 00         B   680    				call get_fat_entry_for_cluster	004B75 D8                  B   681    				ret c							004B76 22 3C 55 00         B   682    				ld (fs_file_working_cluster),hl
004B7A C3 EB 4A 00         B   683    				jr fs_get_sector_if_necessary
                           B   684    
                           B   685    ;----------------------------------------------
                           B   686    
004B7E                     B   687    fs_adjust_fp_tl_so
                           B   688    
                           B   689    ; advance / reduce by BC
                           B   690    
004B7E C5                  B   691    				push bc
004B7F E5                  B   692    				push hl
004B80 2A 2A 55 00         B   693    				ld hl,(fs_file_pointer)			004B84 09                  B   694    				add hl,bc
004B85 22 2A 55 00         B   695    				ld (fs_file_pointer),hl			004B89 3A 2D 55 00         B   696    				ld a,(fs_file_pointer+3)		004B8D CE00                B   697    				adc a,0
004B8F 32 2A 55 00         B   698    				ld (fs_file_pointer),a		
                           B   699    				
004B93 2A 36 55 00         B   700    				ld hl,(fs_file_transfer_length)
004B97 AF                  B   701    				xor a
004B98 ED42                B   702    				sbc hl,bc
004B9A 22 36 55 00         B   703    				ld (fs_file_transfer_length),hl
                           B   704    				
004B9E 2A 45 55 00         B   705    				ld hl,(fs_in_sector_offset)
004BA2 09                  B   706    				add hl,bc
004BA3 22 45 55 00         B   707    				ld (fs_in_sector_offset),hl
                           B   708    				
004BA7 E1                  B   709    				pop hl
004BA8 C1                  B   710    				pop bc
004BA9 C9                  B   711    				ret
                           B   712    				
                           B   713    				
004BAA                     B   714    fs_test_transfer_length
                           B   715    				
004BAA C5                  B   716    				push bc
004BAB E5                  B   717    				push hl
004BAC 21000000            B   718    				ld hl,0
004BB0 ED4B 36 55 00       B   719    				ld bc,(fs_file_transfer_length)
004BB5 AF                  B   720    				xor a
004BB6 ED4A                B   721    				adc hl,bc
004BB8 E1                  B   722    				pop hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 202


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
004BB9 C1                  B   723    				pop bc
004BBA C9                  B   724    				ret
                           B   725    				
                           B   726    ;----------------------------------------------
                           B   727    
004BBB                     B   728    fs_make_dir_command		
                           B   729    				
004BBB CD E6 51 00         B   730    				call fs_find_filename			004BBF D8                  B   731    				ret c
004BC0 FEC2                B   732    				cp 0c2h							004BC2 28 04               B   733    				jr z,mdirfnde
004BC4 3EC9                B   734    				ld a,0c9h						004BC6 B7                  B   735    				or a
004BC7 C9                  B   736    				ret
                           B   737    			
004BC8 CD AC 50 00         B   738    mdirfnde		call fs_find_free_cluster		004BCC D8                  B   739    				ret c							004BCD C0                  B   740    				ret nz							                           B   741    							
004BCE 2A 4C 55 00         B   742    				ld hl,(fs_free_cluster)
004BD2 22 4F 55 00         B   743    				ld (fs_new_file_cluster),hl
                           B   744    			
004BD6 CD FD 50 00         B   745    				call fs_find_free_dir_entry		004BDA D8                  B   746    				ret c							004BDB C0                  B   747    				ret nz							                           B   748    			
004BDC DDE5                B   749    				push ix							004BDE D1                  B   750    				pop de
004BDF 21 06 55 00         B   751    				ld hl,fs_sought_filename
004BE3 010B0000            B   752    				ld bc,11
004BE7 EDB0                B   753    				ldir
004BE9 AF                  B   754    				xor a							004BEA 0615                B   755    				ld b,21
004BEC 12                  B   756    clrdiren		ld (de),a
004BED 13                  B   757    				inc de
004BEE 10 FC               B   758    				djnz clrdiren
004BF0 DD360B10            B   759    				ld (ix+0bh),010h				004BF4 DD361821            B   760    				ld (ix+018h),021h				004BF8 ED5B 4F 55 00       B   761    				ld de,(fs_new_file_cluster)
004BFD DD731A              B   762    				ld (ix+01ah),e					004C00 DD721B              B   763    				ld (ix+01bh),d
004C03 CD 77 54 00         B   764    				call fs_write_sector			004C07 D8                  B   765    				ret c							                           B   766    				
004C08 CD D4 51 00         B   767    				call fs_clear_sector_buffer
004C0C DD21 02 67 00       B   768    				ld ix,sector_buffer				004C11 DD36002E            B   769    				ld (ix+00h),02eh				004C15 DD360120            B   770    				ld (ix+01h),020h
004C19 DD36202E            B   771    				ld (ix+020h),02eh
004C1D DD36212E            B   772    				ld (ix+021h),02eh
004C21 DD360B10            B   773    				ld (ix+0bh),010h
004C25 DD362B10            B   774    				ld (ix+02bh),010h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 203


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
004C29 ED5B 4F 55 00       B   775    				ld de,(fs_new_file_cluster)		004C2E DD731A              B   776    				ld (ix+01ah),e
004C31 DD721B              B   777    				ld (ix+01bh),d
004C34 CD 9B 1A 00         B   778    				call fs_get_dir_cluster			004C38 DD733A              B   779    				ld (ix+03ah),e
004C3B DD723B              B   780    				ld (ix+03bh),d
004C3E DD361821            B   781    				ld (ix+018h),021h				004C42 DD363821            B   782    				ld (ix+038h),021h				004C46 0609                B   783    				ld b,9
004C48 DD360220            B   784    mndelp			ld (ix+002h),32
004C4C DD362220            B   785    				ld (ix+022h),32
004C50 DD23                B   786    				inc ix
004C52 10 F4               B   787    				djnz mndelp
004C54 2A 4F 55 00         B   788    				ld hl,(fs_new_file_cluster)		004C58 AF                  B   789    				xor a
004C59 CD CD 53 00         B   790    				call cluster_and_offset_to_lba
004C5D CD 77 54 00         B   791    				call fs_write_sector
004C61 D8                  B   792    				ret c							                           B   793    			
004C62 CD D4 51 00         B   794    				call fs_clear_sector_buffer		004C66 AF                  B   795    				xor a
004C67 3C                  B   796    wroslp			inc a
004C68 32 48 55 00         B   797    				ld (fs_working_sector),a
004C6C 21 EF 54 00         B   798    				ld hl,fs_cluster_size
004C70 BE                  B   799    				cp (hl)
004C71 28 13               B   800    				jr z,allsclr
004C73 2A 4F 55 00         B   801    				ld hl,(fs_new_file_cluster)
004C77 CD CD 53 00         B   802    				call cluster_and_offset_to_lba
004C7B CD 77 54 00         B   803    				call fs_write_sector
004C7F D8                  B   804    				ret c
004C80 3A 48 55 00         B   805    				ld a,(fs_working_sector)
004C84 18 E1               B   806    				jr wroslp
                           B   807    			
004C86 2A 4F 55 00         B   808    allsclr			ld hl,(fs_new_file_cluster)		004C8A 11FFFF00            B   809    				ld de,0ffffh
004C8E CD 22 53 00         B   810    				call update_fat_entry_for_clust
004C92 AF                  B   811    				xor a
004C93 C9                  B   812    				ret
                           B   813    
                           B   814    
                           B   815    
                           B   816    ;----------------------------------------------
                           B   817    
004C94                     B   818    fs_delete_dir_command
                           B   819    
004C94 CD E6 51 00         B   820    				call fs_find_filename			004C98 D8                  B   821    				ret c
004C99 28 04               B   822    				jr z,ddc_gotd
004C9B 3ED1                B   823    				ld a,0d1h						004C9D B7                  B   824    				or a
004C9E C9                  B   825    				ret
                           B   826    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 204


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
004C9F DDCB0B66            B   827    ddc_gotd		bit 4,(ix+0bh)					004CA3 20 04               B   828    				jr nz,okdeldir
004CA5 3EC4                B   829    				ld a,0c4h						004CA7 B7                  B   830    				or a
004CA8 C9                  B   831    				ret
                           B   832    				
004CA9 DD22 52 55 00       B   833    okdeldir		ld (fs_fname_in_sector_addr),ix
004CAE CD 2C 54 00         B   834    				call backup_sector_lba
004CB2 DD6E1A              B   835    				ld l,(ix+01ah)					004CB5 DD661B              B   836    				ld h,(ix+01bh)
                           B   837    				
004CB8 3A EF 54 00         B   838    fs_ddecl		ld a,(fs_cluster_size)
004CBC 47                  B   839    				ld b,a							004CBD 0E00                B   840    				ld c,0			
004CBF 79                  B   841    fs_cne2 		ld a,c
004CC0 CD CD 53 00         B   842    				call cluster_and_offset_to_lba
004CC4 CD 4E 54 00         B   843    				call fs_read_sector
004CC8 D8                  B   844    				ret c							                           B   845    				
004CC9 C5                  B   846    				push bc
004CCA 0610                B   847    				ld b,16							004CCC DD21 02 67 00       B   848    				ld ix,sector_buffer
004CD1 11200000            B   849    				ld de,020h
004CD5 DD7E00              B   850    fs_cne1			ld a,(ix)
004CD8 B7                  B   851    				or a
004CD9 28 0D               B   852    				jr z,fs_chnde
004CDB FEE5                B   853    				cp 0e5h
004CDD 28 09               B   854    				jr z,fs_chnde
004CDF FE2E                B   855    				cp '.'
004CE1 28 05               B   856    				jr z,fs_chnde
004CE3 C1                  B   857    				pop bc
004CE4 3EC5                B   858    				ld a,0c5h						004CE6 B7                  B   859    				or a
004CE7 C9                  B   860    				ret
                           B   861    			
004CE8 DD19                B   862    fs_chnde		add ix,de
004CEA 10 E9               B   863    				djnz fs_cne1
004CEC C1                  B   864    				pop bc
004CED 0C                  B   865    				inc c
004CEE 10 CF               B   866    				djnz fs_cne2
                           B   867    			
004CF0 CD F6 52 00         B   868    				call get_fat_entry_for_cluster	004CF4 D8                  B   869    				ret c
004CF5 CD 9F 50 00         B   870    				call fs_compare_hl_fff8
004CF9 38 BD               B   871    				jr c,fs_ddecl
                           B   872    			
004CFB CD 41 54 00         B   873    dir_empty		call restore_sector_lba			004CFF CD 4E 54 00         B   874    				call fs_read_sector
004D03 D8                  B   875    				ret c							004D04 2A 52 55 00         B   876    				ld hl,(fs_fname_in_sector_addr)
004D08 36E5                B   877    fs_delco		ld (hl),0e5h					004D0A CD 77 54 00         B   878    				call fs_write_sector
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 205


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
004D0E D8                  B   879    				ret c
                           B   880    			
004D0F E5                  B   881    				push hl
004D10 DDE1                B   882    				pop ix
004D12 DD6E1A              B   883    				ld l,(ix+01ah)
004D15 DD661B              B   884    				ld h,(ix+01bh)
004D18 22 49 55 00         B   885    				ld (fs_working_cluster),hl
004D1C 7C                  B   886    				ld a,h							004D1D B5                  B   887    				or l							004D1E C8                  B   888    				ret z							                           B   889    				
004D1F 2A 49 55 00         B   890    clrfatlp		ld hl,(fs_working_cluster)
004D23 CD F6 52 00         B   891    				call get_fat_entry_for_cluster
004D27 D8                  B   892    				ret c
004D28 EB                  B   893    				ex de,hl
                           B   894    				
004D29 2A 49 55 00         B   895    				ld hl,(fs_working_cluster)
004D2D ED53 49 55 00       B   896    				ld (fs_working_cluster),de
004D32 11000000            B   897    				ld de,0
004D36 CD 22 53 00         B   898    				call update_fat_entry_for_clust
004D3A D8                  B   899    				ret c
                           B   900    				
004D3B CD 9F 50 00         B   901    				call fs_compare_hl_fff8			004D3F 38 DE               B   902    				jr c,clrfatlp
004D41 AF                  B   903    				xor a
004D42 C9                  B   904    				ret
                           B   905    
                           B   906    
                           B   907    ;----------------------------------------------
                           B   908    
004D43                     B   909    fs_create_file_command
                           B   910    
                           B   911    ; Note: As per FAT standard, creating a file (0
                           B   912    ; only a directory entry (FAT is only updated w
                           B   913    
004D43 CD E6 51 00         B   914    				call fs_find_filename			004D47 D8                  B   915    				ret c
004D48 FEC2                B   916    				cp 0c2h							004D4A 28 04               B   917    				jr z,mfilefnde
                           B   918    				
004D4C 3EC9                B   919    				ld a,0c9h						004D4E B7                  B   920    				or a
004D4F C9                  B   921    				ret
                           B   922    			
004D50 CD FD 50 00         B   923    mfilefnde		call fs_find_free_dir_entry		004D54 D8                  B   924    				ret c							004D55 C0                  B   925    				ret nz							                           B   926    			
004D56 DDE5                B   927    				push ix							004D58 D1                  B   928    				pop de
004D59 21 06 55 00         B   929    				ld hl,fs_sought_filename
004D5D 010B0000            B   930    				ld bc,11
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 206


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
004D61 EDB0                B   931    				ldir
004D63 AF                  B   932    				xor a							004D64 0615                B   933    				ld b,21
004D66 12                  B   934    clrfnen			ld (de),a
004D67 13                  B   935    				inc de
004D68 10 FC               B   936    				djnz clrfnen
004D6A DD361821            B   937    				ld (ix+018h),021h				004D6E CD 77 54 00         B   938    				call fs_write_sector			004D72 D8                  B   939    				ret c							004D73 AF                  B   940    				xor a
004D74 C9                  B   941    				ret								                           B   942    
                           B   943    
                           B   944    ;----------------------------------------------
                           B   945    
004D75                     B   946    fs_write_bytes_to_file_command
                           B   947    	
                           B   948    ; *********************************************
                           B   949    ; * set up: fs_file_transfer_length (new data),
                           B   950    ; * before calling                             
                           B   951    ; *********************************************
                           B   952    
                           B   953    				
004D75 ED5B 36 55 00       B   954    				ld de,(fs_file_transfer_length)
004D7A 21000000            B   955    				ld hl,0
004D7E AF                  B   956    				xor a
004D7F ED5A                B   957    				adc hl,de
004D81 CA 71 4A 00         B   958    				jp z,fs_fliz					                           B   959    				 
004D85 CD E6 51 00         B   960    				call fs_find_filename			004D89 D8                  B   961    				ret c							004D8A FEC2                B   962    				cp 0c2h				
004D8C 20 02               B   963    				jr nz,fs_fetwt					004D8E B7                  B   964    				or a
004D8F C9                  B   965    				ret
004D90 DDCB0B66            B   966    fs_fetwt		bit 4,(ix+0bh)					004D94 28 04               B   967    				jr z,fs_oknad					004D96 3EC6                B   968    				ld a,0c6h						004D98 B7                  B   969    				or a
004D99 C9                  B   970    				ret
                           B   971    
004D9A CD 2C 54 00         B   972    fs_oknad		call backup_sector_lba
004D9E DD22 52 55 00       B   973    				ld (fs_fname_in_sector_addr),ix
                           B   974    
004DA3 DD311C              B   975    				ld iy,(ix+01ch)					004DA6 DD7E1F              B   976    				ld a,(ix+01fh)
004DA9 FD22 32 55 00       B   977    				ld (fs_existing_file_length),iy
004DAE 32 32 55 00         B   978    				ld (fs_existing_file_length),a
004DB2 ED5B 36 55 00       B   979    				ld de,(fs_file_transfer_length)
004DB7 FD19                B   980    				add iy,de						004DB9 CE00                B   981    				adc a,0
004DBB DD3E1C              B   982    				ld (ix+01ch),iy					Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 207


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
004DBE DD771F              B   983    				ld (ix+01fh),a					004DC1 30 04               B   984    				jr nc,nfsizeok
004DC3 3EC7                B   985    				ld a,0c7h						004DC5 B7                  B   986    				or a
004DC6 C9                  B   987    				ret
                           B   988    
004DC7 11000000            B   989    nfsizeok		ld de,0
004DCB DD5E1A              B   990    				ld e,(ix+01ah)					004DCE DD561B              B   991    				ld d,(ix+01bh)					004DD1 ED53 3C 55 00       B   992    				ld (fs_file_working_cluster),de
004DD6 CD 77 54 00         B   993    				call fs_write_sector			004DDA D8                  B   994    				ret c
004DDB 7A                  B   995    				ld a,d
004DDC B3                  B   996    				or e
004DDD 20 35               B   997    				jr nz,apenclch	
                           B   998    				
004DDF CD AC 50 00         B   999    				call fs_find_free_cluster		004DE3 D8                  B  1000    				ret c
004DE4 C0                  B  1001    				ret nz
004DE5 2A 4C 55 00         B  1002    				ld hl,(fs_free_cluster)
004DE9 22 3C 55 00         B  1003    				ld (fs_file_working_cluster),hl
004DED 11FFFF00            B  1004    				ld de,0ffffh
004DF1 CD 22 53 00         B  1005    				call update_fat_entry_for_clust
004DF5 D8                  B  1006    				ret c
                           B  1007    			
004DF6 CD 41 54 00         B  1008    				call restore_sector_lba			004DFA CD 4E 54 00         B  1009    				call fs_read_sector
004DFE D8                  B  1010    				ret c
004DFF DD2A 52 55 00       B  1011    				ld ix,(fs_fname_in_sector_addr)
004E04 ED5B 3C 55 00       B  1012    				ld de,(fs_file_working_cluster)
004E09 DD731A              B  1013    				ld (ix+01ah),e
004E0C DD721B              B  1014    				ld (ix+01bh),d
004E0F CD 77 54 00         B  1015    				call fs_write_sector			004E13 D8                  B  1016    				ret c
                           B  1017    				
                           B  1018    					
004E14 2A 3C 55 00         B  1019    apenclch		ld hl,(fs_file_working_cluster)
004E18 CD F6 52 00         B  1020    				call get_fat_entry_for_cluster
004E1C D8                  B  1021    				ret c
004E1D CD 9F 50 00         B  1022    				call fs_compare_hl_fff8
004E21 30 1C               B  1023    				jr nc,atlclif
004E23 22 3C 55 00         B  1024    				ld (fs_file_working_cluster),hl
004E27 01000000            B  1025    				ld bc,0
004E2B 3A EF 54 00         B  1026    				ld a,(fs_cluster_size)
004E2F CB27                B  1027    				sla a
004E31 47                  B  1028    				ld b,a
004E32 2A 32 55 00         B  1029    				ld hl,(fs_existing_file_length)
004E36 AF                  B  1030    				xor a							004E37 ED42                B  1031    				sbc hl,bc						004E39 22 32 55 00         B  1032    				ld (fs_existing_file_length),hl
004E3D 18 D5               B  1033    				jr apenclch
                           B  1034    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 208


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
004E3F ED4B 32 55 00       B  1035    atlclif			ld bc,(fs_existing_file_length)
004E44 CB38                B  1036    				srl b				
004E46 48                  B  1037    				ld c,b							004E47 3A EF 54 00         B  1038    				ld a,(fs_cluster_size)
004E4B 91                  B  1039    				sub c
004E4C 47                  B  1040    				ld b,a							004E4D 28 79               B  1041    				jr z,fs_sfncl					                           B  1042    				
004E4F 2A 3C 55 00         B  1043    				ld hl,(fs_file_working_cluster)
004E53 79                  B  1044    				ld a,c
004E54 CD CD 53 00         B  1045    				call cluster_and_offset_to_lba
004E58 CD 4E 54 00         B  1046    				call fs_read_sector
004E5C D8                  B  1047    				ret c
004E5D C5                  B  1048    				push bc							                           B  1049    				
004E5E 11000000            B  1050    				ld de,0
004E62 3A 32 55 00         B  1051    				ld a,(fs_existing_file_length)
004E66 5F                  B  1052    				ld e,a
004E67 3A 33 55 00         B  1053    				ld a,(fs_existing_file_length+1
004E6B E601                B  1054    				and 1
004E6D 57                  B  1055    				ld d,a							004E6E 21000200            B  1056    				ld hl,512	
004E72 AF                  B  1057    				xor a
004E73 ED52                B  1058    				sbc hl,de						004E75 E5                  B  1059    				push hl
004E76 C1                  B  1060    				pop bc							004E77 21 02 67 00         B  1061    				ld hl,sector_buffer
004E7B 19                  B  1062    				add hl,de
004E7C EB                  B  1063    				ex de,hl						004E7D 7C                  B  1064    				ld a,h			
004E7E B5                  B  1065    				or l
004E7F 20 04               B  1066    				jr nz,fs_dcsb					004E81 CD D4 51 00         B  1067    fs_dbfil		call fs_clear_sector_buffer
004E85 2A 3F 55 00         B  1068    fs_dcsb			ld hl,(fs_ez80_address)			004E89 EDA0                B  1069    fs_cbsb			ldi								004E8B 7C                  B  1070    				ld a,h							004E8C B5                  B  1071    				or l
004E8D 20 0D               B  1072    				jr nz,fs_srcadok
004E8F 22 3F 55 00         B  1073    				ld (fs_ez80_address),hl
004E93 3A 41 55 00         B  1074    				ld a,(fs_ez80_address+2)
004E97 B7                  B  1075    				or a
004E98 CA 07 4F 00         B  1076    				jp z,fs_mem_error
004E9C CD 56 53 00         B  1077    fs_srcadok		call transfer_length_countdown
004EA0 28 54               B  1078    				jr z,fs_lbof					004EA2 78                  B  1079    fs_sadok		ld a,b							004EA3 B1                  B  1080    				or c
004EA4 20 E3               B  1081    				jr nz,fs_cbsb					                           B  1082    
004EA6 22 3F 55 00         B  1083    				ld (fs_ez80_address),hl			004EAA C1                  B  1084    				pop bc							004EAB 79                  B  1085    				ld a,c
004EAC 2A 3C 55 00         B  1086    				ld hl,(fs_file_working_cluster)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 209


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
004EB0 CD CD 53 00         B  1087    				call cluster_and_offset_to_lba
004EB4 CD 77 54 00         B  1088    				call fs_write_sector			004EB8 D8                  B  1089    				ret c							004EB9 0C                  B  1090    				inc c							004EBA 05                  B  1091    				dec b
004EBB 28 0B               B  1092    				jr z,fs_sfncl					004EBD C5                  B  1093    fs_sfns			push bc				
004EBE 01000200            B  1094    				ld bc,512						004EC2 11 02 67 00         B  1095    				ld de,sector_buffer				004EC6 18 B9               B  1096    				jr fs_dbfil						                           B  1097    				
004EC8 CD AC 50 00         B  1098    fs_sfncl		call fs_find_free_cluster		004ECC D8                  B  1099    				ret c							004ECD C0                  B  1100    				ret nz							004ECE 2A 3C 55 00         B  1101    				ld hl,(fs_file_working_cluster)
004ED2 ED5B 4C 55 00       B  1102    				ld de,(fs_free_cluster)
004ED7 CD 22 53 00         B  1103    				call update_fat_entry_for_clust
004EDB D8                  B  1104    				ret c
004EDC 2A 4C 55 00         B  1105    				ld hl,(fs_free_cluster)
004EE0 22 3C 55 00         B  1106    				ld (fs_file_working_cluster),hl
004EE4 11FFFF00            B  1107    				ld de,0ffffh
004EE8 CD 22 53 00         B  1108    				call update_fat_entry_for_clust
004EEC D8                  B  1109    				ret c
004EED 3A EF 54 00         B  1110    				ld a,(fs_cluster_size)
004EF1 47                  B  1111    				ld b,a							004EF2 0E00                B  1112    				ld c,0							004EF4 18 C7               B  1113    				jr fs_sfns						                           B  1114    				
004EF6 C1                  B  1115    fs_lbof			pop bc
004EF7 79                  B  1116    				ld a,c							004EF8 2A 3C 55 00         B  1117    				ld hl,(fs_file_working_cluster)
004EFC CD CD 53 00         B  1118    				call cluster_and_offset_to_lba
004F00 CD 77 54 00         B  1119    				call fs_write_sector	
004F04 D8                  B  1120    				ret c
004F05 AF                  B  1121    				xor a							004F06 C9                  B  1122    				ret
                           B  1123    
                           B  1124    
004F07 3EC8                B  1125    fs_mem_error	ld a,0c8h						004F09 C1                  B  1126    fs_flerr		pop bc
004F0A B7                  B  1127    				or a							004F0B C9                  B  1128    				ret			
                           B  1129    
                           B  1130    ;----------------------------------------------
                           B  1131    
004F0C                     B  1132    fs_erase_file_command
                           B  1133    
                           B  1134    
004F0C CD E6 51 00         B  1135    				call fs_find_filename			004F10 D8                  B  1136    				ret c
004F11 C0                  B  1137    				ret nz
                           B  1138    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 210


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
004F12 DDCB0B66            B  1139    				bit 4,(ix+0bh)					004F16 28 04               B  1140    				jr z,okdelf
004F18 3EC6                B  1141    				ld a,0c6h						004F1A B7                  B  1142    				or a
004F1B C9                  B  1143    				ret
                           B  1144    				
004F1C DDE5                B  1145    okdelf			push ix
004F1E E1                  B  1146    				pop hl
004F1F C3 08 4D 00         B  1147    				jp fs_delco						                           B  1148    					
                           B  1149    
                           B  1150    ;----------------------------------------------
                           B  1151    
                           B  1152    
004F23                     B  1153    fs_rename_command
                           B  1154    
004F23 CD E6 51 00         B  1155    				call fs_find_filename			004F27 D8                  B  1156    				ret c							004F28 FEC2                B  1157    				cp 0c2h							004F2A 28 04               B  1158    				jr z,fs_nfnok					004F2C 3EC9                B  1159    				ld a,0c9h						004F2E B7                  B  1160    				or a
004F2F C9                  B  1161    				ret
                           B  1162    			
004F30 21 06 55 00         B  1163    fs_nfnok		ld hl,fs_sought_filename		004F34 11 1E 55 00         B  1164    				ld de,fs_filename_buffer
004F38 010B0000            B  1165    				ld bc,11
004F3C EDB0                B  1166    				ldir
004F3E 21 12 55 00         B  1167    				ld hl,fs_alt_filename			004F42 11 06 55 00         B  1168    				ld de,fs_sought_filename
004F46 010B0000            B  1169    				ld bc,11
004F4A EDB0                B  1170    				ldir
004F4C CD E6 51 00         B  1171    				call fs_find_filename			004F50 D8                  B  1172    				ret c
004F51 FEC2                B  1173    				cp 0c2h
004F53 C8                  B  1174    				ret z							                           B  1175    				
004F54 DDE5                B  1176    				push ix
004F56 D1                  B  1177    				pop de
004F57 21 1E 55 00         B  1178    				ld hl,fs_filename_buffer	 	004F5B 010B0000            B  1179    				ld bc,11
004F5F EDB0                B  1180    				ldir							004F61 CD 77 54 00         B  1181    				call fs_write_sector			                           B  1182    				
004F65 AF                  B  1183    fs_rndone		xor a
004F66 C9                  B  1184    				ret
                           B  1185    				
                           B  1186    
                           B  1187    ;----------------------------------------------
                           B  1188    
                           B  1189    
004F67                     B  1190    fs_goto_first_dir_entry
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 211


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
                           B  1191    
004F67 CD 9B 1A 00         B  1192    				call fs_get_dir_cluster
004F6B ED53 55 55 00       B  1193    				ld (fs_dir_entry_cluster),de
004F70 AF                  B  1194    				xor a
004F71 32 5B 55 00         B  1195    				ld (fs_dir_entry_sector),a		004F75 11000000            B  1196    				ld de,0
004F79 ED53 58 55 00       B  1197    				ld (fs_dir_entry_line_offset),d
                           B  1198    				
                           B  1199    
                           B  1200    
004F7E                     B  1201    fs_get_dir_entry
                           B  1202    
                           B  1203    ; No input parameters.
                           B  1204    ;
                           B  1205    ; Returns HL    = Location of null terminated f
                           B  1206    ;         IX:IY = Length of file (if applicable
                           B  1207    ;         B     = File flag (1 = directory, 0 =
                           B  1208    ;         A     = Error code
                           B  1209    ;         Carry = Set if hardware error encount
                           B  1210    
                           B  1211    
004F7E 3A 5B 55 00         B  1212    				ld a,(fs_dir_entry_sector)		004F82 4F                  B  1213    				ld c,a
004F83 2A 55 55 00         B  1214    				ld hl,(fs_dir_entry_cluster)	004F87 CD CD 53 00         B  1215    				call cluster_and_offset_to_lba
                           B  1216    			
004F8B 7C                  B  1217    				ld a,h							004F8C B5                  B  1218    				or l							004F8D 20 09               B  1219    				jr nz,nr_read					004F8F 2A F9 54 00         B  1220    				ld hl,(fs_root_dir_position)	004F93 79                  B  1221    				ld a,c
004F94 CD 13 54 00         B  1222    				call set_absolute_lba
                           B  1223    				
004F98 CD 4E 54 00         B  1224    nr_read			call fs_read_sector				004F9C D8                  B  1225    				ret c							                           B  1226    				
004F9D ED5B 58 55 00       B  1227    				ld de,(fs_dir_entry_line_offset
004FA2 DD21 02 67 00       B  1228    dscan_int_loop	ld ix,sector_buffer
004FA7 DD19                B  1229    				add ix,de
004FA9 DD7E00              B  1230    ds_int_loop		ld a,(ix)
004FAC B7                  B  1231    				or a							004FAD 28 0E               B  1232    				jr z,fs_dir_entry_free		
004FAF FEE5                B  1233    				cp 0e5h							004FB1 28 0A               B  1234    				jr z,fs_dir_entry_free	
004FB3 FE05                B  1235    				cp 05h							004FB5 28 06               B  1236    				jr z,fs_dir_entry_free	
004FB7 DDCB0B5E            B  1237    				bit 3,(ix+0bh)					004FBB 28 0D               B  1238    				jr z,fs_dir_entry_in_use		                           B  1239    
004FBD                     B  1240    fs_dir_entry_free
                           B  1241    
004FBD EB                  B  1242    				ex de,hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 212


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
004FBE 11200000            B  1243    				ld de,32
004FC2 19                  B  1244    				add hl,de
004FC3 EB                  B  1245    				ex de,hl
004FC4 CB4A                B  1246    				bit 1,d
004FC6 28 DA               B  1247    				jr z,dscan_int_loop
004FC8 18 54               B  1248    				jr dscan_new_sect
                           B  1249    
004FCA                     B  1250    fs_dir_entry_in_use
                           B  1251    				
004FCA ED53 58 55 00       B  1252    				ld (fs_dir_entry_line_offset),d
004FCF DDE5                B  1253    				push ix
004FD1 E1                  B  1254    				pop hl
004FD2 CD 66 10 00         B  1255    				call os_clear_output_line
004FD6 0608                B  1256    				ld b,8							004FD8 11 22 62 00         B  1257    				ld de,output_line
004FDC 7E                  B  1258    dcopyn			ld a,(hl)
004FDD FE20                B  1259    				cp ' '							004FDF 28 02               B  1260    				jr z,digchar
004FE1 12                  B  1261    				ld (de),a
004FE2 13                  B  1262    				inc de
004FE3 23                  B  1263    digchar			inc hl
004FE4 10 F6               B  1264    				djnz dcopyn
004FE6 7E                  B  1265    				ld a,(hl)						004FE7 FE20                B  1266    				cp ' '							004FE9 28 0A               B  1267    				jr z,dirnoex
004FEB 3E2E                B  1268    				ld a,'.'						004FED 12                  B  1269    				ld (de),a
004FEE 13                  B  1270    				inc de	
004FEF 01030000            B  1271    				ld bc,3							004FF3 EDB0                B  1272    				ldir
004FF5 AF                  B  1273    dirnoex			xor a 
004FF6 12                  B  1274    				ld (de),a						                           B  1275    				
004FF7 47                  B  1276    				ld b,a
004FF8 DDCB0B66            B  1277    				bit 4,(ix+0bh)					004FFC 28 01               B  1278    				jr z,fs_fniaf		
004FFE 04                  B  1279    				inc b							004FFF DD171C              B  1280    fs_fniaf		ld de,(ix+01ch)					005002 DD4E1F              B  1281    				ld c,(ix+01fh)
005005 21 22 62 00         B  1282    				ld hl,output_line				005009 AF                  B  1283    				xor a
00500A C9                  B  1284    				ret
                           B  1285    
                           B  1286    
                           B  1287    
                           B  1288    
00500B                     B  1289    fs_goto_next_dir_entry
                           B  1290    
00500B 11200000            B  1291    				ld de,32
00500F 2A 58 55 00         B  1292    				ld hl,(fs_dir_entry_line_offset
005013 19                  B  1293    				add hl,de
005014 22 58 55 00         B  1294    				ld (fs_dir_entry_line_offset),h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 213


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
005018 CB4C                B  1295    				bit 1,h
00501A CA 7E 4F 00         B  1296    				jp z,fs_get_dir_entry
                           B  1297    
00501E 21000000            B  1298    dscan_new_sect	ld hl,0				
005022 22 58 55 00         B  1299    				ld (fs_dir_entry_line_offset),h
                           B  1300    			
005026 21 5B 55 00         B  1301    				ld hl,fs_dir_entry_sector
00502A 34                  B  1302    				inc (hl)						                           B  1303    			
00502B ED5B 55 55 00       B  1304    				ld de,(fs_dir_entry_cluster)
005030 7A                  B  1305    				ld a,d
005031 B3                  B  1306    				or e							005032 20 0B               B  1307    				jr nz,nonroot2
005034 3A FF 54 00         B  1308    				ld a,(fs_root_dir_sectors)
005038 BE                  B  1309    				cp (hl)
005039 28 23               B  1310    				jr z,endofdir			
00503B C3 7E 4F 00         B  1311    				jp fs_get_dir_entry
                           B  1312    												00503F 3A EF 54 00         B  1313    nonroot2		ld a,(fs_cluster_size)		
005043 BE                  B  1314    				cp (hl)							005044 C2 7E 4F 00         B  1315    				jp nz,fs_get_dir_entry
005048 3600                B  1316    				ld (hl),0						00504A 2A 55 55 00         B  1317    				ld hl,(fs_dir_entry_cluster)
00504E CD F6 52 00         B  1318    				call get_fat_entry_for_cluster
005052 22 55 55 00         B  1319    				ld (fs_dir_entry_cluster),hl
005056 CD 9F 50 00         B  1320    				call fs_compare_hl_fff8			00505A DA 7E 4F 00         B  1321    				jp c,fs_get_dir_entry
                           B  1322    	
00505E 3ED2                B  1323    endofdir		ld a,0d2h
005060 B7                  B  1324    				or a							005061 C9                  B  1325    				ret	
                           B  1326    				
                           B  1327    ;----------------------------------------------
                           B  1328    
005062                     B  1329    fs_get_volume_label
                           B  1330    
                           B  1331    
                           B  1332    ; On return HL = volume label
                           B  1333    
                           B  1334    
005062 2A F9 54 00         B  1335    				ld hl,(fs_root_dir_position)
005066 0E00                B  1336    				ld c,0
005068 AF                  B  1337    gvl_nrsec		xor a
005069 CD 24 54 00         B  1338    				call set_abs_lba_and_read_secto
00506D D8                  B  1339    				ret c
00506E 0610                B  1340    				ld b,16							005070 DD21 02 67 00       B  1341    				ld ix,sector_buffer
005075 DD7E0B              B  1342    find_vl			ld a,(ix+0bh)
005078 FE08                B  1343    				cp 08h
00507A 28 1A               B  1344    				jr z,got_label
00507C ED3220              B  1345    				lea ix,ix+32					00507F 10 F4               B  1346    				djnz find_vl					Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 214


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
005081 23                  B  1347    				inc hl
005082 0C                  B  1348    				inc c
005083 3A FF 54 00         B  1349    				ld a,(fs_root_dir_sectors)		005087 B9                  B  1350    				cp c							005088 20 DE               B  1351    				jr nz,gvl_nrsec
                           B  1352    			
00508A CD 41 49 00         B  1353    				call fs_read_partition_bootsect
00508E D8                  B  1354    				ret c
00508F B7                  B  1355    				or a
005090 C0                  B  1356    				ret nz
005091 DD21 2D 67 00       B  1357    				ld ix,sector_buffer+02bh
                           B  1358    				
005096 DD360B00            B  1359    got_label		ld (ix+0bh),0					00509A DDE5                B  1360    				push ix
00509C E1                  B  1361    				pop hl
00509D AF                  B  1362    				xor a
00509E C9                  B  1363    				ret
                           B  1364    				
                           B  1365    				
                           B  1366    ;----------------------------------------------
                           B  1367    ; Internal subroutines
                           B  1368    ;----------------------------------------------
                           B  1369    
00509F                     B  1370    fs_compare_hl_fff8
                           B  1371    
                           B  1372    ;INPUT HL = value to compare with fff8
                           B  1373    ;OUTPUT CARRY set if < $fff8, ZERO FLAG set if 
                           B  1374    	
                           B  1375    	
00509F E5                  B  1376    				push hl
0050A0 D5                  B  1377    				push de
0050A1 11F8FF00            B  1378    				ld de,0fff8h			
0050A5 B7                  B  1379    				or a							0050A6 52ED52              B  1380    				sbc.s hl,de						0050A9 D1                  B  1381    				pop de
0050AA E1                  B  1382    				pop hl
0050AB C9                  B  1383    				ret
                           B  1384    
                           B  1385    ;----------------------------------------------
                           B  1386    
                           B  1387    
0050AC                     B  1388    fs_find_free_cluster
                           B  1389    	
0050AC DD210000 00         B  1390    				ld ix,0							0050B1 ED5B F3 54 00       B  1391    				ld de,(fs_fat1_position)		0050B6 AF                  B  1392    				xor a				
0050B7 32 48 55 00         B  1393    fs_ffcl2		ld (fs_working_sector),a	
0050BB D5                  B  1394    				push de
0050BC E1                  B  1395    				pop hl
0050BD 3A 48 55 00         B  1396    				ld a,(fs_working_sector)
0050C1 CD 24 54 00         B  1397    				call set_abs_lba_and_read_secto
0050C5 D8                  B  1398    				ret c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 215


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
0050C6 21 02 67 00         B  1399    				ld hl,sector_buffer
0050CA 0600                B  1400    				ld b,0
0050CC 7E                  B  1401    fs_ffcl1		ld a,(hl)						0050CD 23                  B  1402    				inc hl
0050CE B6                  B  1403    				or (hl)
0050CF 23                  B  1404    				inc hl
0050D0 28 14               B  1405    				jr z,fs_gotfc
0050D2 DD23                B  1406    				inc ix
0050D4 10 F6               B  1407    				djnz fs_ffcl1
                           B  1408    				
0050D6 2A 00 55 00         B  1409    				ld hl,(fs_sectors_per_fat)
0050DA 3A 48 55 00         B  1410    				ld a,(fs_working_sector)		0050DE 3C                  B  1411    				inc a				
0050DF BD                  B  1412    				cp l		
0050E0 20 D5               B  1413    				jr nz,fs_ffcl2					0050E2 3EC1                B  1414    fs_dfull		ld a,c1h						0050E4 B7                  B  1415    				or a							0050E5 C9                  B  1416    				ret
                           B  1417    			
0050E6 DDE5                B  1418    fs_gotfc		push ix							0050E8 E1                  B  1419    				pop hl							0050E9 2B                  B  1420    				dec hl							0050EA 2B                  B  1421    				dec hl							0050EB ED5B 03 55 00       B  1422    				ld de,(fs_max_data_clusters)
0050F0 AF                  B  1423    				xor a
0050F1 52ED52              B  1424    				sbc.s hl,de						0050F4 30 EC               B  1425    				jr nc,fs_dfull
                           B  1426    			
0050F6 DD22 4C 55 00       B  1427    				ld (fs_free_cluster),ix
0050FB AF                  B  1428    				xor a
0050FC C9                  B  1429    				ret
                           B  1430    	
                           B  1431    	
                           B  1432    ;----------------------------------------------
                           B  1433    	
                           B  1434    	
0050FD                     B  1435    fs_find_free_dir_entry
                           B  1436    
                           B  1437    
                           B  1438    ; OUTPUT IX start of 32 byte dir entry in secto
                           B  1439    
                           B  1440    			
0050FD CD 9B 1A 00         B  1441    				call fs_get_dir_cluster			005101 EB                  B  1442    				ex de,hl
005102 22 3C 55 00         B  1443    ffenxtclu		ld (fs_file_working_cluster),hl
005106 AF                  B  1444    				xor a
005107 32 48 55 00         B  1445    				ld (fs_working_sector),a
                           B  1446    			
00510B 2A F9 54 00         B  1447    ffenxtsec		ld hl,(fs_root_dir_position)	00510F 3A 48 55 00         B  1448    				ld a,(fs_working_sector)
005113 CD 13 54 00         B  1449    				call set_absolute_lba
                           B  1450    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 216


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
005117 CD 9B 1A 00         B  1451    				call fs_get_dir_cluster			00511B 7A                  B  1452    				ld a,d
00511C B3                  B  1453    				or e
00511D 28 0C               B  1454    				jr z,at_rootd
00511F 2A 3C 55 00         B  1455    				ld hl,(fs_file_working_cluster)
005123 3A 48 55 00         B  1456    				ld a,(fs_working_sector)
005127 CD CD 53 00         B  1457    				call cluster_and_offset_to_lba
                           B  1458    				
00512B CD 4E 54 00         B  1459    at_rootd		call fs_read_sector
00512F D8                  B  1460    				ret c
005130 0610                B  1461    				ld b,16							005132 11200000            B  1462    				ld de,32
005136 DD21 02 67 00       B  1463    				ld ix,sector_buffer
00513B DD7E00              B  1464    scdirfe			ld a,(ix)						00513E B7                  B  1465    				or a
00513F 28 65               B  1466    				jr z,got_fde
005141 FEE5                B  1467    				cp 0e5h
005143 28 61               B  1468    				jr z,got_fde
005145 DD19                B  1469    				add ix,de						005147 10 F2               B  1470    				djnz scdirfe					                           B  1471    				
005149 21 48 55 00         B  1472    				ld hl,fs_working_sector			00514D 34                  B  1473    				inc (hl)
                           B  1474    				
00514E CD 9B 1A 00         B  1475    				call fs_get_dir_cluster			005152 7A                  B  1476    				ld a,d
005153 B3                  B  1477    				or e
005154 20 0B               B  1478    				jr nz,ffenotroo
005156 3A FF 54 00         B  1479    				ld a,(fs_root_dir_sectors)		00515A BE                  B  1480    				cp (hl)							00515B 20 AE               B  1481    				jr nz,ffenxtsec
00515D 3EC3                B  1482    fenotfnd		ld a,0c3h						00515F B7                  B  1483    				or a
005160 C9                  B  1484    				ret
                           B  1485    			
005161 3A EF 54 00         B  1486    ffenotroo		ld a,(fs_cluster_size)			005165 BE                  B  1487    				cp (hl)
005166 20 A3               B  1488    				jr nz,ffenxtsec
005168 2A 3C 55 00         B  1489    				ld hl,(fs_file_working_cluster)
00516C CD F6 52 00         B  1490    				call get_fat_entry_for_cluster	005170 D8                  B  1491    				ret c
005171 CD 9F 50 00         B  1492    				call fs_compare_hl_fff8			005175 38 8B               B  1493    				jr c,ffenxtclu
                           B  1494    			
005177 CD AC 50 00         B  1495    				call fs_find_free_cluster		00517B D8                  B  1496    				ret c							00517C C0                  B  1497    				ret nz							00517D ED5B 4C 55 00       B  1498    				ld de,(fs_free_cluster)
005182 2A 3C 55 00         B  1499    				ld hl,(fs_file_working_cluster)
005186 CD 22 53 00         B  1500    				call update_fat_entry_for_clust
00518A D8                  B  1501    				ret c
00518B EB                  B  1502    				ex de,hl						Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 217


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
00518C 11FFFF00            B  1503    				ld de,0ffffh
005190 CD 22 53 00         B  1504    				call update_fat_entry_for_clust
005194 D8                  B  1505    				ret c
                           B  1506    			
005195 2A 4C 55 00         B  1507    				ld hl,(fs_free_cluster)			005199 CD A8 51 00         B  1508    				call fs_clear_cluster			00519D D8                  B  1509    				ret c
00519E 2A 4C 55 00         B  1510    				ld hl,(fs_free_cluster)			0051A2 C3 02 51 00         B  1511    				jp ffenxtclu					                           B  1512    			
0051A6 AF                  B  1513    got_fde			xor a
0051A7 C9                  B  1514    				ret
                           B  1515    					
                           B  1516    
                           B  1517    ;----------------------------------------------
                           B  1518    
0051A8                     B  1519    fs_clear_cluster
                           B  1520    
                           B  1521    ;INPUT HL = cluster to clear
                           B  1522    
0051A8 22 49 55 00         B  1523    				ld (fs_working_cluster),hl
                           B  1524    			
0051AC CD D4 51 00         B  1525    				call fs_clear_sector_buffer
                           B  1526    					
0051B0 AF                  B  1527    				xor a				
0051B1 32 48 55 00         B  1528    				ld (fs_working_sector),a		0051B5 3A 48 55 00         B  1529    wipeclulp		ld a,(fs_working_sector)		0051B9 2A 49 55 00         B  1530    				ld hl,(fs_working_cluster)		0051BD CD CD 53 00         B  1531    				call cluster_and_offset_to_lba	0051C1 CD 77 54 00         B  1532    				call fs_write_sector
0051C5 D8                  B  1533    				ret c
0051C6 21 48 55 00         B  1534    				ld hl,fs_working_sector
0051CA 34                  B  1535    				inc (hl)
0051CB 3A EF 54 00         B  1536    				ld a,(fs_cluster_size)
0051CF BE                  B  1537    				cp (hl)
0051D0 20 E3               B  1538    				jr nz,wipeclulp
0051D2 AF                  B  1539    				xor a
0051D3 C9                  B  1540    				ret
                           B  1541    			
                           B  1542    			
0051D4                     B  1543    fs_clear_sector_buffer
                           B  1544    			
0051D4 E5                  B  1545    				push hl
0051D5 C5                  B  1546    				push bc
0051D6 21 02 67 00         B  1547    				ld hl,sector_buffer			
0051DA 01000200            B  1548    				ld bc,512				
0051DE AF                  B  1549    				xor a				
0051DF CD BD 15 00         B  1550    				call os_bchl_memfill	
0051E3 C1                  B  1551    				pop bc
0051E4 E1                  B  1552    				pop hl
0051E5 C9                  B  1553    				ret
                           B  1554    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 218


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
                           B  1555    
                           B  1556    	
                           B  1557    ;----------------------------------------------
                           B  1558    	
0051E6                     B  1559    fs_find_filename
                           B  1560    
0051E6 AF                  B  1561    				xor a
                           B  1562    
0051E7                     B  1563    fs_search	
                           B  1564    				
0051E7 32 63 55 00         B  1565    				ld (fs_search_type),a
                           B  1566    			
                           B  1567    ; OUTPUT IX start of 32 byte dir entry
                           B  1568    			
0051EB CD 9B 1A 00         B  1569    				call fs_get_dir_cluster
0051EF ED53 3C 55 00       B  1570    ffnnxtclu		ld (fs_file_working_cluster),de
0051F4 AF                  B  1571    				xor a
0051F5 32 48 55 00         B  1572    				ld (fs_working_sector),a
                           B  1573    			
0051F9 2A F9 54 00         B  1574    ffnnxtsec		ld hl,(fs_root_dir_position)	0051FD 3A 48 55 00         B  1575    				ld a,(fs_working_sector)
005201 CD 13 54 00         B  1576    				call set_absolute_lba
                           B  1577    				
005205 CD 9B 1A 00         B  1578    				call fs_get_dir_cluster			005209 7A                  B  1579    				ld a,d
00520A B3                  B  1580    				or e
00520B 28 0C               B  1581    				jr z,at_rootd2
00520D 2A 3C 55 00         B  1582    				ld hl,(fs_file_working_cluster)
005211 3A 48 55 00         B  1583    				ld a,(fs_working_sector)
005215 CD CD 53 00         B  1584    				call cluster_and_offset_to_lba	                           B  1585    				
005219 CD 4E 54 00         B  1586    at_rootd2		call fs_read_sector
00521D D8                  B  1587    				ret c
00521E 0E10                B  1588    				ld c,16							005220 DD21 02 67 00       B  1589    				ld ix,sector_buffer
005225 DDE5                B  1590    ndirentr		push ix
005227 D1                  B  1591    				pop de
005228 3A 63 55 00         B  1592    				ld a,(fs_search_type)
00522C B7                  B  1593    				or a
00522D 28 1E               B  1594    				jr z,fs_ststr
                           B  1595    			
00522F DD7E00              B  1596    				ld a,(ix)						005232 FE80                B  1597    				cp 080h							005234 30 35               B  1598    				jr nc,fnnotsame
005236 FE20                B  1599    				cp 020h
005238 38 31               B  1600    				jr c,fnnotsame
00523A ED5B 60 55 00       B  1601    				ld de,(fs_stash_dir_block)		00523F DD7E1A              B  1602    				ld a,(ix+01ah)
005242 BB                  B  1603    				cp e
005243 20 26               B  1604    				jr nz,fnnotsame
005245 DD7E1B              B  1605    				ld a,(ix+01bh)
005248 BA                  B  1606    				cp d
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 219


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
005249 28 1E               B  1607    				jr z,fs_found
00524B 18 1E               B  1608    				jr fnnotsame
                           B  1609    				
00524D FD21 06 55 00       B  1610    fs_ststr		ld iy,fs_sought_filename		005252 060B                B  1611    				ld b,11							005254 1A                  B  1612    cmpfnlp			ld a,(de)						005255 CD 5A 12 00         B  1613    				call os_uppercasify				005259 6F                  B  1614    				ld l,a
00525A FD7E00              B  1615    				ld a,(iy)
00525D CD 5A 12 00         B  1616    				call os_uppercasify
005261 BD                  B  1617    				cp l				
005262 20 07               B  1618    				jr nz,fnnotsame
005264 FD23                B  1619    				inc iy
005266 13                  B  1620    				inc de
005267 10 EB               B  1621    				djnz cmpfnlp
005269 AF                  B  1622    fs_found		xor a							00526A C9                  B  1623    				ret
                           B  1624    			
00526B 11200000            B  1625    fnnotsame		ld de,32						00526F DD19                B  1626    				add ix,de
005271 0D                  B  1627    				dec c
005272 20 B1               B  1628    				jr nz,ndirentr					                           B  1629    				
005274 21 48 55 00         B  1630    				ld hl,fs_working_sector			005278 34                  B  1631    				inc (hl)
                           B  1632    				
005279 CD 9B 1A 00         B  1633    				call fs_get_dir_cluster			00527D 7A                  B  1634    				ld a,d
00527E B3                  B  1635    				or e
00527F 20 0D               B  1636    				jr nz,notrootdir
005281 3A FF 54 00         B  1637    				ld a,(fs_root_dir_sectors)		005285 BE                  B  1638    				cp (hl)							005286 C2 F9 51 00         B  1639    				jp nz,ffnnxtsec
00528A 3EC2                B  1640    fnnotfnd		ld a,0c2h						00528C B7                  B  1641    				or a
00528D C9                  B  1642    				ret
                           B  1643    			
00528E                     B  1644    notrootdir
                           B  1645    				
00528E 3A EF 54 00         B  1646    				ld a,(fs_cluster_size)			005292 BE                  B  1647    				cp (hl)
005293 C2 F9 51 00         B  1648    				jp nz,ffnnxtsec
                           B  1649    				
005297 2A 3C 55 00         B  1650    				ld hl,(fs_file_working_cluster)
00529B CD F6 52 00         B  1651    				call get_fat_entry_for_cluster
00529F D8                  B  1652    				ret c
0052A0 CD 9F 50 00         B  1653    				call fs_compare_hl_fff8			0052A4 30 E4               B  1654    				jr nc,fnnotfnd					0052A6 EB                  B  1655    				ex de,hl						0052A7 C3 EF 51 00         B  1656    				jp ffnnxtclu					                           B  1657    				
                           B  1658    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 220


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
                           B  1659    ;----------------------------------------------
                           B  1660    
0052AB                     B  1661    fs_hl_to_alt_filename
                           B  1662    
0052AB 11 12 55 00         B  1663    				ld de,fs_alt_filename
0052AF 18 04               B  1664    				jr hltofngo
                           B  1665    
                           B  1666    
0052B1                     B  1667    fs_hl_to_filename
                           B  1668    
                           B  1669    ;INPUT: HL = address of filename (null / space 
                           B  1670    ;OUTPUT HL = address of first character after f
                           B  1671    ;        C = number of characters in filename
                           B  1672    
0052B1 11 06 55 00         B  1673    				ld de,fs_sought_filename
0052B5 CD C0 53 00         B  1674    hltofngo		call fs_clear_filename			0052B9 D5                  B  1675    				push de			
0052BA DDE1                B  1676    				pop ix							                           B  1677    				
0052BC 0E00                B  1678    				ld c,0
0052BE 0608                B  1679    				ld b,8
0052C0 7E                  B  1680    csfnlp2			ld a,(hl)						0052C1 B7                  B  1681    				or a
0052C2 C8                  B  1682    				ret z							0052C3 FE20                B  1683    				cp 32
0052C5 C8                  B  1684    				ret z							0052C6 FE2F                B  1685    				cp 02fh
0052C8 C8                  B  1686    				ret z							0052C9 FE2E                B  1687    				cp '.'
0052CB 28 16               B  1688    				jr z,dofn_ext					0052CD 12                  B  1689    				ld (de),a
0052CE 13                  B  1690    				inc de
0052CF 23                  B  1691    				inc hl
0052D0 0C                  B  1692    				inc c							0052D1 10 ED               B  1693    				djnz csfnlp2					0052D3 7E                  B  1694    find_ext		ld a,(hl)
0052D4 FE2E                B  1695    				cp '.'							0052D6 28 0B               B  1696    				jr z,dofn_ext	
0052D8 FE20                B  1697    				cp ' '							0052DA C8                  B  1698    				ret z
0052DB FE2F                B  1699    				cp 02fh
0052DD C8                  B  1700    				ret z
0052DE B7                  B  1701    				or a
0052DF C8                  B  1702    				ret z
0052E0 23                  B  1703    				inc hl
0052E1 18 F0               B  1704    				jr find_ext
                           B  1705    				
0052E3 23                  B  1706    dofn_ext		inc hl							0052E4 0603                B  1707    				ld b,3				
0052E6 7E                  B  1708    fnextlp			ld a,(hl)						0052E7 B7                  B  1709    				or a
0052E8 C8                  B  1710    				ret z							Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 221


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
0052E9 FE20                B  1711    				cp 32
0052EB C8                  B  1712    				ret z
0052EC DD7708              B  1713    				ld (ix+8),a
0052EF DD23                B  1714    				inc ix
0052F1 23                  B  1715    				inc hl
0052F2 0C                  B  1716    				inc c
0052F3 10 F1               B  1717    				djnz fnextlp
0052F5 C9                  B  1718    				ret
                           B  1719    				
                           B  1720    ;----------------------------------------------
                           B  1721    
                           B  1722    
0052F6                     B  1723    get_fat_entry_for_cluster
                           B  1724    
                           B  1725    ; INPUT: HL = cluster in question, OUTPUT: HL =
                           B  1726    
0052F6 C5                  B  1727    				push bc
0052F7 D5                  B  1728    				push de
0052F8 01000000            B  1729    				ld bc,0
0052FC 4D                  B  1730    				ld c,l
0052FD 7C                  B  1731    				ld a,h
0052FE 2A F3 54 00         B  1732    				ld hl,(fs_fat1_position)
005302 CD 24 54 00         B  1733    				call set_abs_lba_and_read_secto
005306 38 17               B  1734    				jr c,hwerr
005308 DDE5                B  1735    				push ix
00530A DD21 02 67 00       B  1736    				ld ix,sector_buffer
00530F DD09                B  1737    				add ix,bc
005311 DD09                B  1738    				add ix,bc
005313 21000000            B  1739    				ld hl,0
005317 DD6E00              B  1740    				ld l,(ix)
00531A DD6601              B  1741    				ld h,(ix+1)
00531D DDE1                B  1742    				pop ix
00531F D1                  B  1743    hwerr			pop de
005320 C1                  B  1744    				pop bc
005321 C9                  B  1745    				ret
                           B  1746    
                           B  1747    
                           B  1748    ;----------------------------------------------
                           B  1749    
                           B  1750    
005322                     B  1751    update_fat_entry_for_cluster
                           B  1752    
                           B  1753    ; INPUT: HL = cluster in question
                           B  1754    ;        DE = new value to put in FAT tables
                           B  1755    			
005322 C5                  B  1756    				push bc
005323 E5                  B  1757    				push hl
005324 01000000            B  1758    				ld bc,0
005328 4D                  B  1759    				ld c,l
005329 7C                  B  1760    				ld a,h
00532A 2A F3 54 00         B  1761    				ld hl,(fs_fat1_position)		00532E CD 42 53 00         B  1762    				call fat_upd
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 222


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
005332 38 0B               B  1763    				jr c,fup_end
                           B  1764    			
005334 E1                  B  1765    				pop hl
005335 E5                  B  1766    				push hl
005336 7C                  B  1767    				ld a,h
005337 2A F6 54 00         B  1768    				ld hl,(fs_fat2_position)		00533B CD 42 53 00         B  1769    				call fat_upd
00533F E1                  B  1770    fup_end			pop hl
005340 C1                  B  1771    				pop bc
005341 C9                  B  1772    				ret
                           B  1773    			
                           B  1774    			
005342 CD 24 54 00         B  1775    fat_upd			call set_abs_lba_and_read_secto
005346 38 0D               B  1776    				jr c,ufehwerr
005348 21 02 67 00         B  1777    				ld hl,sector_buffer
00534C 09                  B  1778    				add hl,bc
00534D 09                  B  1779    				add hl,bc
00534E 73                  B  1780    				ld (hl),e
00534F 23                  B  1781    				inc hl
005350 72                  B  1782    				ld (hl),d
005351 CD 77 54 00         B  1783    				call fs_write_sector
005355 C9                  B  1784    ufehwerr		ret
                           B  1785    				
                           B  1786    	
                           B  1787    ;----------------------------------------------
                           B  1788    
005356                     B  1789    transfer_length_countdown
                           B  1790    
005356 E5                  B  1791    				push hl							005357 C5                  B  1792    				push bc
                           B  1793    			
005358 0604                B  1794    				ld b,4
00535A 21 2A 55 00         B  1795    				ld hl,fs_file_pointer			00535E 34                  B  1796    fpinclp			inc (hl)
00535F 20 03               B  1797    				jr nz,fs_fpino
005361 23                  B  1798    				inc hl
005362 10 FA               B  1799    				djnz fpinclp
                           B  1800    				
005364 2A 36 55 00         B  1801    fs_fpino		ld hl,(fs_file_transfer_length)
005368 2B                  B  1802    				dec hl
005369 22 36 55 00         B  1803    				ld (fs_file_transfer_length),hl
00536D 01000000            B  1804    				ld bc,0
005371 B7                  B  1805    				or a
005372 ED4A                B  1806    				adc hl,bc						                           B  1807    				
005374 C1                  B  1808    				pop bc
005375 E1                  B  1809    				pop hl
005376 C9                  B  1810    				ret
                           B  1811    
                           B  1812    ;----------------------------------------------
                           B  1813    
005377                     B  1814    fs_get_current_dir_name
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 223


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
                           B  1815    
                           B  1816    ;returns current dir name - location at HL
                           B  1817    
005377 CD 9B 1A 00         B  1818    				call fs_get_dir_cluster			00537B 7A                  B  1819    				ld a,d
00537C B3                  B  1820    				or e
00537D 20 10               B  1821    				jr nz,fs_dnnr
00537F 21 DC 5F 00         B  1822    				ld hl,vol_txt+1					005383 3A D7 5F 00         B  1823    				ld a,(current_volume)
005387 C630                B  1824    				add a,030h
005389 32 DF 5F 00         B  1825    				ld (vol_txt+4),a
00538D AF                  B  1826    				xor a
00538E C9                  B  1827    				ret
                           B  1828    					
00538F ED53 60 55 00       B  1829    fs_dnnr			ld (fs_stash_dir_block),de
005394 CD F5 49 00         B  1830    				call fs_parent_dir_command		005398 D8                  B  1831    				ret c
005399 B7                  B  1832    				or a
00539A C0                  B  1833    				ret nz
00539B 3E01                B  1834    				ld a,1
00539D CD E7 51 00         B  1835    				call fs_search					0053A1 D8                  B  1836    				ret c
0053A2 C0                  B  1837    				ret nz
                           B  1838    					
0053A3 DDE5                B  1839    fs_gdbn			push ix
0053A5 E1                  B  1840    				pop hl
0053A6 060B                B  1841    				ld b,11							0053A8 7E                  B  1842    ntdirn			ld a,(hl)
0053A9 FE20                B  1843    				cp ' '
0053AB 28 03               B  1844    				jr z,rdirfsp
0053AD 23                  B  1845    				inc hl
0053AE 10 F8               B  1846    rdirnsp			djnz ntdirn
                           B  1847    				
0053B0 3600                B  1848    rdirfsp			ld (hl),0
0053B2 DDE5                B  1849    				push ix
0053B4 ED5B 60 55 00       B  1850    				ld de,(fs_stash_dir_block)
0053B9 CD A7 1A 00         B  1851    				call fs_update_dir_cluster		0053BD E1                  B  1852    				pop hl	
0053BE AF                  B  1853    				xor a							0053BF C9                  B  1854    				ret
                           B  1855    
                           B  1856    			
                           B  1857    ;----------------------------------------------
                           B  1858    
0053C0                     B  1859    fs_clear_filename
                           B  1860    
0053C0 D5                  B  1861    				push de							0053C1 C5                  B  1862    				push bc
0053C2 060C                B  1863    				ld b,12
0053C4 3E20                B  1864    				ld a,' '
0053C6 12                  B  1865    clrfnlp			ld (de),a
0053C7 13                  B  1866    				inc de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 224


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
0053C8 10 FC               B  1867    				djnz clrfnlp
0053CA C1                  B  1868    				pop bc
0053CB D1                  B  1869    				pop de
0053CC C9                  B  1870    				ret
                           B  1871    				
                           B  1872    ;----------------------------------------------
                           B  1873    
                           B  1874    
0053CD                     B  1875    cluster_and_offset_to_lba
                           B  1876    
                           B  1877    ; INPUT: HL = cluster, A = sector offset, OUTPU
                           B  1878    
0053CD C5                  B  1879    				push bc
0053CE D5                  B  1880    				push de
0053CF E5                  B  1881    				push hl
0053D0 DDE5                B  1882    				push ix
                           B  1883    
0053D2 2B                  B  1884    				dec hl							0053D3 2B                  B  1885    				dec hl							0053D4 11000000            B  1886    				ld de,0							0053D8 01000000            B  1887    				ld bc,0
0053DC 5F                  B  1888    				ld e,a
0053DD 3A EF 54 00         B  1889    				ld a,(fs_cluster_size)			0053E1 CB3F                B  1890    caotllp			srl a
0053E3 28 03               B  1891    				jr z,clusdone
0053E5 29                  B  1892    				add hl,hl						0053E6 18 F9               B  1893    				jr caotllp
                           B  1894    			
0053E8 ED4B FC 54 00       B  1895    clusdone		ld bc,(fs_data_area)			0053ED 09                  B  1896    				add hl,bc						0053EE 19                  B  1897    				add hl,de						                           B  1898    				
0053EF E5                  B  1899    add_ptn_offset	push hl							0053F0 CD D5 1A 00         B  1900    				call fs_calc_volume_offset
0053F4 DD21 03 60 00       B  1901    				ld ix,volume_mount_list
0053F9 DD19                B  1902    				add ix,de
0053FB E1                  B  1903    				pop hl
0053FC DD0708              B  1904    				ld bc,(ix+08h)					0053FF DD7E0B              B  1905    				ld a,(ix+0bh)
005402 09                  B  1906    				add hl,bc
005403 CE00                B  1907    				adc a,0
005405 22 AE 61 00         B  1908    				ld (sector_lba0),hl				005409 32 B1 61 00         B  1909    				ld (sector_lba3),a				                           B  1910    				
00540D DDE1                B  1911    				pop ix
00540F E1                  B  1912    				pop hl
005410 D1                  B  1913    				pop de
005411 C1                  B  1914    				pop bc
005412 C9                  B  1915    				ret
                           B  1916    				
                           B  1917    
                           B  1918    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 225


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
                           B  1919    
005413                     B  1920    set_absolute_lba
                           B  1921    
                           B  1922    ; set A to sector offset, HL to sectors from st
                           B  1923    
005413 C5                  B  1924    				push bc							005414 D5                  B  1925    				push de							005415 E5                  B  1926    				push hl							005416 DDE5                B  1927    				push ix							005418 01000000            B  1928    				ld bc,0
00541C 11000000            B  1929    				ld de,0
005420 5F                  B  1930    				ld e,a
005421 19                  B  1931    				add hl,de
005422 18 CB               B  1932    				jr add_ptn_offset		
                           B  1933    				
                           B  1934    
005424                     B  1935    set_abs_lba_and_read_sector
                           B  1936    
005424 CD 13 54 00         B  1937    				call set_absolute_lba
005428 C3 4E 54 00         B  1938    				jp fs_read_sector
                           B  1939    				
                           B  1940    ;----------------------------------------------
                           B  1941    
                           B  1942    
00542C                     B  1943    backup_sector_lba
                           B  1944    
00542C C5                  B  1945    				push bc
00542D D5                  B  1946    				push de
00542E E5                  B  1947    				push hl
00542F 21 AE 61 00         B  1948    				ld hl,sector_lba0
005433 11 64 55 00         B  1949    				ld de,fs_backed_up_sector_lba0
005437 01040000            B  1950    lbabur			ld bc,4
00543B EDB0                B  1951    				ldir
00543D E1                  B  1952    				pop hl
00543E D1                  B  1953    				pop de
00543F C1                  B  1954    				pop bc
005440 C9                  B  1955    				ret
                           B  1956    
                           B  1957    
005441                     B  1958    restore_sector_lba
                           B  1959    
005441 C5                  B  1960    				push bc
005442 D5                  B  1961    				push de
005443 E5                  B  1962    				push hl
005444 21 64 55 00         B  1963    				ld hl,fs_backed_up_sector_lba0
005448 11 AE 61 00         B  1964    				ld de,sector_lba0
00544C 18 E9               B  1965    				jr lbabur	
                           B  1966    					
                           B  1967    ;----------------------------------------------
                           B  1968    
00544E                     B  1969    fs_read_sector
                           B  1970    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 226


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
00544E C5                  B  1971    				push bc
00544F D5                  B  1972    				push de
005450 E5                  B  1973    				push hl
005451 DDE5                B  1974    				push ix
005453 FDE5                B  1975    				push iy
005455 01040000            B  1976    				ld bc,04h						005459 CD 88 54 00         B  1977    				call sector_access_redirect
00545D 2A AE 61 00         B  1978    secaccend		ld hl,(sector_lba0)
005461 22 68 55 00         B  1979    				ld (fs_sector_last_read_lba0),h
005465 3A B1 61 00         B  1980    				ld a,(sector_lba0+3)
005469 32 6B 55 00         B  1981    				ld (fs_sector_last_read_lba0+3)
00546D FDE1                B  1982    				pop iy
00546F DDE1                B  1983    				pop ix
005471 E1                  B  1984    				pop hl
005472 D1                  B  1985    				pop de
005473 C1                  B  1986    				pop bc
005474 C8                  B  1987    				ret z							005475 37                  B  1988    				scf								005476 C9                  B  1989    				ret								                           B  1990    
                           B  1991    
005477                     B  1992    fs_write_sector	
                           B  1993    				
005477 C5                  B  1994    				push bc
005478 D5                  B  1995    				push de
005479 E5                  B  1996    				push hl
00547A DDE5                B  1997    				push ix
00547C FDE5                B  1998    				push iy
00547E 01080000            B  1999    				ld bc,08h						005482 CD 88 54 00         B  2000    				call sector_access_redirect
005486 18 D5               B  2001    				jr secaccend
                           B  2002    
                           B  2003    
                           B  2004    
005488                     B  2005    sector_access_redirect
                           B  2006    
                           B  2007    	
005488 3A D8 5F 00         B  2008    				ld a,(current_driver)			00548C CD 6D 1A 00         B  2009    				call locate_driver_base			005490 EB                  B  2010    				ex de,hl
005491 09                  B  2011    				add hl,bc						005492 E9                  B  2012    				jp (hl)
                           B  2013    
                           B  2014    ;----------------------------------------------
                           B  2015    
005493                     B  2016    fs_is_same_sector_in_buffer
                           B  2017    				
005493 E5                  B  2018    				push hl
005494 D5                  B  2019    				push de
005495 2A AE 61 00         B  2020    				ld hl,(sector_lba0)
005499 ED5B 68 55 00       B  2021    				ld de,(fs_sector_last_read_lba0
00549E AF                  B  2022    				xor a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 227


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
00549F ED52                B  2023    				sbc hl,de
0054A1 20 0A               B  2024    				jr nz,fs_notsamsec
0054A3 3A B1 61 00         B  2025    				ld a,(sector_lba0+3)
0054A7 6F                  B  2026    				ld l,a
0054A8 3A 6B 55 00         B  2027    				ld a,(fs_sector_last_read_lba0+
0054AC BD                  B  2028    				cp l
0054AD D1                  B  2029    fs_notsamsec	pop de
0054AE E1                  B  2030    				pop hl
0054AF C9                  B  2031    				ret
                           B  2032    
                           B  2033    ;----------------------------------------------
                           B  2034    	
0054B0                     B  2035    bootsector_stub
                           B  2036    
0054B0 EB3C904D 53444F53   B  2037    				db  0EBh,03Ch,090h,04Dh,053h,04
0054B8 352E3000 02004000 
0054C0 02000200 00F8F200   B  2038    				db  002h,000h,002h,000h,000h,0F
0054C8 3F00FF00 00000000 
0054D0 00000000 000029C4   B  2039    				db  000h,000h,000h,000h,000h,00
0054D8 E636984E 4F204E41 
0054E0 4D452020 20204641   B  2040    				db  04Dh,045h,020h,020h,020h,02
0054E8 54313620 2020C3 
                           B  2041    
                           B  2042    ;----------------------------------------------
                           B  2043    
0054EF 00                  B  2044    fs_cluster_size				db 0
0054F0 000000              B  2045    fs_bytes_per_cluster		dw24 0
0054F3 000000              B  2046    fs_fat1_position			dw24 0		; offse
0054F6 000000              B  2047    fs_fat2_position			dw24 0		; offse
0054F9 000000              B  2048    fs_root_dir_position		dw24 0		; offse
0054FC 000000              B  2049    fs_data_area				dw24 0		; offse
0054FF 00                  B  2050    fs_root_dir_sectors			db 0
                           B  2051    
005500 000000              B  2052    fs_sectors_per_fat			dw24 0
005503 000000              B  2053    fs_max_data_clusters		dw24 0
                           B  2054    
005506 00 00 00 00 00 00   B  2055    fs_sought_filename			blkb 12,0
00550C 00 00 00 00 00 00 
005512 00 00 00 00 00 00   B  2056    fs_alt_filename				blkb 12,0
005518 00 00 00 00 00 00 
00551E 00 00 00 00 00 00   B  2057    fs_filename_buffer			blkb 12,0
005524 00 00 00 00 00 00 
                           B  2058    
00552A 00000000            B  2059    fs_file_pointer				dw 0,0		; 32 bi
00552E 00000000            B  2060    fs_file_length				dw 0,0		; 32 bi
005532 00000000            B  2061    fs_existing_file_length 	dw 0,0		; 32 bi
                           B  2062    
005536 000000              B  2063    fs_file_transfer_length		dw24 0		; 24 bi
                           B  2064    
005539 000000              B  2065    fs_file_start_cluster		dw24 0
00553C 000000              B  2066    fs_file_working_cluster		dw24 0
                           B  2067    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 228


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
00553F 000000              B  2068    fs_ez80_address				dw24 0
005542 000000              B  2069    fs_ez80_working_address		dw24 0
                           B  2070    
005545 000000              B  2071    fs_in_sector_offset			dw24 0
005548 00                  B  2072    fs_working_sector			db 0
                           B  2073    
005549 000000              B  2074    fs_working_cluster			dw24 0
00554C 000000              B  2075    fs_free_cluster				dw24 0
00554F 000000              B  2076    fs_new_file_cluster			dw24 0
                           B  2077    
005552 000000              B  2078    fs_fname_in_sector_addr		dw24 0
                           B  2079    
005555 000000              B  2080    fs_dir_entry_cluster		dw24 0
005558 000000              B  2081    fs_dir_entry_line_offset	dw24 0
00555B 00                  B  2082    fs_dir_entry_sector			db 0
                           B  2083    
00555C 00                  B  2084    fs_filepointer_valid		db 0
00555D 000000              B  2085    fs_sector_pos_cnt			dw24 0
                           B  2086    
005560 000000              B  2087    fs_stash_dir_block	 		dw24 0
                           B  2088    
005563 00                  B  2089    fs_search_type				db 0
                           B  2090    
005564 00000000            B  2091    fs_backed_up_sector_lba0	db 0,0,0,0
                           B  2092    
005568 00000000            B  2093    fs_sector_last_read_lba0	db 0,0,0,0
                           B  2094    
                           B  2095    ;----------------------------------------------
                           B  2096    
                           A  3246    
                           A  3247    ;----------------------------------------------
                           A  3248    ; OS Data 
                           A  3249    ;----------------------------------------------
                           A  3250    
                           B     0    	include		'prose_data.asm'				                           B     1    ;**************
                           B     2    ;* PROSE DATA *
                           B     3    ;**************
                           B     4    
                           B     5    ;----------------------------------------------
                           B     6    ; kernal routine locations
                           B     7    ;----------------------------------------------
                           B     8    
00556C                     B     9    kernal_table
                           B    10    
00556C 671800              B    11    	dw24 ext_mount_volumes			;00		
00556F 0D1800              B    12    	dw24 os_get_device_info			;01		
005572 C41600              B    13    	dw24 os_check_volume_format		;02		
005575 F61A00              B    14    	dw24 ext_change_volume			;03		
005578 201800              B    15    	dw24 os_get_volume_info			;04		
00557B CD1600              B    16    	dw24 ext_format					;05		
00557E FF1600              B    17    	dw24 ext_make_dir				;06		
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 229


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005581 0D1700              B    18    	dw24 ext_change_dir				;07		
005584 1B1700              B    19    	dw24 os_parent_dir				;08		
005587 211700              B    20    	dw24 os_root_dir				;09		
00558A 691700              B    21    	dw24 ext_delete_dir				;0a		
00558D 581600              B    22    	dw24 ext_find_file				;0b		
005590 721600              B    23    	dw24 ext_set_file_pointer		;0c		
005593 6B1600              B    24    	dw24 os_set_load_length			;0d		
005596 851600              B    25    	dw24 ext_read_bytes_from_file	;0e		
005599 271700              B    26    	dw24 ext_erase_file				;0f		
00559C 4F1700              B    27    	dw24 ext_rename_file			;10		
00559F 941600              B    28    	dw24 ext_create_file			;11		
0055A2 A51600              B    29    	dw24 ext_write_bytes_to_file	;12		
0055A5 C41A00              B    30    	dw24 fs_get_total_sectors		;13		
0055A8 351700              B    31    	dw24 os_goto_first_dir_entry	;14		 
0055AB 3B1700              B    32    	dw24 os_get_dir_entry			;15		
0055AE 411700              B    33    	dw24 os_goto_next_dir_entry		;16		
0055B1 791700              B    34    	dw24 ext_read_sector			;17		
0055B4 A71700              B    35    	dw24 ext_write_sector			;18		
0055B7 311B00              B    36    	dw24 ext_file_sector_list		;19		
0055BA 9B1A00              B    37    	dw24 fs_get_dir_cluster			;1a		
0055BD A71A00              B    38    	dw24 fs_update_dir_cluster		;1b		
0055C0 471700              B    39    	dw24 os_get_current_dir_name	;1c		
                           B    40    
0055C3 014400              B    41    	dw24 os_wait_key_press			;1d		
0055C6 5C4400              B    42    	dw24 os_get_key_press			;1e		
0055C9 7F1500              B    43    	dw24 os_get_key_mod_flags		;1f		
                           B    44    
0055CC 2E1800              B    45    	dw24 ext_serial_get_header		;20		
0055CF 3B1800              B    46    	dw24 ext_serial_receive_file	;21		 
0055D2 441800              B    47    	dw24 ext_serial_send_file		;22		 
0055D5 561800              B    48    	dw24 ext_serial_tx				;23		
0055D8 5D1800              B    49    	dw24 ext_serial_rx				;24		
                           B    50    
0055DB 460F00              B    51    	dw24 ext_print_string			;25		
0055DE 863E00              B    52    	dw24 hwsc_clear_screen			;26		
0055E1 564000              B    53    	dw24 hwsc_wait_vrt				;27		
0055E4 041400              B    54    	dw24 os_set_cursor_position		;28		
0055E7 961A00              B    55    	dw24 ext_plot_char				;29		
0055EA C51500              B    56    	dw24 ext_set_pen				;2a		
0055ED D21500              B    57    	dw24 ext_background_colours		;2b		
0055F0 4F3F00              B    58    	dw24 hwsc_draw_cursor			;2c		
0055F3 CC1500              B    59    	dw24 os_get_pen					;2d		
0055F6 C13E00              B    60    	dw24 hwsc_scroll_up				;2e		
0055F9 153E00              B    61    	dw24 os_set_video_hw_regs		;2f		
0055FC 851500              B    62    	dw24 os_get_vmode				;30			0055FF A33F00              B    63    	dw24 hwsc_get_charmap_addr_xy	;31		
005602 241400              B    64    	dw24 os_get_cursor_position		;32		 
                           B    65    
005605 A21B00              B    66    	dw24 ext_set_envar				;33		
005608 661B00              B    67    	dw24 ext_get_envar				;34		
00560B FC1B00              B    68    	dw24 ext_delete_envar			;35		
                           B    69    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 230


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
00560E 7A1400              B    70    	dw24 os_set_mouse_window		;36		
005611 C01400              B    71    	dw24 os_get_mouse_position		;37		
005614 971400              B    72    	dw24 os_get_mouse_motion		;38		
                           B    73    
005617 C64000              B    74    	dw24 hwsc_time_delay			;39		
00561A 181200              B    75    	dw24 ext_compare_strings		;3a		
00561D 971000              B    76    	dw24 ext_hexbyte_to_ascii		;3b		
005620 CC1000              B    77    	dw24 ext_ascii_to_hexword		;3c		
005623 211100              B    78    	dw24 ext_user_input				;3d		
                           B    79    
005626 AB4000              B    80    	dw24 hwsc_get_version			;3e		
005629 EE1300              B    81    	dw24 os_dont_store_registers	;3f		
00562C 043700              B    82    	dw24 os_cmd_unused				;40 		00562F E94000              B    83    	dw24 hwsc_read_rtc				;41     
005632 114100              B    84    	dw24 hwsc_write_rtc				;42		 
005635 4D1C00              B    85    	dw24 os_get_keymap_location		;43		 
005638 053700              B    86    	dw24 os_get_mem_high			;44
00563B 531C00              B    87    	dw24 ext_play_audio				;45
00563E BB4300              B    88    	dw24 hwsc_disable_audio			;46
005641 D44300              B    89    	dw24 hwsc_get_joysticks			;47
005644 951500              B    90    	dw24 ext_set_vmode				;48
005647 D30F00              B    91    	dw24 ext_set_cursor_image		;49
00564A 353F00              B    92    	dw24 hwsc_remove_cursor			;4a
00564D D93500              B    93    	dw24 char_to_font				;4b
005650 4D1B00              B    94    	dw24 os_get_disk_sector_ptr		;4c
                           B    95    	
                           B    96    ;----------------------------------------------
                           B    97    ; Non-packed Text Strings
                           B    98    ;----------------------------------------------
                           B    99    
005653 50524F53 4520666F   B   100    welcome_message			db "PROSE for EZ80P by 
00565B 7220455A 38305020 
005663 62792050 68696C20 
00566B 52757374 6F6E2032 
005673 3031310B 0B 
005678 53595354 454D2052   B   101    						db "SYSTEM RAM free abo
005680 414D2066 72656520 
005688 61626F76 653A2024 
005690 00 
005691 44726976 65733A0B   B   102    storage_txt				db "Drives:",11,0
005699 00 
00569A 434F4D4D 414E4453   B   103    os_dos_cmds_txt			db "COMMANDS",0
0056A2 00 
0056A3 53544152 5455502E   B   104    startup_script_fn		db "STARTUP.SCR",0
0056AB 53435200 
0056AF 2400                B   105    os_hex_prefix_txt		db "$",0
0056B1 4F532056 65727369   B   106    os_version_txt			db "OS Version: $",0	0056B9 6F6E3A20 2400 
0056BF 414D4F45 42412048   B   107    hw_version_txt			db "AMOEBA HW Version: 
0056C7 57205665 7273696F 
0056CF 6E3A2024 00 
0056D4 202F2000            B   108    fwd_slash_txt			db " / ",0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 231


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
0056D8 4C6F6164 696E672E   B   109    loading_txt				db "Loading..",11,0
0056E0 2E0B00 
0056E3 53617669 6E672E2E   B   110    saving_txt				db "Saving..",11,0
0056EB 0B00 
0056ED 2E657A70 20         B   111    ezp_extension_txt		db ".ezp",32
0056F2 0B4D6F72 653F0B0B   B   112    os_more_txt				db 11,"More?",11,11,0
0056FA 00 
0056FB 52656769 73746572   B   113    nmi_freeze_txt			db "Register Dump:"
005703 2044756D 703A 
005709 0B0B00              B   114    crlfx2_txt				db 11,11,0
00570C 7800                B   115    rep_char_txt			db "x",0
00570E 20746F20 00         B   116    to_txt					db " to ",0
005713 4552524F 5200       B   117    error_txt				db "ERROR",0
005719 494620              B   118    if_command_txt			db "IF "
00571C 454E4420            B   119    end_command_txt			db "END "
005720 4F532052 45515549   B   120    hw_warn_txt1			db "OS REQUIRES AMOEBA 
005728 52455320 414D4F45 
005730 42412056 3A 
005735 2D2D2D2D 00         B   121    hw_warn_txt2			db "----",0
                           B   122    
                           B   123    ;----------------------------------------------
                           B   124    ; Packed text section
                           B   125    ;----------------------------------------------
                           B   126    
00573A 00444542 5547       B   127    dictionary				db 0,"DEBUG"			005740 002D2D2D 2D2D       B   128    						db 0,"-----"			005746 00494F              B   129    						db 0,"IO"				005749 002D2D              B   130    						db 0,"--"				00574C 004D4953 43         B   131    						db 0,"MISC"				005751 002D2D2D 2D         B   132    						db 0,"----"				005756 00616464 72         B   133    						db 0,"addr"				00575B 0050524F 5345       B   134    						db 0,"PROSE"			005761 00612062 2063       B   135    						db 0,"a b c"			005767 00416464 72657373   B   136    						db 0,"Address"			00576F 00427974 6573       B   137    						db 0,"Bytes"			005775 00457865 63757461   B   138    						db 0,"Executable"		00577D 626C65 
005780 0048756E 74         B   139    						db 0,"Hunt"				005785 0046696C 6C         B   140    						db 0,"Fill"				00578A 00476F74 6F         B   141    						db 0,"Goto"				                           B   142    						
00578F 0053686F 77         B   143    						db 0,"Show"				005794 00435055            B   144    						db 0,"CPU"				005798 00526567 69737465   B   145    						db 0,"Registers"		0057A0 7273 
0057A2 004173              B   146    						db 0,"As"				0057A5 00415343 4949       B   147    						db 0,"ASCII"			0057AB 00436C65 6172       B   148    						db 0,"Clear"			0057B1 00536372 65656E     B   149    						db 0,"Screen"			0057B8 00446973 61737365   B   150    						db 0,"Disassemble"		0057C0 6D626C65 
0057C4 00537769 746368     B   151    						db 0,"Switch"			Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 232


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
0057CB 00436F70 79         B   152    						db 0,"Copy"				0057D0 00446576 696365     B   153    						db 0,"Device"			0057D7 00436861 6E6765     B   154    						db 0,"Change"			0057DE 00447269 7665       B   155    						db 0,"Drive"			0057E4 00446972            B   156    						db 0,"Dir"				0057E8 002F                B   157    						db 0,"/"				0057EA 00666E              B   158    						db 0,"fn"				                           B   159    						
0057ED 0044656C 657465     B   160    						db 0,"Delete"			0057F4 0046696C 65         B   161    						db 0,"File"				0057F9 00496E66 6F         B   162    						db 0,"Info"				0057FE 00564F4C 783A       B   163    						db 0,"VOLx:"			005804 004D616B 65         B   164    						db 0,"Make"				005809 0052656D 6F756E74   B   165    						db 0,"Remount"			005811 00537461 7274       B   166    						db 0,"Start"			005817 00576172 6E696E67   B   167    						db 0,"Warning!"			00581F 21 
005820 00416C6C            B   168    						db 0,"All"				005824 0052656D 6F7665     B   169    						db 0,"Remove"			00582B 0052656E 616D65     B   170    						db 0,"Rename"			005832 004F72              B   171    						db 0,"Or"				005835 00526563 65697665   B   172    						db 0,"Receive"			00583D 00536176 65         B   173    						db 0,"Save"				005842 00547261 6E736D69   B   174    						db 0,"Transmit"			00584A 74 
00584B 004C6F61 64         B   175    						db 0,"Load"				                           B   176    						
005850 004F532F 4857       B   177    						db 0,"OS/HW"			005856 00566572 73696F6E   B   178    						db 0,"Version"			00585E 005B7065 6E207061   B   179    						db 0,"[pen paper]"		005866 7065725D 
00586A 803A                B   180    						db 80h,":"				00586C 813E                B   181    						db 81h,">"				00586E 82534F55 4E44       B   182    						db 82h,"SOUND"			005874 00566F6C 756D6573   B   183    						db 0,"Volumes"			00587C 8343                B   184    						db 83h,"C"				00587E 844344              B   185    						db 84h,"CD"				005881 85434C53            B   186    						db 85h,"CLS"			005885 8650454E            B   187    						db 86h,"PEN"			005889 8744                B   188    						db 87h,"D"				00588B 8844454C            B   189    						db 88h,"DEL"			00588F 89444952            B   190    						db 89h,"DIR"			005893 8A48                B   191    						db 8ah,"H"				005895 8B46                B   192    						db 8bh,"F"				                           B   193    						
005897 004F6E              B   194    						db 0,"On"				00589A 8C464F52 4D4154     B   195    						db 8ch,"FORMAT"			0058A1 0047                B   196    						db 0,"G"				0058A3 8D4C42              B   197    						db 8dh,"LB"				0058A6 8E4D                B   198    						db 8eh,"M"				0058A8 8F4D4F55 4E54       B   199    						db 8fh,"MOUNT"			0058AE 004265              B   200    						db 0,"Be"				Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 233


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
0058B1 9052                B   201    						db 90h,"R"				0058B3 915244              B   202    						db 91h,"RD"				0058B6 92524E              B   203    						db 92h,"RN"				0058B9 935258              B   204    						db 93h,"RX"				0058BC 945342              B   205    						db 94h,"SB"				0058BF 9554                B   206    						db 95h,"T"				0058C1 965458              B   207    						db 96h,"TX"				0058C4 97564552 53         B   208    						db 97h,"VERS"			0058C9 00577269 7465       B   209    						db 0,"Write"			                           B   210    						
0058CF 004D656D            B   211    						db 0,"Mem"				0058D3 00227478 7422       B   212    						db 0,22h,"txt",22h		0058D9 0057696C 6C         B   213    						db 0,"Will"				0058DE 00526174 65         B   214    						db 0,"Rate"				0058E3 0061                B   215    						db 0,"a"				0058E5 00507265 70         B   216    						db 0,"Prep"				0058EA 984D44              B   217    						db 98h,"MD"				0058ED 00447269 766573     B   218    						db 0,"Drives"			0058F4 006F6C64 666E       B   219    						db 0,"oldfn"			0058FA 006E6577 666E       B   220    						db 0,"newfn"			005900 006C656E            B   221    						db 0,"len"				005904 00436F6C 6F757273   B   222    						db 0,"Colours"			00590C 993F                B   223    						db 99h,"?"				00590E 00436F6D 6D616E64   B   224    						db 0,"Commands"			005916 73 
005917 0020                B   225    						db 0," "				005919 002D                B   226    						db 0,"-"				                           B   227    						
00591B 00566F6C 756D65     B   228    						db 0,"Volume"			005922 0046756C 6C         B   229    						db 0,"Full"				005927 004E6F74            B   230    						db 0,"Not"				00592B 00466F75 6E64       B   231    						db 0,"Found"			005931 004C656E 677468     B   232    						db 0,"Length"			005938 005A6572 6F         B   233    						db 0,"Zero"				00593D 004F7574            B   234    						db 0,"Out"				005941 004F66              B   235    						db 0,"Of"				005944 0052616E 6765       B   236    						db 0,"Range"			00594A 00416C72 65616479   B   237    						db 0,"Already"			005952 00457869 737473     B   238    						db 0,"Exists"			005959 004174              B   239    						db 0,"At"				00595C 00526F6F 74         B   240    						db 0,"Root"				005961 004D6973 6D617463   B   241    						db 0,"Mismatch"			005969 68 
00596A 00526571 75657374   B   242    						db 0,"Request"			005972 00446174 61         B   243    						db 0,"Data"				                           B   244    				
005977 00454F46            B   245    						db 0,"EOF"				00597B 00416674 6572       B   246    						db 0,"After"			005981 00556E6B 6E6F776E   B   247    						db 0,"Unknown"			005989 00436F6D 6D616E64   B   248    						db 0,"Command"			005991 00426164            B   249    						db 0,"Bad"				005995 00486578            B   250    						db 0,"Hex"				Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 234


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005999 004E6F              B   251    						db 0,"No"				00599C 0041626F 72746564   B   252    						db 0,"Aborted"			0059A4 00507265 73656E74   B   253    						db 0,"Present"			0059AC 00436865 636B7375   B   254    						db 0,"Checksum"			0059B4 6D 
0059B5 004C6F61 646564     B   255    						db 0,"Loaded"			0059BC 00436F6D 6D73       B   256    						db 0,"Comms"			0059C2 00457272 6F72       B   257    						db 0,"Error"			0059C8 00417267 756D656E   B   258    						db 0,"Arguments"		0059D0 7473 
0059D2 004C6F73 74         B   259    						db 0,"Lost"				                           B   260    						
0059D7 00                  B   261    						db 0
0059D8 46415431 36         B   262    fat16_txt				db "FAT16"				                           B   263    
0059DD 00536572 69616C     B   264    						db 0,"Serial"			0059E4 0054696D 65         B   265    						db 0,"Time"				0059E9 00466F6E 74         B   266    						db 0,"Font"				0059EE 00546F6F            B   267    						db 0,"Too"				0059F2 004C6F6E 67         B   268    						db 0,"Long"				0059F7 00446573 74696E61   B   269    						db 0,"Destination"		0059FF 74696F6E 
005A03 0053656C 65637465   B   270    						db 0,"Selected"			005A0B 64 
005A0C 00496E76 616C6964   B   271    						db 0,"Invalid"			005A14 004D6973 73696E67   B   272    						db 0,"Missing"			005A1C 004F4B              B   273    						db 0,"OK"				005A1F 004F53              B   274    						db 0,"OS"				005A22 0050726F 74656374   B   275    						db 0,"Protected"		005A2A 6564 
005A2C 0041                B   276    						db 0,"A"				005A2E 004973              B   277    						db 0,"Is"				005A31 00456D70 7479       B   278    						db 0,"Empty"			005A37 00456E64            B   279    						db 0,"End"				                           B   280    						
005A3B 0024                B   281    						db 0,"$"
005A3D 7878                B   282    hex_byte_txt			db "xx"					                           B   283    						
005A3F 00417070 656E64     B   284    						db 0,"Append"			005A46 003F                B   285    						db 0,"?"				005A48 0024                B   286    						db 0,"$"				005A4A 00417761 6974696E   B   287    						db 0,"Awaiting"			005A52 67 
005A53 00526563 65697669   B   288    						db 0,"Receiving"		005A5B 6E67 
005A5D 0053656E 64696E67   B   289    						db 0,"Sending"			005A65 000B                B   290    						db 0,11					005A67 002E2E              B   291    						db 0,".."				005A6A 004E616D 65         B   292    						db 0,"Name"				005A6F 00204279 746573     B   293    						db 0," Bytes"			005A76 00507265 7373       B   294    						db 0,"Press"			005A7C 00416E79            B   295    						db 0,"Any"				Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 235


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005A80 004B6579            B   296    						db 0,"Key"				005A84 00456E74 6572       B   297    						db 0,"Enter"			005A8A 9A455845 43         B   298    						db 9ah,"EXEC"			                           B   299    				
005A8F 0052756E            B   300    						db 0,"Run"				005A93 00536372 697074     B   301    						db 0,"Script"			005A9A 00594553            B   302    yes_txt					db 0,"YES" 				005A9E 00546F              B   303    						db 0,"To"				005AA1 00536574            B   304    						db 0,"Set"				005AA5 00436F6E 74696E75   B   305    						db 0,"Continue"			005AAD 65 
005AAE 004E6F6E 65         B   306    						db 0,"None"				005AB3 00447269 766572     B   307    						db 0,"Driver"			005ABA 9B3C                B   308    						db 9bh,"<"				005ABC 004E6577 6572       B   309    						db 0,"Newer"			005AC2 00526571 75697265   B   310    						db 0,"Required"			005ACA 64 
005ACB 00465047 4120636F   B   311    						db 0,"FPGA config"		005AD3 6E666967 
005AD7 00556E63 68616E67   B   312    						db 0,"Unchanged"		005ADF 6564 
005AE1 006C6F63 206C656E   B   313    						db 0,"loc len [per vol 
005AE9 205B7065 7220766F 
005AF1 6C206368 616E7320 
005AF9 6C6F6F70 3F5D20 
005B00 9C50414C 45545445   B   314    						db 9ch,"PALETTE"		005B08 0070616C 65747465   B   315    						db 0,"palette"			                           B   316    						
005B10 9D4D4F55 5345       B   317    						db 9dh,"MOUSE"			005B16 00456E61 626C65     B   318    						db 0,"Enable"			005B1D 004B6579 626F6172   B   319    						db 0,"Keyboard"			005B25 64 
005B26 00446574 65637465   B   320    						db 0,"Detected"			005B2E 64 
005B2F 004D6F75 7365       B   321    						db 0,"Mouse"			005B35 00536563 746F72     B   322    						db 0,"Sector"			005B3C 00496E63 6F727265   B   323    						db 0,"Incorrect"		005B44 6374 
005B46 9E564D4F 4445       B   324    						db 9eh,"VMODE"			005B4C 00566964 656F       B   325    						db 0,"Video"			005B52 004D6F64 65         B   326    						db 0,"Mode"				005B57 9F464F4E 54         B   327    						db 9fh,"FONT"			005B5C 00416E64            B   328    						db 0,"And"				005B60 00536176 696E67     B   329    						db 0,"Saving"			005B67 00556E73 7570706F   B   330    						db 0,"Unsupported"		005B6F 72746564 
005B73 A0534554            B   331    						db 0a0h,"SET"			005B77 005B7661 723D7374   B   332    						db 0,"[var=string]"		005B7F 72696E67 5D 
                           B   333    
005B84 00456E76 6172       B   334    						db 0,"Envar"			005B8A A1445A              B   335    						db 0a1h,"DZ"			Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 236


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005B8D 0041444C            B   336    						db 0,"ADL"				005B91 005A3830            B   337    						db 0,"Z80"				005B95 00506C61 79         B   338    						db 0,"Play"				005B9A 00417564 696F       B   339    						db 0,"Audio"			                           B   340    						
005BA0 0001                B   341    						db 0,1					                           B   342    
                           B   343    
                           B   344    
                           B   345    
                           B   346    
005BA2 2199696A 5F916F92   B   347    save_append_msg			db 021h,099h,069h,06ah,
005BAA 9700 
005BAC 2F0A9300            B   348    os_loadaddress_msg 		db 02fh,00ah,093h,0		005BB0 21649300            B   349    os_filesize_msg			db 021h,064h,093h,0		005BB4 94219700            B   350    ser_rec_msg				db 094h,021h,097h,0		005BB8 956F9897 00         B   351    ser_rec2_msg			db 095h,06fh,098h,097h,
005BBD 966F9897 00         B   352    ser_send_msg			db 096h,06fh,098h,097h,
005BC2 9521BBBC 989700     B   353    ser_recsave_msg			db 095h,021h,0bbh,0bch,
005BC9 A77C9097 00         B   354    hw_err_msg				db 0a7h,07ch,090h,097h,
005BCE 607C00              B   355    disk_err_msg			db 060h,07ch,0			005BD1 A1779797 00         B   356    script_aborted_msg		db 0a1h,077h,097h,097h,
005BD6 76B2B397 00         B   357    no_keyboard_msg			db 076h,0b2h,0b3h,097h,
                           B   358    
005BDB 9700                B   359    packed_help1				db 097h,0
005BDD 0100                B   360    							db 001h,0			005BDF 0200                B   361    							db 002h,0			005BE1 3307095F 4F500B00   B   362    							db 033h,007h,009h,0
005BE9 3407515F 4F1400     B   363    							db 034h,007h,051h,0
005BF0 37070707 5F195000   B   364    							db 037h,007h,007h,0
005BF8 3B075FC2 1700       B   365    							db 03bh,007h,05fh,0
005BFE C1075FC3 1700       B   366    							db 0c1h,007h,05fh,0
005C04 3F070754 5F0E5000   B   367    							db 03fh,007h,007h,0
005C0C 42075F0F 0A00       B   368    							db 042h,007h,05fh,0
005C12 3E070709 5F0D5000   B   369    							db 03eh,007h,007h,0
005C1A 44075F10 500B00     B   370    							db 044h,007h,05fh,0
005C21 475F1011 1200       B   371    							db 047h,05fh,010h,0
005C27 4C075F10 50131400   B   372    							db 04ch,007h,05fh,0
                           B   373    	
005C2F 9700                B   374    							db 097h,0
005C31 0300                B   375    							db 003h,0			005C33 0400                B   376    							db 004h,0			005C35 38231E1D 5F1B601E   B   377    							db 038h,023h,01eh,0
005C3D 1D00 
005C3F 3C1F5F20 2100       B   378    							db 03ch,01fh,05fh,0
005C45 3D5F101D 00         B   379    							db 03dh,05fh,010h,0
005C4A 411A995F 551C00     B   380    							db 041h,01ah,099h,0
005C51 431F075F 2F2100     B   381    							db 043h,01fh,007h,0
005C58 561D5F24 1D00       B   382    							db 056h,01dh,05fh,0
005C5E 455F2557 00         B   383    							db 045h,05fh,025h,0
005C63 481D5F29 1D00       B   384    							db 048h,01dh,05fh,0
005C69 4958595F 2A2100     B   385    							db 049h,058h,059h,0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 237


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005C70 4A1F075F 2C2100     B   386    							db 04ah,01fh,007h,0
005C77 4B1F075A 5F2D2100   B   387    							db 04bh,01fh,007h,0
005C7F 4D1F075A 5F2E2100   B   388    							db 04dh,01fh,007h,0
005C87 235F1860 00         B   389    							db 023h,05fh,018h,0
                           B   390    
005C8C 9700                B   391    							db 097h,0
005C8E 0500                B   392    							db 005h,0			005C90 0600                B   393    							db 006h,0			005C92 395F1516 00         B   394    							db 039h,05fh,015h,0
005C97 9F1F5FA0 A100       B   395    							db 09fh,01fh,05fh,0
005C9D BA1F5F1B 8200       B   396    							db 0bah,01fh,05fh,0
005CA3 B05FB1B0 A700       B   397    							db 0b0h,05fh,0b1h,0
005CA9 AE095F1B AF00       B   398    							db 0aeh,09h,05fh,01
005CAF 3A325F1B 5B00       B   399    							db 03ah,032h,05fh,0
005CB5 BEBF5FA4 C000       B   400    							db 0beh,0bfh,05fh,0
005CBB 35AD5FC4 5013C500   B   401    							db 035h,0adh,05fh,0
005CC3 4E5F1030 3100       B   402    							db 04eh,05fh,010h,0
005CC9 B7095F1B B8B900     B   403    							db 0b7h,09h,5fh,01b
005CD0 5C5F105D 00         B   404    							db 05ch,05fh,010h,0
005CD5 9700                B   405    							db 097h,0
005CD7 FF                  B   406    							db 0ffh
                           B   407    
                           B   408    
                           B   409    
                           B   410    
005CD8 B51D00              B   411    os_cmd_locs					dw24 os_cmd_colon	005CDB 9A2C00              B   412    							dw24 os_cmd_gtr		005CDE 6D3600              B   413    							dw24 os_cmd_sound	005CE1 5C1C00              B   414    							dw24 os_cmd_c		005CE4 C91C00              B   415    							dw24 os_cmd_cd		005CE7 AF1D00              B   416    							dw24 os_cmd_cls		005CEA D43400              B   417    							dw24 os_cmd_pen		005CED CF1D00              B   418    							dw24 os_cmd_d		                           B   419    					
005CF0 302900              B   420    							dw24 os_cmd_del		005CF3 452900              B   421    							dw24 os_cmd_dir		005CF6 C82B00              B   422    							dw24 os_cmd_h		005CF9 412A00              B   423    							dw24 os_cmd_f		005CFC 692A00              B   424    							dw24 os_cmd_format	005CFF CE2C00              B   425    							dw24 os_cmd_lb		005D02 5D2D00              B   426    							dw24 os_cmd_m		005D05 5D3200              B   427    							dw24 os_cmd_remount
                           B   428    
005D08 B42D00              B   429    							dw24 os_cmd_r		005D0B E52E00              B   430    							dw24 os_cmd_rd		005D0E F22E00              B   431    							dw24 os_cmd_rn		005D11 762F00              B   432    							dw24 os_cmd_rx		005D14 0E2F00              B   433    							dw24 os_cmd_sb		005D17 093200              B   434    							dw24 os_cmd_t		005D1A 9D3100              B   435    							dw24 os_cmd_tx		005D1D 693200              B   436    							dw24 os_cmd_vers	                           B   437    							
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 238


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005D20 A72D00              B   438    							dw24 os_cmd_md		005D23 762C00              B   439    							dw24 os_cmd_help	005D26 9A3200              B   440    							dw24 os_cmd_exec	005D29 D23400              B   441    							dw24 os_cmd_ltn		005D2C F83400              B   442    							dw24 os_cmd_palette
005D2F 293500              B   443    							dw24 os_cmd_mouse	005D32 653500              B   444    							dw24 os_cmd_vmode	005D35 753500              B   445    							dw24 os_cmd_font	                           B   446    							
005D38 043600              B   447    							dw24 os_cmd_set		005D3B 603600              B   448    							dw24 os_cmd_dz		                           B   449    							
                           B   450    								
005D3E 00                  B   451    packed_msg_list				db 0				                           B   452    		
005D3F 606100              B   453    							db 060h,061h,0		005D42 21626300            B   454    							db 021h,062h,063h,0
005D46 1D6100              B   455    							db 01dh,061h,0		005D49 628C1D00            B   456    							db 062h,08ch,01dh,0
005D4D 1D8D628E 00         B   457    							db 01dh,08dh,062h,0
005D52 628C2100            B   458    							db 062h,08ch,021h,0
005D56 21648D65 00         B   459    							db 021h,064h,08dh,0
005D5B 0A666768 00         B   460    							db 00ah,066h,067h,0
005D60 2199696A 00         B   461    							db 021h,099h,069h,0
005D65 696B6C00            B   462    							db 069h,06bh,06ch,0
                           B   463    					
005D69 727300              B   464    							db 072h,073h,0		005D6C 877500              B   465    							db 087h,075h,0		005D6F 76219900            B   466    							db 076h,021h,099h,0
                           B   467    					
005D73 87B500              B   468    							db 087h,0b5h,0		005D76 797400              B   469    							db 079h,074h,0		005D79 9A7A00              B   470    bytes_loaded_msg			db 09ah,07ah,0		005D7C 7B7C00              B   471    							db 07bh,07ch,0		005D7F 747D00              B   472    							db 074h,07dh,0		                           B   473    
005D82 627F00              B   474    format_err_msg				db 062h,07fh,0		                           B   475    
005D85 816600              B   476    							db 081h,066h,0		005D88 21998384 00         B   477    							db 021h,099h,083h,0
005D8D 76260A00            B   478    							db 076h,026h,00ah,0
005D91 76216400            B   479    							db 076h,021h,064h,0
005D95 2D7700              B   480    							db 02dh,077h,0		005D98 2D7C6B85 00         B   481    							db 02dh,07ch,06bh,0
005D9D 628C080C 00         B   482    							db 062h,08ch,08h,0c
005DA2 A9316708 AA00       B   483    							db 0a9h,031h,067h,0
005DA8 768F0A00            B   484    							db 076h,08fh,00ah,0
005DAC 76850A00            B   485    							db 076h,085h,00ah,0
                           B   486    					
005DB0 746800              B   487    							db 074h,068h,0		005DB3 887D00              B   488    							db 088h,07dh,0		005DB6 8900                B   489    ok_msg						db 089h,0			Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 239


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   490    					
005DB8 876000              B   491    							db 087h,060h,0		005DBB 1A627800            B   492    							db 01ah,062h,078h,0
                           B   493    					
005DBF 1D626300            B   494    							db 01dh,062h,063h,0
005DC3 7700                B   495    							db 077h,0			                           B   496    					
005DC5 21996D00            B   497    							db 021h,099h,06dh,0
005DC9 8A508B00            B   498    							db 08ah,050h,08bh,0
005DCD 6F71706E 00         B   499    							db 06fh,071h,070h,0
005DD2 763600              B   500    no_vols_msg					db 076h,036h,0		005DD5 97A66300            B   501    none_found_msg				db 097h,0a6h,063h,0
                           B   502    							
005DD9 B62100              B   503    							db 0b6h,021h,0		005DDC A9316708 AA00       B   504    							db 0a9h,031h,067h,0
005DE2 21AC00              B   505    							db 021h,0ach,0		                           B   506    							
005DE5 766F00              B   507    							db 076h,06fh,0		005DE8 746F00              B   508    							db 074h,06fh,0		005DEB 66676800            B   509    							db 066h,067h,068h,0
005DEF BD1A00              B   510    							db 0bdh,01ah,0		005DF2 1A62B300            B   511    							db 01ah,062h,0b3h,0
005DF6 1A7C00              B   512    							db 01ah,07ch,0		005DF9 A17C00              B   513    							db 0a1h,07ch,0		                           B   514    							
005DFC FF                  B   515    							db 0ffh				                           B   516    
                           B   517    ;----------------------------------------------
                           B   518    
005DFD                     B   519    kernal_error_code_translation
                           B   520    
005DFD 242D2E14 08110F2A   B   521    					db 24h,2dh,2eh,14h, 08h,11h
005E05 2F303132 331F 
                           B   522    					
005E0B                     B   523    fs_error_code_translation
                           B   524    
005E0B 00010203 04050607   B   525    					db 00h,01h,02h,03h,04h,05h,
005E13 08090A0B 0C0D1321 
005E1B 22232425 260E0000   B   526    					db 22h,23h,24h,25h,26h,0eh,
                           B   527    
                           B   528    
                           B   529    ;----------------------------------------------
                           B   530    ; Scancode to ASCII keymaps
                           B   531    ;----------------------------------------------
                           B   532    
                           C     0    include	'UK_keymap.asm'
005E23                     C     1    keymap:
005E23 00000000 00000000   C     2                    db 000h,000h,000h,000h,000h,000
005E2B 00000000 00006000 
005E33 00000000 00713100   C     3                    db 000h,000h,000h,000h,000h,071
005E3B 00007A73 61773200 
005E43 00637864 65343300   C     4                    db 000h,063h,078h,064h,065h,034
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 240


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\UK_keymap.asm
005E4B 00207666 74723500 
005E53 006E6268 67793600   C     5                    db 000h,06Eh,062h,068h,067h,079
005E5B 00006D6A 75373800 
005E63 002C6B69 6F303900   C     6                    db 000h,02Ch,06Bh,069h,06Fh,030
005E6B 002E2F6C 3B702D00 
005E73 00002700 5B3D0000   C     7                    db 000h,000h,027h,000h,05Bh,03D
005E7B 0000005D 00230000 
005E83 005C0000 00000000   C     8                    db 000h,05Ch,000h,000h,000h,000
005E8B 00000000 00000000 
005E93 AC000000 00000051   C     9                    db 0ACh,000h,000h,000h,000h,000
005E9B 21000000 5A534157 
005EA3 22000043 58444524   C    10                    db 022h,000h,000h,043h,058h,044
005EAB A3000020 56465452 
005EB3 2500004E 42484759   C    11                    db 025h,000h,000h,04Eh,042h,048
005EBB 5E000000 4D4A5526 
005EC3 2A00003C 4B494F29   C    12                    db 02Ah,000h,000h,03Ch,04Bh,049
005ECB 2800003E 3F4C3A50 
005ED3 5F000000 40007B2B   C    13                    db 05Fh,000h,000h,000h,040h,000
005EDB 00000000 007D007E 
005EE3 0000007C 00000000   C    14                    db 000h,000h,000h,07Ch,000h,000
005EEB 00000000 00000000 
005EF3 00000000 00000000   C    15                    db 000h,000h,000h,000h,000h,000
005EFB 00000000 00000000 
005F03 00000000 00000000   C    16                    db 000h,000h,000h,000h,000h,000
005F0B 00000000 00000000 
005F13 00000000 00000000   C    17                    db 000h,000h,000h,000h,000h,000
005F1B 00000000 00000000 
005F23 00000000 00000000   C    18                    db 000h,000h,000h,000h,000h,000
005F2B 00000000 00000000 
005F33 00000000 00000000   C    19                    db 000h,000h,000h,000h,000h,000
005F3B 00000000 00000000 
005F43 00000000 0000       C    20                    db 000h,000h,000h,000h,000h,000
                           B   534    
       00005E23            B   535    unshifted_keymap equ keymap+00h
       00005E85            B   536    shifted_keymap   equ keymap+62h
       00005EE7            B   537    alted_keymap	 equ keymap+c4h
                           B   538    	
                           B   539    ;----------------------------------------------
                           B   540    
005F49 00                  B   541    ui_index				db 0				; u
005F4A 00                  B   542    ui_maxchars				db 0				; "
005F4B 000000              B   543    ui_string_addr			dw24 0				; "
                           B   544    
                           B   545    ;----------------------------------------------
                           B   546    ; OS Display parameters
                           B   547    ;----------------------------------------------
                           B   548    
005F4E 00                  B   549    video_mode				db 0
005F4F 0700                B   550    current_pen				dw 07h				; C
005F51 0000                B   551    background_colour		dw 00h				; F
                           B   552    
005F53 00000F00 000F0F0F   B   553    pen_palette				dw 0000h,000fh,0f00h,0f
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 241


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005F5B F000FF00 F00FFF0F 
005F63 55059909 CC0C710F   B   554    						dw 0555h,0999h,0ccch,0f
005F6B 7F00F80D 40088C03 
                           B   555    
005F73 00                  B   556    plotchar_colour			db 0				; c
                           B   557    
005F74 00                  B   558    char_under_cursor		db 0			
005F75 00                  B   559    cursor_present			db 0				; 1
005F76 00                  B   560    overwrite_mode			db 0
005F77 00                  B   561    cursor_image_char		db 0
                           B   562    
                           B   563    ;----------------------------------------------
                           B   564    
005F78                     B   565    display_parameters
                           B   566    
005F78 00                  B   567    video_doubling			db 0
005F79 000000              B   568    charmap_rows			dw24 0					005F7C 000000              B   569    charmap_columns			dw24 0				
                           B   570    
                           B   571    ;----------------------------------------------
                           B   572    
005F7F                     B   573    vmode_parameter_list
                           B   574    
005F7F 00503C              B   575    				db 00b, 80,60	; vmode 0 (vide
005F82 01501E              B   576    				db 01b, 80,30	; vmode 1
005F85 02283C              B   577    				db 10b, 40,60	; vmode 2	
005F88 03281E              B   578    				db 11b, 40,30	; vmode 3
                           B   579    				
                           B   580    ;==============================================
                           B   581    ;  Serial Routine Data
                           B   582    ;==============================================
                           B   583    
005F8B 000000              B   584    serial_ez80_address		dw24 0
005F8E 000000              B   585    serial_file_length		dw24 0
005F91 000000              B   586    serial_fn_addr			dw24 0
005F94 00 00 00 00 00 00   B   587    serial_filename			blkb 18,0		
005F9A 00 00 00 00 00 00 
005FA0 00 00 00 00 00 00 
005FA6 00                  B   588    serial_fn_length		db 0
005FA7 00                  B   589    serial_timeout			db 0
                           B   590    
005FA8 00 00 00 00 00 00   B   591    serial_fileheader		blkb 20,0
005FAE 00 00 00 00 00 00 
005FB4 00 00 00 00 00 00 
005FBA 00 00 
005FBC 5A383050 2E464845   B   592    serial_header_id		db "Z80P.FHEADER"		005FC4 41444552 
005FC8 00                  B   593    serial_transfer_started	db 0
                           B   594    
005FC9 00                  B   595    anim_wait_count			db 0
                           B   596    
                           B   597    ;==============================================
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 242


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   598    
005FCA F3C8                B   599    intellimouse_seq	db 0f3h,200
005FCC F364                B   600    					db 0f3h,100
005FCE F350                B   601    					db 0f3h,80
                           B   602    
005FD0 E803                B   603    mouse_settings_seq	db 0e8h,default_resolution
005FD2 E6                  B   604    					db default_scaling
005FD3 F364                B   605    					db 0f3h,default_sample_rate
005FD5 F4                  B   606    					db 0f4h
                           B   607    					
                           B   608    ;----------------------------------------------
                           B   609    ; FILE SYSTEM RELATED VARIABLES
                           B   610    ;----------------------------------------------
                           B   611    
005FD6 00                  B   612    boot_drive			db 0
                           B   613    
005FD7 00                  B   614    current_volume		db 0
                           B   615    	
005FD8 00                  B   616    current_driver		db 0			;normally u
                           B   617    
005FD9 00                  B   618    device_count		db 0			;IE: the nu
                           B   619    
005FDA 00                  B   620    volume_count		db 0
                           B   621    				
005FDB 20564F4C 303A00     B   622    vol_txt				db " VOL0:",0	;space pref
005FE2 44455630 3A00       B   623    dev_txt				db "DEV0:",0
                           B   624    
005FE8 000000              B   625    sector_rd_wr_addr	dw24 0
                           B   626    
                           B   627    
                           B   628    ;==============================================
                           B   629    
005FEB                     B   630    volume_dir_clusters
                           B   631    
005FEB 00 00 00 00 00 00   B   632    					blkb max_volumes*3,0
005FF1 00 00 00 00 00 00 
005FF7 00 00 00 00 00 00 
005FFD 00 00 00 00 00 00 
                           B   633    	
006003                     B   634    volume_mount_list
                           B   635    
006003 00 00 00 00 00 00   B   636    					blkb max_volumes*16,0
006009 00 00 00 00 00 00 
00600F 00 00 00 00 00 00 
006015 00 00 00 00 00 00 
00601B 00 00 00 00 00 00 
006021 00 00 00 00 00 00 
006027 00 00 00 00 00 00 
00602D 00 00 00 00 00 00 
006033 00 00 00 00 00 00 
006039 00 00 00 00 00 00 
00603F 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 243


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
006045 00 00 00 00 00 00 
00604B 00 00 00 00 00 00 
006051 00 00 00 00 00 00 
006057 00 00 00 00 00 00 
00605D 00 00 00 00 00 00 
006063 00 00 00 00 00 00 
006069 00 00 00 00 00 00 
00606F 00 00 00 00 00 00 
006075 00 00 00 00 00 00 
00607B 00 00 00 00 00 00 
006081 00 00 
                           B   637    
                           B   638    ; Each entry is 16 bytes in the form:
                           B   639    
                           B   640    ; OFFSETS
                           B   641    ; -------
                           B   642    ; $00 - Volume is present (0/1)
                           B   643    ; $01 - Volume's host driver number (1 byte)	                           B   644    ; $02 - [reserved]
                           B   645    ; $03 - [reserved]
                           B   646    ; $04 - Volume's capacity in sectors (3 bytes)
                           B   647    ; $07 - Partition number on host drive (0/1/2/3
                           B   648    ; $08 - Offset in sectors from MBR to partition
                           B   649    ; $0c - [reserved]
                           B   650    ; $0d - [reserved]	
                           B   651    ; $0e - [reserved]
                           B   652    ; $0f - [reserved]
                           B   653    
                           B   654    ;==============================================
                           B   655    
006083                     B   656    host_device_hardware_info
                           B   657    
006083 00 00 00 00 00 00   B   658    					blkb 32*4,0
006089 00 00 00 00 00 00 
00608F 00 00 00 00 00 00 
006095 00 00 00 00 00 00 
00609B 00 00 00 00 00 00 
0060A1 00 00 00 00 00 00 
0060A7 00 00 00 00 00 00 
0060AD 00 00 00 00 00 00 
0060B3 00 00 00 00 00 00 
0060B9 00 00 00 00 00 00 
0060BF 00 00 00 00 00 00 
0060C5 00 00 00 00 00 00 
0060CB 00 00 00 00 00 00 
0060D1 00 00 00 00 00 00 
0060D7 00 00 00 00 00 00 
0060DD 00 00 00 00 00 00 
0060E3 00 00 00 00 00 00 
0060E9 00 00 00 00 00 00 
0060EF 00 00 00 00 00 00 
0060F5 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 244


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
0060FB 00 00 00 00 00 00 
006101 00 00 
                           B   659    
                           B   660    ; Each entry is 32 bytes..
                           B   661    ;
                           B   662    ; OFFSETS
                           B   663    ; -------
                           B   664    ; $00 - Device driver number
                           B   665    ; $01 - Device's TOTAL capacity in sectors (4 b
                           B   666    ; $05 - Zero terminated hardware name (22 ASCII
                           B   667    ; (remaining bytes to $1F currently unused)
                           B   668    
                           B   669    ;----------------------------------------------
                           B   670    
006103 000000              B   671    dhwn_temp_pointer		dw24 0
                           B   672    
006106 00                  B   673    partition_temp			db 0
006107 00                  B   674    vols_on_device_temp		db 0
006108 00                  B   675    sys_driver_backup		db 0
006109 00                  B   676    os_quiet_mode			db 0
                           B   677    
00610A 026A00              B   678    default_load_addr		dw24 os_max_addr
                           B   679    
                           B   680    ;----------------------------------------------
                           B   681    
00610D 00 00 00 00 00 00   B   682    time_data				blkb	7,0
006113 00 
                           B   683    
006114 00                  B   684    frozen					db 0
006115 01                  B   685    first_run				db 1
006116 01                  B   686    devices_connected		db 1					                           B   687    
                           B   688    ;----------------------------------------------
                           B   689    
006117 026A00              B   690    sysram_os_highest		dw24 os_max_addr
00611A 000080              B   691    vram_a_os_highest		dw24 vram_a_addr
00611D 0000C0              B   692    vram_b_os_highest		dw24 vram_b_addr
                           B   693    
006120 000000              B   694    charmap_size			dw24 0
                           B   695    
                           B   696    ;----------------------------------------------
                           B   697    
006123 00                  B   698    store_a1				db 0		
006124 000000              B   699    store_bc1				dw24 0
006127 000000              B   700    store_de1				dw24 0
00612A 000000              B   701    store_hl1				dw24 0
00612D 00                  B   702    store_a2				db 0
00612E 000000              B   703    store_bc2				dw24 0
006131 000000              B   704    store_de2				dw24 0
006134 000000              B   705    store_hl2				dw24 0
006137 000000              B   706    store_ix				dw24 0
00613A 000000              B   707    store_iy				dw24 0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 245


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
00613D 000000              B   708    store_pc				dw24 0		;only relev
006140 000000              B   709    store_spl				dw24 0
006143 0000                B   710    store_sps				dw 0
006145 00                  B   711    store_mbase				db 0
006146 00                  B   712    store_f	 				db 0
006147 00                  B   713    store_adl				db 0
                           B   714    
                           B   715    ;----------------------------------------------
006148                     B   716    os_variables
                           B   717    ;----------------------------------------------
                           B   718    
006148 000000              B   719    kernal_ix_cache			dw24 0
                           B   720    
00614B 00                  B   721    store_registers			db 0
00614C 000000              B   722    com_start_addr			dw24 0
                           B   723    
00614F 00 00 00 00 00 00   B   724    temp_string				blkb max_buffer_chars+2
006155 00 00 00 00 00 00 
00615B 00 00 00 00 00 00 
006161 00 00 00 00 00 00 
006167 00 00 00 00 00 00 
00616D 00 00 00 00 00 00 
006173 00 00 00 00 00 00 
006179 00 00 00 00 00 00 
00617F 00 00 00 00 00 00 
006185 00 00 00 00 00 00 
00618B 00 00 00 00 00 00 
006191 00 00 00 00 00 00 
006197 00 00 00 00 00 00 
00619D 00 00 00 00 
0061A1 00 00 00 00 00 00   B   725    script_fn				blkb 13,0
0061A7 00 00 00 00 00 00 
0061AD 00 
                           B   726    
0061AE 00                  B   727    sector_lba0				db 0			; keep 
0061AF 00                  B   728    sector_lba1				db 0
0061B0 00                  B   729    sector_lba2				db 0
0061B1 00                  B   730    sector_lba3				db 0
                           B   731    
                           B   732    ;----------------------------------------------
                           B   733    
0061B2 000000              B   734    cursor_pos				dw24 0			; 3rd b
                           B   735    
       000061B2            B   736    cursor_y 				equ cursor_pos
       000061B3            B   737    cursor_x 				equ cursor_pos+1
                           B   738    						
0061B5 00                  B   739    cursorflashtimer		db 0
0061B6 00                  B   740    cursor_status			db 0
0061B7 00                  B   741    os_linecount			db 0
                           B   742    		
0061B8 000000              B   743    mem_mon_addr			dw24 0
0061BB 000000              B   744    cmdop_start_address		dw24 0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 246


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
0061BE 000000              B   745    cmdop_end_address		dw24 0
0061C1 000000              B   746    copy_dest_address		dw24 0
0061C4 000000              B   747    hex_address				dw24 0
                           B   748    
0061C7 000000              B   749    find_hexstringascii 	dw24 0
0061CA 000000              B   750    xrr_temp				dw24 0
0061CD 00                  B   751    temphex					db 0
0061CE 00                  B   752    fillbyte				db 0 
0061CF 00                  B   753    ui_im_cache				db 0
                           B   754    
0061D0 00 00 00 00 00 00   B   755    commandstring			blkb max_buffer_chars+2
0061D6 00 00 00 00 00 00 
0061DC 00 00 00 00 00 00 
0061E2 00 00 00 00 00 00 
0061E8 00 00 00 00 00 00 
0061EE 00 00 00 00 00 00 
0061F4 00 00 00 00 00 00 
0061FA 00 00 00 00 00 00 
006200 00 00 00 00 00 00 
006206 00 00 00 00 00 00 
00620C 00 00 00 00 00 00 
006212 00 00 00 00 00 00 
006218 00 00 00 00 00 00 
00621E 00 00 00 00 
006222 00 00 00 00 00 00   B   756    output_line				blkb max_buffer_chars+2
006228 00 00 00 00 00 00 
00622E 00 00 00 00 00 00 
006234 00 00 00 00 00 00 
00623A 00 00 00 00 00 00 
006240 00 00 00 00 00 00 
006246 00 00 00 00 00 00 
00624C 00 00 00 00 00 00 
006252 00 00 00 00 00 00 
006258 00 00 00 00 00 00 
00625E 00 00 00 00 00 00 
006264 00 00 00 00 00 00 
00626A 00 00 00 00 00 00 
006270 00 00 00 00 
                           B   757    				
006274 000000              B   758    os_args_loc				dw24 0
006277 000000              B   759    os_args_pos_cache		dw24 0
                           B   760    
00627A 000000              B   761    os_dir_block_cache  	dw24 0
00627D 000000              B   762    os_extcmd_jmp_addr		dw24 0
                           B   763    
                           B   764    
006280 000000              B   765    script_dir				dw24 0
006283 000000              B   766    script_file_offset		dw24 0
006286 000000              B   767    script_length			dw24 0
                           B   768    
006289 00                  B   769    script_flags			db 0
                           B   770    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 247


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
00628A 00 00 00 00 00 00   B   771    if_name_txt				blkb max_if_chars+2,0
006290 00 00 00 00 00 00 
006296 00 00 00 00 00 00 
00629C 00 00 00 00 00 00   B   772    if_value_txt			blkb max_if_chars+2,0
0062A2 00 00 00 00 00 00 
0062A8 00 00 00 00 00 00 
0062AE 00 00 00 00 00 00   B   773    if_label_txt			blkb max_if_chars+2,0
0062B4 00 00 00 00 00 00 
0062BA 00 00 00 00 00 00 
                           B   774    
                           B   775    
0062C0 0000                B   776    char_to_print			db 0,0	; zero terminat
                           B   777    
                           B   778    ;----------------------------------------------
                           B   779    ; Keyboard buffer and registers
                           B   780    ;----------------------------------------------
                           B   781    
0062C2 00 00 00 00 00 00   B   782    scancode_buffer			blkb 32,0
0062C8 00 00 00 00 00 00 
0062CE 00 00 00 00 00 00 
0062D4 00 00 00 00 00 00 
0062DA 00 00 00 00 00 00 
0062E0 00 00 
                           B   783    
0062E2 00                  B   784    key_buf_wr_idx			db 0
0062E3 00                  B   785    key_buf_rd_idx			db 0
0062E4 00                  B   786    key_release_mode		db 0		
0062E5 00                  B   787    not_currently_used		db 0
0062E6 00                  B   788    key_mod_flags			db 0
0062E7 00                  B   789    current_scancode		db 0
0062E8 00                  B   790    current_asciicode		db 0
                           B   791    
                           B   792    ;----------------------------------------------
                           B   793    ; Mouse related registers
                           B   794    ;----------------------------------------------
                           B   795    
0062E9 00                  B   796    mouse_id				db 0
0062EA 00                  B   797    mouse_packet_size		db 0
                           B   798    
0062EB 00 00 00 00         B   799    mouse_packet			blkb 4,0			; t
0062EF 00                  B   800    mouse_packet_index		db 0				;
0062F0 00                  B   801    mouse_buttons			db 0				;
0062F1 000000              B   802    mouse_disp_x			dw24 0				; c
0062F4 000000              B   803    mouse_disp_y			dw24 0				; c
0062F7 00                  B   804    mouse_wheel				db 0				; m
0062F8 00                  B   805    mouse_updated			db 0
                           B   806    
0062F9 000000              B   807    mouse_window_size_x		dw24 0				; t
0062FC 000000              B   808    mouse_window_size_y		dw24 0
0062FF 000000              B   809    mouse_abs_x				dw24 0
006302 000000              B   810    mouse_abs_y				dw24 0
006305 000000              B   811    mouse_disp_x_old		dw24 0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 248


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
006308 000000              B   812    mouse_disp_y_old		dw24 0
00630B 000000              B   813    mouse_disp_x_buffer		dw24 0
00630E 000000              B   814    mouse_disp_y_buffer		dw24 0
006311 00                  B   815    mouse_new_window		db 0
                           B   816    
                           B   817    ;----------------------------------------------
       000061B2            B   818    first_os_var			equ cursor_y
006312 00                  B   819    last_os_var				db 0
                           B   820    ;----------------------------------------------
                           B   821    
                           B   822    ;==============================================
                           B   823    ; Environment variables
                           B   824    ;==============================================
                           B   825    
006313 4552524F 523D3030   B   826    envar_list				db "ERROR=00",0
00631B 00 
00631C FF                  B   827    first_ext_ev_entry		db 0ffh
00631D 00 00 00 00 00 00   B   828    						blkb envar_buffer_size,
006323 00 00 00 00 00 00 
006329 00 00 00 00 00 00 
00632F 00 00 00 00 00 00 
006335 00 00 00 00 00 00 
00633B 00 00 00 00 00 00 
006341 00 00 00 00 00 00 
006347 00 00 00 00 00 00 
00634D 00 00 00 00 00 00 
006353 00 00 00 00 00 00 
006359 00 00 00 00 00 00 
00635F 00 00 00 00 00 00 
006365 00 00 00 00 00 00 
00636B 00 00 00 00 00 00 
006371 00 00 00 00 00 00 
006377 00 00 00 00 00 00 
00637D 00 00 00 00 00 00 
006383 00 00 00 00 00 00 
006389 00 00 00 00 00 00 
00638F 00 00 00 00 00 00 
006395 00 00 00 00 00 00 
00639B 00 00 00 00 00 00 
0063A1 00 00 00 00 00 00 
0063A7 00 00 00 00 00 00 
0063AD 00 00 00 00 00 00 
0063B3 00 00 00 00 00 00 
0063B9 00 00 00 00 00 00 
0063BF 00 00 00 00 00 00 
0063C5 00 00 00 00 00 00 
0063CB 00 00 00 00 00 00 
0063D1 00 00 00 00 00 00 
0063D7 00 00 00 00 00 00 
0063DD 00 00 00 00 00 00 
0063E3 00 00 00 00 00 00 
0063E9 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 249


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
0063EF 00 00 00 00 00 00 
0063F5 00 00 00 00 00 00 
0063FB 00 00 00 00 00 00 
006401 00 00 00 00 00 00 
006407 00 00 00 00 00 00 
00640D 00 00 00 00 00 00 
006413 00 00 00 00 00 00 
006419 00 00 00 00 
                           B   829    
00641D 1C6300              B   830    envar_top_loc			dw24 first_ext_ev_entry
                           B   831    
                           B   832    ;==============================================
                           B   833    
                           B     0    	include		'phil_font_packed.asm'			006420                     B     1    packed_font_start
006420 010100FF 01000918   B     2    				db 001h,001h,000h,0FFh,001h,000
006428 3C3C1800 181800EE 
006430 EE660100 056C6CFE   B     3                    db 0EEh,066h,001h,000h,005h,06C
006438 6CFE6C6C 00187EE0 
006440 7C0EFC18 00C6CE1C   B     4                    db 07Ch,00Eh,0FCh,018h,000h,0C6
006448 3870E6C6 0078ECEC 
006450 78EDEE7D 000C1C18   B     5                    db 078h,0EDh,0EEh,07Dh,000h,00C
006458 01000518 30016003 
006460 30180030 18010C03   B     6                    db 030h,018h,000h,030h,018h,001
006468 18300010 5438FE38 
006470 54100000 18187E18   B     7                    db 054h,010h,000h,000h,018h,018
006478 18010007 38387001 
006480 00037E01 00091818   B     8                    db 000h,003h,07Eh,001h,000h,009
006488 0000060E 1C3870E0 
006490 007CE6EE FEF6E67C   B     9                    db 000h,07Ch,0E6h,0EEh,0FEh,0F6
006498 00387801 38047C00 
0064A0 7CEE0E7C E0E0FE00   B    10                    db 07Ch,0EEh,00Eh,07Ch,0E0h,0E0
0064A8 FE0C180C 0ECE7C00 
0064B0 1E3E76E6 FF060600   B    11                    db 01Eh,03Eh,076h,0E6h,0FFh,006
0064B8 FEE0FC01 0E03FC00 
0064C0 7EE0FC01 E6037C00   B    12                    db 07Eh,0E0h,0FCh,001h,0E6h,003
0064C8 FE060C18 01380300 
0064D0 7CE6E67C E6E67C00   B    13                    db 07Ch,0E6h,0E6h,07Ch,0E6h,0E6
0064D8 7C01CE03 7E0E7C01 
0064E0 00031818 00181801   B    14                    db 000h,003h,018h,018h,000h,018
0064E8 00033030 00303060 
0064F0 0E1C3870 381C0E01   B    15                    db 00Eh,01Ch,038h,070h,038h,01C
0064F8 00037E00 7E010003 
006500 70381C0E 1C387000   B    16                    db 070h,038h,01Ch,00Eh,01Ch,038
006508 7CEE0E3C 38003800 
006510 7CE601EE 03E07C00   B    17                    db 07Ch,0E6h,001h,0EEh,003h,0E0
006518 7CE6E6FE 01E60300 
006520 FCE6E6FC E6E6FC00   B    18                    db 0FCh,0E6h,0E6h,0FCh,0E6h,0E6
006528 7CE601E0 03E67C00 
006530 FC01E605 FC00FEE0   B    19                    db 0FCh,001h,0E6h,005h,0FCh,000
006538 E0F8E0E0 FE00FEE0 
006540 E0F801E0 03007CE6   B    20                    db 0E0h,0F8h,001h,0E0h,003h,000
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 250


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\phil_font_packed.asm
006548 E0EEE6E6 7C0001E6 
006550 03FE01E6 03007C01   B    21                    db 003h,0FEh,001h,0E6h,003h,000
006558 38057C00 7E011C04 
006560 DC7800E6 ECF8EC01   B    22                    db 0DCh,078h,000h,0E6h,0ECh,0F8
006568 E6030001 E006FE00 
006570 C6EEFED6 01C60300   B    23                    db 0C6h,0EEh,0FEh,0D6h,001h,0C6
006578 E6F6FEFE EEE6E600 
006580 7C01E605 7C00FC01   B    24                    db 07Ch,001h,0E6h,005h,07Ch,000
006588 E603FCE0 E0007C01 
006590 E603EAEC 7600FC01   B    25                    db 0E6h,003h,0EAh,0ECh,076h,000
006598 E603FCE6 E6007CEE 
0065A0 E07C0EEE 7C00FE01   B    26                    db 0E0h,07Ch,00Eh,0EEh,07Ch,000
0065A8 38060001 E6067C00 
0065B0 01E60574 380001C6   B    27                    db 001h,0E6h,005h,074h,038h,000
0065B8 04D6FE6C 00E6E66C 
0065C0 3874E6E6 0001E604   B    28                    db 038h,074h,0E6h,0E6h,000h,001
0065C8 7E06FC00 FE0E1C38 
0065D0 70E0FE00 3C013005   B    29                    db 070h,0E0h,0FEh,000h,03Ch,001
0065D8 3C00C0E0 70381C0E 
0065E0 06007801 18057800   B    30                    db 006h,000h,078h,001h,018h,005
0065E8 10386CC6 01000BFE 
0065F0 381C0100 087C067E   B    31                    db 038h,01Ch,001h,000h,008h,07C
0065F8 E67E0000 E0E0FCE6 
006600 E6FC0100 037C01E0   B    32                    db 0E6h,0FCh,001h,000h,003h,07C
006608 037C0000 06067EE6 
006610 E67E0100 037CE6FE   B    33                    db 0E6h,07Eh,001h,000h,003h,07C
006618 E07C0000 3E70FC01 
006620 70030100 037EE6E6   B    34                    db 070h,003h,001h,000h,003h,07E
006628 7E067C00 E0E0FC01 
006630 E6030000 38007838   B    35                    db 0E6h,003h,000h,000h,038h,000
006638 387C0000 1C00011C 
006640 047800E0 EEECF8EC   B    36                    db 004h,078h,000h,0E0h,0EEh,0EC
006648 EE000078 0138047C 
006650 010003EC FED6C6C6   B    37                    db 001h,000h,003h,0ECh,0FEh,0D6
006658 010003FC 01E60401 
006660 00037C01 E6037C01   B    38                    db 000h,003h,07Ch,001h,0E6h,003
006668 0003FCE6 E6FCE0E0 
006670 00007EE6 E67E0606   B    39                    db 000h,000h,07Eh,0E6h,0E6h,07E
006678 0000DCE6 01E00301 
006680 00037EF0 7C1EFC00   B    40                    db 000h,003h,07Eh,0F0h,07Ch,01E
006688 00387E01 38031E01 
006690 000301E6 047E0100   B    41                    db 000h,003h,001h,0E6h,004h,07E
006698 0301E603 6C380100 
0066A0 03E2EAFE 7C340100   B    42                    db 003h,0E2h,0EAh,0FEh,07Ch,034
0066A8 03E67C38 7CE60100 
0066B0 0301E603 7E0CF800   B    43                    db 003h,001h,0E6h,003h,07Eh,00C
0066B8 00FE1C38 70FE003C 
0066C0 30306030 303C0001   B    44                    db 030h,030h,060h,030h,030h,03C
0066C8 18070078 18180C18 
0066D0 18780033 7ECC0100   B    45                    db 018h,078h,000h,033h,07Eh,0CC
0066D8 0501FE07 0100FF01 
0066E0 001A1C3A 70FC70F2   B    46                    db 000h,01Ah,01Ch,03Ah,070h,0FC
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 251


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\phil_font_packed.asm
0066E8 BC010029 7CC6BAA2 
0066F0 BAC67C01 00147E06   B    47                    db 0BAh,0C6h,07Ch,001h,000h,014
0066F8 060100FF 0100FF01 
006700 009C                B    48                    db 000h,09Ch
006702                     B    49    packed_font_end
                           A  3253    
006702 00 00 00 00 00 00   A  3254    sector_buffer	blkb 512,0
006708 00 00 00 00 00 00 
00670E 00 00 00 00 00 00 
006714 00 00 00 00 00 00 
00671A 00 00 00 00 00 00 
006720 00 00 00 00 00 00 
006726 00 00 00 00 00 00 
00672C 00 00 00 00 00 00 
006732 00 00 00 00 00 00 
006738 00 00 00 00 00 00 
00673E 00 00 00 00 00 00 
006744 00 00 00 00 00 00 
00674A 00 00 00 00 00 00 
006750 00 00 00 00 00 00 
006756 00 00 00 00 00 00 
00675C 00 00 00 00 00 00 
006762 00 00 00 00 00 00 
006768 00 00 00 00 00 00 
00676E 00 00 00 00 00 00 
006774 00 00 00 00 00 00 
00677A 00 00 00 00 00 00 
006780 00 00 00 00 00 00 
006786 00 00 00 00 00 00 
00678C 00 00 00 00 00 00 
006792 00 00 00 00 00 00 
006798 00 00 00 00 00 00 
00679E 00 00 00 00 00 00 
0067A4 00 00 00 00 00 00 
0067AA 00 00 00 00 00 00 
0067B0 00 00 00 00 00 00 
0067B6 00 00 00 00 00 00 
0067BC 00 00 00 00 00 00 
0067C2 00 00 00 00 00 00 
0067C8 00 00 00 00 00 00 
0067CE 00 00 00 00 00 00 
0067D4 00 00 00 00 00 00 
0067DA 00 00 00 00 00 00 
0067E0 00 00 00 00 00 00 
0067E6 00 00 00 00 00 00 
0067EC 00 00 00 00 00 00 
0067F2 00 00 00 00 00 00 
0067F8 00 00 00 00 00 00 
0067FE 00 00 00 00 00 00 
006804 00 00 00 00 00 00 
00680A 00 00 00 00 00 00 
006810 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 252


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
006816 00 00 00 00 00 00 
00681C 00 00 00 00 00 00 
006822 00 00 00 00 00 00 
006828 00 00 00 00 00 00 
00682E 00 00 00 00 00 00 
006834 00 00 00 00 00 00 
00683A 00 00 00 00 00 00 
006840 00 00 00 00 00 00 
006846 00 00 00 00 00 00 
00684C 00 00 00 00 00 00 
006852 00 00 00 00 00 00 
006858 00 00 00 00 00 00 
00685E 00 00 00 00 00 00 
006864 00 00 00 00 00 00 
00686A 00 00 00 00 00 00 
006870 00 00 00 00 00 00 
006876 00 00 00 00 00 00 
00687C 00 00 00 00 00 00 
006882 00 00 00 00 00 00 
006888 00 00 00 00 00 00 
00688E 00 00 00 00 00 00 
006894 00 00 00 00 00 00 
00689A 00 00 00 00 00 00 
0068A0 00 00 00 00 00 00 
0068A6 00 00 00 00 00 00 
0068AC 00 00 00 00 00 00 
0068B2 00 00 00 00 00 00 
0068B8 00 00 00 00 00 00 
0068BE 00 00 00 00 00 00 
0068C4 00 00 00 00 00 00 
0068CA 00 00 00 00 00 00 
0068D0 00 00 00 00 00 00 
0068D6 00 00 00 00 00 00 
0068DC 00 00 00 00 00 00 
0068E2 00 00 00 00 00 00 
0068E8 00 00 00 00 00 00 
0068EE 00 00 00 00 00 00 
0068F4 00 00 00 00 00 00 
0068FA 00 00 00 00 00 00 
006900 00 00 
                           A  3255    
006902 00 00 00 00 00 00   A  3256    scratch_pad		blkb 256,0
006908 00 00 00 00 00 00 
00690E 00 00 00 00 00 00 
006914 00 00 00 00 00 00 
00691A 00 00 00 00 00 00 
006920 00 00 00 00 00 00 
006926 00 00 00 00 00 00 
00692C 00 00 00 00 00 00 
006932 00 00 00 00 00 00 
006938 00 00 00 00 00 00 
00693E 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)22-Aug-11     19:54:17     page: 253


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
006944 00 00 00 00 00 00 
00694A 00 00 00 00 00 00 
006950 00 00 00 00 00 00 
006956 00 00 00 00 00 00 
00695C 00 00 00 00 00 00 
006962 00 00 00 00 00 00 
006968 00 00 00 00 00 00 
00696E 00 00 00 00 00 00 
006974 00 00 00 00 00 00 
00697A 00 00 00 00 00 00 
006980 00 00 00 00 00 00 
006986 00 00 00 00 00 00 
00698C 00 00 00 00 00 00 
006992 00 00 00 00 00 00 
006998 00 00 00 00 00 00 
00699E 00 00 00 00 00 00 
0069A4 00 00 00 00 00 00 
0069AA 00 00 00 00 00 00 
0069B0 00 00 00 00 00 00 
0069B6 00 00 00 00 00 00 
0069BC 00 00 00 00 00 00 
0069C2 00 00 00 00 00 00 
0069C8 00 00 00 00 00 00 
0069CE 00 00 00 00 00 00 
0069D4 00 00 00 00 00 00 
0069DA 00 00 00 00 00 00 
0069E0 00 00 00 00 00 00 
0069E6 00 00 00 00 00 00 
0069EC 00 00 00 00 00 00 
0069F2 00 00 00 00 00 00 
0069F8 00 00 00 00 00 00 
0069FE 00 00 00 00 
                           A  3257    
                           A  3258    ;==============================================
                           A  3259    	
006A02 00                  A  3260    os_max_addr		db 0							                           A  3261    	
                           A  3262    
                           A  3263    ;==============================================
                           A  3264    
                           A  3265    				end	
                           A  3266    				
                           A  3267    ;==============================================
                           A  3268    	


Errors: 0
Warnings: 0
Lines Assembled: 12658
