Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:   1


PC     Object              I  Line    Source 
                           A     1    
                           A     2    ; PROSE for EZ80P by Phil Ruston 2011
                           A     3    ; Compile with Zilog ZDS II
                           A     4    
                           A     5    ;----------------------------------------------
                           A     6    	.assume ADL = 1
                           A     7    ;----------------------------------------------
                           A     8    
                           B     0    	include	'ez80_cpu_equates.asm'
                           B     1    ;--- EZ80 Internal Ports ----------------------
                           B     2    
       0000009A            B     3    PB_DR			equ 09ah
       0000009B            B     4    PB_DDR			equ 09bh
       0000009C            B     5    PB_ALT1			equ 09ch
       0000009D            B     6    PB_ALT2			equ 09dh
                           B     7    
       0000009E            B     8    PC_DR			equ 09eh
       0000009F            B     9    PC_DDR			equ 09fh
       000000A0            B    10    PC_ALT1			equ 0a0h
       000000A1            B    11    PC_ALT2			equ 0a1h
                           B    12    
       000000A2            B    13    PD_DR			equ 0a2h
       000000A3            B    14    PD_DDR			equ 0a3h
       000000A4            B    15    PD_ALT1			equ 0a4h
       000000A5            B    16    PD_ALT2			equ 0a5h
                           B    17    
       000000C0            B    18    UART0_RBR		equ 0c0h
       000000C0            B    19    UART0_THR		equ 0c0h
       000000C0            B    20    UART0_BRG_L		equ 0c0h
       000000C1            B    21    UART0_BRG_H		equ 0c1h
       000000C1            B    22    UART0_IER		equ 0c1h
       000000C2            B    23    UART0_FCTL		equ 0c2h
       000000C3            B    24    UART0_LCTL		equ 0c3h
       000000C4            B    25    UART0_MCTL		equ 0c4h
       000000C5            B    26    UART0_LSR		equ 0c5h
                           B    27    
       000000A8            B    28    CS0_LBR			equ 0a8h			;eZ80 wait 
       000000A9            B    29    CS0_UBR			equ 0a9h
       000000AA            B    30    CS0_CTL			equ 0aah			
       000000AB            B    31    CS1_LBR			equ 0abh			;eZ80 wait 
       000000AC            B    32    CS1_UBR			equ 0ach
       000000AD            B    33    CS1_CTL			equ 0adh
                           B    34    
       00000080            B    35    TMR0_CTL		equ 080h			;timer 0 eq
       00000081            B    36    TMR0_DR_L		equ 081h
       00000081            B    37    TMR0_RR_L		equ 081h
       00000082            B    38    TMR0_DR_H		equ 082h
       00000082            B    39    TMR0_RR_H		equ 082h
       00000092            B    40    TMR_ISS			equ 092h
                           B    41    
       000000ED            B    42    RTC_CTRL		equ 0edh			;RTC equate
       000000EC            B    43    RTC_ACTRL		equ 0ech
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:   2


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80_cpu_equates.asm
       000000E0            B    44    RTC_SEC			equ 0e0h
       000000E1            B    45    RTC_MIN			equ 0e1h
       000000E2            B    46    RTC_HRS			equ 0e2h
       000000E3            B    47    RTC_DOW			equ 0e3h
       000000E4            B    48    RTC_DOM			equ 0e4h
       000000E5            B    49    RTC_MON			equ 0e5h
       000000E6            B    50    RTC_YR			equ 0e6h
       000000E7            B    51    RTC_CEN			equ 0e7h
                           B    52    
                           B    53    ;----------------------------------------------
                           B     0    	include	'amoeba_hardware_equates.asm'
                           B     1    ;-- AMOEBA Hardware equates -------------------
                           B     2    
       00000000            B     3    port_pic_data  			equ 000h
       00000001            B     4    port_pic_ctrl			equ 001h
       00000001            B     5    port_hw_flags			equ 001h
       00000002            B     6    port_sdc_ctrl			equ 002h	; this is a
       00000002            B     7    port_keyboard_data		equ 002h
       00000003            B     8    port_sdc_data		 	equ 003h	
       00000004            B     9    port_memory_paging		equ 004h
       00000005            B    10    port_irq_ctrl			equ 005h
       00000005            B    11    port_irq_flags			equ 005h
       00000006            B    12    port_nmi_ack			equ 006h
       00000007            B    13    port_ps2_ctrl			equ 007h
       00000008            B    14    port_selector			equ 008h
       00000006            B    15    port_mouse_data			equ 006h
       00000009            B    16    port_clear_flags		equ 009h
                           B    17    
       00000000            B    18    sdc_power				equ 0		;(port_sd_c
       00000001            B    19    sdc_cs					equ 1		;(port_sd_c
       00000002            B    20    sdc_speed				equ 2 		;(port_sd_c
                           B    21    
       00000004            B    22    sdc_serializer_busy		equ 4 		;(port_hw_f
       00000005            B    23    vrt						equ 5		;(port_hw_f
                           B    24    
                           B    25    
                           B    26    ;-- Memory locations --------------------------
                           B    27    
       00000000            B    28    sysram_addr				equ 0000000h
       00800000            B    29    vram_a_addr				equ 0800000h
       00C00000            B    30    vram_b_addr				equ 0c00000h
                           B    31    
                           B    32    ;-- Hardware registers ------------------------
                           B    33    
       00FF0000            B    34    hw_palette				equ 0ff0000h
       00FF0800            B    35    hw_sprite_registers		equ 0ff0800h
       00FF1000            B    36    hw_video_parameters		equ 0ff1000h
       00FF1400            B    37    hw_audio_registers		equ 0ff1400h
       00FF1800            B    38    hw_video_settings		equ 0ff1800h
                           B    39    
       00FF1000            B    40    tilemap_parameters		equ hw_video_parameters
       00FF1020            B    41    bitmap_parameters		equ hw_video_parameters
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:   3


PC     Object              I  Line    Source ..\..\Includes\amoeba_hardware_equates.asm
                           B    42    
       00FF1800            B    43    video_control			equ hw_video_settings+0
       00FF1801            B    44    sprite_control			equ hw_video_settings+0
       00FF1802            B    45    bgnd_palette_select		equ hw_video_settings+0
       00FF1803            B    46    sprite_palette_select	equ hw_video_settings+0
       00FF1804            B    47    right_border_position	equ hw_video_settings+0
       00FF1805            B    48    irq_line_lo		equ hw_video_settings+05h
       00FF1806            B    49    irq_line_hi		equ hw_video_settings+06h
                           B    50    
                           B    51    ;----------------------------------------------
                           B     0    	include 'misc_system_equates.asm'
                           B     1    
                           B     2    ;-- System Equates ----------------------------
                           B     3    
       00000A00            B     4    os_location	equ 0a00h
                           B     5    
       00000A14            B     6    prose_return equ os_location + 14h
       00000A20            B     7    prose_kernal equ os_location + 20h
                           B     8    
                           B     9    ;----------------------------------------------
                           A    12    	
                           A    13    ;----------------------------------------------
                           A    14    
       00000036            A    15    prose_version			equ 36h
       00000107            A    16    amoeba_version_required	equ 107h
                           A    17    
       0007FFFF            A    18    sys_mem_top				equ 07ffffh
                           A    19    
                           A    20    ;----------------------------------------------
                           A    21    ; Assembly options
                           A    22    ;----------------------------------------------
                           A    23    
       00000008            A    24    max_volumes				equ 8
                           A    25    
       00000050            A    26    max_buffer_chars		equ 80		; applies t
                           A    27    
                           A    28    ;----------------------------------------------
                           A    29    			
000A00                     A    30    			org os_location
                           A    31    			
000A00 00 00 00 00 00 00   A    32    				blkb 16,0						000A06 00 00 00 00 00 00 
000A0C 00 00 00 00 
                           A    33    			
                           A    34    ;----------------------------------------------
                           A    35    			
000A10 C3 4E 0A 00         A    36    				jp os_first_run					000A14 C3 E3 0E 00         A    37    				jp extcmd_return				000A18 C3000000            A    38    				jp 0							000A1C C3000000            A    39    				jp 0							                           A    40    				
                           A    41    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:   4


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A    42    
                           A    43    ; External apps can call kernal routines by doi
                           A    44    ; Set A to kernal routine number required (see 
                           A    45    ; (this routine is always located at os_locatio
                           A    46    
000A20 D9                  A    47    				exx
000A21 DD22 F4 60 00       A    48    				ld (kernal_ix_cache),ix
000A26 DD21 18 55 00       A    49    				ld ix,kernal_table				000A2B 11030000            A    50    				ld de,3
000A2F 57                  A    51    				ld d,a
000A30 ED5C                A    52    				mlt de
000A32 DD19                A    53    				add ix,de						000A34 DD3700              A    54    				ld ix,(ix)						                           A    55    				
000A37 E3                  A    56    				ex (sp),hl
000A38 7D                  A    57    				ld a,l							000A39 E601                A    58    				and 1							000A3B E3                  A    59    				ex (sp),hl
000A3C D9                  A    60    				exx
000A3D FDE5                A    61    				push iy
000A3F CD 4C 0A 00         A    62    				call kr_jump					000A43 FDE1                A    63    				pop iy							000A45 DD2A F4 60 00       A    64    				ld ix,(kernal_ix_cache)
000A4A 5BC9                A    65    				ret.l							                           A    66    				
000A4C DDE9                A    67    kr_jump			jp (ix)							                           A    68    						
                           A    69    ;----------------------------------------------
                           A    70    
                           A    71    ; *******************
                           A    72    ; *   START UP OS   *
                           A    73    ; *******************
                           A    74    
000A4E                     A    75    os_first_run
                           A    76    	
000A4E B7                  A    77    				or a							000A4F 20 05               A    78    				jr nz,os_cold_start		
000A51 78                  A    79    				ld a,b
000A52 32 82 5F 00         A    80    				ld (boot_drive),a				                           A    81    
000A56                     A    82    os_cold_start
000A56 ED7D                A    83    				stmix							000A58 F3                  A    84    				di								000A59 ED5E                A    85    				im 2							000A5B AF                  A    86    				xor a
000A5C ED6D                A    87    				ld MB,a							000A5E 4031FFFF            A    88    				ld.sis sp,0ffffh				000A62 31FFFF07            A    89    				ld sp,sys_mem_top				                           A    90    
000A66 CD F1 3B 00         A    91    				call disable_irqs
000A6A CD 95 3D 00         A    92    				call disable_all_nmis
                           A    93    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:   5


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000A6E 3A C1 60 00         A    94    				ld a,(first_run)				000A72 B7                  A    95    				or a
000A73 28 11               A    96    				jr z,dont_resetkb
000A75 CD 38 41 00         A    97    				call init_keyboard
000A79 28 06               A    98    				jr z,kb_ok
000A7B 21 C2 60 00         A    99    				ld hl,devices_connected
000A7F CB86                A   100    				res 0,(hl)
000A81 AF                  A   101    kb_ok			xor a
000A82 32 C1 60 00         A   102    				ld (first_run),a
000A86                     A   103    dont_resetkb
                           A   104    				
000A86 21 CC 63 00         A   105    				ld hl,packed_font_start
000A8A 11000080            A   106    				ld de,vram_a_addr
000A8E 01 E2 02 00         A   107    				ld bc,packed_font_end-packed_fo
000A92 CD 11 16 00         A   108    				call unpack_rle
000A96 CD D5 35 00         A   109    				call convert_font
                           A   110    
000A9A CD 26 37 00         A   111    				call test_amoeba_vers
                           A   112    				
000A9E 21 F4 60 00         A   113    				ld hl,os_variables				000AA2 01 CA 01 00         A   114    				ld bc,last_os_var-os_variables
000AA6 AF                  A   115    				xor a
000AA7 CD C6 15 00         A   116    				call os_bchl_memfill
                           A   117    	
000AAB CD 77 40 00         A   118    				call hwsc_default_hw_settings
000AAF CD CC 43 00         A   119    				call hwsc_disable_audio
                           A   120    				
000AB3 3A FA 5E 00         A   121    				ld a,(video_mode)
000AB7 CD 9F 15 00         A   122    				call os_set_vmode				                           A   123    				
000ABB 21 FF 55 00         A   124    				ld hl,welcome_message			000ABF CD 5A 0F 00         A   125    				call os_print_string
                           A   126    				
000AC3 CD 16 37 00         A   127    				call os_get_mem_high			000AC7 EB                  A   128    				ex de,hl
000AC8 CD 3A 13 00         A   129    				call os_show_hex_address
                           A   130    
000ACC CD 02 14 00         A   131    				call os_new_line
000AD0 CD 02 14 00         A   132    				call os_new_line
000AD4 CD 7A 32 00         A   133    				call os_cmd_vers				000AD8 CD 6E 32 00         A   134    				call os_cmd_remount				                           A   135    
000ADC CD 02 14 00         A   136    				call os_new_line				                           A   137    
000AE0 CD F6 41 00         A   138    				call purge_keyboard
                           A   139    				
000AE4 CD BC 3B 00         A   140    				call set_irq_vector
000AE8 CD CE 3B 00         A   141    				call enable_os_irqs
000AEC FB                  A   142    				ei
000AED CD 75 3D 00         A   143    				call set_nmi_vector
                           A   144    				
000AF1 21 C2 60 00         A   145    				ld hl,devices_connected			Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:   6


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000AF5 CB46                A   146    				bit 0,(hl)
000AF7 20 08               A   147    				jr nz,kb_present
000AF9 21 82 5B 00         A   148    				ld hl,no_keyboard_msg
000AFD CD 39 14 00         A   149    				call os_show_packed_text
000B01                     A   150    kb_present				
000B01 21 4F 56 00         A   151    				ld hl,startup_script_fn
000B05 22 20 62 00         A   152    				ld (os_args_loc),hl
000B09 CD AB 32 00         A   153    				call os_cmd_exec				                           A   154    									
000B0D 3A C0 60 00         A   155    				ld a,(frozen)					000B11 B7                  A   156    				or a
000B12 28 11               A   157    				jr z,os_main_loop
000B14 AF                  A   158    				xor a
000B15 32 C0 60 00         A   159    				ld (frozen),a
000B19 21 A7 56 00         A   160    				ld hl,nmi_freeze_txt
000B1D CD 5A 0F 00         A   161    				call os_print_string
000B21 CD C5 2D 00         A   162    				call os_cmd_r
                           A   163    				
                           A   164    
                           A   165    ;==============================================
                           A   166    
000B25 CD 67 40 00         A   167    os_main_loop	call hwsc_wait_vrt				                           A   168    
000B29 CD AB 0F 00         A   169    				call os_cursor_flash
                           A   170    
000B2D CD 6D 44 00         A   171    				call os_get_key_press
000B31 20 F2               A   172    				jr nz,os_main_loop
                           A   173    	
000B33 32 93 62 00         A   174    				ld (current_scancode),a
000B37 78                  A   175    				ld a,b
000B38 32 94 62 00         A   176    				ld (current_asciicode),a		                           A   177    	
000B3C CD 46 3F 00         A   178    				call hwsc_remove_cursor
000B40 3E18                A   179    				ld a,24							000B42 32 61 61 00         A   180    				ld (cursorflashtimer),a			000B46 AF                  A   181    				xor a
000B47 32 62 61 00         A   182    				ld (cursor_status),a
                           A   183    				
000B4B 3A 93 62 00         A   184    				ld a,(current_scancode)			000B4F FE70                A   185    				cp 70h
000B51 20 0C               A   186    				jr nz,os_notins
000B53 3A 22 5F 00         A   187     				ld a,(overwrite_mode)
000B57 EE01                A   188    				xor 1
000B59 32 22 5F 00         A   189    				ld (overwrite_mode),a
000B5D 18 C6               A   190    				jr os_main_loop
                           A   191    
000B5F FE6C                A   192    os_notins		cp 6ch
000B61 20 07               A   193    				jr nz,not_homekey
000B63 AF                  A   194    				xor a
000B64 32 5F 61 00         A   195    				ld (cursor_x),a
000B68 18 BB               A   196    				jr os_main_loop
                           A   197    								
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:   7


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000B6A FE69                A   198    not_homekey		cp 69h
000B6C 20 24               A   199    				jr nz,not_endkey
000B6E 3A 5E 61 00         A   200    				ld a,(cursor_y)					000B72 4F                  A   201    				ld c,a
000B73 3A 28 5F 00         A   202    				ld a,(charmap_columns)
000B77 47                  A   203    				ld b,a
000B78 05                  A   204    fendloop		dec b
000B79 CD B4 3F 00         A   205    				call hwsc_get_charmap_addr_xy
000B7D 7E                  A   206    				ld a,(hl)
000B7E FE20                A   207    				cp 20h
000B80 28 F6               A   208    				jr z,fendloop
000B82 04                  A   209    				inc b
000B83 3A 28 5F 00         A   210    				ld a,(charmap_columns)
000B87 B8                  A   211    				cp b
000B88 20 01               A   212    				jr nz,endxposok
000B8A 05                  A   213    				dec b
000B8B 78                  A   214    endxposok		ld a,b
000B8C 32 5F 61 00         A   215    				ld (cursor_x),a
000B90 18 93               A   216    				jr os_main_loop
                           A   217    
000B92 21 5F 61 00         A   218    not_endkey		ld hl,cursor_x					000B96 FE6B                A   219    				cp 06bh			
000B98 20 10               A   220    				jr nz,os_ntlft
000B9A 35                  A   221    				dec (hl)
000B9B 7E                  A   222    				ld a,(hl)
000B9C FEFF                A   223    				cp 0ffh	
000B9E 20 85               A   224    				jr nz,os_main_loop
000BA0 3A 28 5F 00         A   225    				ld a,(charmap_columns)
000BA4 3D                  A   226    				dec a
000BA5 77                  A   227    				ld (hl),a						000BA6 C3 25 0B 00         A   228    				jr os_main_loop
                           A   229    
000BAA FE74                A   230    os_ntlft		cp 074h							000BAC 20 10               A   231    				jr nz,os_ntrig
000BAE 34                  A   232    				inc (hl)
000BAF 3A 28 5F 00         A   233    				ld a,(charmap_columns)
000BB3 BE                  A   234    				cp (hl)
000BB4 C2 25 0B 00         A   235    				jr nz,os_main_loop
000BB8 3600                A   236    				ld (hl),0						000BBA C3 25 0B 00         A   237    				jr os_main_loop
                           A   238    
000BBE 21 5E 61 00         A   239    os_ntrig		ld hl,cursor_y
000BC2 FE75                A   240    				cp 075h							000BC4 20 0D               A   241    				jr nz,os_ntup
000BC6 35                  A   242    				dec (hl)
000BC7 CB7E                A   243    				bit 7,(hl)
000BC9 CA 25 0B 00         A   244    				jr z,os_main_loop
000BCD 3600                A   245    				ld (hl),0						000BCF C3 25 0B 00         A   246    				jr os_main_loop
                           A   247    
000BD3 FE72                A   248    os_ntup			cp 072h
000BD5 20 14               A   249    				jr nz,os_ntdwn					Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:   8


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000BD7 34                  A   250    				inc (hl)
000BD8 3A 25 5F 00         A   251    				ld a,(charmap_rows)
000BDC BE                  A   252    				cp (hl)
000BDD C2 25 0B 00         A   253    				jr nz,os_main_loop
000BE1 3D                  A   254    				dec a
000BE2 77                  A   255    				ld (hl),a						000BE3 CD D2 3E 00         A   256    				call hwsc_scroll_up
000BE7 C3 25 0B 00         A   257    				jr os_main_loop
                           A   258    
000BEB FE71                A   259    os_ntdwn		cp 071h							000BED 20 08               A   260    				jr nz,os_nodel		
000BEF 3A 5F 61 00         A   261    				ld a,(cursor_x)					000BF3 47                  A   262    				ld b,a
000BF4 04                  A   263    				inc b
000BF5 18 13               A   264    				jr os_chrbk
                           A   265    
000BF7 FE66                A   266    os_nodel		cp 066h							000BF9 20 17               A   267    				jr nz,os_nbksp
000BFB 3A 5F 61 00         A   268    				ld a,(cursor_x)					000BFF B7                  A   269    				or a							000C00 CA 25 0B 00         A   270    				jp z,os_main_loop
000C04 47                  A   271    				ld b,a
000C05 3D                  A   272    				dec a
000C06 32 5F 61 00         A   273    				ld (cursor_x),a					000C0A CD CC 3F 00         A   274    os_chrbk		call hwsc_chars_left			000C0E C3 25 0B 00         A   275    				jp os_main_loop
                           A   276    
000C12 FE5A                A   277    os_nbksp		cp 05ah							000C14 CA 5C 0C 00         A   278    				jp z,os_enter_pressed
                           A   279    	
000C18 3A 94 62 00         A   280    				ld a,(current_asciicode)		000C1C FE20                A   281    				cp 32							000C1E 38 38               A   282    				jr c,os_nvdun					                           A   283    
000C20 FE7B                A   284    				cp 07bh							000C22 30 12               A   285    				jr nc,os_gtcha					000C24 FE61                A   286    				cp 061h
000C26 38 04               A   287    				jr c,os_ntupc
000C28 D620                A   288    				sub 020h
000C2A 18 0A               A   289    				jr os_gtcha
000C2C FE5B                A   290    os_ntupc		cp 05bh
000C2E 30 06               A   291    				jr nc,os_gtcha
000C30 FE41                A   292    				cp 041h
000C32 38 02               A   293    				jr c,os_gtcha
000C34 C620                A   294    				add a,020h
000C36 57                  A   295    os_gtcha		ld d,a							000C37 3A 22 5F 00         A   296    				ld a,(overwrite_mode)			000C3B B7                  A   297    				or a
000C3C CC 05 40 00         A   298    				call z,hwsc_chars_right
                           A   299    				
000C40 ED4B 5E 61 00       A   300    os_schi			ld bc,(cursor_pos)				000C45 7A                  A   301    				ld a,d							Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:   9


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000C46 CD 0D 3F 00         A   302    				call hwsc_plot_char		
000C4A 21 5F 61 00         A   303    				ld hl,cursor_x					000C4E 34                  A   304    				inc (hl)
000C4F 3A 28 5F 00         A   305    				ld a,(charmap_columns)
000C53 BE                  A   306    				cp (hl)							000C54 20 02               A   307    				jr nz,os_nvdun
000C56 3600                A   308    				ld (hl),0
                           A   309    
000C58 C3 25 0B 00         A   310    os_nvdun		jp os_main_loop
                           A   311    	
                           A   312    
                           A   313    ;----------------------------------------------
                           A   314    
000C5C                     A   315    os_enter_pressed
                           A   316    	
000C5C CD 48 40 00         A   317    				call hwsc_charline_to_command_s
                           A   318    
000C60 AF                  A   319    				xor a
000C61 32 5F 61 00         A   320    				ld (cursor_x),a					000C65 21 5E 61 00         A   321    				ld hl,cursor_y					000C69 34                  A   322    				inc (hl)
000C6A 3A 25 5F 00         A   323    				ld a,(charmap_rows)
000C6E BE                  A   324    				cp (hl)
000C6F 20 06               A   325    				jr nz,os_esdok
000C71 3D                  A   326    				dec a
000C72 77                  A   327    				ld (hl),a
000C73 CD D2 3E 00         A   328    				call hwsc_scroll_up
                           A   329    
000C77 CD 7F 0C 00         A   330    os_esdok		call os_parse_cmd_chk_ps		                           A   331    
000C7B C3 25 0B 00         A   332    post_csb		jp os_main_loop
                           A   333    
                           A   334    	
                           A   335    ;----------------------------------------------
                           A   336    
                           A   337    
000C7F                     A   338    os_parse_cmd_chk_ps
                           A   339    
000C7F CD 92 0C 00         A   340    				call os_parse_command_line
000C83 FEFE                A   341    				cp 0feh							000C85 C0                  A   342    				ret nz
000C86 01500000            A   343    				ld bc,max_buffer_chars			000C8A 11 7C 61 00         A   344    				ld de,commandstring				000C8E EDB0                A   345    				ldir
000C90 18 ED               A   346    				jr os_parse_cmd_chk_ps
                           A   347    
                           A   348    	
                           A   349    ;----------------------------------------------
                           A   350    	
000C92                     A   351    os_parse_command_line
                           A   352    
000C92 3E01                A   353    				ld a,1
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  10


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000C94 32 F7 60 00         A   354    				ld (store_registers),a			                           A   355    
000C98 21 7C 61 00         A   356    				ld hl,commandstring				000C9C 0650                A   357    				ld b,max_buffer_chars			000C9E CD F8 0F 00         A   358    				call os_scan_for_non_space		000CA2 B7                  A   359    				or a							000CA3 C8                  A   360    				ret z
000CA4 11 E5 56 00         A   361    				ld de,dictionary-1				000CA8 D5                  A   362    				push de
000CA9 D1                  A   363    compcstr		pop de
000CAA E5                  A   364    				push hl
000CAB FDE1                A   365    				pop iy
000CAD 13                  A   366    notacmd			inc de
000CAE 1A                  A   367    				ld a,(de)
000CAF FE01                A   368    				cp 1							000CB1 CA 4B 0D 00         A   369    				jp z,os_no_kernal_command_found
000CB5 CB7F                A   370    				bit 7,a
000CB7 28 F4               A   371    				jr z,notacmd					000CB9 E67F                A   372    				and 07fh
000CBB 4F                  A   373    				ld c,a							000CBC D5                  A   374    				push de
000CBD 13                  A   375    cmdnscan		inc de
000CBE FD7E00              A   376    				ld a,(iy)						000CC1 CD 63 12 00         A   377    				call os_uppercasify
000CC5 47                  A   378    				ld b,a
000CC6 1A                  A   379    				ld a,(de)						000CC7 B8                  A   380    				cp b
000CC8 FD23                A   381    				inc iy
000CCA 28 F1               A   382    				jr z,cmdnscan					000CCC 1A                  A   383    nomatch			ld a,(de)						000CCD B7                  A   384    				or a
000CCE 28 04               A   385    				jr z,posmatch					000CD0 CB7F                A   386    				bit 7,a			
000CD2 28 D5               A   387    				jr z,compcstr					000CD4 FD7EFF              A   388    posmatch		ld a,(iy-1)						000CD7 FE20                A   389    				cp 32
000CD9 20 CE               A   390    				jr nz,compcstr					                           A   391    	
000CDB D1                  A   392    				pop de				
000CDC FDE5                A   393    				push iy							000CDE E1                  A   394    				pop hl
000CDF CD F8 0F 00         A   395    				call os_scan_for_non_space
000CE3 22 20 62 00         A   396    				ld (os_args_loc),hl				                           A   397    	
000CE7 21 84 5C 00         A   398    				ld hl,os_cmd_locs
000CEB 11030000            A   399    				ld de,3
000CEF 51                  A   400    				ld d,c
000CF0 ED5C                A   401    				mlt de							000CF2 19                  A   402    				add hl,de
000CF3 ED37                A   403    				ld ix,(hl)						                           A   404    
000CF5 2A 20 62 00         A   405    				ld hl,(os_args_loc)				Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  11


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000CF9 CD 2D 0F 00         A   406    				call os_run_command				                           A   407    
000CFD C8                  A   408    				ret z							000CFE B7                  A   409    				or a
000CFF 20 13               A   410    				jr nz,show_erm
000D01 78                  A   411    os_hwe1			ld a,b							000D02 21 E9 59 00         A   412    os_hwerr		ld hl,hex_byte_txt		
000D06 CD A5 10 00         A   413    				call hexbyte_to_ascii	
000D0A 21 75 5B 00         A   414    				ld hl,hw_err_msg
000D0E CD 39 14 00         A   415    				call os_show_packed_text
000D12 AF                  A   416    				xor a
000D13 C9                  A   417    				ret
                           A   418    
000D14 01000000            A   419    show_erm		ld bc,0							000D18 4F                  A   420    				ld c,a
000D19 D680                A   421    				sub 080h						000D1B 38 11               A   422    				jr c,no_trans					000D1D 21 A9 5D 00         A   423    				ld hl,kernal_error_code_transla
000D21 CB77                A   424    				bit 6,a							000D23 28 06               A   425    				jr z,not_fs_err					000D25 21 B7 5D 00         A   426    				ld hl,fs_error_code_translation
000D29 D640                A   427    				sub 040h
000D2B 4F                  A   428    not_fs_err		ld c,a
000D2C 09                  A   429    				add hl,bc
000D2D 4E                  A   430    				ld c,(hl)
000D2E 0600                A   431    no_trans		ld b,0
000D30 21 EA 5C 00         A   432    				ld hl,packed_msg_list
000D34 7E                  A   433    findmsg			ld a,(hl)
000D35 FEFF                A   434    				cp 0ffh
000D37 C8                  A   435    				ret z							000D38 23                  A   436    				inc hl
000D39 B7                  A   437    				or a
000D3A 20 F8               A   438    				jr nz,findmsg					000D3C 04                  A   439    				inc b
000D3D 79                  A   440    				ld a,c							000D3E B8                  A   441    				cp b
000D3F 20 F3               A   442    				jr nz,findmsg
000D41 CD 39 14 00         A   443    				call os_show_packed_text
000D45 CD 02 14 00         A   444    				call os_new_line
000D49 AF                  A   445    				xor a
000D4A C9                  A   446    				ret
                           A   447    	
                           A   448    
000D4B                     A   449    os_no_kernal_command_found
                           A   450    
000D4B 3E30                A   451    				ld a,030h						000D4D 32 8B 5F 00         A   452    fvolcmd			ld (vol_txt+4),a				000D51 F5                  A   453    				push af			
000D52 11 88 5F 00         A   454    				ld de,vol_txt+1		
000D56 0605                A   455    				ld b,5			
000D58 CD 29 12 00         A   456    				call os_compare_strings	
000D5C 28 08               A   457    				jr z,gotvolcmd		
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  12


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000D5E F1                  A   458    				pop af				
000D5F 3C                  A   459    				inc a			
000D60 FE38                A   460    				cp 030h+max_volumes		
000D62 20 E9               A   461    				jr nz,fvolcmd		
000D64 18 0B               A   462    				jr novolcmd		
000D66 F1                  A   463    gotvolcmd		pop af
000D67 D630                A   464    				sub 030h
000D69 CD 06 1B 00         A   465    				call os_change_volume
000D6D C3 12 0F 00         A   466    				jp extcmderf					                           A   467    		
                           A   468    
                           A   469    
000D71 7E                  A   470    novolcmd		ld a,(hl)						000D72 FE47                A   471    				cp 'G'							000D74 20 29               A   472    				jr nz,not_g_cmd					000D76 23                  A   473    				inc hl
000D77 7E                  A   474    				ld a,(hl)
000D78 2B                  A   475    				dec hl
000D79 FE20                A   476    				cp ' '
000D7B 20 22               A   477    				jr nz,not_g_cmd
000D7D 23                  A   478    				inc hl
000D7E CD F8 0F 00         A   479    				call os_scan_for_non_space
000D82 22 20 62 00         A   480    				ld (os_args_loc),hl				000D86 B7                  A   481    				or a
000D87 20 04               A   482    				jr nz,gotgargs
000D89 3E1F                A   483    				ld a,01fh						000D8B 18 87               A   484    				jr show_erm
000D8D CD E4 10 00         A   485    gotgargs		call ascii_to_hex_no_scan		000D91 B7                  A   486    				or a
000D92 20 80               A   487    				jr nz,show_erm
000D94 CD 84 3D 00         A   488    				call enable_button_nmi			000D98 D5                  A   489    				push de
000D99 DDE1                A   490    				pop ix			
000D9B C3 2D 0F 00         A   491    				jp os_run_command				                           A   492    				
                           A   493    				
                           A   494    
000D9F 22 20 62 00         A   495    not_g_cmd		ld (os_args_loc),hl				000DA3 22 23 62 00         A   496    				ld (os_args_pos_cache),hl
000DA7 CD 2C 10 00         A   497    				call os_args_to_fn_append_ezp	                           A   498    	
000DAB CD 37 0F 00         A   499    				call cache_dir_block			                           A   500    
000DAF CD 80 48 00         A   501    				call fs_check_disk_format		000DB3 38 3C               A   502    				jr c,os_ndfxc
000DB5 B7                  A   503    				or a							000DB6 20 39               A   504    				jr nz,os_ndfxc
                           A   505    	
000DB8 CD 27 4A 00         A   506    				call fs_open_file_command		000DBC DA 02 0D 00         A   507    				jp c,os_hwerr			 		000DC0 B7                  A   508    				or a
000DC1 28 38               A   509    				jr z,os_gecmd					Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  13


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A   510    
000DC3 CD F8 49 00         A   511    				call fs_goto_root_dir_command	000DC7 21 46 56 00         A   512    				ld hl,os_dos_cmds_txt
000DCB CD 8E 52 00         A   513    				call fs_hl_to_filename
000DCF CD D3 49 00         A   514    				call fs_change_dir_command		000DD3 DA 02 0D 00         A   515    				jp c,os_hwerr
000DD7 B7                  A   516    				or a
000DD8 20 17               A   517    				jr nz,os_ndfxc					                           A   518    	
000DDA 2A 23 62 00         A   519    				ld hl,(os_args_pos_cache)		000DDE 22 20 62 00         A   520    				ld (os_args_loc),hl
000DE2 CD 2C 10 00         A   521    				call os_args_to_fn_append_ezp	000DE6 CD 27 4A 00         A   522    				call fs_open_file_command		000DEA DA 02 0D 00         A   523    				jp c,os_hwerr
000DEE B7                  A   524    				or a
000DEF 28 0A               A   525    				jr z,os_gecmd
000DF1 CD 43 0F 00         A   526    os_ndfxc		call restore_dir_block			000DF5 3E0B                A   527    				ld a,0bh						000DF7 C3 14 0D 00         A   528    				jp show_erm
                           A   529    
000DFB 2A 20 62 00         A   530    os_gecmd		ld hl,(os_args_loc)				000DFF CD F8 0F 00         A   531    				call os_scan_for_non_space		000E03 22 20 62 00         A   532    				ld (os_args_loc),hl
                           A   533    
000E07 11100000            A   534    				ld de,16
000E0B CD 76 16 00         A   535    				call os_set_load_length			000E0F 21 AE 68 00         A   536    				ld hl,scratch_pad
000E13 22 EF 54 00         A   537    				ld (fs_ez80_address),hl
000E17 CD 72 4A 00         A   538    				call fs_read_data_command
000E1B DA 02 0D 00         A   539    				jp c,os_hwerr					000E1F B7                  A   540    				or a
000E20 C2 14 0D 00         A   541    				jp nz,show_erm					000E24 2A B0 68 00         A   542    				ld hl,(scratch_pad+2)
000E28 1150524F            A   543    				ld de,04f5250h					000E2C AF                  A   544    				xor a	
000E2D ED52                A   545    				sbc hl,de
000E2F 28 0A               A   546    				jr z,loc_header
000E31 CD 43 0F 00         A   547    				call restore_dir_block			000E35 3E1A                A   548    				ld a,01ah						000E37 C3 14 0D 00         A   549    				jp show_erm						                           A   550    				
000E3B 3A BD 68 00         A   551    loc_header		ld a,(scratch_pad+15)			000E3F 32 F3 60 00         A   552    				ld (store_adl),a			
000E43 CD 27 4A 00         A   553    				call fs_open_file_command		000E47 DA 02 0D 00         A   554    				jp c,os_hwerr
000E4B B7                  A   555    				or a	
000E4C 20 A3               A   556    				jr nz,os_ndfxc
000E4E 2A B3 68 00         A   557    				ld hl,(scratch_pad+5)			000E52 22 EF 54 00         A   558    				ld (fs_ez80_address),hl
000E56 ED5B C3 60 00       A   559    				ld de,(sysram_os_highest)
000E5B AF                  A   560    				xor a
000E5C E5                  A   561    				push hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  14


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000E5D ED52                A   562    				sbc hl,de
000E5F E1                  A   563    				pop hl
000E60 30 0A               A   564    				jr nc,osmemok
000E62 CD 43 0F 00         A   565    				call restore_dir_block			000E66 3E26                A   566    				ld a,026h
000E68 C3 14 0D 00         A   567    				jp show_erm
                           A   568    
000E6C ED5B B9 68 00       A   569    osmemok			ld de,(scratch_pad+11)			000E71 7B                  A   570    				ld a,e
000E72 B2                  A   571    				or d
000E73 28 14               A   572    				jr z,noprov_spec				000E75 21360000            A   573    				ld hl,prose_version
000E79 AF                  A   574    				xor a
000E7A 40ED52              A   575    				sbc.sis hl,de					000E7D 30 0A               A   576    				jr nc,noprov_spec
000E7F CD 43 0F 00         A   577    				call restore_dir_block
000E83 3E1B                A   578    				ld a,01bh						000E85 C3 14 0D 00         A   579    				jp show_erm
                           A   580    				
000E89 CD BC 40 00         A   581    noprov_spec		call hwsc_get_version			000E8D 2A BB 68 00         A   582    				ld hl,(scratch_pad+13)			000E91 EB                  A   583    				ex de,hl						000E92 7B                  A   584    				ld a,e
000E93 B2                  A   585    				or d
000E94 28 10               A   586    				jr z,nohwv_spec					000E96 AF                  A   587    				xor a
000E97 40ED52              A   588    				sbc.sis hl,de					000E9A 30 0A               A   589    				jr nc,nohwv_spec
000E9C CD 43 0F 00         A   590    				call restore_dir_block
000EA0 3E2B                A   591    				ld a,02bh						000EA2 C3 14 0D 00         A   592    				jp show_erm
                           A   593    
000EA6 ED5B B6 68 00       A   594    nohwv_spec		ld de,(scratch_pad+8)			000EAB 3A B8 68 00         A   595    				ld a,(scratch_pad+10)			000EAF B2                  A   596    				or d
000EB0 B3                  A   597    				or e
000EB1 28 04               A   598    				jr z,readcode					000EB3 CD 76 16 00         A   599    				call os_set_load_length			                           A   600    		
000EB7 2A B3 68 00         A   601    readcode		ld hl,(scratch_pad+5)
000EBB 22 29 62 00         A   602    				ld (os_extcmd_jmp_addr),hl		000EBF CD 72 4A 00         A   603    				call fs_read_data_command
000EC3 F5                  A   604    				push af
000EC4 CD 43 0F 00         A   605    				call restore_dir_block			000EC8 F1                  A   606    				pop af
000EC9 DA 02 0D 00         A   607    				jp c,os_hwerr					000ECD B7                  A   608    				or a
000ECE C2 14 0D 00         A   609    				jp nz,show_erm					                           A   610    	
000ED2 CD 84 3D 00         A   611    				call enable_button_nmi			000ED6 DD2A 29 62 00       A   612    				ld ix,(os_extcmd_jmp_addr)		000EDB 2A 20 62 00         A   613    				ld hl,(os_args_loc)				Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  15


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000EDF C3 2D 0F 00         A   614    				jp os_run_command				                           A   615    
000EE3 F5                  A   616    extcmd_return	push af							000EE4 CD 77 40 00         A   617    				call hwsc_default_hw_settings	000EE8 3A F7 60 00         A   618    				ld a,(store_registers)
000EEC B7                  A   619    				or a
000EED 28 06               A   620    				jr z,skp_strg
000EEF F1                  A   621    				pop af
000EF0 CD 7B 13 00         A   622    				call os_store_CPU_regs			000EF4 F5                  A   623    				push af
000EF5 F1                  A   624    skp_strg		pop af
                           A   625    
000EF6 F5                  A   626    cntuasr			push af
000EF7 21 AE 68 00         A   627    				ld hl,scratch_pad				000EFB CD A5 10 00         A   628    				call hexbyte_to_ascii
000EFF 3600                A   629    				ld (hl),0
000F01 11 AE 68 00         A   630    				ld de,scratch_pad
000F05 21 BF 56 00         A   631    				ld hl,error_txt
000F09 CD BA 1B 00         A   632    				call os_set_envar
000F0D CD 8F 3D 00         A   633    				call disable_button_nmi			000F11 F1                  A   634    				pop af
000F12 28 12               A   635    extcmderf		jr z,not_errc					000F14 B7                  A   636    				or a
000F15 CA 01 0D 00         A   637    				jp z,os_hwe1					000F19 FEFF                A   638    				cp 0ffh							000F1B CA 56 0A 00         A   639    				jp z,os_cold_start
000F1F FEFE                A   640    				cp 0feh							000F21 C8                  A   641    				ret z
000F22 C3 14 0D 00         A   642    				jp show_erm						000F26 FEFF                A   643    not_errc		cp 0ffh							000F28 CA 56 0A 00         A   644    				jp z,os_cold_start
000F2C C9                  A   645    				ret
                           A   646    				
                           A   647    ;----------------------------------------------
                           A   648    
000F2D                     A   649    os_run_command									000F2D ED3906              A   650    				out0 (port_nmi_ack),a			000F30 DD22 F8 60 00       A   651    				ld (com_start_addr),ix			000F35 DDE9                A   652    				jp (ix)							                           A   653    
                           A   654    ;----------------------------------------------
                           A   655    
000F37                     A   656    cache_dir_block
                           A   657    
                           A   658    	
000F37 D5                  A   659    				push de
000F38 CD AA 1A 00         A   660    				call fs_get_dir_cluster	
000F3C ED53 26 62 00       A   661    				ld (os_dir_block_cache),de
000F41 D1                  A   662    				pop de	
000F42 C9                  A   663    				ret
                           A   664    		
                           A   665    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  16


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000F43                     A   666    restore_dir_block
                           A   667    
000F43 D5                  A   668    				push de
000F44 ED5B 26 62 00       A   669    				ld de,(os_dir_block_cache)
000F49 CD B6 1A 00         A   670    				call fs_update_dir_cluster
000F4D D1                  A   671    				pop de
000F4E C9                  A   672    				ret
                           A   673    		
                           A   674    ;==============================================
                           A   675    ; Routines called by command line
                           A   676    ;==============================================
                           A   677    
                           A   678    ; Set:-
                           A   679    ; HL to address of string
                           A   680    ; c = y
                           A   681    ; b = x
                           A   682    
000F4F                     A   683    ext_print_string
                           A   684    
000F4F CC ED 15 00         A   685    				call z,mbase_hl
000F53 18 05               A   686    				jr os_print_string
                           A   687    
000F55                     A   688    os_print_string_cond
                           A   689    
000F55 CD 5D 1A 00         A   690    				call test_quiet_mode
000F59 C0                  A   691    				ret nz
                           A   692    
000F5A                     A   693    os_print_string
                           A   694    
000F5A D5                  A   695    				push de
000F5B C5                  A   696    				push bc
000F5C ED4B 5E 61 00       A   697    				ld bc,(cursor_pos)				000F61 7E                  A   698    prstr_lp		ld a,(hl)
000F62 23                  A   699    				inc hl
000F63 B7                  A   700    				or a
000F64 20 09               A   701    				jr nz,prstr_ne
000F66 ED43 5E 61 00       A   702    				ld (cursor_pos),bc
000F6B C1                  A   703    				pop bc
000F6C D1                  A   704    				pop de
000F6D AF                  A   705    				xor a							000F6E C9                  A   706    				ret
                           A   707    
000F6F FE0D                A   708    prstr_ne		cp 13
000F71 20 04               A   709    				jr nz,not_cr
000F73 0600                A   710    				ld b,0
000F75 18 EA               A   711    				jr prstr_lp
000F77 FE0A                A   712    not_cr			cp 10
000F79 28 12               A   713    				jr z,line_feed				
000F7B FE0B                A   714    				cp 11
000F7D 28 0C               A   715    				jr z,next_line
000F7F CD 0D 3F 00         A   716    				call hwsc_plot_char
000F83 04                  A   717    				inc b
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  17


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000F84 3A 28 5F 00         A   718    				ld a,(charmap_columns)
000F88 B8                  A   719    				cp b
000F89 20 D6               A   720    				jr nz,prstr_lp
000F8B 0600                A   721    next_line		ld b,0
000F8D 0C                  A   722    line_feed		inc c
000F8E 3A 25 5F 00         A   723    				ld a,(charmap_rows)
000F92 B9                  A   724    				cp c
000F93 20 CC               A   725    				jr nz,prstr_lp
000F95 0D                  A   726    				dec c
000F96 CD D2 3E 00         A   727    				call hwsc_scroll_up
000F9A 18 C5               A   728    				jr prstr_lp
                           A   729    
                           A   730    ;----------------------------------------------
                           A   731    
000F9C 21 6C 62 00         A   732    os_print_char	ld hl,char_to_print
000FA0 77                  A   733    				ld (hl),a
000FA1 18 B7               A   734    				jr os_print_string
                           A   735    
                           A   736    ;----------------------------------------------
                           A   737    
000FA3 F5                  A   738    home_cursor		push af
000FA4 AF                  A   739    				xor a
000FA5 32 5F 61 00         A   740    				ld (cursor_x),a
000FA9 F1                  A   741    				pop af
000FAA C9                  A   742    				ret
                           A   743    				
                           A   744    ;----------------------------------------------
                           A   745    
000FAB                     A   746    os_cursor_flash
                           A   747    
000FAB 21 61 61 00         A   748    				ld hl,cursorflashtimer
000FAF 34                  A   749    				inc (hl)
000FB0 7E                  A   750    				ld a,(hl)
000FB1 FE19                A   751    				cp 25
000FB3 C0                  A   752    				ret nz
000FB4 3600                A   753    				ld (hl),0
000FB6 3A 62 61 00         A   754    				ld a,(cursor_status)
000FBA EE01                A   755    				xor 1
000FBC 32 62 61 00         A   756    				ld (cursor_status),a
000FC0 28 15               A   757    				jr z,no_cursor
000FC2 3E5F                A   758    				ld a,05fh
000FC4 21 22 5F 00         A   759    				ld hl,overwrite_mode
000FC8 CB46                A   760    				bit 0,(hl)
000FCA 28 02               A   761    				jr z,cursor_selected
000FCC 3E7F                A   762    				ld a,07fh
                           A   763    				
000FCE CD DD 0F 00         A   764    cursor_selected	call os_set_cursor_image
000FD2 CD 60 3F 00         A   765    				call hwsc_draw_cursor			000FD6 C9                  A   766    				ret
                           A   767    
000FD7 CD 46 3F 00         A   768    no_cursor		call hwsc_remove_cursor
000FDB C9                  A   769    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  18


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A   770    
                           A   771    
                           A   772    ;----------------------------------------------
                           A   773    
000FDC                     A   774    ext_set_cursor_image
                           A   775    
000FDC 7B                  A   776    				ld a,e
                           A   777    				
000FDD                     A   778    os_set_cursor_image
                           A   779    			
000FDD 32 23 5F 00         A   780    				ld (cursor_image_char),a
000FE1 BF                  A   781    				cp a
000FE2 C9                  A   782    				ret
                           A   783    
                           A   784    ;----------------------------------------------
                           A   785    
000FE3                     A   786    os_next_arg
                           A   787    
000FE3 CD EF 0F 00         A   788    				call os_scan_for_space
000FE7 B7                  A   789    				or a
000FE8 C8                  A   790    				ret z
000FE9 CD F8 0F 00         A   791    				call os_scan_for_non_space
000FED B7                  A   792    				or a
000FEE C9                  A   793    				ret
                           A   794    
                           A   795    
                           A   796    ;----------------------------------------------
                           A   797    	
                           A   798    
000FEF                     A   799    os_scan_for_space
                           A   800    
000FEF 7E                  A   801    os_sfspl 		ld a,(hl)						000FF0 B7                  A   802    				or a							000FF1 C8                  A   803    				ret z
000FF2 FE20                A   804    				cp ' '
000FF4 C8                  A   805    				ret z
000FF5 23                  A   806    				inc hl
000FF6 18 F7               A   807    				jr os_sfspl
                           A   808    	
                           A   809    
                           A   810    ;----------------------------------------------
                           A   811    	
                           A   812    
000FF8                     A   813    os_scan_for_non_space
                           A   814    
000FF8 2B                  A   815    				dec hl							000FF9 23                  A   816    os_nsplp		inc hl			
000FFA 7E                  A   817    				ld a,(hl)			
000FFB B7                  A   818    				or a			
000FFC C8                  A   819    				ret z							000FFD FE20                A   820    				cp ' '
000FFF 28 F8               A   821    				jr z,os_nsplp
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  19


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001001 C9                  A   822    				ret
                           A   823    	
                           A   824    	
                           A   825    ;----------------------------------------------
                           A   826    
001002                     A   827    os_args_to_alt_filename
                           A   828    
001002 CD 5C 10 00         A   829    				call os_atfn_pre				001006 C8                  A   830    				ret z
001007 CD 88 52 00         A   831    				call fs_hl_to_alt_filename
00100B 18 09               A   832    				jr os_atfrl
                           A   833    	
                           A   834    	
                           A   835    	
                           A   836    		
00100D                     A   837    os_args_to_filename
                           A   838    
00100D CD 5C 10 00         A   839    				call os_atfn_pre				001011 C8                  A   840    				ret z
001012 CD 8E 52 00         A   841    				call fs_hl_to_filename	
                           A   842    
001016 7E                  A   843    os_atfrl		ld a,(hl)						001017 B7                  A   844    				or a							001018 28 0B               A   845    				jr z,os_cfne
00101A FE20                A   846    				cp 32
00101C 28 07               A   847    				jr z,os_cfne
00101E FE2F                A   848    				cp 02fh
001020 28 03               A   849    				jr z,os_cfne
001022 23                  A   850    				inc hl
001023 18 F1               A   851    				jr os_atfrl	
001025 22 20 62 00         A   852    os_cfne			ld (os_args_loc),hl				001029 79                  A   853    				ld a,c			
00102A B7                  A   854    				or a							00102B C9                  A   855    				ret
                           A   856    
                           A   857    
                           A   858    
                           A   859    
00102C                     A   860    os_args_to_fn_append_ezp
                           A   861    
                           A   862    	
00102C CD 5C 10 00         A   863    				call os_atfn_pre				001030 C8                  A   864    				ret z
001031 11 FB 60 00         A   865    				ld de,temp_string
001035 7E                  A   866    ccmdtlp			ld a,(hl)						001036 B7                  A   867    				or a
001037 28 0D               A   868    				jr z,goteocmd
001039 FE20                A   869    				cp ' '
00103B 28 09               A   870    				jr z,goteocmd
00103D FE2E                A   871    				cp '.'
00103F 28 05               A   872    				jr z,goteocmd
001041 12                  A   873    				ld (de),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  20


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001042 13                  A   874    				inc de
001043 23                  A   875    				inc hl
001044 18 EF               A   876    				jr ccmdtlp
                           A   877    	
001046 E5                  A   878    goteocmd		push hl
001047 21 99 56 00         A   879    				ld hl,ezp_extension_txt
00104B 01050000            A   880    				ld bc,5
00104F EDB0                A   881    				ldir 
001051 21 FB 60 00         A   882    				ld hl,temp_string
001055 CD 8E 52 00         A   883    				call fs_hl_to_filename
001059 E1                  A   884    				pop hl
00105A 18 BA               A   885    				jr os_atfrl
                           A   886    	
                           A   887    
                           A   888    
                           A   889    
00105C                     A   890    os_atfn_pre
                           A   891    
00105C 2A 20 62 00         A   892    				ld hl,(os_args_loc)				001060 CD F8 0F 00         A   893    				call os_scan_for_non_space
001064 B7                  A   894    				or a
001065 C8                  A   895    				ret z
001066 7E                  A   896    				ld a,(hl)
001067 FE2F                A   897    				cp 02fh							001069 20 01               A   898    				jr nz,notfsl1
00106B 23                  A   899    				inc hl
00106C AF                  A   900    notfsl1			xor a
00106D 3C                  A   901    				inc a
00106E C9                  A   902    				ret
                           A   903    
                           A   904    
                           A   905    ;--------- Number <-> String functions --------
                           A   906    
                           A   907    
00106F                     A   908    os_clear_output_line
                           A   909    
00106F C5                  A   910    				push bc
001070 E5                  A   911    				push hl			
001071 21 CE 61 00         A   912    				ld hl,output_line
001075 01500000            A   913    				ld bc,max_buffer_chars
001079 3E20                A   914    				ld a,32
00107B CD C6 15 00         A   915    				call os_bchl_memfill
00107F E1                  A   916    				pop hl
001080 C1                  A   917    				pop bc
001081 C9                  A   918    				ret
                           A   919    	
                           A   920    	
                           A   921    	
001082                     A   922    os_skip_leading_ascii_zeros
                           A   923    
001082 7E                  A   924    slazlp			ld a,(hl)						001083 FE30                A   925    				cp '0'							Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  21


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001085 C0                  A   926    				ret nz
001086 23                  A   927    				inc hl
001087 10 F9               A   928    				djnz slazlp
001089 C9                  A   929    				ret
                           A   930    	
                           A   931    
                           A   932    
00108A                     A   933    os_leading_ascii_zeros_to_spaces
                           A   934    
00108A E5                  A   935    				push hl
00108B 7E                  A   936    clazlp			ld a,(hl)						00108C FE30                A   937    				cp '0'							00108E 20 05               A   938    				jr nz,claze	
001090 3620                A   939    				ld (hl),' '
001092 23                  A   940    				inc hl
001093 10 F6               A   941    				djnz clazlp
001095 E1                  A   942    claze			pop hl
001096 C9                  A   943    				ret
                           A   944    	
                           A   945    
                           A   946    
                           A   947    		
001097                     A   948    n_hexbytes_to_ascii
                           A   949    
001097 1A                  A   950    				ld a,(de)						001098 CD A5 10 00         A   951    				call hexbyte_to_ascii			00109C 1B                  A   952    				dec de
00109D 10 F8               A   953    				djnz n_hexbytes_to_ascii
00109F C9                  A   954    				ret
                           A   955    			
                           A   956    			
                           A   957    
0010A0                     A   958    ext_hexbyte_to_ascii
                           A   959    
0010A0 CC ED 15 00         A   960    				call z,mbase_hl
0010A4 7B                  A   961    				ld a,e
                           A   962    
0010A5                     A   963    hexbyte_to_ascii
                           A   964    
0010A5 C5                  A   965    				push bc
0010A6 47                  A   966    				ld b,a							0010A7 CB3F                A   967    				srl a							0010A9 CB3F                A   968    				srl a
0010AB CB3F                A   969    				srl a
0010AD CB3F                A   970    				srl a
0010AF CD C1 10 00         A   971    				call hxdigconv
0010B3 77                  A   972    				ld (hl),a
0010B4 23                  A   973    				inc hl
0010B5 78                  A   974    				ld a,b
0010B6 E60F                A   975    				and 0fh
0010B8 CD C1 10 00         A   976    				call hxdigconv
0010BC 77                  A   977    				ld (hl),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  22


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0010BD 23                  A   978    				inc hl
0010BE C1                  A   979    				pop bc
0010BF AF                  A   980    				xor a							0010C0 C9                  A   981    				ret
                           A   982    				
0010C1 C630                A   983    hxdigconv		add a,030h
0010C3 FE3A                A   984    				cp 03ah
0010C5 38 02               A   985    				jr c,hxdone
0010C7 C607                A   986    				add a,7
0010C9 C9                  A   987    hxdone			ret
                           A   988    
                           A   989    
                           A   990    
                           A   991    
0010CA                     A   992    hexword_to_ascii	
                           A   993    
0010CA 7A                  A   994    				ld a,d							0010CB CD A5 10 00         A   995    				call hexbyte_to_ascii
0010CF 7B                  A   996    				ld a,e
0010D0 CD A5 10 00         A   997    				call hexbyte_to_ascii
0010D4 C9                  A   998    				ret
                           A   999    	
                           A  1000    
                           A  1001    
                           A  1002    
0010D5                     A  1003    ext_ascii_to_hexword
                           A  1004    		
0010D5 CC ED 15 00         A  1005    				call z,mbase_hl
                           A  1006    
0010D9                     A  1007    ascii_to_hexword
                           A  1008    	
0010D9 CD F8 0F 00         A  1009    				call os_scan_for_non_space		0010DD B7                  A  1010    				or a
0010DE 20 04               A  1011    				jr nz,ascii_to_hex_no_scan
0010E0 3E81                A  1012    				ld a,081h						0010E2 B7                  A  1013    				or a
0010E3 C9                  A  1014    				ret	
                           A  1015    
                           A  1016    	
0010E4                     A  1017    ascii_to_hex_no_scan
                           A  1018    
0010E4 DDE5                A  1019    				push ix
0010E6 C5                  A  1020    				push bc
0010E7 DD210000 00         A  1021    				ld ix,0
0010EC 0606                A  1022    				ld b,6							0010EE CD 1A 11 00         A  1023    athlp			call ascii_to_hex_digit
0010F2 FEF0                A  1024    				cp 0f0h							0010F4 28 17               A  1025    				jr z,athend
0010F6 FED0                A  1026    				cp 0d0h
0010F8 28 13               A  1027    				jr z,athend						0010FA FE10                A  1028    				cp 16
0010FC 30 17               A  1029    				jr nc,badhex					Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  23


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0010FE DD29                A  1030    				add ix,ix						001100 DD29                A  1031    				add ix,ix
001102 DD29                A  1032    				add ix,ix
001104 DD29                A  1033    				add ix,ix
001106 DDB5                A  1034    				or a,ixl
001108 DD6F                A  1035    				ld ixl,a
00110A 23                  A  1036    				inc hl
00110B 10 E1               A  1037    				djnz athlp
00110D DDE5                A  1038    athend			push ix
00110F D1                  A  1039    				pop de
001110 AF                  A  1040    				xor a
001111 C1                  A  1041    ath_quit		pop bc
001112 DDE1                A  1042    				pop ix							001114 C9                  A  1043    				ret
                           A  1044    		
001115 3E82                A  1045    badhex			ld a,82h						001117 B7                  A  1046    				or a
001118 18 F7               A  1047    				jr ath_quit
                           A  1048    				
                           A  1049    	
                           A  1050    		
00111A                     A  1051    ascii_to_hex_digit
                           A  1052    
00111A 7E                  A  1053    				ld a,(hl)						00111B FE61                A  1054    				cp 061h
00111D 38 02               A  1055    				jr c,hc_uppercase
00111F D620                A  1056    				sub 020h						001121 D63A                A  1057    hc_uppercase	sub 03ah						001123 38 02               A  1058    				jr c,zeronine
001125 C6F9                A  1059    				add a,0f9h
001127 C60A                A  1060    zeronine		add a,0ah
001129 C9                  A  1061    				ret
                           A  1062    
                           A  1063    
                           A  1064    ;--------- Text Input / Non-numeric string func
                           A  1065    
                           A  1066    ; Waits for user to enter a string of character
                           A  1067    ; Before calling, set:  HL = destination of str
                           A  1068    ;                        E = max number of char
                           A  1069    ; Returns:   A  = number of characters in enter
                           A  1070    
                           A  1071    
00112A                     A  1072    ext_user_input
00112A CC ED 15 00         A  1073    				call z,mbase_hl
                           A  1074    				
00112E                     A  1075    os_user_input
00112E AF                  A  1076    				xor a
00112F 32 F5 5E 00         A  1077    				ld (ui_index),a
001133 22 F7 5E 00         A  1078    				ld (ui_string_addr),hl
001137 7B                  A  1079    				ld a,e
001138 32 F6 5E 00         A  1080    				ld (ui_maxchars),a
                           A  1081    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  24


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00113C 3A 22 5F 00         A  1082    				ld a,(overwrite_mode)
001140 32 7B 61 00         A  1083    				ld (ui_im_cache),a
001144 AF                  A  1084    				xor a
001145 32 22 5F 00         A  1085    				ld (overwrite_mode),a			                           A  1086    				
001149 CD 60 3F 00         A  1087    ui_loop			call hwsc_draw_cursor			00114D CD 12 44 00         A  1088    				call os_wait_key_press			001151 32 93 62 00         A  1089    				ld (current_scancode),a
001155 78                  A  1090    				ld a,b
001156 32 94 62 00         A  1091    				ld (current_asciicode),a		00115A CD 46 3F 00         A  1092    				call hwsc_remove_cursor
                           A  1093    	
00115E 3A 93 62 00         A  1094    				ld a,(current_scancode)
001162 FE66                A  1095    				cp 066h							001164 20 1F               A  1096    				jr nz,os_nuibs
001166 3A F5 5E 00         A  1097    				ld a,(ui_index)
00116A B7                  A  1098    				or a
00116B 28 DC               A  1099    				jr z,ui_loop					00116D 21 5F 61 00         A  1100    				ld hl,cursor_x					001171 35                  A  1101    				dec (hl)						001172 46                  A  1102    os_uixok		ld b,(hl)		
001173 3A 5E 61 00         A  1103    				ld a,(cursor_y)
001177 4F                  A  1104    				ld c,a
001178 3E20                A  1105    				ld a,32
00117A CD 0D 3F 00         A  1106    				call hwsc_plot_char
00117E 21 F5 5E 00         A  1107    				ld hl,ui_index
001182 35                  A  1108    				dec (hl)						001183 18 C4               A  1109    				jr ui_loop
                           A  1110    
001185 FE76                A  1111    os_nuibs		cp 076h							001187 28 6B               A  1112    				jr z,ui_aborted
001189 FE5A                A  1113    				cp 05ah							00118B 28 46               A  1114    				jr z,ui_enter_pressed
                           A  1115    	
00118D 3A F5 5E 00         A  1116    				ld a,(ui_index)					001191 21 F6 5E 00         A  1117    				ld hl,ui_maxchars
001195 BE                  A  1118    				cp (hl)
001196 28 B1               A  1119    				jr z,ui_loop	
                           A  1120    
001198 3A 94 62 00         A  1121    				ld a,(current_asciicode)		00119C FE20                A  1122    				cp 32							00119E 38 A9               A  1123    				jr c,ui_loop					                           A  1124    
0011A0 57                  A  1125    ui_gtcha		ld d,a
0011A1 2A F7 5E 00         A  1126    				ld hl,(ui_string_addr)
0011A5 3A F5 5E 00         A  1127    				ld a,(ui_index)
0011A9 01000000            A  1128    				ld bc,0
0011AD 4F                  A  1129    				ld c,a
0011AE 09                  A  1130    				add hl,bc
0011AF 72                  A  1131    				ld (hl),d						0011B0 3C                  A  1132    				inc a
0011B1 32 F5 5E 00         A  1133    				ld (ui_index),a					Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  25


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1134    				
0011B5 ED4B 5E 61 00       A  1135    				ld bc,(cursor_y)				0011BA 7A                  A  1136    				ld a,d
0011BB CD 0D 3F 00         A  1137    				call hwsc_plot_char		
0011BF 21 5F 61 00         A  1138    				ld hl,cursor_x					0011C3 34                  A  1139    				inc (hl)
0011C4 3A 28 5F 00         A  1140    				ld a,(charmap_columns)			0011C8 BE                  A  1141    				cp (hl)
0011C9 C2 49 11 00         A  1142    				jp nz,ui_loop
0011CD 3600                A  1143    				ld (hl),0
0011CF C3 49 11 00         A  1144    				jp ui_loop
                           A  1145    
0011D3                     A  1146    ui_enter_pressed
                           A  1147    				
0011D3 3A 7B 61 00         A  1148    				ld a,(ui_im_cache)				0011D7 32 22 5F 00         A  1149    				ld (overwrite_mode),a
0011DB 3A F5 5E 00         A  1150    				ld a,(ui_index)					0011DF B7                  A  1151    				or a
0011E0 20 04               A  1152    				jr nz,ui_data
0011E2 3E81                A  1153    				ld a,081h						0011E4 B7                  A  1154    				or a
0011E5 C9                  A  1155    				ret
0011E6 2A F7 5E 00         A  1156    ui_data			ld hl,(ui_string_addr)
0011EA 11000000            A  1157    				ld de,0
0011EE 5F                  A  1158    				ld e,a
0011EF 19                  A  1159    				add hl,de
0011F0 3600                A  1160    				ld (hl),0						0011F2 BF                  A  1161    				cp a							0011F3 C9                  A  1162    				ret
                           A  1163    
0011F4 3A 7B 61 00         A  1164    ui_aborted		ld a,(ui_im_cache)				0011F8 32 22 5F 00         A  1165    				ld (overwrite_mode),a
0011FC 3E80                A  1166    				ld a,080h						0011FE B7                  A  1167    				or a							0011FF C9                  A  1168    				ret
                           A  1169    		
                           A  1170    ;----------------------------------------------
                           A  1171    	
001200                     A  1172    os_count_lines
                           A  1173    
001200 E5                  A  1174    				push hl							001201 0679                A  1175    				ld b,'y'						001203 21 63 61 00         A  1176    				ld hl,os_linecount			
001207 34                  A  1177    				inc (hl)						001208 3A 25 5F 00         A  1178    				ld a,(charmap_rows)
00120C D604                A  1179    				sub 4
00120E BE                  A  1180    				cp (hl)
00120F 20 0E               A  1181    				jr nz,os_nntpo
001211 3600                A  1182    				ld (hl),0
001213 21 9E 56 00         A  1183    				ld hl,os_more_txt
001217 CD 5A 0F 00         A  1184    				call os_print_string
00121B CD 12 44 00         A  1185    				call os_wait_key_press	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  26


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00121F E1                  A  1186    os_nntpo		pop hl
001220 C9                  A  1187    				ret
                           A  1188    
                           A  1189    ;----------------------------------------------
                           A  1190    
001221                     A  1191    ext_compare_strings
                           A  1192    	
001221 CC ED 15 00         A  1193    				call z,mbase_hl
001225 CC FE 15 00         A  1194    				call z,mbase_de
                           A  1195    				
001229                     A  1196    os_compare_strings
                           A  1197    
                           A  1198    ; both strings at HL/DE should be zero terminat
                           A  1199    ; compare will fail if string lengths are diffe
                           A  1200    ; unless count (B) is reached first
                           A  1201    ; Case is ignored
                           A  1202    ; Zero flag set on return if same
                           A  1203    
001229 E5                  A  1204    				push hl							00122A D5                  A  1205    				push de							00122B 1A                  A  1206    ocslp			ld a,(de)						00122C B7                  A  1207    				or a
00122D 28 0C               A  1208    				jr z,ocsbt
00122F CD 6C 12 00         A  1209    				call case_insensitive_compare	001233 20 0E               A  1210    				jr nz,ocs_diff
001235 13                  A  1211    				inc de
001236 23                  A  1212    				inc hl
001237 10 F2               A  1213    				djnz ocslp
001239 18 04               A  1214    				jr ocs_same
00123B 1A                  A  1215    ocsbt			ld a,(de)						00123C B6                  A  1216    				or (hl)
00123D 20 04               A  1217    				jr nz,ocs_diff
00123F D1                  A  1218    ocs_same		pop de
001240 E1                  A  1219    				pop hl
001241 AF                  A  1220    				xor a							001242 C9                  A  1221    				ret
001243 D1                  A  1222    ocs_diff		pop de
001244 E1                  A  1223    				pop hl
001245 AF                  A  1224    				xor a							001246 3C                  A  1225    				inc a
001247 C9                  A  1226    				ret
                           A  1227    
                           A  1228    
                           A  1229    ;----------------------------------------------
                           A  1230    
001248                     A  1231    os_copy_ascii_run
                           A  1232    
                           A  1233    ;INPUT HL = source ($00 or $20 terminates)
                           A  1234    ;      DE = dest
                           A  1235    ;       b = max chars
                           A  1236    
                           A  1237    ;OUTPUT HL/DE = end of runs
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  27


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1238    ;           c = char count
                           A  1239    	
001248 0E00                A  1240    				ld c,0
00124A 7E                  A  1241    cpyar_lp		ld a,(hl)
00124B B7                  A  1242    				or a
00124C C8                  A  1243    				ret z
00124D FE20                A  1244    				cp 32
00124F C8                  A  1245    				ret z
001250 12                  A  1246    				ld (de),a
001251 23                  A  1247    				inc hl
001252 13                  A  1248    				inc de
001253 0C                  A  1249    				inc c
001254 10 F4               A  1250    				djnz cpyar_lp
001256 C9                  A  1251    				ret
                           A  1252    
                           A  1253    ;----------------------------------------------
                           A  1254    
001257                     A  1255    uppercasify_string
                           A  1256    
                           A  1257    ; Set HL to string location ($00 quits)
                           A  1258    ; Set B to max number of chars
                           A  1259    
001257 7E                  A  1260    				ld a,(hl)
001258 B7                  A  1261    				or a
001259 C8                  A  1262    				ret z
00125A CD 63 12 00         A  1263    				call os_uppercasify
00125E 77                  A  1264    				ld (hl),a
00125F 23                  A  1265    				inc hl
001260 10 F5               A  1266    				djnz uppercasify_string	
001262 C9                  A  1267    				ret
                           A  1268    	
                           A  1269    
001263                     A  1270    os_uppercasify
                           A  1271    
                           A  1272    ; INPUT/OUTPUT A = ascii char to make uppercase
                           A  1273    
001263 FE61                A  1274    				cp 061h			
001265 D8                  A  1275    				ret c
001266 FE7B                A  1276    				cp 07bh
001268 D0                  A  1277    				ret nc
001269 D620                A  1278    				sub 020h				
00126B C9                  A  1279    				ret
                           A  1280    
                           A  1281    ;----------------------------------------------
                           A  1282    
00126C                     A  1283    case_insensitive_compare
                           A  1284    
                           A  1285    ; compares A with (HL) disregarding the case of
                           A  1286    ; Zero flag set if the characters are the same
                           A  1287    ; all registers are preserved.
                           A  1288    
00126C C5                  A  1289    				push bc					
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  28


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00126D 4F                  A  1290    				ld c,a
                           A  1291    
00126E CD 63 12 00         A  1292    				call os_uppercasify				001272 47                  A  1293    				ld b,a
001273 7E                  A  1294    				ld a,(hl)
001274 CD 63 12 00         A  1295    				call os_uppercasify
001278 B8                  A  1296    				cp b
                           A  1297    
001279 79                  A  1298    				ld a,c
00127A C1                  A  1299    				pop bc
00127B C9                  A  1300    				ret
                           A  1301    
                           A  1302    ;----------------------------------------------
                           A  1303    
00127C                     A  1304    os_decimal_add
                           A  1305    
                           A  1306    ;INPUT HL = source LSB, DE = dest LSB, b = numb
                           A  1307    
00127C C5                  A  1308    				push bc
00127D 0E00                A  1309    				ld c,0
00127F 1A                  A  1310    decdlp			ld a,(de)
001280 86                  A  1311    				add a,(hl)
001281 81                  A  1312    				add a,c
001282 FE0A                A  1313    				cp 10
001284 38 0B               A  1314    				jr c,daddnc
001286 D60A                A  1315    				sub 10
001288 0E01                A  1316    				ld c,1
00128A 12                  A  1317    decnclp			ld (de),a
00128B 23                  A  1318    				inc hl
00128C 13                  A  1319    				inc de
00128D 10 F0               A  1320    				djnz decdlp
00128F C1                  A  1321    				pop bc
001290 C9                  A  1322    				ret
001291 0E00                A  1323    daddnc			ld c,0
001293 18 F5               A  1324    				jr decnclp
                           A  1325    	
                           A  1326    ;----------------------------------------------
                           A  1327    
001295                     A  1328    os_hex_to_decimal
                           A  1329    
                           A  1330    ; INPUT xDE hex longword
                           A  1331    ; OUTPUT xHL = decimal LSB address (8 digits) 
                           A  1332    
       000068AE            A  1333    hex_to_convert		equ scratch_pad
       000068B1            A  1334    decimal_digits		equ scratch_pad+3
       000068B9            A  1335    decimal_add_digits	equ scratch_pad+3+8
                           A  1336    
001295 ED53 AE 68 00       A  1337    				ld (hex_to_convert),de
                           A  1338    		
00129A 21 B9 68 00         A  1339    				ld hl,decimal_add_digits
00129E E5                  A  1340    				push hl
00129F 11 B1 68 00         A  1341    				ld de,decimal_digits
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  29


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0012A3 AF                  A  1342    				xor a
0012A4 0608                A  1343    				ld b,8
0012A6 12                  A  1344    setupdec		ld (de),a
0012A7 77                  A  1345    				ld (hl),a
0012A8 23                  A  1346    				inc hl
0012A9 13                  A  1347    				inc de
0012AA 10 FA               A  1348    				djnz setupdec
0012AC E1                  A  1349    				pop hl
0012AD 3601                A  1350    				ld (hl),1
                           A  1351    	
0012AF 21 AE 68 00         A  1352    				ld hl,hex_to_convert
0012B3 0603                A  1353    				ld b,3
0012B5 C5                  A  1354    decconvlp		push bc
0012B6 7E                  A  1355    				ld a,(hl)
0012B7 CD D5 12 00         A  1356    				call decadder
0012BB CD EE 12 00         A  1357    				call decaddx16
0012BF 7E                  A  1358    				ld a,(hl)
0012C0 0F                  A  1359    				rrca
0012C1 0F                  A  1360    				rrca
0012C2 0F                  A  1361    				rrca
0012C3 0F                  A  1362    				rrca
0012C4 CD D5 12 00         A  1363    				call decadder
0012C8 CD EE 12 00         A  1364    				call decaddx16
0012CC C1                  A  1365    				pop bc
0012CD 23                  A  1366    				inc hl
0012CE 10 E5               A  1367    				djnz decconvlp
0012D0 21 B1 68 00         A  1368    				ld hl,decimal_digits
0012D4 C9                  A  1369    				ret
                           A  1370    
                           A  1371    
                           A  1372    
0012D5 E60F                A  1373    decadder		and 15
0012D7 C8                  A  1374    				ret z
0012D8 47                  A  1375    				ld b,a
0012D9 E5                  A  1376    				push hl
0012DA C5                  A  1377    daddlp			push bc
0012DB 11 B1 68 00         A  1378    				ld de,decimal_digits
0012DF 21 B9 68 00         A  1379    				ld hl,decimal_add_digits
0012E3 0608                A  1380    				ld b,8
0012E5 CD 7C 12 00         A  1381    				call os_decimal_add
0012E9 C1                  A  1382    				pop bc
0012EA 10 EE               A  1383    				djnz daddlp	
0012EC E1                  A  1384    				pop hl
0012ED C9                  A  1385    				ret
                           A  1386    			
                           A  1387    				
0012EE E5                  A  1388    decaddx16		push hl
0012EF 0604                A  1389    				ld b,4							0012F1 C5                  A  1390    x16loop			push bc
0012F2 11 B9 68 00         A  1391    				ld de,decimal_add_digits
0012F6 21 B9 68 00         A  1392    				ld hl,decimal_add_digits
0012FA 0608                A  1393    				ld b,8
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  30


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0012FC CD 7C 12 00         A  1394    				call os_decimal_add
001300 C1                  A  1395    				pop bc
001301 10 EE               A  1396    				djnz x16loop	
001303 E1                  A  1397    				pop hl
001304 C9                  A  1398    				ret
                           A  1399    	
                           A  1400    	
                           A  1401    ;----------------------------------------------
                           A  1402    
001305                     A  1403    os_show_decimal
                           A  1404    
001305 11 CE 61 00         A  1405    				ld de,output_line				001309 01090000            A  1406    				ld bc,9
00130D 09                  A  1407    				add hl,bc
00130E 060A                A  1408    				ld b,10
001310 7E                  A  1409    shdeclp			ld a,(hl)
001311 B7                  A  1410    				or a
001312 28 04               A  1411    				jr z,dnodigit
001314 C630                A  1412    				add a,030h
001316 12                  A  1413    				ld (de),a
001317 13                  A  1414    				inc de
001318 2B                  A  1415    dnodigit		dec hl
001319 10 F5               A  1416    				djnz shdeclp
00131B AF                  A  1417    				xor a
00131C 12                  A  1418    				ld (de),a
00131D CD 65 13 00         A  1419    				call os_print_output_line
001321 C9                  A  1420    				ret
                           A  1421    				
                           A  1422    ;----------------------------------------------
                           A  1423    		
001322                     A  1424    os_copy_to_output_line
                           A  1425    	
001322 D5                  A  1426    				push de
001323 C5                  A  1427    				push bc
001324 11 CE 61 00         A  1428    				ld de,output_line				001328 01510000            A  1429    				ld bc,max_buffer_chars+1		00132C EDA0                A  1430    os_cloll		ldi
00132E 7E                  A  1431    				ld a,(hl)
00132F B7                  A  1432    				or a
001330 28 04               A  1433    				jr z,os_clold
001332 78                  A  1434    				ld a,b
001333 B1                  A  1435    				or c
001334 20 F6               A  1436    				jr nz,os_cloll
001336 12                  A  1437    os_clold		ld (de),a
001337 C1                  A  1438    				pop bc
001338 D1                  A  1439    				pop de
001339 C9                  A  1440    				ret
                           A  1441    
                           A  1442    
                           A  1443    ;----------------------------------------------
                           A  1444    
00133A                     A  1445    os_show_hex_address
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  31


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1446    
00133A E5                  A  1447    				push hl							00133B 21 CE 61 00         A  1448    				ld hl,output_line
00133F ED53 70 61 00       A  1449    				ld (hex_address),de
001344 3A 72 61 00         A  1450    				ld a,(hex_address+2)
001348 CD A5 10 00         A  1451    				call hexbyte_to_ascii
00134C 18 10               A  1452    				jr shw_nt
                           A  1453    				
                           A  1454    
00134E                     A  1455    os_show_hex_byte
                           A  1456    
00134E E5                  A  1457    				push hl							00134F 21 CE 61 00         A  1458    				ld hl,output_line
001353 CD A5 10 00         A  1459    				call hexbyte_to_ascii
001357 18 09               A  1460    				jr shb_nt
                           A  1461    
                           A  1462    
                           A  1463    
001359                     A  1464    os_show_hex_word
                           A  1465    
001359 E5                  A  1466    				push hl							00135A 21 CE 61 00         A  1467    				ld hl,output_line
00135E CD CA 10 00         A  1468    shw_nt			call hexword_to_ascii
001362 3600                A  1469    shb_nt			ld (hl),0
001364 E1                  A  1470    				pop hl
                           A  1471    
                           A  1472    	
                           A  1473    
001365                     A  1474    os_print_output_line
                           A  1475    
001365 E5                  A  1476    				push hl
001366 21 CE 61 00         A  1477    				ld hl,output_line
00136A CD 5A 0F 00         A  1478    cproline		call os_print_string
00136E E1                  A  1479    				pop hl
00136F C9                  A  1480    				ret
                           A  1481    
                           A  1482    
                           A  1483    
001370                     A  1484    os_print_output_line_skip_zeroes
                           A  1485    
001370 E5                  A  1486    				push hl
001371 21 CE 61 00         A  1487    				ld hl,output_line
001375 CD 82 10 00         A  1488    				call os_skip_leading_ascii_zero
001379 18 EF               A  1489    				jr cproline
                           A  1490    				
                           A  1491    		
                           A  1492    ;----------------------------------------------
                           A  1493    
00137B                     A  1494    os_store_CPU_regs
                           A  1495    
00137B F3                  A  1496    				di								                           A  1497    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  32


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00137C 33                  A  1498    				inc sp							00137D 33                  A  1499    				inc sp
00137E 33                  A  1500    				inc sp
00137F ED73 EC 60 00       A  1501    				ld (store_spl),sp
001384 3B                  A  1502    				dec sp							001385 3B                  A  1503    				dec sp
001386 3B                  A  1504    				dec sp
                           A  1505    				
001387 F5                  A  1506    				push af
001388 32 CF 60 00         A  1507    				ld (store_a1),a					00138C 08                  A  1508    				ex af,af'
00138D 32 D9 60 00         A  1509    				ld (store_a2),a
001391 08                  A  1510    				ex af,af'
001392 ED43 D0 60 00       A  1511    				ld (store_bc1),bc		
001397 ED53 D3 60 00       A  1512    				ld (store_de1),de
00139C 22 D6 60 00         A  1513    				ld (store_hl1),hl
0013A0 D9                  A  1514    				exx
0013A1 ED43 DA 60 00       A  1515    				ld (store_bc2),bc
0013A6 ED53 DD 60 00       A  1516    				ld (store_de2),de
0013AB 22 E0 60 00         A  1517    				ld (store_hl2),hl
0013AF D9                  A  1518    				exx
0013B0 DD22 E3 60 00       A  1519    				ld (store_ix),ix
0013B5 FD22 E6 60 00       A  1520    				ld (store_iy),iy
                           A  1521    				
0013BA ED6E                A  1522    			    ld a,MB
0013BC 32 F1 60 00         A  1523    				ld (store_mbase),a
                           A  1524    								
0013C0 C5                  A  1525    				push bc
0013C1 0600                A  1526    				ld b,0
0013C3 20 02               A  1527    				jr nz,zfstzero					0013C5 CBF0                A  1528    				set 6,b
                           A  1529    
0013C7 30 02               A  1530    zfstzero		jr nc,cfstzero					0013C9 CBC0                A  1531    				set 0,b
                           A  1532    
0013CB F2 D1 13 00         A  1533    cfstzero		jp p,sfstzero					0013CF CBF8                A  1534    				set 7,b
                           A  1535    
0013D1 EA D7 13 00         A  1536    sfstzero		jp pe,pfstzero					0013D5 CBD0                A  1537    				set 2,b
                           A  1538    
0013D7 ED57                A  1539    pfstzero		ld a,i			
0013D9 EA DF 13 00         A  1540    				jp pe,ifstzero					0013DD CBE0                A  1541    				set 4,b
                           A  1542    
0013DF 78                  A  1543    ifstzero		ld a,b
0013E0 32 F2 60 00         A  1544    				ld (store_f),a
                           A  1545    				
0013E4 3E00                A  1546    				ld a,os_location/65536			0013E6 ED6D                A  1547    				ld MB,a							0013E8 40ED73 EF 60        A  1548    				ld.sis (store_sps),sp
0013ED 3A F1 60 00         A  1549    				ld a,(store_mbase)				Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  33


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0013F1 ED6D                A  1550    				ld MB,a
                           A  1551    				
0013F3 C1                  A  1552    				pop bc
0013F4 F1                  A  1553    				pop af
0013F5 FB                  A  1554    				ei
0013F6 C9                  A  1555    				ret
                           A  1556    
                           A  1557    
                           A  1558    
0013F7                     A  1559    os_dont_store_registers
                           A  1560    
0013F7 AF                  A  1561    				xor a
0013F8 32 F7 60 00         A  1562    				ld (store_registers),a			0013FC C9                  A  1563    				ret
                           A  1564    	
                           A  1565    	
                           A  1566    ;----------------------------------------------
                           A  1567    
0013FD                     A  1568    os_new_line_cond
                           A  1569    
0013FD CD 5D 1A 00         A  1570    				call test_quiet_mode
001401 C0                  A  1571    				ret nz
                           A  1572    
                           A  1573    	
001402                     A  1574    os_new_line
                           A  1575    
001402 E5                  A  1576    				push hl
001403 21 B6 56 00         A  1577    				ld hl,crlfx2_txt+1
001407 CD 5A 0F 00         A  1578    				call os_print_string
00140B E1                  A  1579    				pop hl
00140C C9                  A  1580    				ret
                           A  1581    				
                           A  1582    ;----------------------------------------------
                           A  1583    
00140D                     A  1584    os_set_cursor_position
                           A  1585    				
                           A  1586    												00140D 3A 25 5F 00         A  1587    				ld a,(charmap_rows)				001411 3D                  A  1588    				dec a							001412 B9                  A  1589    				cp c
001413 38 14               A  1590    				jr c,badpos
001415 79                  A  1591    				ld a,c
001416 32 5E 61 00         A  1592    				ld (cursor_y),a
                           A  1593    				
00141A 3A 28 5F 00         A  1594    				ld a,(charmap_columns)
00141E 3D                  A  1595    				dec a
00141F B8                  A  1596    				cp b
001420 38 07               A  1597    				jr c,badpos
001422 78                  A  1598    				ld a,b
001423 32 5F 61 00         A  1599    				ld (cursor_x),a
001427 AF                  A  1600    				xor a
001428 C9                  A  1601    				ret				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  34


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1602    
001429 3E88                A  1603    badpos			ld a,88h						00142B B7                  A  1604    				or a
00142C C9                  A  1605    				ret
                           A  1606    
                           A  1607    
                           A  1608    					
                           A  1609    	
                           A  1610    	
00142D                     A  1611    os_get_cursor_position
                           A  1612    
00142D ED4B 5E 61 00       A  1613    				ld bc,(cursor_pos)				001432 BF                  A  1614    				cp a							001433 C9                  A  1615    				ret
                           A  1616    
                           A  1617    
                           A  1618    ;----------------------------------------------
                           A  1619    
001434                     A  1620    os_show_packed_text_cond
                           A  1621    
001434 CD 5D 1A 00         A  1622    				call test_quiet_mode
001438 C0                  A  1623    				ret nz
                           A  1624    
                           A  1625    	
001439                     A  1626    os_show_packed_text
                           A  1627    
                           A  1628    ; Construct sentence from internal dictionary u
                           A  1629    	
001439 C5                  A  1630    				push bc
00143A D5                  A  1631    				push de
00143B DDE5                A  1632    				push ix
00143D DD21 CE 61 00       A  1633    				ld ix,output_line
001442 7E                  A  1634    readpind		ld a,(hl)
001443 B7                  A  1635    				or a
001444 20 10               A  1636    				jr nz,getword					001446 DD2B                A  1637    				dec ix							001448 DD7700              A  1638    				ld (ix),a						                           A  1639    			
00144B E5                  A  1640    				push hl
00144C CD 65 13 00         A  1641    				call os_print_output_line
001450 E1                  A  1642    				pop hl
                           A  1643    			
001451 DDE1                A  1644    				pop ix
001453 D1                  A  1645    				pop de
001454 C1                  A  1646    				pop bc
001455 C9                  A  1647    				ret
                           A  1648    				
001456 11 E5 56 00         A  1649    getword			ld de,dictionary-1
00145A 0E00                A  1650    				ld c,0
00145C 13                  A  1651    dictloop		inc de
00145D 1A                  A  1652    				ld a,(de)
00145E B7                  A  1653    				or a							Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  35


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00145F 28 04               A  1654    				jr z,faword
001461 CB7F                A  1655    				bit 7,a							001463 28 F7               A  1656    				jr z,dictloop	
                           A  1657    			
001465 0C                  A  1658    faword			inc c							001466 79                  A  1659    				ld a,c
001467 BE                  A  1660    				cp (hl)
001468 20 F2               A  1661    				jr nz,dictloop
00146A 13                  A  1662    copytol			inc de							00146B 1A                  A  1663    				ld a,(de)
00146C B7                  A  1664    				or a
00146D 28 0B               A  1665    				jr z,eoword						00146F CB7F                A  1666    				bit 7,a
001471 20 07               A  1667    				jr nz,eoword
001473 DD7700              A  1668    				ld (ix),a						001476 DD23                A  1669    				inc ix
001478 18 F0               A  1670    				jr copytol
00147A DD360020            A  1671    eoword			ld (ix),32						00147E DD23                A  1672    				inc ix
001480 23                  A  1673    				inc hl
001481 18 BF               A  1674    				jr readpind
                           A  1675    
                           A  1676    
                           A  1677    		
                           A  1678    ;--------- Mouse functions --------------------
                           A  1679    
001483                     A  1680    os_set_mouse_window
                           A  1681    
                           A  1682    ; Set: HL/DE = window size mouse pointer is to 
                           A  1683    	
001483 22 A5 62 00         A  1684    				ld (mouse_window_size_x),hl	 
001487 ED53 A8 62 00       A  1685    				ld (mouse_window_size_y),de
00148C 21000000            A  1686    				ld hl,0
001490 22 AB 62 00         A  1687    				ld (mouse_abs_x),hl
001494 22 AE 62 00         A  1688    				ld (mouse_abs_y),hl
001498 3E01                A  1689    				ld a,1
00149A 32 BD 62 00         A  1690    				ld (mouse_new_window),a
00149E AF                  A  1691    				xor a
00149F C9                  A  1692    				ret
                           A  1693    				
                           A  1694    			
0014A0                     A  1695    os_get_mouse_motion
                           A  1696    			
                           A  1697    ; Returns: ZF = Set: Relative X coord in HL, Re
                           A  1698    ;          ZF = Not set: Mouse driver not initi
                           A  1699    			
0014A0 3A C2 60 00         A  1700    				ld a,(devices_connected)
0014A4 E602                A  1701    				and 2
0014A6 EE02                A  1702    				xor 2
0014A8 C0                  A  1703    				ret nz
0014A9 AF                  A  1704    ms_reread		xor a
0014AA 32 A4 62 00         A  1705    				ld (mouse_updated),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  36


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0014AE 2A 9D 62 00         A  1706    				ld hl,(mouse_disp_x)			0014B2 ED5B A0 62 00       A  1707    				ld de,(mouse_disp_y)
0014B7 3A A4 62 00         A  1708    				ld a,(mouse_updated)			0014BB B7                  A  1709    				or a
0014BC 20 EB               A  1710    				jr nz,ms_reread
0014BE AF                  A  1711    mouse_end		xor a
0014BF 3A A3 62 00         A  1712    				ld a,(mouse_wheel)
0014C3 47                  A  1713    				ld b,a
0014C4 3A 9C 62 00         A  1714    				ld a,(mouse_buttons)
0014C8 C9                  A  1715    				ret
                           A  1716    			
                           A  1717    			
0014C9                     A  1718    os_get_mouse_position
                           A  1719    
                           A  1720    ; Returns: ZF = Set: Abolute X coord in HL, Abs
                           A  1721    ;          ZF = Not set: Mouse driver not initi
                           A  1722    				
0014C9 CD A0 14 00         A  1723    				call os_get_mouse_motion
0014CD C0                  A  1724    				ret nz
0014CE 22 B7 62 00         A  1725    				ld (mouse_disp_x_buffer),hl
0014D2 ED53 BA 62 00       A  1726    				ld (mouse_disp_y_buffer),de
0014D7 3A BD 62 00         A  1727    				ld a,(mouse_new_window)
0014DB B7                  A  1728    				or a
0014DC 20 6C               A  1729    				jr nz,ms_nmw
                           A  1730    
0014DE ED5B B1 62 00       A  1731    				ld de,(mouse_disp_x_old)
0014E3 AF                  A  1732    				xor a
0014E4 ED52                A  1733    				sbc hl,de
0014E6 EB                  A  1734    				ex de,hl
0014E7 2A AB 62 00         A  1735    				ld hl,(mouse_abs_x)
0014EB 19                  A  1736    				add hl,de
0014EC E5                  A  1737    				push hl
0014ED C1                  A  1738    				pop bc
0014EE DD210000 80         A  1739    				ld ix,800000h					0014F3 DD09                A  1740    				add ix,bc
0014F5 30 06               A  1741    				jr nc,ms_x_ok1
0014F7 01000000            A  1742    				ld bc,0
0014FB 18 10               A  1743    				jr ms_x_ok2
0014FD ED5B A5 62 00       A  1744    ms_x_ok1		ld de,(mouse_window_size_x)
001502 AF                  A  1745    				xor a
001503 ED52                A  1746    				sbc hl,de
001505 38 06               A  1747    				jr c,ms_x_ok2
001507 ED4B A5 62 00       A  1748    				ld bc,(mouse_window_size_x)		00150C 0B                  A  1749    				dec bc
00150D ED43 AB 62 00       A  1750    ms_x_ok2		ld (mouse_abs_x),bc
                           A  1751    					
001512 2A BA 62 00         A  1752    				ld hl,(mouse_disp_y_buffer)
001516 ED5B B4 62 00       A  1753    				ld de,(mouse_disp_y_old)
00151B AF                  A  1754    				xor a
00151C ED52                A  1755    				sbc hl,de
00151E EB                  A  1756    				ex de,hl
00151F 2A AE 62 00         A  1757    				ld hl,(mouse_abs_y)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  37


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001523 19                  A  1758    				add hl,de
001524 E5                  A  1759    				push hl
001525 C1                  A  1760    				pop bc
001526 DD210000 80         A  1761    				ld ix,800000h					00152B DD09                A  1762    				add ix,bc
00152D 30 06               A  1763    				jr nc,ms_y_ok1
00152F 01000000            A  1764    				ld bc,0
001533 18 10               A  1765    				jr ms_y_ok2
001535 ED5B A8 62 00       A  1766    ms_y_ok1		ld de,(mouse_window_size_y)
00153A AF                  A  1767    				xor a
00153B ED52                A  1768    				sbc hl,de
00153D 38 06               A  1769    				jr c,ms_y_ok2
00153F ED4B A8 62 00       A  1770    				ld bc,(mouse_window_size_y)		001544 0B                  A  1771    				dec bc
001545 ED43 AE 62 00       A  1772    ms_y_ok2		ld (mouse_abs_y),bc
                           A  1773    
                           A  1774    				
00154A 2A B7 62 00         A  1775    ms_nmw			ld hl,(mouse_disp_x_buffer)
00154E 22 B1 62 00         A  1776    				ld (mouse_disp_x_old),hl
001552 2A BA 62 00         A  1777    				ld hl,(mouse_disp_y_buffer)
001556 22 B4 62 00         A  1778    				ld (mouse_disp_y_old),hl
                           A  1779    				
00155A 2A AB 62 00         A  1780    				ld hl,(mouse_abs_x)
00155E ED5B AE 62 00       A  1781    				ld de,(mouse_abs_y)
                           A  1782    				
001563 AF                  A  1783    				xor a
001564 32 BD 62 00         A  1784    				ld (mouse_new_window),a
001568 C3 BE 14 00         A  1785    				jp mouse_end
                           A  1786    				
                           A  1787    	
                           A  1788    ;==============================================
                           A  1789    ;----- General Subroutines --------------------
                           A  1790    ;==============================================
                           A  1791    
                           A  1792    ; .--------------.
                           A  1793    ; ! CRC Checksum !
                           A  1794    ; '--------------'
                           A  1795    
                           A  1796    ; makes 16 bit checksum in HL, src addr = DE, l
                           A  1797    
00156C                     A  1798    crc_checksum
                           A  1799    
00156C 21FFFF00            A  1800    				ld hl,0ffffh		
001570 1A                  A  1801    crcloop			ld a,(de)			
001571 AC                  A  1802    				xor h			
001572 67                  A  1803    				ld h,a			
001573 0608                A  1804    				ld b,8
001575 4029                A  1805    crcbyte			add.sis hl,hl					001577 30 08               A  1806    				jr nc,crcnext
001579 7C                  A  1807    				ld a,h
00157A EE10                A  1808    				xor 10h
00157C 67                  A  1809    				ld h,a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  38


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00157D 7D                  A  1810    				ld a,l
00157E EE21                A  1811    				xor 21h
001580 6F                  A  1812    				ld l,a
001581 10 F2               A  1813    crcnext			djnz crcbyte
001583 13                  A  1814    				inc de
001584 0D                  A  1815    				dec c
001585 20 E9               A  1816    				jr nz,crcloop
001587 C9                  A  1817    				ret
                           A  1818    
                           A  1819    
                           A  1820    ;----------------------------------------------
                           A  1821    
001588                     A  1822    os_get_key_mod_flags
                           A  1823    
001588 3A 92 62 00         A  1824    				ld a,(key_mod_flags)
00158C BF                  A  1825    				cp a							00158D C9                  A  1826    				ret
                           A  1827    
                           A  1828    ;----------------------------------------------
                           A  1829    
00158E                     A  1830    os_get_vmode
                           A  1831    			
00158E 3A 25 5F 00         A  1832    				ld a,(charmap_rows)
001592 4F                  A  1833    				ld c,a
001593 3A 28 5F 00         A  1834    				ld a,(charmap_columns)
001597 47                  A  1835    				ld b,a
001598 3A FA 5E 00         A  1836    				ld a,(video_mode)
00159C BF                  A  1837    				cp a						; Z
00159D C9                  A  1838    				ret
                           A  1839    
                           A  1840    ;----------------------------------------------
                           A  1841    
00159E 7B                  A  1842    ext_set_vmode	ld a,e
                           A  1843    
00159F FE04                A  1844    os_set_vmode	cp 4
0015A1 38 04               A  1845    				jr c,vm_range_ok
0015A3 3E88                A  1846    				ld a,88h					;ou
0015A5 B7                  A  1847    				or a
0015A6 C9                  A  1848    				ret
                           A  1849    				
0015A7 32 FA 5E 00         A  1850    vm_range_ok		ld (video_mode),a
0015AB 21030000            A  1851    				ld hl,3
0015AF 67                  A  1852    				ld h,a
0015B0 ED6C                A  1853    				mlt hl
0015B2 11 2B 5F 00         A  1854    				ld de,vmode_parameter_list
0015B6 19                  A  1855    				add hl,de
0015B7 7E                  A  1856    				ld a,(hl)
0015B8 23                  A  1857    				inc hl
0015B9 46                  A  1858    				ld b,(hl)
0015BA 23                  A  1859    				inc hl
0015BB 4E                  A  1860    				ld c,(hl)
0015BC CD FA 3D 00         A  1861    				call set_charmap_parameters
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  39


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1862    				
0015C0 CD 97 3E 00         A  1863    				call hwsc_clear_screen
                           A  1864    
0015C4 AF                  A  1865    				xor a				
0015C5 C9                  A  1866    				ret
                           A  1867    
                           A  1868    
                           A  1869    ;----------------------------------------------
                           A  1870    
0015C6                     A  1871    os_bchl_memfill
                           A  1872    
                           A  1873    ; fill memory from xHL with A. Count in xBC.
                           A  1874    		
0015C6 77                  A  1875    mf_loop			ld (hl),a
0015C7 EDA1                A  1876    				cpi								0015C9 EA C6 15 00         A  1877    				jp pe,mf_loop
0015CD C9                  A  1878    				ret
                           A  1879    	
                           A  1880    ;----------------------------------------------
                           A  1881    
0015CE 7B                  A  1882    ext_set_pen		ld a,e
                           A  1883    
0015CF 32 FB 5E 00         A  1884    os_set_pen		ld (current_pen),a
0015D3 BF                  A  1885    				cp a							0015D4 C9                  A  1886    				ret
                           A  1887    
                           A  1888    ;----------------------------------------------
                           A  1889    	
0015D5 3A FB 5E 00         A  1890    os_get_pen		ld a,(current_pen)
0015D9 BF                  A  1891    				cp a							0015DA C9                  A  1892    				ret	
                           A  1893    
                           A  1894    ;----------------------------------------------
                           A  1895    
0015DB                     A  1896    ext_background_colours
                           A  1897    				
0015DB CC ED 15 00         A  1898    				call z,mbase_hl
0015DF C3 8B 3E 00         A  1899    				jp hswc_set_ui_colours
                           A  1900    				
                           A  1901    				
                           A  1902    ;----------------------------------------------
                           A  1903    
0015E3                     A  1904    os_get_xde_msb	
                           A  1905    			
0015E3 ED53 76 61 00       A  1906    				ld (xrr_temp),de				0015E8 3A 78 61 00         A  1907    				ld a,(xrr_temp+2)
0015EC C9                  A  1908    				ret
                           A  1909    
                           A  1910    ;----------------------------------------------
                           A  1911    
0015ED F5                  A  1912    mbase_hl		push af
0015EE 22 76 61 00         A  1913    				ld (xrr_temp),hl				Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  40


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0015F2 ED6E                A  1914    				ld a,MB
0015F4 32 78 61 00         A  1915    				ld (xrr_temp+2),a
0015F8 2A 76 61 00         A  1916    				ld hl,(xrr_temp)
0015FC F1                  A  1917    				pop af
0015FD C9                  A  1918    				ret
                           A  1919    				
0015FE F5                  A  1920    mbase_de		push af
0015FF ED53 76 61 00       A  1921    				ld (xrr_temp),de				001604 ED6E                A  1922    				ld a,MB
001606 32 78 61 00         A  1923    				ld (xrr_temp+2),a
00160A ED5B 76 61 00       A  1924    				ld de,(xrr_temp)
00160F F1                  A  1925    				pop af
001610 C9                  A  1926    				ret
                           A  1927    
                           A  1928    
                           A  1929    ;----------------------------------------------
                           A  1930    ; Unpacks Phil's Z80P_RLE packed files - V1.02 
                           A  1931    ;----------------------------------------------
                           A  1932    
001611                     A  1933    unpack_rle
                           A  1934    
                           A  1935    ;set xHL = source address of packed file
                           A  1936    ;set xDE = destination address for unpacked dat
                           A  1937    ;set xBC = length of packed file
                           A  1938    
001611 E5                  A  1939    			push hl	
001612 DDE1                A  1940    			pop ix
001614 0B                  A  1941    			dec bc								001615 23                  A  1942    			inc hl
001616 DD7E00              A  1943    unp_gtok	ld a,(ix)							001619 BE                  A  1944    unp_next	cp (hl)								00161A 28 07               A  1945    			jr z,unp_brun						00161C EDA0                A  1946    			ldi									00161E EA 19 16 00         A  1947    			jp pe,unp_next						001622 C9                  A  1948    			ret
                           A  1949    	
001623 C5                  A  1950    unp_brun	push bc								001624 23                  A  1951    			inc hl		
001625 7E                  A  1952    			ld a,(hl)							001626 23                  A  1953    			inc hl		
001627 46                  A  1954    			ld b,(hl)							001628 23                  A  1955    			inc hl
                           A  1956    	
001629 12                  A  1957    unp_rllp	ld (de),a							00162A 13                  A  1958    			inc de			
00162B 10 FC               A  1959    			djnz unp_rllp
                           A  1960    	
00162D C1                  A  1961    			pop bc	
00162E 0B                  A  1962    			dec bc								00162F 0B                  A  1963    			dec bc
001630 0B                  A  1964    			dec bc
001631 E5                  A  1965    			push hl								Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  41


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001632 21000000            A  1966    			ld hl,0
001636 B7                  A  1967    			or a
001637 ED4A                A  1968    			adc hl,bc
001639 E1                  A  1969    			pop hl
00163A 20 DA               A  1970    			jr nz,unp_gtok
00163C C9                  A  1971    			ret	
                           A  1972    	
                           A  1973    ;----------------------------------------------
                           A  1974    ; Commonly called error messages - gets message
                           A  1975    ;----------------------------------------------
                           A  1976    
                           A  1977    
00163D 3E0D                A  1978    os_no_fn_error		ld a,0dh
00163F B7                  A  1979    					or a
001640 C9                  A  1980    					ret
                           A  1981    			
001641 3E15                A  1982    os_fn_too_long		ld a,15h
001643 B7                  A  1983    					or a
001644 C9                  A  1984    					ret
                           A  1985    				
001645 3E16                A  1986    os_no_start_addr	ld a,16h
001647 B7                  A  1987    					or a
001648 C9                  A  1988    					ret
                           A  1989    			
001649 3E17                A  1990    os_no_filesize		ld a,17h
00164B B7                  A  1991    					or a
00164C C9                  A  1992    					ret
                           A  1993    			
00164D 3E18                A  1994    os_abort_save		ld a,18h
00164F B7                  A  1995    					or a
001650 C9                  A  1996    					ret
                           A  1997    			
001651 3E1C                A  1998    os_no_e_addr_error	ld a,1ch
001653 B7                  A  1999    					or a
001654 C9                  A  2000    					ret
                           A  2001    			
001655 3E1D                A  2002    os_no_d_addr_error	ld a,1dh
001657 B7                  A  2003    					or a
001658 C9                  A  2004    					ret
                           A  2005    				
001659 3E1E                A  2006    os_range_error		ld a,1eh
00165B B7                  A  2007    					or a
00165C C9                  A  2008    					ret
                           A  2009    			
00165D 3E1F                A  2010    os_no_args_error	ld a,1fh
00165F B7                  A  2011    					or a
001660 C9                  A  2012    					ret	
                           A  2013    
                           A  2014    ;----------------------------------------------
                           A  2015    
                           A  2016    ; Set xHL to address of zero terminated filenam
                           A  2017    ; RETURNS:	C:xDE  = File length
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  42


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2018    ;    		HL     = Start cluster of file
                           A  2019    
001661 CC ED 15 00         A  2020    ext_find_file	call z,mbase_hl
                           A  2021    
001665 CD 8E 52 00         A  2022    os_find_file	call fs_hl_to_filename
001669 CD 27 4A 00         A  2023    				call fs_open_file_command		00166D 38 02               A  2024    				jr c,os_fferr					00166F B7                  A  2025    				or a							001670 C9                  A  2026    				ret 		
                           A  2027    								
001671 47                  A  2028    os_fferr		ld b,a							001672 AF                  A  2029    				xor a			
001673 4F                  A  2030    				ld c,a
001674 0C                  A  2031    				inc c							001675 C9                  A  2032    				ret	
                           A  2033    
                           A  2034    ;----------------------------------------------
                           A  2035    
001676                     A  2036    os_set_load_length
                           A  2037    
001676 ED53 E6 54 00       A  2038    				ld (fs_file_transfer_length),de
00167B BF                  A  2039    				cp a							00167C C9                  A  2040    				ret
                           A  2041    				
                           A  2042    ;----------------------------------------------
                           A  2043    
00167D                     A  2044    ext_set_file_pointer
                           A  2045    
00167D 79                  A  2046    				ld a,c
                           A  2047    				
00167E                     A  2048    os_set_file_pointer
                           A  2049    
                           A  2050    ; Moves the 'start of file' pointer allowing ra
                           A  2051    ; Note: File pointer is reset by opening a file
                           A  2052    ; by normal read function.
                           A  2053    
00167E ED53 DA 54 00       A  2054    				ld (fs_file_pointer),de			001683 32 DD 54 00         A  2055    				ld (fs_file_pointer+3),a
001687 F5                  A  2056    				push af
001688 AF                  A  2057    				xor a
001689 32 0C 55 00         A  2058    				ld (fs_filepointer_valid),a		00168D F1                  A  2059    				pop af
00168E BF                  A  2060    				cp a							00168F C9                  A  2061    				ret
                           A  2062    				
                           A  2063    ;----------------------------------------------
                           A  2064    
                           A  2065    ; set xHL = load address 
                           A  2066    ; (Before calling this routine, call os_find_fi
                           A  2067    
001690                     A  2068    ext_read_bytes_from_file
                           A  2069    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  43


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001690 CC ED 15 00         A  2070    				call z,mbase_hl					                           A  2071    				
001694                     A  2072    os_read_bytes_from_file
                           A  2073    
001694 22 EF 54 00         A  2074    				ld (fs_ez80_address),hl			001698 CD 72 4A 00         A  2075    				call fs_read_data_command
00169C 38 D3               A  2076    				jr c,os_fferr
00169E B7                  A  2077    				or a
00169F C9                  A  2078    				ret
                           A  2079    
                           A  2080    ;----------------------------------------------
                           A  2081    
                           A  2082    ; Before calling, set xHL = address of zero ter
                           A  2083    
0016A0 CC ED 15 00         A  2084    ext_create_file	call z,mbase_hl
                           A  2085    
0016A4 CD 8E 52 00         A  2086    os_create_file	call fs_hl_to_filename
0016A8 CD 28 4D 00         A  2087    				call fs_create_file_command		0016AC DA 71 16 00         A  2088    				jp c,os_fferr					0016B0 B7                  A  2089    				or a
0016B1 C9                  A  2090    				ret
                           A  2091    
                           A  2092    ;----------------------------------------------
                           A  2093    
0016B2                     A  2094    ext_write_bytes_to_file
                           A  2095    
0016B2 CC ED 15 00         A  2096    				call z,mbase_hl
0016B6 CC FE 15 00         A  2097    				call z,mbase_de
                           A  2098    
0016BA                     A  2099    os_write_bytes_to_file
                           A  2100    
                           A  2101    ; Before calling, set..
                           A  2102    
                           A  2103    ; xDE   = address to save data from
                           A  2104    ; xBC   = number of bytes to save
                           A  2105    ; xHL   = address of null-terminated ascii name
                           A  2106    
                           A  2107    ; On return:
                           A  2108    
                           A  2109    ; If zero flag NOT set, there was an error.
                           A  2110    ; If   A = $00, b = hardware error code
                           A  2111    ; Else A = File system error code
                           A  2112    
                           A  2113    ; NOTE:
                           A  2114    ; Will return 'file not found' if the file has 
                           A  2115    				
0016BA ED43 E6 54 00       A  2116    				ld (fs_file_transfer_length),bc
0016BF ED53 EF 54 00       A  2117    				ld (fs_ez80_address),de	 	
0016C4 CD 8E 52 00         A  2118    				call fs_hl_to_filename
0016C8 CD 5A 4D 00         A  2119    				call fs_write_bytes_to_file_com
0016CC DA 71 16 00         A  2120    				jp c,os_fferr
0016D0 B7                  A  2121    				or a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  44


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0016D1 C9                  A  2122    				ret
                           A  2123    		
                           A  2124    		
                           A  2125    ;----------------------------------------------
                           A  2126    	
                           A  2127    
0016D2                     A  2128    os_check_volume_format
                           A  2129    
0016D2 CD 80 48 00         A  2130    				call fs_check_disk_format
0016D6 DA 71 16 00         A  2131    os_rffsc		jp c,os_fferr
0016DA B7                  A  2132    				or a
0016DB C9                  A  2133    				ret
                           A  2134    
                           A  2135    ;----------------------------------------------
                           A  2136    
                           A  2137    
0016DC 7B                  A  2138    ext_format		ld a,e
0016DD CC ED 15 00         A  2139    				call z,mbase_hl					                           A  2140    
0016E1 E5                  A  2141    os_format		push hl							0016E2 CD F0 1A 00         A  2142    				call dev_to_driver_lookup
0016E6 E1                  A  2143    				pop hl
0016E7 38 04               A  2144    				jr c,sdevok
0016E9 3ED0                A  2145    				ld a,0d0h						0016EB B7                  A  2146    				or a
0016EC C9                  A  2147    				ret
                           A  2148    
0016ED F5                  A  2149    sdevok			push af				
0016EE 11 B6 54 00         A  2150    				ld de,fs_sought_filename
0016F2 CD 9D 53 00         A  2151    				call fs_clear_filename
0016F6 060B                A  2152    				ld b,11
0016F8 CD 48 12 00         A  2153    				call os_copy_ascii_run
0016FC F1                  A  2154    				pop af
                           A  2155    				
0016FD 21 84 5F 00         A  2156    				ld hl,current_driver
001701 46                  A  2157    				ld b,(hl)
001702 77                  A  2158    				ld (hl),a
001703 C5                  A  2159    				push bc
001704 E5                  A  2160    				push hl
001705 CD F5 46 00         A  2161    				call fs_format_device_command
001709 E1                  A  2162    				pop hl
00170A C1                  A  2163    				pop bc
00170B 70                  A  2164    				ld (hl),b
00170C 18 C8               A  2165    				jr os_rffsc
                           A  2166    
                           A  2167    
                           A  2168    ;----------------------------------------------
                           A  2169    
                           A  2170    
00170E CC ED 15 00         A  2171    ext_make_dir	call z,mbase_hl					                           A  2172    
001712 CD 8E 52 00         A  2173    os_make_dir		call fs_hl_to_filename
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  45


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001716 CD A0 4B 00         A  2174    				call fs_make_dir_command
00171A 18 BA               A  2175    				jr os_rffsc
                           A  2176    
                           A  2177    
                           A  2178    ;----------------------------------------------
                           A  2179    
                           A  2180    
00171C CC ED 15 00         A  2181    ext_change_dir	call z,mbase_hl					                           A  2182    
001720 CD 8E 52 00         A  2183    os_change_dir	call fs_hl_to_filename
001724 CD D3 49 00         A  2184    				call fs_change_dir_command
001728 18 AC               A  2185    				jr os_rffsc
                           A  2186    				
                           A  2187    	
                           A  2188    ;----------------------------------------------
                           A  2189    	
                           A  2190    	
00172A CD 04 4A 00         A  2191    os_parent_dir	call fs_parent_dir_command
00172E 18 A6               A  2192    				jr os_rffsc
                           A  2193    				
                           A  2194    
                           A  2195    ;----------------------------------------------
                           A  2196    
                           A  2197    	
001730 CD F8 49 00         A  2198    os_root_dir		call fs_goto_root_dir_command
001734 18 A0               A  2199    				jr os_rffsc
                           A  2200    
                           A  2201    
                           A  2202    ;----------------------------------------------
                           A  2203    
                           A  2204    
001736 CC ED 15 00         A  2205    ext_erase_file	call z,mbase_hl					                           A  2206    
00173A CD 8E 52 00         A  2207    os_erase_file	call fs_hl_to_filename
00173E CD E9 4E 00         A  2208    				call fs_erase_file_command
001742 18 92               A  2209    				jr os_rffsc
                           A  2210    	
                           A  2211    
                           A  2212    ;----------------------------------------------
                           A  2213    
                           A  2214    
001744                     A  2215    os_goto_first_dir_entry	
                           A  2216    
001744 CD 44 4F 00         A  2217    				call fs_goto_first_dir_entry
001748 18 8C               A  2218    				jr os_rffsc
                           A  2219    
                           A  2220    
                           A  2221    ;----------------------------------------------
                           A  2222    
                           A  2223    
00174A                     A  2224    os_get_dir_entry		
                           A  2225    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  46


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00174A CD 5B 4F 00         A  2226    				call fs_get_dir_entry	
00174E 18 86               A  2227    				jr os_rffsc
                           A  2228    
                           A  2229    
                           A  2230    ;----------------------------------------------
                           A  2231    
                           A  2232    
001750                     A  2233    os_goto_next_dir_entry	
                           A  2234    	
001750 CD E8 4F 00         A  2235    				call fs_goto_next_dir_entry	
001754 18 80               A  2236    				jr os_rffsc
                           A  2237    
                           A  2238    
                           A  2239    ;----------------------------------------------
                           A  2240    
                           A  2241    
001756                     A  2242    os_get_current_dir_name
                           A  2243    
001756 CD 54 53 00         A  2244    				call fs_get_current_dir_name
00175A C3 D6 16 00         A  2245    				jr os_rffsc
                           A  2246    				
                           A  2247    
                           A  2248    ;----------------------------------------------
                           A  2249    
                           A  2250    
00175E CC ED 15 00         A  2251    ext_rename_file	call z,mbase_hl
001762 CC FE 15 00         A  2252    				call z,mbase_de
                           A  2253    
001766 D5                  A  2254    os_rename_file	push de
001767 CD 88 52 00         A  2255    				call fs_hl_to_alt_filename		00176B E1                  A  2256    				pop hl				
00176C CD 8E 52 00         A  2257    				call fs_hl_to_filename	
001770 CD 00 4F 00         A  2258    				call fs_rename_command
001774 C3 D6 16 00         A  2259    				jr os_rffsc
                           A  2260    				
                           A  2261    
                           A  2262    ;----------------------------------------------
                           A  2263    
                           A  2264    
001778 CC ED 15 00         A  2265    ext_delete_dir	call z,mbase_hl					                           A  2266    
00177C CD 8E 52 00         A  2267    os_delete_dir	call fs_hl_to_filename
001780 CD 79 4C 00         A  2268    				call fs_delete_dir_command
001784 C3 D6 16 00         A  2269    				jp os_rffsc
                           A  2270    	
                           A  2271    	
                           A  2272    ;----- LOW LEVEL SECTOR ACCESS ETC FOR EXTERNAL
                           A  2273    
                           A  2274    
001788                     A  2275    ext_read_sector
001788 CD D3 17 00         A  2276    				call ext_sector_access_preamble
00178C C0                  A  2277    				ret nz
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  47


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00178D 32 84 5F 00         A  2278    				ld (current_driver),a
001791 CD 2B 54 00         A  2279    				call fs_read_sector
001795 20 11               A  2280    				jr nz,sect_done
001797 38 0F               A  2281    				jr c,sect_done
001799 21 AE 66 00         A  2282    				ld hl,sector_buffer
00179D ED5B 94 5F 00       A  2283    				ld de,(sector_rd_wr_addr)
0017A2 01000200            A  2284    				ld bc,512
0017A6 EDB0                A  2285    				ldir			
0017A8 F5                  A  2286    sect_done		push af
0017A9 3A B4 60 00         A  2287    				ld a,(sys_driver_backup)		0017AD 32 84 5F 00         A  2288    				ld (current_driver),a
0017B1 F1                  A  2289    				pop af
0017B2 C3 D6 16 00         A  2290    				jp os_rffsc
                           A  2291    				
                           A  2292    
0017B6                     A  2293    ext_write_sector
                           A  2294    			
0017B6 CD D3 17 00         A  2295    				call ext_sector_access_preamble
0017BA C0                  A  2296    				ret nz
0017BB 32 84 5F 00         A  2297    				ld (current_driver),a
0017BF 2A 94 5F 00         A  2298    				ld hl,(sector_rd_wr_addr)
0017C3 11 AE 66 00         A  2299    				ld de,sector_buffer
0017C7 01000200            A  2300    				ld bc,512
0017CB EDB0                A  2301    				ldir			
0017CD CD 44 54 00         A  2302    				call fs_write_sector
0017D1 18 D5               A  2303    				jr sect_done
                           A  2304    
                           A  2305    
0017D3                     A  2306    ext_sector_access_preamble
                           A  2307    
0017D3 CC ED 15 00         A  2308    				call z,mbase_hl
0017D7 22 94 5F 00         A  2309    				ld (sector_rd_wr_addr),hl
                           A  2310    				
0017DB 78                  A  2311    				ld a,b
0017DC F5                  A  2312    				push af							0017DD DD21 5A 61 00       A  2313    				ld ix,sector_lba0
0017E2 DD1F00              A  2314    				ld (ix),de						0017E5 DD7103              A  2315    				ld (ix+3),c
0017E8 CD F0 1A 00         A  2316    				call dev_to_driver_lookup		0017EC E5                  A  2317    				push hl
0017ED DDE1                A  2318    				pop ix
0017EF 2A 5A 61 00         A  2319    				ld hl,(sector_lba0)				0017F3 3A 5D 61 00         A  2320    				ld a,(sector_lba3)				0017F7 DD0701              A  2321    				ld bc,(ix+1)					0017FA B7                  A  2322    				or a							0017FB ED42                A  2323    				sbc hl,bc
0017FD DD9E04              A  2324    				sbc a,(ix+4)
001800 38 05               A  2325    				jr c,range_ok
001802 F1                  A  2326    				pop af
001803 3ED5                A  2327    				ld a,0d5h						001805 B7                  A  2328    				or a							001806 C9                  A  2329    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  48


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2330    	
001807 3A 84 5F 00         A  2331    range_ok		ld a,(current_driver)
00180B 32 B4 60 00         A  2332    				ld (sys_driver_backup),a
00180F F1                  A  2333    				pop af							001810 CD F0 1A 00         A  2334    				call dev_to_driver_lookup
001814 30 02               A  2335    				jr nc,bad_dev
001816 BF                  A  2336    os_null			cp a							001817 C9                  A  2337    				ret
                           A  2338    					
001818 3ED0                A  2339    bad_dev			ld a,0d0h						00181A B7                  A  2340    				or a							00181B C9                  A  2341    				ret	
                           A  2342    			
                           A  2343    
                           A  2344    ;----------------------------------------------
                           A  2345    
                           A  2346    
00181C                     A  2347    os_get_device_info
                           A  2348    
00181C 21 2F 60 00         A  2349    				ld hl,host_device_hardware_info
001820 11 AD 3B 00         A  2350    				ld de,driver_table
001824 3A 85 5F 00         A  2351    				ld a,(device_count)
001828 47                  A  2352    				ld b,a
001829 3A 84 5F 00         A  2353    				ld a,(current_driver)
00182D BF                  A  2354    				cp a
00182E C9                  A  2355    				ret
                           A  2356    
                           A  2357    
                           A  2358    
                           A  2359    
00182F                     A  2360    os_get_volume_info
                           A  2361    
00182F 21 AF 5F 00         A  2362    				ld hl,volume_mount_list	
001833 3A 86 5F 00         A  2363    				ld a,(volume_count)
001837 47                  A  2364    				ld b,a
001838 3A 83 5F 00         A  2365    				ld a,(current_volume)
00183C C9                  A  2366    				ret
                           A  2367    				
                           A  2368    		
                           A  2369    ;----------------------------------------------
                           A  2370    
                           A  2371    
00183D                     A  2372    ext_serial_get_header
                           A  2373    
00183D CC ED 15 00         A  2374    				call z,mbase_hl
001841 7B                  A  2375    				ld a,e
001842 CD 88 44 00         A  2376    				call serial_get_header
001846 DDE5                A  2377    				push ix
001848 D1                  A  2378    				pop de
001849 C9                  A  2379    				ret
                           A  2380    				
                           A  2381    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  49


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00184A                     A  2382    ext_serial_receive_file
                           A  2383    				
00184A CC ED 15 00         A  2384    				call z,mbase_hl
00184E CD 23 45 00         A  2385    				call serial_receive_file
001852 C9                  A  2386    				ret
                           A  2387    				
                           A  2388    	
001853                     A  2389    ext_serial_send_file
                           A  2390    
001853 CC ED 15 00         A  2391    				call z,mbase_hl					001857 CC FE 15 00         A  2392    				call z,mbase_de					00185B D5                  A  2393    				push de	
00185C DDE1                A  2394    				pop ix							00185E C5                  A  2395    				push bc							00185F D1                  A  2396    				pop de							001860 CD EC 45 00         A  2397    				call serial_send_file
001864 C9                  A  2398    				ret
                           A  2399    
                           A  2400    
001865                     A  2401    ext_serial_tx
001865 7B                  A  2402    				ld a,e
001866 CD D6 3D 00         A  2403    				call send_serial_byte
00186A AF                  A  2404    				xor a							00186B C9                  A  2405    				ret
                           A  2406    
                           A  2407    
00186C                     A  2408    ext_serial_rx
00186C 7B                  A  2409    				ld a,e
00186D 32 53 5F 00         A  2410    				ld (serial_timeout),a
001871 CD 9B 3D 00         A  2411    				call receive_serial_byte
001875 C9                  A  2412    				ret
                           A  2413    				
                           A  2414    
                           A  2415    ;----------------------------------------------
                           A  2416    
001876                     A  2417    ext_mount_volumes
                           A  2418    
001876 7B                  A  2419    				ld a,e
                           A  2420    
001877                     A  2421    os_mount_volumes
                           A  2422    				
001877 32 B5 60 00         A  2423    				ld (os_quiet_mode),a			                           A  2424    				
00187B 21 3D 56 00         A  2425    				ld hl,storage_txt
00187F CD 55 0F 00         A  2426    				call os_print_string_cond
001883 CD AB 18 00         A  2427    				call mount_go
001887 AF                  A  2428    				xor a
001888 32 83 5F 00         A  2429    tvloop			ld (current_volume),a
00188C CD 06 1B 00         A  2430    				call os_change_volume			001890 C8                  A  2431    				ret z							001891 3A 83 5F 00         A  2432    				ld a,(current_volume)			001895 3C                  A  2433    				inc a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  50


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001896 FE08                A  2434    				cp max_volumes
001898 20 EE               A  2435    				jr nz,tvloop
00189A 3A 85 5F 00         A  2436    				ld a,(device_count)
00189E B7                  A  2437    				or a
00189F 20 08               A  2438    				jr nz,mfsdevs
0018A1 21 81 5D 00         A  2439    				ld hl,none_found_msg
0018A5 CD 34 14 00         A  2440    				call os_show_packed_text_cond
0018A9 AF                  A  2441    mfsdevs			xor a
0018AA C9                  A  2442    				ret
                           A  2443    
                           A  2444    
                           A  2445    
0018AB 21 AF 5F 00         A  2446    mount_go		ld hl,volume_mount_list			0018AF 01800000            A  2447    				ld bc,max_volumes*16
0018B3 AF                  A  2448    clrdl_lp		xor a
0018B4 CD C6 15 00         A  2449    				call os_bchl_memfill
                           A  2450    								
0018B8 21 97 5F 00         A  2451    				ld hl,volume_dir_clusters		0018BC 01180000            A  2452    				ld bc,max_volumes*3		
0018C0 AF                  A  2453    				xor a	
0018C1 CD C6 15 00         A  2454    				call os_bchl_memfill	
                           A  2455    			
0018C5 11 2F 60 00         A  2456    				ld de,host_device_hardware_info
0018C9 ED53 AF 60 00       A  2457    				ld (dhwn_temp_pointer),de
                           A  2458    				
0018CE FD21 AF 5F 00       A  2459    				ld iy,volume_mount_list
0018D3 AF                  A  2460    				xor a
0018D4 32 86 5F 00         A  2461    				ld (volume_count),a
0018D8 32 85 5F 00         A  2462    				ld (device_count),a
0018DC 32 84 5F 00         A  2463    mnt_loop		ld (current_driver),a			0018E0 CD 7C 1A 00         A  2464    				call locate_driver_base			0018E4 21000000            A  2465    				ld hl,0
0018E8 AF                  A  2466    				xor a
0018E9 ED5A                A  2467    				adc hl,de
0018EB C8                  A  2468    				ret z							0018EC EB                  A  2469    				ex de,hl						0018ED FDE5                A  2470    				push iy
0018EF CD 00 19 00         A  2471    				call find_dev					0018F3 FDE1                A  2472    				pop iy							0018F5 CC 01 19 00         A  2473    				call z,got_dev		
0018F9 3A 84 5F 00         A  2474    nxt_drv			ld a,(current_driver)			0018FD 3C                  A  2475    				inc a
0018FE 18 DC               A  2476    				jr mnt_loop
                           A  2477    
                           A  2478    				
001900 E9                  A  2479    find_dev		jp (hl)
                           A  2480    			
                           A  2481    			
001901 E5                  A  2482    got_dev			push hl							001902 D5                  A  2483    				push de							001903 C5                  A  2484    				push bc
001904 CD FD 13 00         A  2485    				call os_new_line_cond			Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  51


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001908 015B0100            A  2486    				ld bc,015bh
00190C CD 8D 1A 00         A  2487    				call os_print_multiple_chars_co
001910 3A 84 5F 00         A  2488    				ld a,(current_driver)
001914 CD 7C 1A 00         A  2489    				call locate_driver_base
001918 210C0000            A  2490    				ld hl,0ch
00191C 19                  A  2491    				add hl,de
00191D CD 55 0F 00         A  2492    				call os_print_string_cond		001921 015D0100            A  2493    				ld bc,015dh
001925 CD 8D 1A 00         A  2494    				call os_print_multiple_chars_co
001929 C1                  A  2495    				pop bc
00192A D1                  A  2496    				pop de
00192B AF                  A  2497    				xor a
00192C 32 B3 60 00         A  2498    				ld (vols_on_device_temp),a
                           A  2499    				
001930 21 85 5F 00         A  2500    				ld hl,device_count
001934 34                  A  2501    				inc (hl)						001935 3A 84 5F 00         A  2502    				ld a,(current_driver)
001939 2A AF 60 00         A  2503    				ld hl,(dhwn_temp_pointer)	
00193D 77                  A  2504    				ld (hl),a
00193E 23                  A  2505    				inc hl
00193F 73                  A  2506    				ld (hl),e						001940 FD7304              A  2507    				ld (iy+4),e						001943 23                  A  2508    				inc hl							001944 72                  A  2509    				ld (hl),d
001945 FD7205              A  2510    				ld (iy+5),d
001948 23                  A  2511    				inc hl
001949 71                  A  2512    				ld (hl),c			
00194A FD7106              A  2513    				ld (iy+6),c
00194D 23                  A  2514    				inc hl
00194E 70                  A  2515    				ld (hl),b						00194F 23                  A  2516    				inc hl
001950 D1                  A  2517    				pop de
001951 EB                  A  2518    				ex de,hl
001952 01160000            A  2519    				ld bc,22
001956 EDB0                A  2520    				ldir							001958 AF                  A  2521    				xor a
001959 0605                A  2522    				ld b,5		
00195B 12                  A  2523    clrrode			ld (de),a						00195C 13                  A  2524    				inc de
00195D 10 FC               A  2525    				djnz clrrode
00195F ED53 AF 60 00       A  2526    				ld (dhwn_temp_pointer),de		                           A  2527    					
001964 AF                  A  2528    				xor a							001965 FDE5                A  2529    fnxtpart		push iy
001967 CD 1E 48 00         A  2530    				call fs_get_partition_info
00196B FDE1                A  2531    				pop iy
00196D 38 31               A  2532    				jr c,nxt_dev					00196F FECE                A  2533    				cp 0ceh							001971 28 2D               A  2534    				jr z,nxt_dev
001973 F5                  A  2535    				push af
001974 FD360001            A  2536    				ld (iy),1						001978 3A 84 5F 00         A  2537    				ld a,(current_driver)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  52


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00197C FD7701              A  2538    				ld (iy+1),a						00197F 3A B2 60 00         A  2539    				ld a,(partition_temp)	
001983 FD7707              A  2540    				ld (iy+7),a						001986 F1                  A  2541    				pop af
001987 B7                  A  2542    				or a
001988 28 35               A  2543    				jr z,dev_mbr
00198A AF                  A  2544    				xor a
00198B FD7708              A  2545    				ld (iy+8),a						00198E FD7709              A  2546    				ld (iy+9),a						001991 FD770A              A  2547    				ld (iy+10),a					001994 FD770B              A  2548    				ld (iy+11),a
001997 CD 0B 1A 00         A  2549    				call show_vol_info
00199B CD FC 19 00         A  2550    				call test_max_vol
00199F C8                  A  2551    				ret z							                           A  2552    			
0019A0 3A B3 60 00         A  2553    nxt_dev			ld a,(vols_on_device_temp)		0019A4 B7                  A  2554    				or a
0019A5 C0                  A  2555    				ret nz		
0019A6 CD 5D 1A 00         A  2556    				call test_quiet_mode
0019AA 20 06               A  2557    				jr nz,skp_cu
0019AC 3E0A                A  2558    				ld a,10
0019AE 32 5F 61 00         A  2559    				ld (cursor_x),a
0019B2 21 7E 5D 00         A  2560    skp_cu			ld hl,no_vols_msg				0019B6 CD 34 14 00         A  2561    				call os_show_packed_text_cond
0019BA CD FD 13 00         A  2562    				call os_new_line_cond
0019BE C9                  A  2563    				ret
                           A  2564    				
                           A  2565    			
0019BF 11040000            A  2566    dev_mbr			ld de,4
0019C3 19                  A  2567    				add hl,de
0019C4 7E                  A  2568    				ld a,(hl)						0019C5 B7                  A  2569    				or a
0019C6 C8                  A  2570    				ret z							0019C7 19                  A  2571    				add hl,de
                           A  2572    				
0019C8 FDE5                A  2573    				push iy
0019CA 0604                A  2574    				ld b,4
0019CC 7E                  A  2575    sfmbrlp			ld a,(hl)						0019CD FD7708              A  2576    				ld (iy+8),a
0019D0 23                  A  2577    				inc hl
0019D1 FD23                A  2578    				inc iy
0019D3 10 F7               A  2579    				djnz sfmbrlp
0019D5 FDE1                A  2580    				pop iy
0019D7 FDE5                A  2581    				push iy
0019D9 0603                A  2582    				ld b,3	
0019DB 7E                  A  2583    nsivlp			ld a,(hl)
0019DC FD7704              A  2584    				ld (iy+4),a						0019DF 23                  A  2585    				inc hl
0019E0 FD23                A  2586    				inc iy
0019E2 10 F7               A  2587    				djnz nsivlp
0019E4 FDE1                A  2588    				pop iy
                           A  2589    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  53


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0019E6 CD 0B 1A 00         A  2590    				call show_vol_info
0019EA CD FC 19 00         A  2591    				call test_max_vol	
0019EE C8                  A  2592    				ret z							0019EF 3A B2 60 00         A  2593    				ld a,(partition_temp)
0019F3 3C                  A  2594    				inc a
0019F4 FE04                A  2595    				cp 4							0019F6 C2 65 19 00         A  2596    				jp nz,fnxtpart
0019FA 18 A4               A  2597    				jr nxt_dev
                           A  2598    				
                           A  2599    
0019FC                     A  2600    test_max_vol
                           A  2601    			
0019FC 11100000            A  2602    				ld de,16
001A00 FD19                A  2603    				add iy,de			
001A02 21 86 5F 00         A  2604    				ld hl,volume_count
001A06 34                  A  2605    				inc (hl)
001A07 7E                  A  2606    				ld a,(hl)
001A08 FE08                A  2607    				cp max_volumes
001A0A C9                  A  2608    				ret
                           A  2609    			
                           A  2610    			
001A0B                     A  2611    show_vol_info
                           A  2612    				
001A0B CD 5D 1A 00         A  2613    				call test_quiet_mode
001A0F 20 06               A  2614    				jr nz,skp_cm2
001A11 3E09                A  2615    				ld a,9			
001A13 32 5F 61 00         A  2616    				ld (cursor_x),a
001A17 3A 86 5F 00         A  2617    skp_cm2			ld a,(volume_count)
001A1B F5                  A  2618    				push af
001A1C C630                A  2619    				add a,30h		
001A1E 32 8B 5F 00         A  2620    				ld (vol_txt+4),a	
001A22 21 87 5F 00         A  2621    				ld hl,vol_txt
001A26 CD 55 0F 00         A  2622    				call os_print_string_cond		001A2A 21 B3 60 00         A  2623    				ld hl,vols_on_device_temp
001A2E CBC6                A  2624    				set 0,(hl)						                           A  2625    			
001A30 F1                  A  2626    				pop af
001A31 FDE5                A  2627    				push iy
001A33 CD 06 1B 00         A  2628    				call os_change_volume			001A37 28 0A               A  2629    				jr z,vform_ok					001A39 21 2E 5D 00         A  2630    svi_fe			ld hl,format_err_msg		
001A3D CD 34 14 00         A  2631    svi_pem			call os_show_packed_text_cond	001A41 18 0D               A  2632    				jr skpsvl
                           A  2633    			
001A43 CD 3F 50 00         A  2634    vform_ok		call fs_get_volume_label
001A47 38 0E               A  2635    				jr c,svi_hwe
001A49 B7                  A  2636    				or a
001A4A 20 ED               A  2637    				jr nz,svi_fe
001A4C CD 55 0F 00         A  2638    				call os_print_string_cond		                           A  2639    			
001A50 CD FD 13 00         A  2640    skpsvl			call os_new_line_cond
001A54 FDE1                A  2641    				pop iy
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  54


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001A56 C9                  A  2642    				ret
                           A  2643    				
001A57 21 7A 5B 00         A  2644    svi_hwe			ld hl,disk_err_msg
001A5B 18 E0               A  2645    				jr svi_pem
                           A  2646    			
                           A  2647    			
001A5D                     A  2648    test_quiet_mode
                           A  2649    			
001A5D 3A B5 60 00         A  2650    				ld a,(os_quiet_mode)
001A61 B7                  A  2651    				or a
001A62 C9                  A  2652    				ret
                           A  2653    
                           A  2654    ;----------------------------------------------
                           A  2655    
                           A  2656    
001A63                     A  2657    show_dev_driver_name
                           A  2658    	
                           A  2659    	
001A63 CD 7C 1A 00         A  2660    				call locate_driver_base			001A67 EB                  A  2661    				ex de,hl
001A68 110C0000            A  2662    				ld de,0ch
001A6C 19                  A  2663    				add hl,de
001A6D CD 5A 0F 00         A  2664    				call os_print_string			001A71 C5                  A  2665    				push bc
001A72 01200100            A  2666    				ld bc,0120h
001A76 CD 92 1A 00         A  2667    				call os_print_multiple_chars	001A7A C1                  A  2668    				pop bc
001A7B C9                  A  2669    				ret
                           A  2670    
                           A  2671    
001A7C                     A  2672    locate_driver_base
                           A  2673    
001A7C E5                  A  2674    				push hl							001A7D 11030000            A  2675    				ld de,3							001A81 57                  A  2676    				ld d,a
001A82 ED5C                A  2677    				mlt de
001A84 21 AD 3B 00         A  2678    				ld hl,driver_table
001A88 19                  A  2679    				add hl,de
001A89 ED17                A  2680    				ld de,(hl)
001A8B E1                  A  2681    				pop hl
001A8C C9                  A  2682    				ret
                           A  2683    				
                           A  2684    		
                           A  2685    ;----------------------------------------------
                           A  2686    
001A8D                     A  2687    os_print_multiple_chars_cond
                           A  2688    
001A8D CD 5D 1A 00         A  2689    				call test_quiet_mode
001A91 C0                  A  2690    				ret nz
                           A  2691    			
001A92                     A  2692    os_print_multiple_chars
                           A  2693    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  55


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2694    ;c = char
                           A  2695    ;b = count
001A92 C5                  A  2696    				push bc
001A93 E5                  A  2697    				push hl
001A94 79                  A  2698    				ld a,c
001A95 21 B8 56 00         A  2699    				ld hl,rep_char_txt
001A99 77                  A  2700    				ld (hl),a
001A9A E5                  A  2701    pmch_lp			push hl
001A9B CD 5A 0F 00         A  2702    				call os_print_string
001A9F E1                  A  2703    				pop hl
001AA0 10 F8               A  2704    				djnz pmch_lp
001AA2 E1                  A  2705    				pop hl
001AA3 C1                  A  2706    				pop bc
001AA4 C9                  A  2707    				ret
                           A  2708    
                           A  2709    ;----------------------------------------------
                           A  2710    
                           A  2711    
001AA5 7B                  A  2712    ext_plot_char	ld a,e
001AA6 C3 0D 3F 00         A  2713    				jp hwsc_plot_char
                           A  2714    				
                           A  2715    
                           A  2716    ;----------------------------------------------
                           A  2717    ; Some file system related routines 
                           A  2718    ;----------------------------------------------
                           A  2719    
                           A  2720    
001AAA                     A  2721    fs_get_dir_cluster
                           A  2722    
                           A  2723    
001AAA F5                  A  2724    				push af							001AAB E5                  A  2725    				push hl			
001AAC CD C2 1A 00         A  2726    				call fs_get_dir_cluster_address
001AB0 ED17                A  2727    				ld de,(hl)
001AB2 E1                  A  2728    dclopdone		pop hl
001AB3 F1                  A  2729    				pop af
001AB4 BF                  A  2730    				cp a							001AB5 C9                  A  2731    				ret
                           A  2732    				
                           A  2733    
                           A  2734    
                           A  2735    
                           A  2736    
001AB6                     A  2737    fs_update_dir_cluster
                           A  2738    
001AB6 F5                  A  2739    				push af							001AB7 E5                  A  2740    				push hl			
001AB8 D5                  A  2741    				push de			
001AB9 CD C2 1A 00         A  2742    				call fs_get_dir_cluster_address
001ABD D1                  A  2743    				pop de
001ABE ED1F                A  2744    				ld (hl),de
001AC0 18 F0               A  2745    				jr dclopdone
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  56


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2746    			
                           A  2747    
                           A  2748    
                           A  2749    
                           A  2750    
001AC2                     A  2751    fs_get_dir_cluster_address
                           A  2752    
001AC2 21 97 5F 00         A  2753    				ld hl,volume_dir_clusters		001AC6 3A 83 5F 00         A  2754    				ld a,(current_volume)	
001ACA 11030000            A  2755    				ld de,3
001ACE 57                  A  2756    				ld d,a
001ACF ED5C                A  2757    				mlt de
001AD1 19                  A  2758    				add hl,de
001AD2 C9                  A  2759    				ret
                           A  2760    				
                           A  2761    	
                           A  2762    
                           A  2763    	
                           A  2764    	
001AD3                     A  2765    fs_get_total_sectors
                           A  2766    
                           A  2767    
001AD3 F5                  A  2768    				push af
001AD4 E5                  A  2769    				push hl							001AD5 CD E4 1A 00         A  2770    				call fs_calc_volume_offset	
001AD9 21 B3 5F 00         A  2771    				ld hl,volume_mount_list+4
001ADD 19                  A  2772    				add hl,de
001ADE ED17                A  2773    				ld de,(hl)
001AE0 E1                  A  2774    				pop hl
001AE1 F1                  A  2775    				pop af
001AE2 BF                  A  2776    				cp a							001AE3 C9                  A  2777    				ret
                           A  2778    
                           A  2779    
                           A  2780    
                           A  2781    
                           A  2782    
001AE4                     A  2783    fs_calc_volume_offset
                           A  2784    
001AE4 3A 83 5F 00         A  2785    				ld a,(current_volume)			001AE8 11100000            A  2786    calc_vol		ld de,16
001AEC 57                  A  2787    				ld d,a
001AED ED5C                A  2788    				mlt de
001AEF C9                  A  2789    				ret
                           A  2790    
                           A  2791    
                           A  2792    
                           A  2793    
                           A  2794    
001AF0                     A  2795    dev_to_driver_lookup
                           A  2796    
001AF0 21 85 5F 00         A  2797    				ld hl,device_count				Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  57


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001AF4 BE                  A  2798    				cp (hl)							001AF5 D0                  A  2799    				ret nc
001AF6 11200000            A  2800    				ld de,32						001AFA 57                  A  2801    				ld d,a
001AFB ED5C                A  2802    				mlt de
001AFD 21 2F 60 00         A  2803    				ld hl,host_device_hardware_info
001B01 19                  A  2804    				add hl,de
001B02 7E                  A  2805    				ld a,(hl)
001B03 37                  A  2806    				scf
001B04 C9                  A  2807    				ret
                           A  2808    				
                           A  2809    
                           A  2810    
001B05                     A  2811    ext_change_volume
                           A  2812    
001B05 7B                  A  2813    				ld a,e
                           A  2814    
001B06                     A  2815    os_change_volume
                           A  2816    
001B06 47                  A  2817    				ld b,a							001B07 FE08                A  2818    				cp max_volumes		
001B09 30 23               A  2819    				jr nc,fs_ccv2					                           A  2820    			
001B0B 3A 83 5F 00         A  2821    				ld a,(current_volume)			001B0F F5                  A  2822    				push af
001B10 78                  A  2823    				ld a,b
001B11 32 83 5F 00         A  2824    				ld (current_volume),a			001B15 CD 32 1B 00         A  2825    				call fs_set_driver_for_volume	                           A  2826    				
001B19 CD 80 48 00         A  2827    				call fs_check_disk_format		001B1D 38 06               A  2828    				jr c,fs_cant_chg_vols	
001B1F B7                  A  2829    				or a
001B20 20 03               A  2830    				jr nz,fs_cant_chg_vols
001B22 F1                  A  2831    				pop af							001B23 AF                  A  2832    				xor a							001B24 C9                  A  2833    				ret
                           A  2834    
                           A  2835    
001B25                     A  2836    fs_cant_chg_vols
                           A  2837    			
001B25 F1                  A  2838    				pop af
001B26 32 83 5F 00         A  2839    				ld (current_volume),a			001B2A CD 32 1B 00         A  2840    				call fs_set_driver_for_volume	                           A  2841    				
001B2E 3ECF                A  2842    fs_ccv2			ld a,0cfh						001B30 B7                  A  2843    				or a
001B31 C9                  A  2844    				ret
                           A  2845    					
                           A  2846    	
001B32                     A  2847    fs_set_driver_for_volume
                           A  2848    
001B32 CD E4 1A 00         A  2849    				call fs_calc_volume_offset		Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  58


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001B36 21 B0 5F 00         A  2850    				ld hl,volume_mount_list+1
001B3A 19                  A  2851    				add hl,de
001B3B 7E                  A  2852    				ld a,(hl)
001B3C 32 84 5F 00         A  2853    				ld (current_driver),a
001B40 C9                  A  2854    				ret
                           A  2855    
                           A  2856    
                           A  2857    ;----------------------------------------------
                           A  2858    
001B41                     A  2859    ext_file_sector_list
                           A  2860    
                           A  2861    ;Input HL = cluster, E = sector offset
                           A  2862    
                           A  2863    ;Output HL = new cluster, E = new sector number
                           A  2864    ;       IX = address of LBA0 LSB of sector (int
                           A  2865    
                           A  2866    				
001B41 3A 9F 54 00         A  2867    				ld a,(fs_cluster_size)
001B45 BB                  A  2868    				cp e
001B46 20 0A               A  2869    				jr nz,fsl_sc
001B48 CD D3 52 00         A  2870    				call get_fat_entry_for_cluster
001B4C DA 71 16 00         A  2871    				jp c,os_fferr
001B50 1E00                A  2872    				ld e,0
001B52 CD AA 53 00         A  2873    fsl_sc			call cluster_and_offset_to_lba
001B56 1C                  A  2874    				inc e
001B57 01 5A 61 00         A  2875    fsl_done		ld bc,sector_lba0
001B5B BF                  A  2876    				cp a							001B5C C9                  A  2877    				ret
                           A  2878    
                           A  2879    ;----------------------------------------------
                           A  2880    
001B5D                     A  2881    os_get_disk_sector_ptr
                           A  2882     
001B5D 21 5A 61 00         A  2883    				ld hl,sector_lba0
001B61 11 AE 66 00         A  2884    				ld de,sector_buffer
001B65 BF                  A  2885    				cp a
001B66 C9                  A  2886    				ret
                           A  2887    				
                           A  2888    ;----------------------------------------------
                           A  2889    
                           A  2890    
001B67 E5                  A  2891    os_count_chars	push hl							001B68 01000000            A  2892    				ld bc,0
001B6C 7E                  A  2893    cch_lp			ld a,(hl)
001B6D B7                  A  2894    				or a
001B6E 28 04               A  2895    				jr z,cch_end
001B70 23                  A  2896    				inc hl
001B71 03                  A  2897    				inc bc
001B72 18 F8               A  2898    				jr cch_lp
001B74 E1                  A  2899    cch_end			pop hl
001B75 C9                  A  2900    				ret
                           A  2901    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  59


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2902    			
                           A  2903    ;----------------------------------------------
                           A  2904    ; Environment variable code V0.01
                           A  2905    ;----------------------------------------------
                           A  2906    
       00000100            A  2907    envar_buffer_size equ 256
                           A  2908    
                           A  2909    ;----------------------------------------------
                           A  2910    
001B76                     A  2911    ext_get_envar
001B76 CC ED 15 00         A  2912    				call z,mbase_hl
                           A  2913    
001B7A                     A  2914    os_get_envar
                           A  2915    
                           A  2916    ;Set: 		HL = name of required variable
                           A  2917    ;Returns:	ZF Set: DE = address of variable's 
                           A  2918    ;        	ZF Not Set: Couldn't find variable
                           A  2919    				
001B7A DD21 BE 62 00       A  2920    				ld ix,envar_list-1
001B7F CD 67 1B 00         A  2921    env_fname		call os_count_chars				001B83 78                  A  2922    				ld a,b
001B84 B1                  A  2923    				or c
001B85 28 27               A  2924    				jr z,env_bad
                           A  2925    								
001B87 ED1201              A  2926    env_cname		lea de,ix+1
001B8A 1A                  A  2927    				ld a,(de)
001B8B FEFF                A  2928    				cp 0ffh
001B8D 28 1F               A  2929    				jr z,env_bad
001B8F C5                  A  2930    				push bc
001B90 41                  A  2931    				ld b,c
001B91 CD 29 12 00         A  2932    				call os_compare_strings
001B95 C1                  A  2933    				pop bc
001B96 20 06               A  2934    				jr nz,env_nomatch
001B98 03                  A  2935    				inc bc							001B99 EB                  A  2936    				ex de,hl
001B9A 09                  A  2937    				add hl,bc
001B9B EB                  A  2938    				ex de,hl						001B9C AF                  A  2939    				xor a
001B9D C9                  A  2940    				ret			
                           A  2941    				
001B9E DD23                A  2942    env_nomatch		inc ix							001BA0 CD 46 1C 00         A  2943    				call check_envar_bounds
001BA4 20 08               A  2944    				jr nz,env_bad
001BA6 DD7E00              A  2945    				ld a,(ix)
001BA9 B7                  A  2946    				or a
001BAA 28 DB               A  2947    				jr z,env_cname
001BAC 18 F0               A  2948    				jr env_nomatch
                           A  2949    
001BAE 3E82                A  2950    env_bad			ld a,82h						001BB0 B7                  A  2951    				or a
001BB1 C9                  A  2952    				ret	
                           A  2953    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  60


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2954    ;----------------------------------------------
                           A  2955    
001BB2                     A  2956    ext_set_envar
                           A  2957    
                           A  2958    ;HL = addr of variable name (zero terminated)
                           A  2959    ;DE = addr of data for variable (zero terminate
                           A  2960    
                           A  2961    ;Returns:
                           A  2962    ;ZF = Set: OK
                           A  2963    ;ZF = Not Set: No enough space for new variable
                           A  2964    		
001BB2 CC ED 15 00         A  2965    				call z,mbase_hl
001BB6 CC FE 15 00         A  2966    				call z,mbase_de
                           A  2967    
001BBA 7E                  A  2968    os_set_envar	ld a,(hl)						001BBB B7                  A  2969    				or a
001BBC 28 F0               A  2970    				jr z,env_bad
001BBE 1A                  A  2971    				ld a,(de)
001BBF B7                  A  2972    				or a
001BC0 28 EC               A  2973    				jr z,env_bad
                           A  2974    
001BC2 E5                  A  2975    				push hl
001BC3 D5                  A  2976    				push de
001BC4 CD 10 1C 00         A  2977    				call os_delete_envar			001BC8 D1                  A  2978    				pop de
001BC9 E1                  A  2979    				pop hl
                           A  2980    				
001BCA DD2A C9 63 00       A  2981    				ld ix,(envar_top_loc)			001BCF CD 46 1C 00         A  2982    env_enlp		call check_envar_bounds
001BD3 20 D9               A  2983    				jr nz,env_bad
001BD5 7E                  A  2984    				ld a,(hl)						001BD6 DD7700              A  2985    				ld (ix),a
001BD9 B7                  A  2986    				or a
001BDA 28 05               A  2987    				jr z,env_ndone
001BDC 23                  A  2988    				inc hl
001BDD DD23                A  2989    				inc ix
001BDF 18 EE               A  2990    				jr env_enlp
                           A  2991    				
001BE1 CD 46 1C 00         A  2992    env_ndone		call check_envar_bounds			001BE5 20 C7               A  2993    				jr nz,env_bad
001BE7 DD36003D            A  2994    				ld (ix),'='
001BEB DD23                A  2995    				inc ix
                           A  2996    
001BED CD 46 1C 00         A  2997    env_evlp		call check_envar_bounds			001BF1 20 BB               A  2998    				jr nz,env_bad
001BF3 1A                  A  2999    				ld a,(de)
001BF4 DD7700              A  3000    				ld (ix),a
001BF7 B7                  A  3001    				or a
001BF8 28 05               A  3002    				jr z,env_vdone
001BFA 13                  A  3003    				inc de
001BFB DD23                A  3004    				inc ix
001BFD 18 EE               A  3005    				jr env_evlp
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  61


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  3006    
001BFF DD23                A  3007    env_vdone		inc ix
001C01 DD3600FF            A  3008    				ld (ix),0ffh
001C05 DD22 C9 63 00       A  3009    				ld (envar_top_loc),ix			001C0A AF                  A  3010    				xor a
001C0B C9                  A  3011    				ret
                           A  3012    
                           A  3013    	
                           A  3014    ;----------------------------------------------
                           A  3015    
001C0C                     A  3016    ext_delete_envar
                           A  3017    
001C0C CC ED 15 00         A  3018    				call z,mbase_hl
                           A  3019    
001C10                     A  3020    os_delete_envar
                           A  3021    
                           A  3022    ;HL = name of required variable (null terminate
                           A  3023    ;ZF = Set: OK
                           A  3024    ;ZF = Not Set: Didnt find named variable
                           A  3025    
                           A  3026    
001C10 CD 7A 1B 00         A  3027    				call os_get_envar				001C14 C0                  A  3028    				ret nz
                           A  3029    				
001C15 D5                  A  3030    				push de
001C16 E1                  A  3031    				pop hl
001C17 AF                  A  3032    				xor a
001C18 ED42                A  3033    				sbc hl,bc						                           A  3034    				
001C1A 13                  A  3035    env_fnxt		inc de							001C1B D5                  A  3036    				push de
001C1C DDE1                A  3037    				pop ix
001C1E CD 46 1C 00         A  3038    				call check_envar_bounds
001C22 20 8A               A  3039    				jr nz,env_bad
001C24 1A                  A  3040    				ld a,(de)
001C25 B7                  A  3041    				or a
001C26 20 F2               A  3042    				jr nz,env_fnxt
                           A  3043    
001C28 13                  A  3044    env_gnxt		inc de							001C29 EB                  A  3045    				ex de,hl
001C2A 7E                  A  3046    env_collp		ld a,(hl)
001C2B 12                  A  3047    				ld (de),a						001C2C FEFF                A  3048    				cp 0ffh
001C2E 28 0F               A  3049    				jr z,env_clspd					001C30 E5                  A  3050    				push hl
001C31 DDE1                A  3051    				pop ix
001C33 CD 46 1C 00         A  3052    				call check_envar_bounds
001C37 C2 AE 1B 00         A  3053    				jr nz,env_bad
001C3B 23                  A  3054    				inc hl
001C3C 13                  A  3055    				inc de
001C3D 18 EB               A  3056    				jr env_collp
                           A  3057    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  62


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001C3F ED53 C9 63 00       A  3058    env_clspd		ld (envar_top_loc),de			001C44 AF                  A  3059    				xor a
001C45 C9                  A  3060    				ret
                           A  3061    				
                           A  3062    ;----------------------------------------------
                           A  3063    
001C46                     A  3064    check_envar_bounds
                           A  3065    
001C46 C5                  A  3066    				push bc
001C47 E5                  A  3067    				push hl
001C48 DDE5                A  3068    				push ix
001C4A E1                  A  3069    				pop hl
001C4B 01 C0 63 00         A  3070    				ld bc,1+(envar_list+envar_buffe
001C4F AF                  A  3071    				xor a
001C50 ED42                A  3072    				sbc hl,bc
001C52 38 05               A  3073    				jr c,env_bok
001C54 AF                  A  3074    				xor a
001C55 3C                  A  3075    				inc a
001C56 E1                  A  3076    				pop hl
001C57 C1                  A  3077    				pop bc
001C58 C9                  A  3078    				ret
                           A  3079    
001C59 AF                  A  3080    env_bok			xor a
001C5A E1                  A  3081    				pop hl
001C5B C1                  A  3082    				pop bc
001C5C C9                  A  3083    				ret
                           A  3084    						
                           A  3085    ;----------------------------------------------
                           A  3086    
001C5D                     A  3087    os_get_keymap_location
                           A  3088    
001C5D 21 CF 5D 00         A  3089    				ld hl,unshifted_keymap
001C61 BF                  A  3090    				cp a							001C62 C9                  A  3091    				ret
                           A  3092    
                           A  3093    
                           A  3094    ;----------------------------------------------
                           A  3095    
                           A  3096    
001C63 CC ED 15 00         A  3097    ext_play_audio	call z,mbase_hl
                           A  3098    				
001C67 CD 7F 43 00         A  3099    os_play_audio	call hwsc_play_audio
001C6B C9                  A  3100    				ret
                           A  3101    				
                           A  3102    				
                           A  3103    ;==============================================
                           A  3104    ; Internal OS command routines
                           A  3105    ;==============================================
                           A  3106    
                           B     0    	include 'commands\c.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"c" - Copy memory command. V0.02 - ADL mode
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  63


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\c.asm
                           B     3    ;----------------------------------------------
                           B     4    
001C6C                     B     5    os_cmd_c
                           B     6    
001C6C CD A2 1C 00         B     7    				call get_start_and_end			                           B     8    				
001C70 CD CB 1C 00         B     9    				call hexword_or_bust			001C74 CA 55 16 00         B    10    				jp z,os_no_d_addr_error
001C78 ED53 6D 61 00       B    11    				ld (copy_dest_address),de
                           B    12    						
001C7D CD 90 1C 00         B    13    				call test_mem_range				001C81 DA 59 16 00         B    14    				jp c,os_range_error				001C85 ED5B 6D 61 00       B    15    				ld de,(copy_dest_address)
001C8A EDB0                B    16    				ldir
                           B    17    
001C8C 3E20                B    18    copy_done		ld a,020h						001C8E B7                  B    19    				or a
001C8F C9                  B    20    				ret
                           B    21    			
                           B    22    			
                           B    23    ;----------------------------------------------
                           B    24    			
001C90                     B    25    test_mem_range
                           B    26    			
                           B    27    ; on return:
                           B    28    ;
                           B    29    ; carry flag: Set = bad range
                           B    30    ; xBC = run length on return
                           B    31    ; xHL = start address
                           B    32    			
001C90 2A 6A 61 00         B    33    				ld hl,(cmdop_end_address)	
001C94 ED4B 67 61 00       B    34    				ld bc,(cmdop_start_address)
001C99 C5                  B    35    				push bc
001C9A AF                  B    36    				xor a
001C9B ED42                B    37    				sbc hl,bc
001C9D E5                  B    38    				push hl
001C9E C1                  B    39    				pop bc
001C9F 03                  B    40    				inc bc
001CA0 E1                  B    41    				pop hl
001CA1 C9                  B    42    				ret
                           B    43    				
                           B    44    ;----------------------------------------------
                           B    45    			
001CA2                     B    46    get_start_and_end
                           B    47    			
001CA2 CD D9 10 00         B    48    				call ascii_to_hexword			001CA6 ED53 67 61 00       B    49    				ld (cmdop_start_address),de
001CAB 23                  B    50    				inc hl
001CAC 28 09               B    51    				jr z,st_addrok
001CAE E1                  B    52    				pop hl							001CAF FE82                B    53    				cp 82h							001CB1 28 02               B    54    				jr z,c_badhex
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  64


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\c.asm
001CB3 3E16                B    55    				ld a,016h						001CB5 B7                  B    56    c_badhex		or a
001CB6 C9                  B    57    				ret
                           B    58    				
001CB7 CD D9 10 00         B    59    st_addrok		call ascii_to_hexword			001CBB ED53 6A 61 00       B    60    				ld (cmdop_end_address),de
001CC0 23                  B    61    				inc hl
001CC1 B7                  B    62    				or a
001CC2 C8                  B    63    				ret z
001CC3 E1                  B    64    				pop hl							001CC4 FE82                B    65    				cp 82h							001CC6 28 ED               B    66    				jr z,c_badhex
001CC8 3E1C                B    67    				ld a,01ch						001CCA C9                  B    68    				ret
                           B    69    				
                           B    70    ;----------------------------------------------
                           B    71    
001CCB                     B    72    hexword_or_bust
                           B    73    
                           B    74    ; Set HL to string address:
                           B    75    ; Returns to parent routine ONLY if the string 
                           B    76    ; DE = hex word. If no hex found, the zero flag
                           B    77    ; If chars are invalid hex, returns to grandpar
                           B    78    
001CCB CD D9 10 00         B    79    				call ascii_to_hexword		
001CCF FE82                B    80    				cp 82h
001CD1 20 03               B    81    				jr nz,hex_good
001CD3 E1                  B    82    				pop hl						; r
001CD4 B7                  B    83    				or a	
001CD5 C9                  B    84    				ret			 
001CD6 FE81                B    85    hex_good		cp 081h						; n
001CD8 C9                  B    86    				ret
                           B    87    	
                           B    88    ;----------------------------------------------
                           B    89    
                           B     0    	include 'commands\cd.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'cd' - Change Dir command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
001CD9                     B     5    os_cmd_cd	
                           B     6    
001CD9 CD D2 16 00         B     7    				call os_check_volume_format	
001CDD C0                  B     8    				ret nz
                           B     9    			
                           B    10    			
001CDE 7E                  B    11    				ld a,(hl)						001CDF B7                  B    12    				or a				
001CE0 CA 87 1D 00         B    13    				jp z,cd_show_path		
                           B    14    			
                           B    15    			
001CE4 7E                  B    16    				ld a,(hl)						Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  65


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\cd.asm
001CE5 23                  B    17    				inc hl
001CE6 46                  B    18    				ld b,(hl)
001CE7 2B                  B    19    				dec hl
001CE8 FE2E                B    20    				cp '.'			
001CEA 20 08               B    21    				jr nz,cd_nual
001CEC B8                  B    22    				cp b
001CED 20 05               B    23    				jr nz,cd_nual
001CEF CD 2A 17 00         B    24    				call os_parent_dir	
001CF3 C9                  B    25    				ret
                           B    26    			
                           B    27    			
001CF4 FE2F                B    28    cd_nual			cp 02fh			
001CF6 20 05               B    29    				jr nz,cd_nogor					001CF8 CD 30 17 00         B    30    				call os_root_dir	
001CFC C9                  B    31    				ret
                           B    32    				
                           B    33    				
001CFD FE25                B    34    cd_nogor		cp '%'							001CFF 20 1F               B    35    				jr nz,cd_no_assign
001D01 CD 7A 1B 00         B    36    				call os_get_envar
001D05 28 04               B    37    				jr z,cd_evok
001D07 3ED1                B    38    				ld a,0d1h						001D09 B7                  B    39    				or a
001D0A C9                  B    40    				ret
001D0B 11000000            B    41    cd_evok			ld de,0
001D0F 5E                  B    42    				ld e,(hl)
001D10 23                  B    43    				inc hl
001D11 56                  B    44    				ld d,(hl)
001D12 23                  B    45    				inc hl
001D13 7E                  B    46    				ld a,(hl)
001D14 D5                  B    47    				push de
001D15 CD 06 1B 00         B    48    				call os_change_volume
001D19 D1                  B    49    				pop de
001D1A C0                  B    50    				ret nz
001D1B CD B6 1A 00         B    51    				call fs_update_dir_cluster
001D1F C9                  B    52    				ret
                           B    53    				
                           B    54    				
001D20                     B    55    cd_no_assign
                           B    56    			
001D20 3A 83 5F 00         B    57    				ld a,(current_volume)
001D24 32 B1 68 00         B    58    				ld (original_vol_cd_cmd),a
                           B    59    			
001D28 E5                  B    60    				push hl
001D29 DDE1                B    61    				pop ix
001D2B DD7E04              B    62    				ld a,(ix+4)
001D2E FE3A                B    63    				cp ':'							001D30 20 25               B    64    				jr nz,cd_nchvol
001D32 11 88 5F 00         B    65    				ld de,vol_txt+1
001D36 0603                B    66    				ld b,3
001D38 CD 29 12 00         B    67    				call os_compare_strings
001D3C 20 19               B    68    				jr nz,cd_nchvol
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  66


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\cd.asm
001D3E 11050000            B    69    				ld de,5
001D42 19                  B    70    				add hl,de
001D43 22 20 62 00         B    71    				ld (os_args_loc),hl				001D47 DD7E03              B    72    				ld a,(ix+3)						001D4A D630                B    73    				sub 030h
001D4C CD 06 1B 00         B    74    				call os_change_volume
001D50 C0                  B    75    				ret nz							001D51 CD 30 17 00         B    76    				call os_root_dir				001D55 18 11               B    77    				jr cd_mol						                           B    78    				
                           B    79    			
001D57 CD AA 1A 00         B    80    cd_nchvol		call fs_get_dir_cluster
001D5B ED53 AE 68 00       B    81    				ld (original_dir_cd_cmd),de
                           B    82    			
001D60 E5                  B    83    cd_mollp		push hl
001D61 CD 20 17 00         B    84    				call os_change_dir				001D65 E1                  B    85    				pop hl
001D66 20 0A               B    86    				jr nz,cd_dcherr
001D68 7E                  B    87    cd_mol			ld a,(hl)						001D69 23                  B    88    				inc hl
001D6A B7                  B    89    				or a
001D6B C8                  B    90    				ret z
001D6C FE2F                B    91    				cp 02fh
001D6E 28 F0               B    92    				jr z,cd_mollp
001D70 18 F6               B    93    				jr cd_mol
                           B    94    					
001D72                     B    95    cd_dcherr	
                           B    96    			
001D72 F5                  B    97    				push af							001D73 ED5B AE 68 00       B    98    				ld de,(original_dir_cd_cmd)
001D78 CD B6 1A 00         B    99    				call fs_update_dir_cluster
001D7C 3A B1 68 00         B   100    				ld a,(original_vol_cd_cmd)
001D80 CD 06 1B 00         B   101    				call os_change_volume	
001D84 F1                  B   102    				pop af
001D85 B7                  B   103    				or a
001D86 C9                  B   104    				ret
                           B   105    				
                           B   106    ;----------------------------------------------
                           B   107    			
001D87                     B   108    cd_show_path
                           B   109    			
                           B   110    			
       00000010            B   111    max_dirs	equ 16
                           B   112    			
001D87 0610                B   113    				ld b,max_dirs
001D89 0E00                B   114    				ld c,0
001D8B C5                  B   115    lp1				push bc
001D8C CD AA 1A 00         B   116    				call fs_get_dir_cluster
001D90 C1                  B   117    				pop bc
001D91 D5                  B   118    				push de
001D92 0C                  B   119    				inc c
001D93 C5                  B   120    				push bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  67


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\cd.asm
001D94 CD 2A 17 00         B   121    				call os_parent_dir
001D98 C1                  B   122    				pop bc
001D99 20 02               B   123    				jr nz,shdir_lp
001D9B 10 EE               B   124    				djnz lp1
                           B   125    				
001D9D D1                  B   126    shdir_lp		pop de
001D9E C5                  B   127    				push bc
001D9F CD B6 1A 00         B   128    				call fs_update_dir_cluster
001DA3 CD 56 17 00         B   129    				call os_get_current_dir_name
001DA7 CD 5A 0F 00         B   130    				call os_print_string
001DAB 21 BD 1D 00         B   131    				ld hl,cd_fwdslash_txt
001DAF CD 5A 0F 00         B   132    				call os_print_string
001DB3 C1                  B   133    				pop bc
001DB4 0D                  B   134    				dec c
001DB5 20 E6               B   135    				jr nz,shdir_lp
                           B   136    			
001DB7 CD 02 14 00         B   137    				call os_new_line	
001DBB AF                  B   138    				xor a
001DBC C9                  B   139    				ret
                           B   140    			
001DBD 2F00                B   141    cd_fwdslash_txt	db '/',0	
                           B   142    			
                           B   143    ;----------------------------------------------
                           B   144    			
       000068AE            B   145    original_dir_cd_cmd		equ scratch_pad 
       000068B1            B   146    original_vol_cd_cmd	 	equ scratch_pad+3
                           B   147    					
                           B   148    ;----------------------------------------------
                           B     0    	include 'commands\cls.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"cls" - Clear screen command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
001DBF                     B     5    os_cmd_cls
                           B     6    
001DBF CD 97 3E 00         B     7    				call hwsc_clear_screen
001DC3 AF                  B     8    				xor a
001DC4 C9                  B     9    				ret
                           B    10    				
                           B    11    ;----------------------------------------------
                           B    12    	
                           B     0    	include 'commands\colon.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;":" for write hex bytes command. V0.02 - ADL m
                           B     3    ;----------------------------------------------
                           B     4    
001DC5                     B     5    os_cmd_colon
                           B     6    	
001DC5 CD CB 1C 00         B     7    				call hexword_or_bust			001DC9 CA 45 16 00         B     8    				jp z,os_no_start_addr			001DCD D5                  B     9    				push de
001DCE DDE1                B    10    				pop ix							Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  68


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\colon.asm
                           B    11    			
001DD0 CD CB 1C 00         B    12    wmblp			call hexword_or_bust			001DD4 28 07               B    13    				jr z,os_ccmdn
001DD6 DD7300              B    14    				ld (ix),e						001DD9 DD23                B    15    				inc ix
001DDB 18 F3               B    16    				jr wmblp
                           B    17    
001DDD AF                  B    18    os_ccmdn		xor a
001DDE C9                  B    19    				ret
                           B    20    		
                           B    21    
                           B    22    ;----------------------------------------------
                           B     0    	include 'commands\d.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; OS "D" Command: EZ80 Disassembler V0.02
                           B     3    ; Totally and utterly unoptimized!
                           B     4    ;----------------------------------------------
                           B     5    
001DDF FD21 C6 23 00       B     6    os_cmd_d		ld iy,prefix_bits_loc
001DE4 FDCB 07 C6          B     7    				set adl_dis,(iy+var_adl)
                           B     8    
001DE8 CD CB 1C 00         B     9    os_cmd_d_go		call hexword_or_bust			001DEC 28 05               B    10    				jr z,d_no_hex					001DEE ED53 3D 29 00       B    11    				ld (dis_addr),de
                           B    12    				
001DF3 3A 25 5F 00         B    13    d_no_hex		ld a,(charmap_rows)				001DF7 D602                B    14    				sub a,2
001DF9 47                  B    15    				ld b,a
001DFA C5                  B    16    dis_loop		push bc
                           B    17    				
001DFB DD2A 3D 29 00       B    18    				ld ix,(dis_addr)				001E00 CD A8 23 00         B    19    				call show_ix					001E04 3E20                B    20    				ld a,' '
001E06 CD 9C 23 00         B    21    				call show_ascii_char
                           B    22    
001E0A FD21 C6 23 00       B    23    				ld iy,prefix_bits_loc
001E0F FD360000            B    24    				ld (iy),0						001E13 CD 4F 1E 00         B    25    				call dis_instr					001E17 DD23                B    26    				inc ix							                           B    27    				
001E19 3E1A                B    28    				ld a,26							001E1B 32 5F 61 00         B    29    				ld (cursor_pos+1),a				001E1F ED4B 3D 29 00       B    30    				ld bc,(dis_addr)
001E24 DD22 3D 29 00       B    31    				ld (dis_addr),ix				001E29 DDE5                B    32    				push ix
001E2B E1                  B    33    				pop hl
001E2C AF                  B    34    				xor a
001E2D ED42                B    35    				sbc hl,bc						001E2F 7D                  B    36    				ld a,l
001E30 E607                B    37    				and 7
001E32 6F                  B    38    				ld l,a
001E33 0A                  B    39    shexoplp		ld a,(bc)						Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  69


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
001E34 CD 8B 23 00         B    40    				call show_hex_byte
001E38 3E20                B    41    				ld a,' '
001E3A CD 9C 23 00         B    42    				call show_ascii_char
001E3E 03                  B    43    				inc bc
001E3F 2D                  B    44    				dec l
001E40 20 F1               B    45    				jr nz,shexoplp
                           B    46    				
001E42 CD 02 14 00         B    47    				call os_new_line
001E46 C1                  B    48    				pop bc
001E47 10 B1               B    49    				djnz dis_loop
                           B    50    
001E49 CD 02 14 00         B    51    				call os_new_line
001E4D AF                  B    52    				xor a
001E4E C9                  B    53    				ret
                           B    54    
                           B    55    
                           B    56    ;- Handle op code prefixes --------------------
                           B    57    			
       00000000            B    58    cb_prefix			equ 0					
       00000001            B    59    ed_prefix			equ 1
       00000002            B    60    sub_ix_prefix		equ 2
       00000003            B    61    sub_iy_prefix		equ 3
       00000004            B    62    ddcb_fdcb_prefix	equ 4					; p
       00000005            B    63    dot_l_prefix		equ 5
       00000006            B    64    il_prefix			equ 6
       00000007            B    65    show_adl_prefix		equ 7
                           B    66    
       00000000            B    67    adl_dis				equ 0					; b
                           B    68    
                           B    69    
001E4F DD7E00              B    70    dis_instr	ld a,(ix)						; c
                           B    71    			
001E52 FDCB 07 46          B    72    			bit adl_dis,(iy+var_adl)		; i
001E56 28 04               B    73    			jr z,z80_list					; T
001E58 FDCB00F6            B    74    			set il_prefix,(iy)				; a
001E5C                     B    75    z80_list			
                           B    76    			
                           B    77    ;----------------------------------------------
                           B    78    
001E5C FE40                B    79    			cp 40h
001E5E 20 0A               B    80    			jr nz,not_sis
001E60 FDCB00B6            B    81    			res il_prefix,(iy)
001E64 FDCB00AE            B    82    			res dot_l_prefix,(iy)
001E68 18 28               B    83    			jr set_adl_pf
                           B    84    			
001E6A FE49                B    85    not_sis		cp 49h
001E6C 20 0A               B    86    			jr nz,not_lis
001E6E FDCB00B6            B    87    			res il_prefix,(iy)
001E72 FDCB00EE            B    88    			set dot_l_prefix,(iy)
001E76 18 1A               B    89    			jr set_adl_pf
                           B    90    			
001E78 FE52                B    91    not_lis		cp 52h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  70


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
001E7A 20 0A               B    92    			jr nz,not_sil
001E7C FDCB00F6            B    93    			set il_prefix,(iy)
001E80 FDCB00AE            B    94    			res dot_l_prefix,(iy)
001E84 18 0C               B    95    			jr set_adl_pf
                           B    96    			
001E86 FE5B                B    97    not_sil		cp 5bh
001E88 20 11               B    98    			jr nz,not_adl_prefix_byte
001E8A FDCB00F6            B    99    			set il_prefix,(iy)
001E8E FDCB00EE            B   100    			set dot_l_prefix,(iy)
                           B   101    			
001E92 FDCB00FE            B   102    set_adl_pf	set show_adl_prefix,(iy)
001E96 DD23                B   103    			inc ix
001E98 DD7E00              B   104    			ld a,(ix)	
                           B   105    			
                           B   106    ;----------------------------------------------
                           B   107    
001E9B                     B   108    not_adl_prefix_byte			
                           B   109    			
001E9B FECB                B   110    			cp 0cbh								001E9D 20 08               B   111    			jr nz,not_cb
001E9F FDCB00C6            B   112    do_cb		set cb_prefix,(iy)
001EA3 DD23                B   113    			inc ix
001EA5 18 3A               B   114    			jr not_traditional_prefix_byte
                           B   115    
001EA7 FEED                B   116    not_cb		cp 0edh
001EA9 20 08               B   117    			jr nz,not_ed
001EAB FDCB00CE            B   118    do_ed		set ed_prefix,(iy)
001EAF DD23                B   119    			inc ix
001EB1 18 2E               B   120    			jr not_traditional_prefix_byte
                           B   121    
001EB3 FEDD                B   122    not_ed		cp 0ddh
001EB5 20 18               B   123    			jr nz,not_dd
001EB7 CD EA 20 00         B   124    do_dd		call check_nxt_byte_prefix			001EBB 28 92               B   125    			jr z,dis_instr						001EBD FDCB00D6            B   126    			set sub_ix_prefix,(iy)
001EC1 FECB                B   127    xdcb_query	cp 0cbh								001EC3 20 1C               B   128    			jr nz,not_traditional_prefix_byte	001EC5 FDCB00E6            B   129    			set ddcb_fdcb_prefix,(iy)
001EC9 DD23                B   130    			inc ix								001ECB DD23                B   131    			inc ix								001ECD 18 12               B   132    			jr not_traditional_prefix_byte
                           B   133    
001ECF FEFD                B   134    not_dd		cp 0fdh
001ED1 20 0E               B   135    			jr nz,not_traditional_prefix_byte
001ED3 CD EA 20 00         B   136    do_fd		call check_nxt_byte_prefix
001ED7 CA 4F 1E 00         B   137    			jr z,dis_instr	
001EDB FDCB00DE            B   138    			set sub_iy_prefix,(iy)
001EDF 18 E0               B   139    			jr xdcb_query
                           B   140    
001EE1                     B   141    not_traditional_prefix_byte
                           B   142    
                           B   143    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  71


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   144    
001EE1 DD7E00              B   145    			ld a,(ix)	
001EE4 E6C0                B   146    			and 11000000b			; seperate 
001EE6 07                  B   147    			rlca
001EE7 07                  B   148    			rlca
001EE8 FD77 01             B   149    			ld (iy+var_x),a			;var x= val
                           B   150    			
001EEB DD7E00              B   151    			ld a,(ix)
001EEE E638                B   152    			and 00111000b
001EF0 CB3F                B   153    			srl a
001EF2 CB3F                B   154    			srl a
001EF4 CB3F                B   155    			srl a	
001EF6 FD77 02             B   156    			ld (iy+var_y),a			;var x = vl
                           B   157    
001EF9 DD7E00              B   158    			ld a,(ix)
001EFC E607                B   159    			and 00000111b
001EFE FD77 03             B   160    			ld (iy+var_z),a			;var z = va
                           B   161    			
001F01 DD7E00              B   162    			ld a,(ix)
001F04 E630                B   163    			and 00110000b
001F06 CB3F                B   164    			srl a
001F08 CB3F                B   165    			srl a
001F0A CB3F                B   166    			srl a
001F0C CB3F                B   167    			srl a
001F0E FD77 04             B   168    			ld (iy+var_p),a			; var p = v
                           B   169    			
001F11 DD7E00              B   170    			ld a,(ix)
001F14 E608                B   171    			and 00001000b
001F16 CB3F                B   172    			srl a
001F18 CB3F                B   173    			srl a
001F1A CB3F                B   174    			srl a
001F1C FD77 05             B   175    			ld (iy+var_q),a				;var q 
                           B   176    
001F1F CD F8 20 00         B   177    			call find_instruction_ascii		; g
                           B   178    	
                           B   179    ;----------------------------------------------
                           B   180    
001F23 78                  B   181    index_table	ld a,b							; a
001F24 B7                  B   182    			or a
001F25 28 07               B   183    			jr z,parse_instr				; m
001F27 CB7E                B   184    d_filp		bit 7,(hl)						; w
001F29 23                  B   185    			inc hl							; o
001F2A 28 FB               B   186    			jr z,d_filp					
001F2C 10 F9               B   187    			djnz d_filp
                           B   188    										
                           B   189    			
001F2E FD21 C6 23 00       B   190    parse_instr	ld iy,opcode_vars
001F33 01000000            B   191    			ld bc,0
001F37 7E                  B   192    			ld a,(hl)						;ge
001F38 FE80                B   193    			cp 80h
001F3A C8                  B   194    			ret z
001F3B E67F                B   195    			and 7fh
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  72


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   196    			
001F3D FE26                B   197    			cp '&'							;sy
001F3F 20 28               B   198    			jr nz,not_adlsym
001F41 FDCB007E            B   199    			bit show_adl_prefix,(iy)		;do
001F45 CA D3 20 00         B   200    			jr z,next_opcode_ascii_char
001F49 0600                B   201    			ld b,0
001F4B FDCB006E            B   202    			bit dot_l_prefix,(iy)
001F4F 28 02               B   203    			jr z,naplsb
001F51 CBC0                B   204    			set 0,b
001F53 FDCB0076            B   205    naplsb		bit il_prefix,(iy)
001F57 28 02               B   206    			jr z,napmsb
001F59 CBC8                B   207    			set 1,b
001F5B E5                  B   208    napmsb		push hl
001F5C 21 25 29 00         B   209    			ld hl,adl_prefix_list
001F60 CD 23 1F 00         B   210    			call index_table				; r
001F64 E1                  B   211    			pop hl
001F65 C3 D3 20 00         B   212    			jp next_opcode_ascii_char
                           B   213    
001F69 FE5E                B   214    not_adlsym	cp '^'							;sy
001F6B 20 0D               B   215    			jr nz,d_not_imm8
001F6D DD23                B   216    			inc ix							;th
001F6F DD7E00              B   217    			ld a,(ix)
001F72 CD 8B 23 00         B   218    			call show_hex_byte
001F76 C3 D3 20 00         B   219    			jp next_opcode_ascii_char
                           B   220    					
001F7A FE21                B   221    d_not_imm8	cp '!'							;sy
001F7C 20 26               B   222    			jr nz,d_not_imm16					001F7E 11020000            B   223    			ld de,2
001F82 FDCB0076            B   224    			bit il_prefix,(iy)				;ad
001F86 28 08               B   225    			jr z,imm16
001F88 13                  B   226    			inc de
001F89 DD7E03              B   227    			ld a,(ix+3)
001F8C CD 8B 23 00         B   228    			call show_hex_byte
001F90 DD7E02              B   229    imm16		ld a,(ix+2)						;sh
001F93 CD 8B 23 00         B   230    			call show_hex_byte			
001F97 DD7E01              B   231    			ld a,(ix+1)						;th
001F9A CD 8B 23 00         B   232    			call show_hex_byte
001F9E DD19                B   233    			add ix,de						;ad
001FA0 C3 D3 20 00         B   234    			jp next_opcode_ascii_char
                           B   235    
001FA4 FE2F                B   236    d_not_imm16	cp '/'							;sy
001FA6 20 36               B   237    			jr nz,d_not_sb
001FA8 FDCB0066            B   238    			bit ddcb_fdcb_prefix,(iy)
001FAC 28 05               B   239    			jr z,norm_dbyte
001FAE DD7EFF              B   240    			ld a,(ix-1)						;if
001FB1 18 05               B   241    			jr xdcb_dbyte
001FB3 DD23                B   242    norm_dbyte	inc ix
001FB5 DD7E00              B   243    			ld a,(ix)						;th
001FB8 CB7F                B   244    xdcb_dbyte	bit 7,a
001FBA 20 10               B   245    			jr nz,d_sbin					;sh
001FBC F5                  B   246    			push af
001FBD 3E2B                B   247    			ld a,'+'
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  73


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
001FBF CD 9C 23 00         B   248    			call show_ascii_char
001FC3 F1                  B   249    			pop af
001FC4 CD 8B 23 00         B   250    			call show_hex_byte
001FC8 C3 D3 20 00         B   251    			jp next_opcode_ascii_char
001FCC F5                  B   252    d_sbin		push af
001FCD 3E2D                B   253    			ld a,'-'
001FCF CD 9C 23 00         B   254    			call show_ascii_char
001FD3 F1                  B   255    			pop af
001FD4 ED44                B   256    			neg
001FD6 CD 8B 23 00         B   257    			call show_hex_byte
001FDA C3 D3 20 00         B   258    			jp next_opcode_ascii_char
                           B   259    			
001FDE FE64                B   260    d_not_sb	cp 'd'							;sy
001FE0 20 1E               B   261    			jr nz,d_not_pcdip
001FE2 DD23                B   262    			inc ix
001FE4 01000000            B   263    			ld bc,0
001FE8 DD7E00              B   264    			ld a,(ix)
001FEB CB7F                B   265    			bit 7,a
001FED 28 01               B   266    			jr z,d_spcd_pos
001FEF 0B                  B   267    			dec bc
001FF0 4F                  B   268    d_spcd_pos	ld c,a
001FF1 03                  B   269    			inc bc
001FF2 DDE5                B   270    			push ix
001FF4 DD09                B   271    			add ix,bc
001FF6 CD A8 23 00         B   272    			call show_ix
001FFA DDE1                B   273    			pop ix
001FFC C3 D3 20 00         B   274    			jp next_opcode_ascii_char
                           B   275    
002000 FE3E                B   276    d_not_pcdip	cp '>'							;sy
002002 20 16               B   277    			jr nz,d_not_sdig
002004 23                  B   278    			inc hl							;th
002005 01000000            B   279    			ld bc,0
002009 4E                  B   280    			ld c,(hl)
00200A FD21 C6 23 00       B   281    			ld iy,opcode_vars
00200F FD09                B   282    			add iy,bc
002011 FD7E00              B   283    			ld a,(iy)						;a 
002014 C630                B   284    			add a,30h						;co
002016 C3 CF 20 00         B   285    			jp d_output_char
                           B   286    
00201A FE5F                B   287    d_not_sdig	cp '_'
00201C 20 12               B   288    			jr nz,d_nhlsubst				; s
00201E E5                  B   289    			push hl
00201F 21 FD 28 00         B   290    			ld hl,hl_subs
002023 CD DB 20 00         B   291    hl_subst	call prefix_to_offset
002027 CD 23 1F 00         B   292    			call index_table				; r
00202B E1                  B   293    			pop hl
00202C C3 D3 20 00         B   294    			jp next_opcode_ascii_char
                           B   295    			
002030 FE7C                B   296    d_nhlsubst	cp '|'
002032 20 07               B   297    			jr nz,d_noinvhls
002034 E5                  B   298    			push hl
002035 21 03 29 00         B   299    			ld hl,inv_hl_subs
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  74


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002039 18 E8               B   300    			jr hl_subst
                           B   301    			
00203B FE68                B   302    d_noinvhls	cp 'h'							;sy
00203D 20 07               B   303    			jr nz,d_nhsubst
00203F E5                  B   304    			push hl
002040 21 09 29 00         B   305    			ld hl,h_subs
002044 18 DD               B   306    			jr hl_subst
                           B   307    			
002046 FE6C                B   308    d_nhsubst	cp 'l'							;sy
002048 20 07               B   309    			jr nz,d_nlsubst
00204A E5                  B   310    			push hl
00204B 21 10 29 00         B   311    			ld hl,l_subs
00204F 18 D2               B   312    			jr hl_subst
                           B   313    			
002051 FE24                B   314    d_nlsubst	cp '$'
002053 20 07               B   315    			jr nz,d_nihlsubst				; s
002055 E5                  B   316    			push hl
002056 21 17 29 00         B   317    			ld hl,ind_hl_subs
00205A 18 C7               B   318    			jr hl_subst
                           B   319    
                           B   320    
00205C                     B   321    d_nihlsubst	
                           B   322    
00205C FE7E                B   323    			cp '~'							; s
00205E 20 1F               B   324    			jr nz,ntable_r
002060 11 52 28 00         B   325    			ld de,table_r
002064 23                  B   326    do_table 	inc hl
002065 01000000            B   327    			ld bc,0							; t
002069 4E                  B   328    			ld c,(hl)
00206A FD21 C6 23 00       B   329    			ld iy,opcode_vars
00206F FD09                B   330    			add iy,bc
002071 FD4600              B   331    			ld b,(iy)						;in
002074 E5                  B   332    			push hl
002075 EB                  B   333    			ex de,hl
002076 CD 23 1F 00         B   334    			call index_table				; r
00207A E1                  B   335    			pop hl
00207B C3 D3 20 00         B   336    			jp next_opcode_ascii_char
                           B   337    			
00207F 11 5D 28 00         B   338    ntable_r	ld de,table_r2					; s
002083 FE3D                B   339    			cp '='
002085 28 DD               B   340    			jr z,do_table
                           B   341    			
002087 11 68 28 00         B   342    			ld de,table_rp					; s
00208B FE40                B   343    			cp '@'
00208D 28 D5               B   344    			jr z,do_table 
                           B   345    			
00208F 11 6F 28 00         B   346    			ld de,table_rp2					; s
002093 FE2A                B   347    			cp '*'
002095 28 CD               B   348    			jr z,do_table
                           B   349    			
002097 11 D5 28 00         B   350    			ld de,table_rp3					; s
00209B FE3C                B   351    			cp '<'
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  75


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
00209D 28 C5               B   352    			jr z,do_table
                           B   353    			
00209F 11 DD 28 00         B   354    			ld de,table_rp4					; s
0020A3 FE7D                B   355    			cp '}'
0020A5 28 BD               B   356    			jr z,do_table
                           B   357    			
0020A7 11 77 28 00         B   358    			ld de,table_cc					; s
0020AB FE23                B   359    			cp '#'
0020AD 28 B5               B   360    			jr z,do_table 
                           B   361    			
0020AF 11 83 28 00         B   362    			ld de,table_alu					; s
0020B3 FE3A                B   363    			cp ':'
0020B5 28 AD               B   364    			jr z,do_table 
                           B   365    			
0020B7 11 AF 28 00         B   366    			ld de,table_rot					; s
0020BB FE25                B   367    			cp '%'
0020BD 28 A5               B   368    			jr z,do_table 
                           B   369    			
0020BF 11 ED 28 00         B   370    			ld de,table_rst					; s
0020C3 FE3B                B   371    			cp ';'
0020C5 28 9D               B   372    			jr z,do_table 
                           B   373    
0020C7 11 E5 28 00         B   374    			ld de,table_rp5					; s
0020CB FE7B                B   375    			cp '{'
0020CD 28 95               B   376    			jr z,do_table 
                           B   377    
0020CF                     B   378    ntable_bli
                           B   379    
                           B   380    ;----------------------------------------------
                           B   381    
0020CF                     B   382    d_output_char
                           B   383    
0020CF CD 9C 23 00         B   384    			call show_ascii_char
                           B   385    
0020D3                     B   386    next_opcode_ascii_char
                           B   387    
0020D3 CB7E                B   388    			bit 7,(hl)						;if
0020D5 C0                  B   389    			ret nz
0020D6 23                  B   390    			inc hl
0020D7 C3 2E 1F 00         B   391    			jp parse_instr
                           B   392    			
                           B   393    			
                           B   394    ;----------------------------------------------
                           B   395    
                           B   396    
0020DB                     B   397    prefix_to_offset
                           B   398    
0020DB 0602                B   399    			ld b,2							;se
0020DD FDCB005E            B   400    			bit sub_iy_prefix,(iy)
0020E1 C0                  B   401    			ret nz
0020E2 05                  B   402    			dec b
0020E3 FDCB0056            B   403    			bit sub_ix_prefix,(iy)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  76


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0020E7 C0                  B   404    			ret nz
0020E8 05                  B   405    			dec b
0020E9 C9                  B   406    			ret
                           B   407    			
                           B   408    			
0020EA                     B   409    check_nxt_byte_prefix			
                           B   410    
0020EA DD23                B   411    			inc ix
0020EC DD7E00              B   412    			ld a,(ix)
0020EF FEDD                B   413    			cp 0ddh
0020F1 C8                  B   414    			ret z
0020F2 FEED                B   415    			cp 0edh
0020F4 C8                  B   416    			ret z
0020F5 FEFD                B   417    			cp 0fdh
0020F7 C9                  B   418    			ret
                           B   419    			
                           B   420    			
                           B   421    ;==============================================
                           B   422    ;- Find instruction ascii ---------------------
                           B   423    ;==============================================
                           B   424    
                           B   425    ; Returns HL = ptr to ascii name
                           B   426    ;          B = group index (number of instructi
                           B   427    
0020F8                     B   428    find_instruction_ascii
                           B   429    
0020F8 0600                B   430    			ld b,0						; defau
                           B   431    
0020FA FDCB0066            B   432    			bit ddcb_fdcb_prefix,(iy)	; Was t
0020FE 28 12               B   433    			jr z,not_ddcb_fdcb_inst
002100 21 2C 28 00         B   434    			ld hl,ddcb_fdcb_z6		
002104 FD46 01             B   435    			ld b,(iy+var_x)				; x is 
002107 FD7E 03             B   436    			ld a,(iy+var_z)
00210A FE06                B   437    			cp 6
00210C C8                  B   438    			ret z
00210D 21 F4 27 00         B   439    			ld hl,ddcb_fdcb_zn6					002111 C9                  B   440    			ret
                           B   441    			
                           B   442    ;==============================================
                           B   443    
002112                     B   444    not_ddcb_fdcb_inst
                           B   445    
002112 FDCB0046            B   446    			bit cb_prefix,(iy)			;is thi
002116 28 08               B   447    			jr z,not_cb_inst
002118 21 7C 25 00         B   448    			ld hl,cb_group		
00211C FD46 01             B   449    			ld b,(iy+var_x)				; x is 
00211F C9                  B   450    			ret
                           B   451    
                           B   452    ;==============================================
                           B   453    
002120                     B   454    not_cb_inst
                           B   455    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  77


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002120 FDCB004E            B   456    			bit ed_prefix,(iy)			;is thi
002124 CA 45 22 00         B   457    			jr z,not_ed_inst
                           B   458    
002128 FD7E 01             B   459    			ld a,(iy+var_x)				;x = 0
00212B B7                  B   460    			or a
00212C 20 56               B   461    			jr nz,notedx0
                           B   462    		
                           B   463    			
00212E FD7E 03             B   464    			ld a,(iy+var_z)				
002131 B7                  B   465    			or a
002132 20 0D               B   466    			jr nz,notedx0z0
002134 21 A3 25 00         B   467    			ld hl,ed_x0_z0_yn6			;x0 / z
002138 FD7E 02             B   468    			ld a,(iy+var_y)
00213B FE06                B   469    			cp 6
00213D C0                  B   470    			ret nz
00213E 0601                B   471    			ld b,1
002140 C9                  B   472    			ret
                           B   473    
002141 FE01                B   474    notedx0z0	cp 1
002143 20 0D               B   475    			jr nz,notedx0z1
002145 21 B4 25 00         B   476    			ld hl,ed_x0_z1				;x0 / z
002149 FD7E 02             B   477    			ld a,(iy+var_y)
00214C FE06                B   478    			cp 6
00214E C0                  B   479    			ret nz
00214F 0601                B   480    			ld b,1
002151 C9                  B   481    			ret
                           B   482    
002152 FE02                B   483    notedx0z1	cp 2
002154 20 05               B   484    			jr nz,notedx0z2
002156 21 CA 25 00         B   485    			ld hl,ed_x0_z2				;x0 / z
00215A C9                  B   486    			ret
                           B   487    
00215B FE03                B   488    notedx0z2	cp 3
00215D 20 05               B   489    			jr nz,notedx0z3
00215F 21 D6 25 00         B   490    			ld hl,ed_x0_z3				;x0 / z
002163 C9                  B   491    			ret
                           B   492    			
002164 FE04                B   493    notedx0z3	cp 4
002166 20 05               B   494    			jr nz,notedx0z4
002168 21 E2 25 00         B   495    			ld hl,ed_x0_z4				;x0 / z
00216C C9                  B   496    			ret
                           B   497    
00216D FE06                B   498    notedx0z4	cp 6
00216F 20 05               B   499    			jr nz,notedx0z6				;x0 / z
002171 21 EC 25 00         B   500    			ld hl,ed_x0_z6
002175 C9                  B   501    			ret
                           B   502    
002176 FE07                B   503    notedx0z6	cp 7
002178 C2 4F 28 00         B   504    			jr nz,bad_opcode			;x0 / z
00217C 21 F7 25 00         B   505    			ld hl,ed_x0_z7
002180 FD46 05             B   506    			ld b,(iy+var_q)
002183 C9                  B   507    			ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  78


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   508    			
                           B   509    ;----------------------------------------------
                           B   510    			
002184 FE01                B   511    notedx0		cp 1	
002186 20 68               B   512    			jr nz,ed_xn1
                           B   513    
002188 FD7E 03             B   514    			ld a,(iy+var_z)					;x 
00218B B7                  B   515    			or a
00218C 20 0D               B   516    			jr nz,ed_x1_zn0
00218E 21 0C 26 00         B   517    			ld hl,ed_x1_z0_yn6				;z 
002192 FD7E 02             B   518    			ld a,(iy+var_y)
002195 FE06                B   519    			cp 6
002197 C0                  B   520    			ret nz
002198 0601                B   521    			ld b,1
00219A C9                  B   522    			ret
                           B   523    			
00219B FE01                B   524    ed_x1_zn0	cp 1
00219D 20 0D               B   525    			jr nz,ed_x1_zn1
00219F 21 1C 26 00         B   526    			ld hl,ed_x1_z1_yn6				;z 
0021A3 FD7E 02             B   527    			ld a,(iy+var_y)
0021A6 FE06                B   528    			cp 6
0021A8 C0                  B   529    			ret nz
0021A9 0601                B   530    			ld b,1
0021AB C9                  B   531    			ret
                           B   532    		
0021AC FE02                B   533    ed_x1_zn1	cp 2
0021AE 20 08               B   534    			jr nz,ed_x1_zn2					;z 
0021B0 21 31 26 00         B   535    			ld hl,ed_x1_z2	
0021B4 FD46 05             B   536    			ld b,(iy+var_q)
0021B7 C9                  B   537    			ret
                           B   538    
0021B8 FE03                B   539    ed_x1_zn2	cp 3
0021BA 20 08               B   540    			jr nz,ed_x1_zn3					;z 
0021BC 21 47 26 00         B   541    			ld hl,ed_x1_z3	
0021C0 FD46 05             B   542    			ld b,(iy+var_q)
0021C3 C9                  B   543    			ret
                           B   544    			
0021C4 FE04                B   545    ed_x1_zn3	cp 4							;z 
0021C6 20 08               B   546    			jr nz,ed_x1_zn4
0021C8 21 5C 26 00         B   547    			ld hl,ed_x1_z4
0021CC FD46 02             B   548    			ld b,(iy+var_y)
0021CF C9                  B   549    			ret
                           B   550    			
0021D0 FE05                B   551    ed_x1_zn4	cp 5
0021D2 20 08               B   552    			jr nz,ed_x1_zn5
0021D4 21 94 26 00         B   553    			ld hl,ed_x1_z5					;z 
0021D8 FD46 02             B   554    			ld b,(iy+var_y)
0021DB C9                  B   555    			ret
                           B   556    			
0021DC FE06                B   557    ed_x1_zn5	cp 6
0021DE 20 08               B   558    			jr nz,ed_x1_zn6					;z=
0021E0 21 C3 26 00         B   559    			ld hl,ed_x1_z6
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  79


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0021E4 FD46 02             B   560    			ld b,(iy+var_y)
0021E7 C9                  B   561    			ret
                           B   562    			
0021E8 21 E8 26 00         B   563    ed_x1_zn6	ld hl,ed_x1_z7					;z=
0021EC FD46 02             B   564    			ld b,(iy+var_y)
0021EF C9                  B   565    			ret
                           B   566    
                           B   567    ;----------------------------------------------
                           B   568    				
0021F0 FE02                B   569    ed_xn1		cp 2
0021F2 20 2E               B   570    			jr nz,ed_xn2
                           B   571    			
0021F4 FD46 02             B   572    			ld b,(iy+var_y)
0021F7 FD7E 03             B   573    			ld a,(iy+var_z)
0021FA B7                  B   574    			or a
0021FB 20 05               B   575    			jr nz,edx2zn0
0021FD 21 0C 27 00         B   576    			ld hl,ed_x2_z0					;x=
002201 C9                  B   577    			ret
                           B   578    
002202 FE01                B   579    edx2zn0		cp 1
002204 20 05               B   580    			jr nz,edx2zn1
002206 21 26 27 00         B   581    			ld hl,ed_x2_z1					;x=
00220A C9                  B   582    			ret
                           B   583    
00220B FE02                B   584    edx2zn1		cp 2
00220D 20 05               B   585    			jr nz,edx2zn2
00220F 21 40 27 00         B   586    			ld hl,ed_x2_z2					;x=
002213 C9                  B   587    			ret
                           B   588    
002214 FE03                B   589    edx2zn2		cp 3
002216 20 05               B   590    			jr nz,edx2zn3
002218 21 70 27 00         B   591    			ld hl,ed_x2_z3					;x=
00221C C9                  B   592    			ret
                           B   593    
00221D 21 A2 27 00         B   594    edx2zn3		ld hl,ed_x2_z4					;x=
002221 C9                  B   595    			ret
                           B   596    
                           B   597    ;----------------------------------------------
                           B   598    
002222 FE03                B   599    ed_xn2		cp 3
002224 20 18               B   600    			jr nz,ed_xn3
                           B   601    			
002226 FD46 02             B   602    			ld b,(iy+var_y)
002229 FD7E 03             B   603    			ld a,(iy+var_z)
00222C FE02                B   604    			cp 2
00222E 20 05               B   605    			jr nz,edx3zn2
002230 21 D8 27 00         B   606    			ld hl,ed_x3_z2					;x=
002234 C9                  B   607    			ret
002235 FE03                B   608    edx3zn2		cp 3
002237 20 05               B   609    			jr nz,edx3zn3
002239 21 E6 27 00         B   610    			ld hl,ed_x3_z3					;x=
00223D C9                  B   611    			ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  80


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   612    
00223E                     B   613    edx3zn3
                           B   614    
00223E                     B   615    ed_xn3
                           B   616    
                           B   617    ;----------------------------------------------
                           B   618    
00223E                     B   619    invalid_op
00223E 21 4F 28 00         B   620    			ld hl,bad_opcode				; x
002242 0600                B   621    			ld b,0
002244 C9                  B   622    			ret
                           B   623    			
                           B   624    			
                           B   625    ;========= UNPREFIXED INSTRUCTION =============
                           B   626    
                           B   627    
002245 FD7E 01             B   628    not_ed_inst	ld a,(iy+var_x)				; is X 
002248 B7                  B   629    			or a
002249 C2 E1 22 00         B   630    			jr nz,x_not_zero
                           B   631    
                           B   632    ;----------------------------------------------
                           B   633    
                           B   634    
00224D FD7E 03             B   635    			ld a,(iy+var_z)				;x = 0
002250 B7                  B   636    			or a
002251 20 14               B   637    			jr nz,x0_z_not_zero
002253 21 CE 23 00         B   638    			ld hl,x0_z0
002257 FD7E 02             B   639    			ld a,(iy+var_y)				;y is t
00225A 47                  B   640    			ld b,a
00225B D604                B   641    			sub 4
00225D FD77 06             B   642    			ld (iy+var_calc),a			;var_ca
002260 78                  B   643    			ld a,b
002261 FE04                B   644    			cp 4
002263 D8                  B   645    			ret c
002264 0604                B   646    			ld b,4						;if y >
002266 C9                  B   647    			ret
                           B   648    			
002267                     B   649    x0_z_not_zero		
                           B   650    			
002267 FE01                B   651    			cp 1
002269 20 1A               B   652    			jr nz,x0_z_not_one
00226B FD7E 02             B   653    			ld a,(iy+var_y)				;x=0/z=
00226E FE06                B   654    			cp 6
002270 20 0B               B   655    			jr nz,x0z1yn6
002272 CD 81 23 00         B   656    			call test_ixiy_prefix		;if y=6
002276 28 05               B   657    			jr z,x0z1yn6				;altern
002278 21 01 24 00         B   658    			ld hl,x0_z1_y6
00227C C9                  B   659    			ret
                           B   660    
00227D 21 EE 23 00         B   661    x0z1yn6		ld hl,x0_z1					;x=0, z
002281 FD46 05             B   662    			ld b,(iy+var_q)				;q is t
002284 C9                  B   663    			ret 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  81


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   664    			
002285                     B   665    x0_z_not_one
                           B   666    
002285 FE02                B   667    			cp 2
002287 20 08               B   668    			jr nz,x0_z_not_two
002289 21 09 24 00         B   669    			ld hl,x0_z2
00228D FD46 02             B   670    			ld b,(iy+var_y)				;y is t
002290 C9                  B   671    			ret
                           B   672    			
002291                     B   673    x0_z_not_two
                           B   674    
002291 FE03                B   675    			cp 3
002293 20 08               B   676    			jr nz,x0_z_not_three
002295 21 55 24 00         B   677    			ld hl,x0_z3
002299 FD46 05             B   678    			ld b,(iy+var_q)				;q is t
00229C C9                  B   679    			ret
                           B   680    			
00229D                     B   681    x0_z_not_three
                           B   682    
00229D FE04                B   683    			cp 4
00229F 20 05               B   684    			jr nz,x0_z_not_four
0022A1 21 65 24 00         B   685    			ld hl,x0_z4					;no ini
0022A5 C9                  B   686    			ret			
                           B   687    			
0022A6                     B   688    x0_z_not_four
                           B   689    
0022A6 FE05                B   690    			cp 5
0022A8 20 05               B   691    			jr nz,x0_z_not_five
0022AA 21 6D 24 00         B   692    			ld hl,x0_z5					;no ini
0022AE C9                  B   693    			ret				
                           B   694    			
0022AF                     B   695    x0_z_not_five
                           B   696    
0022AF FE06                B   697    			cp 6
0022B1 20 1A               B   698    			jr nz,x0_z_not_six
0022B3 21 75 24 00         B   699    			ld hl,x0_z6					;normal
0022B7 FD7E 02             B   700    			ld a,(iy+var_y)
0022BA FE07                B   701    			cp 7
0022BC C0                  B   702    			ret nz
0022BD FDCB0056            B   703    			bit sub_ix_prefix,(iy)
0022C1 20 05               B   704    			jr nz,altx0z6
0022C3 FDCB005E            B   705    			bit sub_iy_prefix,(iy)
0022C7 C8                  B   706    			ret z	
0022C8 21 7E 24 00         B   707    altx0z6		ld hl,alt_x0_z6				;if dd/
0022CC C9                  B   708    			ret
                           B   709    
                           B   710    
0022CD                     B   711    x0_z_not_six
                           B   712    			
0022CD 21 86 24 00         B   713    			ld hl,x0_z7					;x=0, z
0022D1 FD46 02             B   714    			ld b,(iy+var_y)				;y is n
0022D4 CD 81 23 00         B   715    			call test_ixiy_prefix
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  82


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0022D8 C8                  B   716    			ret z
0022D9 21 A0 24 00         B   717    altx0z7		ld hl,alt_x0_z7				;if dd/
0022DD FD46 05             B   718    			ld b,(iy+var_q)				;this i
0022E0 C9                  B   719    			ret
                           B   720    
                           B   721    ;----------------------------------------------
                           B   722    
0022E1 FE01                B   723    x_not_zero	cp 1						; is x 
0022E3 20 32               B   724    			jr nz,x_not_one
                           B   725    			
0022E5 21 B2 24 00         B   726    			ld hl,x1_table				; x=1
0022E9 CD 81 23 00         B   727    			call test_ixiy_prefix
0022ED 20 11               B   728    			jr nz,pref_x1
0022EF FD7E 02             B   729    			ld a,(iy+var_y)
0022F2 FE06                B   730    			cp 6
0022F4 C0                  B   731    			ret nz
0022F5 FD7E 03             B   732    			ld a,(iy+var_z)
0022F8 FE06                B   733    			cp 6
0022FA C0                  B   734    			ret nz
0022FB 21 D0 24 00         B   735    			ld hl,x1_y6_z6				;if y=6
0022FF C9                  B   736    			ret
                           B   737    
002300 FD7E 02             B   738    pref_x1		ld a,(iy+var_y)				
002303 FE06                B   739    			cp 6
002305 20 05               B   740    			jr nz,x1yn6
002307 21 BC 24 00         B   741    			ld hl,x1_y6
00230B C9                  B   742    			ret
                           B   743    			
00230C FD7E 03             B   744    x1yn6		ld a,(iy+var_z)
00230F FE06                B   745    			cp 6
002311 C0                  B   746    			ret nz
002312 21 C6 24 00         B   747    			ld hl,x1_z6
002316 C9                  B   748    			ret
                           B   749    			
                           B   750    ;----------------------------------------------
                           B   751    			
002317 FE02                B   752    x_not_one	cp 2						; is x 
002319 20 05               B   753    			jr nz,x_not_two
00231B 21 D4 24 00         B   754    			ld hl,x2_table				; no in
00231F C9                  B   755    			ret
                           B   756    			
                           B   757    ;----------------------------------------------
                           B   758    
002320 FD7E 03             B   759    x_not_two	ld a,(iy+var_z)				; x mus
002323 B7                  B   760    			or a
002324 20 05               B   761    			jr nz,x3_z_not_zero
002326 21 D9 24 00         B   762    			ld hl,x3_z0					; no in
00232A C9                  B   763    			ret
                           B   764    						
00232B                     B   765    x3_z_not_zero
                           B   766    
00232B FE01                B   767    			cp 1
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  83


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
00232D 20 11               B   768    			jr nz,x3_z_not_one
00232F 21 E1 24 00         B   769    			ld hl,x3_z1_q0
002333 FD7E 05             B   770    			ld a,(iy+var_q)
002336 B7                  B   771    			or a
002337 C8                  B   772    			ret z						; no in
002338 21 E9 24 00         B   773    			ld hl,x3_z1_q1
00233C FD46 04             B   774    			ld b,(iy+var_p)				; index
00233F C9                  B   775    			ret
                           B   776    
002340                     B   777    x3_z_not_one
                           B   778    
002340 FE02                B   779    			cp 2
002342 20 05               B   780    			jr nz,x3_z_not_two
002344 21 00 25 00         B   781    			ld hl,x3_z2					;no ini
002348 C9                  B   782    			ret
                           B   783    
002349                     B   784    x3_z_not_two
                           B   785    
002349 FE03                B   786    			cp 3
00234B 20 08               B   787    			jr nz,x3_z_not_three
00234D 21 09 25 00         B   788    			ld hl,x3_z3
002351 FD46 02             B   789    			ld b,(iy+var_y)				;index 
002354 C9                  B   790    			ret
                           B   791    
002355                     B   792    x3_z_not_three
                           B   793    
002355 FE04                B   794    			cp 4
002357 20 05               B   795    			jr nz,x3_z_not_four
002359 21 3E 25 00         B   796    			ld hl,x3_z4				;no initial
00235D C9                  B   797    			ret						
                           B   798    
                           B   799    
00235E                     B   800    x3_z_not_four
                           B   801    
00235E FE05                B   802    			cp 5
002360 20 11               B   803    			jr nz,x3_z_not_five
002362 21 49 25 00         B   804    			ld hl,x3_z5_q0
002366 FD7E 05             B   805    			ld a,(iy+var_q)
002369 B7                  B   806    			or a
00236A C8                  B   807    			ret z						;no ind
00236B 21 52 25 00         B   808    			ld hl,x3_z5_q1
00236F FD46 04             B   809    			ld b,(iy+var_p)				;else i
002372 C9                  B   810    			ret
                           B   811    
002373                     B   812    x3_z_not_five
                           B   813    
002373 FE06                B   814    			cp 6
002375 20 05               B   815    			jr nz,x3_z_not_six
002377 21 70 25 00         B   816    			ld hl,x3_z6					;no ind
00237B C9                  B   817    			ret
                           B   818    
00237C                     B   819    x3_z_not_six
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  84


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   820    
00237C 21 74 25 00         B   821    			ld hl,x3_z7					;x=3, z
002380 C9                  B   822    			ret
                           B   823    
                           B   824    
                           B   825    ;==============================================
                           B   826    
002381                     B   827    test_ixiy_prefix
                           B   828    
002381 FDCB0056            B   829    			bit sub_ix_prefix,(iy)
002385 C0                  B   830    			ret nz
002386 FDCB005E            B   831    			bit sub_iy_prefix,(iy)
00238A C9                  B   832    			ret
                           B   833    			
                           B   834    ;==============================================
                           B   835    
                           B   836    
00238B                     B   837    show_hex_byte
                           B   838    
00238B E5                  B   839    			push hl
00238C 21 38 29 00         B   840    			ld hl,output_byte_txt
002390 E5                  B   841    			push hl
002391 CD A5 10 00         B   842    			call hexbyte_to_ascii
002395 E1                  B   843    			pop hl
002396 CD 5A 0F 00         B   844    			call os_print_string
00239A E1                  B   845    			pop hl
00239B C9                  B   846    			ret
                           B   847    			
                           B   848    
00239C                     B   849    show_ascii_char
                           B   850    
00239C E5                  B   851    			push hl
00239D 21 3B 29 00         B   852    			ld hl,output_char_txt
0023A1 77                  B   853    			ld (hl),a
0023A2 CD 5A 0F 00         B   854    			call os_print_string
0023A6 E1                  B   855    			pop hl
0023A7 C9                  B   856    			ret
                           B   857    		
                           B   858    		
0023A8 DD22 35 29 00       B   859    show_ix		ld (d_work_address),ix
0023AD 3A 37 29 00         B   860    			ld a,(d_work_address+2)
0023B1 CD 8B 23 00         B   861    			call show_hex_byte
0023B5 3A 36 29 00         B   862    			ld a,(d_work_address+1)
0023B9 CD 8B 23 00         B   863    			call show_hex_byte
0023BD 3A 35 29 00         B   864    			ld a,(d_work_address)
0023C1 CD 8B 23 00         B   865    			call show_hex_byte
0023C5 C9                  B   866    			ret
                           B   867    			
                           B   868    ;----------------------------------------------
                           B   869    
                           B   870    ; SYMBOLS:
                           B   871    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  85


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   872    ; #  CC_table
                           B   873    ; ~  r table (registers)
                           B   874    ; =  r2 table (registers 2)
                           B   875    ; @  RP table (register pairs 1)
                           B   876    ; *  RP2 table (registers pairs 2)
                           B   877    ; :  ALU table
                           B   878    ; %  ROT table
                           B   879    ; _  HL,IX/IY substitute selected by prefix
                           B   880    ; |  HL, IY/IX substitute based on prefix (IX/I
                           B   881    ; $  (HL),(IX+d),(IY+d) substitute selected by 
                           B   882    ; h  H,IXH/IYH substitute selected by prefix
                           B   883    ; l  L,IXL,IYL substitute selected by prefix
                           B   884    ; &  ADL prefix 
                           B   885    
                           B   886    ; ^   n (8 bit immediate)
                           B   887    ; !   nn (16 or 24 bit immediate)
                           B   888    ; d   8 bit signed jump displacement from PC
                           B   889    ; /   8 bit signed byte used for IX+d, IY+d ins
                           B   890    ; >   single digit used by BIT,SET,RES instruct
                           B   891    ; <   RP3 table (register pairs 3)
                           B   892    ; }   RP4 table (register pairs 4)
                           B   893    ; ;   RST table
                           B   894    ; {   RP5 table (register pairs 5)
                           B   895    
0023C6                     B   896    opcode_vars
                           B   897    
0023C6 00                  B   898    prefix_bits_loc	db 0	
0023C7 00                  B   899    var_x_loc		db 0	
0023C8 00                  B   900    var_y_loc		db 0	
0023C9 00                  B   901    var_z_loc		db 0	
0023CA 00                  B   902    var_p_loc		db 0	
0023CB 00                  B   903    var_q_loc		db 0
0023CC 00                  B   904    var_calc_loc	db 0
0023CD 01                  B   905    var_adl_loc		db 1
                           B   906    
       00000000            B   907    prefix_bits		equ opcode_vars-prefix_bits_loc
       00000001            B   908    var_x			equ var_x_loc-opcode_vars
       00000002            B   909    var_y			equ var_y_loc-opcode_vars
       00000003            B   910    var_z			equ var_z_loc-opcode_vars
       00000004            B   911    var_p			equ var_p_loc-opcode_vars
       00000005            B   912    var_q			equ var_q_loc-opcode_vars
       00000006            B   913    var_calc		equ var_calc_loc-opcode_vars
       00000007            B   914    var_adl			equ var_adl_loc-opcode_vars
                           B   915    
                           B   916    ;---- Unprefixed opcodes ----------------------
                           B   917    
                           B   918    
0023CE 4E4FD0              B   919    x0_z0		db 'NO','P'+80h				; y0
0023D1 45582041 462C4146   B   920    			db 'EX AF,AF',27h+80h		; y1 
0023D9 A7 
0023DA 444A4E5A 206480     B   921    			db 'DJNZ ','d',80h			; y2
0023E1 4A522064 80         B   922    			db 'JR ','d',80h			; y3
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  86


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0023E6 4A522023 06 2C6480   B   923    			db 'JR #',var_calc,',d',80h	; y4-y7
                           B   924    			
0023EE 4C442620 40 04      B   925    x0_z1		db 'LD& @',var_p,',!',80h	; q=0
0023F4 2C2180 
0023F7 41444426 205F2C40   B   926    			db 'ADD& _,@',var_p,80h		; q=1
0023FF 04 80 
002401 4C442620 7C2C2480   B   927    x0_z1_y6	db 'LD& |,$',80h
                           B   928    
002409 4C442620 28424329   B   929    x0_z2		db 'LD& (BC),','A'+80h		;y=0
002411 2CC1 
002413 4C442620 412C2842   B   930    			db 'LD& A,(BC',')'+80h		;y=1
00241B 43A9 
00241D 4C442620 28444529   B   931    			db 'LD& (DE),','A'+80h		;y=2
002425 2CC1 
002427 4C442620 412C2844   B   932    			db 'LD& A,(DE',')'+80h		;y=3
00242F 45A9 
002431 4C442620 2821292C   B   933    			db 'LD& (!),','_'+80h		;y=4
002439 DF 
00243A 4C442620 5F2C2821   B   934    			db 'LD& _,(!',')'+80h		;y=5
002442 A9 
002443 4C442620 2821292C   B   935    			db 'LD& (!),','A'+80h		;y=6
00244B C1 
00244C 4C442620 412C2821   B   936    			db 'LD& A,(!',')'+80h		;y=7
002454 A9 
                           B   937    
002455 494E4326 2040 04    B   938    x0_z3		db 'INC& @',var_p,80h		;q=0
00245C 80 
00245D 44454326 2040 04    B   939    			db 'DEC& @',var_p,80h		;q=1
002464 80 
                           B   940    			
002465 494E4326 207E 02    B   941    x0_z4		db 'INC& ~',var_y,80h		
00246C 80 
                           B   942    
00246D 44454326 207E 02    B   943    x0_z5		db 'DEC& ~',var_y,80h		
002474 80 
                           B   944    			
002475 4C442620 7E 02      B   945    x0_z6		db 'LD& ~',var_y,',^',80h	
00247B 2C5E80 
00247E 4C442620 242C7C80   B   946    alt_x0_z6	db 'LD& $,|',80h			; when 
                           B   947    		
002486 524C43C1            B   948    x0_z7		db 'RLC','A'+80h		;y=0
00248A 525243C1            B   949    			db 'RRC','A'+80h		;y=1
00248E 524CC1              B   950    			db 'RL','A'+80h			;y=2
002491 5252C1              B   951    			db 'RR','A'+80h			;y=3
002494 4441C1              B   952    			db 'DA','A'+80h			;y=4
002497 4350CC              B   953    			db 'CP','L'+80h			;y=5
00249A 5343C6              B   954    			db 'SC','F'+80h			;y=6 (and n
00249D 4343C6              B   955    			db 'CC','F'+80h			;y=7 (and n
                           B   956    			
0024A0 4C442620 7B 04      B   957    alt_x0_z7	db 'LD& {',var_p,',$',80h	;q=0 (D
0024A6 2C2480 
0024A9 4C442620 242C7B 04   B   958    			db 'LD& $,{',var_p,80h		;q=1 (D
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  87


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0024B1 80 
                           B   959    		
                           B   960    
                           B   961    
0024B2 4C442620 7E 02      B   962    x1_table	db 'LD& ~',var_y,',~',var_z,80h	
0024B8 2C7E 03 80 
0024BC 4C442620 7E 02      B   963    x1_y6	 	db 'LD& ~',var_y,',=',var_z,80h		0024C2 2C3D 03 80 
0024C6 4C442620 3D 02      B   964    x1_z6		db 'LD& =',var_y,',~',var_z,80h		0024CC 2C7E 03 80 
                           B   965    
0024D0 48414CD4            B   966    x1_y6_z6	db 'HAL','T'+80h
                           B   967    
                           B   968    
                           B   969    
0024D4 3A 02 7E 03 80      B   970    x2_table	db ':',var_y,'~',var_z,80h			                           B   971    			
                           B   972    		
                           B   973    		
0024D9 52455426 2023 02    B   974    x3_z0		db 'RET& #',var_y,80h
0024E0 80 
                           B   975    
0024E1 504F5026 202A 04    B   976    x3_z1_q0	db 'POP& *',var_p,80h			
0024E8 80 
0024E9 52455426 80         B   977    x3_z1_q1	db 'RET','&',80h		;p=0
0024EE 4558D8              B   978    			db 'EX','X'+80h			;p=1
0024F1 4A502620 5F80       B   979    			db 'JP& _',80h			;p=2
0024F7 4C442620 53502C5F   B   980    			db 'LD& SP,_',80h		;p=3
0024FF 80 
                           B   981    
002500 4A502620 23 02      B   982    x3_z2		db 'JP& #',var_y,',!',80h		
002506 2C2180 
                           B   983    
002509 4A502620 2180       B   984    x3_z3		db 'JP& !',80h			;y = 0
00250F 43422070 667880     B   985    			db 'CB pfx',80h			;y = 1
002516 4F555420 285E292C   B   986    			db 'OUT (^),','A'+80h	;y = 2
00251E C1 
00251F 494E2041 2C285EA9   B   987    			db 'IN A,(^',')'+80h	;y = 3
002527 45582620 28535029   B   988    			db 'EX& (SP),','_',80h	;y = 4
00252F 2C5F80 
002532 45582044 452C48CC   B   989    			db 'EX DE,H','L'+80h	;y = 5
00253A 44C9                B   990    			db 'D','I'+80h			;y = 6
00253C 45C9                B   991    			db 'E','I'+80h			;y = 7
                           B   992    
00253E 43414C4C 262023 02   B   993    x3_z4		db 'CALL& #',var_y,',!',80h
002546 2C2180 
                           B   994    
002549 50555348 26202A 04   B   995    x3_z5_q0	db 'PUSH& *',var_p,80h			
002551 80 
002552 43414C4C 26202180   B   996    x3_z5_q1	db 'CALL& !',80h			;p=0
00255A 44442070 667880     B   997    			db 'DD pfx',80h			;p=1
002561 45442070 667880     B   998    			db 'ED pfx',80h			;p=2
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  88


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002568 20464420 70667880   B   999    			db' FD pfx',80h			;p=3
                           B  1000    
002570 3A 02 5E80          B  1001    x3_z6		db ':',var_y,'^',80h	;ALU_table(
                           B  1002    
002574 52535426 203B 02    B  1003    x3_z7		db 'RST& ;',var_y,80h		; rst_t
00257B 80 
                           B  1004    
                           B  1005    
                           B  1006    ;--- CB - Prefixed op-codes--------------------
                           B  1007    
                           B  1008    
00257C 25 02 207E 03 80    B  1009    cb_group		db '%',var_y,' ~',var_z,80h		002582 42495426 203E 02    B  1010    				db 'BIT& >',var_y,',~',var_z,80
002589 2C7E 03 80 
00258D 52455326 203E 02    B  1011    				db 'RES& >',var_y,',~',var_z,80
002594 2C7E 03 80 
002598 53455426 203E 02    B  1012    				db 'SET& >',var_y,',~',var_z,80
00259F 2C7E 03 80 
                           B  1013    
                           B  1014    
                           B  1015    ;---- ED - Prefixed op-codes-------------------
                           B  1016    
0025A3 494E3020 7E 02      B  1017    ed_x0_z0_yn6	db 'IN0 ~',var_y,',(^',')'+80h
0025A9 2C285EA9 
0025AD 494E3020 285EA9     B  1018    ed_x0_z0_y6		db 'IN0 (^',')'+80h	
                           B  1019    
0025B4 4F555430 20285E29   B  1020    ed_x0_z1		db 'OUT0 (^),~',var_y,80h		0025BC 2C7E 02 80 
0025C0 4C442620 49592C28   B  1021    				db 'LD& IY,(_',')'+80h			0025C8 5FA9 
                           B  1022    
0025CA 4C454126 203C 04    B  1023    ed_x0_z2		db 'LEA& <',var_p,',IX/',80h	0025D1 2C49582F 80 
0025D6 4C454126 207D 04    B  1024    ed_x0_z3		db 'LEA& }',var_p,',IY/',80h
0025DD 2C49592F 80 
0025E2 54535426 20412C7E   B  1025    ed_x0_z4		db 'TST& A,~',var_y,80h
0025EA 02 80 
                           B  1026    
0025EC 4C442620 285F292C   B  1027    ed_x0_z6		db 'LD& (_),}',var_p,80h
0025F4 7D 04 80 
                           B  1028    
0025F7 4C442620 3C 04      B  1029    ed_x0_z7		db 'LD& <',var_p,',(_',')'+80h	0025FD 2C285FA9 
002601 4C442620 285F292C   B  1030    				db 'LD& (_),<',var_p,80h		002609 3C 04 80 
                           B  1031    
00260C 494E207E 02         B  1032    ed_x1_z0_yn6	db 'IN ~',var_y,',(BC',')'+80h
002611 2C284243 A9 
002616 494E2028 43A9       B  1033    ed_x1_z0_y6		db 'IN (C',')'+80h
                           B  1034    
00261C 4F555420 28424329   B  1035    ed_x1_z1_yn6	db 'OUT (BC),~',var_y,80h
002624 2C7E 02 80 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  89


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002628 4F555420 2843292C   B  1036    ed_x1_z1_y6		db 'OUT (C),','0'+80h
002630 B0 
                           B  1037    
002631 53424326 20484C2C   B  1038    ed_x1_z2		db 'SBC& HL,@',var_p,80h		002639 40 04 80 
00263C 41444326 20484C2C   B  1039    				db 'ADC& HL,@',var_p,80h		002644 40 04 80 
                           B  1040    
002647 4C442620 2821292C   B  1041    ed_x1_z3		db 'LD& (!),@',var_p,80h		00264F 40 04 80 
002652 4C442620 40 04      B  1042    				db 'LD& @',var_p,',(!',')'+80h	002658 2C2821A9 
                           B  1043    
00265C 4E45C7              B  1044    ed_x1_z4		db 'NE','G'+80h				;y=
00265F 4D4C5420 42C3       B  1045    				db 'MLT B','C'+80h			;y=
002665 4C454126 2049582C   B  1046    				db 'LEA& IX,IY/',80h			00266D 49592F80 
002671 4D4C5420 44C5       B  1047    				db 'MLT D','E'+80h			;y=
002677 54535426 20412C5E   B  1048    				db 'TST& A,^',80h			;y=
00267F 80 
002680 4D4C5420 48CC       B  1049    				db 'MLT H','L'+80h			;y=
002686 54535449 4F205E80   B  1050    				db 'TSTIO ^',80h			;y=
00268E 4D4C5420 53D0       B  1051    				db 'MLT S','P'+80h 			;y=
                           B  1052    
002694 5245544E 2680       B  1053    ed_x1_z5		db 'RETN&',80h				;y=
00269A 52455449 2680       B  1054    				db 'RETI&',80h				;y=
0026A0 4C454126 2049592C   B  1055    				db 'LEA& IY,IX/',80h		;y=
0026A8 49582F80 
0026AC BF                  B  1056    				db '?'+80h					;y=
0026AD 50454126 2049582F   B  1057    				db 'PEA& IX/',80h			;y=
0026B5 80 
0026B6 4C44204D 422CC1     B  1058    				db 'LD MB,','A'+80h			;y=
0026BD BF                  B  1059    				db '?'+80h					;y=
0026BE 53544D49 D8         B  1060    				db 'STMI','X'+80h			;y=
                           B  1061    				
                           B  1062    	
0026C3 494D20B0            B  1063    ed_x1_z6		db 'IM ','0'+80h			;y=
0026C7 BF                  B  1064    				db '?'+80h					;y=
0026C8 494D20B1            B  1065    				db 'IM ','1'+80h			;y=
0026CC 494D20B2            B  1066    				db 'IM ','2'+80h			;y=
0026D0 50454126 2049592F   B  1067    				db 'PEA& IY/',80h			;y=
0026D8 80 
0026D9 4C442041 2C4DC2     B  1068    				db 'LD A,','M','B'+80h		;y=
0026E0 534CD0              B  1069    				db 'SL','P'+80h				;y=
0026E3 52534D49 D8         B  1070    				db 'RSMI','X'+80h			;y=
                           B  1071    
0026E8 4C442049 2CC1       B  1072    ed_x1_z7		db 'LD I,','A'+80h			;y=
0026EE 4C442052 2CC1       B  1073    				db 'LD R,','A'+80h			;y=
0026F4 4C442041 2CC9       B  1074    				db 'LD A,','I'+80h			;y=
0026FA 4C442041 2CD2       B  1075    				db 'LD A,','R'+80h			;y=
002700 5252C4              B  1076    				db 'RR','D'+80h				;y=
002703 524CC4              B  1077    				db 'RL','D'+80h				;y=
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  90


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002706 4E4FD0              B  1078    				db 'NO','P'+80h				;y=
002709 4E4FD0              B  1079    				db 'NO','P'+80h				;y=
                           B  1080    
                           B  1081    
00270C BFBFBFBF            B  1082    ed_x2_z0		db '?'+80h,'?'+80h,'?'+80h,'?'+
002710 4C444926 80         B  1083    				db 'LDI&',80h					002715 4C444426 80         B  1084    				db 'LDD&',80h					00271A 4C444952 2680       B  1085    				db 'LDIR&',80h					002720 4C444452 2680       B  1086    				db 'LDDR&',80h					                           B  1087    
002726 BFBFBFBF            B  1088    ed_x2_z1		db '?'+80h,'?'+80h,'?'+80h,'?'+
00272A 43504926 80         B  1089    				db 'CPI&',80h					00272F 43504426 80         B  1090    				db 'CPD&',80h					002734 43504952 2680       B  1091    				db 'CPIR&',80h					00273A 43504452 2680       B  1092    				db 'CPDR&',80h					                           B  1093    
002740 494E494D 2680       B  1094    ed_x2_z2		db 'INIM&',80h		; y0	
002746 494E444D 2680       B  1095    				db 'INDM&',80h		; y1
00274C 494E494D 522680     B  1096    				db 'INIMR&',80h		; y2
002753 494E444D 522680     B  1097    				db 'INDMR&',80h		; y3
00275A 494E4926 80         B  1098    				db 'INI&',80h		; y4
00275F 494E4426 80         B  1099    				db 'IND&',80h		; y5
002764 494E4952 2680       B  1100    				db 'INIR&',80h		; y6
00276A 494E4452 2680       B  1101    				db 'INDR&',80h		; y7
                           B  1102    
                           B  1103    
002770 4F54494D 2680       B  1104    ed_x2_z3		db 'OTIM&',80h		; y0
002776 4F54444D 2680       B  1105    				db 'OTDM&',80h		; y1
00277C 4F54494D 522680     B  1106    				db 'OTIMR&',80h		; y2
002783 4F54444D 522680     B  1107    				db 'OTDMR&',80h		; y3
00278A 4F555449 2680       B  1108    				db 'OUTI&',80h		; y4
002790 4F555444 2680       B  1109    				db 'OUTD&',80h		; y5
002796 4F544952 2680       B  1110    				db 'OTIR&',80h		; y6
00279C 4F544452 2680       B  1111    				db 'OTDR&',80h		; y7
                           B  1112    
0027A2 494E4932 2680       B  1113    ed_x2_z4		db 'INI2&',80h		; y0
0027A8 494E4432 2680       B  1114    				db 'IND2&',80h		; y1
0027AE 494E4932 522680     B  1115    				db 'INI2R&',80h		; y2
0027B5 494E4432 522680     B  1116    				db 'IND2R&',80h		; y3
0027BC 4F555449 322680     B  1117    				db 'OUTI2&',80h		; y4
0027C3 4F555444 322680     B  1118    				db 'OUTD2&',80h		; y5
0027CA 4F544932 522680     B  1119    				db 'OTI2R&',80h		; y6
0027D1 4F544432 522680     B  1120    				db 'OTD2R&',80h		; y7
                           B  1121    
                           B  1122    
0027D8 494E4952 582680     B  1123    ed_x3_z2		db 'INIRX&',80h 	; y0
0027DF 494E4452 582680     B  1124    				db 'INDRX&',80h		; y1
                           B  1125    
0027E6 4F544952 582680     B  1126    ed_x3_z3		db 'OTIRX&',80h		; y0
0027ED 4F544452 582680     B  1127    				db 'OTDRX&',80h		; y1
                           B  1128    			
                           B  1129    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  91


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B  1130    ;--- DDCB or FDCB - Prefixed op-codes----------
                           B  1131    
                           B  1132    
0027F4 4C442620 7E 03      B  1133    ddcb_fdcb_zn6	db 'LD& ~',var_z, ',%',var_y,' 
0027FA 2C25 02 202480 
002800 42495426 203E 02    B  1134    				db 'BIT& >',var_y,',$',80h		002807 2C2480 
00280A 4C442620 7E 03      B  1135    				db 'LD& ~',var_z,',RES& >',var_
002810 2C524553 26203E 02 
002818 2C2480 
00281B 4C442620 7E 03      B  1136    				db 'LD& ~',var_z,',SET& >',var_
002821 2C534554 26203E 02 
002829 2C2480 
                           B  1137    
00282C 25 02 202480        B  1138    ddcb_fdcb_z6	db '%',var_y,' $',80h			002831 42495426 203E 02    B  1139    				db 'BIT& >',var_y,',$',80h		002838 2C2480 
00283B 52455326 203E 02    B  1140    				db 'RES& >',var_y,',$',80h		002842 2C2480 
002845 53455426 203E 02    B  1141    				db 'SET& >',var_y,',$',80h		00284C 2C2480 
                           B  1142    
                           B  1143    ;----------------------------------------------
                           B  1144    
00284F 3F3FBF              B  1145    bad_opcode	db '??','?'+80h
                           B  1146    
                           B  1147    ;----------------------------------------------
                           B  1148    
                           B  1149    
002852 C2C3C4C5 68806C80   B  1150    table_r		db 'B'+80h, 'C'+80h, 'D'+80h, 'E'+8
00285A 2480C1 
                           B  1151    
00285D C2C3C4C5 48804C80   B  1152    table_r2	db 'B'+80h, 'C'+80h, 'D'+80h, 'E'+8
002865 2480C1 
                           B  1153    
002868 42C344C5 DF53D0     B  1154    table_rp	db 'B','C'+80h, 'D','E'+80h, '_'+80
                           B  1155    
00286F 42C344C5 5F8041C6   B  1156    table_rp2	db 'B','C'+80h, 'D','E'+80h, '_',+8
                           B  1157    	
002877 4EDADA4E C3C350CF   B  1158    table_cc	db 'N','Z'+80h, 'Z'+80h, 'N','C'+80
00287F 50C5D0CD 
                           B  1159    	
002883 41444426 2041AC41   B  1160    table_alu	db 'ADD& A',','+80h, 'ADC& A',','+8
00288B 44432620 41AC5355 
002893 4226A053 42432041 
00289B 26AC 
00289D 414E4426 A0584F52   B  1161    			db 'AND&',' '+80h, 'XOR&',' '+80h, 
0028A5 26A04F52 26A04350 
0028AD 26A0 
                           B  1162    			
0028AF 524C4326 80525243   B  1163    table_rot	db 'RLC&',80h, 'RRC&',80h, 'RL&',80
0028B7 2680524C 26805252 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  92


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0028BF 2680 
0028C1 534C4126 80535241   B  1164    			db 'SLA&',80h, 'SRA&',80h, 'SLL&',8
0028C9 2680534C 4C268053 
0028D1 524C2680 
                           B  1165    	
0028D5 42C344C5 48CC49D8   B  1166    table_rp3	db 'B','C'+80h, 'D','E'+80h, 'H','L
                           B  1167    
0028DD 42C344C5 48CC49D9   B  1168    table_rp4	db 'B','C'+80h, 'D','E'+80h, 'H','L
                           B  1169    
0028E5 42C344C5 48CC5F80   B  1170    table_rp5	db 'B','C'+80h, 'D','E'+80h, 'H','L
                           B  1171    
0028ED 30B0                B  1172    table_rst	db '0','0'+80h
0028EF 30B8                B  1173    			db '0','8'+80h
0028F1 31B0                B  1174    			db '1','0'+80h
0028F3 31B8                B  1175    			db '1','8'+80h
0028F5 32B0                B  1176    			db '2','0'+80h
0028F7 32B8                B  1177    			db '2','8'+80h	
0028F9 33B0                B  1178    			db '3','0'+80h
0028FB 33B8                B  1179    			db '3','8'+80h			
                           B  1180    
                           B  1181    ;----------------------------------------------
                           B  1182    
                           B  1183    ; "_" = HL, IX, IY depending on prefix 
                           B  1184    ; "|" = as above with IX/IY switched
                           B  1185    
                           B  1186    ; "h" = H, IXH, IYL depending on prefix
                           B  1187    ; "l" = L, IXL, IYL depending on prefix
                           B  1188    ; "$" = (HL), (IX+d), (IY+d) depending on prefi
                           B  1189    
0028FD 48CC49D8 49D9       B  1190    hl_subs		db 'H','L'+80h, 'I','X'+80h, 'I','Y
002903 48CC49D9 49D8       B  1191    inv_hl_subs	db 'H','L'+80h, 'I','Y'+80h, 'I','X
002909 C84958C8 4959C8     B  1192    h_subs		db 'H'+80h, 'IX','H'+80h, 'IY','H'+
002910 CC4958CC 4959CC     B  1193    l_subs		db 'L'+80h, 'IX','L'+80h, 'IY','L'+
002917 28484CA9 2849582F   B  1194    ind_hl_subs	db '(HL',')'+80h, '(IX/',')'+80h, '
00291F A9284959 2FA9 
                           B  1195    
                           B  1196    ;----------------------------------------------
                           B  1197    
002925                     B  1198    adl_prefix_list
                           B  1199    
002925 2E5349D3 2E4C49D3   B  1200    			db '.SI','S'+80h, '.LI','S'+80h, '.
00292D 2E5349CC 2E4C49CC 
                           B  1201    
                           B  1202    ;----------------------------------------------
                           B  1203    
002935 000000              B  1204    d_work_address	dw24 0
                           B  1205    
002938 2D2D00              B  1206    output_byte_txt	db "--",0
00293B 2D00                B  1207    output_char_txt	db "-",0
                           B  1208    
00293D 000001              B  1209    dis_addr		dw24 10000h
                           B  1210    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  93


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B  1211    ;----------------------------------------------
                           B  1212    
                           B     0    	include 'commands\del.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"del" delete file command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
                           B     5    
002940                     B     6    os_cmd_del
                           B     7    	
002940 CD D2 16 00         B     8    				call os_check_volume_format	
002944 C0                  B     9    				ret nz
                           B    10    			
002945 CD 4D 29 00         B    11    				call filename_or_bust
                           B    12    				
002949 C3 3A 17 00         B    13    				jp os_erase_file			;no
                           B    14    				
                           B    15    				
                           B    16    ;----------------------------------------------
                           B    17    			
00294D                     B    18    filename_or_bust
                           B    19    			
00294D 7E                  B    20    				ld a,(hl)					;is
00294E B7                  B    21    				or a
00294F C0                  B    22    				ret nz
002950 E1                  B    23    				pop hl						;ot
002951 C3 3D 16 00         B    24    				jp os_no_fn_error			;so
                           B    25    
                           B    26    ;----------------------------------------------
                           B     0    	include 'commands\dir.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; FAT16 'dir' - show directory command. v0.03 -
                           B     3    ;----------------------------------------------
                           B     4    
002955                     B     5    os_cmd_dir
                           B     6    
002955 CD D2 16 00         B     7    				call os_check_volume_format	
002959 C0                  B     8    				ret nz
                           B     9    				
00295A CD 34 2A 00         B    10    				call div_line
00295E CD 54 53 00         B    11    				call fs_get_current_dir_name	002962 D8                  B    12    				ret c
002963 C0                  B    13    				ret nz
002964 CD 5A 0F 00         B    14    				call os_print_string
002968 CD AA 1A 00         B    15    				call fs_get_dir_cluster			00296C 7A                  B    16    				ld a,d
00296D B3                  B    17    				or e
00296E 20 08               B    18    				jr nz,dcmdnr
002970 CD 3F 50 00         B    19    				call fs_get_volume_label
002974 CD 5A 0F 00         B    20    				call os_print_string
002978 CD 02 14 00         B    21    dcmdnr			call os_new_line
                           B    22    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  94


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\dir.asm
00297C CD 34 2A 00         B    23    nrootdir		call div_line
002980 CD 44 4F 00         B    24    				call fs_goto_first_dir_entry
002984 D8                  B    25    				ret c
002985 20 6F               B    26    				jr nz,os_dlr
002987 AF                  B    27    				xor a
002988 32 63 61 00         B    28    				ld (os_linecount),a
                           B    29    				
00298C CD 5B 4F 00         B    30    os_dfllp		call fs_get_dir_entry			002990 D8                  B    31    				ret c
002991 20 63               B    32    				jr nz,os_dlr					002993 C5                  B    33    				push bc
002994 CD 5A 0F 00         B    34    				call os_print_string			002998 CD 2D 14 00         B    35    				call os_get_cursor_position		00299C 060E                B    36    				ld b,14
00299E CD 0D 14 00         B    37    				call os_set_cursor_position	
0029A2 C1                  B    38    				pop bc
0029A3 CB40                B    39    				bit 0,b							0029A5 28 06               B    40    				jr z,os_deif		
0029A7 21 41 2A 00         B    41    				ld hl,dir_txt					0029AB 18 32               B    42    				jr os_dpl
                           B    43    				
0029AD 21 5B 56 00         B    44    os_deif			ld hl,os_hex_prefix_txt			0029B1 CD 5A 0F 00         B    45    				call os_print_string
0029B5 ED53 AE 68 00       B    46    				ld (scratch_pad),de
0029BA 79                  B    47    				ld a,c
0029BB 32 B1 68 00         B    48    				ld (scratch_pad+3),a
0029BF 21 CE 61 00         B    49    				ld hl,output_line
0029C3 E5                  B    50    				push hl
0029C4 ED5B B0 68 00       B    51    				ld de,(scratch_pad+2)
0029C9 CD CA 10 00         B    52    				call hexword_to_ascii
0029CD ED5B AE 68 00       B    53    				ld de,(scratch_pad)
0029D2 CD CA 10 00         B    54    				call hexword_to_ascii
0029D6 3600                B    55    				ld (hl),0
0029D8 E1                  B    56    				pop hl
0029D9 0607                B    57    				ld b,7							0029DB CD 82 10 00         B    58    				call os_skip_leading_ascii_zero
0029DF CD 5A 0F 00         B    59    os_dpl			call os_print_string
0029E3 CD 02 14 00         B    60    				call os_new_line
                           B    61    				
0029E7 CD E8 4F 00         B    62    				call fs_goto_next_dir_entry
0029EB 20 09               B    63    				jr nz,os_dlr					0029ED CD 00 12 00         B    64    				call os_count_lines
0029F1 3E79                B    65    				ld a,'y'
0029F3 B8                  B    66    				cp b
0029F4 28 96               B    67    				jr z,os_dfllp
                           B    68    				
0029F6 CD 34 2A 00         B    69    os_dlr			call div_line					0029FA CD 77 49 00         B    70    				call fs_calc_free_space
0029FE D8                  B    71    				ret c	
0029FF CD 0D 2A 00         B    72    				call show_hlde_decimal
002A03 21 47 2A 00         B    73    				ld hl,kb_spare_txt
002A07 CD 5A 0F 00         B    74    				call os_print_string
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  95


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\dir.asm
002A0B AF                  B    75    				xor a
002A0C C9                  B    76    				ret
                           B    77    
                           B    78    ;----------------------------------------------
                           B    79    
002A0D                     B    80    show_hlde_decimal
                           B    81    
002A0D CD 95 12 00         B    82    				call os_hex_to_decimal			002A11 11070000            B    83    				ld de,7
002A15 19                  B    84    				add hl,de						002A16 43                  B    85    				ld b,e
002A17 11 CE 61 00         B    86    				ld de,output_line
002A1B D5                  B    87    				push de
002A1C 7E                  B    88    dec2strlp		ld a,(hl)						002A1D B7                  B    89    				or a
002A1E 20 03               B    90    				jr nz,foundlnz
002A20 2B                  B    91    				dec hl
002A21 10 F9               B    92    				djnz dec2strlp
002A23 04                  B    93    foundlnz		inc b
002A24 7E                  B    94    ndecchar		ld a,(hl)						002A25 C630                B    95    				add a,030h
002A27 12                  B    96    				ld (de),a
002A28 13                  B    97    				inc de
002A29 2B                  B    98    				dec hl
002A2A 10 F8               B    99    				djnz ndecchar
002A2C AF                  B   100    				xor a
002A2D 12                  B   101    				ld (de),a
002A2E E1                  B   102    				pop hl							002A2F CD 5A 0F 00         B   103    				call os_print_string
002A33 C9                  B   104    				ret
                           B   105    
                           B   106    ;----------------------------------------------
                           B   107    			
002A34 0E2D                B   108    div_line		ld c,'-'
002A36 0613                B   109    				ld b,19
002A38 CD 92 1A 00         B   110    				call os_print_multiple_chars
002A3C CD 02 14 00         B   111    				call os_new_line
002A40 C9                  B   112    				ret
                           B   113    
                           B   114    ;----------------------------------------------
                           B   115    
002A41 5B444952 5D00       B   116    dir_txt			db '[DIR]',0
                           B   117    
002A47 204B4220 46726565   B   118    kb_spare_txt	db ' KB Free',11,0
002A4F 0B00 
                           B   119    
                           B   120    ;----------------------------------------------
                           B   121    	
                           B     0    	include 'commands\f.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"f" fill memory command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  96


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\f.asm
                           B     4    
002A51                     B     5    os_cmd_f			
                           B     6    
002A51 CD A2 1C 00         B     7    				call get_start_and_end			                           B     8    			
002A55 CD CB 1C 00         B     9    				call hexword_or_bust			002A59 CA 5D 16 00         B    10    				jp z,os_no_args_error			002A5D 7B                  B    11    				ld a,e
002A5E 32 7A 61 00         B    12    				ld (fillbyte),a
                           B    13    					
002A62 CD 90 1C 00         B    14    				call test_mem_range
002A66 DA 59 16 00         B    15    				jp c,os_range_error				                           B    16    					
002A6A 3A 7A 61 00         B    17    				ld a,(fillbyte)
002A6E 77                  B    18    f_floop			ld (hl),a
002A6F EDA1                B    19    				cpi								002A71 EA 6E 2A 00         B    20    				jp pe,f_floop
                           B    21    					
002A75 3E20                B    22    				ld a,020h						002A77 B7                  B    23    				or a
002A78 C9                  B    24    				ret
                           B    25    
                           B    26    ;----------------------------------------------
                           B     0    	include 'commands\format.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"format" - format disk command. V0.05 - ADL mo
                           B     3    ;
                           B     4    ; The internal format routine is limited to for
                           B     5    ; No partition data is allowed.
                           B     6    ;----------------------------------------------
                           B     7    
                           B     8    
002A79                     B     9    os_cmd_format
                           B    10    
002A79 7E                  B    11    				ld a,(hl)						002A7A B7                  B    12    				or a
002A7B 20 04               B    13    				jr nz,fgotargs					002A7D 3E1F                B    14    				ld a,01fh						002A7F B7                  B    15    				or a
002A80 C9                  B    16    				ret
                           B    17    			
002A81 E5                  B    18    fgotargs		push hl
002A82 3E01                B    19    				ld a,1							002A84 CD 77 18 00         B    20    				call os_mount_volumes			002A88 E1                  B    21    				pop hl
                           B    22    				
002A89 11 B6 54 00         B    23    				ld de,fs_sought_filename
002A8D CD 9D 53 00         B    24    				call fs_clear_filename			002A91 E5                  B    25    				push hl							002A92 CD E3 0F 00         B    26    				call os_next_arg
002A96 20 04               B    27    				jr nz,fgotlab
002A98 21 C9 2B 00         B    28    				ld hl,default_label
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  97


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\format.asm
002A9C 060B                B    29    fgotlab			ld b,11
002A9E CD 48 12 00         B    30    				call os_copy_ascii_run
002AA2 E1                  B    31    				pop hl
                           B    32    				
002AA3 3A 85 5F 00         B    33    				ld a,(device_count)				002AA7 B7                  B    34    				or a
002AA8 28 25               B    35    				jr z,fno_dev
002AAA 47                  B    36    				ld b,a
002AAB 0E00                B    37    				ld c,0							002AAD DD21 2F 60 00       B    38    				ld ix,host_device_hardware_info
002AB2 DD7E00              B    39    fdev_lp			ld a,(ix)						002AB5 CD 7C 1A 00         B    40    				call locate_driver_base			002AB9 D5                  B    41    				push de
002ABA FDE1                B    42    				pop iy
002ABC ED130C              B    43    				lea de,iy+0ch					002ABF C5                  B    44    				push bc
002AC0 0607                B    45    				ld b,7
002AC2 CD 29 12 00         B    46    				call os_compare_strings
002AC6 C1                  B    47    				pop bc
002AC7 28 0A               B    48    				jr z,format_dev
002AC9 ED3220              B    49    				lea ix,ix+20h					002ACC 0C                  B    50    				inc c
002ACD 10 E3               B    51    				djnz fdev_lp
                           B    52    			
002ACF 3ED0                B    53    fno_dev			ld a,0d0h						002AD1 B7                  B    54    				or a
002AD2 C9                  B    55    				ret
                           B    56    				
                           B    57    			
                           B    58    				
                           B    59    ;----- FORMAT A DEVICE (USE ENTIRE CAPACITY (TR
                           B    60    			
                           B    61    			
002AD3 C5                  B    62    format_dev		push bc
002AD4 CD 02 14 00         B    63    				call os_new_line
002AD8 21 9A 2B 00         B    64    				ld hl,form_dev_warn1
002ADC CD 39 14 00         B    65    				call os_show_packed_text
002AE0 C1                  B    66    				pop bc
                           B    67    				
002AE1 79                  B    68    				ld a,c							002AE2 C630                B    69    				add a,030h
002AE4 32 91 5F 00         B    70    				ld (dev_txt+3),a
002AE8 21 8E 5F 00         B    71    				ld hl,dev_txt	
002AEC CD 5A 0F 00         B    72    				call os_print_string			                           B    73    				
002AF0 79                  B    74    				ld a,c
002AF1 CD F0 1A 00         B    75    				call dev_to_driver_lookup		002AF5 E5                  B    76    				push hl
002AF6 32 84 5F 00         B    77    				ld (current_driver),a
002AFA CD 63 1A 00         B    78    				call show_dev_driver_name		002AFE DDE1                B    79    				pop ix
002B00 DD1701              B    80    				ld de,(ix+1)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  98


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\format.asm
002B03 FD21 76 61 00       B    81    				ld iy,xrr_temp
002B08 FD1F00              B    82    				ld (iy),de						002B0B FDCB023E            B    83    				srl (iy+2)
002B0F FDCB011E            B    84    				rr (iy+1)
002B13 FDCB001E            B    85    				rr (iy+0)						002B17 FD1700              B    86    				ld de,(iy)						002B1A CD 0D 2A 00         B    87    				call show_hlde_decimal			002B1E 21 D4 2B 00         B    88    				ld hl,kb_txt
002B22 CD 5A 0F 00         B    89    				call os_print_string
002B26 ED2205              B    90    				lea hl,ix+5		
002B29 CD 5A 0F 00         B    91    				call os_print_string			002B2D 3E29                B    92    				ld a,')'
002B2F CD 9C 0F 00         B    93    				call os_print_char
                           B    94    				
002B33 CD 02 14 00         B    95    				call os_new_line
002B37 CD 02 14 00         B    96    				call os_new_line
002B3B 21 A1 2B 00         B    97    				ld hl,form_dev_warn2
002B3F CD 91 2B 00         B    98    				call show_packed_text_and_cr
002B43 CD 79 2B 00         B    99    				call confirm_yes
002B47 20 28               B   100    				jr nz,ab_form
                           B   101    				
002B49 21 AB 2B 00         B   102    				ld hl,formatting_txt			002B4D CD 5A 0F 00         B   103    				call os_print_string
                           B   104    				
002B51 CD F5 46 00         B   105    				call fs_format_device_command
002B55 38 10               B   106    				jr c,form_err
002B57 B7                  B   107    				or a
002B58 20 0D               B   108    				jr nz,form_err
                           B   109    			
002B5A 21 BB 2B 00         B   110    				ld hl,ok_txt					002B5E CD 5A 0F 00         B   111    				call os_print_string
                           B   112    				
002B62 CD 6E 32 00         B   113    f_end			call os_cmd_remount				002B66 C9                  B   114    				ret
                           B   115    			
002B67                     B   116    form_err
002B67 21 C0 2B 00         B   117    				ld hl,ferr_txt
002B6B CD 5A 0F 00         B   118    				call os_print_string
002B6F 18 F1               B   119    				jr f_end
                           B   120    				
                           B   121    				
                           B   122    ;----------------------------------------------
                           B   123    				
                           B   124    				
002B71 CD 02 14 00         B   125    ab_form			call os_new_line
002B75 3E24                B   126    				ld a,024h						002B77 B7                  B   127    				or a
002B78 C9                  B   128    				ret
                           B   129    				
002B79                     B   130    confirm_yes
                           B   131    			
002B79 21 AE 68 00         B   132    				ld hl,scratch_pad
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page:  99


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\format.asm
002B7D 1E03                B   133    				ld e,3
002B7F E5                  B   134    				push hl
002B80 CD 2E 11 00         B   135    				call os_user_input
002B84 E1                  B   136    				pop hl
002B85 C0                  B   137    				ret nz
002B86 0603                B   138    				ld b,3
002B88 11 47 5A 00         B   139    				ld de,yes_txt+1
002B8C CD 29 12 00         B   140    				call os_compare_strings
002B90 C9                  B   141    				ret
                           B   142    			
                           B   143    			
002B91                     B   144    show_packed_text_and_cr
                           B   145    			
002B91 CD 39 14 00         B   146    				call os_show_packed_text
002B95 CD 02 14 00         B   147    				call os_new_line
002B99 C9                  B   148    				ret
                           B   149    			
                           B   150    ;----------------------------------------------
                           B   151    
002B9A                     B   152    form_dev_warn1
                           B   153    
002B9A 27283640 979700     B   154    				db 027h,028h,036h,040h,097h,097
                           B   155    
002BA1                     B   156    form_dev_warn2
                           B   157    
002BA1 52467E98 9EA2A3A5   B   158    				db 052h,046h,07eh,098h,09eh,0a2
002BA9 9700 
                           B   159    
002BAB                     B   160    formatting_txt
                           B   161    
002BAB 0B0B466F 726D6174   B   162    				db 11,11,'Formatting.. ',0
002BB3 74696E67 2E2E2000 
                           B   163    
002BBB 4F4B0B0B 00         B   164    ok_txt			db 'OK',11,11,0
                           B   165    
002BC0 4552524F 52210B0B   B   166    ferr_txt		db 'ERROR!',11,11,0
002BC8 00 
                           B   167    
002BC9                     B   168    default_label	
                           B   169    
002BC9 50524F53 455F4449   B   170    				db 'PROSE_DISK',0
002BD1 534B00 
                           B   171    
002BD4 4B422028 00         B   172    kb_txt			db 'KB (',0
                           B   173    
                           B   174    ;----------------------------------------------
                           B   175    
       000068B2            B   176    fs_drive_sel_cache		equ scratch_pad+4		                           B   177    
                           B   178    ;----------------------------------------------
                           B   179    
                           B     0    	include 'commands\h.asm'
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 100


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\h.asm
                           B     1    ;----------------------------------------------
                           B     2    ;"H" - Hunt in memory command V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
002BD9 CD A2 1C 00         B     5    os_cmd_h		call get_start_and_end			002BDD 22 73 61 00         B     6    				ld (find_hexstringascii),hl		                           B     7    
002BE1 CD 90 1C 00         B     8    				call test_mem_range
002BE5 DA 59 16 00         B     9    				jp c,os_range_error				                           B    10    			
002BE9 AF                  B    11    				xor a
002BEA 32 86 2C 00         B    12    				ld (h_ascii_mode),a
                           B    13    				
002BEE 2A 73 61 00         B    14    				ld hl,(find_hexstringascii)
002BF2 0600                B    15    				ld b,0
002BF4 7E                  B    16    h_lfascii		ld a,(hl)						002BF5 B7                  B    17    				or a
002BF6 28 28               B    18    				jr z,h_no_text					002BF8 FE22                B    19    				cp 022h
002BFA 28 03               B    20    				jr z,h_found_quote
002BFC 23                  B    21    				inc hl
002BFD 18 F5               B    22    				jr h_lfascii
002BFF 23                  B    23    h_found_quote	inc hl
002C00 22 73 61 00         B    24    				ld (find_hexstringascii),hl
002C04 7E                  B    25    h_fasc_len		ld a,(hl)
002C05 B7                  B    26    				or a
002C06 CA 5D 16 00         B    27    				jp z,os_no_args_error			002C0A FE22                B    28    				cp 022h
002C0C 28 04               B    29    				jr z,h_startas
002C0E 23                  B    30    				inc hl
002C0F 04                  B    31    				inc b
002C10 18 F2               B    32    				jr h_fasc_len
                           B    33    
002C12 78                  B    34    h_startas		ld a,b
002C13 B7                  B    35    				or a
002C14 CA 5D 16 00         B    36    				jp z,os_no_args_error			002C18 3E01                B    37    				ld a,1
002C1A 32 86 2C 00         B    38    				ld (h_ascii_mode),a
002C1E 18 16               B    39    				jr h_start_search
                           B    40    						
                           B    41    
002C20 2A 73 61 00         B    42    h_no_text		ld hl,(find_hexstringascii)
002C24 0600                B    43    				ld b,0							002C26 CD CB 1C 00         B    44    cntfbyts		call hexword_or_bust			002C2A 28 04               B    45    				jr z,gthexstr
002C2C 04                  B    46    				inc b
002C2D 23                  B    47    				inc hl
002C2E 18 F6               B    48    				jr cntfbyts
002C30 78                  B    49    gthexstr		ld a,b
002C31 B7                  B    50    				or a
002C32 CA 5D 16 00         B    51    				jp z,os_no_args_error	
                           B    52    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 101


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\h.asm
                           B    53    
002C36                     B    54    h_start_search
                           B    55    	
002C36 DD2A 67 61 00       B    56    				ld ix,(cmdop_start_address)		002C3B DDE5                B    57    fndloop1		push ix
002C3D FDE1                B    58    				pop iy
002C3F 48                  B    59    				ld c,b							002C40 2A 73 61 00         B    60    				ld hl,(find_hexstringascii)
002C44 3A 86 2C 00         B    61    fcmloop			ld a,(h_ascii_mode)
002C48 B7                  B    62    				or a
002C49 28 08               B    63    				jr z,h_hex
002C4B FD7E00              B    64    				ld a,(iy)
002C4E BE                  B    65    				cp (hl)
002C4F 20 23               B    66    				jr nz,nofmatch
002C51 18 0A               B    67    				jr h_matched
002C53 CD D9 10 00         B    68    h_hex			call ascii_to_hexword			002C57 FD7E00              B    69    				ld a,(iy)
002C5A BB                  B    70    				cp e
002C5B 20 17               B    71    				jr nz,nofmatch
002C5D FD23                B    72    h_matched		inc iy
002C5F 23                  B    73    				inc hl
002C60 0D                  B    74    				dec c
002C61 20 E1               B    75    				jr nz,fcmloop
                           B    76    			
002C63 DDE5                B    77    				push ix							002C65 D1                  B    78    				pop de							002C66 DDE5                B    79    				push ix
002C68 C5                  B    80    				push bc
002C69 CD 3A 13 00         B    81    				call os_show_hex_address
002C6D CD 02 14 00         B    82    				call os_new_line
002C71 C1                  B    83    				pop bc
002C72 DDE1                B    84    				pop ix
                           B    85    				
002C74 DDE5                B    86    nofmatch		push ix
002C76 DD23                B    87    				inc ix
002C78 D1                  B    88    				pop de
002C79 2A 6A 61 00         B    89    				ld hl,(cmdop_end_address)
002C7D AF                  B    90    				xor a
002C7E ED52                B    91    				sbc hl,de
002C80 20 B9               B    92    				jr nz,fndloop1
                           B    93    							
002C82 3E20                B    94    				ld a,020h						002C84 B7                  B    95    				or a
002C85 C9                  B    96    				ret
                           B    97    			
                           B    98    ;----------------------------------------------
                           B    99    
002C86 00                  B   100    h_ascii_mode	db 0
                           B   101    
                           B   102    ;----------------------------------------------
                           B     0    	include 'commands\help.asm'
                           B     1    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 102


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\help.asm
                           B     2    ;"?" - List commands. V0.03 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
002C87                     B     5    os_cmd_help		
002C87 AF                  B     6    				xor a
002C88 32 63 61 00         B     7    				ld (os_linecount),a
                           B     8    				
002C8C 21 87 5B 00         B     9    				ld hl,packed_help1
002C90 CD 39 14 00         B    10    show_page		call os_show_packed_text
002C94 E5                  B    11    				push hl
002C95 CD 02 14 00         B    12    				call os_new_line
002C99 E1                  B    13    				pop hl
002C9A 23                  B    14    				inc hl						;sk
002C9B 7E                  B    15    				ld a,(hl)
002C9C FEFF                B    16    				cp 0ffh						;la
002C9E 28 09               B    17    				jr z,last_help_page
                           B    18    				
002CA0 CD 00 12 00         B    19    				call os_count_lines
002CA4 78                  B    20    				ld a,b
002CA5 FE79                B    21    				cp 'y'
002CA7 28 E7               B    22    				jr z,show_page
                           B    23    
002CA9                     B    24    last_help_page
002CA9 AF                  B    25    				xor a
002CAA C9                  B    26    				ret	
                           B    27    	
                           B    28    ;----------------------------------------------
                           B    29    	
                           B     0    	include 'commands\gtr.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;">" for write ascii bytes to memory command. V
                           B     3    ;----------------------------------------------
                           B     4    
002CAB                     B     5    os_cmd_gtr
                           B     6    
002CAB CD CB 1C 00         B     7    				call hexword_or_bust			002CAF CA 45 16 00         B     8    				jp z,os_no_start_addr
002CB3 23                  B     9    fndquot1		inc hl
002CB4 7E                  B    10    				ld a,(hl)
002CB5 B7                  B    11    				or a
002CB6 CA 5D 16 00         B    12    				jp z,os_no_args_error
002CBA FE22                B    13    				cp 022h							002CBC 20 F5               B    14    				jr nz,fndquot1
002CBE 23                  B    15    				inc hl
002CBF E5                  B    16    				push hl
002CC0 7E                  B    17    fndquot2		ld a,(hl)
002CC1 23                  B    18    				inc hl
002CC2 B7                  B    19    				or a
002CC3 28 15               B    20    				jr z,noquot2
002CC5 FE22                B    21    				cp 022h							002CC7 20 F7               B    22    				jr nz,fndquot2
002CC9 E1                  B    23    				pop hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 103


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\gtr.asm
                           B    24    					
002CCA 7E                  B    25    wmbalp			ld a,(hl)						002CCB FE22                B    26    				cp 022h
002CCD 28 09               B    27    				jr z,os_gtrdn					002CCF FE7D                B    28    				cp 07dh
002CD1 28 01               B    29    				jr z,skpnasc
002CD3 12                  B    30    				ld (de),a
002CD4 13                  B    31    skpnasc			inc de
002CD5 23                  B    32    				inc hl
002CD6 18 F2               B    33    				jr wmbalp
002CD8 AF                  B    34    os_gtrdn		xor a
002CD9 C9                  B    35    				ret	
                           B    36    				
002CDA E1                  B    37    noquot2			pop hl							002CDB 3E12                B    38    				ld a,012h
002CDD B7                  B    39    				or a
002CDE C9                  B    40    				ret
                           B    41    
                           B    42    ;----------------------------------------------
                           B     0    	include 'commands\lb.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"lb" - Load binary file command. V0.03 - ADL m
                           B     3    ;----------------------------------------------
                           B     4    
002CDF                     B     5    os_cmd_lb
                           B     6    	
002CDF CD D2 16 00         B     7    				call os_check_volume_format	
002CE3 C0                  B     8    				ret nz
                           B     9    				
002CE4 CD 4D 29 00         B    10    				call filename_or_bust			002CE8 CD 65 16 00         B    11    				call os_find_file				002CEC C0                  B    12    				ret nz
002CED ED53 B1 68 00       B    13    				ld (filesize_cache),de			002CF2 2A B6 60 00         B    14    				ld hl,(default_load_addr)
002CF6 22 AE 68 00         B    15    				ld (data_load_addr),hl			                           B    16    				
002CFA 2A 20 62 00         B    17    				ld hl,(os_args_loc)
002CFE CD E3 0F 00         B    18    				call os_next_arg
                           B    19    
002D02 CD CB 1C 00         B    20    				call hexword_or_bust			002D06 28 05               B    21    				jr z,os_lbnao					002D08 ED53 AE 68 00       B    22    				ld (data_load_addr),de
                           B    23    
002D0D ED5B AE 68 00       B    24    os_lbnao		ld de,(data_load_addr)			002D12 2A C3 60 00         B    25    				ld hl,(sysram_os_highest)		002D16 2B                  B    26    				dec hl
002D17 AF                  B    27    				xor a
002D18 ED52                B    28    				sbc hl,de
002D1A 38 04               B    29    				jr c,os_lbprok
002D1C 3E26                B    30    				ld a,026h						002D1E B7                  B    31    				or a
002D1F C9                  B    32    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 104


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\lb.asm
                           B    33    				
002D20 2A AE 68 00         B    34    os_lbprok		ld hl,(data_load_addr)			002D24 CD 94 16 00         B    35    				call os_read_bytes_from_file
002D28 C0                  B    36    				ret nz
                           B    37    			
002D29                     B    38    report_bytes_loaded
                           B    39    
002D29 21 5B 56 00         B    40    				ld hl,os_hex_prefix_txt			002D2D CD 5A 0F 00         B    41    				call os_print_string			                           B    42    				
002D31 11 B3 68 00         B    43    				ld de,filesize_cache+2			002D35 21 CE 61 00         B    44    				ld hl,output_line
002D39 0603                B    45    				ld b,3
002D3B CD 97 10 00         B    46    				call n_hexbytes_to_ascii
002D3F 3600                B    47    				ld (hl),0	
002D41 0605                B    48    				ld b,5							002D43 CD 70 13 00         B    49    				call os_print_output_line_skip_
                           B    50    				
002D47 21 25 5D 00         B    51    				ld hl,bytes_loaded_msg			002D4B CD 39 14 00         B    52    				call os_show_packed_text
                           B    53    				
002D4F 21 BA 56 00         B    54    				ld hl,to_txt					002D53 CD 5A 0F 00         B    55    				call os_print_string
                           B    56    
002D57 21 5B 56 00         B    57    				ld hl,os_hex_prefix_txt			002D5B CD 5A 0F 00         B    58    				call os_print_string	
                           B    59    
002D5F ED5B AE 68 00       B    60    				ld de,(data_load_addr)			002D64 CD 3A 13 00         B    61    				call os_show_hex_address
                           B    62    
002D68 CD 02 14 00         B    63    				call os_new_line
002D6C AF                  B    64    				xor a
002D6D C9                  B    65    				ret
                           B    66    				
                           B    67    ;----------------------------------------------
                           B    68    
       000068AE            B    69    data_load_addr	equ scratch_pad
       000068B1            B    70    filesize_cache	equ scratch_pad+3
                           B    71    
                           B    72    ;----------------------------------------------
                           B     0    	include 'commands\m.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'m' - Show memory as hex bytes command. V0.02 
                           B     3    ;----------------------------------------------
                           B     4    
       00000010            B     5    bytes_per_line	equ 16
                           B     6    
002D6E CD CB 1C 00         B     7    os_cmd_m		call hexword_or_bust			002D72 28 05               B     8    				jr z,m_no_hex					002D74 ED53 64 61 00       B     9    				ld (mem_mon_addr),de
                           B    10    				
002D79 0610                B    11    m_no_hex		ld b,16							Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 105


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\m.asm
002D7B C5                  B    12    smbllp			push bc							                           B    13    				
002D7C 21 B5 2D 00         B    14    				ld hl,colon_cmd_prefix			002D80 CD 5A 0F 00         B    15    				call os_print_string
002D84 ED5B 64 61 00       B    16    				ld de,(mem_mon_addr)
002D89 CD 3A 13 00         B    17    				call os_show_hex_address
                           B    18    
002D8D 21 CE 61 00         B    19    				ld hl,output_line
002D91 0610                B    20    				ld b,bytes_per_line				002D93 3620                B    21    mmbllp			ld (hl),' '
002D95 23                  B    22    				inc hl
002D96 1A                  B    23    				ld a,(de)	
002D97 CD A5 10 00         B    24    				call hexbyte_to_ascii
002D9B 13                  B    25    				inc de
002D9C 10 F5               B    26    				djnz mmbllp
                           B    27    
002D9E ED53 64 61 00       B    28    				ld (mem_mon_addr),de
002DA3 360B                B    29    				ld (hl),11
002DA5 23                  B    30    				inc hl
002DA6 3600                B    31    				ld (hl),0
002DA8 21 CE 61 00         B    32    				ld hl,output_line
002DAC CD 5A 0F 00         B    33    				call os_print_string
002DB0 C1                  B    34    				pop bc
002DB1 10 C8               B    35    				djnz smbllp
                           B    36    				
002DB3 AF                  B    37    				xor a
002DB4 C9                  B    38    				ret
                           B    39    
                           B    40    ;----------------------------------------------
                           B    41    
002DB5 3A2000              B    42    colon_cmd_prefix	db ': ',0
                           B    43    
                           B    44    ;----------------------------------------------
                           B     0    	include 'commands\md.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"md" - Make dir command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
002DB8                     B     5    os_cmd_md
                           B     6    	
002DB8 CD D2 16 00         B     7    				call os_check_volume_format	
002DBC C0                  B     8    				ret nz
                           B     9    			
002DBD CD 4D 29 00         B    10    				call filename_or_bust
                           B    11    				
002DC1 C3 12 17 00         B    12    				jp os_make_dir			;no poi
                           B    13    				
                           B    14    
                           B    15    ;----------------------------------------------
                           B     0    	include 'commands\r.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'R' - show CPU register values saved on return
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 106


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\r.asm
                           B     3    ;----------------------------------------------
                           B     4    
002DC5                     B     5    os_cmd_r	
002DC5 DD21 CF 60 00       B     6    				ld ix,store_a1					002DCA 21 6F 2E 00         B     7    				ld hl,register_txt
002DCE CD 5A 0F 00         B     8    rcmdloop2		call os_print_string
002DD2 7E                  B     9    rcmdloop		ld a,(hl)
002DD3 FE01                B    10    				cp 1
002DD5 28 0B               B    11    				jr z,showbyte
002DD7 FE02                B    12    				cp 2
002DD9 28 15               B    13    				jr z,showword16
002DDB FE03                B    14    				cp 3
002DDD 28 2E               B    15    				jr z,showaddr
002DDF 23                  B    16    				inc hl
002DE0 18 F0               B    17    				jr rcmdloop
                           B    18    				
002DE2 DD7E00              B    19    showbyte		ld a,(ix)
002DE5 DD23                B    20    				inc ix
002DE7 DDE5                B    21    				push ix
002DE9 E5                  B    22    				push hl
002DEA CD 4E 13 00         B    23    				call os_show_hex_byte
002DEE 18 2A               B    24    				jr showreg
                           B    25    
002DF0 DD7E01              B    26    showword16		ld a,(ix+1)
002DF3 DDE5                B    27    				push ix
002DF5 E5                  B    28    				push hl
002DF6 CD 4E 13 00         B    29    				call os_show_hex_byte
002DFA E1                  B    30    				pop hl
002DFB DDE1                B    31    				pop ix
002DFD DD7E00              B    32    				ld a,(ix)
002E00 DD23                B    33    				inc ix
002E02 DD23                B    34    				inc ix
002E04 DDE5                B    35    				push ix
002E06 E5                  B    36    				push hl
002E07 CD 4E 13 00         B    37    				call os_show_hex_byte
002E0B 18 0D               B    38    				jr showreg
                           B    39    
002E0D DD1700              B    40    showaddr		ld de,(ix)
002E10 ED3203              B    41    				lea ix,ix+3
002E13 DDE5                B    42    				push ix
002E15 E5                  B    43    				push hl
002E16 CD 3A 13 00         B    44    				call os_show_hex_address
002E1A E1                  B    45    showreg			pop hl
002E1B DDE1                B    46    				pop ix
002E1D 23                  B    47    				inc hl
002E1E 7E                  B    48    				ld a,(hl)
002E1F B7                  B    49    				or a
002E20 20 AC               B    50    				jr nz,rcmdloop2
                           B    51    			
002E22 CD 02 14 00         B    52    				call os_new_line				002E26 21 D3 2E 00         B    53    				ld hl,flag_txt
002E2A CD 22 13 00         B    54    				call os_copy_to_output_line
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 107


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\r.asm
002E2E 21 D2 61 00         B    55    				ld hl,output_line+4
002E32 01050000            B    56    				ld bc,5
002E36 3A F2 60 00         B    57    				ld a,(store_f)
002E3A CB77                B    58    				bit 6,a							002E3C 28 02               B    59    				jr z,zfzero
002E3E 3631                B    60    				ld (hl),'1'
002E40 09                  B    61    zfzero			add hl,bc
002E41 CB47                B    62    				bit 0,a							002E43 28 02               B    63    				jr z,cfzero
002E45 3631                B    64    				ld (hl),'1'
002E47 09                  B    65    cfzero			add hl,bc
002E48 CB7F                B    66    				bit 7,a							002E4A 28 02               B    67    				jr z,sfzero
002E4C 364D                B    68    				ld (hl),'M'
002E4E 09                  B    69    sfzero			add hl,bc
002E4F CB57                B    70    				bit 2,a							002E51 28 02               B    71    				jr z,pfzero
002E53 364F                B    72    				ld (hl),'O'
002E55 09                  B    73    pfzero			add hl,bc
002E56 23                  B    74    				inc hl
002E57 CB67                B    75    				bit 4,a							002E59 28 02               B    76    				jr z,iffzero
002E5B 3631                B    77    				ld (hl),'1'
002E5D                     B    78    iffzero			
002E5D 01060000            B    79    				ld bc,6
002E61 09                  B    80    				add hl,bc
002E62 3A F3 60 00         B    81    				ld a,(store_adl)
002E66 C630                B    82    				add a,30h
002E68 77                  B    83    				ld (hl),a
002E69 CD 65 13 00         B    84    				call os_print_output_line
002E6D AF                  B    85    				xor a
002E6E C9                  B    86    				ret
                           B    87    
                           B    88    ;----------------------------------------------
                           B    89    	
                           B    90    
002E6F 20413D00 01         B    91    register_txt		db ' A=',0,1
002E74 20204243 3D0003     B    92    					db '  BC=',0,3
002E7B 20204445 3D0003     B    93    					db '  DE=',0,3
002E82 2020484C 3D0003     B    94    					db '  HL=',0,3
                           B    95    					
002E89 0B                  B    96    					db 11
                           B    97    
002E8A 27413D00 01         B    98    					db 027h,'A=',0,1
002E8F 20274243 3D0003     B    99    					db ' ',027h,'BC=',0,3
002E96 20274445 3D0003     B   100    					db ' ',027h,'DE=',0,3
002E9D 2027484C 3D0003     B   101    					db ' ',027h,'HL=',0,3
                           B   102    					
002EA4 0B                  B   103    					db 11
                           B   104    
002EA5 2049583D 0003       B   105    					db ' IX=',0,3
002EAB 2049593D 0003       B   106    					db ' IY=',0,3
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 108


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\r.asm
                           B   107    					
002EB1 0B                  B   108    					db 11
                           B   109    					
002EB2 2050433D 0003       B   110    					db ' PC=',0,3
002EB8 204C5350 3D0003     B   111    					db ' LSP=',0,3
002EBF 20535350 3D0002     B   112    					db ' SSP=',0,2
                           B   113    					
002EC6 0B                  B   114    					db 11
                           B   115    					
002EC7 204D4241 53453D00   B   116    					db ' MBASE=',0,1,0,0
002ECF 010000 
                           B   117    					
002ED2 0B                  B   118    					db 11
                           B   119    
002ED3 205A463D 30204346   B   120    flag_txt			db ' ZF=0 CF=0 SF=P PV=E IF
002EDB 3D302053 463D5020 
002EE3 50563D45 20494646 
002EEB 3D302041 444C3D30 
002EF3 0B0B00 
                           B   121    		
                           B   122    ;----------------------------------------------
                           B     0    	include 'commands\rd.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"RD" - Remove directory command. V0.02 - ADL m
                           B     3    ;----------------------------------------------
                           B     4    
002EF6                     B     5    os_cmd_rd
                           B     6    
002EF6 CD D2 16 00         B     7    				call os_check_volume_format	
002EFA C0                  B     8    				ret nz
                           B     9    				
002EFB CD 4D 29 00         B    10    				call filename_or_bust
                           B    11    			
002EFF C3 7C 17 00         B    12    				jp os_delete_dir		;no poi
                           B    13    
                           B    14    
                           B    15    ;----------------------------------------------
                           B     0    	include 'commands\rn.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"rn" - Rename command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
002F03                     B     5    os_cmd_rn
                           B     6    	
002F03 CD D2 16 00         B     7    				call os_check_volume_format	
002F07 C0                  B     8    				ret nz
                           B     9    			
002F08 CD 4D 29 00         B    10    				call filename_or_bust
002F0C E5                  B    11    				push hl
002F0D D1                  B    12    				pop de
002F0E CD E3 0F 00         B    13    				call os_next_arg
002F12 7E                  B    14    				ld a,(hl)						Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 109


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rn.asm
002F13 B7                  B    15    				or a
002F14 20 04               B    16    				jr nz,rn_grfn
002F16 3E1F                B    17    				ld a,01fh						002F18 B7                  B    18    				or a
002F19 C9                  B    19    				ret
                           B    20    
002F1A EB                  B    21    rn_grfn			ex de,hl
002F1B C3 66 17 00         B    22    				jp os_rename_file				                           B    23    		
                           B    24    ;----------------------------------------------
                           B     0    	include 'commands\sb.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'SB' - Save binary file command. V0.02 - ADL m
                           B     3    ;----------------------------------------------
                           B     4    
002F1F                     B     5    os_cmd_sb
                           B     6    	
002F1F CD D2 16 00         B     7    				call os_check_volume_format		002F23 C0                  B     8    				ret nz
                           B     9    					
002F24 CD 4D 29 00         B    10    				call filename_or_bust			002F28 22 B4 68 00         B    11    				ld (sb_save_name_addr),hl
                           B    12    				
002F2C 2A 20 62 00         B    13    				ld hl,(os_args_loc)
002F30 CD E3 0F 00         B    14    				call os_next_arg
002F34 CD CB 1C 00         B    15    				call hexword_or_bust			002F38 CA 45 16 00         B    16    				jp z,os_no_start_addr			002F3C ED53 AE 68 00       B    17    				ld (sb_save_addr),de
                           B    18    				
002F41 CD CB 1C 00         B    19    				call hexword_or_bust			002F45 CA 49 16 00         B    20    				jp z,os_no_filesize
002F49 ED53 B1 68 00       B    21    				ld (sb_save_length),de
                           B    22    				
002F4E 2A B4 68 00         B    23    				ld hl,(sb_save_name_addr)		002F52 CD A4 16 00         B    24    				call os_create_file
002F56 28 18               B    25    				jr z,os_sfapp
002F58 FEC9                B    26    				cp 0c9h							002F5A C0                  B    27    				ret nz			
002F5B 21 4E 5B 00         B    28    				ld hl,save_append_msg			002F5F CD 39 14 00         B    29    				call os_show_packed_text
002F63 CD 12 44 00         B    30    				call os_wait_key_press
002F67 3E79                B    31    				ld a,'y'
002F69 B8                  B    32    				cp b
002F6A 28 04               B    33    				jr z,os_sfapp
002F6C 3E2C                B    34    				ld a,2ch						002F6E B7                  B    35    				or a
002F6F C9                  B    36    				ret
                           B    37    			
002F70 2A B4 68 00         B    38    os_sfapp		ld hl,(sb_save_name_addr)		002F74 ED5B AE 68 00       B    39    				ld de,(sb_save_addr)			002F79 ED4B B1 68 00       B    40    				ld bc,(sb_save_length)			002F7E CD BA 16 00         B    41    				call os_write_bytes_to_file
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 110


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\sb.asm
002F82 C0                  B    42    				ret nz	
                           B    43    				
002F83 3E20                B    44    				ld a,020h						002F85 B7                  B    45    				or a
002F86 C9                  B    46    				ret
                           B    47    			
                           B    48    				
                           B    49    ;----------------------------------------------
                           B    50    
       000068AE            B    51    sb_save_addr		equ scratch_pad
       000068B1            B    52    sb_save_length		equ scratch_pad+3
       000068B4            B    53    sb_save_name_addr	equ scratch_pad+6
                           B    54    
                           B    55    ;----------------------------------------------
                           B     0    	include 'commands\rx.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"RX" - Receive binary file via serial port com
                           B     3    ;----------------------------------------------
                           B     4    
       00000080            B     5    buffer_blocks			 equ 128				       000069AE            B     6    buffer_addr				 equ os_max_addr		       000068AE            B     7    rx_buffer_ptr			 equ scratch_pad
       000068B1            B     8    serial_file_length_cache equ scratch_pad+3
                           B     9    
                           B    10    
002F87 7E                  B    11    os_cmd_rx		ld a,(hl)						002F88 B7                  B    12    				or a
002F89 CA 3D 16 00         B    13    				jp z,os_no_fn_error
                           B    14    				
002F8D 3E3E                B    15    				ld a,'>'						002F8F BE                  B    16    				cp (hl)
002F90 C2 53 30 00         B    17    				jp nz,rx_nrs
002F94 23                  B    18    				inc hl
002F95 3E20                B    19    				ld a,' '
002F97 BE                  B    20    				cp (hl)
002F98 2B                  B    21    				dec hl
002F99 C2 53 30 00         B    22    				jp nz,rx_nrs
                           B    23    				
002F9D CD D2 16 00         B    24    				call os_check_volume_format		002FA1 C0                  B    25    				ret nz		
                           B    26    				
002FA2 112A0000            B    27    				ld de,02ah						002FA6 ED53 40 5F 00       B    28    				ld (serial_filename),de			002FAB CD 57 31 00         B    29    				call rx_get_header
002FAF C0                  B    30    				ret nz
002FB0 CD E5 45 00         B    31    				call s_holdack					                           B    32    				
002FB4 21 54 5F 00         B    33    				ld hl,serial_fileheader			002FB8 CD A4 16 00         B    34    				call os_create_file
002FBC C2 32 30 00         B    35    				jp nz,rxwtd_fail				                           B    36    				
002FC0 21 6E 5B 00         B    37    				ld hl,ser_recsave_msg
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 111


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
002FC4 CD 39 14 00         B    38    				call os_show_packed_text
                           B    39    				
002FC8 2A 64 5F 00         B    40    rx_rnblk		ld hl,(serial_fileheader+16)	002FCC 22 B1 68 00         B    41    				ld (serial_file_length_cache),h
002FD0 21 AE 69 00         B    42    				ld hl,buffer_addr
002FD4 22 AE 68 00         B    43    				ld (rx_buffer_ptr),hl
002FD8 0680                B    44    				ld b,buffer_blocks				                           B    45    				
002FDA CD CD 45 00         B    46    rx_lnb			call s_goodack
002FDE CD 77 45 00         B    47    				call s_getblock
002FE2 28 0F               B    48    				jr z,rxtd_blok
                           B    49    
002FE4 F5                  B    50    				push af							002FE5 CD DE 45 00         B    51    				call s_badack					002FE9 21 54 5F 00         B    52    				ld hl,serial_fileheader			002FED CD 3A 17 00         B    53    				call os_erase_file
002FF1 F1                  B    54    				pop af
002FF2 C9                  B    55    				ret
                           B    56    
002FF3 CD E5 45 00         B    57    rxtd_blok		call s_holdack
                           B    58    				
002FF7 21 AE 66 00         B    59    				ld hl,sector_buffer
002FFB ED5B AE 68 00       B    60    				ld de,(rx_buffer_ptr)
003000 01000100            B    61    				ld bc,256
003004 EDB0                B    62    				ldir
003006 ED53 AE 68 00       B    63    				ld (rx_buffer_ptr),de
                           B    64    				
00300B 2A 64 5F 00         B    65    				ld hl,(serial_fileheader+16)
00300F 11000100            B    66    				ld de,256
003013 AF                  B    67    				xor a
003014 ED52                B    68    				sbc hl,de
003016 22 64 5F 00         B    69    				ld (serial_fileheader+16),hl
00301A 28 1D               B    70    				jr z,rx_lbr
00301C 38 1B               B    71    				jr c,rx_lbr
00301E 10 BA               B    72    				djnz rx_lnb
                           B    73    
003020 01008000            B    74    				ld bc,buffer_blocks*256
003024 11 AE 69 00         B    75    				ld de,buffer_addr
003028 21 54 5F 00         B    76    				ld hl,serial_fileheader
00302C CD BA 16 00         B    77    				call os_write_bytes_to_file
003030 28 96               B    78    				jr z,rx_rnblk
003032 F5                  B    79    rxwtd_fail		push af
003033 CD DE 45 00         B    80    				call s_badack
003037 F1                  B    81    				pop af
003038 C9                  B    82    				ret
                           B    83    				
003039 CD CD 45 00         B    84    rx_lbr			call s_goodack
00303D ED4B B1 68 00       B    85    				ld bc,(serial_file_length_cache
003042 11 AE 69 00         B    86    				ld de,buffer_addr
003046 21 54 5F 00         B    87    				ld hl,serial_fileheader
00304A CD BA 16 00         B    88    				call os_write_bytes_to_file
00304E C0                  B    89    				ret nz	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 112


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
                           B    90    				
00304F 3E20                B    91    rxtd_done		ld a,020h						003051 B7                  B    92    				or a
003052 C9                  B    93    				ret
                           B    94    
                           B    95    				
                           B    96    
                           B    97    				
003053 3E21                B    98    rx_nrs			ld a,'!'						003055 BE                  B    99    				cp (hl)							003056 C2 01 31 00         B   100    				jr nz,notrxe
00305A 23                  B   101    				inc hl
00305B 3E20                B   102    				ld a,' '
00305D BE                  B   103    				cp (hl)
00305E 2B                  B   104    				dec hl
00305F C2 01 31 00         B   105    				jr nz,notrxe
003063 112A0000            B   106    				ld de,02ah						003067 ED53 40 5F 00       B   107    				ld (serial_filename),de			00306C CD 57 31 00         B   108    				call rx_get_header
003070 C0                  B   109    				ret nz
003071 21 64 5B 00         B   110    				ld hl,ser_rec2_msg
003075 CD 39 14 00         B   111    				call os_show_packed_text
003079 CD CD 45 00         B   112    				call s_goodack
00307D 3E01                B   113    				ld a,1							00307F 32 53 5F 00         B   114    				ld (serial_timeout),a
003083 CD 77 45 00         B   115    				call s_getblock					003087 28 07               B   116    				jr z,rxe_fblok
003089 F5                  B   117    rxe_badblock	push af							00308A CD DE 45 00         B   118    				call s_badack					00308E F1                  B   119    				pop af
00308F C9                  B   120    				ret
                           B   121    	
003090 2A B0 66 00         B   122    rxe_fblok		ld hl,(sector_buffer+2)
003094 1150524F            B   123    				ld de,04f5250h					003098 AF                  B   124    				xor a
003099 28 04               B   125    				jr z,rxe_ok
00309B 3E1A                B   126    				ld a,1ah						00309D B7                  B   127    				or a
00309E C9                  B   128    				ret
00309F 2A B3 66 00         B   129    rxe_ok			ld hl,(sector_buffer+5)			0030A3 22 37 5F 00         B   130    				ld (serial_ez80_address),hl
0030A7 01000100            B   131    				ld bc,256						0030AB DD21 54 5F 00       B   132    				ld ix,serial_fileheader
0030B0 AF                  B   133    				xor a
0030B1 DDB612              B   134    				or (ix+18)						0030B4 20 0A               B   135    				jr nz,mtones
0030B6 DDB611              B   136    				or a,(ix+17)					0030B9 20 05               B   137    				jr nz,mtones
0030BB 0600                B   138    				ld b,0
0030BD DD4E10              B   139    				ld c,(ix+16)					0030C0 21 AE 66 00         B   140    mtones			ld hl,sector_buffer				0030C4 ED5B 37 5F 00       B   141    				ld de,(serial_ez80_address)		Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 113


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
0030C9 EDB0                B   142    				ldir
                           B   143    				
0030CB D5                  B   144    				push de
0030CC CD CD 45 00         B   145    				call s_goodack		
0030D0 DDE1                B   146    				pop ix							0030D2 2A 64 5F 00         B   147    				ld hl,(serial_fileheader+16)	0030D6 11000100            B   148    				ld de,256
0030DA AF                  B   149    				xor a
0030DB ED52                B   150    				sbc hl,de						0030DD 28 18               B   151    				jr z,rxe_done
0030DF 38 16               B   152    				jr c,rxe_done
0030E1 EB                  B   153    				ex de,hl
0030E2 ED53 64 5F 00       B   154    				ld (serial_fileheader+16),de	0030E7 DD2A 37 5F 00       B   155    				ld ix,(serial_ez80_address)
0030EC 01000100            B   156    				ld bc,256
0030F0 DD09                B   157    				add ix,bc
0030F2 CD 35 45 00         B   158    				call s_gbloop					0030F6 C0                  B   159    				ret nz
0030F7 E1                  B   160    rxe_done		pop hl							0030F8 CD 84 3D 00         B   161    				call enable_button_nmi			0030FC 2A 37 5F 00         B   162    				ld hl,(serial_ez80_address)
003100 E9                  B   163    				jp (hl)							                           B   164    				
                           B   165    				
                           B   166    
003101 CD 9E 31 00         B   167    notrxe			call clear_serial_filename
                           B   168    				
003105 0610                B   169    				ld b,16							003107 11 40 5F 00         B   170    				ld de,serial_filename
00310B CD 48 12 00         B   171    				call os_copy_ascii_run			00310F 79                  B   172    				ld a,c
003110 32 52 5F 00         B   173    				ld (serial_fn_length),a
003114 CD EF 0F 00         B   174    				call os_scan_for_space
                           B   175    				
003118 CD CB 1C 00         B   176    				call hexword_or_bust			00311C CA 45 16 00         B   177    				jp z,os_no_start_addr			003120 ED53 AE 68 00       B   178    				ld (data_load_addr),de			003125 2A C3 60 00         B   179    				ld hl,(sysram_os_highest)		003129 2B                  B   180    				dec hl
00312A AF                  B   181    				xor a
00312B ED52                B   182    				sbc hl,de
00312D 38 04               B   183    				jr c,os_prok
00312F 3E26                B   184    				ld a,026h						003131 B7                  B   185    				or a
003132 C9                  B   186    				ret
                           B   187    
003133 CD 57 31 00         B   188    os_prok			call rx_get_header
003137 C0                  B   189    				ret nz
                           B   190    
003138 21 64 5B 00         B   191    				ld hl,ser_rec2_msg
00313C CD 39 14 00         B   192    				call os_show_packed_text
                           B   193    	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 114


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
003140 2A AE 68 00         B   194    				ld hl,(data_load_addr)			003144 CD 23 45 00         B   195    				call serial_receive_file
003148 C0                  B   196    				ret nz							                           B   197    
003149 ED5B 64 5F 00       B   198    				ld de,(serial_fileheader+16)	00314E ED53 B1 68 00       B   199    				ld (filesize_cache),de
003153 C3 29 2D 00         B   200    				jp report_bytes_loaded			                           B   201    				
                           B   202    ;----------------------------------------------
                           B   203    
003157                     B   204    rx_get_header
003157 21 60 5B 00         B   205    				ld hl,ser_rec_msg
00315B CD 39 14 00         B   206    				call os_show_packed_text
                           B   207    				
00315F 3E00                B   208    				ld a,0
003161 32 75 5F 00         B   209    				ld (anim_wait_count),a			003165 3A 75 5F 00         B   210    get_hdr_loop	ld a,(anim_wait_count)
003169 3C                  B   211    				inc a
00316A 47                  B   212    				ld b,a
00316B FE06                B   213    				cp 6
00316D 20 07               B   214    				jr nz,notsix
00316F 0E20                B   215    				ld c,' '
003171 0605                B   216    				ld b,5
003173 AF                  B   217    				xor a
003174 18 02               B   218    				jr mcharset
003176 0E2E                B   219    notsix			ld c,'.'
003178 32 75 5F 00         B   220    mcharset		ld (anim_wait_count),a
00317C CD 92 1A 00         B   221    				call os_print_multiple_chars
003180 CD A3 0F 00         B   222    				call home_cursor
                           B   223    				
003184 21 40 5F 00         B   224    				ld hl,serial_filename			003188 3E01                B   225    				ld a,1							00318A CD 88 44 00         B   226    				call serial_get_header
00318E C8                  B   227    				ret z
00318F FE83                B   228    				cp 083h							003191 C0                  B   229    				ret nz
003192 CD 6D 44 00         B   230    				call os_get_key_press
003196 FE76                B   231    				cp 076h
003198 20 CB               B   232    				jr nz,get_hdr_loop
00319A 3E80                B   233    				ld a,080h						00319C B7                  B   234    notsto			or a
00319D C9                  B   235    				ret								                           B   236    							
                           B   237    
                           B   238    ;----------------------------------------------
                           B   239    
00319E                     B   240    clear_serial_filename
                           B   241    
00319E E5                  B   242    				push hl							00319F 21 40 5F 00         B   243    				ld hl,serial_filename
0031A3 01100000            B   244    				ld bc,16
0031A7 AF                  B   245    				xor a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 115


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
0031A8 CD C6 15 00         B   246    				call os_bchl_memfill
0031AC E1                  B   247    				pop hl
0031AD C9                  B   248    				ret
                           B   249    
                           B   250    ;----------------------------------------------
                           B     0    	include 'commands\tx.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'TX' - Transmit binary file via serial port co
                           B     3    ;----------------------------------------------
                           B     4    
0031AE 7E                  B     5    os_cmd_tx		ld a,(hl)						0031AF B7                  B     6    				or a
0031B0 CA 3D 16 00         B     7    				jp z,os_no_fn_error
                           B     8    			
0031B4 E5                  B     9    				push hl							0031B5 21 40 5F 00         B    10    				ld hl,serial_filename
0031B9 01100000            B    11    				ld bc,16
0031BD AF                  B    12    				xor a
0031BE CD C6 15 00         B    13    				call os_bchl_memfill
0031C2 E1                  B    14    				pop hl
                           B    15    			
0031C3 0610                B    16    				ld b,16							0031C5 11 40 5F 00         B    17    				ld de,serial_filename
0031C9 CD 48 12 00         B    18    				call os_copy_ascii_run			0031CD 79                  B    19    				ld a,c
0031CE 32 52 5F 00         B    20    				ld (serial_fn_length),a
0031D2 CD EF 0F 00         B    21    				call os_scan_for_space
                           B    22    							
0031D6 CD CB 1C 00         B    23    				call hexword_or_bust			0031DA CA 45 16 00         B    24    				jp z,os_no_start_addr			0031DE ED53 37 5F 00       B    25    				ld (serial_ez80_address),de
                           B    26    			
0031E3 CD CB 1C 00         B    27    				call hexword_or_bust			0031E7 CA 49 16 00         B    28    				jp z,os_no_filesize
0031EB ED53 3A 5F 00       B    29    				ld (serial_file_length),de
0031F0 21000000            B    30    				ld hl,0
0031F4 3E07                B    31    				ld a,07h						0031F6 B7                  B    32    				or a
0031F7 ED5A                B    33    				adc hl,de
0031F9 28 1D               B    34    				jr z,s_error
                           B    35    				
0031FB 21 69 5B 00         B    36    				ld hl,ser_send_msg
0031FF CD 39 14 00         B    37    				call os_show_packed_text
                           B    38    			
003203 ED5B 3A 5F 00       B    39    				ld de,(serial_file_length)
003208 21 40 5F 00         B    40    				ld hl,serial_filename			00320C DD2A 37 5F 00       B    41    				ld ix,(serial_ez80_address)
003211 CD EC 45 00         B    42    				call serial_send_file
003215 C0                  B    43    				ret nz			
                           B    44    			
003216 3E20                B    45    				ld a,020h						003218 B7                  B    46    s_error			or a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 116


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\tx.asm
003219 C9                  B    47    				ret
                           B    48    				
                           B    49    			
                           B    50    ;----------------------------------------------
                           B     0    	include 'commands\t.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'T' - Show memory as ascii text command. V0.02
                           B     3    ;----------------------------------------------
                           B     4    
00321A CD CB 1C 00         B     5    os_cmd_t		call hexword_or_bust			00321E 28 05               B     6    				jr z,t_no_hex					003220 ED53 64 61 00       B     7    				ld (mem_mon_addr),de
                           B     8    							
003225 0610                B     9    t_no_hex		ld b,16
003227 C5                  B    10    smaalp			push bc
                           B    11    				
003228 21 6B 32 00         B    12    				ld hl,gtr_cmd_prefix			00322C CD 5A 0F 00         B    13    				call os_print_string
003230 ED5B 64 61 00       B    14    				ld de,(mem_mon_addr)
003235 CD 3A 13 00         B    15    				call os_show_hex_address
                           B    16    
003239 21 CE 61 00         B    17    				ld hl,output_line
00323D 3620                B    18    				ld (hl),' '
00323F 23                  B    19    				inc hl
003240 3622                B    20    				ld (hl),022h
003242 0610                B    21    				ld b,16
003244 23                  B    22    mabllp			inc hl
003245 1A                  B    23    				ld a,(de)	
003246 FE20                B    24    				cp 020h
003248 38 04               B    25    				jr c,chchar
00324A FE7F                B    26    				cp 07fh
00324C 38 02               B    27    				jr c,nchchar
00324E 3E7C                B    28    chchar			ld a,07ch
003250 77                  B    29    nchchar			ld (hl),a
003251 13                  B    30    				inc de
003252 10 F0               B    31    				djnz mabllp
                           B    32    
003254 ED53 64 61 00       B    33    				ld (mem_mon_addr),de
003259 23                  B    34    				inc hl
00325A 3622                B    35    				ld (hl),022h
00325C 23                  B    36    				inc hl
00325D 360B                B    37    				ld (hl),11
00325F 23                  B    38    				inc hl
003260 3600                B    39    				ld (hl),0
003262 CD 65 13 00         B    40    				call os_print_output_line
003266 C1                  B    41    				pop bc
003267 10 BE               B    42    				djnz smaalp
003269 AF                  B    43    				xor a
00326A C9                  B    44    				ret
                           B    45    	
                           B    46    ;----------------------------------------------
                           B    47    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 117


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\t.asm
00326B 3E2000              B    48    gtr_cmd_prefix	db '> ',0
                           B    49    
                           B    50    ;----------------------------------------------
                           B     0    	include 'commands\mount.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; "MOUNT" = Re-mount and show drives v0.02 - AD
                           B     3    ;----------------------------------------------
                           B     4    
00326E                     B     5    os_cmd_remount
                           B     6    
00326E 3E00                B     7    				ld a,0							003270 CD 77 18 00         B     8    				call os_mount_volumes
003274 CD 02 14 00         B     9    				call os_new_line
003278 AF                  B    10    				xor a
003279 C9                  B    11    				ret
                           B    12    
                           B    13    ;----------------------------------------------
                           B    14    	
                           B     0    	include 'commands\vers.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; "Vers" = Show OS / Hardware version v0.02 - A
                           B     3    ;----------------------------------------------
                           B     4    
00327A                     B     5    os_cmd_vers
                           B     6    
00327A 21 5D 56 00         B     7    				ld hl,os_version_txt
00327E CD 5A 0F 00         B     8    				call os_print_string
                           B     9    			
003282 CD BC 40 00         B    10    				call hwsc_get_version
003286 D5                  B    11    				push de
003287 EB                  B    12    				ex de,hl
003288 CD 59 13 00         B    13    				call os_show_hex_word
                           B    14    				
00328C 21 80 56 00         B    15    				ld hl,fwd_slash_txt
003290 CD 5A 0F 00         B    16    				call os_print_string
                           B    17    				
003294 21 6B 56 00         B    18    				ld hl,hw_version_txt
003298 CD 5A 0F 00         B    19    				call os_print_string
00329C D1                  B    20    				pop de
00329D CD 59 13 00         B    21    				call os_show_hex_word
                           B    22    				
0032A1 CD 02 14 00         B    23    				call os_new_line
0032A5 CD 02 14 00         B    24    				call os_new_line	
0032A9 AF                  B    25    				xor a
0032AA C9                  B    26    				ret
                           B    27    	
                           B    28    ;----------------------------------------------
                           B    29    	
                           B     0    	include 'commands\exec.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"exec" - execute script V0.04 - ADL mode
                           B     3    ;
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 118


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\exec.asm
                           B     4    ; Notes: Changing drives within a script not su
                           B     5    ;        Scripts cannot launch scripts as this 
                           B     6    ;		 Abort with CRTL + C
                           B     7    ;
                           B     8    ;        Supports: IF [CONDITION] jumps. Syntax
                           B     9    ;        
                           B    10    ;          "IF ENVAR = STRING LABEL" (or IF ENV
                           B    11    ;          (goto LABEL must be declared as [LAB
                           B    12    ;----------------------------------------------
                           B    13    
       00000010            B    14    max_if_chars		equ 16 ;(string size for en
                           B    15    
       00000000            B    16    scr_in_script		equ 0
       00000001            B    17    scr_find_new_line	equ 1
       00000002            B    18    scr_if_condition	equ 2
       00000003            B    19    scr_end				equ 3
                           B    20    
                           B    21    
0032AB 21 35 62 00         B    22    os_cmd_exec		ld hl,script_flags				0032AF CB46                B    23    				bit scr_in_script,(hl)
0032B1 C2 42 34 00         B    24    				jp nz,script_error
0032B5 E5                  B    25    				push hl
0032B6 CD BE 32 00         B    26    				call do_script
0032BA E1                  B    27    				pop hl
0032BB CB86                B    28    				res scr_in_script,(hl)
0032BD C9                  B    29    				ret
                           B    30    				
0032BE CBC6                B    31    do_script		set scr_in_script,(hl)
                           B    32    			
0032C0 2A 20 62 00         B    33    				ld hl,(os_args_loc)				0032C4 11 4D 61 00         B    34    				ld de,script_fn					0032C8 060D                B    35    				ld b,13
0032CA CD 48 12 00         B    36    				call os_copy_ascii_run
0032CE AF                  B    37    				xor a
0032CF 12                  B    38    				ld (de),a
                           B    39    				
0032D0 CD AA 1A 00         B    40    				call fs_get_dir_cluster			0032D4 ED53 2C 62 00       B    41    				ld (script_dir),de
                           B    42    				
0032D9 CD D2 16 00         B    43    				call os_check_volume_format		0032DD C0                  B    44    				ret nz
                           B    45    				
0032DE CD 0E 34 00         B    46    				call new_script
                           B    47    
                           B    48    ;----------------------------------------------
                           B    49    
                           B    50    
0032E2 3A 92 62 00         B    51    scrp_loop		ld a,(key_mod_flags)			0032E6 E602                B    52    				and 2
0032E8 28 12               B    53    				jr z,no_quit_script	
0032EA CD 6D 44 00         B    54    				call os_get_key_press
0032EE FE21                B    55    				cp 021h							Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 119


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\exec.asm
0032F0 20 0A               B    56    				jr nz,no_quit_script
                           B    57    
0032F2 21 7D 5B 00         B    58    				ld hl,script_aborted_msg
0032F6 CD 39 14 00         B    59    				call os_show_packed_text
0032FA AF                  B    60    				xor a							0032FB C9                  B    61    				ret
                           B    62    					
                           B    63    
0032FC CD 21 34 00         B    64    no_quit_script	call open_script				003300 C0                  B    65    				ret nz
003301 CD 4C 34 00         B    66    				call read_script				003305 C0                  B    67    				ret nz
003306 21 35 62 00         B    68    				ld hl,script_flags				00330A CB5E                B    69    				bit scr_end,(hl)
00330C 28 02               B    70    				jr z,scr_to_do
00330E AF                  B    71    scr_done		xor a
00330F C9                  B    72    				ret
                           B    73    				
003310 21 7C 61 00         B    74    scr_to_do		ld hl,commandstring				003314 7E                  B    75    				ld a,(hl)
003315 FE5B                B    76    				cp '['
003317 28 1C               B    77    				jr z,exec_scr_next
                           B    78    
003319 11 C5 56 00         B    79    				ld de,if_command_txt			00331D 0603                B    80    				ld b,3
00331F CD 29 12 00         B    81    				call os_compare_strings
003323 28 18               B    82    				jr z,do_exec_if
                           B    83    				
003325 11 C8 56 00         B    84    				ld de,end_command_txt			003329 0604                B    85    				ld b,4
00332B CD 29 12 00         B    86    				call os_compare_strings
00332F 28 DD               B    87    				jr z,scr_done
                           B    88    			
003331 CD 7F 0C 00         B    89    				call os_parse_cmd_chk_ps		                           B    90    				
003335 21 35 62 00         B    91    exec_scr_next	ld hl,script_flags
003339 CBCE                B    92    				set scr_find_new_line,(hl)
00333B 18 A5               B    93    				jr scrp_loop
                           B    94    	
                           B    95    ;----------------------------------------------
                           B    96    
                           B    97    ; Handle "IF" instructions in the format:
                           B    98    
                           B    99    ; "IF ENVAR = VALUE LABLE"
                           B   100    ; "IF ENVAR <> VALUE LABLE"
                           B   101    ;  (LABEL must be declared at start of a script
                           B   102    ;  square brackets ([label]) with no other data
                           B   103    
00333D 21 7E 61 00         B   104    do_exec_if		ld hl,commandstring+2			003341 CD F8 0F 00         B   105    				call os_scan_for_non_space
003345 CA 42 34 00         B   106    				jr z,script_error				003349 11 36 62 00         B   107    				ld de,if_name_txt
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 120


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\exec.asm
00334D 0610                B   108    				ld b,max_if_chars
00334F CD 48 12 00         B   109    				call os_copy_ascii_run			003353 AF                  B   110    				xor a
003354 12                  B   111    				ld (de),a
                           B   112    				
003355 CD F8 0F 00         B   113    				call os_scan_for_non_space		003359 CA 42 34 00         B   114    				jr z,script_error
00335D DD21 35 62 00       B   115    				ld ix,script_flags
003362 DDCB0096            B   116    				res scr_if_condition,(ix)
003366 7E                  B   117    				ld a,(hl)
003367 FE3D                B   118    				cp '='
003369 28 04               B   119    				jr z,if_equals
00336B DDCB00D6            B   120    				set scr_if_condition,(ix)		                           B   121    
00336F CD EF 0F 00         B   122    if_equals		call os_scan_for_space			003373 CD F8 0F 00         B   123    				call os_scan_for_non_space		003377 CA 42 34 00         B   124    				jr z,script_error
00337B 11 48 62 00         B   125    				ld de,if_value_txt				00337F 0610                B   126    				ld b,max_if_chars
003381 CD 48 12 00         B   127    				call os_copy_ascii_run
003385 AF                  B   128    				xor a
003386 12                  B   129    				ld (de),a
                           B   130    				
003387 CD F8 0F 00         B   131    				call os_scan_for_non_space
00338B CA 42 34 00         B   132    				jr z,script_error
00338F 11 5A 62 00         B   133    				ld de,if_label_txt				003393 0610                B   134    				ld b,max_if_chars
003395 CD 48 12 00         B   135    				call os_copy_ascii_run			003399 AF                  B   136    				xor a
00339A 12                  B   137    				ld (de),a						                           B   138    								
00339B 21 36 62 00         B   139    				ld hl,if_name_txt				00339F CD 7A 1B 00         B   140    				call os_get_envar				0033A3 C2 35 33 00         B   141    				jp nz,exec_scr_next				                           B   142    								
0033A7 21 48 62 00         B   143    				ld hl,if_value_txt
0033AB DD21 35 62 00       B   144    				ld ix,script_flags
0033B0 DDCB0056            B   145    				bit scr_if_condition,(ix)
0033B4 20 0A               B   146    				jr nz,if_cond_diff
0033B6 CD 29 12 00         B   147    				call os_compare_strings			0033BA C2 35 33 00         B   148    				jp nz,exec_scr_next				0033BE 18 08               B   149    				jr if_cond_met
0033C0 CD 29 12 00         B   150    if_cond_diff	call os_compare_strings			0033C4 CA 35 33 00         B   151    				jp z,exec_scr_next				                           B   152    
0033C8 CD 0E 34 00         B   153    if_cond_met		call new_script					                           B   154    
0033CC CD 21 34 00         B   155    find_if_label	call open_script				0033D0 C0                  B   156    				ret nz
                           B   157    
0033D1 CD 4C 34 00         B   158    				call read_script
0033D5 C0                  B   159    				ret nz
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 121


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\exec.asm
0033D6 21 35 62 00         B   160    				ld hl,script_flags
0033DA CB5E                B   161    				bit scr_end,(hl)
0033DC C2 0E 33 00         B   162    				jp nz,scr_done
                           B   163    				
0033E0 21 7C 61 00         B   164    				ld hl,commandstring				0033E4 7E                  B   165    				ld a,(hl)
0033E5 FE5B                B   166    				cp '['
0033E7 20 1D               B   167    				jr nz,not_a_label				                           B   168    				
0033E9 23                  B   169    if_find_csb		inc hl
0033EA 7E                  B   170    				ld a,(hl)
0033EB B7                  B   171    				or a
0033EC 28 18               B   172    				jr z,not_a_label				0033EE FE5D                B   173    				cp ']'							0033F0 20 F7               B   174    				jr nz,if_find_csb
0033F2 3600                B   175    				ld (hl),0						0033F4 21 7D 61 00         B   176    				ld hl,commandstring+1
0033F8 11 5A 62 00         B   177    				ld de,if_label_txt				0033FC 0610                B   178    				ld b,max_if_chars
0033FE CD 29 12 00         B   179    				call os_compare_strings
003402 CA 35 33 00         B   180    				jp z,exec_scr_next				                           B   181    
003406 21 35 62 00         B   182    not_a_label		ld hl,script_flags
00340A CBCE                B   183    				set scr_find_new_line,(hl)		00340C 18 BE               B   184    				jr find_if_label
                           B   185    											
                           B   186    ;----------------------------------------------
                           B   187    
00340E E5                  B   188    new_script		push hl
00340F 21000000            B   189    				ld hl,0
003413 22 2F 62 00         B   190    				ld (script_file_offset),hl		003417 21 35 62 00         B   191    				ld hl,script_flags
00341B CB8E                B   192    				res scr_find_new_line,(hl)		00341D CB9E                B   193    				res scr_end,(hl)
00341F E1                  B   194    				pop hl
003420 C9                  B   195    				ret
                           B   196    								
                           B   197    ;----------------------------------------------
                           B   198    
003421 CD AA 1A 00         B   199    open_script		call fs_get_dir_cluster			003425 D5                  B   200    				push de
003426 ED5B 2C 62 00       B   201    				ld de,(script_dir)				00342B CD B6 1A 00         B   202    				call fs_update_dir_cluster
                           B   203    				
00342F 21 4D 61 00         B   204    				ld hl,script_fn					003433 CD 65 16 00         B   205    				call os_find_file				003437 ED53 32 62 00       B   206    				ld (script_length),de			00343C D1                  B   207    				pop de
00343D C0                  B   208    				ret nz
00343E 79                  B   209    				ld a,c							00343F B7                  B   210    				or a
003440 28 04               B   211    				jr z,scr_flok
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 122


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\exec.asm
                           B   212    				
003442 3E8C                B   213    script_error	ld a,08ch
003444 B7                  B   214    				or a
003445 C9                  B   215    				ret
                           B   216    				
003446 CD B6 1A 00         B   217    scr_flok		call fs_update_dir_cluster		00344A AF                  B   218    				xor a
00344B C9                  B   219    				ret
                           B   220    				
                           B   221    ;----------------------------------------------
                           B   222    
                           B   223    
00344C 21 7C 61 00         B   224    read_script		ld hl,commandstring				003450 01500000            B   225    				ld bc,max_buffer_chars			003454 3E20                B   226    				ld a,32
003456 CD C6 15 00         B   227    				call os_bchl_memfill
                           B   228    				
00345A 11500000            B   229    				ld de,max_buffer_chars			00345E CD 76 16 00         B   230    				call os_set_load_length
                           B   231    				
003462 AF                  B   232    				xor a
003463 2A 32 62 00         B   233    				ld hl,(script_length)
003467 ED5B 2F 62 00       B   234    				ld de,(script_file_offset)		00346C 37                  B   235    				scf
00346D ED52                B   236    				sbc hl,de						00346F 30 08               B   237    				jr nc,not_eoscr					003471 21 35 62 00         B   238    				ld hl,script_flags
003475 CBDE                B   239    				set scr_end,(hl)				003477 AF                  B   240    				xor a
003478 C9                  B   241    				ret
003479 CD 7E 16 00         B   242    not_eoscr		call os_set_file_pointer
                           B   243    
00347D 21 7C 61 00         B   244    				ld hl,commandstring				003481 CD 94 16 00         B   245    				call os_read_bytes_from_file
003485 B7                  B   246    				or a			
003486 28 03               B   247    				jr z,scr_load_ok
003488 FECC                B   248    				cp 0cch							00348A C0                  B   249    				ret nz							                           B   250    
00348B 21 35 62 00         B   251    scr_load_ok		ld hl,script_flags
00348F CB4E                B   252    				bit scr_find_new_line,(hl)		003491 20 17               B   253    				jr nz,scr_fnl					                           B   254    
003493 21 7C 61 00         B   255    				ld hl,commandstring				003497 0650                B   256    				ld b,max_buffer_chars
003499 7E                  B   257    scr_fcr			ld a,(hl)
00349A FE20                B   258    				cp 32
00349C 38 05               B   259    				jr c,scr_gotclcr
00349E 23                  B   260    				inc hl
00349F 10 F8               B   261    				djnz scr_fcr
0034A1 AF                  B   262    				xor a
0034A2 C9                  B   263    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 123


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\exec.asm
0034A3 3620                B   264    scr_gotclcr		ld (hl),32						0034A5 23                  B   265    				inc hl
0034A6 10 FB               B   266    				djnz scr_gotclcr
0034A8 AF                  B   267    				xor a
0034A9 C9                  B   268    				ret
                           B   269    
0034AA FD2A 2F 62 00       B   270    scr_fnl			ld iy,(script_file_offset)
0034AF 21 7C 61 00         B   271    				ld hl,commandstring	
0034B3 7E                  B   272    scr_find_cr		ld a,(hl)						0034B4 B7                  B   273    				or a
0034B5 20 07               B   274    				jr nz,scr_neocl					0034B7 FD22 2F 62 00       B   275    scr_eocl		ld (script_file_offset),iy
0034BC 18 8E               B   276    				jr read_script				
0034BE FE20                B   277    scr_neocl		cp 20h							0034C0 38 05               B   278    				jr c,scr_got_cr
0034C2 23                  B   279    				inc hl
0034C3 FD23                B   280    				inc iy
0034C5 18 EC               B   281    				jr scr_find_cr
                           B   282    				
0034C7 7E                  B   283    scr_got_cr		ld a,(hl)
0034C8 B7                  B   284    				or a							0034C9 28 EC               B   285    				jr z,scr_eocl					0034CB FE20                B   286    				cp 20h
0034CD 30 05               B   287    				jr nc,scr_got_ch				0034CF 23                  B   288    				inc hl
0034D0 FD23                B   289    				inc iy
0034D2 18 F3               B   290    				jr scr_got_cr
                           B   291    
0034D4 FD22 2F 62 00       B   292    scr_got_ch		ld (script_file_offset),iy
0034D9 21 35 62 00         B   293    				ld hl,script_flags				0034DD CB8E                B   294    				res scr_find_new_line,(hl)
0034DF C3 4C 34 00         B   295    				jr read_script
                           B   296    
                           B   297    
                           B   298    ;----------------------------------------------
                           B   299    
                           B   300    		
                           B   301    				
                           B   302    				
                           B   303    				
                           B   304    				
                           B   305    				
                           B     0    	include 'commands\ltn.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; OS "<" Command: Update mem hex bytes and re-d
                           B     3    ;
                           B     4    ; Not currently enabled in PROSE
                           B     5    ;----------------------------------------------
                           B     6    
0034E3                     B     7    os_cmd_ltn
                           B     8    
0034E3 AF                  B     9    				xor a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 124


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\ltn.asm
0034E4 C9                  B    10    				ret
                           B    11    
                           B    12    
                           B    13    ;----------------------------------------------
                           B    14    	
                           B     0    	include 'commands\pen.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"Pen" - Change attribute v0.03 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
0034E5                     B     5    os_cmd_pen
                           B     6    	
0034E5 0612                B     7    				ld b,18							0034E7 DD21 FB 5E 00       B     8    				ld ix,current_pen
                           B     9    				
0034EC CD CB 1C 00         B    10    chpenlp			call hexword_or_bust			0034F0 28 0D               B    11    				jr z,pendone					0034F2 23                  B    12    				inc hl
0034F3 DD7300              B    13    				ld (ix),e
0034F6 DD7201              B    14    				ld (ix+1),d
0034F9 DD23                B    15    				inc ix
0034FB DD23                B    16    				inc ix
0034FD 10 ED               B    17    				djnz chpenlp	
                           B    18    				
0034FF 21 FF 5E 00         B    19    pendone			ld hl,pen_palette				003503 CD 8B 3E 00         B    20    				call hswc_set_ui_colours
003507 AF                  B    21    				xor a
003508 C9                  B    22    				ret
                           B    23    
                           B    24    ;----------------------------------------------
                           B     0    	include 'commands\palette.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"Palette" - Change attribute v0.01 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
003509                     B     5    os_cmd_palette
                           B     6    
003509 0610                B     7    				ld b,16							00350B DD21 FF 5E 00       B     8    				ld ix,pen_palette
                           B     9    				
003510 0E00                B    10    				ld c,0
003512 C5                  B    11    chcollp			push bc
003513 CD CB 1C 00         B    12    				call hexword_or_bust			003517 C1                  B    13    				pop bc
003518 28 0E               B    14    				jr z,colrdone					00351A 0C                  B    15    				inc c
00351B 23                  B    16    				inc hl
00351C DD7300              B    17    				ld (ix),e
00351F DD7201              B    18    				ld (ix+1),d
003522 DD23                B    19    				inc ix
003524 DD23                B    20    				inc ix
003526 10 EA               B    21    				djnz chcollp
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 125


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\palette.asm
                           B    22    			
003528 79                  B    23    colrdone		ld a,c
003529 B7                  B    24    				or a
00352A 20 04               B    25    				jr nz,pal_ok
00352C 3E81                B    26    				ld a,81h						00352E B7                  B    27    				or a
00352F C9                  B    28    				ret
003530 21 FF 5E 00         B    29    pal_ok			ld hl,pen_palette
003534 CD 8B 3E 00         B    30    				call hswc_set_ui_colours	
003538 AF                  B    31    				xor a
003539 C9                  B    32    				ret
                           B    33    
                           B    34    ;----------------------------------------------
                           B     0    	include 'commands\mouse.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; "Mouse" = Reset / Enable Mouse Driver v0.05 -
                           B     3    ;----------------------------------------------
                           B     4    
       00000280            B     5    window_width_pixels		equ 640
       000001E0            B     6    window_height_pixels	equ 480
                           B     7    
       00000064            B     8    default_sample_rate 	equ 100			; 100 s
       00000003            B     9    default_resolution		equ 03h			; 8 cou
       000000E6            B    10    default_scaling			equ 0e6h		; valid
                           B    11    
00353A                     B    12    os_cmd_mouse
                           B    13    
                           B    14    		
00353A CD EB 3B 00         B    15    				call disable_ms_irq
                           B    16    
00353E 21 C2 60 00         B    17    				ld hl,devices_connected
003542 CB8E                B    18    				res 1,(hl)
                           B    19    		
003544 CD 01 42 00         B    20    				call init_mouse
003548 C0                  B    21    				ret nz
                           B    22    			
003549 AF                  B    23    				xor a
00354A 32 9B 62 00         B    24    				ld (mouse_packet_index),a
00354E 32 9C 62 00         B    25    				ld (mouse_buttons),a
003552 21000000            B    26    				ld hl,0
003556 22 9D 62 00         B    27    				ld (mouse_disp_x),hl
00355A 22 A0 62 00         B    28    				ld (mouse_disp_y),hl
                           B    29    
00355E 21800200            B    30    				ld hl,window_width_pixels
003562 11E00100            B    31    				ld de,window_height_pixels
003566 CD 83 14 00         B    32    				call os_set_mouse_window
                           B    33    
00356A CD E5 3B 00         B    34    				call enable_ms_irq
                           B    35    
00356E 21 C2 60 00         B    36    				ld hl,devices_connected
003572 CBCE                B    37    				set 1,(hl)
003574 AF                  B    38    				xor a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 126


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\mouse.asm
003575 C9                  B    39    				ret				
                           B    40    				
                           B    41    ;----------------------------------------------
                           B    42    	
                           B     0    	include 'commands\vmode.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"vmode" - Change video mode - ADL mode 0.3
                           B     3    ;----------------------------------------------
                           B     4    
003576                     B     5    os_cmd_vmode
                           B     6    	
003576 CD CB 1C 00         B     7    				call hexword_or_bust			00357A 20 04               B     8    				jr nz,vm_data					00357C 3E81                B     9    				ld a,81h						00357E B7                  B    10    				or a
00357F C9                  B    11    				ret
                           B    12    
003580 7B                  B    13    vm_data			ld a,e
003581 CD 9F 15 00         B    14    				call os_set_vmode
003585 C9                  B    15    				ret
                           B    16    				
                           B    17    ;----------------------------------------------
                           B     0    	include 'commands\font.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"font" - replace font. V0.01 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
003586                     B     5    os_cmd_font
                           B     6    	
003586 CD D2 16 00         B     7    				call os_check_volume_format	
00358A C0                  B     8    				ret nz
                           B     9    				
00358B CD 4D 29 00         B    10    				call filename_or_bust			00358F 22 AE 68 00         B    11    				ld (scratch_pad),hl
                           B    12    
003593 CD AA 1A 00         B    13    				call fs_get_dir_cluster			003597 ED53 B1 68 00       B    14    				ld (scratch_pad+3),de
                           B    15    				
00359C CD 30 17 00         B    16    				call os_root_dir				0035A0 C0                  B    17    				ret nz
0035A1 21 0F 36 00         B    18    				ld hl,fonts_fn
0035A5 CD 20 17 00         B    19    				call os_change_dir
0035A9 20 1E               B    20    				jr nz,no_font
                           B    21    				
0035AB 2A AE 68 00         B    22    				ld hl,(scratch_pad)
0035AF CD 65 16 00         B    23    				call os_find_file				0035B3 20 14               B    24    				jr nz,no_font
                           B    25    				
0035B5 11000800            B    26    				ld de,800h
0035B9 CD 76 16 00         B    27    				call os_set_load_length			                           B    28    
0035BD 21000080            B    29    				ld hl,vram_a_addr				Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 127


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\font.asm
0035C1 CD 94 16 00         B    30    				call os_read_bytes_from_file
0035C5 CD D5 35 00         B    31    				call convert_font
                           B    32    				
0035C9 F5                  B    33    no_font			push af
0035CA ED5B B1 68 00       B    34    				ld de,(scratch_pad+3)			0035CF CD B6 1A 00         B    35    				call fs_update_dir_cluster
0035D3 F1                  B    36    				pop af
0035D4 C9                  B    37    				ret
                           B    38    				
                           B    39    
                           B    40    ;----------------------------------------------
                           B    41    				
0035D5 1EFF                B    42    convert_font	ld e,255						0035D7 01080000            B    43    				ld bc,8
0035DB 21F80780            B    44    				ld hl,vram_a_addr+07f8h	
0035DF CD EA 35 00         B    45    conv_allch		call char_to_font
0035E3 AF                  B    46    				xor a
0035E4 ED42                B    47    				sbc hl,bc
0035E6 1D                  B    48    				dec e
0035E7 20 F6               B    49    				jr nz,conv_allch
0035E9 C9                  B    50    				ret
                           B    51    
                           B    52    ;----------------------------------------------
                           B    53    
                           B    54    ; set E = character number
                           B    55    ;     HL = character source def address
                           B    56    
0035EA E5                  B    57    char_to_font	push hl
0035EB C5                  B    58    				push bc
0035EC 01400000            B    59    				ld bc,64
0035F0 43                  B    60    				ld b,e
0035F1 ED4C                B    61    				mlt bc
0035F3 DD210000 80         B    62    				ld ix,vram_a_addr
0035F8 DD09                B    63    				add ix,bc
0035FA CD 02 36 00         B    64    				call conv_char
0035FE C1                  B    65    				pop bc
0035FF E1                  B    66    				pop hl
003600 AF                  B    67    				xor a
003601 C9                  B    68    				ret
                           B    69    	
                           B    70    ;----------------------------------------------
                           B    71    
003602 0608                B    72    conv_char		ld b,8
003604 7E                  B    73    bfontlp1		ld a,(hl)
003605 DD7700              B    74    				ld (ix),a
003608 23                  B    75    				inc hl
003609 ED3208              B    76    				lea ix,ix+8
00360C 10 F6               B    77    				djnz bfontlp1
00360E C9                  B    78    				ret	
                           B    79    				
                           B    80    ;----------------------------------------------
                           B    81    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 128


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\font.asm
00360F 666F6E74 7300       B    82    fonts_fn		db "fonts",0
                           B    83    
                           B    84    ;----------------------------------------------
                           B     0    	include 'commands\set.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"set" - set an environment variable v0.01
                           B     3    ;
                           B     4    ; Command should be in format: "SET BLAH=SOMETH
                           B     5    ;
                           B     6    ;----------------------------------------------
                           B     7    
003615 7E                  B     8    os_cmd_set		ld a,(hl)					; i
003616 B7                  B     9    				or a
003617 28 3B               B    10    				jr z,show_envars
                           B    11    
003619 11 B1 68 00         B    12    				ld de,scratch_pad+3			; p
00361D 7E                  B    13    evsalp1			ld a,(hl)
00361E 12                  B    14    				ld (de),a
00361F B7                  B    15    				or a
003620 28 2E               B    16    				jr z,set_bad_args
003622 FE3D                B    17    				cp '='
003624 28 04               B    18    				jr z,evsadone1
003626 23                  B    19    				inc hl
003627 13                  B    20    				inc de
003628 18 F3               B    21    				jr evsalp1
00362A AF                  B    22    evsadone1		xor a
00362B 12                  B    23    				ld (de),a
00362C 13                  B    24    				inc de
00362D 23                  B    25    				inc hl
00362E ED53 AE 68 00       B    26    				ld (scratch_pad),de
                           B    27    
003633 7E                  B    28    evsalp2			ld a,(hl)
003634 12                  B    29    				ld (de),a
003635 FE20                B    30    				cp ' '
003637 28 07               B    31    				jr z,evsadone2
003639 B7                  B    32    				or a
00363A 28 14               B    33    				jr z,set_bad_args
00363C 23                  B    34    				inc hl
00363D 13                  B    35    				inc de
00363E 18 F3               B    36    				jr evsalp2
003640 AF                  B    37    evsadone2		xor a
003641 12                  B    38    				ld (de),a
                           B    39    				
003642 21 B1 68 00         B    40    				ld hl,scratch_pad+3
003646 ED5B AE 68 00       B    41    				ld de,(scratch_pad)
00364B CD BA 1B 00         B    42    				call os_set_envar
00364F C9                  B    43    				ret
                           B    44    
003650 3E82                B    45    set_bad_args	ld a,82h
003652 B7                  B    46    				or a
003653 C9                  B    47    				ret
                           B    48    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 129


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\set.asm
                           B    49    
003654 21 BF 62 00         B    50    show_envars		ld hl,envar_list
                           B    51    				
003658 7E                  B    52    show_envlp		ld a,(hl)
003659 FEFF                B    53    				cp 0ffh
00365B 28 12               B    54    				jr z,set_done
00365D E5                  B    55    				push hl
00365E CD 5A 0F 00         B    56    				call os_print_string
003662 CD 02 14 00         B    57    				call os_new_line
003666 E1                  B    58    				pop hl
                           B    59    				
003667 23                  B    60    set_fnl			inc hl
003668 7E                  B    61    				ld a,(hl)
003669 B7                  B    62    				or a
00366A 20 FB               B    63    				jr nz,set_fnl
00366C 23                  B    64    				inc hl
00366D 18 E9               B    65    				jr show_envlp
                           B    66    				
00366F AF                  B    67    set_done		xor a
003670 C9                  B    68    				ret
                           B    69    								
                           B    70    ;----------------------------------------------
                           B     0    	include 'commands\dz.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; OS "DZ" Command: Z80-mode Disassemble V0.01
                           B     3    ;----------------------------------------------
                           B     4    
003671 FD21 C6 23 00       B     5    os_cmd_dz		ld iy,prefix_bits_loc
003676 FDCB 07 86          B     6    				res adl_dis,(iy+var_adl)
00367A C3 E8 1D 00         B     7    				jp os_cmd_d_go
                           B     8    				
                           B     9    ;----------------------------------------------
                           B     0    	include 'commands\sound.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"Sound" - Play a section of Audio RAM v1.00
                           B     3    ;----------------------------------------------
                           B     4    
00367E 11FFFF00            B     5    os_cmd_sound	ld de,0ffffh					003682 ED53 11 37 00       B     6    				ld (aud_per),de
003687 3E40                B     7    				ld a,64
003689 32 13 37 00         B     8    				ld (aud_vol),a
00368D 3E11                B     9    				ld a,11h
00368F 32 14 37 00         B    10    				ld (aud_chans),a
                           B    11    				
003693 CD CB 1C 00         B    12    				call hexword_or_bust			003697 20 06               B    13    				jr nz,alocok					003699 CD CC 43 00         B    14    				call hwsc_disable_audio			00369D AF                  B    15    				xor a
00369E C9                  B    16    				ret
00369F ED53 05 37 00       B    17    alocok			ld (aud_loc),de
0036A4 ED53 0B 37 00       B    18    				ld (aud_loc_loop),de
                           B    19    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 130


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\sound.asm
0036A9 CD CB 1C 00         B    20    				call hexword_or_bust
0036AD 20 04               B    21    				jr nz,gotaudlen
0036AF 3E8D                B    22    missaudpar		ld a,8dh						0036B1 B7                  B    23    				or a
0036B2 C9                  B    24    				ret				
0036B3 ED53 08 37 00       B    25    gotaudlen		ld (aud_len),de
0036B8 ED53 0E 37 00       B    26    				ld (aud_len_loop),de
                           B    27    				
0036BD CD CB 1C 00         B    28    				call hexword_or_bust
0036C1 28 33               B    29    				jr z,play_sound
0036C3 7B                  B    30    				ld a,e
0036C4 32 11 37 00         B    31    				ld (aud_per),a
0036C8 7A                  B    32    				ld a,d
0036C9 32 12 37 00         B    33    				ld (aud_per+1),a
                           B    34    				
0036CD CD CB 1C 00         B    35    				call hexword_or_bust
0036D1 28 23               B    36    				jr z,play_sound
0036D3 7B                  B    37    				ld a,e
0036D4 32 13 37 00         B    38    				ld (aud_vol),a
                           B    39    				
0036D8 CD CB 1C 00         B    40    				call hexword_or_bust
0036DC 28 18               B    41    				jr z,play_sound
0036DE 7B                  B    42    				ld a,e
0036DF 32 14 37 00         B    43    				ld (aud_chans),a
                           B    44    				
0036E3 CD CB 1C 00         B    45    				call hexword_or_bust
0036E7 28 0D               B    46    				jr z,play_sound
0036E9 7B                  B    47    				ld a,e
0036EA B7                  B    48    				or a
0036EB 20 09               B    49    				jr nz,play_sound
0036ED 11010000            B    50    				ld de,1
0036F1 ED53 0E 37 00       B    51    				ld (aud_len_loop),de
                           B    52    				
0036F6 21 05 37 00         B    53    play_sound		ld hl,audio_structure
0036FA 3A 14 37 00         B    54    				ld a,(aud_chans)
0036FE 4F                  B    55    				ld c,a
0036FF CD 7F 43 00         B    56    				call hwsc_play_audio
003703 AF                  B    57    				xor a
003704 C9                  B    58    				ret
                           B    59    				
                           B    60    
                           B    61    ;----------------------------------------------
                           B    62    
003705                     B    63    audio_structure
                           B    64    
003705 000000              B    65    aud_loc			dw24 0			;loc
003708 000000              B    66    aud_len			dw24 0			;len
00370B 000000              B    67    aud_loc_loop	dw24 0	  	    ;loop loc
00370E 000000              B    68    aud_len_loop	dw24 0		    ;loop len
                           B    69    
003711 FFFF                B    70    aud_per			dw 0ffffh		;per
003713 40                  B    71    aud_vol			db 64			;vol
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 131


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\sound.asm
                           B    72    
003714 11                  B    73    aud_chans		db 11h			;channels to pl
                           B    74    
                           B    75    ;----------------------------------------------
                           B    76    		
                           A  3141    
003715 C9                  A  3142    os_cmd_unused	ret		; <- dummy command, sho
                           A  3143    
                           A  3144    ;----------------------------------------------
                           A  3145    
003716                     A  3146    os_get_mem_high
                           A  3147    
003716 2A C3 60 00         A  3148    		ld hl,(sysram_os_highest)
00371A ED5B C6 60 00       A  3149    		ld de,(vram_a_os_highest)
00371F ED4B C9 60 00       A  3150    		ld bc,(vram_b_os_highest)
003724 AF                  A  3151    		xor a
003725 C9                  A  3152    		ret
                           A  3153    
                           A  3154    ;----------------------------------------------
                           A  3155    
003726                     A  3156    test_amoeba_vers
                           A  3157    
003726 CD BC 40 00         A  3158    				call hwsc_get_version			00372A 21060100            A  3159    				ld hl,amoeba_version_required-1
00372E AF                  A  3160    				xor a
00372F ED52                A  3161    				sbc hl,de
003731 D8                  A  3162    				ret c
                           A  3163    				
003732 21 E1 56 00         A  3164    				ld hl,hw_warn_txt2
003736 11070100            A  3165    				ld de,amoeba_version_required
00373A CD CA 10 00         A  3166    				call hexword_to_ascii
                           A  3167    				
00373E 21004080            A  3168    				ld hl,vram_a_addr+16384			003742 222010FF            A  3169    				ld (bitmap_parameters),hl		003746 3600                A  3170    				ld (hl),0
003748 E5                  A  3171    				push hl
003749 D1                  A  3172    				pop de
00374A 13                  A  3173    				inc de
00374B 01002C01            A  3174    				ld bc,320*240
00374F EDB0                A  3175    				ldir
                           A  3176    					
003751 DD2138D1 80         A  3177    				ld ix,vram_a_addr+16384+(320*11
003756 FD21 CC 56 00       A  3178    				ld iy,hw_warn_txt1				00375B FD7E00              A  3179    nextwchar		ld a,(iy)
00375E B7                  A  3180    				or a
00375F 28 3B               A  3181    				jr z,wmsg_done
003761 21400000            A  3182    				ld hl,64
003765 67                  A  3183    				ld h,a
003766 ED6C                A  3184    				mlt hl
003768 11000080            A  3185    				ld de,vram_a_addr
00376C 19                  A  3186    				add hl,de						00376D 0E08                A  3187    				ld c,8
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 132


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00376F 7E                  A  3188    wpixlp2			ld a,(hl)
003770 0608                A  3189    				ld b,8
003772 CB17                A  3190    wpixlp1			rl a
003774 30 06               A  3191    				jr nc,nowpix
003776 DD360001            A  3192    				ld (ix),1
00377A 18 04               A  3193    				jr wpixd
00377C DD360000            A  3194    nowpix			ld (ix),0
003780 DD23                A  3195    wpixd			inc ix
003782 10 EE               A  3196    				djnz wpixlp1
003784 11380100            A  3197    				ld de,320-8
003788 DD19                A  3198    				add ix,de
00378A 11080000            A  3199    				ld de,8
00378E 19                  A  3200    				add hl,de
00378F 0D                  A  3201    				dec c
003790 20 DD               A  3202    				jr nz,wpixlp2
                           A  3203    				
003792 1108F6FF            A  3204    				ld de,8-(320*8)
003796 DD19                A  3205    				add ix,de
003798 FD23                A  3206    				inc iy
00379A 18 BF               A  3207    				jr nextwchar
                           A  3208    
                           A  3209    
00379C CD F6 41 00         A  3210    wmsg_done		call purge_keyboard
0037A0 CD BC 3B 00         A  3211    				call set_irq_vector
0037A4 CD CE 3B 00         A  3212    				call enable_os_irqs
0037A8 FB                  A  3213    				ei
                           A  3214    
0037A9 CD 67 40 00         A  3215    wmsg_loop		call hwsc_wait_vrt			;	                           A  3216    				
0037AD 11CC0C00            A  3217    				ld de,ccch
0037B1 21 61 61 00         A  3218    				ld hl,cursorflashtimer
0037B5 34                  A  3219    				inc (hl)
0037B6 7E                  A  3220    				ld a,(hl)
0037B7 E640                A  3221    				and 64
0037B9 28 04               A  3222    				jr z,got_wcolour
0037BB 11000000            A  3223    				ld de,000h
0037BF ED530200 FF         A  3224    got_wcolour		ld (hw_palette+2),de
                           A  3225    								
0037C4 CD 6D 44 00         A  3226    				call os_get_key_press
0037C8 FE76                A  3227    				cp 76h
0037CA 20 DD               A  3228    				jr nz,wmsg_loop
0037CC C3000000            A  3229    				jp 0
                           A  3230    				
                           A  3231    ;----------------------------------------------
                           A  3232    ; Storage Device Drivers
                           A  3233    ;----------------------------------------------
                           A  3234    
                           B     0    	include		'prose_sdcard_driver_v110.asm'	                           B     1    ;----------------------------------------------
                           B     2    ; Low level Z80 MMC/SDC/SDHC card access routin
                           B     3    ;----------------------------------------------
                           B     4    ;
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 133


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
                           B     5    ; V1.10 - SDHC support added
                           B     6    ;
                           B     7    ; Limitations:
                           B     8    ; ------------
                           B     9    ; Does not check for block size
                           B    10    ;
                           B    11    ; Somewhat arbitrary timimg due to quirks of my
                           B    12    ; which means the data from the card following 
                           B    13    ; byte is skipped by the send_command routine.)
                           B    14    
                           B    15    
                           B    16    ;----------------------------------------------
                           B    17    ;
                           B    18    ; Key Routines:      Input Parameters          
                           B    19    ; -------------      ----------------          
                           B    20    ; sd_initialize		no arguments required      
                           B    21    ; sd_read_sector	[sector_lba0-3]				                           B    22    ; sd_write_sector	[sector_lba0-3]    			                           B    23    ;
                           B    24    ; (Assume all other registers are trashed.)
                           B    25    ;
                           B    26    ;----------------------------------------------
                           B    27    
                           B    28    ; Routines respond with Zero Flag set if operat
                           B    29    
                           B    30    ; $01 - SPI mode failed	 
                           B    31    ; $10 - MMC init failed	
                           B    32    ; $11 - SD init failed	
                           B    33    ; $12 - SDHC init failed	
                           B    34    ; $13 - voltage range bad	
                           B    35    ; $14 - check pattern bad
                           B    36    ; $20 - illegal command
                           B    37    ; $21 - bad command response
                           B    38    ; $22 - data token timeout
                           B    39    ; $23 - write timeout
                           B    40    ; $24 - write failed
                           B    41    ;
                           B    42    ;----------------------------------------------
                           B    43    
                           B    44    ; Define "sector_buffer" in main code (512 byte
                           B    45    
                           B    46    ;----------------------------------------------
                           B    47    
       00000041            B    48    CMD1	equ 40h + 1
       00000049            B    49    CMD9	equ 40h + 9
       0000004A            B    50    CMD10	equ 40h + 10
       0000004D            B    51    CMD13	equ 40h + 13
       00000051            B    52    CMD17	equ 40h + 17
       00000058            B    53    CMD24	equ 40h + 24
       00000069            B    54    ACMD41	equ 40h + 41
       00000077            B    55    CMD55	equ 40h + 55
       0000007A            B    56    CMD58	equ 40h + 58
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 134


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
                           B    57    
       00000001            B    58    sd_error_spi_mode_failed		equ 01h
                           B    59    
       00000010            B    60    sd_error_mmc_init_failed		equ 10h
       00000011            B    61    sd_error_sd_init_failed			equ 11h
       00000012            B    62    sd_error_sdhc_init_failed		equ 12h
       00000013            B    63    sd_error_vrange_bad				equ 13h
       00000014            B    64    sd_error_check_pattern_bad		equ 14h
                           B    65    
       00000020            B    66    sd_error_illegal_command		equ 20h
       00000021            B    67    sd_error_bad_command_response	equ 21h
       00000022            B    68    sd_error_data_token_timeout		equ 22h
       00000023            B    69    sd_error_write_timeout			equ 23h
       00000024            B    70    sd_error_write_failed			equ 24h
                           B    71    
                           B    72    ;----------------------------------------------
                           B    73    ; PROSE STANDARD DRIVER HEADER
                           B    74    ;----------------------------------------------
                           B    75    
0037D0 C3 E4 37 00         B    76    sd_card_driver	jp sd_initialize			; $
0037D4 C3 06 38 00         B    77    				jp sd_read_sector			; $
0037D8 C3 0C 38 00         B    78    				jp sd_write_sector			; $
0037DC 53445F43 41524400   B    79    				db "SD_CARD",0				; $
                           B    80    
                           B    81    ;----------------------------------------------
                           B    82    ; SD Card INITIALIZE code begins...
                           B    83    ;----------------------------------------------
                           B    84    
0037E4 CD 12 38 00         B    85    sd_initialize	call sd_init_main
0037E8 B7                  B    86    				or a						; i
0037E9 28 05               B    87    				jr z,sd_inok
0037EB CD A3 3B 00         B    88    				call sd_power_off			; i
0037EF C9                  B    89    				ret
                           B    90    
0037F0 CD A8 3B 00         B    91    sd_inok			call sd_spi_port_fast		; o
                           B    92    
0037F4 CD 74 39 00         B    93    				call sd_read_cid			; a
0037F8 20 06               B    94    				jr nz,sd_done
0037FA E5                  B    95    				push hl						; c
0037FB CD DD 38 00         B    96    				call sd_read_csd
0037FF E1                  B    97    				pop hl
                           B    98    
003800 CD 8B 3B 00         B    99    sd_done			call sd_deselect_card		; R
003804 B7                  B   100    				or a						; I
003805 C9                  B   101    				ret				 
                           B   102    
                           B   103    ;----------------------------------------------
                           B   104    		
003806 CD F8 39 00         B   105    sd_read_sector	call sd_read_sector_main
00380A 18 F4               B   106    				jr sd_done
                           B   107    
                           B   108    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 135


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
                           B   109    	
00380C CD 1E 3A 00         B   110    sd_write_sector	call sd_write_sector_main
003810 18 EE               B   111    				jr sd_done
                           B   112    	
                           B   113    ;----------------------------------------------
                           B   114    	
003812 AF                  B   115    sd_init_main	xor a							003813 32 22 3B 00         B   116    				ld (sd_card_info),a			
                           B   117    
003817 CD A3 3B 00         B   118    				call sd_power_off				                           B   119    				
00381B 11004000            B   120    				ld de,16384						00381F CD D7 40 00         B   121    				call hwsc_time_delay
                           B   122    							
003823 CD 97 3B 00         B   123    				call sd_power_on				                           B   124    
003827 11830000            B   125    				ld de,131						00382B CD D7 40 00         B   126    				call hwsc_time_delay
                           B   127    				
00382F 060A                B   128    				ld b,10							003831 CD A7 3A 00         B   129    sd_ecilp		call sd_send_eight_clocks
003835 10 FA               B   130    				djnz sd_ecilp
                           B   131    				
003837 21 F6 3A 00         B   132    				ld hl,CMD0_string				00383B CD BF 3A 00         B   133    				call sd_send_command_string		00383F FE01                B   134    				cp 01h							003841 28 03               B   135    				jr z,sd_spi_mode_ok
                           B   136    				
003843 3E01                B   137    				ld a,sd_error_spi_mode_failed
003845 C9                  B   138    				ret		
                           B   139    
                           B   140    ; ---- CARD IS IN IDLE MODE -------------------
                           B   141    
003846 21 FC 3A 00         B   142    sd_spi_mode_ok	ld hl,CMD8_string				00384A CD BF 3A 00         B   143    				call sd_send_command_string
00384E FE01                B   144    				cp 01h
003850 20 52               B   145    				jr nz,sd_sdc_init				                           B   146    
003852 0604                B   147    				ld b,4
003854 CD E7 3A 00         B   148    				call sd_read_bytes_to_sector_bu
003858 3E01                B   149    				ld a,1
00385A 23                  B   150    				inc hl
00385B 23                  B   151    				inc hl
00385C BE                  B   152    				cp (hl)							00385D 28 03               B   153    				jr z,sd_vrok
00385F 3E13                B   154    				ld a,sd_error_vrange_bad
003861 C9                  B   155    				ret				
                           B   156    
003862 3EAA                B   157    sd_vrok			ld a,0aah
003864 23                  B   158    				inc hl
003865 BE                  B   159    				cp (hl)
003866 28 03               B   160    				jr z,sd_check_pattern_ok
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 136


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
003868 3E14                B   161    				ld a,sd_error_check_pattern_bad
00386A C9                  B   162    				ret
                           B   163    				
00386B                     B   164    sd_check_pattern_ok
                           B   165    
                           B   166    ;------ SDHC CARD CAN WORK AT 2.7v - 3.6v -----
                           B   167    	
00386B 01401F00            B   168    				ld bc,8000						                           B   169    
00386F 3E77                B   170    sdhc_iwl		ld a,CMD55						003871 CD AE 3A 00         B   171    				call sd_send_command_null_args
                           B   172    				
003875 21 02 3B 00         B   173    				ld hl,ACMD41HCS_string			003879 CD BF 3A 00         B   174    				call sd_send_command_string
00387D 28 0C               B   175    				jr z,sdhc_init_ok				00387F CB57                B   176    				bit 2,a
003881 20 05               B   177    				jr nz,sdhc_if					                           B   178    				
003883 0B                  B   179    				dec bc
003884 78                  B   180    				ld a,b
003885 B1                  B   181    				or c
003886 20 E7               B   182    				jr nz,sdhc_iwl
                           B   183    				
003888 3E12                B   184    sdhc_if			ld a,sd_error_sdhc_init_failed	00388A C9                  B   185    				ret
                           B   186    				
00388B                     B   187    sdhc_init_ok
                           B   188    
                           B   189    ;------ SDHC CARD IS INITIALIZED --------------
                           B   190    
00388B 3E7A                B   191    				ld a,CMD58						00388D CD AE 3A 00         B   192    				call sd_send_command_null_args
                           B   193    					
003891 0604                B   194    				ld b,4							003893 CD E7 3A 00         B   195    				call sd_read_bytes_to_sector_bu
003897 7E                  B   196    				ld a,(hl)
003898 E640                B   197    				and 040h						00389A 0F                  B   198    				rrca
00389B 0F                  B   199    				rrca 
00389C F602                B   200    				or 00000010b				
00389E 32 22 3B 00         B   201    				ld (sd_card_info),a				0038A2 AF                  B   202    				xor a							0038A3 C9                  B   203    				ret
                           B   204    
                           B   205    	
                           B   206    ;-------- NOT AN SDHC CARD, TRY SD INIT -------
                           B   207    
0038A4 01401F00            B   208    sd_sdc_init		ld bc,8000						                           B   209    
0038A8 3E77                B   210    sd_iwl			ld a,CMD55						0038AA CD AE 3A 00         B   211    				call sd_send_command_null_args
                           B   212    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 137


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
0038AE 3E69                B   213    				ld a,ACMD41						0038B0 CD AE 3A 00         B   214    				call sd_send_command_null_args
0038B4 28 0C               B   215    				jr z,sd_rdy						                           B   216    				
0038B6 CB57                B   217    				bit 2,a				
0038B8 20 10               B   218    				jr nz,sd_mmc_init				                           B   219    							
0038BA 0B                  B   220    				dec bc
0038BB 78                  B   221    				ld a,b
0038BC B1                  B   222    				or c
0038BD 20 E9               B   223    				jr nz,sd_iwl
                           B   224    				
0038BF 3E11                B   225    				ld a,sd_error_sd_init_failed	0038C1 C9                  B   226    				ret
                           B   227    				
0038C2 3E01                B   228    sd_rdy			ld a,1
0038C4 32 22 3B 00         B   229    				ld (sd_card_info),a				0038C8 AF                  B   230    				xor a							0038C9 C9                  B   231    				ret	
                           B   232    
                           B   233    ;-------- NOT AN SDHC OR SD CARD, TRY MMC INIT 
                           B   234    
0038CA 01401F00            B   235    sd_mmc_init		ld bc,8000						                           B   236    
0038CE 3E41                B   237    sdmmc_iwl		ld a,CMD1
0038D0 CD AE 3A 00         B   238    				call sd_send_command_null_args	0038D4 C8                  B   239    				ret z							                           B   240    				
0038D5 0B                  B   241    sd_mnrdy		dec bc
0038D6 78                  B   242    				ld a,b
0038D7 B1                  B   243    				or c
0038D8 20 F4               B   244    				jr nz,sdmmc_iwl
                           B   245    				
0038DA 3E10                B   246    				ld a,sd_error_mmc_init_failed	0038DC C9                  B   247    				ret
                           B   248    	
                           B   249    ;----------------------------------------------
                           B   250    
                           B   251    ; Returns BC:DE = Total capacity of card (in se
                           B   252    
0038DD                     B   253    sd_read_csd
                           B   254    				
0038DD 3E49                B   255    				ld a,CMD9						0038DF CD AE 3A 00         B   256    				call sd_send_command_null_args	0038E3 C2 04 3A 00         B   257    				jp nz,sd_bcr_error				                           B   258    
0038E7 CD 92 3A 00         B   259    				call sd_wait_data_token			0038EB C2 0D 3A 00         B   260    				jp nz,sd_dt_timeout	
                           B   261    
0038EF 0612                B   262    sd_id_ok		ld b,18							0038F1 CD E7 3A 00         B   263    				call sd_read_bytes_to_sector_bu
                           B   264    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 138


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
0038F5 DD21 AE 66 00       B   265    				ld ix,sector_buffer				0038FA DDCB0076            B   266    				bit 6,(ix)
0038FE 28 19               B   267    				jr z,sd_csd_v1
                           B   268    
003900 DD6E09              B   269    sd_csd_v2		ld l,(ix+9)						003903 DD6608              B   270    				ld h,(ix+8)
003906 23                  B   271    				inc hl
003907 3E0A                B   272    				ld a,10
003909 01000000            B   273    				ld bc,0
00390D 4029                B   274    sd_csd2lp		add.sis hl,hl
00390F CB11                B   275    				rl c
003911 CB10                B   276    				rl b
003913 3D                  B   277    				dec a
003914 20 F7               B   278    				jr nz,sd_csd2lp
003916 EB                  B   279    				ex de,hl						003917 AF                  B   280    				xor a
003918 C9                  B   281    				ret
                           B   282    				
003919 DD7E06              B   283    sd_csd_v1		ld a,(ix+6)						00391C E603                B   284    				and 00000011b
00391E 57                  B   285    				ld d,a
00391F DD5E07              B   286    				ld e,(ix+7)
003922 DD7E08              B   287    				ld a,(ix+8)
003925 E6C0                B   288    				and 11000000b
003927 CB27                B   289    				sla a
003929 CB13                B   290    				rl e
00392B CB12                B   291    				rl d
00392D CB27                B   292    				sla a
00392F CB13                B   293    				rl e
003931 CB12                B   294    				rl d							                           B   295    				
003933 DD7E09              B   296    				ld a,(ix+9)
003936 E603                B   297    				and 00000011b
003938 47                  B   298    				ld b,a
003939 DD7E0A              B   299    				ld a,(ix+10)
00393C E680                B   300    				and 10000000b
00393E CB27                B   301    				sla a
003940 CB10                B   302    				rl b							                           B   303    				
003942 04                  B   304    				inc b
003943 04                  B   305    				inc b
003944 21000000            B   306    				ld hl,0
003948 CB23                B   307    sd_cmsh			sla e
00394A CB12                B   308    				rl d
00394C CB15                B   309    				rl l
00394E CB14                B   310    				rl h
003950 10 F6               B   311    				djnz sd_cmsh					                           B   312    				
003952 DD7E05              B   313    				ld a,(ix+5)
003955 E60F                B   314    				and 00001111b					003957 28 17               B   315    				jr z,sd_nbls
003959 47                  B   316    				ld b,a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 139


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
00395A CB23                B   317    sd_blsh			sla e
00395C CB12                B   318    				rl d
00395E CB15                B   319    				rl l
003960 CB14                B   320    				rl h
003962 10 F6               B   321    				djnz sd_blsh					                           B   322    				
003964 0609                B   323    				ld b,9							003966 CB3C                B   324    sd_cbsec		srl h
003968 CB1D                B   325    				rr l
00396A CB1A                B   326    				rr d
00396C CB1B                B   327    				rr e
00396E 10 F6               B   328    				djnz sd_cbsec
                           B   329    
003970 E5                  B   330    sd_nbls			push hl
003971 C1                  B   331    				pop bc							003972 AF                  B   332    				xor a
003973 C9                  B   333    				ret
                           B   334    
                           B   335    ;----------------------------------------------
                           B   336    
003974                     B   337    sd_read_cid
                           B   338    	
                           B   339    ; Returns HL = Pointer to device ID string
                           B   340    
003974 3E4A                B   341    				ld a,CMD10						003976 CD AE 3A 00         B   342    				call sd_send_command_null_args
00397A C2 04 3A 00         B   343    				jp nz,sd_bcr_error				                           B   344    
00397E CD 92 3A 00         B   345    				call sd_wait_data_token			003982 C2 0D 3A 00         B   346    				jp nz,sd_dt_timeout
                           B   347    					
003986 0612                B   348    				ld b,18
003988 CD E7 3A 00         B   349    				call sd_read_bytes_to_sector_bu
                           B   350    				
00398C 21 B1 66 00         B   351    				ld hl,sector_buffer+03h			003990 11 CE 66 00         B   352    				ld de,sector_buffer+20h
003994 01050000            B   353    				ld bc,5
003998 3A 22 3B 00         B   354    				ld a,(sd_card_info)
00399C E60F                B   355    				and 0fh
00399E 20 01               B   356    				jr nz,sd_cn5
0039A0 03                  B   357    				inc bc
0039A1 EDB0                B   358    sd_cn5			ldir
0039A3 E5                  B   359    				push hl
0039A4 D5                  B   360    				push de
0039A5 21 08 3B 00         B   361    				ld hl,sd_vnchars
0039A9 01140000            B   362    				ld bc,20
0039AD EDB0                B   363    				ldir
0039AF D1                  B   364    				pop de
0039B0 E1                  B   365    				pop hl
0039B1 13                  B   366    				inc de
0039B2 13                  B   367    				inc de
0039B3 7E                  B   368    				ld a,(hl)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 140


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
0039B4 CB3F                B   369    				srl a
0039B6 CB3F                B   370    				srl a
0039B8 CB3F                B   371    				srl a
0039BA CB3F                B   372    				srl a
0039BC C630                B   373    				add a,30h						0039BE 12                  B   374    				ld (de),a
0039BF 13                  B   375    				inc de
0039C0 13                  B   376    				inc de
0039C1 7E                  B   377    				ld a,(hl)
0039C2 E60F                B   378    				and 0fh
0039C4 C630                B   379    				add a,30h
0039C6 12                  B   380    				ld (de),a						0039C7 13                  B   381    				inc de
0039C8 13                  B   382    				inc de
0039C9 13                  B   383    				inc de
0039CA 13                  B   384    				inc de
0039CB 13                  B   385    				inc de
0039CC 23                  B   386    				inc hl
0039CD 0604                B   387    				ld b,4
0039CF 7E                  B   388    sd_snulp		ld a,(hl)						0039D0 CB3F                B   389    				srl a
0039D2 CB3F                B   390    				srl a
0039D4 CB3F                B   391    				srl a
0039D6 CB3F                B   392    				srl a
0039D8 C630                B   393    				add a,30h
0039DA FE3A                B   394    				cp 3ah
0039DC 38 02               B   395    				jr c,sd_hvl1
0039DE C607                B   396    				add a,07h
0039E0 12                  B   397    sd_hvl1			ld (de),a
0039E1 13                  B   398    				inc de
0039E2 7E                  B   399    				ld a,(hl)
0039E3 E60F                B   400    				and 0fh
0039E5 C630                B   401    				add a,30h
0039E7 FE3A                B   402    				cp 3ah
0039E9 38 02               B   403    				jr c,sd_hvl2
0039EB C607                B   404    				add a,07h
0039ED 12                  B   405    sd_hvl2			ld (de),a
0039EE 13                  B   406    				inc de
0039EF 23                  B   407    				inc hl
0039F0 10 DD               B   408    				djnz sd_snulp
                           B   409    				
0039F2 21 CE 66 00         B   410    				ld hl,sector_buffer+20h			0039F6 AF                  B   411    				xor a
0039F7 C9                  B   412    				ret
                           B   413    
                           B   414    ;----------------------------------------------
                           B   415    ; SD Card READ SECTOR code begins...
                           B   416    ;----------------------------------------------
                           B   417    	
0039F8                     B   418    sd_read_sector_main
                           B   419    
                           B   420    ; 512 bytes are returned in sector buffer
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 141


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
                           B   421    
0039F8 CD 69 3A 00         B   422    				call sd_set_sector_addr
                           B   423    
0039FC 3E51                B   424    				ld a,CMD17						0039FE CD BA 3A 00         B   425    				call sd_send_command_current_ar
003A02 28 03               B   426    				jr z,sd_rscr_ok					003A04 3E21                B   427    sd_bcr_error	ld a,sd_error_bad_command_respo
003A06 C9                  B   428    				ret
                           B   429    
003A07 CD 92 3A 00         B   430    sd_rscr_ok		call sd_wait_data_token			003A0B 28 03               B   431    				jr z,sd_dt_ok					003A0D 3E22                B   432    sd_dt_timeout	ld a,sd_error_data_token_timeou
003A0F C9                  B   433    				ret
                           B   434    
003A10 21 AE 66 00         B   435    sd_dt_ok		ld hl,sector_buffer
003A14 CD 38 3B 00         B   436    				call sd_read_513_bytes			003A18 CD 30 3B 00         B   437    				call sd_get_byte
                           B   438    				
003A1C AF                  B   439    				xor a							003A1D C9                  B   440    				ret
                           B   441    
                           B   442    ;----------------------------------------------
                           B   443    ; SD Card WRITE SECTOR code begins...
                           B   444    ;----------------------------------------------
                           B   445    
003A1E                     B   446    sd_write_sector_main
                           B   447    	
003A1E CD 69 3A 00         B   448    				call sd_set_sector_addr
                           B   449    
003A22 3E58                B   450    				ld a,CMD24						003A24 CD BA 3A 00         B   451    				call sd_send_command_current_ar
003A28 20 DA               B   452    				jr nz,sd_bcr_error				                           B   453    				
003A2A CD A7 3A 00         B   454    				call sd_send_eight_clocks		                           B   455    
003A2E 3EFE                B   456    				ld a,0feh
003A30 CD 23 3B 00         B   457    				call sd_send_byte				                           B   458    
003A34 21 AE 66 00         B   459    				ld hl,sector_buffer
003A38 CD 67 3B 00         B   460    				call sd_write_512_bytes			003A3C CD A7 3A 00         B   461    				call sd_send_eight_clocks		003A40 CD A7 3A 00         B   462    				call sd_send_eight_clocks		                           B   463    		
003A44 CD 30 3B 00         B   464    				call sd_get_byte				003A48 E61F                B   465    				and 1fh
003A4A CB3F                B   466    				srl a
003A4C FE02                B   467    				cp 02h
003A4E 28 03               B   468    				jr z,sd_wr_ok
                           B   469    
003A50 3E24                B   470    sd_write_fail	ld a,sd_error_write_failed
003A52 C9                  B   471    				ret
                           B   472    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 142


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
003A53 01FFFF00            B   473    sd_wr_ok		ld bc,65535						003A57 CD 30 3B 00         B   474    sd_wcbsy		call sd_get_byte				003A5B FEFF                B   475    				cp 0ffh
003A5D 20 02               B   476    				jr nz,sd_busy
003A5F AF                  B   477    				xor a							003A60 C9                  B   478    				ret
                           B   479    				
003A61 0B                  B   480    sd_busy			dec bc
003A62 78                  B   481    				ld a,b
003A63 B1                  B   482    				or c
003A64 20 F1               B   483    				jr nz,sd_wcbsy
                           B   484    
003A66                     B   485    sd_card_busy_timeout
                           B   486    
003A66 3E23                B   487    				ld a,sd_error_write_timeout
003A68 C9                  B   488    				ret	
                           B   489    
                           B   490    ;----------------------------------------------
                           B   491    
003A69                     B   492    sd_set_sector_addr
                           B   493    				
003A69 21 5A 61 00         B   494    				ld hl,sector_lba0
003A6D 4E                  B   495    				ld c,(hl)
003A6E 23                  B   496    				inc hl
003A6F 5E                  B   497    				ld e,(hl)
003A70 23                  B   498    				inc hl
003A71 56                  B   499    				ld d,(hl)
003A72 23                  B   500    				inc hl
003A73 46                  B   501    				ld b,(hl)					; s
                           B   502    
003A74 3A 22 3B 00         B   503    				ld a,(sd_card_info)
003A78 E610                B   504    				and 10h
003A7A 20 0A               B   505    				jr nz,lbatoargs				; i
003A7C 69                  B   506    				ld l,c
003A7D 63                  B   507    				ld h,e
003A7E 7A                  B   508    				ld a,d						; o
003A7F 4029                B   509    				add.sis hl,hl
003A81 8F                  B   510    				adc a,a	
003A82 EB                  B   511    				ex de,hl
003A83 47                  B   512    				ld b,a
003A84 0E00                B   513    				ld c,0
003A86 21 1D 3B 00         B   514    lbatoargs		ld hl,cmd_generic_args
003A8A 70                  B   515    				ld (hl),b
003A8B 23                  B   516    				inc hl
003A8C 72                  B   517    				ld (hl),d
003A8D 23                  B   518    				inc hl
003A8E 73                  B   519    				ld (hl),e
003A8F 23                  B   520    				inc hl
003A90 71                  B   521    				ld (hl),c
003A91 C9                  B   522    				ret
                           B   523    	
                           B   524    	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 143


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
                           B   525    ;----------------------------------------------
                           B   526    
003A92                     B   527    sd_wait_data_token
                           B   528    
003A92 C5                  B   529    				push bc
003A93 01401F00            B   530    				ld bc,8000				
003A97 CD 30 3B 00         B   531    sd_wdt			call sd_get_byte			; r
003A9B FEFE                B   532    				cp 0feh
003A9D 28 06               B   533    				jr z,sd_gdt
003A9F 0B                  B   534    				dec bc
003AA0 78                  B   535    				ld a,b
003AA1 B1                  B   536    				or c
003AA2 20 F3               B   537    				jr nz,sd_wdt
003AA4 0C                  B   538    				inc c						; d
003AA5 C1                  B   539    sd_gdt			pop bc
003AA6 C9                  B   540    				ret
                           B   541    
                           B   542    ;----------------------------------------------
                           B   543    
003AA7                     B   544    sd_send_eight_clocks
                           B   545    
003AA7 3EFF                B   546    				ld a,0ffh
003AA9 CD 23 3B 00         B   547    				call sd_send_byte
003AAD C9                  B   548    				ret
                           B   549    
                           B   550    ;----------------------------------------------
                           B   551    
                           B   552    
003AAE                     B   553    sd_send_command_null_args
                           B   554    
003AAE 21000000            B   555    				ld hl,0
003AB2 22 1D 3B 00         B   556    				ld (cmd_generic_args),hl	; c
003AB6 22 1E 3B 00         B   557    				ld (cmd_generic_args+1),hl	
                           B   558    				
                           B   559    				
                           B   560    	
003ABA                     B   561    sd_send_command_current_args
                           B   562    	
003ABA 21 1C 3B 00         B   563    				ld hl,cmd_generic
003ABE 77                  B   564    				ld (hl),a
                           B   565    
                           B   566    
                           B   567    
003ABF                     B   568    sd_send_command_string
                           B   569    
                           B   570    ; set HL = location of 6 byte command string
                           B   571    ; returns command response in A (ZF set if $00)
                           B   572    
                           B   573    
003ABF CD 83 3B 00         B   574    				call sd_select_card				                           B   575    						
003AC3 CD A7 3A 00         B   576    				call sd_send_eight_clocks		Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 144


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
                           B   577    				
003AC7 C5                  B   578    				push bc
003AC8 0606                B   579    				ld b,6
003ACA 7E                  B   580    sd_sclp			ld a,(hl)
003ACB CD 23 3B 00         B   581    				call sd_send_byte				003ACF 23                  B   582    				inc hl
003AD0 10 F8               B   583    				djnz sd_sclp
003AD2 C1                  B   584    				pop bc
                           B   585    				
003AD3 CD 30 3B 00         B   586    				call sd_get_byte				                           B   587    					
                           B   588    
003AD7                     B   589    sd_wait_valid_response
                           B   590    				
003AD7 C5                  B   591    				push bc
003AD8 0600                B   592    				ld b,0
003ADA CD 30 3B 00         B   593    sd_wncrl		call sd_get_byte				003ADE CB7F                B   594    				bit 7,a							003AE0 28 02               B   595    				jr z,sd_gcr
003AE2 10 F6               B   596    				djnz sd_wncrl
                           B   597    								
003AE4 B7                  B   598    sd_gcr			or a							003AE5 C1                  B   599    				pop bc
003AE6 C9                  B   600    				ret
                           B   601    				
                           B   602    	
                           B   603    ;----------------------------------------------
                           B   604    
003AE7                     B   605    sd_read_bytes_to_sector_buffer
                           B   606    
003AE7 21 AE 66 00         B   607    				ld hl,sector_buffer
                           B   608    	
003AEB                     B   609    sd_read_bytes
                           B   610    
                           B   611    ; set HL to dest address for data
                           B   612    ; set B to number of bytes required  
                           B   613    
003AEB E5                  B   614    				push hl
003AEC CD 30 3B 00         B   615    sd_rblp			call sd_get_byte
003AF0 77                  B   616    				ld (hl),a
003AF1 23                  B   617    				inc hl
003AF2 10 F8               B   618    				djnz sd_rblp
003AF4 E1                  B   619    				pop hl
003AF5 C9                  B   620    				ret
                           B   621    	
                           B   622    ;----------------------------------------------
                           B   623    
                           B   624    ; This data can be placed in ROM:
                           B   625    
003AF6 40000000 0095       B   626    CMD0_string			db 40h,00h,00h,00h,00h,95h
003AFC 48000001 AA87       B   627    CMD8_string			db 48h,00h,00h,01h,aah,87h
003B02 69400000 0001       B   628    ACMD41HCS_string	db 69h,40h,00h,00h,00h,01h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 145


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
003B08 2076782E 7820534E   B   629    sd_vnchars			db " vx.x SN:00000000 ",0,0
003B10 3A303030 30303030 
003B18 30200000 
                           B   630    
                           B   631    
                           B   632    ; The following variables need to be placed in 
                           B   633    
003B1C 00                  B   634    cmd_generic			db 00h
003B1D 00000000            B   635    cmd_generic_args	db 00h,00h,00h,00h
003B21 01                  B   636    cmd_generic_crc		db 01h
                           B   637    
003B22 00                  B   638    sd_card_info		db 0	; Bit [4] = CCS (bl
                           B   639    
                           B   640    
                           B   641    ;==============================================
                           B   642    
                           B   643    ;----------------------------------------------
                           B   644    
                           C     0    include "ez80p_sdcard_code.asm"				;EZ
                           C     1    ;----------------------------------------------
                           C     2    ; eZ80P Specific SD card low-level routines v1.
                           C     3    ;----------------------------------------------
                           C     4    
003B23                     C     5    sd_send_byte
                           C     6    
                           C     7    ;Put byte to send to card in A
                           C     8    
003B23 ED3903              C     9    					out0 (port_sdc_data),a
003B26 C5                  C    10    					push bc
003B27 0E01                C    11    					ld c,port_hw_flags
003B29 ED7410              C    12    sd_wb_loop			tstio 1<<sdc_serializer_bus
003B2C 20 FB               C    13    					jr nz,sd_wb_loop			003B2E C1                  C    14    					pop bc
003B2F C9                  C    15    					ret
                           C    16    
                           C    17    ;----------------------------------------------
                           C    18    
003B30                     C    19    sd_get_byte
                           C    20    
                           C    21    ; Returns byte read from card in A
                           C    22    
003B30 CD A7 3A 00         C    23    					call sd_send_eight_clocks
003B34 ED3803              C    24    					in0 a,(port_sdc_data)
003B37 C9                  C    25    					ret
                           C    26    
                           C    27    ;----------------------------------------------
                           C    28    
003B38                     C    29    sd_read_513_bytes
                           C    30    
                           C    31    ; optimized sector read
                           C    32    ; set hl = dest location for bytes
                           C    33    ; note: The last byte read (CRC) is not put int
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 146


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_sdcard_code.asm
                           C    34    
003B38 C5                  C    35    					push bc
003B39 D5                  C    36    					push de
003B3A 1EFF                C    37    					ld e,0ffh
003B3C ED1903              C    38    					out0 (port_sdc_data),e		003B3F 0E01                C    39    					ld c,port_hw_flags			003B41 0600                C    40    					ld b,0						                           C    41    
003B43 ED7410              C    42    sd_wser_loop1		tstio 1<<sdc_serializer_bus
003B46 20 FB               C    43    					jr nz,sd_wser_loop1			003B48 DB03                C    44    					in a,(port_sdc_data)		                           C    45    					
003B4A ED1903              C    46    sd_512_loop			out0 (port_sdc_data),e		003B4D 77                  C    47    					ld (hl),a					003B4E 23                  C    48    					inc hl						                           C    49    					
003B4F ED7410              C    50    sd_wser_loop2		tstio 1<<sdc_serializer_bus
003B52 20 FB               C    51    					jr nz,sd_wser_loop2			003B54 DB03                C    52    					in a,(port_sdc_data)		                           C    53    												003B56 ED1903              C    54    					out0 (port_sdc_data),e		003B59 77                  C    55    					ld (hl),a					003B5A 23                  C    56    					inc hl						                           C    57    					
003B5B ED7410              C    58    sd_wser_loop3		tstio 1<<sdc_serializer_bus
003B5E 20 FB               C    59    					jr nz,sd_wser_loop3			003B60 DB03                C    60    					in a,(port_sdc_data)		                           C    61    					
003B62 10 E6               C    62    					djnz sd_512_loop
003B64 D1                  C    63    					pop de
003B65 C1                  C    64    					pop bc
003B66 C9                  C    65    					ret
                           C    66    					
                           C    67    ;----------------------------------------------
                           C    68    					
003B67                     C    69    sd_write_512_bytes
                           C    70    
                           C    71    ;optimized sector write
                           C    72    ;set hl = source location for bytes
                           C    73    
003B67 0E01                C    74    					ld c,port_hw_flags			003B69 0600                C    75    					ld b,0						003B6B 7E                  C    76    					ld a,(hl)
003B6C ED3903              C    77    sd_wr512_loop		out0 (port_sdc_data),a
003B6F 23                  C    78    					inc hl
003B70 7E                  C    79    					ld a,(hl)
003B71 ED7410              C    80    sd_wser_loop4		tstio 1<<sdc_serializer_bus
003B74 20 FB               C    81    					jr nz,sd_wser_loop4			003B76 ED3903              C    82    					out0 (port_sdc_data),a
003B79 23                  C    83    					inc hl
003B7A 7E                  C    84    					ld a,(hl)
003B7B ED7410              C    85    sd_wser_loop5		tstio 1<<sdc_serializer_bus
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 147


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_sdcard_code.asm
003B7E 20 FB               C    86    					jr nz,sd_wser_loop5
003B80 10 EA               C    87    					djnz sd_wr512_loop
003B82 C9                  C    88    					ret
                           C    89    
                           C    90    			
                           C    91    ;----------------------------------------------
                           C    92    ; SD Card control
                           C    93    ;----------------------------------------------
                           C    94    
003B83 F5                  C    95    sd_select_card		push af
003B84 3E02                C    96    					ld a,00h+(1<<sdc_cs)		003B86 ED3902              C    97    sd_wr_sdc_ctrl		out0 (port_sdc_ctrl),a
003B89 F1                  C    98    					pop af
003B8A C9                  C    99    					ret
                           C   100    
                           C   101    
003B8B F5                  C   102    sd_deselect_card	push af
003B8C 3E82                C   103    					ld a,080h+(1<<sdc_cs)		003B8E ED3902              C   104    					out0 (port_sdc_ctrl),a
003B91 CD A7 3A 00         C   105    					call sd_send_eight_clocks	003B95 F1                  C   106    					pop af
003B96 C9                  C   107    					ret
                           C   108    
                           C   109    
003B97 F5                  C   110    sd_power_on			push af
003B98 3A040000            C   111    					ld a,(1<<sdc_speed)			003B9C ED3902              C   112    					out0 (port_sdc_ctrl),a		003B9F 3E83                C   113    					ld a,80h+(1<<sdc_power)+(1<
003BA1 18 E3               C   114    					jr sd_wr_sdc_ctrl			                           C   115    
                           C   116    
003BA3 F5                  C   117    sd_power_off		push af
003BA4 3E01                C   118    					ld a,00h+(1<<sdc_power)		003BA6 18 DE               C   119    					jr sd_wr_sdc_ctrl			                           C   120    
                           C   121    
003BA8 F5                  C   122    sd_spi_port_fast	push af
003BA9 3E84                C   123    					ld a,80h+(1<<sdc_speed)		003BAB 18 D9               C   124    					jr sd_wr_sdc_ctrl
                           C   125    
                           C   126    
                           C   127    ;----------------------------------------------
                           B   646    
                           B   647    ;----------------------------------------------
                           A  3236    	
                           A  3237    ; Additional storage device driver source can b
                           A  3238    ; Also add the driver's PROSE header address la
                           A  3239    
003BAD D03700              A  3240    driver_table		dw24 sd_card_driver	; Stora
003BB0 000000              A  3241    					dw24 0 				; Stora
003BB3 000000              A  3242    					dw24 0				; Stora
003BB6 000000              A  3243    					dw24 0				; Stora
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 148


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  3244    					
003BB9 000000              A  3245    					dw24 0				; Essen
                           A  3246    					
                           A  3247    ;----------------------------------------------
                           A  3248    ; IO routines
                           A  3249    ;----------------------------------------------
                           A  3250    
                           B     0    	include		'ez80p_interrupt_code.asm'		                           B     1    ;----------------------------------------------
                           B     2    ; ez80p interrupt code v0.05 (MADL mode)
                           B     3    ;----------------------------------------------
                           B     4    
003BBC                     B     5    set_irq_vector
                           B     6    
003BBC AF                  B     7    				xor a
003BBD ED47                B     8    				ld i,a
003BBF 3EC3                B     9    				ld a,c3h						003BC1 32320000            B    10    				ld (032h),a	
003BC5 21 F7 3B 00         B    11    				ld hl,int_routine				003BC9 22330000            B    12    				ld (033h),hl
003BCD C9                  B    13    				ret
                           B    14    
                           B    15    
                           B    16    
003BCE 21 C2 60 00         B    17    enable_os_irqs	ld hl,devices_connected			003BD2 CB46                B    18    				bit 0,(hl)
003BD4 C4 DF 3B 00         B    19    				call nz,enable_kb_irq
003BD8 CB4E                B    20    				bit 1,(hl)
003BDA C4 E5 3B 00         B    21    				call nz,enable_ms_irq
003BDE C9                  B    22    				ret
                           B    23    
                           B    24    
003BDF 3E81                B    25    enable_kb_irq	ld a,10000001b
003BE1 ED3905              B    26    				out0 (port_irq_ctrl),a			003BE4 C9                  B    27    				ret
                           B    28    
003BE5 3E82                B    29    enable_ms_irq	ld a,10000010b
003BE7 ED3905              B    30    				out0 (port_irq_ctrl),a			003BEA C9                  B    31    				ret
                           B    32    
003BEB 3E02                B    33    disable_ms_irq	ld a,00000010b
003BED ED3905              B    34    				out0 (port_irq_ctrl),a			003BF0 C9                  B    35    				ret
                           B    36    
003BF1 3E3F                B    37    disable_irqs	ld a,00111111b
003BF3 ED3905              B    38    				out0 (port_irq_ctrl),a			003BF6 C9                  B    39    				ret
                           B    40    			
                           B    41    ;----------------------------------------------
                           B    42    
                           B    43    
003BF7                     B    44    int_routine
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 149


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
003BF7 F5                  B    45    				push af							003BF8 ED3807              B    46    				in0 a,(port_ps2_ctrl)			003BFB CB67                B    47    				bit 4,a
003BFD C4 0F 3C 00         B    48    				call nz,kb_interrupt_handler
003C01 ED3807              B    49    				in0 a,(port_ps2_ctrl)			003C04 CB6F                B    50    				bit 5,a
003C06 C4 B1 3C 00         B    51    				call nz,ms_interrupt_handler
003C0A F1                  B    52    				pop af
                           B    53    
003C0B FB                  B    54    				ei								003C0C 5BED4D              B    55    				reti.l							                           B    56    
                           B    57    ;----------------------------------------------
                           B    58    ; Keyboard IRQ routine v0.03
                           B    59    ;----------------------------------------------
                           B    60    
003C0F                     B    61    kb_interrupt_handler
                           B    62    
                           B    63    ;--- irq test ---------------------------------
                           B    64    
                           B    65    ;				push bc
                           B    66    ;				ld a,0ffh
                           B    67    ;				ld (hw_palette),a
                           B    68    ;				ld b,0
                           B    69    ;testlp1		djnz testlp1
                           B    70    ;				ld a,0
                           B    71    ;				ld (hw_palette),a
                           B    72    ;				pop bc
                           B    73    				
                           B    74    ;--- end of test ------------------------------
                           B    75    
                           B    76    
003C0F E5                  B    77    				push hl							003C10 C5                  B    78    				push bc
                           B    79    				
003C11 ED3802              B    80    key_loop		in0 a,(port_keyboard_data)		003C14 47                  B    81    				ld b,a
                           B    82    
003C15 3A 90 62 00         B    83    				ld a,(key_release_mode)
003C19 B7                  B    84    				or a
003C1A 28 20               B    85    				jr z,key_pressed
                           B    86    			
003C1C 78                  B    87    				ld a,b							003C1D FEE0                B    88    				cp 0e0h							003C1F 28 61               B    89    				jr z,kirq_done	
003C21 FEE1                B    90    				cp 0e1h
003C23 28 5D               B    91    				jr z,kirq_done	
                           B    92    				
003C25 CD 8C 3C 00         B    93    				call qualifiers					003C29 7D                  B    94    				ld a,l
003C2A 2F                  B    95    				cpl
003C2B 6F                  B    96    				ld l,a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 150


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
003C2C 3A 92 62 00         B    97    				ld a,(key_mod_flags)
003C30 A5                  B    98    				and l							003C31 32 92 62 00         B    99    				ld (key_mod_flags),a
003C35 AF                  B   100    				xor a
003C36 32 90 62 00         B   101    				ld (key_release_mode),a
003C3A 18 46               B   102    				jr kirq_done
                           B   103    	
                           B   104    
003C3C 78                  B   105    key_pressed		ld a,b							003C3D FEE0                B   106    				cp 0e0h							003C3F 28 41               B   107    				jr z,kirq_done	
003C41 FEE1                B   108    				cp 0e1h
003C43 28 3D               B   109    				jr z,kirq_done	
                           B   110    			
003C45 FEF0                B   111    				cp 0f0h							003C47 20 08               B   112    				jr nz,not_krel
003C49 3E01                B   113    				ld a,1							003C4B 32 90 62 00         B   114    				ld (key_release_mode),a			003C4F 18 31               B   115    				jr kirq_done
                           B   116    	
                           B   117    	
003C51 CD 8C 3C 00         B   118    not_krel		call qualifiers					003C55 3A 92 62 00         B   119    				ld a,(key_mod_flags)			003C59 B5                  B   120    				or l
003C5A 32 92 62 00         B   121    				ld (key_mod_flags),a			003C5E 68                  B   122    				ld l,b
003C5F 01000000            B   123    				ld bc,0
003C63 3A 8E 62 00         B   124    				ld a,(key_buf_wr_idx)
003C67 4F                  B   125    				ld c,a
003C68 7D                  B   126    				ld a,l
003C69 21 6E 62 00         B   127    				ld hl,scancode_buffer
003C6D 09                  B   128    				add hl,bc
003C6E 77                  B   129    				ld (hl),a						003C6F 0E10                B   130    				ld c,16
003C71 09                  B   131    				add hl,bc
003C72 3A 92 62 00         B   132    				ld a,(key_mod_flags)			003C76 77                  B   133    				ld (hl),a	
003C77 3A 8E 62 00         B   134    				ld a,(key_buf_wr_idx)
003C7B 3C                  B   135    				inc a
003C7C E60F                B   136    				and 15
003C7E 32 8E 62 00         B   137    				ld (key_buf_wr_idx),a			                           B   138    				
003C82 ED3807              B   139    kirq_done		in0 a,(port_ps2_ctrl)			003C85 CB67                B   140    				bit 4,a	
003C87 20 88               B   141    				jr nz,key_loop
                           B   142    
003C89 C1                  B   143    				pop bc
003C8A E1                  B   144    				pop hl
003C8B C9                  B   145    				ret
                           B   146    
                           B   147    
003C8C 2E40                B   148    qualifiers		ld l,040h		;apps
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 151


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
003C8E FE2F                B   149    				cp 02fh
003C90 C8                  B   150    				ret z
                           B   151    			
003C91 2E20                B   152    				ld l,020h		;r gui
003C93 FE27                B   153    				cp 027h
003C95 C8                  B   154    				ret z
                           B   155    			
003C96 2E10                B   156    				ld l,010h		;r shift
003C98 FE59                B   157    				cp 059h
003C9A C8                  B   158    				ret z
                           B   159    			
003C9B 2E08                B   160    				ld l,08h		; alt
003C9D FE11                B   161    				cp 011h
003C9F C8                  B   162    				ret z
                           B   163    			
003CA0 2E04                B   164    				ld l,04h		; l gui
003CA2 FE1F                B   165    				cp 01fh
                           B   166    			
003CA4 2E02                B   167    				ld l,02h		;l ctrl / r ctr
003CA6 FE14                B   168    				cp 14h
003CA8 C8                  B   169    				ret z
                           B   170    			
003CA9 2E01                B   171    				ld l,01h		;l shift
003CAB FE12                B   172    				cp 12h
003CAD C8                  B   173    				ret z
                           B   174    				
003CAE 2E00                B   175    				ld l,0
003CB0 C9                  B   176    				ret
                           B   177    
                           B   178    ;----------------------------------------------
                           B   179    ; Mouse IRQ routine v0.03
                           B   180    ;----------------------------------------------
                           B   181    
003CB1                     B   182    ms_interrupt_handler
                           B   183    
                           B   184    ;--- irq test ---------------------------------
                           B   185    
                           B   186    ;				push bc
                           B   187    ;				ld a,0ffh
                           B   188    ;				ld (hw_palette),a
                           B   189    ;				ld b,0
                           B   190    ;testlp1		djnz testlp1
                           B   191    ;				ld a,0
                           B   192    ;				ld (hw_palette),a
                           B   193    ;				pop bc
                           B   194    				
                           B   195    ;--- end of test ------------------------------
                           B   196    
                           B   197    
003CB1 C5                  B   198    				push bc							003CB2 D5                  B   199    				push de							003CB3 E5                  B   200    				push hl							Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 152


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
                           B   201    							
003CB4 11000000            B   202    ms_loop			ld de,0		
003CB8 3A 9B 62 00         B   203    				ld a,(mouse_packet_index)		003CBC 5F                  B   204    				ld e,a
003CBD 21 97 62 00         B   205    				ld hl,mouse_packet	
003CC1 19                  B   206    				add hl,de
003CC2 ED3806              B   207    				in0 a,(port_mouse_data)
003CC5 77                  B   208    				ld (hl),a
                           B   209    								
003CC6 21 96 62 00         B   210    				ld hl,mouse_packet_size
003CCA 1C                  B   211    				inc e							003CCB 7B                  B   212    				ld a,e
003CCC BE                  B   213    				cp (hl)
003CCD 20 4F               B   214    				jr nz,msubpkt
                           B   215    
003CCF 3A 97 62 00         B   216    				ld a,(mouse_packet)				003CD3 4F                  B   217    				ld c,a	
003CD4 E607                B   218    				and 0111b
003CD6 32 9C 62 00         B   219    				ld (mouse_buttons),a
                           B   220    				
003CDA 11000000            B   221    				ld de,0							003CDE CB61                B   222    				bit 4,c
003CE0 28 01               B   223    				jr z,mxsignpos
003CE2 1B                  B   224    				dec de
003CE3 3A 98 62 00         B   225    mxsignpos		ld a,(mouse_packet+1)
003CE7 5F                  B   226    				ld e,a
003CE8 2A 9D 62 00         B   227    				ld hl,(mouse_disp_x)
003CEC 19                  B   228    				add hl,de
003CED 22 9D 62 00         B   229    				ld (mouse_disp_x),hl
                           B   230    				
003CF1 11000000            B   231    				ld de,0							003CF5 CB69                B   232    				bit 5,c
003CF7 28 01               B   233    				jr z,mysignpos
003CF9 1B                  B   234    				dec de
003CFA 3A 99 62 00         B   235    mysignpos		ld a,(mouse_packet+2)
003CFE 5F                  B   236    				ld e,a
003CFF 2A A0 62 00         B   237    				ld hl,(mouse_disp_y)			003D03 AF                  B   238    				xor a							003D04 ED52                B   239    				sbc hl,de
003D06 22 A0 62 00         B   240    				ld (mouse_disp_y),hl
                           B   241    				
003D0A 21 9A 62 00         B   242    				ld hl,mouse_packet+3			003D0E 3A A3 62 00         B   243    				ld a,(mouse_wheel)
003D12 86                  B   244    				add a,(hl)
003D13 32 A3 62 00         B   245    				ld (mouse_wheel),a
                           B   246    				
003D17 3E01                B   247    				ld a,1
003D19 32 A4 62 00         B   248    				ld (mouse_updated),a			                           B   249    				
003D1D AF                  B   250    				xor a
003D1E 32 9B 62 00         B   251    msubpkt			ld (mouse_packet_index),a
                           B   252    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 153


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
003D22 ED3807              B   253    				in0 a,(port_ps2_ctrl)			003D25 CB6F                B   254    				bit 5,a
003D27 20 8B               B   255    				jr nz,ms_loop				
                           B   256    				
003D29 E1                  B   257    				pop hl
003D2A D1                  B   258    				pop de
003D2B C1                  B   259    				pop bc
003D2C C9                  B   260    				ret
                           B   261    				
                           B   262    ;----------------------------------------------
                           B   263    ; ez80p NMI code v0.03
                           B   264    ;----------------------------------------------
                           B   265    
003D2D F5                  B   266    nmi_routine		push af							003D2E ED3805              B   267    				in0 a,(port_irq_flags)			003D31 CB77                B   268    				bit 6,a							003D33 20 09               B   269    				jr nz,freeze
003D35 3E20                B   270    				ld a,00100000b					003D37 ED3909              B   271    				out0 (port_clear_flags),a		003D3A F1                  B   272    				pop af
003D3B 5BED45              B   273    				retn.l
                           B   274    				
003D3E F1                  B   275    freeze			pop af
003D3F CD 7B 13 00         B   276    				call os_store_CPU_regs
                           B   277    				
003D43 21000000            B   278    				ld hl,0
003D47 39                  B   279    				add hl,sp
003D48 7E                  B   280    				ld a,(hl)						003D49 E601                B   281    				and 1
003D4B 32 F3 60 00         B   282    				ld (store_adl),a
003D4F 20 0A               B   283    				jr nz,adl_freeze
003D51 23                  B   284    				inc hl
003D52 5E                  B   285    				ld e,(hl)						003D53 23                  B   286    				inc hl
003D54 56                  B   287    				ld d,(hl)
003D55 CD FE 15 00         B   288    				call mbase_de
003D59 18 02               B   289    				jr got_pc
                           B   290    				
003D5B 33                  B   291    adl_freeze		inc sp
003D5C D1                  B   292    				pop de							003D5D ED53 E9 60 00       B   293    got_pc			ld (store_pc),de				                           B   294    				
003D62 CD 8F 3D 00         B   295    				call disable_button_nmi
003D66 3E40                B   296    				ld a,01000000b
003D68 ED3909              B   297    				out0 (port_clear_flags),a		003D6B 3E01                B   298    				ld a,1
003D6D 32 C0 60 00         B   299    				ld (frozen),a
003D71 C3 56 0A 00         B   300    				jp os_cold_start				                           B   301    
                           B   302    ;----------------------------------------------
                           B   303    
                           B   304    ;nmi_routine
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 154


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
                           B   305    ;
                           B   306    ;				push af							                           B   307    ;				push bc
                           B   308    ;				ld a,0ffh
                           B   309    ;				ld (hw_palette),a
                           B   310    ;				ld b,0
                           B   311    ;nmi_testlp2		djnz nmi_testlp2
                           B   312    ;				ld a,0
                           B   313    ;				ld (hw_palette),a
                           B   314    ;				pop bc
                           B   315    ;				ld a,01100000b
                           B   316    ;				out0 (port_clear_flags)
                           B   317    ;				pop af
                           B   318    ;				retn.l							                           B   319    
                           B   320    ;----------------------------------------------
                           B   321    
003D75                     B   322    set_nmi_vector
                           B   323    
003D75 3EC3                B   324    				ld a,0c3h						003D77 32660000            B   325    				ld (066h),a
003D7B 21 2D 3D 00         B   326    				ld hl,nmi_routine				003D7F 22670000            B   327    				ld (067h),hl
003D83 C9                  B   328    				ret
                           B   329    
                           B   330    ;----------------------------------------------
                           B   331    
003D84                     B   332    enable_button_nmi
                           B   333    
003D84 3E40                B   334    				ld a,01000000b
003D86 ED3909              B   335    				out0 (port_clear_flags),a		003D89 3EC0                B   336    				ld a,11000000b					003D8B ED3905              B   337    				out0 (port_irq_ctrl),a			003D8E C9                  B   338    				ret
                           B   339    
                           B   340    
003D8F                     B   341    disable_button_nmi
                           B   342    
003D8F 3E40                B   343    				ld a,01000000b					003D91 ED3905              B   344    				out0 (port_irq_ctrl),a
003D94 C9                  B   345    				ret
                           B   346    
                           B   347    
003D95                     B   348    disable_all_nmis
                           B   349    
003D95 3E60                B   350    				ld a,01100000b					003D97 ED3905              B   351    				out0 (port_irq_ctrl),a
003D9A C9                  B   352    				ret
                           B   353    				
                           B   354    ;----------------------------------------------
                           B   355    
                           B     0    	include		'ez80p_rs232_code.asm'
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 155


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_rs232_code.asm
                           B     1    ;----------------------------------------------
                           B     2    ; ez80p low level RS232 code v0.03 (ADL mode)
                           B     3    ;----------------------------------------------
                           B     4    		
003D9B                     B     5    receive_serial_byte
                           B     6    
                           B     7    ; If zero flag set on return OK, A = received b
                           B     8    ; Else timed out (and also A = error $83: time 
                           B     9    
003D9B C5                  B    10    				push bc
003D9C 3A 53 5F 00         B    11    				ld a,(serial_timeout)
003DA0 47                  B    12    				ld b,a
003DA1 3ECC                B    13    rx_set_timer	ld a,cch
003DA3 ED3981              B    14    				out0 (TMR0_RR_L),a				003DA6 3E0C                B    15    				ld a,0ch
003DA8 ED3982              B    16    				out0 (TMR0_RR_H),a				003DAB 3E03                B    17    				ld a,00000011b					003DAD ED3980              B    18    				out0 (TMR0_CTL),a				003DB0 ED3880              B    19    				in0 a,(TMR0_CTL)				                           B    20    				
003DB3 0EC5                B    21    rx_byte_lp		ld c,UART0_LSR					003DB5 ED7401              B    22    				tstio 1							003DB8 20 0E               B    23    				jr nz,rx_in_buffer
003DBA AF                  B    24    				xor a
003DBB B0                  B    25    				or b
003DBC 28 13               B    26    				jr z,rx_time_out
003DBE 0E80                B    27    				ld c,TMR0_CTL	
003DC0 ED7480              B    28    				tstio 128						003DC3 28 EE               B    29    				jr z,rx_byte_lp		
003DC5 05                  B    30    				dec b
003DC6 18 D9               B    31    				jr rx_set_timer
                           B    32    
003DC8 01C00000            B    33    rx_in_buffer	ld bc,UART0_RBR
003DCC ED78                B    34    				in a,(bc)						003DCE C1                  B    35    				pop bc
003DCF BF                  B    36    				cp a							003DD0 C9                  B    37    				ret
                           B    38    
003DD1 C1                  B    39    rx_time_out		pop bc
003DD2 3E83                B    40    				ld a,083h						003DD4 B7                  B    41    				or a							003DD5 C9                  B    42    				ret
                           B    43    
                           B    44    
                           B    45    
                           B    46    ;----------------------------------------------
                           B    47    
003DD6                     B    48    send_serial_byte
                           B    49    
                           B    50    ; set A to the byte to send
                           B    51    
003DD6 C5                  B    52    				push bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 156


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_rs232_code.asm
003DD7 0EC5                B    53    				ld c,UART0_LSR					003DD9 ED7420              B    54    rs232_swait		tstio 020h						003DDC 28 FB               B    55    				jr z,rs232_swait
003DDE 01C00000            B    56    				ld bc,UART0_THR
003DE2 ED79                B    57    				out (c),a						003DE4 C1                  B    58    				pop bc
003DE5 C9                  B    59    				ret
                           B    60    
                           B    61    ;----------------------------------------------
                           B    62    
003DE6                     B    63    send_serial_bytes
                           B    64    
                           B    65    ; set D to the first byte to send
                           B    66    ; and E to the second byte to send
                           B    67    
003DE6 7A                  B    68    				ld a,d
003DE7 CD D6 3D 00         B    69    				call send_serial_byte
003DEB 7B                  B    70    				ld a,e
003DEC CD D6 3D 00         B    71    				call send_serial_byte
003DF0 C9                  B    72    				ret
                           B    73    
                           B    74    ;----------------------------------------------
                           B    75    
003DF1                     B    76    hwsc_flush_serial_buffer
                           B    77    
003DF1 C5                  B    78    				push bc
003DF2 01C00000            B    79    				ld bc,UART0_RBR
003DF6 ED78                B    80    				in a,(bc)						003DF8 C1                  B    81    				pop bc
003DF9 C9                  B    82    				ret
                           B    83    
                           B    84    ;----------------------------------------------
                           B    85    		
                           B     0    	include		'ez80p_video_code.asm'
                           B     1    ;---------------------------------
                           B     2    ; ez80p-specific video code v0.10
                           B     3    ; Character Mode Routines
                           B     4    ;---------------------------------
                           B     5    
       00804000            B     6    charmap_addr	equ vram_a_addr+04000h			                           B     7    
003DFA                     B     8    set_charmap_parameters
                           B     9    
                           B    10    ;set
                           B    11    ; a = line/pixel doubling (bit 0 = line double,
                           B    12    ; b = columns
                           B    13    ; c = rows
                           B    14    
003DFA E603                B    15    				and 3
003DFC 32 24 5F 00         B    16    				ld (video_doubling),a
003E00 79                  B    17    				ld a,c
003E01 32 25 5F 00         B    18    				ld (charmap_rows),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 157


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003E05 78                  B    19    				ld a,b
003E06 32 28 5F 00         B    20    				ld (charmap_columns),a
003E0A 21000000            B    21    				ld hl,0
003E0E 69                  B    22    				ld l,c
003E0F 60                  B    23    				ld h,b
003E10 ED6C                B    24    				mlt hl
003E12 29                  B    25    				add hl,hl
003E13 22 CC 60 00         B    26    				ld (charmap_size),hl
003E17 11004080            B    27    				ld de,charmap_addr
003E1B 19                  B    28    				add hl,de
003E1C 22 C6 60 00         B    29    				ld (vram_a_os_highest),hl		                           B    30    				
003E20 CD 26 3E 00         B    31    				call os_set_video_hw_regs
003E24 AF                  B    32    				xor a
003E25 C9                  B    33    				ret
                           B    34    				
                           B    35    
003E26                     B    36    os_set_video_hw_regs
                           B    37    
003E26 3A 24 5F 00         B    38    				ld a,(video_doubling)
003E2A CB27                B    39    				sla a
003E2C F618                B    40    				or 00011000b
003E2E 320018FF            B    41    				ld (video_control),a			003E32 AF                  B    42    				xor a
003E33 320218FF            B    43    				ld (bgnd_palette_select),a
003E37 3E63                B    44    				ld a,99
003E39 320418FF            B    45    				ld (right_border_position),a
                           B    46    
003E3D DD210010 FF         B    47    				ld ix,tilemap_parameters		003E42 21004080            B    48    				ld hl,charmap_addr
003E46 DD2F00              B    49    				ld (ix),hl			   			                           B    50    
003E49 21020000            B    51    				ld hl,2
003E4D DD2F04              B    52    				ld (ix+04h),hl					                           B    53    				
003E50 21000008            B    54    				ld hl,80000h
003E54 11000000            B    55    				ld de,0
003E58 3A 28 5F 00         B    56    				ld a,(charmap_columns)
003E5C 5F                  B    57    				ld e,a
003E5D AF                  B    58    				xor a
003E5E ED52                B    59    				sbc hl,de
003E60 AF                  B    60    				xor a
003E61 ED52                B    61    				sbc hl,de
003E63 DD2F08              B    62    				ld (ix+08h),hl					                           B    63    				
003E66 21000000            B    64    				ld hl,0
003E6A DD2F0C              B    65    				ld (ix+0ch),hl					                           B    66    				
003E6D 3A 28 5F 00         B    67    				ld a,(charmap_columns)
003E71 3D                  B    68    				dec a
003E72 DD7710              B    69    				ld (ix+10h),a					                           B    70    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 158


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003E75 3E00                B    71    				ld a,0
003E77 DD7711              B    72    				ld (ix+11h),a					003E7A DD7712              B    73    				ld (ix+12h),a					                           B    74    
003E7D 21 FF 5E 00         B    75    				ld hl,pen_palette
003E81 CD 8B 3E 00         B    76    				call hswc_set_ui_colours
                           B    77    				
003E85 CD B6 40 00         B    78    				call hwsc_disable_sprites
                           B    79    				
003E89 AF                  B    80    				xor a							003E8A C9                  B    81    				ret
                           B    82    
                           B    83    ;----------------------------------------------
                           B    84    				
003E8B                     B    85    hswc_set_ui_colours
                           B    86    
003E8B 110000FF            B    87    				ld de,hw_palette
003E8F 01200000            B    88    				ld bc,16*2
003E93 EDB0                B    89    				ldir
003E95 AF                  B    90    				xor a							003E96 C9                  B    91    				ret
                           B    92    
                           B    93    
                           B    94    ;----------------------------------------------
                           B    95    
003E97                     B    96    hwsc_clear_screen
                           B    97    
003E97 21004080            B    98    				ld hl,charmap_addr				003E9B 3620                B    99    				ld (hl),32						003E9D 23                  B   100    				inc hl
003E9E CD BD 3E 00         B   101    				call get_fill_attr
003EA2 77                  B   102    				ld (hl),a
003EA3 23                  B   103    				inc hl
003EA4 EB                  B   104    				ex de,hl
003EA5 21004080            B   105    				ld hl,charmap_addr
003EA9 ED4B CC 60 00       B   106    				ld bc,(charmap_size)
003EAE 0B                  B   107    				dec bc
003EAF 0B                  B   108    				dec bc
003EB0 EDB0                B   109    				ldir
                           B   110    				
003EB2 01000000            B   111    				ld bc,0
003EB6 ED43 5E 61 00       B   112    				ld (cursor_y),bc
003EBB AF                  B   113    				xor a							003EBC C9                  B   114    				ret
                           B   115    				
                           B   116    				
003EBD D5                  B   117    get_fill_attr	push de
003EBE 3A FB 5E 00         B   118    				ld a,(current_pen)
003EC2 E60F                B   119    				and 0fh
003EC4 5F                  B   120    				ld e,a
003EC5 3A FD 5E 00         B   121    				ld a,(background_colour)
003EC9 0F                  B   122    				rrca
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 159


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003ECA 0F                  B   123    				rrca
003ECB 0F                  B   124    				rrca
003ECC 0F                  B   125    				rrca
003ECD E6F0                B   126    				and 0f0h
003ECF B3                  B   127    				or e
003ED0 D1                  B   128    				pop de
003ED1 C9                  B   129    				ret
                           B   130    				
                           B   131    
                           B   132    ;----------------------------------------------
                           B   133    
003ED2                     B   134    hwsc_scroll_up	
                           B   135    				
003ED2 C5                  B   136    				push bc
003ED3 D5                  B   137    				push de
003ED4 E5                  B   138    				push hl
                           B   139    
003ED5 2A CC 60 00         B   140    				ld hl,(charmap_size)
003ED9 ED5B 28 5F 00       B   141    				ld de,(charmap_columns)
003EDE AF                  B   142    				xor a
003EDF ED52                B   143    				sbc hl,de
003EE1 ED52                B   144    				sbc hl,de						003EE3 E5                  B   145    				push hl
003EE4 C1                  B   146    				pop bc							003EE5 21004080            B   147    				ld hl,charmap_addr
003EE9 E5                  B   148    				push hl
003EEA 19                  B   149    				add hl,de
003EEB 19                  B   150    				add hl,de
003EEC D1                  B   151    				pop de
003EED EDB0                B   152    				ldir
                           B   153    				
003EEF EB                  B   154    				ex de,hl						003EF0 E5                  B   155    				push hl
003EF1 3620                B   156    				ld (hl),32
003EF3 23                  B   157    				inc hl
003EF4 CD BD 3E 00         B   158    				call get_fill_attr
003EF8 77                  B   159    				ld (hl),a
003EF9 2A 28 5F 00         B   160    				ld hl,(charmap_columns)
003EFD 2B                  B   161    				dec hl
003EFE 29                  B   162    				add hl,hl
003EFF E5                  B   163    				push hl
003F00 C1                  B   164    				pop bc
003F01 E1                  B   165    				pop hl
003F02 E5                  B   166    				push hl
003F03 D1                  B   167    				pop de
003F04 13                  B   168    				inc de
003F05 13                  B   169    				inc de
003F06 EDB0                B   170    				ldir
                           B   171    				
003F08 E1                  B   172    				pop hl
003F09 D1                  B   173    				pop de
003F0A C1                  B   174    				pop bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 160


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003F0B AF                  B   175    				xor a							003F0C C9                  B   176    				ret
                           B   177    
                           B   178    
                           B   179    ;----------------------------------------------
                           B   180    
003F0D                     B   181    hwsc_plot_char
                           B   182    
                           B   183    ; Set:
                           B   184    ; ----
                           B   185    ; A = ascii char
                           B   186    ; B = x character coordinate 
                           B   187    ; C = y character coordinate
                           B   188    
003F0D E5                  B   189    				push hl							003F0E D5                  B   190    				push de
003F0F F5                  B   191    				push af
                           B   192    
003F10 3A 25 5F 00         B   193    				ld a,(charmap_rows)				003F14 3D                  B   194    				dec a
003F15 B9                  B   195    				cp c							003F16 38 08               B   196    				jr c,win_err
003F18 3A 28 5F 00         B   197    				ld a,(charmap_columns)
003F1C 3D                  B   198    				dec a
003F1D B8                  B   199    				cp b
003F1E 30 07               B   200    				jr nc,win_ok
003F20 F1                  B   201    win_err			pop af
003F21 D1                  B   202    				pop de
003F22 E1                  B   203    				pop hl
003F23 3E88                B   204    				ld a,88h						003F25 B7                  B   205    				or a
003F26 C9                  B   206    				ret
                           B   207    				
003F27 2A 28 5F 00         B   208    win_ok			ld hl,(charmap_columns)			003F2B 61                  B   209    				ld h,c
003F2C ED6C                B   210    				mlt hl
003F2E 11000000            B   211    				ld de,0
003F32 58                  B   212    				ld e,b
003F33 19                  B   213    				add hl,de
003F34 29                  B   214    				add hl,hl
003F35 11004080            B   215    				ld de,charmap_addr
003F39 19                  B   216    				add hl,de
003F3A F1                  B   217    				pop af
003F3B 77                  B   218    				ld (hl),a
003F3C 23                  B   219    				inc hl
003F3D 3A FB 5E 00         B   220    				ld a,(current_pen)
003F41 77                  B   221    				ld (hl),a
003F42 D1                  B   222    				pop de
003F43 E1                  B   223    				pop hl
003F44 AF                  B   224    				xor a
003F45 C9                  B   225    				ret
                           B   226    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 161


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
                           B   227    				
                           B   228    ;----------------------------------------------
                           B   229    
003F46                     B   230    hwsc_remove_cursor
                           B   231    
003F46 3A 21 5F 00         B   232    				ld a,(cursor_present)			003F4A B7                  B   233    				or a
003F4B C8                  B   234    				ret z
003F4C ED4B 5E 61 00       B   235    				ld bc,(cursor_y)
003F51 CD B4 3F 00         B   236    				call hwsc_get_charmap_addr_xy
003F55 3A 20 5F 00         B   237    				ld a,(char_under_cursor)
003F59 77                  B   238    				ld (hl),a
003F5A AF                  B   239    				xor a
003F5B 32 21 5F 00         B   240    				ld (cursor_present),a
003F5F C9                  B   241    				ret
                           B   242    
                           B   243    
003F60                     B   244    hwsc_draw_cursor
                           B   245    								
003F60 3A 21 5F 00         B   246    				ld a,(cursor_present)			003F64 B7                  B   247    				or a
003F65 C0                  B   248    				ret nz
003F66 3C                  B   249    				inc a
003F67 32 21 5F 00         B   250    				ld (cursor_present),a
                           B   251    				
003F6B ED4B 5E 61 00       B   252    				ld bc,(cursor_y)
003F70 CD B4 3F 00         B   253    				call hwsc_get_charmap_addr_xy
003F74 7E                  B   254    				ld a,(hl)						003F75 32 20 5F 00         B   255    				ld (char_under_cursor),a		003F79 36FF                B   256    				ld (hl),ffh						                           B   257    				
003F7B 11400000            B   258    				ld de,64						003F7F 57                  B   259    				ld d,a
003F80 ED5C                B   260    				mlt de
003F82 FD210000 80         B   261    				ld iy,vram_a_addr				003F87 FD19                B   262    				add iy,de						                           B   263    				
003F89 21400000            B   264    				ld hl,64
003F8D 3A 23 5F 00         B   265    				ld a,(cursor_image_char)
003F91 67                  B   266    				ld h,a
003F92 ED6C                B   267    				mlt hl
003F94 11000080            B   268    				ld de,vram_a_addr
003F98 19                  B   269    				add hl,de
                           B   270    				
003F99 DD21C03F 80         B   271    				ld ix,vram_a_addr+03fc0h
003F9E 11080000            B   272    				ld de,8
003FA2 0608                B   273    				ld b,8
003FA4 FD7E00              B   274    cur_loop		ld a,(iy)						003FA7 AE                  B   275    				xor (hl)						003FA8 DD7700              B   276    				ld (ix),a						003FAB FD19                B   277    				add iy,de
003FAD DD19                B   278    				add ix,de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 162


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003FAF 19                  B   279    				add hl,de
003FB0 10 F2               B   280    				djnz cur_loop
                           B   281    				
003FB2 AF                  B   282    				xor a
003FB3 C9                  B   283    				ret
                           B   284    				
                           B   285    
                           B   286    ;----------------------------------------------
                           B   287    
003FB4                     B   288    hwsc_get_charmap_addr_xy
                           B   289    
                           B   290    ; returns address of charmap in xHL for charact
                           B   291    ; and attrmap in xDE
                           B   292    				
003FB4 2A 28 5F 00         B   293    				ld hl,(charmap_columns)			003FB8 61                  B   294    				ld h,c
003FB9 ED6C                B   295    				mlt hl
003FBB 11000000            B   296    				ld de,0
003FBF 58                  B   297    				ld e,b
003FC0 19                  B   298    				add hl,de
003FC1 29                  B   299    				add hl,hl
003FC2 11004080            B   300    				ld de,charmap_addr
003FC6 19                  B   301    				add hl,de
003FC7 E5                  B   302    				push hl
003FC8 D1                  B   303    				pop de
003FC9 13                  B   304    				inc de
003FCA AF                  B   305    				xor a
003FCB C9                  B   306    				ret
                           B   307    								
                           B   308    ;----------------------------------------------
                           B   309    
003FCC                     B   310    hwsc_chars_left
                           B   311    
                           B   312    ; moves characters (in character map) on the cu
                           B   313    
003FCC E5                  B   314    				push hl
003FCD D5                  B   315    				push de
003FCE C5                  B   316    				push bc
                           B   317    				
003FCF 2A 28 5F 00         B   318    				ld hl,(charmap_columns)
003FD3 3A 5E 61 00         B   319    				ld a,(cursor_y)
003FD7 67                  B   320    				ld h,a
003FD8 ED6C                B   321    				mlt hl
003FDA 11000000            B   322    				ld de,0
003FDE 58                  B   323    				ld e,b
003FDF 19                  B   324    				add hl,de
003FE0 29                  B   325    				add hl,hl
003FE1 11004080            B   326    				ld de,charmap_addr
003FE5 19                  B   327    				add hl,de
                           B   328    				
003FE6 3A 28 5F 00         B   329    				ld a,(charmap_columns)
003FEA 90                  B   330    				sub b
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 163


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003FEB CB27                B   331    				sla a
003FED 01000000            B   332    				ld bc,0
003FF1 4F                  B   333    				ld c,a
003FF2 E5                  B   334    				push hl
003FF3 D1                  B   335    				pop de
003FF4 1B                  B   336    				dec de
003FF5 1B                  B   337    				dec de
003FF6 EDB0                B   338    				ldir
                           B   339    				
003FF8 3E20                B   340    				ld a,32						;pu
003FFA 12                  B   341    				ld (de),a
003FFB 13                  B   342    				inc de
003FFC CD BD 3E 00         B   343    				call get_fill_attr
004000 12                  B   344    				ld (de),a
                           B   345    				
004001 C1                  B   346    				pop bc
004002 D1                  B   347    				pop de
004003 E1                  B   348    				pop hl
004004 C9                  B   349    				ret
                           B   350    
                           B   351    
                           B   352    ;----------------------------------------------
                           B   353    
                           B   354    
004005                     B   355    hwsc_chars_right
                           B   356    
                           B   357    ; moves characters on current line right from c
                           B   358    
004005 C5                  B   359    				push bc
004006 D5                  B   360    				push de
004007 E5                  B   361    				push hl
                           B   362    	
004008 21 5F 61 00         B   363    				ld hl,cursor_x				
00400C 3A 28 5F 00         B   364    				ld a,(charmap_columns)
004010 3D                  B   365    				dec a
004011 BE                  B   366    				cp (hl)			
004012 28 30               B   367    				jr z,chright_end
004014 46                  B   368    				ld b,(hl)
                           B   369    				
004015 2A 28 5F 00         B   370    				ld hl,(charmap_columns)
004019 3A 5E 61 00         B   371    				ld a,(cursor_y)
00401D 3C                  B   372    				inc a							00401E 67                  B   373    				ld h,a
00401F ED6C                B   374    				mlt hl
004021 29                  B   375    				add hl,hl
004022 11004080            B   376    				ld de,charmap_addr
004026 19                  B   377    				add hl,de					
004027 2B                  B   378    				dec hl							004028 E5                  B   379    				push hl
004029 D1                  B   380    				pop de							00402A 2B                  B   381    				dec hl
00402B 2B                  B   382    				dec hl							Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 164


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
00402C 3A 28 5F 00         B   383    				ld a,(charmap_columns)
004030 90                  B   384    				sub b
004031 3D                  B   385    				dec a
004032 CB27                B   386    				sla a
004034 01000000            B   387    				ld bc,0
004038 4F                  B   388    				ld c,a							004039 EDB8                B   389    				lddr
00403B 23                  B   390    				inc hl							00403C 3620                B   391    				ld (hl),32
00403E 23                  B   392    				inc hl
00403F CD BD 3E 00         B   393    				call get_fill_attr
004043 77                  B   394    				ld (hl),a
                           B   395    							
004044 E1                  B   396    chright_end		pop hl	
004045 D1                  B   397    				pop de
004046 C1                  B   398    				pop bc
004047 C9                  B   399    				ret
                           B   400    
                           B   401    ;----------------------------------------------
                           B   402    
                           B   403    
004048                     B   404    hwsc_charline_to_command_string	
                           B   405    				
                           B   406    				
004048 2A 28 5F 00         B   407    				ld hl,(charmap_columns)			00404C 3A 5E 61 00         B   408    				ld a,(cursor_y)
004050 67                  B   409    				ld h,a
004051 ED6C                B   410    				mlt hl
004053 29                  B   411    				add hl,hl
004054 11004080            B   412    				ld de,charmap_addr
004058 19                  B   413    				add hl,de
004059 11 7C 61 00         B   414    				ld de,commandstring
00405D 0650                B   415    				ld b,max_buffer_chars			00405F 7E                  B   416    copy_to_cmdline	ld a,(hl)
004060 12                  B   417    				ld (de),a
004061 13                  B   418    				inc de
004062 23                  B   419    				inc hl
004063 23                  B   420    				inc hl
004064 10 F9               B   421    				djnz copy_to_cmdline
004066 C9                  B   422    				ret
                           B   423    
                           B   424    ;----------------------------------------------
                           B   425    
                           B   426    
004067 C5                  B   427    hwsc_wait_vrt	push bc
                           B   428    
004068 0E01                B   429    				ld c,1
00406A ED0909              B   430    				out0 (port_clear_flags),c
                           B   431    
00406D 0E01                B   432    				ld c,port_hw_flags
00406F ED7420              B   433    ewaitvrtlp1		tstio 1<<vrt
004072 28 FB               B   434    				jr z,ewaitvrtlp1
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 165


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
                           B   435    				
004074 C1                  B   436    				pop bc
004075 BF                  B   437    				cp a							004076 C9                  B   438    				ret
                           B   439    
                           B   440    
                           B   441    ;----------------------------------------------
                           B   442    
                           B     0    	include		'ez80p_misc_code.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;Misc eZ80p specific routines v0.05 (ADL versio
                           B     3    ;----------------------------------------------
                           B     4    
004077                     B     5    hwsc_default_hw_settings
                           B     6    
                           B     7    ; Set up eZ80 Wait states
                           B     8    
004077 3E48                B     9    					ld a,01001000b				004079 ED39AA              B    10    					out0 (CS0_CTL),a
00407C 3E00                B    11    					ld a,000h					00407E ED39A8              B    12    					out0 (CS0_LBR),a
004081 3EFF                B    13    					ld a,0ffh	
004083 ED39A9              B    14    					out0 (CS0_UBR),a			                           B    15    
004086 3E58                B    16    					ld a,01011000b
004088 ED39AD              B    17    					out0 (CS1_CTL),a			00408B 3E00                B    18    					ld a,0
00408D ED39AB              B    19    					out0 (CS1_LBR),a			                           B    20    
                           B    21    ;set up eZ80 GPIO ports
                           B    22    
004090 3EFF                B    23    					ld a,0ffh
004092 ED399F              B    24    					out0 (PC_DDR),a				004095 AF                  B    25    					xor a
004096 ED39A0              B    26    					out0 (PC_ALT1),a
004099 ED39A1              B    27    					out0 (PC_ALT2),a
                           B    28    					
00409C 3EFF                B    29    					ld a,0ffh					00409E ED39A3              B    30    					out0 (PD_DDR),a				0040A1 AF                  B    31    					xor a	
0040A2 ED39A4              B    32    					out0 (PD_ALT1),a			0040A5 3E0F                B    33    					ld a,00fh				
0040A7 ED39A5              B    34    					out0 (PD_ALT2),a			                           B    35    
                           B    36    ;set up eZ80 timer
                           B    37    
0040AA ED3892              B    38    					in0 a,(TMR_ISS)
0040AD E6FC                B    39    					and 11111100b
0040AF F601                B    40    					or  00000001b
0040B1 ED3992              B    41    					out0 (TMR_ISS),a			                           B    42    					
0040B4 AF                  B    43    					xor a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 166


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
0040B5 C9                  B    44    					ret
                           B    45    
                           B    46    
                           B    47    ;----------------------------------------------
                           B    48    
0040B6                     B    49    hwsc_disable_sprites
                           B    50    
0040B6 AF                  B    51    					xor a
0040B7 320118FF            B    52    					ld (sprite_control),a		0040BB C9                  B    53    					ret
                           B    54    					
                           B    55    ;----------------------------------------------
                           B    56    
                           B    57    
0040BC 11000000            B    58    hwsc_get_version	ld de,0
0040C0 0610                B    59    					ld b,16
0040C2 78                  B    60    gethwvlp			ld a,b
0040C3 3D                  B    61    					dec a
0040C4 ED3908              B    62    					out0 (port_selector),a		0040C7 DB01                B    63    					in a,(port_hw_flags)		0040C9 CB27                B    64    					sla a
0040CB CB13                B    65    					rl e
0040CD CB12                B    66    					rl d
0040CF 10 F1               B    67    					djnz gethwvlp				                           B    68    									
0040D1 21360000            B    69    					ld hl,prose_version
0040D5 BF                  B    70    					cp a						0040D6 C9                  B    71    					ret
                           B    72    
                           B    73    
                           B    74    
                           B    75    ;----------------------------------------------
                           B    76    ; Timer related 
                           B    77    ;----------------------------------------------
                           B    78    
0040D7                     B    79    hwsc_time_delay
                           B    80    
                           B    81    ; set DE to 32768Hz ticks to wait
                           B    82    
0040D7 CD E3 40 00         B    83    					call set_timeout
0040DB CD F4 40 00         B    84    twaitlp				call test_timeout
0040DF 28 FA               B    85    					jr z,twaitlp
0040E1 AF                  B    86    					xor a						0040E2 C9                  B    87    					ret			
                           B    88    
                           B    89    ;----------------------------------------------
                           B    90    
0040E3 7B                  B    91    set_timeout			ld a,e						0040E4 ED3981              B    92    					out0 (TMR0_RR_L),a			0040E7 7A                  B    93    					ld a,d
0040E8 ED3982              B    94    					out0 (TMR0_RR_H),a			0040EB 3E03                B    95    					ld a,00000011b				Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 167


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
0040ED ED3980              B    96    					out0 (TMR0_CTL),a			0040F0 ED3880              B    97    					in0 a,(TMR0_CTL)			0040F3 C9                  B    98    					ret
                           B    99    			
0040F4 ED3880              B   100    test_timeout		in0 a,(TMR0_CTL)			0040F7 CB7F                B   101    					bit 7,a
0040F9 C9                  B   102    					ret
                           B   103    			
                           B   104    ;----------------------------------------------
                           B   105    
0040FA                     B   106    hwsc_read_rtc
0040FA D5                  B   107    					push de
0040FB C5                  B   108    					push bc
0040FC 0EE0                B   109    hwsc_rtc_rlp		ld c,RTC_SEC
0040FE 0608                B   110    					ld b,8
004100 21 B9 60 00         B   111    					ld hl,time_data
004104 ED92                B   112    					inimr						004106 0EE0                B   113    					ld c,RTC_SEC
004108 0600                B   114    					ld b,0
00410A 1E08                B   115    					ld e,8
00410C 21 B9 60 00         B   116    					ld hl,time_data
004110 ED78                B   117    timevloop			in a,(bc)					004112 BE                  B   118    					cp (hl)						004113 20 E7               B   119    					jr nz,hwsc_rtc_rlp			004115 23                  B   120    					inc hl
004116 0C                  B   121    					inc c
004117 1D                  B   122    					dec e
004118 20 F6               B   123    					jr nz,timevloop
00411A 21 B9 60 00         B   124    					ld hl,time_data
00411E C1                  B   125    					pop bc
00411F D1                  B   126    					pop de
004120 BF                  B   127    					cp a						004121 C9                  B   128    					ret
                           B   129    
                           B   130    
004122                     B   131    hwsc_write_rtc	
                           B   132    
                           B   133    ; set HL to location of BCD data for RTC: sec/m
                           B   134    
004122 E5                  B   135    					push hl
004123 C5                  B   136    					push bc
004124 3E21                B   137    					ld a,00100001b				004126 ED39ED              B   138    					out0 (RTC_CTRL),a
004129 0EE0                B   139    					ld c,RTC_SEC
00412B 0608                B   140    					ld b,8
00412D ED93                B   141    					otimr
00412F 3E20                B   142    					ld a,00100000b				004131 ED39ED              B   143    					out0 (RTC_CTRL),a
004134 C1                  B   144    					pop bc
004135 E1                  B   145    					pop hl
004136 BF                  B   146    					cp a						004137 C9                  B   147    					ret	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 168


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B   148    
                           B   149    
                           B   150    ;----------------------------------------------
                           B   151    ; INIT KEYBOARD ROUTINE 
                           B   152    ;----------------------------------------------
                           B   153    
                           B   154    ; ZF set and A = 0 if all OK, else error code i
                           B   155    
004138                     B   156    init_keyboard
                           B   157    
004138 11004000            B   158    			ld de,16384							00413C CD D7 40 00         B   159    			call hwsc_time_delay
004140 F3                  B   160    			di
004141 CD F6 41 00         B   161    			call purge_keyboard
004145 CD 4F 41 00         B   162    			call rs_keyboard
004149 FB                  B   163    			ei
00414A D0                  B   164    			ret nc
00414B 3E8B                B   165    			ld a,08bh							00414D B7                  B   166    			or a
00414E C9                  B   167    			ret
                           B   168    			
                           B   169    			
00414F                     B   170    rs_keyboard
                           B   171    
00414F 3EFF                B   172    			ld a,0ffh
004151 CD 6E 41 00         B   173    			call write_to_keyboard
004155 30 04               B   174    			jr nc,kb_connected
004157 3E8A                B   175    			ld a,08ah							004159 B7                  B   176    			or a
00415A C9                  B   177    			ret
                           B   178    
00415B                     B   179    kb_connected
                           B   180    			
00415B 0605                B   181    			ld b,5
00415D C5                  B   182    kb_initlp	push bc
00415E CD DA 41 00         B   183    			call wait_kb_byte					004162 C1                  B   184    			pop bc
004163 D8                  B   185    			ret c
004164 FEAA                B   186    			cp 0aah
004166 28 04               B   187    			jr z,kb_postok
004168 10 F3               B   188    			djnz kb_initlp						00416A 37                  B   189    			scf									00416B C9                  B   190    			ret
                           B   191    			
                           B   192    			
00416C AF                  B   193    kb_postok	xor a
00416D C9                  B   194    			ret
                           B   195    	
                           B   196    	
                           B   197    ;----------------------------------------------
                           B   198    				
00416E                     B   199    write_to_keyboard
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 169


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B   200    
                           B   201    ; Put byte to send to keyboard in A
                           B   202    
00416E 4F                  B   203    			ld c,a								00416F 3E01                B   204    			ld a,01b							004171 ED3907              B   205    			out0 (port_ps2_ctrl),a
                           B   206    
004174 110A0000            B   207    			ld de,10
004178 CD D7 40 00         B   208    			call hwsc_time_delay				                           B   209    
00417C 3E03                B   210    			ld a,11b
00417E ED3907              B   211    			out0 (port_ps2_ctrl),a				                           B   212    			
004181 3E02                B   213    			ld a,10b
004183 ED3907              B   214    			out0 (port_ps2_ctrl),a				                           B   215    			
004186 CD 56 43 00         B   216    			call wait_kb_clk_high
                           B   217    			
00418A 1601                B   218    			ld d,1								00418C 0608                B   219    			ld b,8								00418E CD 29 43 00         B   220    kdoloop		call wait_kb_clk_low	
004192 D8                  B   221    			ret c
004193 AF                  B   222    			xor a
004194 CBCF                B   223    			set 1,a
004196 CB41                B   224    			bit 0,c
004198 28 03               B   225    			jr z,kdbzero
00419A CB8F                B   226    			res 1,a
00419C 14                  B   227    			inc d
00419D ED3907              B   228    kdbzero		out0 (port_ps2_ctrl),a				0041A0 CD 56 43 00         B   229    			call wait_kb_clk_high
0041A4 D8                  B   230    			ret c
0041A5 CB19                B   231    			rr c
0041A7 10 E5               B   232    			djnz kdoloop
                           B   233    
0041A9 CD 29 43 00         B   234    			call wait_kb_clk_low
0041AD D8                  B   235    			ret c
0041AE AF                  B   236    			xor a
0041AF CB42                B   237    			bit 0,d
0041B1 20 02               B   238    			jr nz,kparone
0041B3 CBCF                B   239    			set 1,a
0041B5 ED3907              B   240    kparone		out0 (port_ps2_ctrl),a				0041B8 CD 56 43 00         B   241    			call wait_kb_clk_high
0041BC D8                  B   242    			ret c
                           B   243    			
0041BD CD 29 43 00         B   244    			call wait_kb_clk_low
0041C1 D8                  B   245    			ret c
0041C2 AF                  B   246    			xor a
0041C3 ED3907              B   247    			out0 (port_ps2_ctrl),a				                           B   248    
0041C6 CD 25 43 00         B   249    			call wait_kb_data_low				0041CA D8                  B   250    			ret c
0041CB CD 29 43 00         B   251    			call wait_kb_clk_low				Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 170


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
0041CF D8                  B   252    			ret c
                           B   253    				
0041D0 CD 52 43 00         B   254    			call wait_kb_data_high				0041D4 D8                  B   255    			ret c
0041D5 CD 56 43 00         B   256    			call wait_kb_clk_high				0041D9 C9                  B   257    			ret 
                           B   258    
                           B   259    
                           B   260    ;----------------------------------------------
                           B   261    
                           B   262    
0041DA                     B   263    wait_kb_byte
                           B   264    
0041DA 11008000            B   265    			ld de,8000h
0041DE CD E3 40 00         B   266    			call set_timeout					                           B   267    
0041E2 ED3807              B   268    wait_kloop	in0 a,(port_ps2_ctrl)
0041E5 CB67                B   269    			bit 4,a
0041E7 20 08               B   270    			jr nz,rec_kbyte
                           B   271    			
0041E9 CD F4 40 00         B   272    			call test_timeout
0041ED 28 F3               B   273    			jr z,wait_kloop
0041EF 37                  B   274    			scf									0041F0 C9                  B   275    			ret
                           B   276    			
0041F1 ED3802              B   277    rec_kbyte	in0 a,(port_keyboard_data)			0041F4 B7                  B   278    			or a
0041F5 C9                  B   279    			ret
                           B   280    
                           B   281    
                           B   282    ;----------------------------------------------
                           B   283    
0041F6                     B   284    purge_keyboard
                           B   285    			
0041F6 ED3807              B   286    			in0 a,(port_ps2_ctrl)
0041F9 CB67                B   287    			bit 4,a
0041FB C8                  B   288    			ret z
0041FC ED3802              B   289    			in0 a,(port_keyboard_data)			0041FF 18 F5               B   290    			jr purge_keyboard
                           B   291    
                           B   292    
                           B   293    
                           B   294    ;----------------------------------------------
                           B   295    ; INIT MOUSE ROUTINE 
                           B   296    ;----------------------------------------------
                           B   297    
                           B   298    ; ZF set and A = 0 if all OK, else error code i
                           B   299    
004201                     B   300    init_mouse		
004201 F3                  B   301    			di
004202 CD 1A 43 00         B   302    			call purge_mouse
004206 CD 10 42 00         B   303    			call rs_mouse
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 171


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
00420A FB                  B   304    			ei
00420B D0                  B   305    			ret nc
00420C 3E8B                B   306    			ld a,08bh							00420E B7                  B   307    			or a
00420F C9                  B   308    			ret
                           B   309    
                           B   310    
004210                     B   311    rs_mouse
004210 3EFF                B   312    			ld a,0ffh							004212 CD 92 42 00         B   313    			call write_to_mouse		
004216 30 04               B   314    			jr nc,mouse_connected
004218 3E8A                B   315    			ld a,08ah							00421A B7                  B   316    			or a
00421B C9                  B   317    			ret
                           B   318    
                           B   319    
00421C                     B   320    mouse_connected
                           B   321    
00421C 0605                B   322    			ld b,5
00421E C5                  B   323    ms_initlp	push bc
00421F CD FE 42 00         B   324    			call wait_mouse_byte				004223 C1                  B   325    			pop bc
004224 D8                  B   326    			ret c
004225 FEAA                B   327    			cp 0aah
004227 28 04               B   328    			jr z,ms_postok
004229 10 F3               B   329    			djnz ms_initlp
00422B 18 43               B   330    			jr bad_mouse
                           B   331    			
00422D CD FE 42 00         B   332    ms_postok	call wait_mouse_byte				004231 D8                  B   333    			ret c
004232 B7                  B   334    			or a
004233 20 3B               B   335    			jr nz,bad_mouse						                           B   336    			
004235 3E03                B   337    			ld a,3
004237 32 96 62 00         B   338    			ld (mouse_packet_size),a
                           B   339    
00423B 21 76 5F 00         B   340    			ld hl,intellimouse_seq
00423F 0606                B   341    			ld b,6
004241 CD 74 42 00         B   342    			call mouse_sequence
004245 D8                  B   343    			ret c
                           B   344    			
004246 3EF2                B   345    			ld a,0f2h
004248 CD 83 42 00         B   346    			call write_mouse_wait_ack			00424C D8                  B   347    			ret c
00424D CD FE 42 00         B   348    			call wait_mouse_byte				004251 D8                  B   349    			ret c
004252 32 95 62 00         B   350    			ld (mouse_id),a
004256 B7                  B   351    			or a								004257 28 0A               B   352    			jr z,standard_mouse
004259 FE03                B   353    			cp 3
00425B 20 13               B   354    			jr nz,bad_mouse						00425D 3E04                B   355    			ld a,4
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 172


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
00425F 32 96 62 00         B   356    			ld (mouse_packet_size),a
                           B   357    
004263                     B   358    standard_mouse
                           B   359    		
004263 21 7C 5F 00         B   360    			ld hl,mouse_settings_seq
004267 0606                B   361    			ld b,6
004269 CD 74 42 00         B   362    			call mouse_sequence
00426D D8                  B   363    			ret c
00426E AF                  B   364    			xor a								00426F C9                  B   365    			ret
                           B   366    
                           B   367    
004270 3E89                B   368    bad_mouse	ld a,089h							004272 B7                  B   369    			or a
004273 C9                  B   370    			ret
                           B   371    
                           B   372    
004274                     B   373    mouse_sequence
                           B   374    
004274 7E                  B   375    mseqlp		ld a,(hl)
004275 E5                  B   376    			push hl
004276 C5                  B   377    			push bc
004277 CD 83 42 00         B   378    			call write_mouse_wait_ack
00427B C1                  B   379    			pop bc
00427C E1                  B   380    			pop hl
00427D D8                  B   381    			ret c
00427E 23                  B   382    			inc hl
00427F 10 F3               B   383    			djnz mseqlp
004281 AF                  B   384    			xor a
004282 C9                  B   385    			ret
                           B   386    
                           B   387    
004283                     B   388    write_mouse_wait_ack
                           B   389    			
004283 CD 92 42 00         B   390    			call write_to_mouse
004287 D8                  B   391    			ret c
004288 CD FE 42 00         B   392    			call wait_mouse_byte				00428C D8                  B   393    			ret c
00428D FEFA                B   394    			cp 0fah								00428F C8                  B   395    			ret z
004290 37                  B   396    			scf
004291 C9                  B   397    			ret
                           B   398    			
                           B   399    ;----------------------------------------------
                           B   400    				
004292                     B   401    write_to_mouse
                           B   402    
                           B   403    ; Put byte to send to mouse in A
                           B   404    
004292 4F                  B   405    			ld c,a								004293 3E04                B   406    			ld a,0100b							004295 ED3907              B   407    			out0 (port_ps2_ctrl),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 173


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B   408    
004298 110A0000            B   409    			ld de,10
00429C CD D7 40 00         B   410    			call hwsc_time_delay				                           B   411    
0042A0 3E0C                B   412    			ld a,1100b
0042A2 ED3907              B   413    			out0 (port_ps2_ctrl),a				                           B   414    			
0042A5 3E08                B   415    			ld a,1000b
0042A7 ED3907              B   416    			out0 (port_ps2_ctrl),a				                           B   417    			
0042AA CD 5E 43 00         B   418    			call wait_mouse_clk_high
                           B   419    			
0042AE 1601                B   420    			ld d,1								0042B0 0608                B   421    			ld b,8								0042B2 CD 31 43 00         B   422    mdoloop		call wait_mouse_clk_low	
0042B6 D8                  B   423    			ret c
0042B7 AF                  B   424    			xor a
0042B8 CBDF                B   425    			set 3,a
0042BA CB41                B   426    			bit 0,c
0042BC 28 03               B   427    			jr z,mdbzero
0042BE CB9F                B   428    			res 3,a
0042C0 14                  B   429    			inc d
0042C1 ED3907              B   430    mdbzero		out0 (port_ps2_ctrl),a				0042C4 CD 5E 43 00         B   431    			call wait_mouse_clk_high
0042C8 D8                  B   432    			ret c
0042C9 CB19                B   433    			rr c
0042CB 10 E5               B   434    			djnz mdoloop
                           B   435    
0042CD CD 31 43 00         B   436    			call wait_mouse_clk_low
0042D1 D8                  B   437    			ret c
0042D2 AF                  B   438    			xor a
0042D3 CB42                B   439    			bit 0,d
0042D5 20 02               B   440    			jr nz,parone
0042D7 CBDF                B   441    			set 3,a
0042D9 ED3907              B   442    parone		out0 (port_ps2_ctrl),a				0042DC CD 5E 43 00         B   443    			call wait_mouse_clk_high
0042E0 D8                  B   444    			ret c
                           B   445    			
0042E1 CD 31 43 00         B   446    			call wait_mouse_clk_low
0042E5 D8                  B   447    			ret c
0042E6 AF                  B   448    			xor a
0042E7 ED3907              B   449    			out0 (port_ps2_ctrl),a				                           B   450    
0042EA CD 2D 43 00         B   451    			call wait_mouse_data_low			0042EE D8                  B   452    			ret c
0042EF CD 31 43 00         B   453    			call wait_mouse_clk_low				0042F3 D8                  B   454    			ret c
                           B   455    				
0042F4 CD 5A 43 00         B   456    			call wait_mouse_data_high			0042F8 D8                  B   457    			ret c
0042F9 CD 5E 43 00         B   458    			call wait_mouse_clk_high			0042FD C9                  B   459    			ret 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 174


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B   460    
                           B   461    ;----------------------------------------------
                           B   462    
                           B   463    
0042FE                     B   464    wait_mouse_byte
                           B   465    
0042FE 11008000            B   466    			ld de,8000h
004302 CD E3 40 00         B   467    			call set_timeout					                           B   468    
004306 ED3807              B   469    wait_mloop	in0 a,(port_ps2_ctrl)
004309 CB6F                B   470    			bit 5,a
00430B 20 08               B   471    			jr nz,rec_mbyte
                           B   472    			
00430D CD F4 40 00         B   473    			call test_timeout
004311 28 F3               B   474    			jr z,wait_mloop
004313 37                  B   475    			scf									004314 C9                  B   476    			ret
                           B   477    			
004315 ED3806              B   478    rec_mbyte	in0 a,(port_mouse_data)				004318 B7                  B   479    			or a
004319 C9                  B   480    			ret
                           B   481    
                           B   482    ;----------------------------------------------
                           B   483    
00431A                     B   484    purge_mouse
                           B   485    			
00431A ED3807              B   486    			in0 a,(port_ps2_ctrl)
00431D CB6F                B   487    			bit 5,a
00431F C8                  B   488    			ret z
004320 ED3806              B   489    			in0 a,(port_mouse_data)			; r
004323 18 F5               B   490    			jr purge_mouse
                           B   491    
                           B   492    
                           B   493    ;----------------------------------------------
                           B   494    
                           B   495    
004325                     B   496    wait_kb_data_low
                           B   497    
004325 3E02                B   498    			ld a,2
004327 18 0A               B   499    			jr test_lo_ps2
                           B   500    			
004329                     B   501    wait_kb_clk_low
                           B   502    
004329 3E01                B   503    			ld a,1
00432B 18 06               B   504    			jr test_lo_ps2			
                           B   505    
00432D                     B   506    wait_mouse_data_low
                           B   507    
00432D 3E08                B   508    			ld a,8
00432F 18 02               B   509    			jr test_lo_ps2
                           B   510    
004331                     B   511    wait_mouse_clk_low
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 175


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B   512    
004331 3E04                B   513    			ld a,4
                           B   514    
004333 C5                  B   515    test_lo_ps2	push bc
004334 D5                  B   516    			push de
004335 4F                  B   517    			ld c,a
004336 11004000            B   518    			ld de,04000h					; a
00433A CD E3 40 00         B   519    			call set_timeout
                           B   520    
00433E CD F4 40 00         B   521    nkb_lw		call test_timeout				; t
004342 28 04               B   522    			jr z,nkb_lnto
004344 D1                  B   523    			pop de
004345 C1                  B   524    			pop bc
004346 37                  B   525    			scf								; c
004347 C9                  B   526    			ret
004348 ED3807              B   527    nkb_lnto	in0 a,(port_ps2_ctrl)
00434B A1                  B   528    			and c
00434C 20 F0               B   529    			jr nz,nkb_lw
                           B   530    					
00434E D1                  B   531    			pop de
00434F C1                  B   532    			pop bc
004350 AF                  B   533    			xor a
004351 C9                  B   534    			ret					
                           B   535    
                           B   536    
                           B   537    
                           B   538    
004352                     B   539    wait_kb_data_high
                           B   540    
004352 3E02                B   541    			ld a,2
004354 18 0A               B   542    			jr test_hi_ps2
                           B   543    			
004356                     B   544    wait_kb_clk_high
                           B   545    
004356 3E01                B   546    			ld a,1
004358 18 06               B   547    			jr test_hi_ps2
                           B   548    
                           B   549    
00435A                     B   550    wait_mouse_data_high
                           B   551    			
00435A 3E08                B   552    			ld a,8
00435C 18 02               B   553    			jr test_hi_ps2
                           B   554    			 
00435E                     B   555    wait_mouse_clk_high
                           B   556    
00435E 3E04                B   557    			ld a,4
                           B   558    
004360 C5                  B   559    test_hi_ps2	push bc
004361 D5                  B   560    			push de
004362 4F                  B   561    			ld c,a
004363 11004000            B   562    			ld de,04000h					; a
004367 CD E3 40 00         B   563    			call set_timeout
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 176


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B   564    
00436B CD F4 40 00         B   565    nkb_hw		call test_timeout				; t
00436F 28 04               B   566    			jr z,nkb_hnto
004371 D1                  B   567    			pop de
004372 C1                  B   568    			pop bc
004373 37                  B   569    			scf								; c
004374 C9                  B   570    			ret
004375 ED3807              B   571    nkb_hnto	in0 a,(port_ps2_ctrl)
004378 A1                  B   572    			and c
004379 28 F0               B   573    			jr z,nkb_hw
                           B   574    					
00437B D1                  B   575    			pop de
00437C C1                  B   576    			pop bc
00437D AF                  B   577    			xor a							; c
00437E C9                  B   578    			ret
                           B   579    
                           B   580    
                           B   581    ;==============================================
                           B   582    
00437F                     B   583    hwsc_play_audio
                           B   584    
                           B   585    ; set HL register to location of an audio data 
                           B   586    
                           B   587    ; 0 - start 
                           B   588    ; 3 - length
                           B   589    ; 6 - loop start
                           B   590    ; 9 - loop length
                           B   591    ; c - frequency constant
                           B   592    ; e - volume
                           B   593    
                           B   594    ; set C register to set channels wave is to pla
                           B   595    
00437F E5                  B   596    				push hl
004380 FDE1                B   597    				pop iy
004382 DD210014 FF         B   598    				ld ix,hw_audio_registers
004387 CD BC 43 00         B   599    				call audio_reg_wait				                           B   600    				
00438B 0608                B   601    				ld b,8
00438D CB39                B   602    audchanloop		srl c
00438F 30 24               B   603    				jr nc,not_this_chan
                           B   604    				
004391 FD1700              B   605    				ld de,(iy)
004394 DD1F00              B   606    				ld (ix),de						                           B   607    
004397 FD1703              B   608    				ld de,(iy+3)
00439A DD1F04              B   609    				ld (ix+04h),de					                           B   610    				
00439D FD170C              B   611    				ld de,(iy+0ch)
0043A0 DD1F08              B   612    				ld (ix+08h),de					                           B   613    				
0043A3 FD5E0E              B   614    				ld e,(iy+0eh)
0043A6 DD1F0C              B   615    				ld (ix+0ch),de					Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 177


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B   616    				
0043A9 FD1706              B   617    				ld de,(iy+6)
0043AC DD1F10              B   618    				ld (ix+10h),de					                           B   619    				
0043AF FD1709              B   620    				ld de,(iy+9)
0043B2 DD1F14              B   621    				ld (ix+14h),de					                           B   622    
0043B5                     B   623    not_this_chan	
0043B5 ED3220              B   624    				lea ix,ix+20h			
0043B8 10 D3               B   625    				djnz audchanloop
0043BA AF                  B   626    				xor a
0043BB C9                  B   627    				ret
                           B   628    
                           B   629    
                           B   630    ;----------------------------------------------
                           B   631    
0043BC                     B   632    audio_reg_wait	
                           B   633    
0043BC 3E01                B   634    				ld a,1
0043BE 320314FF            B   635    				ld (hw_audio_registers+3),a		                           B   636    				
0043C2 ED3801              B   637    wait_audreg		in0 a,(port_hw_flags)			0043C5 E640                B   638    				and 040h
0043C7 28 F9               B   639    				jr z,wait_audreg				0043C9 AF                  B   640    				xor a
0043CA C9                  B   641    				ret
0043CB C9                  B   642    				ret
                           B   643    
                           B   644    
                           B   645    ;----------------------------------------------
                           B   646    				
                           B   647    				
0043CC                     B   648    hwsc_disable_audio
                           B   649    
0043CC AF                  B   650    				xor a
0043CD 320314FF            B   651    				ld (hw_audio_registers+3),a		                           B   652    				
0043D1 DD210014 FF         B   653    				ld ix,hw_audio_registers		0043D6 0608                B   654    				ld b,8
0043D8 11000000            B   655    				ld de,0
0043DC DD1F0C              B   656    disaud_lp		ld (ix+0ch),de
0043DF ED3220              B   657    				lea ix,ix+020h
0043E2 10 F8               B   658    				djnz disaud_lp
0043E4 C9                  B   659    				ret
                           B   660    				
                           B   661    ;----------------------------------------------
                           B   662    
0043E5                     B   663    hwsc_get_joysticks
                           B   664    
0043E5 ED389E              B   665    				in0 a,(PC_DR)				
0043E8 2F                  B   666    				cpl
0043E9 47                  B   667    				ld b,a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 178


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
0043EA E60F                B   668    				and 0fh
0043EC 5F                  B   669    				ld e,a
0043ED 78                  B   670    				ld a,b
0043EE 0F                  B   671    				rrca
0043EF 0F                  B   672    				rrca
0043F0 0F                  B   673    				rrca
0043F1 0F                  B   674    				rrca
0043F2 E60F                B   675    				and 0fh
0043F4 57                  B   676    				ld d,a
                           B   677    				
0043F5 ED38A2              B   678    				in0 a,(PD_DR)	
0043F8 CB67                B   679    				bit 4,a						; f
0043FA 20 02               B   680    				jr nz,noj1b1
0043FC CBEA                B   681    				set 5,d
                           B   682    
0043FE CB6F                B   683    noj1b1			bit 5,a						; f
004400 20 02               B   684    				jr nz,noj1b0
004402 CBE2                B   685    				set 4,d
                           B   686    				
004404 CB77                B   687    noj1b0			bit 6,a						; f
004406 20 02               B   688    				jr nz,noj0b1
004408 CBEB                B   689    				set 5,e
                           B   690    
00440A CB7F                B   691    noj0b1			bit 7,a						; f
00440C 20 02               B   692    				jr nz,noj0b0
00440E CBE3                B   693    				set 4,e
                           B   694    
004410 AF                  B   695    noj0b0			xor a
004411 C9                  B   696    				ret
                           B   697    				
                           B   698    				
                           B   699    ;----------------------------------------------
                           B   700    			
                           B   701    				
                           B   702    				
                           A  3255    
                           B     0    	include		'prose_keyboard_routines.asm'	                           B     1    ;----------------------------------------------
                           B     2    ;PROSE KEYBOARD/MOUSE ROUTINES V0.04 (ADL mode)
                           B     3    ;----------------------------------------------
                           B     4    
004412                     B     5    os_wait_key_press
                           B     6    
                           B     7    ; Busy waits for a keypress.
                           B     8    ; Handles the following modifier keys (key_mod_
                           B     9    ; Returns scancode in A and ASCII code in B (B=
                           B    10    ; (ASCII code is modifed by shift / alt key sta
                           B    11    
                           B    12    
004412 D5                  B    13    				push de
004413 51                  B    14    				ld d,c
004414 E5                  B    15    				push hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 179


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_keyboard_routines.asm
                           B    16    				
004415 CD 7F 44 00         B    17    wait_kbuf		call get_kb_buffer_indexes		004419 BE                  B    18    				cp (hl)							00441A 28 F9               B    19    				jr z,wait_kbuf		
                           B    20    			
00441C 01000000            B    21    new_key			ld bc,0							004420 4F                  B    22    				ld c,a
004421 21 6E 62 00         B    23    				ld hl,scancode_buffer	
004425 09                  B    24    				add hl,bc
004426 7E                  B    25    				ld a,(hl)						                           B    26    
004427 0E10                B    27    				ld c,16
004429 09                  B    28    				add hl,bc						00442A 4F                  B    29    				ld c,a							00442B 7E                  B    30    				ld a,(hl)						                           B    31    
00442C 1E00                B    32    				ld e,0							00442E 21 CF 5D 00         B    33    				ld hl,unshifted_keymap			                           B    34    
004432 CB4F                B    35    				bit 1,a
004434 28 04               B    36    				jr z,not_ctrl					004436 1E60                B    37    				ld e,96							004438 18 16               B    38    				jr got_keymap					                           B    39    							
00443A CB47                B    40    not_ctrl		bit 0,a
00443C 20 04               B    41    				jr nz,shifted
00443E CB67                B    42    				bit 4,a
004440 28 06               B    43    				jr z,not_shifted
004442 21 31 5E 00         B    44    shifted			ld hl,shifted_keymap			004446 18 08               B    45    				jr got_keymap
                           B    46    				
004448 CB5F                B    47    not_shifted		bit 3,a
00444A 28 04               B    48    				jr z,got_keymap	
00444C 21 93 5E 00         B    49    				ld hl,alted_keymap				                           B    50    
004450 79                  B    51    got_keymap		ld a,c							004451 FE62                B    52    				cp 062h
004453 30 07               B    53    				jr nc,gotkdone
004455 09                  B    54    				add hl,bc						004456 7E                  B    55    				ld a,(hl)						004457 93                  B    56    				sub a,e							004458 30 01               B    57    				jr nc,subkey_ok	
00445A AF                  B    58    				xor a							00445B 47                  B    59    subkey_ok		ld b,a
                           B    60    				
00445C 3A 8F 62 00         B    61    gotkdone		ld a,(key_buf_rd_idx)			004460 3C                  B    62    				inc a							004461 E60F                B    63    				and 15
004463 32 8F 62 00         B    64    				ld (key_buf_rd_idx),a			004467 79                  B    65    				ld a,c							004468 E1                  B    66    				pop hl
004469 4A                  B    67    				ld c,d
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 180


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_keyboard_routines.asm
00446A D1                  B    68    				pop de
00446B BF                  B    69    				cp a							00446C C9                  B    70    				ret
                           B    71    			
                           B    72    		
                           B    73    ;----------------------------------------------
                           B    74    			
00446D                     B    75    os_get_key_press
                           B    76    				
                           B    77    ; Gets a keycode on-the-fly - If one is availab
                           B    78    ; On return, ZF is set if there is a new scanco
                           B    79    ; (ASCII code is modifed by shift key status), 
                           B    80    			
                           B    81    			
00446D D5                  B    82    				push de
00446E 51                  B    83    				ld d,c
00446F E5                  B    84    				push hl
004470 CD 7F 44 00         B    85    				call get_kb_buffer_indexes		004474 BE                  B    86    				cp (hl)							004475 20 A5               B    87    				jr nz,new_key					004477 3E81                B    88    				ld a,81h			
004479 47                  B    89    				ld b,a
00447A B7                  B    90    				or a
00447B E1                  B    91    				pop hl
00447C 4A                  B    92    				ld c,d
00447D D1                  B    93    				pop de
00447E C9                  B    94    				ret
                           B    95    			
                           B    96    ;----------------------------------------------
                           B    97    			
00447F                     B    98    get_kb_buffer_indexes
                           B    99    			
                           B   100    			
00447F 21 8E 62 00         B   101    				ld hl,key_buf_wr_idx			004483 3A 8F 62 00         B   102    				ld a,(key_buf_rd_idx)			004487 C9                  B   103    				ret
                           B   104    			
                           B   105    		
                           B   106    ;----------------------------------------------
                           B     0    	include		'prose_serial_routines.asm'
                           B     1    ;**********************************************
                           B     2    ; PROSE Serial File Transfer Routines V0.05 (AD
                           B     3    ;**********************************************
                           B     4    
                           B     5    ;----------------------------------------------
                           B     6    ; .---------------------.
                           B     7    ; ! Receive file header !
                           B     8    ; '---------------------'
                           B     9    ;
                           B    10    ; Before calling set:-
                           B    11    ;
                           B    12    ; HL = Filename ("*" if dont care)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 181


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
                           B    13    ;  A = Time out in seconds
                           B    14    ;
                           B    15    ; If zero flag set, all OK. IX returns location
                           B    16    ;    Else A=$84 = memory address out of range, 
                           B    17    ;           $87 = Filename mismatch, $86 = chec
                           B    18    ;----------------------------------------------
                           B    19    	
                           B    20    
004488                     B    21    serial_get_header
                           B    22    
004488 32 53 5F 00         B    23    				ld (serial_timeout),a			00448C 22 3D 5F 00         B    24    				ld (serial_fn_addr),hl
004490 CD F1 3D 00         B    25    				call hwsc_flush_serial_buffer	                           B    26    
004494 CD 77 45 00         B    27    				call s_getblock					004498 28 0C               B    28    				jr z,s_gbfhok					00449A F5                  B    29    				push af							00449B 3A 74 5F 00         B    30    				ld a,(serial_transfer_started)
00449F B7                  B    31    				or a							0044A0 C4 DE 45 00         B    32    				call nz,s_badack				0044A4 F1                  B    33    				pop af
0044A5 C9                  B    34    				ret
                           B    35    	
0044A6 21 68 5F 00         B    36    s_gbfhok		ld hl,serial_header_id			0044AA 11 C2 66 00         B    37    				ld de,sector_buffer+20			0044AE 060C                B    38    				ld b,12
0044B0 CD 29 12 00         B    39    				call os_compare_strings
0044B4 20 0F               B    40    				jr nz,s_nfhdr
0044B6 06E0                B    41    				ld b,256-32						0044B8 21 CE 66 00         B    42    				ld hl,sector_buffer+32
0044BC 7E                  B    43    s_chdr			ld a,(hl)
0044BD 23                  B    44    				inc hl
0044BE B7                  B    45    				or a
0044BF 20 04               B    46    				jr nz,s_nfhdr
0044C1 10 F9               B    47    				djnz s_chdr
0044C3 18 08               B    48    				jr s_fhcsok
                           B    49    				
0044C5 CD DE 45 00         B    50    s_nfhdr			call s_badack					0044C9 3E85                B    51    				ld a,085h						0044CB B7                  B    52    				or a
0044CC C9                  B    53    				ret
                           B    54    		
0044CD 21 BE 66 00         B    55    s_fhcsok		ld hl,sector_buffer+16			0044D1 11 64 5F 00         B    56    				ld de,serial_fileheader+16
0044D5 01040000            B    57    				ld bc,4
0044D9 EDB0                B    58    				ldir
                           B    59    				
0044DB 21 AE 66 00         B    60    				ld hl,sector_buffer
0044DF 11 54 5F 00         B    61    				ld de,serial_fileheader			0044E3 0610                B    62    				ld b,16							0044E5 7E                  B    63    s_tuclp			ld a,(hl)						0044E6 B7                  B    64    				or a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 182


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
0044E7 28 0B               B    65    				jr z,s_ffhswz	
0044E9 CD 63 12 00         B    66    				call os_uppercasify
0044ED 12                  B    67    				ld (de),a
0044EE 23                  B    68    				inc hl
0044EF 13                  B    69    				inc de
0044F0 10 F3               B    70    				djnz s_tuclp
0044F2 18 04               B    71    				jr s_tucdone
0044F4 12                  B    72    s_ffhswz		ld (de),a
0044F5 13                  B    73    				inc de
0044F6 10 FC               B    74    				djnz s_ffhswz		
                           B    75    	
0044F8 2A 3D 5F 00         B    76    s_tucdone		ld hl,(serial_fn_addr)			0044FC 7E                  B    77    				ld a,(hl)
0044FD FE2A                B    78    				cp '*'
0044FF 28 14               B    79    				jr z,s_rffns					004501 11 54 5F 00         B    80    				ld de,serial_fileheader
004505 0610                B    81    				ld b,16
004507 CD 29 12 00         B    82    				call os_compare_strings
00450B 28 08               B    83    				jr z,s_rffns
00450D CD DE 45 00         B    84    s_rfnbad		call s_badack
004511 3E87                B    85    				ld a,087h						004513 B7                  B    86    				or a
004514 C9                  B    87    				ret
                           B    88    				
004515 DD21 54 5F 00       B    89    s_rffns			ld ix,serial_fileheader			00451A AF                  B    90    				xor a
00451B C9                  B    91    				ret
                           B    92    
00451C F5                  B    93    s_fail			push af				
00451D CD DE 45 00         B    94    				call s_badack		 
004521 F1                  B    95    				pop af
004522 C9                  B    96    				ret
                           B    97    	
                           B    98    ;----------------------------------------------
                           B    99    ; .-------------------.
                           B   100    ; ! Receive file data !
                           B   101    ; '-------------------'
                           B   102    ;
                           B   103    ; Serial_get_header must be called first!
                           B   104    ;
                           B   105    ; Set:
                           B   106    ;
                           B   107    ; xHL = Address to load to [23:0]
                           B   108    ;
                           B   109    ; On return, if Zero flag is set, all OK (IX = 
                           B   110    ; Else A =  $84 = memory address out of range
                           B   111    ;           $85 = comms error
                           B   112    ;----------------------------------------------
                           B   113    
004523                     B   114    serial_receive_file
                           B   115    
004523 3E0A                B   116    				ld a,10							Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 183


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
004525 32 53 5F 00         B   117    				ld (serial_timeout),a
004529 E5                  B   118    				push hl
00452A CD CD 45 00         B   119    				call s_goodack					00452E DDE1                B   120    				pop ix							004530 ED5B 64 5F 00       B   121    				ld de,(serial_fileheader+16)	                           B   122    
004535 CD 77 45 00         B   123    s_gbloop		call s_getblock
004539 20 E1               B   124    				jr nz,s_fail
00453B 0E00                B   125    				ld c,0							00453D FD21 AE 66 00       B   126    				ld iy,sector_buffer
004542 FD7E00              B   127    s_rfloop		ld a,(iy)
004545 DD7700              B   128    				ld (ix),a						004548 1B                  B   129    				dec de							004549 21000000            B   130    				ld hl,0
00454D AF                  B   131    				xor a
00454E ED5A                B   132    				adc hl,de						004550 28 1A               B   133    				jr z,s_rfabr					004552 C5                  B   134    				push bc
004553 01010000            B   135    				ld bc,1
004557 DD09                B   136    				add ix,bc						004559 C1                  B   137    				pop bc
00455A 30 05               B   138    				jr nc,s_nbt
00455C 3E84                B   139    				ld a,84h						00455E B7                  B   140    				or a
00455F 18 BB               B   141    				jr s_fail
004561 FD23                B   142    s_nbt			inc iy
004563 0D                  B   143    				dec c
004564 20 DC               B   144    				jr nz,s_rfloop
004566 CD CD 45 00         B   145    				call s_goodack					00456A 18 C9               B   146    				jr s_gbloop
                           B   147    			
00456C CD CD 45 00         B   148    s_rfabr			call s_goodack					004570 DD21 54 5F 00       B   149    				ld ix,serial_fileheader			004575 AF                  B   150    				xor a							004576 C9                  B   151    				ret
                           B   152    			
                           B   153    ;----------------------------------------------
                           B   154    
004577                     B   155    s_getblock
                           B   156    
                           B   157    ; carry set on return if timed out
                           B   158    
004577 AF                  B   159    				xor a
004578 32 74 5F 00         B   160    				ld (serial_transfer_started),a	00457C E5                  B   161    				push hl							00457D D5                  B   162    				push de
00457E C5                  B   163    				push bc
00457F 21 AE 66 00         B   164    				ld hl,sector_buffer				004583 0600                B   165    				ld b,0
004585 D9                  B   166    				exx
004586 21FFFF00            B   167    				ld hl,0ffffh					00458A D9                  B   168    				exx
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 184


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
00458B CD 9B 3D 00         B   169    s_lgb			call receive_serial_byte
00458F 20 38               B   170    				jr nz,s_gberr					004591 F5                  B   171    				push af
004592 3E01                B   172    				ld a,1
004594 32 74 5F 00         B   173    				ld (serial_transfer_started),a
004598 F1                  B   174    				pop af
004599 77                  B   175    				ld (hl),a
00459A D9                  B   176    				exx
00459B AC                  B   177    				xor h							00459C 67                  B   178    				ld h,a			
00459D 0608                B   179    				ld b,8
00459F 4029                B   180    rxcrcbyte		add.sis hl,hl					0045A1 30 08               B   181    				jr nc,rxcrcnext
0045A3 7C                  B   182    				ld a,h
0045A4 EE10                B   183    				xor 10h
0045A6 67                  B   184    				ld h,a
0045A7 7D                  B   185    				ld a,l
0045A8 EE21                B   186    				xor 21h
0045AA 6F                  B   187    				ld l,a
0045AB 10 F2               B   188    rxcrcnext		djnz rxcrcbyte
0045AD D9                  B   189    				exx
0045AE 23                  B   190    				inc hl
0045AF 10 DA               B   191    				djnz s_lgb
0045B1 D9                  B   192    				exx								                           B   193    			
0045B2 CD 9B 3D 00         B   194    				call receive_serial_byte		0045B6 20 11               B   195    				jr nz,s_gberr
0045B8 4F                  B   196    				ld c,a
0045B9 CD 9B 3D 00         B   197    				call receive_serial_byte
0045BD 20 0A               B   198    				jr nz,s_gberr		
0045BF 47                  B   199    				ld b,a
                           B   200    				
0045C0 AF                  B   201    				xor a							0045C1 52ED42              B   202    				sbc.s hl,bc						0045C4 28 03               B   203    				jr z,s_gberr
                           B   204    			
0045C6 3E86                B   205    				ld a,86h						0045C8 B7                  B   206    				or a							0045C9 C1                  B   207    s_gberr			pop bc
0045CA D1                  B   208    				pop de
0045CB E1                  B   209    				pop hl
0045CC C9                  B   210    				ret
                           B   211    				
                           B   212    ;----------------------------------------------
                           B   213    
0045CD C5                  B   214    s_goodack		push bc
0045CE 014F4B00            B   215    				ld bc,04b4fh					0045D2 79                  B   216    ackbytes		ld a,c
0045D3 CD D6 3D 00         B   217    				call send_serial_byte
0045D7 78                  B   218    				ld a,b
0045D8 CD D6 3D 00         B   219    				call send_serial_byte
0045DC C1                  B   220    				pop bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 185


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
0045DD C9                  B   221    				ret
                           B   222    
0045DE C5                  B   223    s_badack		push bc
0045DF 01585800            B   224    				ld bc,05858h					0045E3 18 ED               B   225    				jr ackbytes
                           B   226    
0045E5 C5                  B   227    s_holdack		push bc
0045E6 01575700            B   228    				ld bc,05757h					0045EA 18 E6               B   229    				jr ackbytes
                           B   230    				
                           B   231    ;==============================================
                           B   232    
                           B   233    ; .-----------.
                           B   234    ; ! Send file !
                           B   235    ; '-----------'
                           B   236    
                           B   237    ; Before calling set:-
                           B   238    
                           B   239    ;  xHL   = filename
                           B   240    ;  xDE   = length of file
                           B   241    ;  xIX   = Start address [23:0]
                           B   242    
                           B   243    ; On return, if zero flag is set, all OK. Else:
                           B   244    ; $81 = Save length is zero
                           B   245    ; $84 = memory address out of range
                           B   246    ; $85 = comms error
                           B   247    
                           B   248    
0045EC                     B   249    serial_send_file
                           B   250    			
0045EC 3E01                B   251    				ld a,1							0045EE 32 53 5F 00         B   252    				ld (serial_timeout),a
                           B   253    			
0045F2 DD22 37 5F 00       B   254    				ld (serial_ez80_address),ix
0045F7 ED53 64 5F 00       B   255    				ld (serial_fileheader+10h),de	0045FC E5                  B   256    				push hl
0045FD 21000000            B   257    				ld hl,0
004601 AF                  B   258    				xor a
004602 ED5A                B   259    				adc hl,de
004604 20 05               B   260    				jr nz,s_flok
004606 E1                  B   261    				pop hl
004607 3E81                B   262    				ld a,081h						004609 B7                  B   263    				or a							00460A C9                  B   264    				ret
                           B   265    			
00460B 21 54 5F 00         B   266    s_flok			ld hl,serial_fileheader			00460F 01100000            B   267    				ld bc,16
004613 AF                  B   268    				xor a
004614 CD C6 15 00         B   269    				call os_bchl_memfill
004618 E1                  B   270    				pop hl							004619 11 54 5F 00         B   271    				ld de,serial_fileheader
00461D 0610                B   272    				ld b,16
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 186


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
00461F CD 48 12 00         B   273    				call os_copy_ascii_run
                           B   274    				
004623 21 68 5F 00         B   275    				ld hl,serial_header_id			004627 11 68 5F 00         B   276    				ld de,serial_fileheader+014h
00462B 010C0000            B   277    				ld bc,12		
00462F EDB0                B   278    				ldir
                           B   279    			
004631 DD21 54 5F 00       B   280    				ld ix,serial_fileheader			004636 11200000            B   281    				ld de,32
00463A CD 70 46 00         B   282    				call s_makeblock			
00463E C0                  B   283    				ret nz
00463F CD A8 46 00         B   284    				call s_sendblock
004643 C0                  B   285    				ret nz
004644 CD D5 46 00         B   286    				call s_waitack					004648 C0                  B   287    				ret nz							                           B   288    				
004649 DD2A 37 5F 00       B   289    				ld ix,(serial_ez80_address)
00464E ED5B 64 5F 00       B   290    				ld de,(serial_fileheader+16)	004653 CD 70 46 00         B   291    s_sbloop		call s_makeblock				004657 38 16               B   292    				jr c,s_rerr
004659 CD A8 46 00         B   293    				call s_sendblock				00465D 38 10               B   294    				jr c,s_rerr	
00465F CD D5 46 00         B   295    				call s_waitack					004663 38 0A               B   296    				jr c,s_rerr
004665 21000000            B   297    				ld hl,0
004669 AF                  B   298    				xor a
00466A ED5A                B   299    				adc hl,de
00466C 20 E5               B   300    				jr nz,s_sbloop					00466E AF                  B   301    				xor a							00466F C9                  B   302    s_rerr			ret
                           B   303    
                           B   304    ;----------------------------------------------
                           B   305    
004670                     B   306    s_makeblock
                           B   307    
                           B   308    ; set xIX = src addr
                           B   309    ; xDE = byte count
                           B   310    ; a=0 on return if all ok	
                           B   311    
004670 21 AE 66 00         B   312    				ld hl,sector_buffer				004674 01000100            B   313    				ld bc,256						004678 AF                  B   314    				xor a							004679 CD C6 15 00         B   315    				call os_bchl_memfill			                           B   316    				
00467D 0600                B   317    				ld b,0							00467F FD21 AE 66 00       B   318    				ld iy,sector_buffer	
004684 DD7E00              B   319    s_sloop			ld a,(ix)
004687 FD7700              B   320    				ld (iy),a
00468A 1B                  B   321    				dec de							00468B 21000000            B   322    				ld hl,0
00468F AF                  B   323    				xor a
004690 ED5A                B   324    				adc hl,de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 187


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
004692 28 12               B   325    				jr z,s_mbend	
004694 FD23                B   326    				inc iy							004696 C5                  B   327    				push bc
004697 01010000            B   328    				ld bc,1
00469B DD09                B   329    				add ix,bc						00469D C1                  B   330    				pop bc							00469E 20 04               B   331    				jr nz,s_sbok
0046A0 3E84                B   332    				ld a,84h						0046A2 B7                  B   333    				or a
0046A3 C9                  B   334    				ret
0046A4 10 DE               B   335    s_sbok			djnz s_sloop
0046A6 AF                  B   336    s_mbend			xor a
0046A7 C9                  B   337    				ret
                           B   338    
                           B   339    
                           B   340    
0046A8                     B   341    s_sendblock
                           B   342    
0046A8 E5                  B   343    				push hl
0046A9 D5                  B   344    				push de							0046AA C5                  B   345    				push bc				
0046AB 21 AE 66 00         B   346    				ld hl,sector_buffer			
0046AF 1E00                B   347    				ld e,0
0046B1 7E                  B   348    s_sblklp		ld a,(hl)
0046B2 CD D6 3D 00         B   349    				call send_serial_byte
0046B6 23                  B   350    				inc hl
0046B7 1D                  B   351    				dec e
0046B8 20 F7               B   352    				jr nz,s_sblklp
0046BA 11 AE 66 00         B   353    				ld de,sector_buffer
0046BE 01000000            B   354    				ld bc,0
0046C2 CD 6C 15 00         B   355    				call crc_checksum
0046C6 7D                  B   356    				ld a,l
0046C7 CD D6 3D 00         B   357    				call send_serial_byte
0046CB 7C                  B   358    				ld a,h
0046CC CD D6 3D 00         B   359    				call send_serial_byte
0046D0 AF                  B   360    				xor a
0046D1 C1                  B   361    s_popall		pop bc
0046D2 D1                  B   362    				pop de
0046D3 E1                  B   363    				pop hl
0046D4 C9                  B   364    				ret
                           B   365    	
                           B   366    
0046D5                     B   367    s_waitack
0046D5 E5                  B   368    				push hl
0046D6 D5                  B   369    				push de
0046D7 C5                  B   370    				push bc
0046D8 CD 9B 3D 00         B   371    				call receive_serial_byte		0046DC 20 F3               B   372    				jr nz,s_popall
0046DE 47                  B   373    				ld b,a
0046DF CD 9B 3D 00         B   374    				call receive_serial_byte
0046E3 20 EC               B   375    				jr nz,s_popall
0046E5 4F                  B   376    				ld c,a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 188


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
0046E6 264F                B   377    				ld h,'O'
0046E8 2E4B                B   378    				ld l,'K'
0046EA AF                  B   379    				xor a
0046EB 52ED42              B   380    				sbc.s hl,bc						0046EE 28 E1               B   381    				jr z,s_popall					                           B   382    			
0046F0 3E85                B   383    				ld a,085h						0046F2 B7                  B   384    				or a
0046F3 18 DC               B   385    				jr s_popall
                           B   386    
                           B   387    	
                           B   388    ;----------------------------------------------
                           B     0    	include		'prose_fat16_code.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; eZ80 FAT16 File System code for PROSE by Phil
                           B     3    ;----------------------------------------------
                           B     4    ;
                           B     5    ; Changes:
                           B     6    ;
                           B     7    ; 0.07 - Made compatible with v1.10 drivers (ZF
                           B     8    ; 0.06 - Fixed "fs_get_volume_label"
                           B     9    ; 0.05 - Fixed format command
                           B    10    ; 0.04 - File system error codes are now in the
                           B    11    ; 0.03 - ADL mode
                           B    12    ; 0.02 - removed references to banks, added 24 
                           B    13    ; 0.01 - first version based on FLOS routines v
                           B    14    ;
                           B    15    ; Known limitations:
                           B    16    ; ------------------
                           B    17    ; If a disk full error is returned during a fil
                           B    18    ; Allows a file to be created in root even if t
                           B    19    ;        
                           B    20    ;----------------------------------------------
                           B    21    ;
                           B    22    ; All routines return carry clear / zero flag s
                           B    23    ;
                           B    24    ; If carry set there was a driver error, A = Er
                           B    25    ;
                           B    26    ; If carry clear, Zero flag not set: A= File sy
                           B    27    ;
                           B    28    ;					$c1  - Disk full
                           B    29    ;					$c2  - file not found
                           B    30    ;             	    $c3  - (root) dir table is 
                           B    31    ;					$c4  - directory requested 
                           B    32    ;             	    $c5  - cant delete dir, it 
                           B    33    ;					$c6  - not a file
                           B    34    ;					$c7  - file length is zero
                           B    35    ;              	    $c8  - out of memory
                           B    36    ;					$c9  - filename already exi
                           B    37    ;					$ca  - already at root dire
                           B    38    ;                  	$cb  - directory not found
                           B    39    ;					$cc  - requested bytes beyo
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 189


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B    40    ;					$cd  - invalid filename
                           B    41    ;					$ce  - unknown/incorrect di
                           B    42    ;					$cf  - invalid volume
                           B    43    ;                 	$d0  - device not present	                           B    44    ;					$d1  - directory not found	                           B    45    ;                 	$d2  - end of directory lis
                           B    46    ;                 	$d3  - device does not use 
                           B    47    ;                  	$d4  - cant find volume lab
                           B    48    ;                   $d5  - sector out of range
                           B    49    
                           B    50    ;----------------------------------------------
                           B    51    ; Main routines called by external programs
                           B    52    ;----------------------------------------------
                           B    53    
0046F5                     B    54    fs_format_device_command
                           B    55    
                           B    56    ; Creates a single partition (truncated to 2GB)
                           B    57    
                           B    58    
0046F5 3A 85 5F 00         B    59    				ld a,(device_count)				0046F9 47                  B    60    				ld b,a							0046FA DD21 2F 60 00       B    61    				ld ix,host_device_hardware_info
0046FF 3A 84 5F 00         B    62    fdevinfo		ld a,(current_driver)
004703 DDBE00              B    63    				cp (ix)
004706 28 09               B    64    				jr z,got_dev_info
004708 ED3220              B    65    				lea ix,ix+32
00470B 10 F2               B    66    				djnz fdevinfo
00470D AF                  B    67    				xor a
00470E 3ED0                B    68    				ld a,0d0h						004710 C9                  B    69    				ret	
                           B    70    	
004711 CD B1 51 00         B    71    got_dev_info	call fs_clear_sector_buffer		004715 11000000            B    72    				ld de,0							004719 CD 09 48 00         B    73    form_ws			call set_lba_and_write_sector
00471D D8                  B    74    				ret c
00471E 13                  B    75    				inc de
00471F 7A                  B    76    				ld a,d
004720 FE03                B    77    				cp 3
004722 20 F5               B    78    				jr nz,form_ws
                           B    79    	
004724 21 60 54 00         B    80    				ld hl,bootsector_stub			004728 11 AE 66 00         B    81    				ld de,sector_buffer				00472C 013F0000            B    82    				ld bc,03fh
004730 EDB0                B    83    				ldir
                           B    84    	
004732 DD7E04              B    85    				ld a,(ix+4)						004735 B7                  B    86    				or a
004736 20 0C               B    87    				jr nz,above_2gb
004738 2100003F            B    88    				ld hl,3f0000h					00473C DD1701              B    89    				ld de,(ix+1)					00473F AF                  B    90    				xor a			
004740 ED52                B    91    				sbc hl,de						Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 190


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004742 30 08               B    92    				jr nc,lessthan2gb				004744 3E40                B    93    above_2gb		ld a,40h						004746 1100003F            B    94    				ld de,3f0000h					00474A 18 11               B    95    				jr spcvalok
                           B    96    
00474C DD4E03              B    97    lessthan2gb		ld c,(ix+3)						00474F 0C                  B    98    				inc c							004750 3E01                B    99    spc_loop		ld a,1							004752 B9                  B   100    spc_comp		cp c							004753 28 08               B   101    				jr z,spcvalok
004755 07                  B   102    				rlca
004756 FE80                B   103    				cp 080h							004758 20 F8               B   104    				jr nz,spc_comp
00475A 0C                  B   105    				inc c			
00475B 18 F3               B   106    				jr spc_loop						                           B   107    							
00475D DD21 AE 66 00       B   108    spcvalok		ld ix,sector_buffer
004762 DD770D              B   109    				ld (ix+0dh),a					                           B   110    				
004765 CD E3 15 00         B   111    				call os_get_xde_msb				004769 4F                  B   112    				ld c,a							00476A B7                  B   113    				or a							00476B 20 08               B   114    				jr nz,ts_dword					00476D DD7313              B   115    				ld (ix+13h),e					004770 DD7214              B   116    				ld (ix+14h),d
004773 18 07               B   117    				jr ts_done
004775 DD1F20              B   118    ts_dword		ld (ix+20h),de					004778 DD362300            B   119    				ld (ix+23h),0
                           B   120    
00477C EB                  B   121    ts_done			ex de,hl						00477D 11000000            B   122    				ld de,0						
004781 DD560D              B   123    				ld d,(ix+0dh)					004784 01000000            B   124    				ld bc,0							004788 AF                  B   125    div_tscls		xor a							004789 ED52                B   126    				sbc hl,de
00478B 28 05               B   127    				jr z,gotfats
00478D 38 03               B   128    				jr c,gotfats	
00478F 03                  B   129    				inc bc
004790 18 F6               B   130    				jr div_tscls
004792 03                  B   131    gotfats			inc bc
004793 DD7116              B   132    				ld (ix+16h),c					004796 DD7017              B   133    				ld (ix+17h),b
004799 ED43 B0 54 00       B   134    				ld (fs_sectors_per_fat),bc
                           B   135    				
00479E 010055AA            B   136    				ld bc,0aa5500h
0047A2 ED43 AB 68 00       B   137    				ld (sector_buffer+1fdh),bc		0047A7 11000000            B   138    				ld de,0
0047AB CD 09 48 00         B   139    				call set_lba_and_write_sector	0047AF D8                  B   140    				ret c
                           B   141    				
0047B0 21000000            B   142    				ld hl,0
0047B4 DD6E0E              B   143    				ld l,(ix+0eh)					Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 191


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
0047B7 DD660F              B   144    				ld h,(ix+0fh)
0047BA 19                  B   145    				add hl,de
0047BB EB                  B   146    				ex de,hl						                           B   147    				
0047BC CD B1 51 00         B   148    				call fs_clear_sector_buffer		0047C0 DD3600FF            B   149    				ld (ix+0),0ffh
0047C4 DD3601F8            B   150    				ld (ix+1),0f8h
0047C8 DD3602FF            B   151    				ld (ix+2),0ffh
0047CC DD3603FF            B   152    				ld (ix+3),0ffh
0047D0 CD 09 48 00         B   153    				call set_lba_and_write_sector	0047D4 D8                  B   154    				ret c
                           B   155    
0047D5 2A B0 54 00         B   156    				ld hl,(fs_sectors_per_fat)	
0047D9 19                  B   157    				add hl,de
0047DA EB                  B   158    				ex de,hl
0047DB CD 09 48 00         B   159    				call set_lba_and_write_sector 	0047DF D8                  B   160    				ret c	
                           B   161    				
0047E0 D5                  B   162    				push de							0047E1 CD B1 51 00         B   163    				call fs_clear_sector_buffer
0047E5 21 B6 54 00         B   164    				ld hl,fs_sought_filename
0047E9 11 AE 66 00         B   165    				ld de,sector_buffer
0047ED 010B0000            B   166    				ld bc,11
0047F1 EDB0                B   167    				ldir							0047F3 D1                  B   168    				pop de							0047F4 DD360B08            B   169    				ld (ix+0bh),8					0047F8 DD361821            B   170    				ld (ix+018h),021h				0047FC 2A B0 54 00         B   171    				ld hl,(fs_sectors_per_fat)		004800 19                  B   172    				add hl,de
004801 EB                  B   173    				ex de,hl
004802 CD 09 48 00         B   174    				call set_lba_and_write_sector	004806 D8                  B   175    				ret c	
                           B   176    			
004807 AF                  B   177    				xor a							004808 C9                  B   178    				ret
                           B   179    	
                           B   180    
                           B   181    
004809                     B   182    set_lba_and_write_sector
                           B   183    
004809 DDE5                B   184    				push ix
00480B DD21 5A 61 00       B   185    				ld ix,sector_lba0				004810 DD1F00              B   186    				ld (ix),de						004813 DD360300            B   187    				ld (ix+3),0
004817 DDE1                B   188    				pop ix
004819 CD 44 54 00         B   189    				call fs_write_sector
00481D C9                  B   190    				ret
                           B   191    				
                           B   192    				
                           B   193    ;----------------------------------------------
                           B   194    
00481E                     B   195    fs_get_partition_info
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 192


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B   196    
                           B   197    ; Set A to partition: $00 to $03
                           B   198    ; On return: If A = $00, xHL = Address of reque
                           B   199    ;            If A = $25, A partition table is n
                           B   200    ;            If A = $13, Disk format is bad 
                           B   201    ;            If carry flag set, there was a har
                           B   202    
                           B   203    
00481E 32 B2 60 00         B   204    				ld (partition_temp),a
                           B   205    				
004822 21000000            B   206    				ld hl,0							004826 22 5A 61 00         B   207    				ld (sector_lba0),hl
00482A 7D                  B   208    				ld a,l
00482B 32 5D 61 00         B   209    				ld (sector_lba3),a
00482F CD 2B 54 00         B   210    				call fs_read_sector
004833 D8                  B   211    				ret c
                           B   212    			
004834 CD 6F 48 00         B   213    				call fs_check_fat_sig			004838 20 42               B   214    				jr nz,formbad
                           B   215    			
00483A CD 60 48 00         B   216    				call check_fat16_id				00483E 28 1C               B   217    				jr z,at_pbs						                           B   218    				
004840 3A 70 68 00         B   219    				ld a,(sector_buffer+01c2h)		004844 E604                B   220    				and 4							004846 28 34               B   221    				jr z,formbad	
004848 11000000            B   222    				ld de,0
00484C 3A B2 60 00         B   223    				ld a,(partition_temp)
004850 5F                  B   224    				ld e,a
004851 1610                B   225    				ld d,16
004853 ED5C                B   226    				mlt de
004855 21 6C 68 00         B   227    				ld hl,sector_buffer+01beh
004859 19                  B   228    				add hl,de						00485A AF                  B   229    				xor a
00485B C9                  B   230    				ret
                           B   231    					
00485C AF                  B   232    at_pbs			xor a
00485D 3ED3                B   233    				ld a,0d3h						00485F C9                  B   234    				ret
                           B   235    
                           B   236    
                           B   237    
004860                     B   238    check_fat16_id
                           B   239    		
004860 21 E4 66 00         B   240    				ld hl,sector_buffer+036h		004864 11 84 59 00         B   241    				ld de,fat16_txt			
004868 0605                B   242    				ld b,5
00486A CD 29 12 00         B   243    				call os_compare_strings
00486E C9                  B   244    				ret
                           B   245    				
                           B   246    ;----------------------------------------------
                           B   247    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 193


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B   248    
00486F                     B   249    fs_check_fat_sig
                           B   250    
00486F 2A AC 68 00         B   251    				ld hl,(sector_buffer+01feh)		004873 1155AA00            B   252    				ld de,0aa55h
004877 AF                  B   253    				xor a
004878 52ED52              B   254    				sbc.s hl,de						00487B C9                  B   255    				ret
                           B   256    			
                           B   257    			
                           B   258    			
00487C AF                  B   259    formbad			xor a
00487D 3ECE                B   260    				ld a,0ceh						00487F C9                  B   261    				ret
                           B   262    
                           B   263    ;----------------------------------------------
                           B   264    
                           B   265    
004880                     B   266    fs_check_disk_format
                           B   267    
                           B   268    ; ensures disk is FAT16, sets up constants..
                           B   269    	
004880 C5                  B   270    				push bc
004881 D5                  B   271    				push de
004882 E5                  B   272    				push hl
004883 CD 8B 48 00         B   273    				call go_checkf
004887 E1                  B   274    				pop hl
004888 D1                  B   275    				pop de
004889 C1                  B   276    				pop bc
00488A C9                  B   277    				ret
                           B   278    				
00488B CD 52 49 00         B   279    go_checkf		call fs_read_partition_bootsect
00488F D8                  B   280    				ret c
004890 B7                  B   281    				or a
004891 C0                  B   282    				ret nz
                           B   283    				
004892 CD 6F 48 00         B   284    				call fs_check_fat_sig			004896 20 E4               B   285    				jr nz,formbad		
                           B   286    			
004898 CD 60 48 00         B   287    				call check_fat16_id				00489C 20 DE               B   288    				jr nz,formbad
                           B   289    			
00489E DD21 AE 66 00       B   290    				ld ix,sector_buffer
0048A3 DD270B              B   291    				ld hl,(ix+0bh)					0048A6 11000200            B   292    				ld de,512						0048AA AF                  B   293    				xor a
0048AB 52ED52              B   294    				sbc.s hl,de						0048AE 20 CC               B   295    				jr nz,formbad
                           B   296    			
0048B0 DD7E0D              B   297    				ld a,(ix+0dh)					0048B3 32 9F 54 00         B   298    				ld (fs_cluster_size),a
0048B7 CB27                B   299    				sla a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 194


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
0048B9 32 A1 54 00         B   300    				ld (fs_bytes_per_cluster+1),a
                           B   301    							
0048BD 21000000            B   302    				ld hl,0
0048C1 DD6E0E              B   303    				ld l,(ix+0eh)					0048C4 DD660F              B   304    				ld h,(ix+0fh)
0048C7 22 A3 54 00         B   305    				ld (fs_fat1_position),hl		0048CB 11000000            B   306    				ld de,0
0048CF DD5E16              B   307    				ld e,(ix+16h)					0048D2 DD5617              B   308    				ld d,(ix+17h)
0048D5 ED53 B0 54 00       B   309    				ld (fs_sectors_per_fat),de
0048DA 19                  B   310    				add hl,de
0048DB 22 A6 54 00         B   311    				ld (fs_fat2_position),hl		0048DF 19                  B   312    				add hl,de
0048E0 22 A9 54 00         B   313    				ld (fs_root_dir_position),hl 	0048E4 EB                  B   314    				ex de,hl
0048E5 DD6E11              B   315    				ld l,(ix+11h)					0048E8 DD6612              B   316    				ld h,(ix+12h)					0048EB 7C                  B   317    				ld a,h
0048EC B5                  B   318    				or l
0048ED 28 8D               B   319    				jr z,formbad					0048EF 29                  B   320    				add hl,hl						0048F0 29                  B   321    				add hl,hl						0048F1 29                  B   322    				add hl,hl
0048F2 29                  B   323    				add hl,hl
0048F3 EB                  B   324    				ex de,hl
0048F4 7A                  B   325    				ld a,d
0048F5 32 AF 54 00         B   326    				ld (fs_root_dir_sectors),a		0048F9 01000000            B   327    				ld bc,0
0048FD 4A                  B   328    				ld c,d
0048FE 09                  B   329    				add hl,bc				
0048FF 22 AC 54 00         B   330    				ld (fs_data_area),hl			                           B   331    												004903 21000000            B   332    				ld hl,0
004907 01000000            B   333    				ld bc,0
00490B DD4E22              B   334    				ld c,(ix+022h)					00490E DD4623              B   335    				ld b,(ix+023h)
004911 DD6E13              B   336    				ld l,(ix+013h)					004914 DD6614              B   337    				ld h,(ix+014h)
004917 7C                  B   338    				ld a,h							004918 B5                  B   339    				or l
004919 20 06               B   340    				jr nz,got_tsfbs
00491B DD6E20              B   341    				ld l,(ix+020h)					00491E DD6621              B   342    				ld h,(ix+021h)
004921 ED5B AC 54 00       B   343    got_tsfbs 		ld de,(fs_data_area)
004926 AF                  B   344    				xor a							004927 52ED52              B   345    				sbc.s hl,de						00492A 30 02               B   346    				jr nc,nomxcb
00492C 520B                B   347    				dec.s bc
00492E 3A 9F 54 00         B   348    nomxcb			ld a,(fs_cluster_size)
004932 CB3F                B   349    fmaxcl			srl a
004934 28 08               B   350    				jr z,got_cmaxc					004936 CB39                B   351    				srl c				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 195


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004938 CB1C                B   352    				rr h
00493A CB1D                B   353    				rr l
00493C 18 F4               B   354    				jr fmaxcl
00493E E5                  B   355    got_cmaxc		push hl							00493F 11F0FF00            B   356    				ld de,0fff0h
004943 AF                  B   357    				xor a
004944 52ED52              B   358    				sbc.s hl,de						004947 38 02               B   359    				jr c,cmaxok
004949 E1                  B   360    				pop hl
00494A D5                  B   361    				push de
00494B E1                  B   362    cmaxok			pop hl
00494C 22 B3 54 00         B   363    				ld (fs_max_data_clusters),hl
004950 AF                  B   364    				xor a
004951 C9                  B   365    				ret				
                           B   366    
                           B   367    ;----------------------------------------------
                           B   368    
004952                     B   369    fs_read_partition_bootsector
                           B   370    
004952 CD E4 1A 00         B   371    				call fs_calc_volume_offset		004956 21 AF 5F 00         B   372    				ld hl,volume_mount_list
00495A 19                  B   373    				add hl,de
00495B 7E                  B   374    				ld a,(hl)
00495C B7                  B   375    				or a							00495D 20 04               B   376    				jr nz,fs_volpre
00495F AF                  B   377    				xor a
004960 3ECF                B   378    				ld a,cfh						004962 C9                  B   379    				ret
                           B   380    			
004963 11080000            B   381    fs_volpre		ld de,8							004967 19                  B   382    				add hl,de
004968 11 5A 61 00         B   383    				ld de,sector_lba0
00496C 01040000            B   384    				ld bc,4
004970 EDB0                B   385    				ldir
004972 CD 2B 54 00         B   386    				call fs_read_sector
004976 C9                  B   387    				ret	
                           B   388    
                           B   389    ;----------------------------------------------
                           B   390    
004977                     B   391    fs_calc_free_space
                           B   392    
                           B   393    ;returns free space in KB in HL:DE
                           B   394    
004977 ED5B B3 54 00       B   395    				ld de,(fs_max_data_clusters)
00497C 13                  B   396    				inc de
00497D 13                  B   397    				inc de							00497E D5                  B   398    				push de
00497F DDE1                B   399    				pop ix
                           B   400    			
004981 AF                  B   401    				xor a
004982 32 F8 54 00         B   402    cfs_lp2			ld (fs_working_sector),a
004986 2A A3 54 00         B   403    				ld hl,(fs_fat1_position)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 196


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
00498A CD 01 54 00         B   404    				call set_abs_lba_and_read_secto
00498E D8                  B   405    				ret c
                           B   406    				
00498F 21 AE 66 00         B   407    				ld hl,sector_buffer
004993 0600                B   408    				ld b,0
004995 AF                  B   409    cfs_lp1			xor a
004996 B6                  B   410    				or a,(hl)						004997 23                  B   411    				inc hl							004998 20 03               B   412    				jr nz,cfs_ciu					00499A B6                  B   413    				or a,(hl)
00499B 28 02               B   414    				jr z,cfs_ddcc
00499D DD2B                B   415    cfs_ciu			dec ix							00499F 23                  B   416    cfs_ddcc		inc hl
0049A0 1B                  B   417    				dec de
0049A1 7A                  B   418    				ld a,d
0049A2 B3                  B   419    				or e
0049A3 28 09               B   420    				jr z,cfs_ok						0049A5 10 EE               B   421    				djnz cfs_lp1
0049A7 3A F8 54 00         B   422    				ld a,(fs_working_sector)
0049AB 3C                  B   423    				inc a
0049AC 18 D4               B   424    				jr cfs_lp2
                           B   425    				
0049AE 3A 9F 54 00         B   426    cfs_ok			ld a,(fs_cluster_size)			0049B2 CB3F                B   427    cltoslp			srl a
0049B4 28 04               B   428    				jr z,powdone
0049B6 DD29                B   429    				add ix,ix
0049B8 18 F8               B   430    				jr cltoslp	
0049BA FD21 76 61 00       B   431    powdone			ld iy,xrr_temp
0049BF FD3E00              B   432    				ld (iy),ix						0049C2 FDCB023E            B   433    				srl (iy+2)
0049C6 FDCB011E            B   434    				rr (iy+1)
0049CA FDCB001E            B   435    				rr (iy+0)						0049CE FD1700              B   436    				ld de,(iy)						0049D1 AF                  B   437    				xor a
0049D2 C9                  B   438    				ret
                           B   439    
                           B   440    ;----------------------------------------------
                           B   441    
0049D3                     B   442    fs_change_dir_command
                           B   443    
                           B   444    ; INPUT: HL = directory name ascii (zero/space 
                           B   445    			
                           B   446    			
0049D3 CD C3 51 00         B   447    				call fs_find_filename			0049D7 D8                  B   448    				ret c							0049D8 FEC2                B   449    				cp 0c2h							0049DA 20 04               B   450    				jr nz,founddir
0049DC AF                  B   451    				xor a							0049DD 3ED1                B   452    				ld a,0d1h						0049DF C9                  B   453    				ret
0049E0 AF                  B   454    founddir		xor a							0049E1 3E04                B   455    				ld a,04h						Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 197


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
0049E3 DDCB0B66            B   456    				bit 4,(ix+0bh)
0049E7 C8                  B   457    				ret z
0049E8 11000000            B   458    				ld de,0
0049EC DD5E1A              B   459    				ld e,(ix+01ah)
0049EF DD561B              B   460    				ld d,(ix+01bh)					0049F2 CD B6 1A 00         B   461    				call fs_update_dir_cluster
0049F6 AF                  B   462    				xor a
0049F7 C9                  B   463    				ret
                           B   464    
                           B   465    
                           B   466    ;----------------------------------------------
                           B   467    	
                           B   468    	
0049F8                     B   469    fs_goto_root_dir_command
                           B   470    
0049F8 D5                  B   471    				push de
0049F9 11000000            B   472    				ld de,0
0049FD CD B6 1A 00         B   473    				call fs_update_dir_cluster
004A01 D1                  B   474    				pop de
004A02 AF                  B   475    				xor a
004A03 C9                  B   476    				ret
                           B   477    
                           B   478    ;----------------------------------------------
                           B   479    	
                           B   480    	
004A04                     B   481    fs_parent_dir_command
                           B   482    
004A04 CD AA 1A 00         B   483    				call fs_get_dir_cluster
004A08 7A                  B   484    				ld a,d
004A09 B3                  B   485    				or e
004A0A 20 03               B   486    				jr nz,pdnaroot
004A0C 3ECA                B   487    				ld a,0cah						004A0E C9                  B   488    				ret
004A0F 212E2E20            B   489    pdnaroot		ld hl,0202e2eh					004A13 22 B6 54 00         B   490    				ld (fs_sought_filename),hl		004A17 21 B9 54 00         B   491    				ld hl,fs_sought_filename+3		004A1B 3E20                B   492    				ld a,32
004A1D 01080000            B   493    				ld bc,8
004A21 CD C6 15 00         B   494    				call os_bchl_memfill
004A25 18 AC               B   495    				jr fs_change_dir_command
                           B   496    				
                           B   497    		
                           B   498    ;----------------------------------------------
                           B   499    		
004A27                     B   500    fs_open_file_command
                           B   501    
                           B   502    ; INPUT: xHL = directory name ascii (zero/space
                           B   503    ; OUTPUT: C:xDE  = File length
                           B   504    ;            HL  = Start cluster of file
                           B   505    ;            Internal vars (file pointer reset 
                           B   506    
                           B   507    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 198


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004A27 CD C3 51 00         B   508    				call fs_find_filename			004A2B D8                  B   509    				ret c							004A2C C0                  B   510    				ret nz							                           B   511    								
004A2D 3EC6                B   512    				ld a,0c6h						004A2F DDCB0B66            B   513    				bit 4,(ix+0bh)
004A33 C0                  B   514    				ret nz
                           B   515    
004A34 AF                  B   516    				xor a
004A35 32 0C 55 00         B   517    				ld (fs_filepointer_valid),a		004A39 21000000            B   518    				ld hl,0
004A3D 22 DA 54 00         B   519    				ld (fs_file_pointer),hl			004A41 32 DD 54 00         B   520    				ld (fs_file_pointer+3),a		                           B   521    				
004A45 DD171C              B   522    				ld de,(ix+01ch)
004A48 D5                  B   523    				push de
004A49 E1                  B   524    				pop hl
004A4A DD4E1F              B   525    				ld c,(ix+01fh)					004A4D ED53 DE 54 00       B   526    				ld (fs_file_length),de			004A52 79                  B   527    				ld a,c
004A53 32 E1 54 00         B   528    				ld (fs_file_length+3),a			004A57 B7                  B   529    				or a							004A58 28 04               B   530    				jr z,fs_dflsm					004A5A 21FFFFFF            B   531    				ld hl,0ffffffh
004A5E 22 E6 54 00         B   532    fs_dflsm		ld (fs_file_transfer_length),hl
                           B   533    				
004A62 21000000            B   534    				ld hl,0
004A66 DD6E1A              B   535    				ld l,(ix+01ah)		
004A69 DD661B              B   536    				ld h,(ix+01bh)
004A6C 22 E9 54 00         B   537    				ld (fs_file_start_cluster),hl	004A70 AF                  B   538    				xor a
004A71 C9                  B   539    				ret
                           B   540    
                           B   541    	
                           B   542    ;----------------------------------------------
                           B   543    
004A72                     B   544    fs_read_data_command		
                           B   545    
                           B   546    ;*******************************************
                           B   547    ;*** 'fs_open_file' must be called first ***
                           B   548    ;*******************************************
                           B   549    		
004A72 2A E6 54 00         B   550    fs_load			ld hl,(fs_file_transfer_length)
004A76 11000000            B   551    				ld de,0
004A7A AF                  B   552    				xor a
004A7B ED5A                B   553    				adc hl,de
004A7D 20 04               B   554    				jr nz,fs_btrok
004A7F AF                  B   555    fs_fliz			xor a							004A80 3EC7                B   556    				ld a,0c7h						004A82 C9                  B   557    				ret
                           B   558    			 
004A83 2A EF 54 00         B   559    fs_btrok		ld hl,(fs_ez80_address)			Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 199


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004A87 22 F2 54 00         B   560    				ld (fs_ez80_working_address),hl
                           B   561    			
004A8B 2A DE 54 00         B   562    				ld hl,(fs_file_length)			004A8F ED4B DA 54 00       B   563    				ld bc,(fs_file_pointer)			004A94 3A DD 54 00         B   564    				ld a,(fs_file_pointer+3)		004A98 5F                  B   565    				ld e,a
004A99 3A E1 54 00         B   566    				ld a,(fs_file_length+3)
004A9D B7                  B   567    				or a							004A9E ED42                B   568    				sbc hl,bc
004AA0 9B                  B   569    				sbc a,e
004AA1 38 09               B   570    				jr c,fs_fpbad
004AA3 01000000            B   571    				ld bc,0
004AA7 AF                  B   572    				xor a
004AA8 ED4A                B   573    				adc hl,bc
004AAA 20 04               B   574    				jr nz,fs_fpok
004AAC AF                  B   575    fs_fpbad		xor a
004AAD 3ECC                B   576    				ld a,0cch						004AAF C9                  B   577    				ret
                           B   578    			
                           B   579    	
004AB0 3A 0C 55 00         B   580    fs_fpok			ld a,(fs_filepointer_valid)		004AB4 B7                  B   581    				or a							004AB5 28 1B               B   582    				jr z,seek_strt
                           B   583    			
004AB7 ED5B F2 54 00       B   584    				ld de,(fs_ez80_working_address)
004ABC ED4B 0D 55 00       B   585    				ld bc,(fs_sector_pos_cnt)		004AC1 C5                  B   586    				push bc
004AC2 ED4B F5 54 00       B   587    				ld bc,(fs_in_sector_offset)
004AC7 21 AE 68 00         B   588    				ld hl,sector_buffer+0200h		004ACB AF                  B   589    				xor a
004ACC ED42                B   590    				sbc hl,bc		
004ACE C3 5E 4B 00         B   591    				jr fs_dadok
                           B   592    				
                           B   593    			
004AD2 3E01                B   594    seek_strt		ld a,1
004AD4 32 0C 55 00         B   595    				ld (fs_filepointer_valid),a
004AD8 2A E9 54 00         B   596    				ld hl,(fs_file_start_cluster)	004ADC 22 EC 54 00         B   597    				ld (fs_file_working_cluster),hl
                           B   598    			
004AE0 3A DD 54 00         B   599    				ld a,(fs_file_pointer+3)		004AE4 2A DA 54 00         B   600    				ld hl,(fs_file_pointer)			004AE8 ED4B A0 54 00       B   601    fs_fpblp		ld bc,(fs_bytes_per_cluster)
004AED AF                  B   602    				xor a
004AEE ED42                B   603    				sbc hl,bc						004AF0 DE00                B   604    				sbc a,0
004AF2 38 14               B   605    				jr c,fs_fpgbo
004AF4 E5                  B   606    fs_fpgnb		push hl				
004AF5 2A EC 54 00         B   607    				ld hl,(fs_file_working_cluster)
004AF9 CD D3 52 00         B   608    				call get_fat_entry_for_cluster
004AFD 30 02               B   609    				jr nc,fs_ghok					004AFF E1                  B   610    				pop hl
004B00 C9                  B   611    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 200


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004B01 22 EC 54 00         B   612    fs_ghok			ld (fs_file_working_cluster),hl
004B05 E1                  B   613    				pop hl
004B06 18 E0               B   614    				jr fs_fpblp
                           B   615    			
004B08 09                  B   616    fs_fpgbo		add hl,bc						004B09 4C                  B   617    				ld c,h
004B0A CB39                B   618    				srl c							004B0C 3A 9F 54 00         B   619    				ld a,(fs_cluster_size)
004B10 91                  B   620    				sub c
004B11 47                  B   621    				ld b,a							004B12 7C                  B   622    				ld a,h
004B13 E601                B   623    				and 01h
004B15 67                  B   624    				ld h,a
004B16 22 F5 54 00         B   625    				ld (fs_in_sector_offset),hl		                           B   626    				
004B1A 79                  B   627    fs_flns			ld a,c				
004B1B 2A EC 54 00         B   628    				ld hl,(fs_file_working_cluster)
004B1F CD AA 53 00         B   629    				call cluster_and_offset_to_lba
004B23 CD 2B 54 00         B   630    				call fs_read_sector				004B27 D8                  B   631    				ret c							                           B   632    			
004B28 C5                  B   633    				push bc							004B29 11000000            B   634    				ld de,0
004B2D 2A F5 54 00         B   635    				ld hl,(fs_in_sector_offset)		004B31 5D                  B   636    				ld e,l
004B32 54                  B   637    				ld d,h
004B33 21000200            B   638    				ld hl,512
004B37 AF                  B   639    				xor a
004B38 ED52                B   640    				sbc hl,de						004B3A 44                  B   641    				ld b,h
004B3B 4D                  B   642    				ld c,l							004B3C 21 AE 66 00         B   643    				ld hl,sector_buffer				004B40 19                  B   644    				add hl,de						004B41 ED5B F2 54 00       B   645    				ld de,(fs_ez80_working_address)
004B46 EDA0                B   646    fs_cblp			ldi 							                           B   647    
004B48 7A                  B   648    				ld a,d							004B49 B3                  B   649    				or e
004B4A 20 0C               B   650    				jr nz,fs_edaok
004B4C ED53 F2 54 00       B   651    				ld (fs_ez80_working_address),de
004B51 3A F4 54 00         B   652    				ld a,(fs_ez80_working_address+2
004B55 B7                  B   653    				or a
004B56 28 43               B   654    				jr z,fs_mem_error
                           B   655    
004B58 CD 33 53 00         B   656    fs_edaok		call transfer_length_countdown	004B5C 28 30               B   657    				jr z,fs_bdld
004B5E 78                  B   658    fs_dadok		ld a,b							004B5F B1                  B   659    				or c
004B60 20 E4               B   660    				jr nz,fs_cblp
                           B   661    			
004B62 ED43 F5 54 00       B   662    				ld (fs_in_sector_offset),bc		004B67 ED53 F2 54 00       B   663    				ld (fs_ez80_working_address),de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 201


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004B6C C1                  B   664    				pop bc							004B6D 0C                  B   665    				inc c							004B6E 10 AA               B   666    				djnz fs_flns					                           B   667    			
004B70 2A EC 54 00         B   668    				ld hl,(fs_file_working_cluster)
004B74 CD D3 52 00         B   669    				call get_fat_entry_for_cluster	004B78 D8                  B   670    				ret c							004B79 22 EC 54 00         B   671    				ld (fs_file_working_cluster),hl
004B7D CD 7C 50 00         B   672    				call fs_compare_hl_fff8			004B81 D2 AC 4A 00         B   673    				jp nc,fs_fpbad			
004B85 0E00                B   674    fs_nfbok		ld c,0							004B87 3A 9F 54 00         B   675    				ld a,(fs_cluster_size)	
004B8B 47                  B   676    				ld b,a							004B8C 18 8C               B   677    				jr fs_flns		
                           B   678    			
004B8E ED43 F5 54 00       B   679    fs_bdld			ld (fs_in_sector_offset),bc		004B93 C1                  B   680    				pop bc							004B94 ED43 0D 55 00       B   681    				ld (fs_sector_pos_cnt),bc
004B99 AF                  B   682    				xor a							004B9A C9                  B   683    				ret
                           B   684    				
004B9B 3EC8                B   685    fs_mem_error	ld a,0c8h						004B9D C1                  B   686    fs_flerr		pop bc
004B9E B7                  B   687    				or a							004B9F C9                  B   688    				ret			
                           B   689    			
                           B   690    ;----------------------------------------------
                           B   691    
004BA0                     B   692    fs_make_dir_command		
                           B   693    				
004BA0 CD C3 51 00         B   694    				call fs_find_filename			004BA4 D8                  B   695    				ret c
004BA5 FEC2                B   696    				cp 0c2h							004BA7 28 04               B   697    				jr z,mdirfnde
004BA9 AF                  B   698    				xor a							004BAA 3EC9                B   699    				ld a,0c9h						004BAC C9                  B   700    				ret
                           B   701    			
004BAD CD 89 50 00         B   702    mdirfnde		call fs_find_free_cluster		004BB1 D8                  B   703    				ret c							004BB2 C0                  B   704    				ret nz							                           B   705    							
004BB3 2A FC 54 00         B   706    				ld hl,(fs_free_cluster)
004BB7 22 FF 54 00         B   707    				ld (fs_new_file_cluster),hl
                           B   708    			
004BBB CD DA 50 00         B   709    				call fs_find_free_dir_entry		004BBF D8                  B   710    				ret c							004BC0 C0                  B   711    				ret nz							                           B   712    			
004BC1 DDE5                B   713    				push ix							004BC3 D1                  B   714    				pop de
004BC4 21 B6 54 00         B   715    				ld hl,fs_sought_filename
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 202


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004BC8 010B0000            B   716    				ld bc,11
004BCC EDB0                B   717    				ldir
004BCE AF                  B   718    				xor a							004BCF 0615                B   719    				ld b,21
004BD1 12                  B   720    clrdiren		ld (de),a
004BD2 13                  B   721    				inc de
004BD3 10 FC               B   722    				djnz clrdiren
004BD5 DD360B10            B   723    				ld (ix+0bh),010h				004BD9 DD361821            B   724    				ld (ix+018h),021h				004BDD ED5B FF 54 00       B   725    				ld de,(fs_new_file_cluster)
004BE2 DD731A              B   726    				ld (ix+01ah),e					004BE5 DD721B              B   727    				ld (ix+01bh),d
004BE8 CD 44 54 00         B   728    				call fs_write_sector			004BEC D8                  B   729    				ret c							                           B   730    				
004BED CD B1 51 00         B   731    				call fs_clear_sector_buffer
004BF1 DD21 AE 66 00       B   732    				ld ix,sector_buffer				004BF6 DD36002E            B   733    				ld (ix+00h),02eh				004BFA DD360120            B   734    				ld (ix+01h),020h
004BFE DD36202E            B   735    				ld (ix+020h),02eh
004C02 DD36212E            B   736    				ld (ix+021h),02eh
004C06 DD360B10            B   737    				ld (ix+0bh),010h
004C0A DD362B10            B   738    				ld (ix+02bh),010h
004C0E ED5B FF 54 00       B   739    				ld de,(fs_new_file_cluster)		004C13 DD731A              B   740    				ld (ix+01ah),e
004C16 DD721B              B   741    				ld (ix+01bh),d
004C19 CD AA 1A 00         B   742    				call fs_get_dir_cluster			004C1D DD733A              B   743    				ld (ix+03ah),e
004C20 DD723B              B   744    				ld (ix+03bh),d
004C23 DD361821            B   745    				ld (ix+018h),021h				004C27 DD363821            B   746    				ld (ix+038h),021h				004C2B 0609                B   747    				ld b,9
004C2D DD360220            B   748    mndelp			ld (ix+002h),32
004C31 DD362220            B   749    				ld (ix+022h),32
004C35 DD23                B   750    				inc ix
004C37 10 F4               B   751    				djnz mndelp
004C39 2A FF 54 00         B   752    				ld hl,(fs_new_file_cluster)		004C3D AF                  B   753    				xor a
004C3E CD AA 53 00         B   754    				call cluster_and_offset_to_lba
004C42 CD 44 54 00         B   755    				call fs_write_sector
004C46 D8                  B   756    				ret c							                           B   757    			
004C47 CD B1 51 00         B   758    				call fs_clear_sector_buffer		004C4B AF                  B   759    				xor a
004C4C 3C                  B   760    wroslp			inc a
004C4D 32 F8 54 00         B   761    				ld (fs_working_sector),a
004C51 21 9F 54 00         B   762    				ld hl,fs_cluster_size
004C55 BE                  B   763    				cp (hl)
004C56 28 13               B   764    				jr z,allsclr
004C58 2A FF 54 00         B   765    				ld hl,(fs_new_file_cluster)
004C5C CD AA 53 00         B   766    				call cluster_and_offset_to_lba
004C60 CD 44 54 00         B   767    				call fs_write_sector
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 203


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004C64 D8                  B   768    				ret c
004C65 3A F8 54 00         B   769    				ld a,(fs_working_sector)
004C69 18 E1               B   770    				jr wroslp
                           B   771    			
004C6B 2A FF 54 00         B   772    allsclr			ld hl,(fs_new_file_cluster)		004C6F 11FFFF00            B   773    				ld de,0ffffh
004C73 CD FF 52 00         B   774    				call update_fat_entry_for_clust
004C77 AF                  B   775    				xor a
004C78 C9                  B   776    				ret
                           B   777    
                           B   778    
                           B   779    
                           B   780    ;----------------------------------------------
                           B   781    
004C79                     B   782    fs_delete_dir_command
                           B   783    
004C79 CD C3 51 00         B   784    				call fs_find_filename			004C7D D8                  B   785    				ret c
004C7E 28 04               B   786    				jr z,ddc_gotd
004C80 3ED1                B   787    				ld a,0d1h						004C82 B7                  B   788    				or a
004C83 C9                  B   789    				ret
                           B   790    				
004C84 DDCB0B66            B   791    ddc_gotd		bit 4,(ix+0bh)					004C88 20 04               B   792    				jr nz,okdeldir
004C8A AF                  B   793    				xor a
004C8B 3EC4                B   794    				ld a,0c4h						004C8D C9                  B   795    				ret
                           B   796    				
004C8E DD22 02 55 00       B   797    okdeldir		ld (fs_fname_in_sector_addr),ix
004C93 CD 09 54 00         B   798    				call backup_sector_lba
004C97 DD6E1A              B   799    				ld l,(ix+01ah)					004C9A DD661B              B   800    				ld h,(ix+01bh)
                           B   801    				
004C9D 3A 9F 54 00         B   802    fs_ddecl		ld a,(fs_cluster_size)
004CA1 47                  B   803    				ld b,a							004CA2 0E00                B   804    				ld c,0			
004CA4 79                  B   805    fs_cne2 		ld a,c
004CA5 CD AA 53 00         B   806    				call cluster_and_offset_to_lba
004CA9 CD 2B 54 00         B   807    				call fs_read_sector
004CAD D8                  B   808    				ret c							                           B   809    				
004CAE C5                  B   810    				push bc
004CAF 0610                B   811    				ld b,16							004CB1 DD21 AE 66 00       B   812    				ld ix,sector_buffer
004CB6 11200000            B   813    				ld de,020h
004CBA DD7E00              B   814    fs_cne1			ld a,(ix)
004CBD B7                  B   815    				or a
004CBE 28 0D               B   816    				jr z,fs_chnde
004CC0 FEE5                B   817    				cp 0e5h
004CC2 28 09               B   818    				jr z,fs_chnde
004CC4 FE2E                B   819    				cp '.'
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 204


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004CC6 28 05               B   820    				jr z,fs_chnde
004CC8 C1                  B   821    				pop bc
004CC9 AF                  B   822    				xor a							004CCA 3EC5                B   823    				ld a,0c5h						004CCC C9                  B   824    				ret
                           B   825    			
004CCD DD19                B   826    fs_chnde		add ix,de
004CCF 10 E9               B   827    				djnz fs_cne1
004CD1 C1                  B   828    				pop bc
004CD2 0C                  B   829    				inc c
004CD3 10 CF               B   830    				djnz fs_cne2
                           B   831    			
004CD5 CD D3 52 00         B   832    				call get_fat_entry_for_cluster	004CD9 D8                  B   833    				ret c
004CDA CD 7C 50 00         B   834    				call fs_compare_hl_fff8
004CDE 38 BD               B   835    				jr c,fs_ddecl
                           B   836    			
004CE0 CD 1E 54 00         B   837    dir_empty		call restore_sector_lba			004CE4 CD 2B 54 00         B   838    				call fs_read_sector
004CE8 D8                  B   839    				ret c							004CE9 2A 02 55 00         B   840    				ld hl,(fs_fname_in_sector_addr)
004CED 36E5                B   841    fs_delco		ld (hl),0e5h					004CEF CD 44 54 00         B   842    				call fs_write_sector
004CF3 D8                  B   843    				ret c
                           B   844    			
004CF4 E5                  B   845    				push hl
004CF5 DDE1                B   846    				pop ix
004CF7 DD6E1A              B   847    				ld l,(ix+01ah)
004CFA DD661B              B   848    				ld h,(ix+01bh)
004CFD 22 F9 54 00         B   849    				ld (fs_working_cluster),hl
004D01 7C                  B   850    				ld a,h							004D02 B5                  B   851    				or l							004D03 C8                  B   852    				ret z							                           B   853    				
004D04 2A F9 54 00         B   854    clrfatlp		ld hl,(fs_working_cluster)
004D08 CD D3 52 00         B   855    				call get_fat_entry_for_cluster
004D0C D8                  B   856    				ret c
004D0D EB                  B   857    				ex de,hl
                           B   858    				
004D0E 2A F9 54 00         B   859    				ld hl,(fs_working_cluster)
004D12 ED53 F9 54 00       B   860    				ld (fs_working_cluster),de
004D17 11000000            B   861    				ld de,0
004D1B CD FF 52 00         B   862    				call update_fat_entry_for_clust
004D1F D8                  B   863    				ret c
                           B   864    				
004D20 CD 7C 50 00         B   865    				call fs_compare_hl_fff8			004D24 38 DE               B   866    				jr c,clrfatlp
004D26 AF                  B   867    				xor a
004D27 C9                  B   868    				ret
                           B   869    
                           B   870    
                           B   871    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 205


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B   872    
004D28                     B   873    fs_create_file_command
                           B   874    
                           B   875    ; Note: As per FAT standard, creating a file (0
                           B   876    ; only a directory entry (FAT is only updated w
                           B   877    
004D28 CD C3 51 00         B   878    				call fs_find_filename			004D2C D8                  B   879    				ret c
004D2D FEC2                B   880    				cp 0c2h							004D2F 28 04               B   881    				jr z,mfilefnde
004D31 AF                  B   882    				xor a							004D32 3EC9                B   883    				ld a,0c9h						004D34 C9                  B   884    				ret
                           B   885    			
004D35 CD DA 50 00         B   886    mfilefnde		call fs_find_free_dir_entry		004D39 D8                  B   887    				ret c							004D3A C0                  B   888    				ret nz							                           B   889    			
004D3B DDE5                B   890    				push ix							004D3D D1                  B   891    				pop de
004D3E 21 B6 54 00         B   892    				ld hl,fs_sought_filename
004D42 010B0000            B   893    				ld bc,11
004D46 EDB0                B   894    				ldir
004D48 AF                  B   895    				xor a							004D49 0615                B   896    				ld b,21
004D4B 12                  B   897    clrfnen			ld (de),a
004D4C 13                  B   898    				inc de
004D4D 10 FC               B   899    				djnz clrfnen
004D4F DD361821            B   900    				ld (ix+018h),021h				004D53 CD 44 54 00         B   901    				call fs_write_sector			004D57 D8                  B   902    				ret c							004D58 AF                  B   903    				xor a
004D59 C9                  B   904    				ret								                           B   905    
                           B   906    
                           B   907    ;----------------------------------------------
                           B   908    
004D5A                     B   909    fs_write_bytes_to_file_command
                           B   910    	
                           B   911    ; *********************************************
                           B   912    ; * set up: fs_file_transfer_length (new data),
                           B   913    ; * before calling                             
                           B   914    ; *********************************************
                           B   915    
                           B   916    				
004D5A ED5B E6 54 00       B   917    				ld de,(fs_file_transfer_length)
004D5F 21000000            B   918    				ld hl,0
004D63 AF                  B   919    				xor a
004D64 ED5A                B   920    				adc hl,de
004D66 CA 7F 4A 00         B   921    				jp z,fs_fliz					                           B   922    				 
004D6A CD C3 51 00         B   923    				call fs_find_filename			Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 206


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004D6E D8                  B   924    				ret c							004D6F FEC2                B   925    				cp 0c2h				
004D71 C8                  B   926    				ret z							004D72 DDCB0B66            B   927    				bit 4,(ix+0bh)					004D76 28 04               B   928    				jr z,fs_oknad					004D78 AF                  B   929    				xor a							004D79 3EC6                B   930    				ld a,0c6h						004D7B C9                  B   931    				ret
                           B   932    
004D7C CD 09 54 00         B   933    fs_oknad		call backup_sector_lba
004D80 DD22 02 55 00       B   934    				ld (fs_fname_in_sector_addr),ix
                           B   935    
004D85 DD311C              B   936    				ld iy,(ix+01ch)					004D88 DD7E1F              B   937    				ld a,(ix+01fh)
004D8B FD22 E2 54 00       B   938    				ld (fs_existing_file_length),iy
004D90 32 E2 54 00         B   939    				ld (fs_existing_file_length),a
004D94 ED5B E6 54 00       B   940    				ld de,(fs_file_transfer_length)
004D99 FD19                B   941    				add iy,de						004D9B CE00                B   942    				adc a,0
004D9D DD3E1C              B   943    				ld (ix+01ch),iy					004DA0 DD771F              B   944    				ld (ix+01fh),a					004DA3 30 04               B   945    				jr nc,nfsizeok
004DA5 AF                  B   946    				xor a
004DA6 3EC7                B   947    				ld a,0c7h						004DA8 C9                  B   948    				ret
                           B   949    
004DA9 11000000            B   950    nfsizeok		ld de,0
004DAD DD5E1A              B   951    				ld e,(ix+01ah)					004DB0 DD561B              B   952    				ld d,(ix+01bh)					004DB3 ED53 EC 54 00       B   953    				ld (fs_file_working_cluster),de
004DB8 CD 44 54 00         B   954    				call fs_write_sector			004DBC D8                  B   955    				ret c
004DBD 7A                  B   956    				ld a,d
004DBE B3                  B   957    				or e
004DBF 20 35               B   958    				jr nz,apenclch	
                           B   959    				
004DC1 CD 89 50 00         B   960    				call fs_find_free_cluster		004DC5 D8                  B   961    				ret c
004DC6 C0                  B   962    				ret nz
004DC7 2A FC 54 00         B   963    				ld hl,(fs_free_cluster)
004DCB 22 EC 54 00         B   964    				ld (fs_file_working_cluster),hl
004DCF 11FFFF00            B   965    				ld de,0ffffh
004DD3 CD FF 52 00         B   966    				call update_fat_entry_for_clust
004DD7 D8                  B   967    				ret c
                           B   968    			
004DD8 CD 1E 54 00         B   969    				call restore_sector_lba			004DDC CD 2B 54 00         B   970    				call fs_read_sector
004DE0 D8                  B   971    				ret c
004DE1 DD2A 02 55 00       B   972    				ld ix,(fs_fname_in_sector_addr)
004DE6 ED5B EC 54 00       B   973    				ld de,(fs_file_working_cluster)
004DEB DD731A              B   974    				ld (ix+01ah),e
004DEE DD721B              B   975    				ld (ix+01bh),d
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 207


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004DF1 CD 44 54 00         B   976    				call fs_write_sector			004DF5 D8                  B   977    				ret c
                           B   978    				
                           B   979    					
004DF6 2A EC 54 00         B   980    apenclch		ld hl,(fs_file_working_cluster)
004DFA CD D3 52 00         B   981    				call get_fat_entry_for_cluster
004DFE D8                  B   982    				ret c
004DFF CD 7C 50 00         B   983    				call fs_compare_hl_fff8
004E03 30 1C               B   984    				jr nc,atlclif
004E05 22 EC 54 00         B   985    				ld (fs_file_working_cluster),hl
004E09 01000000            B   986    				ld bc,0
004E0D 3A 9F 54 00         B   987    				ld a,(fs_cluster_size)
004E11 CB27                B   988    				sla a
004E13 47                  B   989    				ld b,a
004E14 2A E2 54 00         B   990    				ld hl,(fs_existing_file_length)
004E18 AF                  B   991    				xor a							004E19 ED42                B   992    				sbc hl,bc						004E1B 22 E2 54 00         B   993    				ld (fs_existing_file_length),hl
004E1F 18 D5               B   994    				jr apenclch
                           B   995    				
004E21 ED4B E2 54 00       B   996    atlclif			ld bc,(fs_existing_file_length)
004E26 CB38                B   997    				srl b				
004E28 48                  B   998    				ld c,b							004E29 3A 9F 54 00         B   999    				ld a,(fs_cluster_size)
004E2D 91                  B  1000    				sub c
004E2E 47                  B  1001    				ld b,a							004E2F 28 79               B  1002    				jr z,fs_sfncl					                           B  1003    				
004E31 2A EC 54 00         B  1004    				ld hl,(fs_file_working_cluster)
004E35 79                  B  1005    				ld a,c
004E36 CD AA 53 00         B  1006    				call cluster_and_offset_to_lba
004E3A CD 2B 54 00         B  1007    				call fs_read_sector
004E3E D8                  B  1008    				ret c
004E3F C5                  B  1009    				push bc							                           B  1010    				
004E40 11000000            B  1011    				ld de,0
004E44 3A E2 54 00         B  1012    				ld a,(fs_existing_file_length)
004E48 5F                  B  1013    				ld e,a
004E49 3A E3 54 00         B  1014    				ld a,(fs_existing_file_length+1
004E4D E601                B  1015    				and 1
004E4F 57                  B  1016    				ld d,a							004E50 21000200            B  1017    				ld hl,512	
004E54 AF                  B  1018    				xor a
004E55 ED52                B  1019    				sbc hl,de						004E57 E5                  B  1020    				push hl
004E58 C1                  B  1021    				pop bc							004E59 21 AE 66 00         B  1022    				ld hl,sector_buffer
004E5D 19                  B  1023    				add hl,de
004E5E EB                  B  1024    				ex de,hl						004E5F 7C                  B  1025    				ld a,h			
004E60 B5                  B  1026    				or l
004E61 20 04               B  1027    				jr nz,fs_dcsb					Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 208


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004E63 CD B1 51 00         B  1028    fs_dbfil		call fs_clear_sector_buffer
004E67 2A EF 54 00         B  1029    fs_dcsb			ld hl,(fs_ez80_address)			004E6B EDA0                B  1030    fs_cbsb			ldi								004E6D 7C                  B  1031    				ld a,h							004E6E B5                  B  1032    				or l
004E6F 20 0D               B  1033    				jr nz,fs_srcadok
004E71 22 EF 54 00         B  1034    				ld (fs_ez80_address),hl
004E75 3A F1 54 00         B  1035    				ld a,(fs_ez80_address+2)
004E79 B7                  B  1036    				or a
004E7A CA 9B 4B 00         B  1037    				jp z,fs_mem_error
004E7E CD 33 53 00         B  1038    fs_srcadok		call transfer_length_countdown
004E82 28 54               B  1039    				jr z,fs_lbof					004E84 78                  B  1040    fs_sadok		ld a,b							004E85 B1                  B  1041    				or c
004E86 20 E3               B  1042    				jr nz,fs_cbsb					                           B  1043    
004E88 22 EF 54 00         B  1044    				ld (fs_ez80_address),hl			004E8C C1                  B  1045    				pop bc							004E8D 79                  B  1046    				ld a,c
004E8E 2A EC 54 00         B  1047    				ld hl,(fs_file_working_cluster)
004E92 CD AA 53 00         B  1048    				call cluster_and_offset_to_lba
004E96 CD 44 54 00         B  1049    				call fs_write_sector			004E9A D8                  B  1050    				ret c							004E9B 0C                  B  1051    				inc c							004E9C 05                  B  1052    				dec b
004E9D 28 0B               B  1053    				jr z,fs_sfncl					004E9F C5                  B  1054    fs_sfns			push bc				
004EA0 01000200            B  1055    				ld bc,512						004EA4 11 AE 66 00         B  1056    				ld de,sector_buffer				004EA8 18 B9               B  1057    				jr fs_dbfil						                           B  1058    				
004EAA CD 89 50 00         B  1059    fs_sfncl		call fs_find_free_cluster		004EAE D8                  B  1060    				ret c							004EAF C0                  B  1061    				ret nz							004EB0 2A EC 54 00         B  1062    				ld hl,(fs_file_working_cluster)
004EB4 ED5B FC 54 00       B  1063    				ld de,(fs_free_cluster)
004EB9 CD FF 52 00         B  1064    				call update_fat_entry_for_clust
004EBD D8                  B  1065    				ret c
004EBE 2A FC 54 00         B  1066    				ld hl,(fs_free_cluster)
004EC2 22 EC 54 00         B  1067    				ld (fs_file_working_cluster),hl
004EC6 11FFFF00            B  1068    				ld de,0ffffh
004ECA CD FF 52 00         B  1069    				call update_fat_entry_for_clust
004ECE D8                  B  1070    				ret c
004ECF 3A 9F 54 00         B  1071    				ld a,(fs_cluster_size)
004ED3 47                  B  1072    				ld b,a							004ED4 0E00                B  1073    				ld c,0							004ED6 18 C7               B  1074    				jr fs_sfns						                           B  1075    				
004ED8 C1                  B  1076    fs_lbof			pop bc
004ED9 79                  B  1077    				ld a,c							004EDA 2A EC 54 00         B  1078    				ld hl,(fs_file_working_cluster)
004EDE CD AA 53 00         B  1079    				call cluster_and_offset_to_lba
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 209


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004EE2 CD 44 54 00         B  1080    				call fs_write_sector	
004EE6 D8                  B  1081    				ret c
004EE7 AF                  B  1082    				xor a							004EE8 C9                  B  1083    				ret
                           B  1084    
                           B  1085    ;----------------------------------------------
                           B  1086    
004EE9                     B  1087    fs_erase_file_command
                           B  1088    
                           B  1089    
004EE9 CD C3 51 00         B  1090    				call fs_find_filename			004EED D8                  B  1091    				ret c
004EEE C0                  B  1092    				ret nz
                           B  1093    				
004EEF DDCB0B66            B  1094    				bit 4,(ix+0bh)					004EF3 28 04               B  1095    				jr z,okdelf
004EF5 AF                  B  1096    				xor a
004EF6 3EC6                B  1097    				ld a,0c6h						004EF8 C9                  B  1098    				ret
                           B  1099    				
004EF9 DDE5                B  1100    okdelf			push ix
004EFB E1                  B  1101    				pop hl
004EFC C3 ED 4C 00         B  1102    				jp fs_delco						                           B  1103    					
                           B  1104    
                           B  1105    ;----------------------------------------------
                           B  1106    
                           B  1107    
004F00                     B  1108    fs_rename_command
                           B  1109    
004F00 CD C3 51 00         B  1110    				call fs_find_filename			004F04 D8                  B  1111    				ret c							004F05 FEC2                B  1112    				cp 0c2h							004F07 28 04               B  1113    				jr z,fs_nfnok					004F09 AF                  B  1114    				xor a							004F0A 3EC9                B  1115    				ld a,0c9h						004F0C C9                  B  1116    				ret
                           B  1117    			
004F0D 21 B6 54 00         B  1118    fs_nfnok		ld hl,fs_sought_filename		004F11 11 CE 54 00         B  1119    				ld de,fs_filename_buffer
004F15 010B0000            B  1120    				ld bc,11
004F19 EDB0                B  1121    				ldir
004F1B 21 C2 54 00         B  1122    				ld hl,fs_alt_filename			004F1F 11 B6 54 00         B  1123    				ld de,fs_sought_filename
004F23 010B0000            B  1124    				ld bc,11
004F27 EDB0                B  1125    				ldir
004F29 CD C3 51 00         B  1126    				call fs_find_filename			004F2D D8                  B  1127    				ret c
004F2E FEC2                B  1128    				cp 0c2h
004F30 C8                  B  1129    				ret z							                           B  1130    				
004F31 DDE5                B  1131    				push ix
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 210


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004F33 D1                  B  1132    				pop de
004F34 21 CE 54 00         B  1133    				ld hl,fs_filename_buffer	 	004F38 010B0000            B  1134    				ld bc,11
004F3C EDB0                B  1135    				ldir							004F3E CD 44 54 00         B  1136    				call fs_write_sector			                           B  1137    				
004F42 AF                  B  1138    fs_rndone		xor a
004F43 C9                  B  1139    				ret
                           B  1140    				
                           B  1141    
                           B  1142    ;----------------------------------------------
                           B  1143    
                           B  1144    
004F44                     B  1145    fs_goto_first_dir_entry
                           B  1146    
004F44 CD AA 1A 00         B  1147    				call fs_get_dir_cluster
004F48 ED53 05 55 00       B  1148    				ld (fs_dir_entry_cluster),de
004F4D AF                  B  1149    				xor a
004F4E 32 0B 55 00         B  1150    				ld (fs_dir_entry_sector),a		004F52 11000000            B  1151    				ld de,0
004F56 ED53 08 55 00       B  1152    				ld (fs_dir_entry_line_offset),d
                           B  1153    				
                           B  1154    
                           B  1155    
004F5B                     B  1156    fs_get_dir_entry
                           B  1157    
                           B  1158    ; No input parameters.
                           B  1159    ;
                           B  1160    ; Returns HL    = Location of null terminated f
                           B  1161    ;         IX:IY = Length of file (if applicable
                           B  1162    ;         B     = File flag (1 = directory, 0 =
                           B  1163    ;         A     = Error code
                           B  1164    ;         Carry = Set if hardware error encount
                           B  1165    
                           B  1166    
004F5B 3A 0B 55 00         B  1167    				ld a,(fs_dir_entry_sector)		004F5F 4F                  B  1168    				ld c,a
004F60 2A 05 55 00         B  1169    				ld hl,(fs_dir_entry_cluster)	004F64 CD AA 53 00         B  1170    				call cluster_and_offset_to_lba
                           B  1171    			
004F68 7C                  B  1172    				ld a,h							004F69 B5                  B  1173    				or l							004F6A 20 09               B  1174    				jr nz,nr_read					004F6C 2A A9 54 00         B  1175    				ld hl,(fs_root_dir_position)	004F70 79                  B  1176    				ld a,c
004F71 CD F0 53 00         B  1177    				call set_absolute_lba
                           B  1178    				
004F75 CD 2B 54 00         B  1179    nr_read			call fs_read_sector				004F79 D8                  B  1180    				ret c							                           B  1181    				
004F7A ED5B 08 55 00       B  1182    				ld de,(fs_dir_entry_line_offset
004F7F DD21 AE 66 00       B  1183    dscan_int_loop	ld ix,sector_buffer
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 211


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004F84 DD19                B  1184    				add ix,de
004F86 DD7E00              B  1185    ds_int_loop		ld a,(ix)
004F89 B7                  B  1186    				or a							004F8A 28 0E               B  1187    				jr z,fs_dir_entry_free		
004F8C FEE5                B  1188    				cp 0e5h							004F8E 28 0A               B  1189    				jr z,fs_dir_entry_free	
004F90 FE05                B  1190    				cp 05h							004F92 28 06               B  1191    				jr z,fs_dir_entry_free	
004F94 DDCB0B5E            B  1192    				bit 3,(ix+0bh)					004F98 28 0D               B  1193    				jr z,fs_dir_entry_in_use		                           B  1194    
004F9A                     B  1195    fs_dir_entry_free
                           B  1196    
004F9A EB                  B  1197    				ex de,hl
004F9B 11200000            B  1198    				ld de,32
004F9F 19                  B  1199    				add hl,de
004FA0 EB                  B  1200    				ex de,hl
004FA1 CB4A                B  1201    				bit 1,d
004FA3 28 DA               B  1202    				jr z,dscan_int_loop
004FA5 18 54               B  1203    				jr dscan_new_sect
                           B  1204    
004FA7                     B  1205    fs_dir_entry_in_use
                           B  1206    				
004FA7 ED53 08 55 00       B  1207    				ld (fs_dir_entry_line_offset),d
004FAC DDE5                B  1208    				push ix
004FAE E1                  B  1209    				pop hl
004FAF CD 6F 10 00         B  1210    				call os_clear_output_line
004FB3 0608                B  1211    				ld b,8							004FB5 11 CE 61 00         B  1212    				ld de,output_line
004FB9 7E                  B  1213    dcopyn			ld a,(hl)
004FBA FE20                B  1214    				cp ' '							004FBC 28 02               B  1215    				jr z,digchar
004FBE 12                  B  1216    				ld (de),a
004FBF 13                  B  1217    				inc de
004FC0 23                  B  1218    digchar			inc hl
004FC1 10 F6               B  1219    				djnz dcopyn
004FC3 7E                  B  1220    				ld a,(hl)						004FC4 FE20                B  1221    				cp ' '							004FC6 28 0A               B  1222    				jr z,dirnoex
004FC8 3E2E                B  1223    				ld a,'.'						004FCA 12                  B  1224    				ld (de),a
004FCB 13                  B  1225    				inc de	
004FCC 01030000            B  1226    				ld bc,3							004FD0 EDB0                B  1227    				ldir
004FD2 AF                  B  1228    dirnoex			xor a 
004FD3 12                  B  1229    				ld (de),a						                           B  1230    				
004FD4 47                  B  1231    				ld b,a
004FD5 DDCB0B66            B  1232    				bit 4,(ix+0bh)					004FD9 28 01               B  1233    				jr z,fs_fniaf		
004FDB 04                  B  1234    				inc b							004FDC DD171C              B  1235    fs_fniaf		ld de,(ix+01ch)					Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 212


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004FDF DD4E1F              B  1236    				ld c,(ix+01fh)
004FE2 21 CE 61 00         B  1237    				ld hl,output_line				004FE6 AF                  B  1238    				xor a
004FE7 C9                  B  1239    				ret
                           B  1240    
                           B  1241    
                           B  1242    
                           B  1243    
004FE8                     B  1244    fs_goto_next_dir_entry
                           B  1245    
004FE8 11200000            B  1246    				ld de,32
004FEC 2A 08 55 00         B  1247    				ld hl,(fs_dir_entry_line_offset
004FF0 19                  B  1248    				add hl,de
004FF1 22 08 55 00         B  1249    				ld (fs_dir_entry_line_offset),h
004FF5 CB4C                B  1250    				bit 1,h
004FF7 CA 5B 4F 00         B  1251    				jp z,fs_get_dir_entry
                           B  1252    
004FFB 21000000            B  1253    dscan_new_sect	ld hl,0				
004FFF 22 08 55 00         B  1254    				ld (fs_dir_entry_line_offset),h
                           B  1255    			
005003 21 0B 55 00         B  1256    				ld hl,fs_dir_entry_sector
005007 34                  B  1257    				inc (hl)						                           B  1258    			
005008 ED5B 05 55 00       B  1259    				ld de,(fs_dir_entry_cluster)
00500D 7A                  B  1260    				ld a,d
00500E B3                  B  1261    				or e							00500F 20 0B               B  1262    				jr nz,nonroot2
005011 3A AF 54 00         B  1263    				ld a,(fs_root_dir_sectors)
005015 BE                  B  1264    				cp (hl)
005016 28 23               B  1265    				jr z,endofdir			
005018 C3 5B 4F 00         B  1266    				jp fs_get_dir_entry
                           B  1267    												00501C 3A 9F 54 00         B  1268    nonroot2		ld a,(fs_cluster_size)		
005020 BE                  B  1269    				cp (hl)							005021 C2 5B 4F 00         B  1270    				jp nz,fs_get_dir_entry
005025 3600                B  1271    				ld (hl),0						005027 2A 05 55 00         B  1272    				ld hl,(fs_dir_entry_cluster)
00502B CD D3 52 00         B  1273    				call get_fat_entry_for_cluster
00502F 22 05 55 00         B  1274    				ld (fs_dir_entry_cluster),hl
005033 CD 7C 50 00         B  1275    				call fs_compare_hl_fff8			005037 DA 5B 4F 00         B  1276    				jp c,fs_get_dir_entry
                           B  1277    	
00503B 3ED2                B  1278    endofdir		ld a,0d2h
00503D B7                  B  1279    				or a							00503E C9                  B  1280    				ret	
                           B  1281    				
                           B  1282    ;----------------------------------------------
                           B  1283    
00503F                     B  1284    fs_get_volume_label
                           B  1285    
                           B  1286    
                           B  1287    ; On return HL = volume label
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 213


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B  1288    
                           B  1289    
00503F 2A A9 54 00         B  1290    				ld hl,(fs_root_dir_position)
005043 0E00                B  1291    				ld c,0
005045 AF                  B  1292    gvl_nrsec		xor a
005046 CD 01 54 00         B  1293    				call set_abs_lba_and_read_secto
00504A D8                  B  1294    				ret c
00504B 0610                B  1295    				ld b,16							00504D DD21 AE 66 00       B  1296    				ld ix,sector_buffer
005052 DD7E0B              B  1297    find_vl			ld a,(ix+0bh)
005055 FE08                B  1298    				cp 08h
005057 28 1A               B  1299    				jr z,got_label
005059 ED3220              B  1300    				lea ix,ix+32					00505C 10 F4               B  1301    				djnz find_vl					00505E 23                  B  1302    				inc hl
00505F 0C                  B  1303    				inc c
005060 3A AF 54 00         B  1304    				ld a,(fs_root_dir_sectors)		005064 B9                  B  1305    				cp c							005065 20 DE               B  1306    				jr nz,gvl_nrsec
                           B  1307    			
005067 CD 52 49 00         B  1308    				call fs_read_partition_bootsect
00506B D8                  B  1309    				ret c
00506C B7                  B  1310    				or a
00506D C0                  B  1311    				ret nz
00506E DD21 D9 66 00       B  1312    				ld ix,sector_buffer+02bh
                           B  1313    				
005073 DD360B00            B  1314    got_label		ld (ix+0bh),0					005077 DDE5                B  1315    				push ix
005079 E1                  B  1316    				pop hl
00507A AF                  B  1317    				xor a
00507B C9                  B  1318    				ret
                           B  1319    				
                           B  1320    				
                           B  1321    ;----------------------------------------------
                           B  1322    ; Internal subroutines
                           B  1323    ;----------------------------------------------
                           B  1324    
00507C                     B  1325    fs_compare_hl_fff8
                           B  1326    
                           B  1327    ;INPUT HL = value to compare with fff8
                           B  1328    ;OUTPUT CARRY set if < $fff8, ZERO FLAG set if 
                           B  1329    	
                           B  1330    	
00507C E5                  B  1331    				push hl
00507D D5                  B  1332    				push de
00507E 11F8FF00            B  1333    				ld de,0fff8h			
005082 B7                  B  1334    				or a							005083 52ED52              B  1335    				sbc.s hl,de						005086 D1                  B  1336    				pop de
005087 E1                  B  1337    				pop hl
005088 C9                  B  1338    				ret
                           B  1339    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 214


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B  1340    ;----------------------------------------------
                           B  1341    
                           B  1342    
005089                     B  1343    fs_find_free_cluster
                           B  1344    	
005089 DD210000 00         B  1345    				ld ix,0							00508E ED5B A3 54 00       B  1346    				ld de,(fs_fat1_position)		005093 AF                  B  1347    				xor a				
005094 32 F8 54 00         B  1348    fs_ffcl2		ld (fs_working_sector),a	
005098 D5                  B  1349    				push de
005099 E1                  B  1350    				pop hl
00509A 3A F8 54 00         B  1351    				ld a,(fs_working_sector)
00509E CD 01 54 00         B  1352    				call set_abs_lba_and_read_secto
0050A2 D8                  B  1353    				ret c
0050A3 21 AE 66 00         B  1354    				ld hl,sector_buffer
0050A7 0600                B  1355    				ld b,0
0050A9 7E                  B  1356    fs_ffcl1		ld a,(hl)						0050AA 23                  B  1357    				inc hl
0050AB B6                  B  1358    				or (hl)
0050AC 23                  B  1359    				inc hl
0050AD 28 14               B  1360    				jr z,fs_gotfc
0050AF DD23                B  1361    				inc ix
0050B1 10 F6               B  1362    				djnz fs_ffcl1
                           B  1363    				
0050B3 2A B0 54 00         B  1364    				ld hl,(fs_sectors_per_fat)
0050B7 3A F8 54 00         B  1365    				ld a,(fs_working_sector)		0050BB 3C                  B  1366    				inc a				
0050BC BD                  B  1367    				cp l		
0050BD 20 D5               B  1368    				jr nz,fs_ffcl2					0050BF 3EC1                B  1369    fs_dfull		ld a,c1h						0050C1 B7                  B  1370    				or a							0050C2 C9                  B  1371    				ret
                           B  1372    			
0050C3 DDE5                B  1373    fs_gotfc		push ix							0050C5 E1                  B  1374    				pop hl							0050C6 2B                  B  1375    				dec hl							0050C7 2B                  B  1376    				dec hl							0050C8 ED5B B3 54 00       B  1377    				ld de,(fs_max_data_clusters)
0050CD AF                  B  1378    				xor a
0050CE 52ED52              B  1379    				sbc.s hl,de						0050D1 30 EC               B  1380    				jr nc,fs_dfull
                           B  1381    			
0050D3 DD22 FC 54 00       B  1382    				ld (fs_free_cluster),ix
0050D8 AF                  B  1383    				xor a
0050D9 C9                  B  1384    				ret
                           B  1385    	
                           B  1386    	
                           B  1387    ;----------------------------------------------
                           B  1388    	
                           B  1389    	
0050DA                     B  1390    fs_find_free_dir_entry
                           B  1391    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 215


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B  1392    
                           B  1393    ; OUTPUT IX start of 32 byte dir entry in secto
                           B  1394    
                           B  1395    			
0050DA CD AA 1A 00         B  1396    				call fs_get_dir_cluster			0050DE EB                  B  1397    				ex de,hl
0050DF 22 EC 54 00         B  1398    ffenxtclu		ld (fs_file_working_cluster),hl
0050E3 AF                  B  1399    				xor a
0050E4 32 F8 54 00         B  1400    				ld (fs_working_sector),a
                           B  1401    			
0050E8 2A A9 54 00         B  1402    ffenxtsec		ld hl,(fs_root_dir_position)	0050EC 3A F8 54 00         B  1403    				ld a,(fs_working_sector)
0050F0 CD F0 53 00         B  1404    				call set_absolute_lba
                           B  1405    				
0050F4 CD AA 1A 00         B  1406    				call fs_get_dir_cluster			0050F8 7A                  B  1407    				ld a,d
0050F9 B3                  B  1408    				or e
0050FA 28 0C               B  1409    				jr z,at_rootd
0050FC 2A EC 54 00         B  1410    				ld hl,(fs_file_working_cluster)
005100 3A F8 54 00         B  1411    				ld a,(fs_working_sector)
005104 CD AA 53 00         B  1412    				call cluster_and_offset_to_lba
                           B  1413    				
005108 CD 2B 54 00         B  1414    at_rootd		call fs_read_sector
00510C D8                  B  1415    				ret c
00510D 0610                B  1416    				ld b,16							00510F 11200000            B  1417    				ld de,32
005113 DD21 AE 66 00       B  1418    				ld ix,sector_buffer
005118 DD7E00              B  1419    scdirfe			ld a,(ix)						00511B B7                  B  1420    				or a
00511C 28 65               B  1421    				jr z,got_fde
00511E FEE5                B  1422    				cp 0e5h
005120 28 61               B  1423    				jr z,got_fde
005122 DD19                B  1424    				add ix,de						005124 10 F2               B  1425    				djnz scdirfe					                           B  1426    				
005126 21 F8 54 00         B  1427    				ld hl,fs_working_sector			00512A 34                  B  1428    				inc (hl)
                           B  1429    				
00512B CD AA 1A 00         B  1430    				call fs_get_dir_cluster			00512F 7A                  B  1431    				ld a,d
005130 B3                  B  1432    				or e
005131 20 0B               B  1433    				jr nz,ffenotroo
005133 3A AF 54 00         B  1434    				ld a,(fs_root_dir_sectors)		005137 BE                  B  1435    				cp (hl)							005138 20 AE               B  1436    				jr nz,ffenxtsec
00513A AF                  B  1437    fenotfnd		xor a							00513B 3EC3                B  1438    				ld a,0c3h						00513D C9                  B  1439    				ret
                           B  1440    			
00513E 3A 9F 54 00         B  1441    ffenotroo		ld a,(fs_cluster_size)			005142 BE                  B  1442    				cp (hl)
005143 20 A3               B  1443    				jr nz,ffenxtsec
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 216


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
005145 2A EC 54 00         B  1444    				ld hl,(fs_file_working_cluster)
005149 CD D3 52 00         B  1445    				call get_fat_entry_for_cluster	00514D D8                  B  1446    				ret c
00514E CD 7C 50 00         B  1447    				call fs_compare_hl_fff8			005152 38 8B               B  1448    				jr c,ffenxtclu
                           B  1449    			
005154 CD 89 50 00         B  1450    				call fs_find_free_cluster		005158 D8                  B  1451    				ret c							005159 C0                  B  1452    				ret nz							00515A ED5B FC 54 00       B  1453    				ld de,(fs_free_cluster)
00515F 2A EC 54 00         B  1454    				ld hl,(fs_file_working_cluster)
005163 CD FF 52 00         B  1455    				call update_fat_entry_for_clust
005167 D8                  B  1456    				ret c
005168 EB                  B  1457    				ex de,hl						005169 11FFFF00            B  1458    				ld de,0ffffh
00516D CD FF 52 00         B  1459    				call update_fat_entry_for_clust
005171 D8                  B  1460    				ret c
                           B  1461    			
005172 2A FC 54 00         B  1462    				ld hl,(fs_free_cluster)			005176 CD 85 51 00         B  1463    				call fs_clear_cluster			00517A D8                  B  1464    				ret c
00517B 2A FC 54 00         B  1465    				ld hl,(fs_free_cluster)			00517F C3 DF 50 00         B  1466    				jp ffenxtclu					                           B  1467    			
005183 AF                  B  1468    got_fde			xor a
005184 C9                  B  1469    				ret
                           B  1470    					
                           B  1471    
                           B  1472    ;----------------------------------------------
                           B  1473    
005185                     B  1474    fs_clear_cluster
                           B  1475    
                           B  1476    ;INPUT HL = cluster to clear
                           B  1477    
005185 22 F9 54 00         B  1478    				ld (fs_working_cluster),hl
                           B  1479    			
005189 CD B1 51 00         B  1480    				call fs_clear_sector_buffer
                           B  1481    					
00518D AF                  B  1482    				xor a				
00518E 32 F8 54 00         B  1483    				ld (fs_working_sector),a		005192 3A F8 54 00         B  1484    wipeclulp		ld a,(fs_working_sector)		005196 2A F9 54 00         B  1485    				ld hl,(fs_working_cluster)		00519A CD AA 53 00         B  1486    				call cluster_and_offset_to_lba	00519E CD 44 54 00         B  1487    				call fs_write_sector
0051A2 D8                  B  1488    				ret c
0051A3 21 F8 54 00         B  1489    				ld hl,fs_working_sector
0051A7 34                  B  1490    				inc (hl)
0051A8 3A 9F 54 00         B  1491    				ld a,(fs_cluster_size)
0051AC BE                  B  1492    				cp (hl)
0051AD 20 E3               B  1493    				jr nz,wipeclulp
0051AF AF                  B  1494    				xor a
0051B0 C9                  B  1495    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 217


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B  1496    			
                           B  1497    			
0051B1                     B  1498    fs_clear_sector_buffer
                           B  1499    			
0051B1 E5                  B  1500    				push hl
0051B2 C5                  B  1501    				push bc
0051B3 21 AE 66 00         B  1502    				ld hl,sector_buffer			
0051B7 01000200            B  1503    				ld bc,512				
0051BB AF                  B  1504    				xor a				
0051BC CD C6 15 00         B  1505    				call os_bchl_memfill	
0051C0 C1                  B  1506    				pop bc
0051C1 E1                  B  1507    				pop hl
0051C2 C9                  B  1508    				ret
                           B  1509    				
                           B  1510    
                           B  1511    	
                           B  1512    ;----------------------------------------------
                           B  1513    	
0051C3                     B  1514    fs_find_filename
                           B  1515    
0051C3 AF                  B  1516    				xor a
                           B  1517    
0051C4                     B  1518    fs_search	
                           B  1519    				
0051C4 32 13 55 00         B  1520    				ld (fs_search_type),a
                           B  1521    			
                           B  1522    ; OUTPUT IX start of 32 byte dir entry
                           B  1523    			
0051C8 CD AA 1A 00         B  1524    				call fs_get_dir_cluster
0051CC ED53 EC 54 00       B  1525    ffnnxtclu		ld (fs_file_working_cluster),de
0051D1 AF                  B  1526    				xor a
0051D2 32 F8 54 00         B  1527    				ld (fs_working_sector),a
                           B  1528    			
0051D6 2A A9 54 00         B  1529    ffnnxtsec		ld hl,(fs_root_dir_position)	0051DA 3A F8 54 00         B  1530    				ld a,(fs_working_sector)
0051DE CD F0 53 00         B  1531    				call set_absolute_lba
                           B  1532    				
0051E2 CD AA 1A 00         B  1533    				call fs_get_dir_cluster			0051E6 7A                  B  1534    				ld a,d
0051E7 B3                  B  1535    				or e
0051E8 28 0C               B  1536    				jr z,at_rootd2
0051EA 2A EC 54 00         B  1537    				ld hl,(fs_file_working_cluster)
0051EE 3A F8 54 00         B  1538    				ld a,(fs_working_sector)
0051F2 CD AA 53 00         B  1539    				call cluster_and_offset_to_lba	                           B  1540    				
0051F6 CD 2B 54 00         B  1541    at_rootd2		call fs_read_sector
0051FA D8                  B  1542    				ret c
0051FB 0E10                B  1543    				ld c,16							0051FD DD21 AE 66 00       B  1544    				ld ix,sector_buffer
005202 DDE5                B  1545    ndirentr		push ix
005204 D1                  B  1546    				pop de
005205 3A 13 55 00         B  1547    				ld a,(fs_search_type)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 218


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
005209 B7                  B  1548    				or a
00520A 28 1E               B  1549    				jr z,fs_ststr
                           B  1550    			
00520C DD7E00              B  1551    				ld a,(ix)						00520F FE80                B  1552    				cp 080h							005211 30 35               B  1553    				jr nc,fnnotsame
005213 FE20                B  1554    				cp 020h
005215 38 31               B  1555    				jr c,fnnotsame
005217 ED5B 10 55 00       B  1556    				ld de,(fs_stash_dir_block)		00521C DD7E1A              B  1557    				ld a,(ix+01ah)
00521F BB                  B  1558    				cp e
005220 20 26               B  1559    				jr nz,fnnotsame
005222 DD7E1B              B  1560    				ld a,(ix+01bh)
005225 BA                  B  1561    				cp d
005226 28 1E               B  1562    				jr z,fs_found
005228 18 1E               B  1563    				jr fnnotsame
                           B  1564    				
00522A FD21 B6 54 00       B  1565    fs_ststr		ld iy,fs_sought_filename		00522F 060B                B  1566    				ld b,11							005231 1A                  B  1567    cmpfnlp			ld a,(de)						005232 CD 63 12 00         B  1568    				call os_uppercasify				005236 6F                  B  1569    				ld l,a
005237 FD7E00              B  1570    				ld a,(iy)
00523A CD 63 12 00         B  1571    				call os_uppercasify
00523E BD                  B  1572    				cp l				
00523F 20 07               B  1573    				jr nz,fnnotsame
005241 FD23                B  1574    				inc iy
005243 13                  B  1575    				inc de
005244 10 EB               B  1576    				djnz cmpfnlp
005246 AF                  B  1577    fs_found		xor a							005247 C9                  B  1578    				ret
                           B  1579    			
005248 11200000            B  1580    fnnotsame		ld de,32						00524C DD19                B  1581    				add ix,de
00524E 0D                  B  1582    				dec c
00524F 20 B1               B  1583    				jr nz,ndirentr					                           B  1584    				
005251 21 F8 54 00         B  1585    				ld hl,fs_working_sector			005255 34                  B  1586    				inc (hl)
                           B  1587    				
005256 CD AA 1A 00         B  1588    				call fs_get_dir_cluster			00525A 7A                  B  1589    				ld a,d
00525B B3                  B  1590    				or e
00525C 20 0D               B  1591    				jr nz,notrootdir
00525E 3A AF 54 00         B  1592    				ld a,(fs_root_dir_sectors)		005262 BE                  B  1593    				cp (hl)							005263 C2 D6 51 00         B  1594    				jp nz,ffnnxtsec
005267 3EC2                B  1595    fnnotfnd		ld a,0c2h						005269 B7                  B  1596    				or a
00526A C9                  B  1597    				ret
                           B  1598    			
00526B                     B  1599    notrootdir
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 219


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B  1600    				
00526B 3A 9F 54 00         B  1601    				ld a,(fs_cluster_size)			00526F BE                  B  1602    				cp (hl)
005270 C2 D6 51 00         B  1603    				jp nz,ffnnxtsec
                           B  1604    				
005274 2A EC 54 00         B  1605    				ld hl,(fs_file_working_cluster)
005278 CD D3 52 00         B  1606    				call get_fat_entry_for_cluster
00527C D8                  B  1607    				ret c
00527D CD 7C 50 00         B  1608    				call fs_compare_hl_fff8			005281 30 E4               B  1609    				jr nc,fnnotfnd					005283 EB                  B  1610    				ex de,hl						005284 C3 CC 51 00         B  1611    				jp ffnnxtclu					                           B  1612    				
                           B  1613    
                           B  1614    ;----------------------------------------------
                           B  1615    
005288                     B  1616    fs_hl_to_alt_filename
                           B  1617    
005288 11 C2 54 00         B  1618    				ld de,fs_alt_filename
00528C 18 04               B  1619    				jr hltofngo
                           B  1620    
                           B  1621    
00528E                     B  1622    fs_hl_to_filename
                           B  1623    
                           B  1624    ;INPUT: HL = address of filename (null / space 
                           B  1625    ;OUTPUT HL = address of first character after f
                           B  1626    ;        C = number of characters in filename
                           B  1627    
00528E 11 B6 54 00         B  1628    				ld de,fs_sought_filename
005292 CD 9D 53 00         B  1629    hltofngo		call fs_clear_filename			005296 D5                  B  1630    				push de			
005297 DDE1                B  1631    				pop ix							                           B  1632    				
005299 0E00                B  1633    				ld c,0
00529B 0608                B  1634    				ld b,8
00529D 7E                  B  1635    csfnlp2			ld a,(hl)						00529E B7                  B  1636    				or a
00529F C8                  B  1637    				ret z							0052A0 FE20                B  1638    				cp 32
0052A2 C8                  B  1639    				ret z							0052A3 FE2F                B  1640    				cp 02fh
0052A5 C8                  B  1641    				ret z							0052A6 FE2E                B  1642    				cp '.'
0052A8 28 16               B  1643    				jr z,dofn_ext					0052AA 12                  B  1644    				ld (de),a
0052AB 13                  B  1645    				inc de
0052AC 23                  B  1646    				inc hl
0052AD 0C                  B  1647    				inc c							0052AE 10 ED               B  1648    				djnz csfnlp2					0052B0 7E                  B  1649    find_ext		ld a,(hl)
0052B1 FE2E                B  1650    				cp '.'							0052B3 28 0B               B  1651    				jr z,dofn_ext	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 220


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
0052B5 FE20                B  1652    				cp ' '							0052B7 C8                  B  1653    				ret z
0052B8 FE2F                B  1654    				cp 02fh
0052BA C8                  B  1655    				ret z
0052BB B7                  B  1656    				or a
0052BC C8                  B  1657    				ret z
0052BD 23                  B  1658    				inc hl
0052BE 18 F0               B  1659    				jr find_ext
                           B  1660    				
0052C0 23                  B  1661    dofn_ext		inc hl							0052C1 0603                B  1662    				ld b,3				
0052C3 7E                  B  1663    fnextlp			ld a,(hl)						0052C4 B7                  B  1664    				or a
0052C5 C8                  B  1665    				ret z							0052C6 FE20                B  1666    				cp 32
0052C8 C8                  B  1667    				ret z
0052C9 DD7708              B  1668    				ld (ix+8),a
0052CC DD23                B  1669    				inc ix
0052CE 23                  B  1670    				inc hl
0052CF 0C                  B  1671    				inc c
0052D0 10 F1               B  1672    				djnz fnextlp
0052D2 C9                  B  1673    				ret
                           B  1674    				
                           B  1675    ;----------------------------------------------
                           B  1676    
                           B  1677    
0052D3                     B  1678    get_fat_entry_for_cluster
                           B  1679    
                           B  1680    ; INPUT: HL = cluster in question, OUTPUT: HL =
                           B  1681    
0052D3 C5                  B  1682    				push bc
0052D4 D5                  B  1683    				push de
0052D5 01000000            B  1684    				ld bc,0
0052D9 4D                  B  1685    				ld c,l
0052DA 7C                  B  1686    				ld a,h
0052DB 2A A3 54 00         B  1687    				ld hl,(fs_fat1_position)
0052DF CD 01 54 00         B  1688    				call set_abs_lba_and_read_secto
0052E3 38 17               B  1689    				jr c,hwerr
0052E5 DDE5                B  1690    				push ix
0052E7 DD21 AE 66 00       B  1691    				ld ix,sector_buffer
0052EC DD09                B  1692    				add ix,bc
0052EE DD09                B  1693    				add ix,bc
0052F0 21000000            B  1694    				ld hl,0
0052F4 DD6E00              B  1695    				ld l,(ix)
0052F7 DD6601              B  1696    				ld h,(ix+1)
0052FA DDE1                B  1697    				pop ix
0052FC D1                  B  1698    hwerr			pop de
0052FD C1                  B  1699    				pop bc
0052FE C9                  B  1700    				ret
                           B  1701    
                           B  1702    
                           B  1703    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 221


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B  1704    
                           B  1705    
0052FF                     B  1706    update_fat_entry_for_cluster
                           B  1707    
                           B  1708    ; INPUT: HL = cluster in question
                           B  1709    ;        DE = new value to put in FAT tables
                           B  1710    			
0052FF C5                  B  1711    				push bc
005300 E5                  B  1712    				push hl
005301 01000000            B  1713    				ld bc,0
005305 4D                  B  1714    				ld c,l
005306 7C                  B  1715    				ld a,h
005307 2A A3 54 00         B  1716    				ld hl,(fs_fat1_position)		00530B CD 1F 53 00         B  1717    				call fat_upd
00530F 38 0B               B  1718    				jr c,fup_end
                           B  1719    			
005311 E1                  B  1720    				pop hl
005312 E5                  B  1721    				push hl
005313 7C                  B  1722    				ld a,h
005314 2A A6 54 00         B  1723    				ld hl,(fs_fat2_position)		005318 CD 1F 53 00         B  1724    				call fat_upd
00531C E1                  B  1725    fup_end			pop hl
00531D C1                  B  1726    				pop bc
00531E C9                  B  1727    				ret
                           B  1728    			
                           B  1729    			
00531F CD 01 54 00         B  1730    fat_upd			call set_abs_lba_and_read_secto
005323 38 0D               B  1731    				jr c,ufehwerr
005325 21 AE 66 00         B  1732    				ld hl,sector_buffer
005329 09                  B  1733    				add hl,bc
00532A 09                  B  1734    				add hl,bc
00532B 73                  B  1735    				ld (hl),e
00532C 23                  B  1736    				inc hl
00532D 72                  B  1737    				ld (hl),d
00532E CD 44 54 00         B  1738    				call fs_write_sector
005332 C9                  B  1739    ufehwerr		ret
                           B  1740    				
                           B  1741    	
                           B  1742    ;----------------------------------------------
                           B  1743    
005333                     B  1744    transfer_length_countdown
                           B  1745    
005333 E5                  B  1746    				push hl							005334 C5                  B  1747    				push bc
                           B  1748    			
005335 0604                B  1749    				ld b,4
005337 21 DA 54 00         B  1750    				ld hl,fs_file_pointer			00533B 34                  B  1751    fpinclp			inc (hl)
00533C 20 03               B  1752    				jr nz,fs_fpino
00533E 23                  B  1753    				inc hl
00533F 10 FA               B  1754    				djnz fpinclp
                           B  1755    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 222


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
005341 2A E6 54 00         B  1756    fs_fpino		ld hl,(fs_file_transfer_length)
005345 2B                  B  1757    				dec hl
005346 22 E6 54 00         B  1758    				ld (fs_file_transfer_length),hl
00534A 01000000            B  1759    				ld bc,0
00534E B7                  B  1760    				or a
00534F ED4A                B  1761    				adc hl,bc						                           B  1762    				
005351 C1                  B  1763    				pop bc
005352 E1                  B  1764    				pop hl
005353 C9                  B  1765    				ret
                           B  1766    
                           B  1767    ;----------------------------------------------
                           B  1768    
005354                     B  1769    fs_get_current_dir_name
                           B  1770    
                           B  1771    ;returns current dir name - location at HL
                           B  1772    
005354 CD AA 1A 00         B  1773    				call fs_get_dir_cluster			005358 7A                  B  1774    				ld a,d
005359 B3                  B  1775    				or e
00535A 20 10               B  1776    				jr nz,fs_dnnr
00535C 21 88 5F 00         B  1777    				ld hl,vol_txt+1					005360 3A 83 5F 00         B  1778    				ld a,(current_volume)
005364 C630                B  1779    				add a,030h
005366 32 8B 5F 00         B  1780    				ld (vol_txt+4),a
00536A AF                  B  1781    				xor a
00536B C9                  B  1782    				ret
                           B  1783    					
00536C ED53 10 55 00       B  1784    fs_dnnr			ld (fs_stash_dir_block),de
005371 CD 04 4A 00         B  1785    				call fs_parent_dir_command		005375 D8                  B  1786    				ret c
005376 B7                  B  1787    				or a
005377 C0                  B  1788    				ret nz
005378 3E01                B  1789    				ld a,1
00537A CD C4 51 00         B  1790    				call fs_search					00537E D8                  B  1791    				ret c
00537F C0                  B  1792    				ret nz
                           B  1793    					
005380 DDE5                B  1794    fs_gdbn			push ix
005382 E1                  B  1795    				pop hl
005383 060B                B  1796    				ld b,11							005385 7E                  B  1797    ntdirn			ld a,(hl)
005386 FE20                B  1798    				cp ' '
005388 28 03               B  1799    				jr z,rdirfsp
00538A 23                  B  1800    				inc hl
00538B 10 F8               B  1801    rdirnsp			djnz ntdirn
                           B  1802    				
00538D 3600                B  1803    rdirfsp			ld (hl),0
00538F DDE5                B  1804    				push ix
005391 ED5B 10 55 00       B  1805    				ld de,(fs_stash_dir_block)
005396 CD B6 1A 00         B  1806    				call fs_update_dir_cluster		00539A E1                  B  1807    				pop hl	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 223


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
00539B AF                  B  1808    				xor a							00539C C9                  B  1809    				ret
                           B  1810    
                           B  1811    ;----------------------------------------------
                           B  1812    
00539D                     B  1813    fs_clear_filename
                           B  1814    
00539D D5                  B  1815    				push de							00539E C5                  B  1816    				push bc
00539F 060C                B  1817    				ld b,12
0053A1 3E20                B  1818    				ld a,' '
0053A3 12                  B  1819    clrfnlp			ld (de),a
0053A4 13                  B  1820    				inc de
0053A5 10 FC               B  1821    				djnz clrfnlp
0053A7 C1                  B  1822    				pop bc
0053A8 D1                  B  1823    				pop de
0053A9 C9                  B  1824    				ret
                           B  1825    				
                           B  1826    ;----------------------------------------------
                           B  1827    
                           B  1828    
0053AA                     B  1829    cluster_and_offset_to_lba
                           B  1830    
                           B  1831    ; INPUT: HL = cluster, A = sector offset, OUTPU
                           B  1832    
0053AA C5                  B  1833    				push bc
0053AB D5                  B  1834    				push de
0053AC E5                  B  1835    				push hl
0053AD DDE5                B  1836    				push ix
                           B  1837    
0053AF 2B                  B  1838    				dec hl							0053B0 2B                  B  1839    				dec hl							0053B1 11000000            B  1840    				ld de,0							0053B5 01000000            B  1841    				ld bc,0
0053B9 5F                  B  1842    				ld e,a
0053BA 3A 9F 54 00         B  1843    				ld a,(fs_cluster_size)			0053BE CB3F                B  1844    caotllp			srl a
0053C0 28 03               B  1845    				jr z,clusdone
0053C2 29                  B  1846    				add hl,hl						0053C3 18 F9               B  1847    				jr caotllp
                           B  1848    			
0053C5 ED4B AC 54 00       B  1849    clusdone		ld bc,(fs_data_area)			0053CA 09                  B  1850    				add hl,bc						0053CB 19                  B  1851    				add hl,de						                           B  1852    				
0053CC E5                  B  1853    add_ptn_offset	push hl							0053CD CD E4 1A 00         B  1854    				call fs_calc_volume_offset
0053D1 DD21 AF 5F 00       B  1855    				ld ix,volume_mount_list
0053D6 DD19                B  1856    				add ix,de
0053D8 E1                  B  1857    				pop hl
0053D9 DD0708              B  1858    				ld bc,(ix+08h)					0053DC DD7E0B              B  1859    				ld a,(ix+0bh)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 224


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
0053DF 09                  B  1860    				add hl,bc
0053E0 CE00                B  1861    				adc a,0
0053E2 22 5A 61 00         B  1862    				ld (sector_lba0),hl				0053E6 32 5D 61 00         B  1863    				ld (sector_lba3),a				                           B  1864    				
0053EA DDE1                B  1865    				pop ix
0053EC E1                  B  1866    				pop hl
0053ED D1                  B  1867    				pop de
0053EE C1                  B  1868    				pop bc
0053EF C9                  B  1869    				ret
                           B  1870    				
                           B  1871    
                           B  1872    ;----------------------------------------------
                           B  1873    
0053F0                     B  1874    set_absolute_lba
                           B  1875    
                           B  1876    ; set A to sector offset, HL to sectors from st
                           B  1877    
0053F0 C5                  B  1878    				push bc							0053F1 D5                  B  1879    				push de							0053F2 E5                  B  1880    				push hl							0053F3 DDE5                B  1881    				push ix							0053F5 01000000            B  1882    				ld bc,0
0053F9 11000000            B  1883    				ld de,0
0053FD 5F                  B  1884    				ld e,a
0053FE 19                  B  1885    				add hl,de
0053FF 18 CB               B  1886    				jr add_ptn_offset		
                           B  1887    				
                           B  1888    
005401                     B  1889    set_abs_lba_and_read_sector
                           B  1890    
005401 CD F0 53 00         B  1891    				call set_absolute_lba
005405 C3 2B 54 00         B  1892    				jp fs_read_sector
                           B  1893    				
                           B  1894    ;----------------------------------------------
                           B  1895    
                           B  1896    
005409                     B  1897    backup_sector_lba
                           B  1898    
005409 C5                  B  1899    				push bc
00540A D5                  B  1900    				push de
00540B E5                  B  1901    				push hl
00540C 21 5A 61 00         B  1902    				ld hl,sector_lba0
005410 11 14 55 00         B  1903    				ld de,fs_backed_up_sector_lba0
005414 01040000            B  1904    lbabur			ld bc,4
005418 EDB0                B  1905    				ldir
00541A E1                  B  1906    				pop hl
00541B D1                  B  1907    				pop de
00541C C1                  B  1908    				pop bc
00541D C9                  B  1909    				ret
                           B  1910    
                           B  1911    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 225


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
00541E                     B  1912    restore_sector_lba
                           B  1913    
00541E C5                  B  1914    				push bc
00541F D5                  B  1915    				push de
005420 E5                  B  1916    				push hl
005421 21 14 55 00         B  1917    				ld hl,fs_backed_up_sector_lba0
005425 11 5A 61 00         B  1918    				ld de,sector_lba0
005429 18 E9               B  1919    				jr lbabur	
                           B  1920    					
                           B  1921    ;----------------------------------------------
                           B  1922    
00542B                     B  1923    fs_read_sector
                           B  1924    			
00542B C5                  B  1925    				push bc
00542C D5                  B  1926    				push de
00542D E5                  B  1927    				push hl
00542E DDE5                B  1928    				push ix
005430 FDE5                B  1929    				push iy
005432 01040000            B  1930    				ld bc,04h						005436 CD 55 54 00         B  1931    				call sector_access_redirect
00543A FDE1                B  1932    secaccend		pop iy
00543C DDE1                B  1933    				pop ix
00543E E1                  B  1934    				pop hl
00543F D1                  B  1935    				pop de
005440 C1                  B  1936    				pop bc
005441 C8                  B  1937    				ret z							005442 37                  B  1938    				scf								005443 C9                  B  1939    				ret								                           B  1940    
                           B  1941    
005444                     B  1942    fs_write_sector	
                           B  1943    				
005444 C5                  B  1944    				push bc
005445 D5                  B  1945    				push de
005446 E5                  B  1946    				push hl
005447 DDE5                B  1947    				push ix
005449 FDE5                B  1948    				push iy
00544B 01080000            B  1949    				ld bc,08h						00544F CD 55 54 00         B  1950    				call sector_access_redirect
005453 18 E5               B  1951    				jr secaccend
                           B  1952    
                           B  1953    
                           B  1954    
005455                     B  1955    sector_access_redirect
                           B  1956    
                           B  1957    	
005455 3A 84 5F 00         B  1958    				ld a,(current_driver)			005459 CD 7C 1A 00         B  1959    				call locate_driver_base			00545D EB                  B  1960    				ex de,hl
00545E 09                  B  1961    				add hl,bc						00545F E9                  B  1962    				jp (hl)
                           B  1963    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 226


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B  1964    ;----------------------------------------------
                           B  1965    	
005460                     B  1966    bootsector_stub
                           B  1967    
005460 EB3C904D 53444F53   B  1968    				db  0EBh,03Ch,090h,04Dh,053h,04
005468 352E3000 02004000 
005470 02000200 00F8F200   B  1969    				db  002h,000h,002h,000h,000h,0F
005478 3F00FF00 00000000 
005480 00000000 000029C4   B  1970    				db  000h,000h,000h,000h,000h,00
005488 E636984E 4F204E41 
005490 4D452020 20204641   B  1971    				db  04Dh,045h,020h,020h,020h,02
005498 54313620 2020C3 
                           B  1972    
                           B  1973    ;----------------------------------------------
                           B  1974    
00549F 00                  B  1975    fs_cluster_size				db 0
0054A0 000000              B  1976    fs_bytes_per_cluster		dw24 0
0054A3 000000              B  1977    fs_fat1_position			dw24 0		; offse
0054A6 000000              B  1978    fs_fat2_position			dw24 0		; offse
0054A9 000000              B  1979    fs_root_dir_position		dw24 0		; offse
0054AC 000000              B  1980    fs_data_area				dw24 0		; offse
0054AF 00                  B  1981    fs_root_dir_sectors			db 0
                           B  1982    
0054B0 000000              B  1983    fs_sectors_per_fat			dw24 0
0054B3 000000              B  1984    fs_max_data_clusters		dw24 0
                           B  1985    
0054B6 00 00 00 00 00 00   B  1986    fs_sought_filename			blkb 12,0
0054BC 00 00 00 00 00 00 
0054C2 00 00 00 00 00 00   B  1987    fs_alt_filename				blkb 12,0
0054C8 00 00 00 00 00 00 
0054CE 00 00 00 00 00 00   B  1988    fs_filename_buffer			blkb 12,0
0054D4 00 00 00 00 00 00 
                           B  1989    
0054DA 00000000            B  1990    fs_file_pointer				dw 0,0		; 32 bi
0054DE 00000000            B  1991    fs_file_length				dw 0,0		; 32 bi
0054E2 00000000            B  1992    fs_existing_file_length 	dw 0,0		; 32 bi
                           B  1993    
0054E6 000000              B  1994    fs_file_transfer_length		dw24 0		; 24 bi
                           B  1995    
0054E9 000000              B  1996    fs_file_start_cluster		dw24 0
0054EC 000000              B  1997    fs_file_working_cluster		dw24 0
                           B  1998    
0054EF 000000              B  1999    fs_ez80_address				dw24 0
0054F2 000000              B  2000    fs_ez80_working_address		dw24 0
                           B  2001    
0054F5 000000              B  2002    fs_in_sector_offset			dw24 0
0054F8 00                  B  2003    fs_working_sector			db 0
                           B  2004    
0054F9 000000              B  2005    fs_working_cluster			dw24 0
0054FC 000000              B  2006    fs_free_cluster				dw24 0
0054FF 000000              B  2007    fs_new_file_cluster			dw24 0
                           B  2008    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 227


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
005502 000000              B  2009    fs_fname_in_sector_addr		dw24 0
                           B  2010    
005505 000000              B  2011    fs_dir_entry_cluster		dw24 0
005508 000000              B  2012    fs_dir_entry_line_offset	dw24 0
00550B 00                  B  2013    fs_dir_entry_sector			db 0
                           B  2014    
00550C 00                  B  2015    fs_filepointer_valid		db 0
00550D 000000              B  2016    fs_sector_pos_cnt			dw24 0
                           B  2017    
005510 000000              B  2018    fs_stash_dir_block	 		dw24 0
                           B  2019    
005513 00                  B  2020    fs_search_type				db 0
                           B  2021    
005514 00000000            B  2022    fs_backed_up_sector_lba0	db 0,0,0,0
                           B  2023    
                           B  2024    ;----------------------------------------------
                           B  2025    
                           A  3259    
                           A  3260    ;----------------------------------------------
                           A  3261    ; OS Data 
                           A  3262    ;----------------------------------------------
                           A  3263    
                           B     0    	include		'prose_data.asm'				                           B     1    ;**************
                           B     2    ;* PROSE DATA *
                           B     3    ;**************
                           B     4    
                           B     5    ;----------------------------------------------
                           B     6    ; kernal routine locations
                           B     7    ;----------------------------------------------
                           B     8    
005518                     B     9    kernal_table
                           B    10    
005518 761800              B    11    	dw24 ext_mount_volumes			;00		
00551B 1C1800              B    12    	dw24 os_get_device_info			;01		
00551E D21600              B    13    	dw24 os_check_volume_format		;02		
005521 051B00              B    14    	dw24 ext_change_volume			;03		
005524 2F1800              B    15    	dw24 os_get_volume_info			;04		
005527 DC1600              B    16    	dw24 ext_format					;05		
00552A 0E1700              B    17    	dw24 ext_make_dir				;06		
00552D 1C1700              B    18    	dw24 ext_change_dir				;07		
005530 2A1700              B    19    	dw24 os_parent_dir				;08		
005533 301700              B    20    	dw24 os_root_dir				;09		
005536 781700              B    21    	dw24 ext_delete_dir				;0a		
005539 611600              B    22    	dw24 ext_find_file				;0b		
00553C 7D1600              B    23    	dw24 ext_set_file_pointer		;0c		
00553F 761600              B    24    	dw24 os_set_load_length			;0d		
005542 901600              B    25    	dw24 ext_read_bytes_from_file	;0e		
005545 361700              B    26    	dw24 ext_erase_file				;0f		
005548 5E1700              B    27    	dw24 ext_rename_file			;10		
00554B A01600              B    28    	dw24 ext_create_file			;11		
00554E B21600              B    29    	dw24 ext_write_bytes_to_file	;12		
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 228


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005551 D31A00              B    30    	dw24 fs_get_total_sectors		;13		
005554 441700              B    31    	dw24 os_goto_first_dir_entry	;14		 
005557 4A1700              B    32    	dw24 os_get_dir_entry			;15		
00555A 501700              B    33    	dw24 os_goto_next_dir_entry		;16		
00555D 881700              B    34    	dw24 ext_read_sector			;17		
005560 B61700              B    35    	dw24 ext_write_sector			;18		
005563 411B00              B    36    	dw24 ext_file_sector_list		;19		
005566 AA1A00              B    37    	dw24 fs_get_dir_cluster			;1a		
005569 B61A00              B    38    	dw24 fs_update_dir_cluster		;1b		
00556C 561700              B    39    	dw24 os_get_current_dir_name	;1c		
                           B    40    
00556F 124400              B    41    	dw24 os_wait_key_press			;1d		
005572 6D4400              B    42    	dw24 os_get_key_press			;1e		
005575 881500              B    43    	dw24 os_get_key_mod_flags		;1f		
                           B    44    
005578 3D1800              B    45    	dw24 ext_serial_get_header		;20		
00557B 4A1800              B    46    	dw24 ext_serial_receive_file	;21		 
00557E 531800              B    47    	dw24 ext_serial_send_file		;22		 
005581 651800              B    48    	dw24 ext_serial_tx				;23		
005584 6C1800              B    49    	dw24 ext_serial_rx				;24		
                           B    50    
005587 4F0F00              B    51    	dw24 ext_print_string			;25		
00558A 973E00              B    52    	dw24 hwsc_clear_screen			;26		
00558D 674000              B    53    	dw24 hwsc_wait_vrt				;27		
005590 0D1400              B    54    	dw24 os_set_cursor_position		;28		
005593 A51A00              B    55    	dw24 ext_plot_char				;29		
005596 CE1500              B    56    	dw24 ext_set_pen				;2a		
005599 DB1500              B    57    	dw24 ext_background_colours		;2b		
00559C 603F00              B    58    	dw24 hwsc_draw_cursor			;2c		
00559F D51500              B    59    	dw24 os_get_pen					;2d		
0055A2 D23E00              B    60    	dw24 hwsc_scroll_up				;2e		
0055A5 263E00              B    61    	dw24 os_set_video_hw_regs		;2f		
0055A8 8E1500              B    62    	dw24 os_get_vmode				;30			0055AB B43F00              B    63    	dw24 hwsc_get_charmap_addr_xy	;31		
0055AE 2D1400              B    64    	dw24 os_get_cursor_position		;32		 
                           B    65    
0055B1 B21B00              B    66    	dw24 ext_set_envar				;33		
0055B4 761B00              B    67    	dw24 ext_get_envar				;34		
0055B7 0C1C00              B    68    	dw24 ext_delete_envar			;35		
                           B    69    
0055BA 831400              B    70    	dw24 os_set_mouse_window		;36		
0055BD C91400              B    71    	dw24 os_get_mouse_position		;37		
0055C0 A01400              B    72    	dw24 os_get_mouse_motion		;38		
                           B    73    
0055C3 D74000              B    74    	dw24 hwsc_time_delay			;39		
0055C6 211200              B    75    	dw24 ext_compare_strings		;3a		
0055C9 A01000              B    76    	dw24 ext_hexbyte_to_ascii		;3b		
0055CC D51000              B    77    	dw24 ext_ascii_to_hexword		;3c		
0055CF 2A1100              B    78    	dw24 ext_user_input				;3d		
                           B    79    
0055D2 BC4000              B    80    	dw24 hwsc_get_version			;3e		
0055D5 F71300              B    81    	dw24 os_dont_store_registers	;3f		
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 229


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
0055D8 153700              B    82    	dw24 os_cmd_unused				;40 		0055DB FA4000              B    83    	dw24 hwsc_read_rtc				;41     
0055DE 224100              B    84    	dw24 hwsc_write_rtc				;42		 
0055E1 5D1C00              B    85    	dw24 os_get_keymap_location		;43		 
0055E4 163700              B    86    	dw24 os_get_mem_high			;44
0055E7 631C00              B    87    	dw24 ext_play_audio				;45
0055EA CC4300              B    88    	dw24 hwsc_disable_audio			;46
0055ED E54300              B    89    	dw24 hwsc_get_joysticks			;47
0055F0 9E1500              B    90    	dw24 ext_set_vmode				;48
0055F3 DC0F00              B    91    	dw24 ext_set_cursor_image		;49
0055F6 463F00              B    92    	dw24 hwsc_remove_cursor			;4a
0055F9 EA3500              B    93    	dw24 char_to_font				;4b
0055FC 5D1B00              B    94    	dw24 os_get_disk_sector_ptr		;4c
                           B    95    	
                           B    96    ;----------------------------------------------
                           B    97    ; Non-packed Text Strings
                           B    98    ;----------------------------------------------
                           B    99    
0055FF 50524F53 4520666F   B   100    welcome_message			db "PROSE for EZ80P by 
005607 7220455A 38305020 
00560F 62792050 68696C20 
005617 52757374 6F6E2032 
00561F 3031310B 0B 
005624 53595354 454D2052   B   101    						db "SYSTEM RAM free abo
00562C 414D2066 72656520 
005634 61626F76 653A2024 
00563C 00 
00563D 44726976 65733A0B   B   102    storage_txt				db "Drives:",11,0
005645 00 
005646 434F4D4D 414E4453   B   103    os_dos_cmds_txt			db "COMMANDS",0
00564E 00 
00564F 53544152 5455502E   B   104    startup_script_fn		db "STARTUP.SCR",0
005657 53435200 
00565B 2400                B   105    os_hex_prefix_txt		db "$",0
00565D 4F532056 65727369   B   106    os_version_txt			db "OS Version: $",0	005665 6F6E3A20 2400 
00566B 414D4F45 42412048   B   107    hw_version_txt			db "AMOEBA HW Version: 
005673 57205665 7273696F 
00567B 6E3A2024 00 
005680 202F2000            B   108    fwd_slash_txt			db " / ",0
005684 4C6F6164 696E672E   B   109    loading_txt				db "Loading..",11,0
00568C 2E0B00 
00568F 53617669 6E672E2E   B   110    saving_txt				db "Saving..",11,0
005697 0B00 
005699 2E657A70 20         B   111    ezp_extension_txt		db ".ezp",32
00569E 0B4D6F72 653F0B0B   B   112    os_more_txt				db 11,"More?",11,11,0
0056A6 00 
0056A7 52656769 73746572   B   113    nmi_freeze_txt			db "Register Dump:"
0056AF 2044756D 703A 
0056B5 0B0B00              B   114    crlfx2_txt				db 11,11,0
0056B8 7800                B   115    rep_char_txt			db "x",0
0056BA 20746F20 00         B   116    to_txt					db " to ",0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 230


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
0056BF 4552524F 5200       B   117    error_txt				db "ERROR",0
0056C5 494620              B   118    if_command_txt			db "IF "
0056C8 454E4420            B   119    end_command_txt			db "END "
0056CC 4F532052 45515549   B   120    hw_warn_txt1			db "OS REQUIRES AMOEBA 
0056D4 52455320 414D4F45 
0056DC 42412056 3A 
0056E1 2D2D2D2D 00         B   121    hw_warn_txt2			db "----",0
                           B   122    
                           B   123    ;----------------------------------------------
                           B   124    ; Packed text section
                           B   125    ;----------------------------------------------
                           B   126    
0056E6 00444542 5547       B   127    dictionary				db 0,"DEBUG"			0056EC 002D2D2D 2D2D       B   128    						db 0,"-----"			0056F2 00494F              B   129    						db 0,"IO"				0056F5 002D2D              B   130    						db 0,"--"				0056F8 004D4953 43         B   131    						db 0,"MISC"				0056FD 002D2D2D 2D         B   132    						db 0,"----"				005702 00616464 72         B   133    						db 0,"addr"				005707 0050524F 5345       B   134    						db 0,"PROSE"			00570D 00612062 2063       B   135    						db 0,"a b c"			005713 00416464 72657373   B   136    						db 0,"Address"			00571B 00427974 6573       B   137    						db 0,"Bytes"			005721 00457865 63757461   B   138    						db 0,"Executable"		005729 626C65 
00572C 0048756E 74         B   139    						db 0,"Hunt"				005731 0046696C 6C         B   140    						db 0,"Fill"				005736 00476F74 6F         B   141    						db 0,"Goto"				                           B   142    						
00573B 0053686F 77         B   143    						db 0,"Show"				005740 00435055            B   144    						db 0,"CPU"				005744 00526567 69737465   B   145    						db 0,"Registers"		00574C 7273 
00574E 004173              B   146    						db 0,"As"				005751 00415343 4949       B   147    						db 0,"ASCII"			005757 00436C65 6172       B   148    						db 0,"Clear"			00575D 00536372 65656E     B   149    						db 0,"Screen"			005764 00446973 61737365   B   150    						db 0,"Disassemble"		00576C 6D626C65 
005770 00537769 746368     B   151    						db 0,"Switch"			005777 00436F70 79         B   152    						db 0,"Copy"				00577C 00446576 696365     B   153    						db 0,"Device"			005783 00436861 6E6765     B   154    						db 0,"Change"			00578A 00447269 7665       B   155    						db 0,"Drive"			005790 00446972            B   156    						db 0,"Dir"				005794 002F                B   157    						db 0,"/"				005796 00666E              B   158    						db 0,"fn"				                           B   159    						
005799 0044656C 657465     B   160    						db 0,"Delete"			0057A0 0046696C 65         B   161    						db 0,"File"				0057A5 00496E66 6F         B   162    						db 0,"Info"				0057AA 00564F4C 783A       B   163    						db 0,"VOLx:"			Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 231


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
0057B0 004D616B 65         B   164    						db 0,"Make"				0057B5 0052656D 6F756E74   B   165    						db 0,"Remount"			0057BD 00537461 7274       B   166    						db 0,"Start"			0057C3 00576172 6E696E67   B   167    						db 0,"Warning!"			0057CB 21 
0057CC 00416C6C            B   168    						db 0,"All"				0057D0 0052656D 6F7665     B   169    						db 0,"Remove"			0057D7 0052656E 616D65     B   170    						db 0,"Rename"			0057DE 004F72              B   171    						db 0,"Or"				0057E1 00526563 65697665   B   172    						db 0,"Receive"			0057E9 00536176 65         B   173    						db 0,"Save"				0057EE 00547261 6E736D69   B   174    						db 0,"Transmit"			0057F6 74 
0057F7 004C6F61 64         B   175    						db 0,"Load"				                           B   176    						
0057FC 004F532F 4857       B   177    						db 0,"OS/HW"			005802 00566572 73696F6E   B   178    						db 0,"Version"			00580A 005B7065 6E207061   B   179    						db 0,"[pen paper]"		005812 7065725D 
005816 803A                B   180    						db 80h,":"				005818 813E                B   181    						db 81h,">"				00581A 82534F55 4E44       B   182    						db 82h,"SOUND"			005820 00566F6C 756D6573   B   183    						db 0,"Volumes"			005828 8343                B   184    						db 83h,"C"				00582A 844344              B   185    						db 84h,"CD"				00582D 85434C53            B   186    						db 85h,"CLS"			005831 8650454E            B   187    						db 86h,"PEN"			005835 8744                B   188    						db 87h,"D"				005837 8844454C            B   189    						db 88h,"DEL"			00583B 89444952            B   190    						db 89h,"DIR"			00583F 8A48                B   191    						db 8ah,"H"				005841 8B46                B   192    						db 8bh,"F"				                           B   193    						
005843 004F6E              B   194    						db 0,"On"				005846 8C464F52 4D4154     B   195    						db 8ch,"FORMAT"			00584D 0047                B   196    						db 0,"G"				00584F 8D4C42              B   197    						db 8dh,"LB"				005852 8E4D                B   198    						db 8eh,"M"				005854 8F4D4F55 4E54       B   199    						db 8fh,"MOUNT"			00585A 004265              B   200    						db 0,"Be"				00585D 9052                B   201    						db 90h,"R"				00585F 915244              B   202    						db 91h,"RD"				005862 92524E              B   203    						db 92h,"RN"				005865 935258              B   204    						db 93h,"RX"				005868 945342              B   205    						db 94h,"SB"				00586B 9554                B   206    						db 95h,"T"				00586D 965458              B   207    						db 96h,"TX"				005870 97564552 53         B   208    						db 97h,"VERS"			005875 00577269 7465       B   209    						db 0,"Write"			                           B   210    						
00587B 004D656D            B   211    						db 0,"Mem"				00587F 00227478 7422       B   212    						db 0,22h,"txt",22h		Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 232


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005885 0057696C 6C         B   213    						db 0,"Will"				00588A 00526174 65         B   214    						db 0,"Rate"				00588F 0061                B   215    						db 0,"a"				005891 00507265 70         B   216    						db 0,"Prep"				005896 984D44              B   217    						db 98h,"MD"				005899 00447269 766573     B   218    						db 0,"Drives"			0058A0 006F6C64 666E       B   219    						db 0,"oldfn"			0058A6 006E6577 666E       B   220    						db 0,"newfn"			0058AC 006C656E            B   221    						db 0,"len"				0058B0 00436F6C 6F757273   B   222    						db 0,"Colours"			0058B8 993F                B   223    						db 99h,"?"				0058BA 00436F6D 6D616E64   B   224    						db 0,"Commands"			0058C2 73 
0058C3 0020                B   225    						db 0," "				0058C5 002D                B   226    						db 0,"-"				                           B   227    						
0058C7 00566F6C 756D65     B   228    						db 0,"Volume"			0058CE 0046756C 6C         B   229    						db 0,"Full"				0058D3 004E6F74            B   230    						db 0,"Not"				0058D7 00466F75 6E64       B   231    						db 0,"Found"			0058DD 004C656E 677468     B   232    						db 0,"Length"			0058E4 005A6572 6F         B   233    						db 0,"Zero"				0058E9 004F7574            B   234    						db 0,"Out"				0058ED 004F66              B   235    						db 0,"Of"				0058F0 0052616E 6765       B   236    						db 0,"Range"			0058F6 00416C72 65616479   B   237    						db 0,"Already"			0058FE 00457869 737473     B   238    						db 0,"Exists"			005905 004174              B   239    						db 0,"At"				005908 00526F6F 74         B   240    						db 0,"Root"				00590D 004D6973 6D617463   B   241    						db 0,"Mismatch"			005915 68 
005916 00526571 75657374   B   242    						db 0,"Request"			00591E 00446174 61         B   243    						db 0,"Data"				                           B   244    				
005923 00454F46            B   245    						db 0,"EOF"				005927 00416674 6572       B   246    						db 0,"After"			00592D 00556E6B 6E6F776E   B   247    						db 0,"Unknown"			005935 00436F6D 6D616E64   B   248    						db 0,"Command"			00593D 00426164            B   249    						db 0,"Bad"				005941 00486578            B   250    						db 0,"Hex"				005945 004E6F              B   251    						db 0,"No"				005948 0041626F 72746564   B   252    						db 0,"Aborted"			005950 00507265 73656E74   B   253    						db 0,"Present"			005958 00436865 636B7375   B   254    						db 0,"Checksum"			005960 6D 
005961 004C6F61 646564     B   255    						db 0,"Loaded"			005968 00436F6D 6D73       B   256    						db 0,"Comms"			00596E 00457272 6F72       B   257    						db 0,"Error"			005974 00417267 756D656E   B   258    						db 0,"Arguments"		00597C 7473 
00597E 004C6F73 74         B   259    						db 0,"Lost"				                           B   260    						
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 233


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005983 00                  B   261    						db 0
005984 46415431 36         B   262    fat16_txt				db "FAT16"				                           B   263    
005989 00536572 69616C     B   264    						db 0,"Serial"			005990 0054696D 65         B   265    						db 0,"Time"				005995 00466F6E 74         B   266    						db 0,"Font"				00599A 00546F6F            B   267    						db 0,"Too"				00599E 004C6F6E 67         B   268    						db 0,"Long"				0059A3 00446573 74696E61   B   269    						db 0,"Destination"		0059AB 74696F6E 
0059AF 0053656C 65637465   B   270    						db 0,"Selected"			0059B7 64 
0059B8 00496E76 616C6964   B   271    						db 0,"Invalid"			0059C0 004D6973 73696E67   B   272    						db 0,"Missing"			0059C8 004F4B              B   273    						db 0,"OK"				0059CB 004F53              B   274    						db 0,"OS"				0059CE 0050726F 74656374   B   275    						db 0,"Protected"		0059D6 6564 
0059D8 0041                B   276    						db 0,"A"				0059DA 004973              B   277    						db 0,"Is"				0059DD 00456D70 7479       B   278    						db 0,"Empty"			0059E3 00456E64            B   279    						db 0,"End"				                           B   280    						
0059E7 0024                B   281    						db 0,"$"
0059E9 7878                B   282    hex_byte_txt			db "xx"					                           B   283    						
0059EB 00417070 656E64     B   284    						db 0,"Append"			0059F2 003F                B   285    						db 0,"?"				0059F4 0024                B   286    						db 0,"$"				0059F6 00417761 6974696E   B   287    						db 0,"Awaiting"			0059FE 67 
0059FF 00526563 65697669   B   288    						db 0,"Receiving"		005A07 6E67 
005A09 0053656E 64696E67   B   289    						db 0,"Sending"			005A11 000B                B   290    						db 0,11					005A13 002E2E              B   291    						db 0,".."				005A16 004E616D 65         B   292    						db 0,"Name"				005A1B 00204279 746573     B   293    						db 0," Bytes"			005A22 00507265 7373       B   294    						db 0,"Press"			005A28 00416E79            B   295    						db 0,"Any"				005A2C 004B6579            B   296    						db 0,"Key"				005A30 00456E74 6572       B   297    						db 0,"Enter"			005A36 9A455845 43         B   298    						db 9ah,"EXEC"			                           B   299    				
005A3B 0052756E            B   300    						db 0,"Run"				005A3F 00536372 697074     B   301    						db 0,"Script"			005A46 00594553            B   302    yes_txt					db 0,"YES" 				005A4A 00546F              B   303    						db 0,"To"				005A4D 00536574            B   304    						db 0,"Set"				005A51 00436F6E 74696E75   B   305    						db 0,"Continue"			005A59 65 
005A5A 004E6F6E 65         B   306    						db 0,"None"				Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 234


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005A5F 00447269 766572     B   307    						db 0,"Driver"			005A66 9B3C                B   308    						db 9bh,"<"				005A68 004E6577 6572       B   309    						db 0,"Newer"			005A6E 00526571 75697265   B   310    						db 0,"Required"			005A76 64 
005A77 00465047 4120636F   B   311    						db 0,"FPGA config"		005A7F 6E666967 
005A83 00556E63 68616E67   B   312    						db 0,"Unchanged"		005A8B 6564 
005A8D 006C6F63 206C656E   B   313    						db 0,"loc len [per vol 
005A95 205B7065 7220766F 
005A9D 6C206368 616E7320 
005AA5 6C6F6F70 3F5D20 
005AAC 9C50414C 45545445   B   314    						db 9ch,"PALETTE"		005AB4 0070616C 65747465   B   315    						db 0,"palette"			                           B   316    						
005ABC 9D4D4F55 5345       B   317    						db 9dh,"MOUSE"			005AC2 00456E61 626C65     B   318    						db 0,"Enable"			005AC9 004B6579 626F6172   B   319    						db 0,"Keyboard"			005AD1 64 
005AD2 00446574 65637465   B   320    						db 0,"Detected"			005ADA 64 
005ADB 004D6F75 7365       B   321    						db 0,"Mouse"			005AE1 00536563 746F72     B   322    						db 0,"Sector"			005AE8 00496E63 6F727265   B   323    						db 0,"Incorrect"		005AF0 6374 
005AF2 9E564D4F 4445       B   324    						db 9eh,"VMODE"			005AF8 00566964 656F       B   325    						db 0,"Video"			005AFE 004D6F64 65         B   326    						db 0,"Mode"				005B03 9F464F4E 54         B   327    						db 9fh,"FONT"			005B08 00416E64            B   328    						db 0,"And"				005B0C 00536176 696E67     B   329    						db 0,"Saving"			005B13 00556E73 7570706F   B   330    						db 0,"Unsupported"		005B1B 72746564 
005B1F A0534554            B   331    						db 0a0h,"SET"			005B23 005B7661 723D7374   B   332    						db 0,"[var=string]"		005B2B 72696E67 5D 
                           B   333    
005B30 00456E76 6172       B   334    						db 0,"Envar"			005B36 A1445A              B   335    						db 0a1h,"DZ"			005B39 0041444C            B   336    						db 0,"ADL"				005B3D 005A3830            B   337    						db 0,"Z80"				005B41 00506C61 79         B   338    						db 0,"Play"				005B46 00417564 696F       B   339    						db 0,"Audio"			                           B   340    						
005B4C 0001                B   341    						db 0,1					                           B   342    
                           B   343    
                           B   344    
                           B   345    
                           B   346    
005B4E 2199696A 5F916F92   B   347    save_append_msg			db 021h,099h,069h,06ah,
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 235


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005B56 9700 
005B58 2F0A9300            B   348    os_loadaddress_msg 		db 02fh,00ah,093h,0		005B5C 21649300            B   349    os_filesize_msg			db 021h,064h,093h,0		005B60 94219700            B   350    ser_rec_msg				db 094h,021h,097h,0		005B64 956F9897 00         B   351    ser_rec2_msg			db 095h,06fh,098h,097h,
005B69 966F9897 00         B   352    ser_send_msg			db 096h,06fh,098h,097h,
005B6E 9521BBBC 989700     B   353    ser_recsave_msg			db 095h,021h,0bbh,0bch,
005B75 A77C9097 00         B   354    hw_err_msg				db 0a7h,07ch,090h,097h,
005B7A 607C00              B   355    disk_err_msg			db 060h,07ch,0			005B7D A1779797 00         B   356    script_aborted_msg		db 0a1h,077h,097h,097h,
005B82 76B2B397 00         B   357    no_keyboard_msg			db 076h,0b2h,0b3h,097h,
                           B   358    
005B87 9700                B   359    packed_help1				db 097h,0
005B89 0100                B   360    							db 001h,0			005B8B 0200                B   361    							db 002h,0			005B8D 3307095F 4F500B00   B   362    							db 033h,007h,009h,0
005B95 3407515F 4F1400     B   363    							db 034h,007h,051h,0
005B9C 37070707 5F195000   B   364    							db 037h,007h,007h,0
005BA4 3B075FC2 1700       B   365    							db 03bh,007h,05fh,0
005BAA C1075FC3 1700       B   366    							db 0c1h,007h,05fh,0
005BB0 3F070754 5F0E5000   B   367    							db 03fh,007h,007h,0
005BB8 42075F0F 0A00       B   368    							db 042h,007h,05fh,0
005BBE 3E070709 5F0D5000   B   369    							db 03eh,007h,007h,0
005BC6 44075F10 500B00     B   370    							db 044h,007h,05fh,0
005BCD 475F1011 1200       B   371    							db 047h,05fh,010h,0
005BD3 4C075F10 50131400   B   372    							db 04ch,007h,05fh,0
                           B   373    	
005BDB 9700                B   374    							db 097h,0
005BDD 0300                B   375    							db 003h,0			005BDF 0400                B   376    							db 004h,0			005BE1 38231E1D 5F1B601E   B   377    							db 038h,023h,01eh,0
005BE9 1D00 
005BEB 3C1F5F20 2100       B   378    							db 03ch,01fh,05fh,0
005BF1 3D5F101D 00         B   379    							db 03dh,05fh,010h,0
005BF6 411A995F 551C00     B   380    							db 041h,01ah,099h,0
005BFD 431F075F 2F2100     B   381    							db 043h,01fh,007h,0
005C04 561D5F24 1D00       B   382    							db 056h,01dh,05fh,0
005C0A 455F2557 00         B   383    							db 045h,05fh,025h,0
005C0F 481D5F29 1D00       B   384    							db 048h,01dh,05fh,0
005C15 4958595F 2A2100     B   385    							db 049h,058h,059h,0
005C1C 4A1F075F 2C2100     B   386    							db 04ah,01fh,007h,0
005C23 4B1F075A 5F2D2100   B   387    							db 04bh,01fh,007h,0
005C2B 4D1F075A 5F2E2100   B   388    							db 04dh,01fh,007h,0
005C33 235F1860 00         B   389    							db 023h,05fh,018h,0
                           B   390    
005C38 9700                B   391    							db 097h,0
005C3A 0500                B   392    							db 005h,0			005C3C 0600                B   393    							db 006h,0			005C3E 395F1516 00         B   394    							db 039h,05fh,015h,0
005C43 9F1F5FA0 A100       B   395    							db 09fh,01fh,05fh,0
005C49 BA1F5F1B 8200       B   396    							db 0bah,01fh,05fh,0
005C4F B05FB1B0 A700       B   397    							db 0b0h,05fh,0b1h,0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 236


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005C55 AE095F1B AF00       B   398    							db 0aeh,09h,05fh,01
005C5B 3A325F1B 5B00       B   399    							db 03ah,032h,05fh,0
005C61 BEBF5FA4 C000       B   400    							db 0beh,0bfh,05fh,0
005C67 35AD5FC4 5013C500   B   401    							db 035h,0adh,05fh,0
005C6F 4E5F1030 3100       B   402    							db 04eh,05fh,010h,0
005C75 B7095F1B B8B900     B   403    							db 0b7h,09h,5fh,01b
005C7C 5C5F105D 00         B   404    							db 05ch,05fh,010h,0
005C81 9700                B   405    							db 097h,0
005C83 FF                  B   406    							db 0ffh
                           B   407    
                           B   408    
                           B   409    
                           B   410    
005C84 C51D00              B   411    os_cmd_locs					dw24 os_cmd_colon	005C87 AB2C00              B   412    							dw24 os_cmd_gtr		005C8A 7E3600              B   413    							dw24 os_cmd_sound	005C8D 6C1C00              B   414    							dw24 os_cmd_c		005C90 D91C00              B   415    							dw24 os_cmd_cd		005C93 BF1D00              B   416    							dw24 os_cmd_cls		005C96 E53400              B   417    							dw24 os_cmd_pen		005C99 DF1D00              B   418    							dw24 os_cmd_d		                           B   419    					
005C9C 402900              B   420    							dw24 os_cmd_del		005C9F 552900              B   421    							dw24 os_cmd_dir		005CA2 D92B00              B   422    							dw24 os_cmd_h		005CA5 512A00              B   423    							dw24 os_cmd_f		005CA8 792A00              B   424    							dw24 os_cmd_format	005CAB DF2C00              B   425    							dw24 os_cmd_lb		005CAE 6E2D00              B   426    							dw24 os_cmd_m		005CB1 6E3200              B   427    							dw24 os_cmd_remount
                           B   428    
005CB4 C52D00              B   429    							dw24 os_cmd_r		005CB7 F62E00              B   430    							dw24 os_cmd_rd		005CBA 032F00              B   431    							dw24 os_cmd_rn		005CBD 872F00              B   432    							dw24 os_cmd_rx		005CC0 1F2F00              B   433    							dw24 os_cmd_sb		005CC3 1A3200              B   434    							dw24 os_cmd_t		005CC6 AE3100              B   435    							dw24 os_cmd_tx		005CC9 7A3200              B   436    							dw24 os_cmd_vers	                           B   437    							
005CCC B82D00              B   438    							dw24 os_cmd_md		005CCF 872C00              B   439    							dw24 os_cmd_help	005CD2 AB3200              B   440    							dw24 os_cmd_exec	005CD5 E33400              B   441    							dw24 os_cmd_ltn		005CD8 093500              B   442    							dw24 os_cmd_palette
005CDB 3A3500              B   443    							dw24 os_cmd_mouse	005CDE 763500              B   444    							dw24 os_cmd_vmode	005CE1 863500              B   445    							dw24 os_cmd_font	                           B   446    							
005CE4 153600              B   447    							dw24 os_cmd_set		005CE7 713600              B   448    							dw24 os_cmd_dz		                           B   449    							
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 237


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   450    								
005CEA 00                  B   451    packed_msg_list				db 0				                           B   452    		
005CEB 606100              B   453    							db 060h,061h,0		005CEE 21626300            B   454    							db 021h,062h,063h,0
005CF2 1D6100              B   455    							db 01dh,061h,0		005CF5 628C1D00            B   456    							db 062h,08ch,01dh,0
005CF9 1D8D628E 00         B   457    							db 01dh,08dh,062h,0
005CFE 628C2100            B   458    							db 062h,08ch,021h,0
005D02 21648D65 00         B   459    							db 021h,064h,08dh,0
005D07 0A666768 00         B   460    							db 00ah,066h,067h,0
005D0C 2199696A 00         B   461    							db 021h,099h,069h,0
005D11 696B6C00            B   462    							db 069h,06bh,06ch,0
                           B   463    					
005D15 727300              B   464    							db 072h,073h,0		005D18 877500              B   465    							db 087h,075h,0		005D1B 76219900            B   466    							db 076h,021h,099h,0
                           B   467    					
005D1F 87B500              B   468    							db 087h,0b5h,0		005D22 797400              B   469    							db 079h,074h,0		005D25 9A7A00              B   470    bytes_loaded_msg			db 09ah,07ah,0		005D28 7B7C00              B   471    							db 07bh,07ch,0		005D2B 747D00              B   472    							db 074h,07dh,0		                           B   473    
005D2E 627F00              B   474    format_err_msg				db 062h,07fh,0		                           B   475    
005D31 816600              B   476    							db 081h,066h,0		005D34 21998384 00         B   477    							db 021h,099h,083h,0
005D39 76260A00            B   478    							db 076h,026h,00ah,0
005D3D 76216400            B   479    							db 076h,021h,064h,0
005D41 2D7700              B   480    							db 02dh,077h,0		005D44 2D7C6B85 00         B   481    							db 02dh,07ch,06bh,0
005D49 628C080C 00         B   482    							db 062h,08ch,08h,0c
005D4E A9316708 AA00       B   483    							db 0a9h,031h,067h,0
005D54 768F0A00            B   484    							db 076h,08fh,00ah,0
005D58 76850A00            B   485    							db 076h,085h,00ah,0
                           B   486    					
005D5C 746800              B   487    							db 074h,068h,0		005D5F 887D00              B   488    							db 088h,07dh,0		005D62 8900                B   489    ok_msg						db 089h,0			                           B   490    					
005D64 876000              B   491    							db 087h,060h,0		005D67 1A627800            B   492    							db 01ah,062h,078h,0
                           B   493    					
005D6B 1D626300            B   494    							db 01dh,062h,063h,0
005D6F 7700                B   495    							db 077h,0			                           B   496    					
005D71 21996D00            B   497    							db 021h,099h,06dh,0
005D75 8A508B00            B   498    							db 08ah,050h,08bh,0
005D79 6F71706E 00         B   499    							db 06fh,071h,070h,0
005D7E 763600              B   500    no_vols_msg					db 076h,036h,0		005D81 97A66300            B   501    none_found_msg				db 097h,0a6h,063h,0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 238


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   502    							
005D85 B62100              B   503    							db 0b6h,021h,0		005D88 A9316708 AA00       B   504    							db 0a9h,031h,067h,0
005D8E 21AC00              B   505    							db 021h,0ach,0		                           B   506    							
005D91 766F00              B   507    							db 076h,06fh,0		005D94 746F00              B   508    							db 074h,06fh,0		005D97 66676800            B   509    							db 066h,067h,068h,0
005D9B BD1A00              B   510    							db 0bdh,01ah,0		005D9E 1A62B300            B   511    							db 01ah,062h,0b3h,0
005DA2 1A7C00              B   512    							db 01ah,07ch,0		005DA5 A17C00              B   513    							db 0a1h,07ch,0		                           B   514    							
005DA8 FF                  B   515    							db 0ffh				                           B   516    
                           B   517    ;----------------------------------------------
                           B   518    
005DA9                     B   519    kernal_error_code_translation
                           B   520    
005DA9 242D2E14 08110F2A   B   521    					db 24h,2dh,2eh,14h, 08h,11h
005DB1 2F303132 331F 
                           B   522    					
005DB7                     B   523    fs_error_code_translation
                           B   524    
005DB7 00010203 04050607   B   525    					db 00h,01h,02h,03h,04h,05h,
005DBF 08090A0B 0C0D1321 
005DC7 22232425 260E0000   B   526    					db 22h,23h,24h,25h,26h,0eh,
                           B   527    
                           B   528    
                           B   529    ;----------------------------------------------
                           B   530    ; Scancode to ASCII keymaps
                           B   531    ;----------------------------------------------
                           B   532    
                           C     0    include	'UK_keymap.asm'
005DCF                     C     1    keymap:
005DCF 00000000 00000000   C     2                    db 000h,000h,000h,000h,000h,000
005DD7 00000000 00006000 
005DDF 00000000 00713100   C     3                    db 000h,000h,000h,000h,000h,071
005DE7 00007A73 61773200 
005DEF 00637864 65343300   C     4                    db 000h,063h,078h,064h,065h,034
005DF7 00207666 74723500 
005DFF 006E6268 67793600   C     5                    db 000h,06Eh,062h,068h,067h,079
005E07 00006D6A 75373800 
005E0F 002C6B69 6F303900   C     6                    db 000h,02Ch,06Bh,069h,06Fh,030
005E17 002E2F6C 3B702D00 
005E1F 00002700 5B3D0000   C     7                    db 000h,000h,027h,000h,05Bh,03D
005E27 0000005D 00230000 
005E2F 005C0000 00000000   C     8                    db 000h,05Ch,000h,000h,000h,000
005E37 00000000 00000000 
005E3F AC000000 00000051   C     9                    db 0ACh,000h,000h,000h,000h,000
005E47 21000000 5A534157 
005E4F 22000043 58444524   C    10                    db 022h,000h,000h,043h,058h,044
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 239


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\UK_keymap.asm
005E57 A3000020 56465452 
005E5F 2500004E 42484759   C    11                    db 025h,000h,000h,04Eh,042h,048
005E67 5E000000 4D4A5526 
005E6F 2A00003C 4B494F29   C    12                    db 02Ah,000h,000h,03Ch,04Bh,049
005E77 2800003E 3F4C3A50 
005E7F 5F000000 40007B2B   C    13                    db 05Fh,000h,000h,000h,040h,000
005E87 00000000 007D007E 
005E8F 0000007C 00000000   C    14                    db 000h,000h,000h,07Ch,000h,000
005E97 00000000 00000000 
005E9F 00000000 00000000   C    15                    db 000h,000h,000h,000h,000h,000
005EA7 00000000 00000000 
005EAF 00000000 00000000   C    16                    db 000h,000h,000h,000h,000h,000
005EB7 00000000 00000000 
005EBF 00000000 00000000   C    17                    db 000h,000h,000h,000h,000h,000
005EC7 00000000 00000000 
005ECF 00000000 00000000   C    18                    db 000h,000h,000h,000h,000h,000
005ED7 00000000 00000000 
005EDF 00000000 00000000   C    19                    db 000h,000h,000h,000h,000h,000
005EE7 00000000 00000000 
005EEF 00000000 0000       C    20                    db 000h,000h,000h,000h,000h,000
                           B   534    
       00005DCF            B   535    unshifted_keymap equ keymap+00h
       00005E31            B   536    shifted_keymap   equ keymap+62h
       00005E93            B   537    alted_keymap	 equ keymap+c4h
                           B   538    	
                           B   539    ;----------------------------------------------
                           B   540    
005EF5 00                  B   541    ui_index				db 0				; u
005EF6 00                  B   542    ui_maxchars				db 0				; "
005EF7 000000              B   543    ui_string_addr			dw24 0				; "
                           B   544    
                           B   545    ;----------------------------------------------
                           B   546    ; OS Display parameters
                           B   547    ;----------------------------------------------
                           B   548    
005EFA 00                  B   549    video_mode				db 0
005EFB 0700                B   550    current_pen				dw 07h				; C
005EFD 0000                B   551    background_colour		dw 00h				; F
                           B   552    
005EFF 00000F00 000F0F0F   B   553    pen_palette				dw 0000h,000fh,0f00h,0f
005F07 F000FF00 F00FFF0F 
005F0F 55059909 CC0C710F   B   554    						dw 0555h,0999h,0ccch,0f
005F17 7F00F80D 40088C03 
                           B   555    
005F1F 00                  B   556    plotchar_colour			db 0				; c
                           B   557    
005F20 00                  B   558    char_under_cursor		db 0			
005F21 00                  B   559    cursor_present			db 0				; 1
005F22 00                  B   560    overwrite_mode			db 0
005F23 00                  B   561    cursor_image_char		db 0
                           B   562    
                           B   563    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 240


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   564    
005F24                     B   565    display_parameters
                           B   566    
005F24 00                  B   567    video_doubling			db 0
005F25 000000              B   568    charmap_rows			dw24 0					005F28 000000              B   569    charmap_columns			dw24 0				
                           B   570    
                           B   571    ;----------------------------------------------
                           B   572    
005F2B                     B   573    vmode_parameter_list
                           B   574    
005F2B 00503C              B   575    				db 00b, 80,60	; vmode 0 (vide
005F2E 01501E              B   576    				db 01b, 80,30	; vmode 1
005F31 02283C              B   577    				db 10b, 40,60	; vmode 2	
005F34 03281E              B   578    				db 11b, 40,30	; vmode 3
                           B   579    				
                           B   580    ;==============================================
                           B   581    ;  Serial Routine Data
                           B   582    ;==============================================
                           B   583    
005F37 000000              B   584    serial_ez80_address		dw24 0
005F3A 000000              B   585    serial_file_length		dw24 0
005F3D 000000              B   586    serial_fn_addr			dw24 0
005F40 00 00 00 00 00 00   B   587    serial_filename			blkb 18,0		
005F46 00 00 00 00 00 00 
005F4C 00 00 00 00 00 00 
005F52 00                  B   588    serial_fn_length		db 0
005F53 00                  B   589    serial_timeout			db 0
                           B   590    
005F54 00 00 00 00 00 00   B   591    serial_fileheader		blkb 20,0
005F5A 00 00 00 00 00 00 
005F60 00 00 00 00 00 00 
005F66 00 00 
005F68 5A383050 2E464845   B   592    serial_header_id		db "Z80P.FHEADER"		005F70 41444552 
005F74 00                  B   593    serial_transfer_started	db 0
                           B   594    
005F75 00                  B   595    anim_wait_count			db 0
                           B   596    
                           B   597    ;==============================================
                           B   598    
005F76 F3C8                B   599    intellimouse_seq	db 0f3h,200
005F78 F364                B   600    					db 0f3h,100
005F7A F350                B   601    					db 0f3h,80
                           B   602    
005F7C E803                B   603    mouse_settings_seq	db 0e8h,default_resolution
005F7E E6                  B   604    					db default_scaling
005F7F F364                B   605    					db 0f3h,default_sample_rate
005F81 F4                  B   606    					db 0f4h
                           B   607    					
                           B   608    ;----------------------------------------------
                           B   609    ; FILE SYSTEM RELATED VARIABLES
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 241


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   610    ;----------------------------------------------
                           B   611    
005F82 00                  B   612    boot_drive			db 0
                           B   613    
005F83 00                  B   614    current_volume		db 0
                           B   615    	
005F84 00                  B   616    current_driver		db 0			;normally u
                           B   617    
005F85 00                  B   618    device_count		db 0			;IE: the nu
                           B   619    
005F86 00                  B   620    volume_count		db 0
                           B   621    				
005F87 20564F4C 303A00     B   622    vol_txt				db " VOL0:",0	;space pref
005F8E 44455630 3A00       B   623    dev_txt				db "DEV0:",0
                           B   624    
005F94 000000              B   625    sector_rd_wr_addr	dw24 0
                           B   626    
                           B   627    
                           B   628    ;==============================================
                           B   629    
005F97                     B   630    volume_dir_clusters
                           B   631    
005F97 00 00 00 00 00 00   B   632    					blkb max_volumes*3,0
005F9D 00 00 00 00 00 00 
005FA3 00 00 00 00 00 00 
005FA9 00 00 00 00 00 00 
                           B   633    	
005FAF                     B   634    volume_mount_list
                           B   635    
005FAF 00 00 00 00 00 00   B   636    					blkb max_volumes*16,0
005FB5 00 00 00 00 00 00 
005FBB 00 00 00 00 00 00 
005FC1 00 00 00 00 00 00 
005FC7 00 00 00 00 00 00 
005FCD 00 00 00 00 00 00 
005FD3 00 00 00 00 00 00 
005FD9 00 00 00 00 00 00 
005FDF 00 00 00 00 00 00 
005FE5 00 00 00 00 00 00 
005FEB 00 00 00 00 00 00 
005FF1 00 00 00 00 00 00 
005FF7 00 00 00 00 00 00 
005FFD 00 00 00 00 00 00 
006003 00 00 00 00 00 00 
006009 00 00 00 00 00 00 
00600F 00 00 00 00 00 00 
006015 00 00 00 00 00 00 
00601B 00 00 00 00 00 00 
006021 00 00 00 00 00 00 
006027 00 00 00 00 00 00 
00602D 00 00 
                           B   637    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 242


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   638    ; Each entry is 16 bytes in the form:
                           B   639    
                           B   640    ; OFFSETS
                           B   641    ; -------
                           B   642    ; $00 - Volume is present (0/1)
                           B   643    ; $01 - Volume's host driver number (1 byte)	                           B   644    ; $02 - [reserved]
                           B   645    ; $03 - [reserved]
                           B   646    ; $04 - Volume's capacity in sectors (3 bytes)
                           B   647    ; $07 - Partition number on host drive (0/1/2/3
                           B   648    ; $08 - Offset in sectors from MBR to partition
                           B   649    ; $0c - [reserved]
                           B   650    ; $0d - [reserved]	
                           B   651    ; $0e - [reserved]
                           B   652    ; $0f - [reserved]
                           B   653    
                           B   654    ;==============================================
                           B   655    
00602F                     B   656    host_device_hardware_info
                           B   657    
00602F 00 00 00 00 00 00   B   658    					blkb 32*4,0
006035 00 00 00 00 00 00 
00603B 00 00 00 00 00 00 
006041 00 00 00 00 00 00 
006047 00 00 00 00 00 00 
00604D 00 00 00 00 00 00 
006053 00 00 00 00 00 00 
006059 00 00 00 00 00 00 
00605F 00 00 00 00 00 00 
006065 00 00 00 00 00 00 
00606B 00 00 00 00 00 00 
006071 00 00 00 00 00 00 
006077 00 00 00 00 00 00 
00607D 00 00 00 00 00 00 
006083 00 00 00 00 00 00 
006089 00 00 00 00 00 00 
00608F 00 00 00 00 00 00 
006095 00 00 00 00 00 00 
00609B 00 00 00 00 00 00 
0060A1 00 00 00 00 00 00 
0060A7 00 00 00 00 00 00 
0060AD 00 00 
                           B   659    
                           B   660    ; Each entry is 32 bytes..
                           B   661    ;
                           B   662    ; OFFSETS
                           B   663    ; -------
                           B   664    ; $00 - Device driver number
                           B   665    ; $01 - Device's TOTAL capacity in sectors (4 b
                           B   666    ; $05 - Zero terminated hardware name (22 ASCII
                           B   667    ; (remaining bytes to $1F currently unused)
                           B   668    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 243


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   669    ;----------------------------------------------
                           B   670    
0060AF 000000              B   671    dhwn_temp_pointer		dw24 0
                           B   672    
0060B2 00                  B   673    partition_temp			db 0
0060B3 00                  B   674    vols_on_device_temp		db 0
0060B4 00                  B   675    sys_driver_backup		db 0
0060B5 00                  B   676    os_quiet_mode			db 0
                           B   677    
0060B6 AE6900              B   678    default_load_addr		dw24 os_max_addr
                           B   679    
                           B   680    ;----------------------------------------------
                           B   681    
0060B9 00 00 00 00 00 00   B   682    time_data				blkb	7,0
0060BF 00 
                           B   683    
0060C0 00                  B   684    frozen					db 0
0060C1 01                  B   685    first_run				db 1
0060C2 01                  B   686    devices_connected		db 1					                           B   687    
                           B   688    ;----------------------------------------------
                           B   689    
0060C3 AE6900              B   690    sysram_os_highest		dw24 os_max_addr
0060C6 000080              B   691    vram_a_os_highest		dw24 vram_a_addr
0060C9 0000C0              B   692    vram_b_os_highest		dw24 vram_b_addr
                           B   693    
0060CC 000000              B   694    charmap_size			dw24 0
                           B   695    
                           B   696    ;----------------------------------------------
                           B   697    
0060CF 00                  B   698    store_a1				db 0		
0060D0 000000              B   699    store_bc1				dw24 0
0060D3 000000              B   700    store_de1				dw24 0
0060D6 000000              B   701    store_hl1				dw24 0
0060D9 00                  B   702    store_a2				db 0
0060DA 000000              B   703    store_bc2				dw24 0
0060DD 000000              B   704    store_de2				dw24 0
0060E0 000000              B   705    store_hl2				dw24 0
0060E3 000000              B   706    store_ix				dw24 0
0060E6 000000              B   707    store_iy				dw24 0
0060E9 000000              B   708    store_pc				dw24 0		;only relev
0060EC 000000              B   709    store_spl				dw24 0
0060EF 0000                B   710    store_sps				dw 0
0060F1 00                  B   711    store_mbase				db 0
0060F2 00                  B   712    store_f	 				db 0
0060F3 00                  B   713    store_adl				db 0
                           B   714    
                           B   715    ;----------------------------------------------
0060F4                     B   716    os_variables
                           B   717    ;----------------------------------------------
                           B   718    
0060F4 000000              B   719    kernal_ix_cache			dw24 0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 244


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   720    
0060F7 00                  B   721    store_registers			db 0
0060F8 000000              B   722    com_start_addr			dw24 0
                           B   723    
0060FB 00 00 00 00 00 00   B   724    temp_string				blkb max_buffer_chars+2
006101 00 00 00 00 00 00 
006107 00 00 00 00 00 00 
00610D 00 00 00 00 00 00 
006113 00 00 00 00 00 00 
006119 00 00 00 00 00 00 
00611F 00 00 00 00 00 00 
006125 00 00 00 00 00 00 
00612B 00 00 00 00 00 00 
006131 00 00 00 00 00 00 
006137 00 00 00 00 00 00 
00613D 00 00 00 00 00 00 
006143 00 00 00 00 00 00 
006149 00 00 00 00 
00614D 00 00 00 00 00 00   B   725    script_fn				blkb 13,0
006153 00 00 00 00 00 00 
006159 00 
                           B   726    
00615A 00                  B   727    sector_lba0				db 0			; keep 
00615B 00                  B   728    sector_lba1				db 0
00615C 00                  B   729    sector_lba2				db 0
00615D 00                  B   730    sector_lba3				db 0
                           B   731    
                           B   732    ;----------------------------------------------
                           B   733    
00615E 000000              B   734    cursor_pos				dw24 0			; 3rd b
                           B   735    
       0000615E            B   736    cursor_y 				equ cursor_pos
       0000615F            B   737    cursor_x 				equ cursor_pos+1
                           B   738    						
006161 00                  B   739    cursorflashtimer		db 0
006162 00                  B   740    cursor_status			db 0
006163 00                  B   741    os_linecount			db 0
                           B   742    		
006164 000000              B   743    mem_mon_addr			dw24 0
006167 000000              B   744    cmdop_start_address		dw24 0
00616A 000000              B   745    cmdop_end_address		dw24 0
00616D 000000              B   746    copy_dest_address		dw24 0
006170 000000              B   747    hex_address				dw24 0
                           B   748    
006173 000000              B   749    find_hexstringascii 	dw24 0
006176 000000              B   750    xrr_temp				dw24 0
006179 00                  B   751    temphex					db 0
00617A 00                  B   752    fillbyte				db 0 
00617B 00                  B   753    ui_im_cache				db 0
                           B   754    
00617C 00 00 00 00 00 00   B   755    commandstring			blkb max_buffer_chars+2
006182 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 245


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
006188 00 00 00 00 00 00 
00618E 00 00 00 00 00 00 
006194 00 00 00 00 00 00 
00619A 00 00 00 00 00 00 
0061A0 00 00 00 00 00 00 
0061A6 00 00 00 00 00 00 
0061AC 00 00 00 00 00 00 
0061B2 00 00 00 00 00 00 
0061B8 00 00 00 00 00 00 
0061BE 00 00 00 00 00 00 
0061C4 00 00 00 00 00 00 
0061CA 00 00 00 00 
0061CE 00 00 00 00 00 00   B   756    output_line				blkb max_buffer_chars+2
0061D4 00 00 00 00 00 00 
0061DA 00 00 00 00 00 00 
0061E0 00 00 00 00 00 00 
0061E6 00 00 00 00 00 00 
0061EC 00 00 00 00 00 00 
0061F2 00 00 00 00 00 00 
0061F8 00 00 00 00 00 00 
0061FE 00 00 00 00 00 00 
006204 00 00 00 00 00 00 
00620A 00 00 00 00 00 00 
006210 00 00 00 00 00 00 
006216 00 00 00 00 00 00 
00621C 00 00 00 00 
                           B   757    				
006220 000000              B   758    os_args_loc				dw24 0
006223 000000              B   759    os_args_pos_cache		dw24 0
                           B   760    
006226 000000              B   761    os_dir_block_cache  	dw24 0
006229 000000              B   762    os_extcmd_jmp_addr		dw24 0
                           B   763    
                           B   764    
00622C 000000              B   765    script_dir				dw24 0
00622F 000000              B   766    script_file_offset		dw24 0
006232 000000              B   767    script_length			dw24 0
                           B   768    
006235 00                  B   769    script_flags			db 0
                           B   770    
006236 00 00 00 00 00 00   B   771    if_name_txt				blkb max_if_chars+2,0
00623C 00 00 00 00 00 00 
006242 00 00 00 00 00 00 
006248 00 00 00 00 00 00   B   772    if_value_txt			blkb max_if_chars+2,0
00624E 00 00 00 00 00 00 
006254 00 00 00 00 00 00 
00625A 00 00 00 00 00 00   B   773    if_label_txt			blkb max_if_chars+2,0
006260 00 00 00 00 00 00 
006266 00 00 00 00 00 00 
                           B   774    
                           B   775    
00626C 0000                B   776    char_to_print			db 0,0	; zero terminat
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 246


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   777    
                           B   778    ;----------------------------------------------
                           B   779    ; Keyboard buffer and registers
                           B   780    ;----------------------------------------------
                           B   781    
00626E 00 00 00 00 00 00   B   782    scancode_buffer			blkb 32,0
006274 00 00 00 00 00 00 
00627A 00 00 00 00 00 00 
006280 00 00 00 00 00 00 
006286 00 00 00 00 00 00 
00628C 00 00 
                           B   783    
00628E 00                  B   784    key_buf_wr_idx			db 0
00628F 00                  B   785    key_buf_rd_idx			db 0
006290 00                  B   786    key_release_mode		db 0		
006291 00                  B   787    not_currently_used		db 0
006292 00                  B   788    key_mod_flags			db 0
006293 00                  B   789    current_scancode		db 0
006294 00                  B   790    current_asciicode		db 0
                           B   791    
                           B   792    ;----------------------------------------------
                           B   793    ; Mouse related registers
                           B   794    ;----------------------------------------------
                           B   795    
006295 00                  B   796    mouse_id				db 0
006296 00                  B   797    mouse_packet_size		db 0
                           B   798    
006297 00 00 00 00         B   799    mouse_packet			blkb 4,0			; t
00629B 00                  B   800    mouse_packet_index		db 0				;
00629C 00                  B   801    mouse_buttons			db 0				;
00629D 000000              B   802    mouse_disp_x			dw24 0				; c
0062A0 000000              B   803    mouse_disp_y			dw24 0				; c
0062A3 00                  B   804    mouse_wheel				db 0				; m
0062A4 00                  B   805    mouse_updated			db 0
                           B   806    
0062A5 000000              B   807    mouse_window_size_x		dw24 0				; t
0062A8 000000              B   808    mouse_window_size_y		dw24 0
0062AB 000000              B   809    mouse_abs_x				dw24 0
0062AE 000000              B   810    mouse_abs_y				dw24 0
0062B1 000000              B   811    mouse_disp_x_old		dw24 0
0062B4 000000              B   812    mouse_disp_y_old		dw24 0
0062B7 000000              B   813    mouse_disp_x_buffer		dw24 0
0062BA 000000              B   814    mouse_disp_y_buffer		dw24 0
0062BD 00                  B   815    mouse_new_window		db 0
                           B   816    
                           B   817    ;----------------------------------------------
       0000615E            B   818    first_os_var			equ cursor_y
0062BE 00                  B   819    last_os_var				db 0
                           B   820    ;----------------------------------------------
                           B   821    
                           B   822    ;==============================================
                           B   823    ; Environment variables
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 247


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   824    ;==============================================
                           B   825    
0062BF 4552524F 523D3030   B   826    envar_list				db "ERROR=00",0
0062C7 00 
0062C8 FF                  B   827    first_ext_ev_entry		db 0ffh
0062C9 00 00 00 00 00 00   B   828    						blkb envar_buffer_size,
0062CF 00 00 00 00 00 00 
0062D5 00 00 00 00 00 00 
0062DB 00 00 00 00 00 00 
0062E1 00 00 00 00 00 00 
0062E7 00 00 00 00 00 00 
0062ED 00 00 00 00 00 00 
0062F3 00 00 00 00 00 00 
0062F9 00 00 00 00 00 00 
0062FF 00 00 00 00 00 00 
006305 00 00 00 00 00 00 
00630B 00 00 00 00 00 00 
006311 00 00 00 00 00 00 
006317 00 00 00 00 00 00 
00631D 00 00 00 00 00 00 
006323 00 00 00 00 00 00 
006329 00 00 00 00 00 00 
00632F 00 00 00 00 00 00 
006335 00 00 00 00 00 00 
00633B 00 00 00 00 00 00 
006341 00 00 00 00 00 00 
006347 00 00 00 00 00 00 
00634D 00 00 00 00 00 00 
006353 00 00 00 00 00 00 
006359 00 00 00 00 00 00 
00635F 00 00 00 00 00 00 
006365 00 00 00 00 00 00 
00636B 00 00 00 00 00 00 
006371 00 00 00 00 00 00 
006377 00 00 00 00 00 00 
00637D 00 00 00 00 00 00 
006383 00 00 00 00 00 00 
006389 00 00 00 00 00 00 
00638F 00 00 00 00 00 00 
006395 00 00 00 00 00 00 
00639B 00 00 00 00 00 00 
0063A1 00 00 00 00 00 00 
0063A7 00 00 00 00 00 00 
0063AD 00 00 00 00 00 00 
0063B3 00 00 00 00 00 00 
0063B9 00 00 00 00 00 00 
0063BF 00 00 00 00 00 00 
0063C5 00 00 00 00 
                           B   829    
0063C9 C86200              B   830    envar_top_loc			dw24 first_ext_ev_entry
                           B   831    
                           B   832    ;==============================================
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 248


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   833    
                           B     0    	include		'phil_font_packed.asm'			0063CC                     B     1    packed_font_start
0063CC 010100FF 01000918   B     2    				db 001h,001h,000h,0FFh,001h,000
0063D4 3C3C1800 181800EE 
0063DC EE660100 056C6CFE   B     3                    db 0EEh,066h,001h,000h,005h,06C
0063E4 6CFE6C6C 00187EE0 
0063EC 7C0EFC18 00C6CE1C   B     4                    db 07Ch,00Eh,0FCh,018h,000h,0C6
0063F4 3870E6C6 0078ECEC 
0063FC 78EDEE7D 000C1C18   B     5                    db 078h,0EDh,0EEh,07Dh,000h,00C
006404 01000518 30016003 
00640C 30180030 18010C03   B     6                    db 030h,018h,000h,030h,018h,001
006414 18300010 5438FE38 
00641C 54100000 18187E18   B     7                    db 054h,010h,000h,000h,018h,018
006424 18010007 38387001 
00642C 00037E01 00091818   B     8                    db 000h,003h,07Eh,001h,000h,009
006434 0000060E 1C3870E0 
00643C 007CE6EE FEF6E67C   B     9                    db 000h,07Ch,0E6h,0EEh,0FEh,0F6
006444 00387801 38047C00 
00644C 7CEE0E7C E0E0FE00   B    10                    db 07Ch,0EEh,00Eh,07Ch,0E0h,0E0
006454 FE0C180C 0ECE7C00 
00645C 1E3E76E6 FF060600   B    11                    db 01Eh,03Eh,076h,0E6h,0FFh,006
006464 FEE0FC01 0E03FC00 
00646C 7EE0FC01 E6037C00   B    12                    db 07Eh,0E0h,0FCh,001h,0E6h,003
006474 FE060C18 01380300 
00647C 7CE6E67C E6E67C00   B    13                    db 07Ch,0E6h,0E6h,07Ch,0E6h,0E6
006484 7C01CE03 7E0E7C01 
00648C 00031818 00181801   B    14                    db 000h,003h,018h,018h,000h,018
006494 00033030 00303060 
00649C 0E1C3870 381C0E01   B    15                    db 00Eh,01Ch,038h,070h,038h,01C
0064A4 00037E00 7E010003 
0064AC 70381C0E 1C387000   B    16                    db 070h,038h,01Ch,00Eh,01Ch,038
0064B4 7CEE0E3C 38003800 
0064BC 7CE601EE 03E07C00   B    17                    db 07Ch,0E6h,001h,0EEh,003h,0E0
0064C4 7CE6E6FE 01E60300 
0064CC FCE6E6FC E6E6FC00   B    18                    db 0FCh,0E6h,0E6h,0FCh,0E6h,0E6
0064D4 7CE601E0 03E67C00 
0064DC FC01E605 FC00FEE0   B    19                    db 0FCh,001h,0E6h,005h,0FCh,000
0064E4 E0F8E0E0 FE00FEE0 
0064EC E0F801E0 03007CE6   B    20                    db 0E0h,0F8h,001h,0E0h,003h,000
0064F4 E0EEE6E6 7C0001E6 
0064FC 03FE01E6 03007C01   B    21                    db 003h,0FEh,001h,0E6h,003h,000
006504 38057C00 7E011C04 
00650C DC7800E6 ECF8EC01   B    22                    db 0DCh,078h,000h,0E6h,0ECh,0F8
006514 E6030001 E006FE00 
00651C C6EEFED6 01C60300   B    23                    db 0C6h,0EEh,0FEh,0D6h,001h,0C6
006524 E6F6FEFE EEE6E600 
00652C 7C01E605 7C00FC01   B    24                    db 07Ch,001h,0E6h,005h,07Ch,000
006534 E603FCE0 E0007C01 
00653C E603EAEC 7600FC01   B    25                    db 0E6h,003h,0EAh,0ECh,076h,000
006544 E603FCE6 E6007CEE 
00654C E07C0EEE 7C00FE01   B    26                    db 0E0h,07Ch,00Eh,0EEh,07Ch,000
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 249


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\phil_font_packed.asm
006554 38060001 E6067C00 
00655C 01E60574 380001C6   B    27                    db 001h,0E6h,005h,074h,038h,000
006564 04D6FE6C 00E6E66C 
00656C 3874E6E6 0001E604   B    28                    db 038h,074h,0E6h,0E6h,000h,001
006574 7E06FC00 FE0E1C38 
00657C 70E0FE00 3C013005   B    29                    db 070h,0E0h,0FEh,000h,03Ch,001
006584 3C00C0E0 70381C0E 
00658C 06007801 18057800   B    30                    db 006h,000h,078h,001h,018h,005
006594 10386CC6 01000BFE 
00659C 381C0100 087C067E   B    31                    db 038h,01Ch,001h,000h,008h,07C
0065A4 E67E0000 E0E0FCE6 
0065AC E6FC0100 037C01E0   B    32                    db 0E6h,0FCh,001h,000h,003h,07C
0065B4 037C0000 06067EE6 
0065BC E67E0100 037CE6FE   B    33                    db 0E6h,07Eh,001h,000h,003h,07C
0065C4 E07C0000 3E70FC01 
0065CC 70030100 037EE6E6   B    34                    db 070h,003h,001h,000h,003h,07E
0065D4 7E067C00 E0E0FC01 
0065DC E6030000 38007838   B    35                    db 0E6h,003h,000h,000h,038h,000
0065E4 387C0000 1C00011C 
0065EC 047800E0 EEECF8EC   B    36                    db 004h,078h,000h,0E0h,0EEh,0EC
0065F4 EE000078 0138047C 
0065FC 010003EC FED6C6C6   B    37                    db 001h,000h,003h,0ECh,0FEh,0D6
006604 010003FC 01E60401 
00660C 00037C01 E6037C01   B    38                    db 000h,003h,07Ch,001h,0E6h,003
006614 0003FCE6 E6FCE0E0 
00661C 00007EE6 E67E0606   B    39                    db 000h,000h,07Eh,0E6h,0E6h,07E
006624 0000DCE6 01E00301 
00662C 00037EF0 7C1EFC00   B    40                    db 000h,003h,07Eh,0F0h,07Ch,01E
006634 00387E01 38031E01 
00663C 000301E6 047E0100   B    41                    db 000h,003h,001h,0E6h,004h,07E
006644 0301E603 6C380100 
00664C 03E2EAFE 7C340100   B    42                    db 003h,0E2h,0EAh,0FEh,07Ch,034
006654 03E67C38 7CE60100 
00665C 0301E603 7E0CF800   B    43                    db 003h,001h,0E6h,003h,07Eh,00C
006664 00FE1C38 70FE003C 
00666C 30306030 303C0001   B    44                    db 030h,030h,060h,030h,030h,03C
006674 18070078 18180C18 
00667C 18780033 7ECC0100   B    45                    db 018h,078h,000h,033h,07Eh,0CC
006684 0501FE07 0100FF01 
00668C 001A1C3A 70FC70F2   B    46                    db 000h,01Ah,01Ch,03Ah,070h,0FC
006694 BC010029 7CC6BAA2 
00669C BAC67C01 00147E06   B    47                    db 0BAh,0C6h,07Ch,001h,000h,014
0066A4 060100FF 0100FF01 
0066AC 009C                B    48                    db 000h,09Ch
0066AE                     B    49    packed_font_end
                           A  3266    
0066AE 00 00 00 00 00 00   A  3267    sector_buffer	blkb 512,0
0066B4 00 00 00 00 00 00 
0066BA 00 00 00 00 00 00 
0066C0 00 00 00 00 00 00 
0066C6 00 00 00 00 00 00 
0066CC 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 250


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0066D2 00 00 00 00 00 00 
0066D8 00 00 00 00 00 00 
0066DE 00 00 00 00 00 00 
0066E4 00 00 00 00 00 00 
0066EA 00 00 00 00 00 00 
0066F0 00 00 00 00 00 00 
0066F6 00 00 00 00 00 00 
0066FC 00 00 00 00 00 00 
006702 00 00 00 00 00 00 
006708 00 00 00 00 00 00 
00670E 00 00 00 00 00 00 
006714 00 00 00 00 00 00 
00671A 00 00 00 00 00 00 
006720 00 00 00 00 00 00 
006726 00 00 00 00 00 00 
00672C 00 00 00 00 00 00 
006732 00 00 00 00 00 00 
006738 00 00 00 00 00 00 
00673E 00 00 00 00 00 00 
006744 00 00 00 00 00 00 
00674A 00 00 00 00 00 00 
006750 00 00 00 00 00 00 
006756 00 00 00 00 00 00 
00675C 00 00 00 00 00 00 
006762 00 00 00 00 00 00 
006768 00 00 00 00 00 00 
00676E 00 00 00 00 00 00 
006774 00 00 00 00 00 00 
00677A 00 00 00 00 00 00 
006780 00 00 00 00 00 00 
006786 00 00 00 00 00 00 
00678C 00 00 00 00 00 00 
006792 00 00 00 00 00 00 
006798 00 00 00 00 00 00 
00679E 00 00 00 00 00 00 
0067A4 00 00 00 00 00 00 
0067AA 00 00 00 00 00 00 
0067B0 00 00 00 00 00 00 
0067B6 00 00 00 00 00 00 
0067BC 00 00 00 00 00 00 
0067C2 00 00 00 00 00 00 
0067C8 00 00 00 00 00 00 
0067CE 00 00 00 00 00 00 
0067D4 00 00 00 00 00 00 
0067DA 00 00 00 00 00 00 
0067E0 00 00 00 00 00 00 
0067E6 00 00 00 00 00 00 
0067EC 00 00 00 00 00 00 
0067F2 00 00 00 00 00 00 
0067F8 00 00 00 00 00 00 
0067FE 00 00 00 00 00 00 
006804 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 251


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00680A 00 00 00 00 00 00 
006810 00 00 00 00 00 00 
006816 00 00 00 00 00 00 
00681C 00 00 00 00 00 00 
006822 00 00 00 00 00 00 
006828 00 00 00 00 00 00 
00682E 00 00 00 00 00 00 
006834 00 00 00 00 00 00 
00683A 00 00 00 00 00 00 
006840 00 00 00 00 00 00 
006846 00 00 00 00 00 00 
00684C 00 00 00 00 00 00 
006852 00 00 00 00 00 00 
006858 00 00 00 00 00 00 
00685E 00 00 00 00 00 00 
006864 00 00 00 00 00 00 
00686A 00 00 00 00 00 00 
006870 00 00 00 00 00 00 
006876 00 00 00 00 00 00 
00687C 00 00 00 00 00 00 
006882 00 00 00 00 00 00 
006888 00 00 00 00 00 00 
00688E 00 00 00 00 00 00 
006894 00 00 00 00 00 00 
00689A 00 00 00 00 00 00 
0068A0 00 00 00 00 00 00 
0068A6 00 00 00 00 00 00 
0068AC 00 00 
                           A  3268    
0068AE 00 00 00 00 00 00   A  3269    scratch_pad		blkb 256,0
0068B4 00 00 00 00 00 00 
0068BA 00 00 00 00 00 00 
0068C0 00 00 00 00 00 00 
0068C6 00 00 00 00 00 00 
0068CC 00 00 00 00 00 00 
0068D2 00 00 00 00 00 00 
0068D8 00 00 00 00 00 00 
0068DE 00 00 00 00 00 00 
0068E4 00 00 00 00 00 00 
0068EA 00 00 00 00 00 00 
0068F0 00 00 00 00 00 00 
0068F6 00 00 00 00 00 00 
0068FC 00 00 00 00 00 00 
006902 00 00 00 00 00 00 
006908 00 00 00 00 00 00 
00690E 00 00 00 00 00 00 
006914 00 00 00 00 00 00 
00691A 00 00 00 00 00 00 
006920 00 00 00 00 00 00 
006926 00 00 00 00 00 00 
00692C 00 00 00 00 00 00 
006932 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)21-Aug-11     14:29:07     page: 252


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
006938 00 00 00 00 00 00 
00693E 00 00 00 00 00 00 
006944 00 00 00 00 00 00 
00694A 00 00 00 00 00 00 
006950 00 00 00 00 00 00 
006956 00 00 00 00 00 00 
00695C 00 00 00 00 00 00 
006962 00 00 00 00 00 00 
006968 00 00 00 00 00 00 
00696E 00 00 00 00 00 00 
006974 00 00 00 00 00 00 
00697A 00 00 00 00 00 00 
006980 00 00 00 00 00 00 
006986 00 00 00 00 00 00 
00698C 00 00 00 00 00 00 
006992 00 00 00 00 00 00 
006998 00 00 00 00 00 00 
00699E 00 00 00 00 00 00 
0069A4 00 00 00 00 00 00 
0069AA 00 00 00 00 
                           A  3270    
                           A  3271    ;==============================================
                           A  3272    	
0069AE 00                  A  3273    os_max_addr		db 0							                           A  3274    	
                           A  3275    
                           A  3276    ;==============================================
                           A  3277    
                           A  3278    				end	
                           A  3279    				
                           A  3280    ;==============================================
                           A  3281    	


Errors: 0
Warnings: 0
Lines Assembled: 12594
