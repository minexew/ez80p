Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:   1


PC     Object              I  Line    Source 
                           A     1    
                           A     2    ; PROSE for EZ80P by Phil Ruston 2011
                           A     3    ; Compile with Zilog ZDS II
                           A     4    
                           A     5    ;----------------------------------------------
                           A     6    	.assume ADL = 1
                           A     7    ;----------------------------------------------
                           A     8    
                           B     0    	include	'ez80_cpu_equates.asm'
                           B     1    ;--- EZ80 Internal Ports ----------------------
                           B     2    
       0000009A            B     3    PB_DR			equ 09ah
       0000009B            B     4    PB_DDR			equ 09bh
       0000009C            B     5    PB_ALT1			equ 09ch
       0000009D            B     6    PB_ALT2			equ 09dh
                           B     7    
       0000009E            B     8    PC_DR			equ 09eh
       0000009F            B     9    PC_DDR			equ 09fh
       000000A0            B    10    PC_ALT1			equ 0a0h
       000000A1            B    11    PC_ALT2			equ 0a1h
                           B    12    
       000000A2            B    13    PD_DR			equ 0a2h
       000000A3            B    14    PD_DDR			equ 0a3h
       000000A4            B    15    PD_ALT1			equ 0a4h
       000000A5            B    16    PD_ALT2			equ 0a5h
                           B    17    
       000000C0            B    18    UART0_RBR		equ 0c0h
       000000C0            B    19    UART0_THR		equ 0c0h
       000000C0            B    20    UART0_BRG_L		equ 0c0h
       000000C1            B    21    UART0_BRG_H		equ 0c1h
       000000C1            B    22    UART0_IER		equ 0c1h
       000000C2            B    23    UART0_FCTL		equ 0c2h
       000000C3            B    24    UART0_LCTL		equ 0c3h
       000000C4            B    25    UART0_MCTL		equ 0c4h
       000000C5            B    26    UART0_LSR		equ 0c5h
                           B    27    
       000000A8            B    28    CS0_LBR			equ 0a8h			;eZ80 wait 
       000000A9            B    29    CS0_UBR			equ 0a9h
       000000AA            B    30    CS0_CTL			equ 0aah			
       000000AB            B    31    CS1_LBR			equ 0abh			;eZ80 wait 
       000000AC            B    32    CS1_UBR			equ 0ach
       000000AD            B    33    CS1_CTL			equ 0adh
                           B    34    
       00000080            B    35    TMR0_CTL		equ 080h			;timer 0 eq
       00000081            B    36    TMR0_DR_L		equ 081h
       00000081            B    37    TMR0_RR_L		equ 081h
       00000082            B    38    TMR0_DR_H		equ 082h
       00000082            B    39    TMR0_RR_H		equ 082h
       00000092            B    40    TMR_ISS			equ 092h
                           B    41    
       000000ED            B    42    RTC_CTRL		equ 0edh			;RTC equate
       000000EC            B    43    RTC_ACTRL		equ 0ech
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:   2


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80_cpu_equates.asm
       000000E0            B    44    RTC_SEC			equ 0e0h
       000000E1            B    45    RTC_MIN			equ 0e1h
       000000E2            B    46    RTC_HRS			equ 0e2h
       000000E3            B    47    RTC_DOW			equ 0e3h
       000000E4            B    48    RTC_DOM			equ 0e4h
       000000E5            B    49    RTC_MON			equ 0e5h
       000000E6            B    50    RTC_YR			equ 0e6h
       000000E7            B    51    RTC_CEN			equ 0e7h
                           B    52    
                           B    53    ;----------------------------------------------
                           B     0    	include	'ez80p_hardware_equates.asm'
                           B     1    
                           B     2    ;-- EZ80P Hardware equates --------------------
                           B     3    
       00000000            B     4    port_pic_data  			equ 000h
       00000001            B     5    port_pic_ctrl			equ 001h
       00000001            B     6    port_hw_flags			equ 001h
       00000002            B     7    port_sdc_ctrl			equ 002h	; this is a
       00000002            B     8    port_keyboard_data		equ 002h
       00000003            B     9    port_sdc_data		 	equ 003h	
       00000004            B    10    port_memory_paging		equ 004h
       00000005            B    11    port_irq_ctrl			equ 005h
       00000006            B    12    port_nmi_ack			equ 006h
       00000007            B    13    port_ps2_ctrl			equ 007h
       00000008            B    14    port_selector			equ 008h
       00000006            B    15    port_mouse_data			equ 006h
       00000009            B    16    port_clear_flags		equ 009h
                           B    17    
       00000000            B    18    sdc_power				equ 0		;(port_sd_c
       00000001            B    19    sdc_cs					equ 1		;(port_sd_c
       00000002            B    20    sdc_speed				equ 2 		;(port_sd_c
                           B    21    
       00000004            B    22    sdc_serializer_busy		equ 4 		;(port_hw_f
       00000005            B    23    vrt						equ 5		;(port_hw_f
                           B    24    
                           B    25    
                           B    26    ;-- Memory locations --------------------------
                           B    27    
       00800000            B    28    vram_a_addr				equ 0800000h
       00C00000            B    29    vram_b_addr				equ 0c00000h
                           B    30    
                           B    31    ;-- Hardware registers ------------------------
                           B    32    
       00FF0000            B    33    hw_palette				equ 0ff0000h
       00FF0800            B    34    hw_sprite_registers		equ 0ff0800h
       00FF1000            B    35    hw_video_parameters		equ 0ff1000h
       00FF1400            B    36    hw_audio_registers		equ 0ff1400h
       00FF1800            B    37    hw_video_settings		equ 0ff1800h
                           B    38    
       00FF1000            B    39    tilemap_parameters		equ hw_video_parameters
       00FF1020            B    40    bitmap_parameters		equ hw_video_parameters
                           B    41    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:   3


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_hardware_equates.asm
       00FF1800            B    42    video_control			equ hw_video_settings+0
       00FF1801            B    43    sprite_control			equ hw_video_settings+0
       00FF1802            B    44    bgnd_palette_select		equ hw_video_settings+0
       00FF1803            B    45    sprite_palette_select	equ hw_video_settings+0
       00FF1804            B    46    right_border_position	equ hw_video_settings+0
                           B    47    
                           B    48    ;----------------------------------------------
                           A    11    
                           A    12    ;----------------------------------------------
                           A    13    
       00000A00            A    14    os_location	 	equ 0a00h
       0007FFFF            A    15    sys_mem_top		equ 07ffffh
                           A    16    
       0000002F            A    17    prose_version	equ 2fh
                           A    18    
                           A    19    ;----------------------------------------------
                           A    20    ; Assembly options
                           A    21    ;----------------------------------------------
                           A    22    
       00000008            A    23    max_volumes				equ 8
                           A    24    
       00000050            A    25    max_buffer_chars		equ 80		; applies t
                           A    26    
                           A    27    ;----------------------------------------------
                           A    28    			
000A00                     A    29    			org os_location
                           A    30    			
000A00 00 00 00 00 00 00   A    31    				blkb 16,0						000A06 00 00 00 00 00 00 
000A0C 00 00 00 00 
                           A    32    			
                           A    33    ;----------------------------------------------
                           A    34    			
000A10 C3 40 0A 00         A    35    				jp os_first_run					000A14 C3 A5 0E 00         A    36    				jp extcmd_return				000A18 C3000000            A    37    				jp 0							000A1C C3000000            A    38    				jp 0							                           A    39    				
                           A    40    ;----------------------------------------------
                           A    41    
000A20                     A    42    prose_kernal
                           A    43    
                           A    44    ; External apps can call kernal routines by doi
                           A    45    ; Set A to kernal routine number required (see 
                           A    46    ; (this routine is always located at os_locatio
                           A    47    
000A20 D9                  A    48    				exx		
000A21 DD21 50 55 00       A    49    				ld ix,kernal_table				000A26 11030000            A    50    				ld de,3
000A2A 57                  A    51    				ld d,a
000A2B ED5C                A    52    				mlt de
000A2D DD19                A    53    				add ix,de						Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:   4


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000A2F DD3700              A    54    				ld ix,(ix)						                           A    55    				
000A32 E3                  A    56    				ex (sp),hl
000A33 7D                  A    57    				ld a,l							000A34 E601                A    58    				and 1							000A36 E3                  A    59    				ex (sp),hl
000A37 D9                  A    60    				exx
000A38 CD 3E 0A 00         A    61    				call kr_jump					000A3C 5BC9                A    62    				ret.l							                           A    63    				
000A3E DDE9                A    64    kr_jump			jp (ix)							                           A    65    						
                           A    66    ;----------------------------------------------
                           A    67    
                           A    68    ; *******************
                           A    69    ; *   START UP OS   *
                           A    70    ; *******************
                           A    71    
000A40                     A    72    os_first_run
                           A    73    	
000A40 B7                  A    74    				or a							000A41 20 05               A    75    				jr nz,os_cold_start		
000A43 78                  A    76    				ld a,b
000A44 32 6C 5F 00         A    77    				ld (boot_drive),a				                           A    78    
000A48                     A    79    os_cold_start
000A48 ED7D                A    80    				stmix							000A4A F3                  A    81    				di								000A4B ED5E                A    82    				im 2							000A4D AF                  A    83    				xor a
000A4E ED6D                A    84    				ld MB,a							000A50 4031FFFF            A    85    				ld.sis sp,0ffffh				000A54 31FFFF07            A    86    				ld sp,sys_mem_top				                           A    87    
000A58 CD 64 3A 00         A    88    				call disable_irqs
000A5C CD EC 3B 00         A    89    				call disable_nmi
                           A    90    				
000A60 3A B1 60 00         A    91    				ld a,(first_run)				000A64 B7                  A    92    				or a
000A65 28 11               A    93    				jr z,dont_resetkb
000A67 CD 11 42 00         A    94    				call init_keyboard
000A6B 28 06               A    95    				jr z,kb_ok
000A6D 21 B2 60 00         A    96    				ld hl,devices_connected
000A71 CB86                A    97    				res 0,(hl)
000A73 AF                  A    98    kb_ok			xor a
000A74 32 B1 60 00         A    99    				ld (first_run),a
000A78                     A   100    dont_resetkb
                           A   101    
000A78 21 E1 60 00         A   102    				ld hl,os_variables				000A7C 01 C8 01 00         A   103    				ld bc,last_os_var-os_variables
000A80 AF                  A   104    				xor a
000A81 CD 56 15 00         A   105    				call os_bchl_memfill
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:   5


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A   106    
000A85 21010000            A   107    				ld hl,1
000A89 22 08 5F 00         A   108    				ld (font_length),hl				                           A   109    	
000A8D CD 52 41 00         A   110    				call hwsc_default_hw_settings
                           A   111    				
000A91 3A CB 5E 00         A   112    				ld a,(video_mode)
000A95 CD 01 35 00         A   113    				call set_vmode					                           A   114    
000A99 21 B7 63 00         A   115    				ld hl,packed_font_start
000A9D ED5B 05 5F 00       A   116    				ld de,(font_addr)
000AA2 01 DF 02 00         A   117    				ld bc,packed_font_end-packed_fo
000AA6 CD B4 15 00         A   118    				call unpack_rle
                           A   119    
000AAA 3E5F                A   120    				ld a,5fh
000AAC 32 F1 5E 00         A   121    				ld (req_cursor_image),a
                           A   122    
000AB0 21 1F 56 00         A   123    				ld hl,welcome_message			000AB4 CD 1C 0F 00         A   124    				call os_print_string
000AB8 CD 53 36 00         A   125    				call os_get_mem_high			000ABC EB                  A   126    				ex de,hl
000ABD CD F4 12 00         A   127    				call os_show_hex_address
                           A   128    
000AC1 CD BC 13 00         A   129    				call os_new_line
000AC5 CD BC 13 00         A   130    				call os_new_line
000AC9 CD 02 32 00         A   131    				call os_cmd_vers				000ACD CD F6 31 00         A   132    				call os_cmd_remount				                           A   133    
000AD1 CD BC 13 00         A   134    				call os_new_line				                           A   135    
000AD5 CD CF 42 00         A   136    				call purge_keyboard
                           A   137    				
000AD9 CD 2F 3A 00         A   138    				call set_irq_vector
000ADD CD 41 3A 00         A   139    				call enable_os_irqs
000AE1 FB                  A   140    				ei
000AE2 CD D4 3B 00         A   141    				call set_nmi_vector
                           A   142    				
000AE6 21 B2 60 00         A   143    				ld hl,devices_connected			000AEA CB46                A   144    				bit 0,(hl)
000AEC 20 08               A   145    				jr nz,kb_present
000AEE 21 5C 5B 00         A   146    				ld hl,no_keyboard_msg
000AF2 CD F3 13 00         A   147    				call os_show_packed_text
000AF6                     A   148    kb_present				
000AF6 21 6F 56 00         A   149    				ld hl,startup_script_fn
000AFA 22 0A 62 00         A   150    				ld (os_args_loc),hl
000AFE CD 33 32 00         A   151    				call os_cmd_exec				                           A   152    									
000B02 3A B0 60 00         A   153    				ld a,(frozen)					000B06 B7                  A   154    				or a
000B07 28 11               A   155    				jr z,os_main_loop
000B09 AF                  A   156    				xor a
000B0A 32 B0 60 00         A   157    				ld (frozen),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:   6


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000B0E 21 C7 56 00         A   158    				ld hl,nmi_freeze_txt
000B12 CD 1C 0F 00         A   159    				call os_print_string
000B16 CD 4D 2D 00         A   160    				call os_cmd_r
                           A   161    				
                           A   162    	
                           A   163    ;==============================================
                           A   164    
000B1A                     A   165    os_main_loop
                           A   166    								
000B1A CD 42 41 00         A   167    				call hwsc_wait_vrt				                           A   168    
000B1E CD 6D 0F 00         A   169    				call os_cursor_flash
                           A   170    
000B22 CD B3 44 00         A   171    				call os_get_key_press
000B26 20 F2               A   172    				jr nz,os_main_loop
                           A   173    	
000B28 32 7E 62 00         A   174    				ld (current_scancode),a
000B2C 78                  A   175    				ld a,b
000B2D 32 7F 62 00         A   176    				ld (current_asciicode),a		                           A   177    	
000B31 CD 8A 3F 00         A   178    				call hwsc_remove_cursor
000B35 3E18                A   179    				ld a,24							000B37 32 4B 61 00         A   180    				ld (cursorflashtimer),a			000B3B AF                  A   181    				xor a
000B3C 32 4C 61 00         A   182    				ld (cursor_status),a
                           A   183    				
000B40 3A 7E 62 00         A   184    				ld a,(current_scancode)			000B44 FE70                A   185    				cp 70h
000B46 20 16               A   186    				jr nz,os_notins
000B48 3A 7D 62 00         A   187     				ld a,(insert_mode)
000B4C EE01                A   188    				xor 1
000B4E 32 7D 62 00         A   189    				ld (insert_mode),a
000B52 3E5F                A   190    				ld a,5fh
000B54 28 02               A   191    				jr z,linecurs
000B56 3E7F                A   192    				ld a,7fh
000B58 32 F1 5E 00         A   193    linecurs		ld (req_cursor_image),a
000B5C 18 BC               A   194    				jr os_main_loop
                           A   195    
000B5E 21 49 61 00         A   196    os_notins		ld hl,cursor_x					000B62 FE6B                A   197    				cp 06bh			
000B64 20 0E               A   198    				jr nz,os_ntlft
000B66 35                  A   199    				dec (hl)
000B67 7E                  A   200    				ld a,(hl)
000B68 FEFF                A   201    				cp 0ffh	
000B6A 20 AE               A   202    				jr nz,os_main_loop
000B6C 3A F6 5E 00         A   203    				ld a,(window_columns)
000B70 3D                  A   204    				dec a
000B71 77                  A   205    				ld (hl),a						000B72 18 A6               A   206    				jr os_main_loop
                           A   207    
000B74 FE74                A   208    os_ntlft		cp 074h							000B76 20 0C               A   209    				jr nz,os_ntrig
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:   7


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000B78 34                  A   210    				inc (hl)
000B79 3A F6 5E 00         A   211    				ld a,(window_columns)
000B7D BE                  A   212    				cp (hl)
000B7E 20 9A               A   213    				jr nz,os_main_loop
000B80 3600                A   214    				ld (hl),0						000B82 18 96               A   215    				jr os_main_loop
                           A   216    
000B84 21 48 61 00         A   217    os_ntrig		ld hl,cursor_y
000B88 FE75                A   218    				cp 075h							000B8A 20 09               A   219    				jr nz,os_ntup
000B8C 35                  A   220    				dec (hl)
000B8D CB7E                A   221    				bit 7,(hl)
000B8F 28 89               A   222    				jr z,os_main_loop
000B91 3600                A   223    				ld (hl),0						000B93 18 85               A   224    				jr os_main_loop
                           A   225    
000B95 FE72                A   226    os_ntup			cp 072h
000B97 20 14               A   227    				jr nz,os_ntdwn					000B99 34                  A   228    				inc (hl)
000B9A 3A F3 5E 00         A   229    				ld a,(window_rows)
000B9E BE                  A   230    				cp (hl)
000B9F C2 1A 0B 00         A   231    				jr nz,os_main_loop
000BA3 3D                  A   232    				dec a
000BA4 77                  A   233    				ld (hl),a						000BA5 CD B9 3D 00         A   234    				call hwsc_scroll_up
000BA9 C3 1A 0B 00         A   235    				jr os_main_loop
                           A   236    
000BAD FE71                A   237    os_ntdwn		cp 071h							000BAF 20 08               A   238    				jr nz,os_nodel		
000BB1 3A 49 61 00         A   239    				ld a,(cursor_x)					000BB5 47                  A   240    				ld b,a
000BB6 04                  A   241    				inc b
000BB7 18 13               A   242    				jr os_chrbk
                           A   243    
000BB9 FE66                A   244    os_nodel		cp 066h							000BBB 20 17               A   245    				jr nz,os_nbksp
000BBD 3A 49 61 00         A   246    				ld a,(cursor_x)					000BC1 B7                  A   247    				or a							000BC2 CA 1A 0B 00         A   248    				jp z,os_main_loop
000BC6 47                  A   249    				ld b,a
000BC7 3D                  A   250    				dec a
000BC8 32 49 61 00         A   251    				ld (cursor_x),a					000BCC CD 53 40 00         A   252    os_chrbk		call hwsc_chars_left			000BD0 C3 1A 0B 00         A   253    				jp os_main_loop
                           A   254    
000BD4 FE5A                A   255    os_nbksp		cp 05ah							000BD6 CA 1E 0C 00         A   256    				jp z,os_enter_pressed
                           A   257    	
000BDA 3A 7F 62 00         A   258    				ld a,(current_asciicode)		000BDE FE20                A   259    				cp 32							000BE0 38 38               A   260    				jr c,os_nvdun					                           A   261    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:   8


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000BE2 FE7B                A   262    				cp 07bh							000BE4 30 12               A   263    				jr nc,os_gtcha					000BE6 FE61                A   264    				cp 061h
000BE8 38 04               A   265    				jr c,os_ntupc
000BEA D620                A   266    				sub 020h
000BEC 18 0A               A   267    				jr os_gtcha
000BEE FE5B                A   268    os_ntupc		cp 05bh
000BF0 30 06               A   269    				jr nc,os_gtcha
000BF2 FE41                A   270    				cp 041h
000BF4 38 02               A   271    				jr c,os_gtcha
000BF6 C620                A   272    				add a,020h
000BF8 57                  A   273    os_gtcha		ld d,a							000BF9 3A 7D 62 00         A   274    				ld a,(insert_mode)				000BFD B7                  A   275    				or a
000BFE CC 9A 40 00         A   276    				call z,hwsc_chars_right
                           A   277    				
000C02 ED4B 48 61 00       A   278    os_schi			ld bc,(cursor_pos)				000C07 7A                  A   279    				ld a,d							000C08 CD 5D 3E 00         A   280    				call hwsc_plot_char		
000C0C 21 49 61 00         A   281    				ld hl,cursor_x					000C10 34                  A   282    				inc (hl)
000C11 3A F6 5E 00         A   283    				ld a,(window_columns)
000C15 BE                  A   284    				cp (hl)							000C16 20 02               A   285    				jr nz,os_nvdun
000C18 3600                A   286    				ld (hl),0
                           A   287    
000C1A C3 1A 0B 00         A   288    os_nvdun		jp os_main_loop
                           A   289    	
                           A   290    
                           A   291    ;----------------------------------------------
                           A   292    
000C1E                     A   293    os_enter_pressed
                           A   294    	
000C1E CD 25 41 00         A   295    				call hwsc_charline_to_command_s
                           A   296    
000C22 AF                  A   297    				xor a
000C23 32 49 61 00         A   298    				ld (cursor_x),a					000C27 21 48 61 00         A   299    				ld hl,cursor_y					000C2B 34                  A   300    				inc (hl)
000C2C 3A F3 5E 00         A   301    				ld a,(window_rows)
000C30 BE                  A   302    				cp (hl)
000C31 20 06               A   303    				jr nz,os_esdok
000C33 3D                  A   304    				dec a
000C34 77                  A   305    				ld (hl),a
000C35 CD B9 3D 00         A   306    				call hwsc_scroll_up
                           A   307    
000C39 CD 41 0C 00         A   308    os_esdok		call os_parse_cmd_chk_ps		                           A   309    
000C3D C3 1A 0B 00         A   310    post_csb		jp os_main_loop
                           A   311    
                           A   312    	
                           A   313    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:   9


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A   314    
                           A   315    
000C41                     A   316    os_parse_cmd_chk_ps
                           A   317    
000C41 CD 54 0C 00         A   318    				call os_parse_command_line
000C45 FEFE                A   319    				cp 0feh							000C47 C0                  A   320    				ret nz
000C48 01500000            A   321    				ld bc,max_buffer_chars			000C4C 11 66 61 00         A   322    				ld de,commandstring				000C50 EDB0                A   323    				ldir
000C52 18 ED               A   324    				jr os_parse_cmd_chk_ps
                           A   325    
                           A   326    	
                           A   327    ;----------------------------------------------
                           A   328    	
000C54                     A   329    os_parse_command_line
                           A   330    
000C54 3E01                A   331    				ld a,1
000C56 32 E1 60 00         A   332    				ld (store_registers),a			                           A   333    
000C5A 21 66 61 00         A   334    				ld hl,commandstring				000C5E 0650                A   335    				ld b,max_buffer_chars			000C60 CD B2 0F 00         A   336    				call os_scan_for_non_space		000C64 B7                  A   337    				or a							000C65 C8                  A   338    				ret z
000C66 11 EB 56 00         A   339    				ld de,dictionary-1				000C6A D5                  A   340    				push de
000C6B D1                  A   341    compcstr		pop de
000C6C E5                  A   342    				push hl
000C6D FDE1                A   343    				pop iy
000C6F 13                  A   344    notacmd			inc de
000C70 1A                  A   345    				ld a,(de)
000C71 FE01                A   346    				cp 1							000C73 CA 0D 0D 00         A   347    				jp z,os_no_kernal_command_found
000C77 CB7F                A   348    				bit 7,a
000C79 28 F4               A   349    				jr z,notacmd					000C7B E67F                A   350    				and 07fh
000C7D 4F                  A   351    				ld c,a							000C7E D5                  A   352    				push de
000C7F 13                  A   353    cmdnscan		inc de
000C80 FD7E00              A   354    				ld a,(iy)						000C83 CD 1D 12 00         A   355    				call os_uppercasify
000C87 47                  A   356    				ld b,a
000C88 1A                  A   357    				ld a,(de)						000C89 B8                  A   358    				cp b
000C8A FD23                A   359    				inc iy
000C8C 28 F1               A   360    				jr z,cmdnscan					000C8E 1A                  A   361    nomatch			ld a,(de)						000C8F B7                  A   362    				or a
000C90 28 04               A   363    				jr z,posmatch					000C92 CB7F                A   364    				bit 7,a			
000C94 28 D5               A   365    				jr z,compcstr					Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  10


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000C96 FD7EFF              A   366    posmatch		ld a,(iy-1)						000C99 FE20                A   367    				cp 32
000C9B 20 CE               A   368    				jr nz,compcstr					                           A   369    	
000C9D D1                  A   370    				pop de				
000C9E FDE5                A   371    				push iy							000CA0 E1                  A   372    				pop hl
000CA1 CD B2 0F 00         A   373    				call os_scan_for_non_space
000CA5 22 0A 62 00         A   374    				ld (os_args_loc),hl				                           A   375    	
000CA9 21 56 5C 00         A   376    				ld hl,os_cmd_locs
000CAD 11030000            A   377    				ld de,3
000CB1 51                  A   378    				ld d,c
000CB2 ED5C                A   379    				mlt de							000CB4 19                  A   380    				add hl,de
000CB5 ED37                A   381    				ld ix,(hl)						                           A   382    
000CB7 2A 0A 62 00         A   383    				ld hl,(os_args_loc)				000CBB CD EF 0E 00         A   384    				call os_run_command				                           A   385    
000CBF C8                  A   386    				ret z							000CC0 B7                  A   387    				or a
000CC1 20 13               A   388    				jr nz,show_erm
000CC3 78                  A   389    os_hwe1			ld a,b							000CC4 21 EB 59 00         A   390    os_hwerr		ld hl,hex_byte_txt		
000CC8 CD 5F 10 00         A   391    				call hexbyte_to_ascii	
000CCC 21 4F 5B 00         A   392    				ld hl,hw_err_msg
000CD0 CD F3 13 00         A   393    				call os_show_packed_text
000CD4 AF                  A   394    				xor a
000CD5 C9                  A   395    				ret
                           A   396    
000CD6 01000000            A   397    show_erm		ld bc,0							000CDA 4F                  A   398    				ld c,a
000CDB D680                A   399    				sub 080h						000CDD 38 11               A   400    				jr c,no_trans					000CDF 21 7B 5D 00         A   401    				ld hl,kernal_error_code_transla
000CE3 CB77                A   402    				bit 6,a							000CE5 28 06               A   403    				jr z,not_fs_err					000CE7 21 88 5D 00         A   404    				ld hl,fs_error_code_translation
000CEB D640                A   405    				sub 040h
000CED 4F                  A   406    not_fs_err		ld c,a
000CEE 09                  A   407    				add hl,bc
000CEF 4E                  A   408    				ld c,(hl)
000CF0 0600                A   409    no_trans		ld b,0
000CF2 21 BC 5C 00         A   410    				ld hl,packed_msg_list
000CF6 7E                  A   411    findmsg			ld a,(hl)
000CF7 FEFF                A   412    				cp 0ffh
000CF9 C8                  A   413    				ret z							000CFA 23                  A   414    				inc hl
000CFB B7                  A   415    				or a
000CFC 20 F8               A   416    				jr nz,findmsg					000CFE 04                  A   417    				inc b
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  11


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000CFF 79                  A   418    				ld a,c							000D00 B8                  A   419    				cp b
000D01 20 F3               A   420    				jr nz,findmsg
000D03 CD F3 13 00         A   421    				call os_show_packed_text
000D07 CD BC 13 00         A   422    				call os_new_line
000D0B AF                  A   423    				xor a
000D0C C9                  A   424    				ret
                           A   425    	
                           A   426    
000D0D                     A   427    os_no_kernal_command_found
                           A   428    
000D0D 3E30                A   429    				ld a,030h						000D0F 32 75 5F 00         A   430    fvolcmd			ld (vol_txt+4),a				000D13 F5                  A   431    				push af			
000D14 11 72 5F 00         A   432    				ld de,vol_txt+1		
000D18 0605                A   433    				ld b,5			
000D1A CD E3 11 00         A   434    				call os_compare_strings	
000D1E 28 08               A   435    				jr z,gotvolcmd		
000D20 F1                  A   436    				pop af				
000D21 3C                  A   437    				inc a			
000D22 FE38                A   438    				cp 030h+max_volumes		
000D24 20 E9               A   439    				jr nz,fvolcmd		
000D26 18 0B               A   440    				jr novolcmd		
000D28 F1                  A   441    gotvolcmd		pop af
000D29 D630                A   442    				sub 030h
000D2B CD A1 1A 00         A   443    				call os_change_volume
000D2F C3 D4 0E 00         A   444    				jp extcmderf					                           A   445    		
                           A   446    
                           A   447    
000D33 7E                  A   448    novolcmd		ld a,(hl)						000D34 FE47                A   449    				cp 'G'							000D36 20 29               A   450    				jr nz,not_g_cmd					000D38 23                  A   451    				inc hl
000D39 7E                  A   452    				ld a,(hl)
000D3A 2B                  A   453    				dec hl
000D3B FE20                A   454    				cp ' '
000D3D 20 22               A   455    				jr nz,not_g_cmd
000D3F 23                  A   456    				inc hl
000D40 CD B2 0F 00         A   457    				call os_scan_for_non_space
000D44 22 0A 62 00         A   458    				ld (os_args_loc),hl				000D48 B7                  A   459    				or a
000D49 20 04               A   460    				jr nz,gotgargs
000D4B 3E1F                A   461    				ld a,01fh						000D4D 18 87               A   462    				jr show_erm
000D4F CD 9E 10 00         A   463    gotgargs		call ascii_to_hex_no_scan		000D53 B7                  A   464    				or a
000D54 20 80               A   465    				jr nz,show_erm
000D56 CD E3 3B 00         A   466    				call enable_nmi					000D5A D5                  A   467    				push de
000D5B DDE1                A   468    				pop ix			
000D5D C3 EF 0E 00         A   469    				jp os_run_command				Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  12


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A   470    				
                           A   471    				
                           A   472    
000D61 22 0A 62 00         A   473    not_g_cmd		ld (os_args_loc),hl				000D65 22 0D 62 00         A   474    				ld (os_args_pos_cache),hl
000D69 CD E6 0F 00         A   475    				call os_args_to_fn_append_ezp	                           A   476    	
000D6D CD F9 0E 00         A   477    				call cache_dir_block			                           A   478    
000D71 CD C6 48 00         A   479    				call fs_check_disk_format		000D75 38 3C               A   480    				jr c,os_ndfxc
000D77 B7                  A   481    				or a							000D78 20 39               A   482    				jr nz,os_ndfxc
                           A   483    	
000D7A CD 68 4A 00         A   484    				call fs_open_file_command		000D7E DA C4 0C 00         A   485    				jp c,os_hwerr			 		000D82 B7                  A   486    				or a
000D83 28 38               A   487    				jr z,os_gecmd					                           A   488    
000D85 CD 39 4A 00         A   489    				call fs_goto_root_dir_command	000D89 21 66 56 00         A   490    				ld hl,os_dos_cmds_txt
000D8D CD C7 52 00         A   491    				call fs_hl_to_filename
000D91 CD 14 4A 00         A   492    				call fs_change_dir_command		000D95 DA C4 0C 00         A   493    				jp c,os_hwerr
000D99 B7                  A   494    				or a
000D9A 20 17               A   495    				jr nz,os_ndfxc					                           A   496    	
000D9C 2A 0D 62 00         A   497    				ld hl,(os_args_pos_cache)		000DA0 22 0A 62 00         A   498    				ld (os_args_loc),hl
000DA4 CD E6 0F 00         A   499    				call os_args_to_fn_append_ezp	000DA8 CD 68 4A 00         A   500    				call fs_open_file_command		000DAC DA C4 0C 00         A   501    				jp c,os_hwerr
000DB0 B7                  A   502    				or a
000DB1 28 0A               A   503    				jr z,os_gecmd
000DB3 CD 05 0F 00         A   504    os_ndfxc		call restore_dir_block			000DB7 3E0B                A   505    				ld a,0bh						000DB9 C3 D6 0C 00         A   506    				jp show_erm
                           A   507    
000DBD 2A 0A 62 00         A   508    os_gecmd		ld hl,(os_args_loc)				000DC1 CD B2 0F 00         A   509    				call os_scan_for_non_space		000DC5 22 0A 62 00         A   510    				ld (os_args_loc),hl
                           A   511    
000DC9 11100000            A   512    				ld de,16
000DCD CD 19 16 00         A   513    				call os_set_load_length			000DD1 21 96 68 00         A   514    				ld hl,scratch_pad
000DD5 22 27 55 00         A   515    				ld (fs_ez80_address),hl
000DD9 CD B3 4A 00         A   516    				call fs_read_data_command
000DDD DA C4 0C 00         A   517    				jp c,os_hwerr					000DE1 B7                  A   518    				or a
000DE2 C2 D6 0C 00         A   519    				jp nz,show_erm					000DE6 2A 98 68 00         A   520    				ld hl,(scratch_pad+2)
000DEA 1150524F            A   521    				ld de,04f5250h					Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  13


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000DEE AF                  A   522    				xor a	
000DEF ED52                A   523    				sbc hl,de
000DF1 28 0A               A   524    				jr z,loc_header
000DF3 CD 05 0F 00         A   525    				call restore_dir_block			000DF7 3E1A                A   526    				ld a,01ah						000DF9 C3 D6 0C 00         A   527    				jp show_erm						                           A   528    				
000DFD 3A A5 68 00         A   529    loc_header		ld a,(scratch_pad+15)			000E01 32 E0 60 00         A   530    				ld (store_adl),a			
000E05 CD 68 4A 00         A   531    				call fs_open_file_command		000E09 DA C4 0C 00         A   532    				jp c,os_hwerr
000E0D B7                  A   533    				or a	
000E0E 20 A3               A   534    				jr nz,os_ndfxc
000E10 2A 9B 68 00         A   535    				ld hl,(scratch_pad+5)			000E14 22 27 55 00         A   536    				ld (fs_ez80_address),hl
000E18 ED5B B3 60 00       A   537    				ld de,(sys_ram_high)
000E1D AF                  A   538    				xor a
000E1E E5                  A   539    				push hl
000E1F ED52                A   540    				sbc hl,de
000E21 E1                  A   541    				pop hl
000E22 30 0A               A   542    				jr nc,osmemok
000E24 CD 05 0F 00         A   543    				call restore_dir_block			000E28 3E26                A   544    				ld a,026h
000E2A C3 D6 0C 00         A   545    				jp show_erm
                           A   546    
000E2E ED5B A1 68 00       A   547    osmemok			ld de,(scratch_pad+11)			000E33 7B                  A   548    				ld a,e
000E34 B2                  A   549    				or d
000E35 28 14               A   550    				jr z,noprov_spec				000E37 212F0000            A   551    				ld hl,prose_version
000E3B AF                  A   552    				xor a
000E3C 40ED52              A   553    				sbc.sis hl,de					000E3F 30 0A               A   554    				jr nc,noprov_spec
000E41 CD 05 0F 00         A   555    				call restore_dir_block
000E45 3E1B                A   556    				ld a,01bh						000E47 C3 D6 0C 00         A   557    				jp show_erm
                           A   558    				
000E4B CD 95 41 00         A   559    noprov_spec		call hwsc_get_version			000E4F 2A A3 68 00         A   560    				ld hl,(scratch_pad+13)			000E53 EB                  A   561    				ex de,hl						000E54 7B                  A   562    				ld a,e
000E55 B2                  A   563    				or d
000E56 28 10               A   564    				jr z,nohwv_spec					000E58 AF                  A   565    				xor a
000E59 40ED52              A   566    				sbc.sis hl,de					000E5C 30 0A               A   567    				jr nc,nohwv_spec
000E5E CD 05 0F 00         A   568    				call restore_dir_block
000E62 3E2B                A   569    				ld a,02bh						000E64 C3 D6 0C 00         A   570    				jp show_erm
                           A   571    
000E68 ED5B 9E 68 00       A   572    nohwv_spec		ld de,(scratch_pad+8)			000E6D 3A A0 68 00         A   573    				ld a,(scratch_pad+10)			Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  14


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000E71 B2                  A   574    				or d
000E72 B3                  A   575    				or e
000E73 28 04               A   576    				jr z,readcode					000E75 CD 19 16 00         A   577    				call os_set_load_length			                           A   578    		
000E79 2A 9B 68 00         A   579    readcode		ld hl,(scratch_pad+5)
000E7D 22 13 62 00         A   580    				ld (os_extcmd_jmp_addr),hl		000E81 CD B3 4A 00         A   581    				call fs_read_data_command
000E85 F5                  A   582    				push af
000E86 CD 05 0F 00         A   583    				call restore_dir_block			000E8A F1                  A   584    				pop af
000E8B DA C4 0C 00         A   585    				jp c,os_hwerr					000E8F B7                  A   586    				or a
000E90 C2 D6 0C 00         A   587    				jp nz,show_erm					                           A   588    	
000E94 CD E3 3B 00         A   589    				call enable_nmi					000E98 DD2A 13 62 00       A   590    				ld ix,(os_extcmd_jmp_addr)		000E9D 2A 0A 62 00         A   591    				ld hl,(os_args_loc)				000EA1 C3 EF 0E 00         A   592    				jp os_run_command				                           A   593    
000EA5 F5                  A   594    extcmd_return	push af							000EA6 CD 52 41 00         A   595    				call hwsc_default_hw_settings	000EAA 3A E1 60 00         A   596    				ld a,(store_registers)
000EAE B7                  A   597    				or a
000EAF 28 06               A   598    				jr z,skp_strg
000EB1 F1                  A   599    				pop af
000EB2 CD 35 13 00         A   600    				call os_store_CPU_regs			000EB6 F5                  A   601    				push af
000EB7 F1                  A   602    skp_strg		pop af
                           A   603    
000EB8 F5                  A   604    cntuasr			push af
000EB9 21 96 68 00         A   605    				ld hl,scratch_pad				000EBD CD 5F 10 00         A   606    				call hexbyte_to_ascii
000EC1 3600                A   607    				ld (hl),0
000EC3 11 96 68 00         A   608    				ld de,scratch_pad
000EC7 21 DF 56 00         A   609    				ld hl,error_txt
000ECB CD 4C 1B 00         A   610    				call os_set_envar
000ECF CD EC 3B 00         A   611    				call disable_nmi				000ED3 F1                  A   612    				pop af
000ED4 28 12               A   613    extcmderf		jr z,not_errc					000ED6 B7                  A   614    				or a
000ED7 CA C3 0C 00         A   615    				jp z,os_hwe1					000EDB FEFF                A   616    				cp 0ffh							000EDD CA 48 0A 00         A   617    				jp z,os_cold_start
000EE1 FEFE                A   618    				cp 0feh							000EE3 C8                  A   619    				ret z
000EE4 C3 D6 0C 00         A   620    				jp show_erm						000EE8 FEFF                A   621    not_errc		cp 0ffh							000EEA CA 48 0A 00         A   622    				jp z,os_cold_start
000EEE C9                  A   623    				ret
                           A   624    				
                           A   625    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  15


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A   626    
000EEF                     A   627    os_run_command									000EEF ED3906              A   628    				out0 (port_nmi_ack),a			000EF2 DD22 E2 60 00       A   629    				ld (com_start_addr),ix			000EF7 DDE9                A   630    				jp (ix)							                           A   631    
                           A   632    ;----------------------------------------------
                           A   633    
000EF9                     A   634    cache_dir_block
                           A   635    
                           A   636    	
000EF9 D5                  A   637    				push de
000EFA CD 45 1A 00         A   638    				call fs_get_dir_cluster	
000EFE ED53 10 62 00       A   639    				ld (os_dir_block_cache),de
000F03 D1                  A   640    				pop de	
000F04 C9                  A   641    				ret
                           A   642    		
                           A   643    
000F05                     A   644    restore_dir_block
                           A   645    
000F05 D5                  A   646    				push de
000F06 ED5B 10 62 00       A   647    				ld de,(os_dir_block_cache)
000F0B CD 51 1A 00         A   648    				call fs_update_dir_cluster
000F0F D1                  A   649    				pop de
000F10 C9                  A   650    				ret
                           A   651    		
                           A   652    ;==============================================
                           A   653    ; Routines called by command line
                           A   654    ;==============================================
                           A   655    
                           A   656    ; Set:-
                           A   657    ; HL to address of string
                           A   658    ; c = y
                           A   659    ; b = x
                           A   660    
000F11                     A   661    ext_print_string
                           A   662    
000F11 CC 7D 15 00         A   663    				call z,mbase_hl
000F15 18 05               A   664    				jr os_print_string
                           A   665    
000F17                     A   666    os_print_string_cond
                           A   667    
000F17 CD F8 19 00         A   668    				call test_quiet_mode
000F1B C0                  A   669    				ret nz
                           A   670    
000F1C                     A   671    os_print_string
                           A   672    
000F1C D5                  A   673    				push de
000F1D C5                  A   674    				push bc
000F1E ED4B 48 61 00       A   675    				ld bc,(cursor_pos)				000F23 7E                  A   676    prstr_lp		ld a,(hl)
000F24 23                  A   677    				inc hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  16


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000F25 B7                  A   678    				or a
000F26 20 09               A   679    				jr nz,prstr_ne
000F28 ED43 48 61 00       A   680    				ld (cursor_pos),bc
000F2D C1                  A   681    				pop bc
000F2E D1                  A   682    				pop de
000F2F AF                  A   683    				xor a							000F30 C9                  A   684    				ret
                           A   685    
000F31 FE0D                A   686    prstr_ne		cp 13
000F33 20 04               A   687    				jr nz,not_cr
000F35 0600                A   688    				ld b,0
000F37 18 EA               A   689    				jr prstr_lp
000F39 FE0A                A   690    not_cr			cp 10
000F3B 28 12               A   691    				jr z,line_feed				
000F3D FE0B                A   692    				cp 11
000F3F 28 0C               A   693    				jr z,next_line
000F41 CD 5D 3E 00         A   694    				call hwsc_plot_char
000F45 04                  A   695    				inc b
000F46 3A F6 5E 00         A   696    				ld a,(window_columns)
000F4A B8                  A   697    				cp b
000F4B 20 D6               A   698    				jr nz,prstr_lp
000F4D 0600                A   699    next_line		ld b,0
000F4F 0C                  A   700    line_feed		inc c
000F50 3A F3 5E 00         A   701    				ld a,(window_rows)
000F54 B9                  A   702    				cp c
000F55 20 CC               A   703    				jr nz,prstr_lp
000F57 0D                  A   704    				dec c
000F58 CD B9 3D 00         A   705    				call hwsc_scroll_up
000F5C 18 C5               A   706    				jr prstr_lp
                           A   707    
                           A   708    ;----------------------------------------------
                           A   709    
000F5E 21 56 62 00         A   710    os_print_char	ld hl,char_to_print
000F62 77                  A   711    				ld (hl),a
000F63 18 B7               A   712    				jr os_print_string
                           A   713    
                           A   714    ;----------------------------------------------
                           A   715    
000F65 F5                  A   716    home_cursor		push af
000F66 AF                  A   717    				xor a
000F67 32 49 61 00         A   718    				ld (cursor_x),a
000F6B F1                  A   719    				pop af
000F6C C9                  A   720    				ret
                           A   721    				
                           A   722    ;----------------------------------------------
                           A   723    
000F6D                     A   724    os_cursor_flash
                           A   725    
000F6D 21 4B 61 00         A   726    				ld hl,cursorflashtimer
000F71 34                  A   727    				inc (hl)
000F72 7E                  A   728    				ld a,(hl)
000F73 FE19                A   729    				cp 25
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  17


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000F75 C0                  A   730    				ret nz
000F76 3600                A   731    				ld (hl),0
000F78 3A 4C 61 00         A   732    				ld a,(cursor_status)
000F7C EE01                A   733    				xor 1
000F7E 32 4C 61 00         A   734    				ld (cursor_status),a
000F82 28 05               A   735    				jr z,no_cursor
000F84 CD 9D 3F 00         A   736    				call hwsc_draw_cursor			000F88 C9                  A   737    				ret
000F89 CD 8A 3F 00         A   738    no_cursor		call hwsc_remove_cursor
000F8D C9                  A   739    				ret
                           A   740    
                           A   741    ;----------------------------------------------
                           A   742    
000F8E                     A   743    os_refresh_screen
                           A   744    
000F8E 0E00                A   745    				ld c,0							000F90 CD FD 40 00         A   746    rs_yloop		call hwsc_redraw_ui_line
000F94 0C                  A   747    				inc c
000F95 3A F3 5E 00         A   748    				ld a,(window_rows)		
000F99 B9                  A   749    				cp c
000F9A 20 F4               A   750    				jr nz,rs_yloop
000F9C C9                  A   751    				ret
                           A   752    
                           A   753    ;----------------------------------------------
                           A   754    
000F9D                     A   755    os_next_arg
                           A   756    
000F9D CD A9 0F 00         A   757    				call os_scan_for_space
000FA1 B7                  A   758    				or a
000FA2 C8                  A   759    				ret z
000FA3 CD B2 0F 00         A   760    				call os_scan_for_non_space
000FA7 B7                  A   761    				or a
000FA8 C9                  A   762    				ret
                           A   763    
                           A   764    
                           A   765    ;----------------------------------------------
                           A   766    	
                           A   767    
000FA9                     A   768    os_scan_for_space
                           A   769    
000FA9 7E                  A   770    os_sfspl 		ld a,(hl)						000FAA B7                  A   771    				or a							000FAB C8                  A   772    				ret z
000FAC FE20                A   773    				cp ' '
000FAE C8                  A   774    				ret z
000FAF 23                  A   775    				inc hl
000FB0 18 F7               A   776    				jr os_sfspl
                           A   777    	
                           A   778    
                           A   779    ;----------------------------------------------
                           A   780    	
                           A   781    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  18


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000FB2                     A   782    os_scan_for_non_space
                           A   783    
000FB2 2B                  A   784    				dec hl							000FB3 23                  A   785    os_nsplp		inc hl			
000FB4 7E                  A   786    				ld a,(hl)			
000FB5 B7                  A   787    				or a			
000FB6 C8                  A   788    				ret z							000FB7 FE20                A   789    				cp ' '
000FB9 28 F8               A   790    				jr z,os_nsplp
000FBB C9                  A   791    				ret
                           A   792    	
                           A   793    	
                           A   794    ;----------------------------------------------
                           A   795    
000FBC                     A   796    os_args_to_alt_filename
                           A   797    
000FBC CD 16 10 00         A   798    				call os_atfn_pre				000FC0 C8                  A   799    				ret z
000FC1 CD C1 52 00         A   800    				call fs_hl_to_alt_filename
000FC5 18 09               A   801    				jr os_atfrl
                           A   802    	
                           A   803    	
                           A   804    	
                           A   805    		
000FC7                     A   806    os_args_to_filename
                           A   807    
000FC7 CD 16 10 00         A   808    				call os_atfn_pre				000FCB C8                  A   809    				ret z
000FCC CD C7 52 00         A   810    				call fs_hl_to_filename	
                           A   811    
000FD0 7E                  A   812    os_atfrl		ld a,(hl)						000FD1 B7                  A   813    				or a							000FD2 28 0B               A   814    				jr z,os_cfne
000FD4 FE20                A   815    				cp 32
000FD6 28 07               A   816    				jr z,os_cfne
000FD8 FE2F                A   817    				cp 02fh
000FDA 28 03               A   818    				jr z,os_cfne
000FDC 23                  A   819    				inc hl
000FDD 18 F1               A   820    				jr os_atfrl	
000FDF 22 0A 62 00         A   821    os_cfne			ld (os_args_loc),hl				000FE3 79                  A   822    				ld a,c			
000FE4 B7                  A   823    				or a							000FE5 C9                  A   824    				ret
                           A   825    
                           A   826    
                           A   827    
                           A   828    
000FE6                     A   829    os_args_to_fn_append_ezp
                           A   830    
                           A   831    	
000FE6 CD 16 10 00         A   832    				call os_atfn_pre				000FEA C8                  A   833    				ret z
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  19


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000FEB 11 E5 60 00         A   834    				ld de,temp_string
000FEF 7E                  A   835    ccmdtlp			ld a,(hl)						000FF0 B7                  A   836    				or a
000FF1 28 0D               A   837    				jr z,goteocmd
000FF3 FE20                A   838    				cp ' '
000FF5 28 09               A   839    				jr z,goteocmd
000FF7 FE2E                A   840    				cp '.'
000FF9 28 05               A   841    				jr z,goteocmd
000FFB 12                  A   842    				ld (de),a
000FFC 13                  A   843    				inc de
000FFD 23                  A   844    				inc hl
000FFE 18 EF               A   845    				jr ccmdtlp
                           A   846    	
001000 E5                  A   847    goteocmd		push hl
001001 21 B9 56 00         A   848    				ld hl,ezp_extension_txt
001005 01050000            A   849    				ld bc,5
001009 EDB0                A   850    				ldir 
00100B 21 E5 60 00         A   851    				ld hl,temp_string
00100F CD C7 52 00         A   852    				call fs_hl_to_filename
001013 E1                  A   853    				pop hl
001014 18 BA               A   854    				jr os_atfrl
                           A   855    	
                           A   856    
                           A   857    
                           A   858    
001016                     A   859    os_atfn_pre
                           A   860    
001016 2A 0A 62 00         A   861    				ld hl,(os_args_loc)				00101A CD B2 0F 00         A   862    				call os_scan_for_non_space
00101E B7                  A   863    				or a
00101F C8                  A   864    				ret z
001020 7E                  A   865    				ld a,(hl)
001021 FE2F                A   866    				cp 02fh							001023 20 01               A   867    				jr nz,notfsl1
001025 23                  A   868    				inc hl
001026 AF                  A   869    notfsl1			xor a
001027 3C                  A   870    				inc a
001028 C9                  A   871    				ret
                           A   872    
                           A   873    
                           A   874    ;--------- Number <-> String functions --------
                           A   875    
                           A   876    
001029                     A   877    os_clear_output_line
                           A   878    
001029 C5                  A   879    				push bc
00102A E5                  A   880    				push hl			
00102B 21 B8 61 00         A   881    				ld hl,output_line
00102F 01500000            A   882    				ld bc,max_buffer_chars
001033 3E20                A   883    				ld a,32
001035 CD 56 15 00         A   884    				call os_bchl_memfill
001039 E1                  A   885    				pop hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  20


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00103A C1                  A   886    				pop bc
00103B C9                  A   887    				ret
                           A   888    	
                           A   889    	
                           A   890    	
00103C                     A   891    os_skip_leading_ascii_zeros
                           A   892    
00103C 7E                  A   893    slazlp			ld a,(hl)						00103D FE30                A   894    				cp '0'							00103F C0                  A   895    				ret nz
001040 23                  A   896    				inc hl
001041 10 F9               A   897    				djnz slazlp
001043 C9                  A   898    				ret
                           A   899    	
                           A   900    
                           A   901    
001044                     A   902    os_leading_ascii_zeros_to_spaces
                           A   903    
001044 E5                  A   904    				push hl
001045 7E                  A   905    clazlp			ld a,(hl)						001046 FE30                A   906    				cp '0'							001048 20 05               A   907    				jr nz,claze	
00104A 3620                A   908    				ld (hl),' '
00104C 23                  A   909    				inc hl
00104D 10 F6               A   910    				djnz clazlp
00104F E1                  A   911    claze			pop hl
001050 C9                  A   912    				ret
                           A   913    	
                           A   914    
                           A   915    
                           A   916    		
001051                     A   917    n_hexbytes_to_ascii
                           A   918    
001051 1A                  A   919    				ld a,(de)						001052 CD 5F 10 00         A   920    				call hexbyte_to_ascii			001056 1B                  A   921    				dec de
001057 10 F8               A   922    				djnz n_hexbytes_to_ascii
001059 C9                  A   923    				ret
                           A   924    			
                           A   925    			
                           A   926    
00105A                     A   927    ext_hexbyte_to_ascii
                           A   928    
00105A CC 7D 15 00         A   929    				call z,mbase_hl
00105E 7B                  A   930    				ld a,e
                           A   931    
00105F                     A   932    hexbyte_to_ascii
                           A   933    
00105F C5                  A   934    				push bc
001060 47                  A   935    				ld b,a							001061 CB3F                A   936    				srl a							001063 CB3F                A   937    				srl a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  21


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001065 CB3F                A   938    				srl a
001067 CB3F                A   939    				srl a
001069 CD 7B 10 00         A   940    				call hxdigconv
00106D 77                  A   941    				ld (hl),a
00106E 23                  A   942    				inc hl
00106F 78                  A   943    				ld a,b
001070 E60F                A   944    				and 0fh
001072 CD 7B 10 00         A   945    				call hxdigconv
001076 77                  A   946    				ld (hl),a
001077 23                  A   947    				inc hl
001078 C1                  A   948    				pop bc
001079 AF                  A   949    				xor a							00107A C9                  A   950    				ret
                           A   951    				
00107B C630                A   952    hxdigconv		add a,030h
00107D FE3A                A   953    				cp 03ah
00107F 38 02               A   954    				jr c,hxdone
001081 C607                A   955    				add a,7
001083 C9                  A   956    hxdone			ret
                           A   957    
                           A   958    
                           A   959    
                           A   960    
001084                     A   961    hexword_to_ascii	
                           A   962    
001084 7A                  A   963    				ld a,d							001085 CD 5F 10 00         A   964    				call hexbyte_to_ascii
001089 7B                  A   965    				ld a,e
00108A CD 5F 10 00         A   966    				call hexbyte_to_ascii
00108E C9                  A   967    				ret
                           A   968    	
                           A   969    
                           A   970    
                           A   971    
00108F                     A   972    ext_ascii_to_hexword
                           A   973    		
00108F CC 7D 15 00         A   974    				call z,mbase_hl
                           A   975    
001093                     A   976    ascii_to_hexword
                           A   977    	
001093 CD B2 0F 00         A   978    				call os_scan_for_non_space		001097 B7                  A   979    				or a
001098 20 04               A   980    				jr nz,ascii_to_hex_no_scan
00109A 3E81                A   981    				ld a,081h						00109C B7                  A   982    				or a
00109D C9                  A   983    				ret	
                           A   984    
                           A   985    	
00109E                     A   986    ascii_to_hex_no_scan
                           A   987    
00109E DDE5                A   988    				push ix
0010A0 C5                  A   989    				push bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  22


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0010A1 DD210000 00         A   990    				ld ix,0
0010A6 0606                A   991    				ld b,6							0010A8 CD D4 10 00         A   992    athlp			call ascii_to_hex_digit
0010AC FEF0                A   993    				cp 0f0h							0010AE 28 17               A   994    				jr z,athend
0010B0 FED0                A   995    				cp 0d0h
0010B2 28 13               A   996    				jr z,athend						0010B4 FE10                A   997    				cp 16
0010B6 30 17               A   998    				jr nc,badhex					0010B8 DD29                A   999    				add ix,ix						0010BA DD29                A  1000    				add ix,ix
0010BC DD29                A  1001    				add ix,ix
0010BE DD29                A  1002    				add ix,ix
0010C0 DDB5                A  1003    				or a,ixl
0010C2 DD6F                A  1004    				ld ixl,a
0010C4 23                  A  1005    				inc hl
0010C5 10 E1               A  1006    				djnz athlp
0010C7 DDE5                A  1007    athend			push ix
0010C9 D1                  A  1008    				pop de
0010CA AF                  A  1009    				xor a
0010CB C1                  A  1010    ath_quit		pop bc
0010CC DDE1                A  1011    				pop ix							0010CE C9                  A  1012    				ret
                           A  1013    		
0010CF 3E82                A  1014    badhex			ld a,82h						0010D1 B7                  A  1015    				or a
0010D2 18 F7               A  1016    				jr ath_quit
                           A  1017    				
                           A  1018    	
                           A  1019    		
0010D4                     A  1020    ascii_to_hex_digit
                           A  1021    
0010D4 7E                  A  1022    				ld a,(hl)						0010D5 FE61                A  1023    				cp 061h
0010D7 38 02               A  1024    				jr c,hc_uppercase
0010D9 D620                A  1025    				sub 020h						0010DB D63A                A  1026    hc_uppercase	sub 03ah						0010DD 38 02               A  1027    				jr c,zeronine
0010DF C6F9                A  1028    				add a,0f9h
0010E1 C60A                A  1029    zeronine		add a,0ah
0010E3 C9                  A  1030    				ret
                           A  1031    
                           A  1032    
                           A  1033    ;--------- Text Input / Non-numeric string func
                           A  1034    
                           A  1035    ; Waits for user to enter a string of character
                           A  1036    ; Before calling, set:  HL = destination of str
                           A  1037    ;                        E = max number of char
                           A  1038    ; Returns:   A  = number of characters in enter
                           A  1039    
                           A  1040    
0010E4                     A  1041    ext_user_input
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  23


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0010E4 CC 7D 15 00         A  1042    				call z,mbase_hl
                           A  1043    				
0010E8                     A  1044    os_user_input
0010E8 AF                  A  1045    				xor a
0010E9 32 C6 5E 00         A  1046    				ld (ui_index),a
0010ED 22 C8 5E 00         A  1047    				ld (ui_string_addr),hl
0010F1 7B                  A  1048    				ld a,e
0010F2 32 C7 5E 00         A  1049    				ld (ui_maxchars),a
                           A  1050    				
0010F6 3A 7D 62 00         A  1051    				ld a,(insert_mode)
0010FA 32 65 61 00         A  1052    				ld (ui_im_cache),a
0010FE AF                  A  1053    				xor a
0010FF 32 7D 62 00         A  1054    				ld (insert_mode),a				                           A  1055    				
001103 CD 9D 3F 00         A  1056    ui_loop			call hwsc_draw_cursor			001107 CD 58 44 00         A  1057    				call os_wait_key_press			00110B 32 7E 62 00         A  1058    				ld (current_scancode),a
00110F 78                  A  1059    				ld a,b
001110 32 7F 62 00         A  1060    				ld (current_asciicode),a		001114 CD 8A 3F 00         A  1061    				call hwsc_remove_cursor
                           A  1062    	
001118 3A 7E 62 00         A  1063    				ld a,(current_scancode)
00111C FE66                A  1064    				cp 066h							00111E 20 1F               A  1065    				jr nz,os_nuibs
001120 3A C6 5E 00         A  1066    				ld a,(ui_index)
001124 B7                  A  1067    				or a
001125 28 DC               A  1068    				jr z,ui_loop					001127 21 49 61 00         A  1069    				ld hl,cursor_x					00112B 35                  A  1070    				dec (hl)						00112C 46                  A  1071    os_uixok		ld b,(hl)		
00112D 3A 48 61 00         A  1072    				ld a,(cursor_y)
001131 4F                  A  1073    				ld c,a
001132 3E20                A  1074    				ld a,32
001134 CD 5D 3E 00         A  1075    				call hwsc_plot_char
001138 21 C6 5E 00         A  1076    				ld hl,ui_index
00113C 35                  A  1077    				dec (hl)						00113D 18 C4               A  1078    				jr ui_loop
                           A  1079    
00113F FE76                A  1080    os_nuibs		cp 076h							001141 28 6B               A  1081    				jr z,ui_aborted
001143 FE5A                A  1082    				cp 05ah							001145 28 46               A  1083    				jr z,ui_enter_pressed
                           A  1084    	
001147 3A C6 5E 00         A  1085    				ld a,(ui_index)					00114B 21 C7 5E 00         A  1086    				ld hl,ui_maxchars
00114F BE                  A  1087    				cp (hl)
001150 28 B1               A  1088    				jr z,ui_loop	
                           A  1089    
001152 3A 7F 62 00         A  1090    				ld a,(current_asciicode)		001156 FE20                A  1091    				cp 32							001158 38 A9               A  1092    				jr c,ui_loop					                           A  1093    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  24


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00115A 57                  A  1094    ui_gtcha		ld d,a
00115B 2A C8 5E 00         A  1095    				ld hl,(ui_string_addr)
00115F 3A C6 5E 00         A  1096    				ld a,(ui_index)
001163 01000000            A  1097    				ld bc,0
001167 4F                  A  1098    				ld c,a
001168 09                  A  1099    				add hl,bc
001169 72                  A  1100    				ld (hl),d						00116A 3C                  A  1101    				inc a
00116B 32 C6 5E 00         A  1102    				ld (ui_index),a					                           A  1103    				
00116F ED4B 48 61 00       A  1104    				ld bc,(cursor_y)				001174 7A                  A  1105    				ld a,d
001175 CD 5D 3E 00         A  1106    				call hwsc_plot_char		
001179 21 49 61 00         A  1107    				ld hl,cursor_x					00117D 34                  A  1108    				inc (hl)
00117E 3A F6 5E 00         A  1109    				ld a,(window_columns)			001182 BE                  A  1110    				cp (hl)
001183 C2 03 11 00         A  1111    				jp nz,ui_loop
001187 3600                A  1112    				ld (hl),0
001189 C3 03 11 00         A  1113    				jp ui_loop
                           A  1114    
00118D                     A  1115    ui_enter_pressed
                           A  1116    				
00118D 3A 65 61 00         A  1117    				ld a,(ui_im_cache)				001191 32 7D 62 00         A  1118    				ld (insert_mode),a
001195 3A C6 5E 00         A  1119    				ld a,(ui_index)					001199 B7                  A  1120    				or a
00119A 20 04               A  1121    				jr nz,ui_data
00119C 3E81                A  1122    				ld a,081h						00119E B7                  A  1123    				or a
00119F C9                  A  1124    				ret
0011A0 2A C8 5E 00         A  1125    ui_data			ld hl,(ui_string_addr)
0011A4 11000000            A  1126    				ld de,0
0011A8 5F                  A  1127    				ld e,a
0011A9 19                  A  1128    				add hl,de
0011AA 3600                A  1129    				ld (hl),0						0011AC BF                  A  1130    				cp a							0011AD C9                  A  1131    				ret
                           A  1132    
0011AE 3A 65 61 00         A  1133    ui_aborted		ld a,(ui_im_cache)				0011B2 32 7D 62 00         A  1134    				ld (insert_mode),a
0011B6 3E80                A  1135    				ld a,080h						0011B8 B7                  A  1136    				or a							0011B9 C9                  A  1137    				ret
                           A  1138    		
                           A  1139    ;----------------------------------------------
                           A  1140    	
0011BA                     A  1141    os_count_lines
                           A  1142    
0011BA E5                  A  1143    				push hl							0011BB 0679                A  1144    				ld b,'y'						0011BD 21 4D 61 00         A  1145    				ld hl,os_linecount			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  25


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0011C1 34                  A  1146    				inc (hl)						0011C2 3A F3 5E 00         A  1147    				ld a,(window_rows)
0011C6 D604                A  1148    				sub 4
0011C8 BE                  A  1149    				cp (hl)
0011C9 20 0E               A  1150    				jr nz,os_nntpo
0011CB 3600                A  1151    				ld (hl),0
0011CD 21 BE 56 00         A  1152    				ld hl,os_more_txt
0011D1 CD 1C 0F 00         A  1153    				call os_print_string
0011D5 CD 58 44 00         A  1154    				call os_wait_key_press	
0011D9 E1                  A  1155    os_nntpo		pop hl
0011DA C9                  A  1156    				ret
                           A  1157    
                           A  1158    ;----------------------------------------------
                           A  1159    
0011DB                     A  1160    ext_compare_strings
                           A  1161    	
0011DB CC 7D 15 00         A  1162    				call z,mbase_hl
0011DF CC 8E 15 00         A  1163    				call z,mbase_de
                           A  1164    				
0011E3                     A  1165    os_compare_strings
                           A  1166    
                           A  1167    ; both strings at HL/DE should be zero terminat
                           A  1168    ; compare will fail if string lengths are diffe
                           A  1169    ; unless count (B) is reached first
                           A  1170    ; Case is ignored
                           A  1171    ; Zero flag set on return if same
                           A  1172    
0011E3 E5                  A  1173    				push hl							0011E4 D5                  A  1174    				push de							0011E5 1A                  A  1175    ocslp			ld a,(de)						0011E6 B7                  A  1176    				or a
0011E7 28 0C               A  1177    				jr z,ocsbt
0011E9 CD 26 12 00         A  1178    				call case_insensitive_compare	0011ED 20 0E               A  1179    				jr nz,ocs_diff
0011EF 13                  A  1180    				inc de
0011F0 23                  A  1181    				inc hl
0011F1 10 F2               A  1182    				djnz ocslp
0011F3 18 04               A  1183    				jr ocs_same
0011F5 1A                  A  1184    ocsbt			ld a,(de)						0011F6 B6                  A  1185    				or (hl)
0011F7 20 04               A  1186    				jr nz,ocs_diff
0011F9 D1                  A  1187    ocs_same		pop de
0011FA E1                  A  1188    				pop hl
0011FB AF                  A  1189    				xor a							0011FC C9                  A  1190    				ret
0011FD D1                  A  1191    ocs_diff		pop de
0011FE E1                  A  1192    				pop hl
0011FF AF                  A  1193    				xor a							001200 3C                  A  1194    				inc a
001201 C9                  A  1195    				ret
                           A  1196    
                           A  1197    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  26


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1198    ;----------------------------------------------
                           A  1199    
001202                     A  1200    os_copy_ascii_run
                           A  1201    
                           A  1202    ;INPUT HL = source ($00 or $20 terminates)
                           A  1203    ;      DE = dest
                           A  1204    ;       b = max chars
                           A  1205    
                           A  1206    ;OUTPUT HL/DE = end of runs
                           A  1207    ;           c = char count
                           A  1208    	
001202 0E00                A  1209    				ld c,0
001204 7E                  A  1210    cpyar_lp		ld a,(hl)
001205 B7                  A  1211    				or a
001206 C8                  A  1212    				ret z
001207 FE20                A  1213    				cp 32
001209 C8                  A  1214    				ret z
00120A 12                  A  1215    				ld (de),a
00120B 23                  A  1216    				inc hl
00120C 13                  A  1217    				inc de
00120D 0C                  A  1218    				inc c
00120E 10 F4               A  1219    				djnz cpyar_lp
001210 C9                  A  1220    				ret
                           A  1221    
                           A  1222    ;----------------------------------------------
                           A  1223    
001211                     A  1224    uppercasify_string
                           A  1225    
                           A  1226    ; Set HL to string location ($00 quits)
                           A  1227    ; Set B to max number of chars
                           A  1228    
001211 7E                  A  1229    				ld a,(hl)
001212 B7                  A  1230    				or a
001213 C8                  A  1231    				ret z
001214 CD 1D 12 00         A  1232    				call os_uppercasify
001218 77                  A  1233    				ld (hl),a
001219 23                  A  1234    				inc hl
00121A 10 F5               A  1235    				djnz uppercasify_string	
00121C C9                  A  1236    				ret
                           A  1237    	
                           A  1238    
00121D                     A  1239    os_uppercasify
                           A  1240    
                           A  1241    ; INPUT/OUTPUT A = ascii char to make uppercase
                           A  1242    
00121D FE61                A  1243    				cp 061h			
00121F D8                  A  1244    				ret c
001220 FE7B                A  1245    				cp 07bh
001222 D0                  A  1246    				ret nc
001223 D620                A  1247    				sub 020h				
001225 C9                  A  1248    				ret
                           A  1249    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  27


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1250    ;----------------------------------------------
                           A  1251    
001226                     A  1252    case_insensitive_compare
                           A  1253    
                           A  1254    ; compares A with (HL) disregarding the case of
                           A  1255    ; Zero flag set if the characters are the same
                           A  1256    ; all registers are preserved.
                           A  1257    
001226 C5                  A  1258    				push bc					
001227 4F                  A  1259    				ld c,a
                           A  1260    
001228 CD 1D 12 00         A  1261    				call os_uppercasify				00122C 47                  A  1262    				ld b,a
00122D 7E                  A  1263    				ld a,(hl)
00122E CD 1D 12 00         A  1264    				call os_uppercasify
001232 B8                  A  1265    				cp b
                           A  1266    
001233 79                  A  1267    				ld a,c
001234 C1                  A  1268    				pop bc
001235 C9                  A  1269    				ret
                           A  1270    
                           A  1271    ;----------------------------------------------
                           A  1272    
001236                     A  1273    os_decimal_add
                           A  1274    
                           A  1275    ;INPUT HL = source LSB, DE = dest LSB, b = numb
                           A  1276    
001236 C5                  A  1277    				push bc
001237 0E00                A  1278    				ld c,0
001239 1A                  A  1279    decdlp			ld a,(de)
00123A 86                  A  1280    				add a,(hl)
00123B 81                  A  1281    				add a,c
00123C FE0A                A  1282    				cp 10
00123E 38 0B               A  1283    				jr c,daddnc
001240 D60A                A  1284    				sub 10
001242 0E01                A  1285    				ld c,1
001244 12                  A  1286    decnclp			ld (de),a
001245 23                  A  1287    				inc hl
001246 13                  A  1288    				inc de
001247 10 F0               A  1289    				djnz decdlp
001249 C1                  A  1290    				pop bc
00124A C9                  A  1291    				ret
00124B 0E00                A  1292    daddnc			ld c,0
00124D 18 F5               A  1293    				jr decnclp
                           A  1294    	
                           A  1295    ;----------------------------------------------
                           A  1296    
00124F                     A  1297    os_hex_to_decimal
                           A  1298    
                           A  1299    ; INPUT xDE hex longword
                           A  1300    ; OUTPUT xHL = decimal LSB address (8 digits) 
                           A  1301    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  28


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
       00006896            A  1302    hex_to_convert		equ scratch_pad
       00006899            A  1303    decimal_digits		equ scratch_pad+3
       000068A1            A  1304    decimal_add_digits	equ scratch_pad+3+8
                           A  1305    
00124F ED53 96 68 00       A  1306    				ld (hex_to_convert),de
                           A  1307    		
001254 21 A1 68 00         A  1308    				ld hl,decimal_add_digits
001258 E5                  A  1309    				push hl
001259 11 99 68 00         A  1310    				ld de,decimal_digits
00125D AF                  A  1311    				xor a
00125E 0608                A  1312    				ld b,8
001260 12                  A  1313    setupdec		ld (de),a
001261 77                  A  1314    				ld (hl),a
001262 23                  A  1315    				inc hl
001263 13                  A  1316    				inc de
001264 10 FA               A  1317    				djnz setupdec
001266 E1                  A  1318    				pop hl
001267 3601                A  1319    				ld (hl),1
                           A  1320    	
001269 21 96 68 00         A  1321    				ld hl,hex_to_convert
00126D 0603                A  1322    				ld b,3
00126F C5                  A  1323    decconvlp		push bc
001270 7E                  A  1324    				ld a,(hl)
001271 CD 8F 12 00         A  1325    				call decadder
001275 CD A8 12 00         A  1326    				call decaddx16
001279 7E                  A  1327    				ld a,(hl)
00127A 0F                  A  1328    				rrca
00127B 0F                  A  1329    				rrca
00127C 0F                  A  1330    				rrca
00127D 0F                  A  1331    				rrca
00127E CD 8F 12 00         A  1332    				call decadder
001282 CD A8 12 00         A  1333    				call decaddx16
001286 C1                  A  1334    				pop bc
001287 23                  A  1335    				inc hl
001288 10 E5               A  1336    				djnz decconvlp
00128A 21 99 68 00         A  1337    				ld hl,decimal_digits
00128E C9                  A  1338    				ret
                           A  1339    
                           A  1340    
                           A  1341    
00128F E60F                A  1342    decadder		and 15
001291 C8                  A  1343    				ret z
001292 47                  A  1344    				ld b,a
001293 E5                  A  1345    				push hl
001294 C5                  A  1346    daddlp			push bc
001295 11 99 68 00         A  1347    				ld de,decimal_digits
001299 21 A1 68 00         A  1348    				ld hl,decimal_add_digits
00129D 0608                A  1349    				ld b,8
00129F CD 36 12 00         A  1350    				call os_decimal_add
0012A3 C1                  A  1351    				pop bc
0012A4 10 EE               A  1352    				djnz daddlp	
0012A6 E1                  A  1353    				pop hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  29


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0012A7 C9                  A  1354    				ret
                           A  1355    			
                           A  1356    				
0012A8 E5                  A  1357    decaddx16		push hl
0012A9 0604                A  1358    				ld b,4							0012AB C5                  A  1359    x16loop			push bc
0012AC 11 A1 68 00         A  1360    				ld de,decimal_add_digits
0012B0 21 A1 68 00         A  1361    				ld hl,decimal_add_digits
0012B4 0608                A  1362    				ld b,8
0012B6 CD 36 12 00         A  1363    				call os_decimal_add
0012BA C1                  A  1364    				pop bc
0012BB 10 EE               A  1365    				djnz x16loop	
0012BD E1                  A  1366    				pop hl
0012BE C9                  A  1367    				ret
                           A  1368    	
                           A  1369    	
                           A  1370    ;----------------------------------------------
                           A  1371    
0012BF                     A  1372    os_show_decimal
                           A  1373    
0012BF 11 B8 61 00         A  1374    				ld de,output_line				0012C3 01090000            A  1375    				ld bc,9
0012C7 09                  A  1376    				add hl,bc
0012C8 060A                A  1377    				ld b,10
0012CA 7E                  A  1378    shdeclp			ld a,(hl)
0012CB B7                  A  1379    				or a
0012CC 28 04               A  1380    				jr z,dnodigit
0012CE C630                A  1381    				add a,030h
0012D0 12                  A  1382    				ld (de),a
0012D1 13                  A  1383    				inc de
0012D2 2B                  A  1384    dnodigit		dec hl
0012D3 10 F5               A  1385    				djnz shdeclp
0012D5 AF                  A  1386    				xor a
0012D6 12                  A  1387    				ld (de),a
0012D7 CD 1F 13 00         A  1388    				call os_print_output_line
0012DB C9                  A  1389    				ret
                           A  1390    				
                           A  1391    ;----------------------------------------------
                           A  1392    		
0012DC                     A  1393    os_copy_to_output_line
                           A  1394    	
0012DC D5                  A  1395    				push de
0012DD C5                  A  1396    				push bc
0012DE 11 B8 61 00         A  1397    				ld de,output_line				0012E2 01510000            A  1398    				ld bc,max_buffer_chars+1		0012E6 EDA0                A  1399    os_cloll		ldi
0012E8 7E                  A  1400    				ld a,(hl)
0012E9 B7                  A  1401    				or a
0012EA 28 04               A  1402    				jr z,os_clold
0012EC 78                  A  1403    				ld a,b
0012ED B1                  A  1404    				or c
0012EE 20 F6               A  1405    				jr nz,os_cloll
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  30


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0012F0 12                  A  1406    os_clold		ld (de),a
0012F1 C1                  A  1407    				pop bc
0012F2 D1                  A  1408    				pop de
0012F3 C9                  A  1409    				ret
                           A  1410    
                           A  1411    
                           A  1412    ;----------------------------------------------
                           A  1413    
0012F4                     A  1414    os_show_hex_address
                           A  1415    
0012F4 E5                  A  1416    				push hl							0012F5 21 B8 61 00         A  1417    				ld hl,output_line
0012F9 ED53 5A 61 00       A  1418    				ld (hex_address),de
0012FE 3A 5C 61 00         A  1419    				ld a,(hex_address+2)
001302 CD 5F 10 00         A  1420    				call hexbyte_to_ascii
001306 18 10               A  1421    				jr shw_nt
                           A  1422    				
                           A  1423    
001308                     A  1424    os_show_hex_byte
                           A  1425    
001308 E5                  A  1426    				push hl							001309 21 B8 61 00         A  1427    				ld hl,output_line
00130D CD 5F 10 00         A  1428    				call hexbyte_to_ascii
001311 18 09               A  1429    				jr shb_nt
                           A  1430    
                           A  1431    
                           A  1432    
001313                     A  1433    os_show_hex_word
                           A  1434    
001313 E5                  A  1435    				push hl							001314 21 B8 61 00         A  1436    				ld hl,output_line
001318 CD 84 10 00         A  1437    shw_nt			call hexword_to_ascii
00131C 3600                A  1438    shb_nt			ld (hl),0
00131E E1                  A  1439    				pop hl
                           A  1440    
                           A  1441    	
                           A  1442    
00131F                     A  1443    os_print_output_line
                           A  1444    
00131F E5                  A  1445    				push hl
001320 21 B8 61 00         A  1446    				ld hl,output_line
001324 CD 1C 0F 00         A  1447    cproline		call os_print_string
001328 E1                  A  1448    				pop hl
001329 C9                  A  1449    				ret
                           A  1450    
                           A  1451    
                           A  1452    
00132A                     A  1453    os_print_output_line_skip_zeroes
                           A  1454    
00132A E5                  A  1455    				push hl
00132B 21 B8 61 00         A  1456    				ld hl,output_line
00132F CD 3C 10 00         A  1457    				call os_skip_leading_ascii_zero
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  31


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001333 18 EF               A  1458    				jr cproline
                           A  1459    				
                           A  1460    		
                           A  1461    ;----------------------------------------------
                           A  1462    
001335                     A  1463    os_store_CPU_regs
                           A  1464    
001335 F3                  A  1465    				di								                           A  1466    
001336 33                  A  1467    				inc sp							001337 33                  A  1468    				inc sp
001338 33                  A  1469    				inc sp
001339 ED73 D9 60 00       A  1470    				ld (store_spl),sp
00133E 3B                  A  1471    				dec sp							00133F 3B                  A  1472    				dec sp
001340 3B                  A  1473    				dec sp
                           A  1474    				
001341 F5                  A  1475    				push af
001342 32 BC 60 00         A  1476    				ld (store_a1),a					001346 08                  A  1477    				ex af,af'
001347 32 C6 60 00         A  1478    				ld (store_a2),a
00134B 08                  A  1479    				ex af,af'
00134C ED43 BD 60 00       A  1480    				ld (store_bc1),bc		
001351 ED53 C0 60 00       A  1481    				ld (store_de1),de
001356 22 C3 60 00         A  1482    				ld (store_hl1),hl
00135A D9                  A  1483    				exx
00135B ED43 C7 60 00       A  1484    				ld (store_bc2),bc
001360 ED53 CA 60 00       A  1485    				ld (store_de2),de
001365 22 CD 60 00         A  1486    				ld (store_hl2),hl
001369 D9                  A  1487    				exx
00136A DD22 D0 60 00       A  1488    				ld (store_ix),ix
00136F FD22 D3 60 00       A  1489    				ld (store_iy),iy
                           A  1490    				
001374 ED6E                A  1491    			    ld a,MB
001376 32 DE 60 00         A  1492    				ld (store_mbase),a
                           A  1493    								
00137A C5                  A  1494    				push bc
00137B 0600                A  1495    				ld b,0
00137D 20 02               A  1496    				jr nz,zfstzero					00137F CBF0                A  1497    				set 6,b
                           A  1498    
001381 30 02               A  1499    zfstzero		jr nc,cfstzero					001383 CBC0                A  1500    				set 0,b
                           A  1501    
001385 F2 8B 13 00         A  1502    cfstzero		jp p,sfstzero					001389 CBF8                A  1503    				set 7,b
                           A  1504    
00138B EA 91 13 00         A  1505    sfstzero		jp pe,pfstzero					00138F CBD0                A  1506    				set 2,b
                           A  1507    
001391 ED57                A  1508    pfstzero		ld a,i			
001393 EA 99 13 00         A  1509    				jp pe,ifstzero					Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  32


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001397 CBE0                A  1510    				set 4,b
                           A  1511    
001399 78                  A  1512    ifstzero		ld a,b
00139A 32 DF 60 00         A  1513    				ld (store_f),a
                           A  1514    				
00139E 3E00                A  1515    				ld a,os_location/65536			0013A0 ED6D                A  1516    				ld MB,a							0013A2 40ED73 DC 60        A  1517    				ld.sis (store_sps),sp
0013A7 3A DE 60 00         A  1518    				ld a,(store_mbase)				0013AB ED6D                A  1519    				ld MB,a
                           A  1520    				
0013AD C1                  A  1521    				pop bc
0013AE F1                  A  1522    				pop af
0013AF FB                  A  1523    				ei
0013B0 C9                  A  1524    				ret
                           A  1525    
                           A  1526    
                           A  1527    
0013B1                     A  1528    os_dont_store_registers
                           A  1529    
0013B1 AF                  A  1530    				xor a
0013B2 32 E1 60 00         A  1531    				ld (store_registers),a			0013B6 C9                  A  1532    				ret
                           A  1533    	
                           A  1534    	
                           A  1535    ;----------------------------------------------
                           A  1536    
0013B7                     A  1537    os_new_line_cond
                           A  1538    
0013B7 CD F8 19 00         A  1539    				call test_quiet_mode
0013BB C0                  A  1540    				ret nz
                           A  1541    
                           A  1542    	
0013BC                     A  1543    os_new_line
                           A  1544    
0013BC E5                  A  1545    				push hl
0013BD 21 D6 56 00         A  1546    				ld hl,crlfx2_txt+1
0013C1 CD 1C 0F 00         A  1547    				call os_print_string
0013C5 E1                  A  1548    				pop hl
0013C6 C9                  A  1549    				ret
                           A  1550    				
                           A  1551    ;----------------------------------------------
                           A  1552    
0013C7                     A  1553    os_set_cursor_position
                           A  1554    				
                           A  1555    												0013C7 3A F3 5E 00         A  1556    				ld a,(window_rows)				0013CB 3D                  A  1557    				dec a							0013CC B9                  A  1558    				cp c
0013CD 38 14               A  1559    				jr c,badpos
0013CF 79                  A  1560    				ld a,c
0013D0 32 48 61 00         A  1561    				ld (cursor_y),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  33


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1562    				
0013D4 3A F6 5E 00         A  1563    				ld a,(window_columns)
0013D8 3D                  A  1564    				dec a
0013D9 B8                  A  1565    				cp b
0013DA 38 07               A  1566    				jr c,badpos
0013DC 78                  A  1567    				ld a,b
0013DD 32 49 61 00         A  1568    				ld (cursor_x),a
0013E1 AF                  A  1569    				xor a
0013E2 C9                  A  1570    				ret				
                           A  1571    
0013E3 3E82                A  1572    badpos			ld a,82h
0013E5 B7                  A  1573    				or a
0013E6 C9                  A  1574    				ret
                           A  1575    
                           A  1576    
                           A  1577    					
                           A  1578    	
                           A  1579    	
0013E7                     A  1580    os_get_cursor_position
                           A  1581    
0013E7 ED4B 48 61 00       A  1582    				ld bc,(cursor_pos)				0013EC BF                  A  1583    				cp a							0013ED C9                  A  1584    				ret
                           A  1585    
                           A  1586    
                           A  1587    ;----------------------------------------------
                           A  1588    
0013EE                     A  1589    os_show_packed_text_cond
                           A  1590    
0013EE CD F8 19 00         A  1591    				call test_quiet_mode
0013F2 C0                  A  1592    				ret nz
                           A  1593    
                           A  1594    	
0013F3                     A  1595    os_show_packed_text
                           A  1596    
                           A  1597    ; Construct sentence from internal dictionary u
                           A  1598    	
0013F3 C5                  A  1599    				push bc
0013F4 D5                  A  1600    				push de
0013F5 DDE5                A  1601    				push ix
0013F7 DD21 B8 61 00       A  1602    				ld ix,output_line
0013FC 7E                  A  1603    readpind		ld a,(hl)
0013FD B7                  A  1604    				or a
0013FE 20 10               A  1605    				jr nz,getword					001400 DD2B                A  1606    				dec ix							001402 DD7700              A  1607    				ld (ix),a						                           A  1608    			
001405 E5                  A  1609    				push hl
001406 CD 1F 13 00         A  1610    				call os_print_output_line
00140A E1                  A  1611    				pop hl
                           A  1612    			
00140B DDE1                A  1613    				pop ix
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  34


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00140D D1                  A  1614    				pop de
00140E C1                  A  1615    				pop bc
00140F C9                  A  1616    				ret
                           A  1617    				
001410 11 EB 56 00         A  1618    getword			ld de,dictionary-1
001414 0E00                A  1619    				ld c,0
001416 13                  A  1620    dictloop		inc de
001417 1A                  A  1621    				ld a,(de)
001418 B7                  A  1622    				or a							001419 28 04               A  1623    				jr z,faword
00141B CB7F                A  1624    				bit 7,a							00141D 28 F7               A  1625    				jr z,dictloop	
                           A  1626    			
00141F 0C                  A  1627    faword			inc c							001420 79                  A  1628    				ld a,c
001421 BE                  A  1629    				cp (hl)
001422 20 F2               A  1630    				jr nz,dictloop
001424 13                  A  1631    copytol			inc de							001425 1A                  A  1632    				ld a,(de)
001426 B7                  A  1633    				or a
001427 28 0B               A  1634    				jr z,eoword						001429 CB7F                A  1635    				bit 7,a
00142B 20 07               A  1636    				jr nz,eoword
00142D DD7700              A  1637    				ld (ix),a						001430 DD23                A  1638    				inc ix
001432 18 F0               A  1639    				jr copytol
001434 DD360020            A  1640    eoword			ld (ix),32						001438 DD23                A  1641    				inc ix
00143A 23                  A  1642    				inc hl
00143B 18 BF               A  1643    				jr readpind
                           A  1644    
                           A  1645    
                           A  1646    		
                           A  1647    ;--------- Mouse functions --------------------
                           A  1648    
00143D                     A  1649    os_set_mouse_window
                           A  1650    
                           A  1651    ; Set: HL/DE = window size mouse pointer is to 
                           A  1652    	
00143D 22 90 62 00         A  1653    				ld (mouse_window_size_x),hl	 
001441 ED53 93 62 00       A  1654    				ld (mouse_window_size_y),de
001446 21000000            A  1655    				ld hl,0
00144A 22 96 62 00         A  1656    				ld (mouse_abs_x),hl
00144E 22 99 62 00         A  1657    				ld (mouse_abs_y),hl
001452 3E01                A  1658    				ld a,1
001454 32 A8 62 00         A  1659    				ld (mouse_new_window),a
001458 AF                  A  1660    				xor a
001459 C9                  A  1661    				ret
                           A  1662    				
                           A  1663    			
00145A                     A  1664    os_get_mouse_motion
                           A  1665    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  35


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1666    ; Returns: ZF = Set: Relative X coord in HL, Re
                           A  1667    ;          ZF = Not set: Mouse driver not initi
                           A  1668    			
00145A 3A B2 60 00         A  1669    				ld a,(devices_connected)
00145E E602                A  1670    				and 2
001460 EE02                A  1671    				xor 2
001462 C0                  A  1672    				ret nz
001463 AF                  A  1673    ms_reread		xor a
001464 32 8F 62 00         A  1674    				ld (mouse_updated),a
001468 2A 88 62 00         A  1675    				ld hl,(mouse_disp_x)			00146C ED5B 8B 62 00       A  1676    				ld de,(mouse_disp_y)
001471 3A 8F 62 00         A  1677    				ld a,(mouse_updated)			001475 B7                  A  1678    				or a
001476 20 EB               A  1679    				jr nz,ms_reread
001478 AF                  A  1680    mouse_end		xor a
001479 3A 8E 62 00         A  1681    				ld a,(mouse_wheel)
00147D 47                  A  1682    				ld b,a
00147E 3A 87 62 00         A  1683    				ld a,(mouse_buttons)
001482 C9                  A  1684    				ret
                           A  1685    			
                           A  1686    			
001483                     A  1687    os_get_mouse_position
                           A  1688    
                           A  1689    ; Returns: ZF = Set: Abolute X coord in HL, Abs
                           A  1690    ;          ZF = Not set: Mouse driver not initi
                           A  1691    				
001483 CD 5A 14 00         A  1692    				call os_get_mouse_motion
001487 C0                  A  1693    				ret nz
001488 22 A2 62 00         A  1694    				ld (mouse_disp_x_buffer),hl
00148C ED53 A5 62 00       A  1695    				ld (mouse_disp_y_buffer),de
001491 3A A8 62 00         A  1696    				ld a,(mouse_new_window)
001495 B7                  A  1697    				or a
001496 20 6C               A  1698    				jr nz,ms_nmw
                           A  1699    
001498 ED5B 9C 62 00       A  1700    				ld de,(mouse_disp_x_old)
00149D AF                  A  1701    				xor a
00149E ED52                A  1702    				sbc hl,de
0014A0 EB                  A  1703    				ex de,hl
0014A1 2A 96 62 00         A  1704    				ld hl,(mouse_abs_x)
0014A5 19                  A  1705    				add hl,de
0014A6 E5                  A  1706    				push hl
0014A7 C1                  A  1707    				pop bc
0014A8 DD210000 80         A  1708    				ld ix,800000h					0014AD DD09                A  1709    				add ix,bc
0014AF 30 06               A  1710    				jr nc,ms_x_ok1
0014B1 01000000            A  1711    				ld bc,0
0014B5 18 10               A  1712    				jr ms_x_ok2
0014B7 ED5B 90 62 00       A  1713    ms_x_ok1		ld de,(mouse_window_size_x)
0014BC AF                  A  1714    				xor a
0014BD ED52                A  1715    				sbc hl,de
0014BF 38 06               A  1716    				jr c,ms_x_ok2
0014C1 ED4B 90 62 00       A  1717    				ld bc,(mouse_window_size_x)		Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  36


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0014C6 0B                  A  1718    				dec bc
0014C7 ED43 96 62 00       A  1719    ms_x_ok2		ld (mouse_abs_x),bc
                           A  1720    					
0014CC 2A A5 62 00         A  1721    				ld hl,(mouse_disp_y_buffer)
0014D0 ED5B 9F 62 00       A  1722    				ld de,(mouse_disp_y_old)
0014D5 AF                  A  1723    				xor a
0014D6 ED52                A  1724    				sbc hl,de
0014D8 EB                  A  1725    				ex de,hl
0014D9 2A 99 62 00         A  1726    				ld hl,(mouse_abs_y)
0014DD 19                  A  1727    				add hl,de
0014DE E5                  A  1728    				push hl
0014DF C1                  A  1729    				pop bc
0014E0 DD210000 80         A  1730    				ld ix,800000h					0014E5 DD09                A  1731    				add ix,bc
0014E7 30 06               A  1732    				jr nc,ms_y_ok1
0014E9 01000000            A  1733    				ld bc,0
0014ED 18 10               A  1734    				jr ms_y_ok2
0014EF ED5B 93 62 00       A  1735    ms_y_ok1		ld de,(mouse_window_size_y)
0014F4 AF                  A  1736    				xor a
0014F5 ED52                A  1737    				sbc hl,de
0014F7 38 06               A  1738    				jr c,ms_y_ok2
0014F9 ED4B 93 62 00       A  1739    				ld bc,(mouse_window_size_y)		0014FE 0B                  A  1740    				dec bc
0014FF ED43 99 62 00       A  1741    ms_y_ok2		ld (mouse_abs_y),bc
                           A  1742    
                           A  1743    				
001504 2A A2 62 00         A  1744    ms_nmw			ld hl,(mouse_disp_x_buffer)
001508 22 9C 62 00         A  1745    				ld (mouse_disp_x_old),hl
00150C 2A A5 62 00         A  1746    				ld hl,(mouse_disp_y_buffer)
001510 22 9F 62 00         A  1747    				ld (mouse_disp_y_old),hl
                           A  1748    				
001514 2A 96 62 00         A  1749    				ld hl,(mouse_abs_x)
001518 ED5B 99 62 00       A  1750    				ld de,(mouse_abs_y)
                           A  1751    				
00151D AF                  A  1752    				xor a
00151E 32 A8 62 00         A  1753    				ld (mouse_new_window),a
001522 C3 78 14 00         A  1754    				jp mouse_end
                           A  1755    				
                           A  1756    	
                           A  1757    ;==============================================
                           A  1758    ;----- General Subroutines --------------------
                           A  1759    ;==============================================
                           A  1760    
                           A  1761    ; .--------------.
                           A  1762    ; ! CRC Checksum !
                           A  1763    ; '--------------'
                           A  1764    
                           A  1765    ; makes 16 bit checksum in HL, src addr = DE, l
                           A  1766    
001526                     A  1767    crc_checksum
                           A  1768    
001526 21FFFF00            A  1769    				ld hl,0ffffh		
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  37


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00152A 1A                  A  1770    crcloop			ld a,(de)			
00152B AC                  A  1771    				xor h			
00152C 67                  A  1772    				ld h,a			
00152D 0608                A  1773    				ld b,8
00152F 4029                A  1774    crcbyte			add.sis hl,hl					001531 30 08               A  1775    				jr nc,crcnext
001533 7C                  A  1776    				ld a,h
001534 EE10                A  1777    				xor 10h
001536 67                  A  1778    				ld h,a
001537 7D                  A  1779    				ld a,l
001538 EE21                A  1780    				xor 21h
00153A 6F                  A  1781    				ld l,a
00153B 10 F2               A  1782    crcnext			djnz crcbyte
00153D 13                  A  1783    				inc de
00153E 0D                  A  1784    				dec c
00153F 20 E9               A  1785    				jr nz,crcloop
001541 C9                  A  1786    				ret
                           A  1787    
                           A  1788    
                           A  1789    ;----------------------------------------------
                           A  1790    
001542                     A  1791    os_get_key_mod_flags
                           A  1792    
001542 3A 7C 62 00         A  1793    				ld a,(key_mod_flags)
001546 BF                  A  1794    				cp a							001547 C9                  A  1795    				ret
                           A  1796    
                           A  1797    ;----------------------------------------------
                           A  1798    
001548                     A  1799    os_get_display_size
                           A  1800    			
001548 F5                  A  1801    				push af
001549 3A F3 5E 00         A  1802    				ld a,(window_rows)
00154D 4F                  A  1803    				ld c,a
00154E 3A F6 5E 00         A  1804    				ld a,(window_columns)
001552 47                  A  1805    				ld b,a
001553 F1                  A  1806    				pop af
001554 BF                  A  1807    				cp a						; Z
001555 C9                  A  1808    				ret
                           A  1809    
                           A  1810    ;----------------------------------------------
                           A  1811    
001556                     A  1812    os_bchl_memfill
                           A  1813    
                           A  1814    ; fill memory from xHL with A. Count in xBC.
                           A  1815    		
001556 77                  A  1816    mf_loop			ld (hl),a
001557 EDA1                A  1817    				cpi								001559 EA 56 15 00         A  1818    				jp pe,mf_loop
00155D C9                  A  1819    				ret
                           A  1820    	
                           A  1821    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  38


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1822    
00155E 7B                  A  1823    ext_set_pen		ld a,e
                           A  1824    
00155F 32 CC 5E 00         A  1825    os_set_pen		ld (current_pen),a
001563 BF                  A  1826    				cp a							001564 C9                  A  1827    				ret
                           A  1828    
                           A  1829    ;----------------------------------------------
                           A  1830    	
001565 3A CC 5E 00         A  1831    os_get_pen		ld a,(current_pen)
001569 BF                  A  1832    				cp a							00156A C9                  A  1833    				ret	
                           A  1834    
                           A  1835    ;----------------------------------------------
                           A  1836    
00156B                     A  1837    ext_background_colours
                           A  1838    				
00156B CC 7D 15 00         A  1839    				call z,mbase_hl
00156F C3 64 3D 00         A  1840    				jp hswc_set_ui_colours
                           A  1841    				
                           A  1842    				
                           A  1843    ;----------------------------------------------
                           A  1844    
001573                     A  1845    os_get_xde_msb	
                           A  1846    			
001573 ED53 60 61 00       A  1847    				ld (xrr_temp),de				001578 3A 62 61 00         A  1848    				ld a,(xrr_temp+2)
00157C C9                  A  1849    				ret
                           A  1850    
                           A  1851    ;----------------------------------------------
                           A  1852    
00157D F5                  A  1853    mbase_hl		push af
00157E 22 60 61 00         A  1854    				ld (xrr_temp),hl				001582 ED6E                A  1855    				ld a,MB
001584 32 62 61 00         A  1856    				ld (xrr_temp+2),a
001588 2A 60 61 00         A  1857    				ld hl,(xrr_temp)
00158C F1                  A  1858    				pop af
00158D C9                  A  1859    				ret
                           A  1860    				
00158E F5                  A  1861    mbase_de		push af
00158F ED53 60 61 00       A  1862    				ld (xrr_temp),de				001594 ED6E                A  1863    				ld a,MB
001596 32 62 61 00         A  1864    				ld (xrr_temp+2),a
00159A ED5B 60 61 00       A  1865    				ld de,(xrr_temp)
00159F F1                  A  1866    				pop af
0015A0 C9                  A  1867    				ret
                           A  1868    
0015A1 F5                  A  1869    mbase_ix		push af
0015A2 DD22 60 61 00       A  1870    				ld (xrr_temp),ix				0015A7 ED6E                A  1871    				ld a,MB
0015A9 32 62 61 00         A  1872    				ld (xrr_temp+2),a
0015AD DD2A 60 61 00       A  1873    				ld ix,(xrr_temp)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  39


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0015B2 F1                  A  1874    				pop af
0015B3 C9                  A  1875    				ret
                           A  1876    							
                           A  1877    ;----------------------------------------------
                           A  1878    ; Unpacks Z80P_RLE packed files - V1.02 
                           A  1879    ;----------------------------------------------
                           A  1880    
0015B4                     A  1881    unpack_rle
                           A  1882    
                           A  1883    ;set xHL = source address of packed file
                           A  1884    ;set xDE = destination address for unpacked dat
                           A  1885    ;set xBC = length of packed file
                           A  1886    
0015B4 E5                  A  1887    			push hl	
0015B5 DDE1                A  1888    			pop ix
0015B7 0B                  A  1889    			dec bc								0015B8 23                  A  1890    			inc hl
0015B9 DD7E00              A  1891    unp_gtok	ld a,(ix)							0015BC BE                  A  1892    unp_next	cp (hl)								0015BD 28 07               A  1893    			jr z,unp_brun						0015BF EDA0                A  1894    			ldi									0015C1 EA BC 15 00         A  1895    			jp pe,unp_next						0015C5 C9                  A  1896    			ret
                           A  1897    	
0015C6 C5                  A  1898    unp_brun	push bc								0015C7 23                  A  1899    			inc hl		
0015C8 7E                  A  1900    			ld a,(hl)							0015C9 23                  A  1901    			inc hl		
0015CA 46                  A  1902    			ld b,(hl)							0015CB 23                  A  1903    			inc hl
                           A  1904    	
0015CC 12                  A  1905    unp_rllp	ld (de),a							0015CD 13                  A  1906    			inc de			
0015CE 10 FC               A  1907    			djnz unp_rllp
                           A  1908    	
0015D0 C1                  A  1909    			pop bc	
0015D1 0B                  A  1910    			dec bc								0015D2 0B                  A  1911    			dec bc
0015D3 0B                  A  1912    			dec bc
0015D4 E5                  A  1913    			push hl								0015D5 21000000            A  1914    			ld hl,0
0015D9 B7                  A  1915    			or a
0015DA ED4A                A  1916    			adc hl,bc
0015DC E1                  A  1917    			pop hl
0015DD 20 DA               A  1918    			jr nz,unp_gtok
0015DF C9                  A  1919    			ret	
                           A  1920    	
                           A  1921    ;----------------------------------------------
                           A  1922    ; Commonly called error messages - gets message
                           A  1923    ;----------------------------------------------
                           A  1924    
                           A  1925    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  40


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0015E0 3E0D                A  1926    os_no_fn_error		ld a,0dh
0015E2 B7                  A  1927    					or a
0015E3 C9                  A  1928    					ret
                           A  1929    			
0015E4 3E15                A  1930    os_fn_too_long		ld a,15h
0015E6 B7                  A  1931    					or a
0015E7 C9                  A  1932    					ret
                           A  1933    				
0015E8 3E16                A  1934    os_no_start_addr	ld a,16h
0015EA B7                  A  1935    					or a
0015EB C9                  A  1936    					ret
                           A  1937    			
0015EC 3E17                A  1938    os_no_filesize		ld a,17h
0015EE B7                  A  1939    					or a
0015EF C9                  A  1940    					ret
                           A  1941    			
0015F0 3E18                A  1942    os_abort_save		ld a,18h
0015F2 B7                  A  1943    					or a
0015F3 C9                  A  1944    					ret
                           A  1945    			
0015F4 3E1C                A  1946    os_no_e_addr_error	ld a,1ch
0015F6 B7                  A  1947    					or a
0015F7 C9                  A  1948    					ret
                           A  1949    			
0015F8 3E1D                A  1950    os_no_d_addr_error	ld a,1dh
0015FA B7                  A  1951    					or a
0015FB C9                  A  1952    					ret
                           A  1953    				
0015FC 3E1E                A  1954    os_range_error		ld a,1eh
0015FE B7                  A  1955    					or a
0015FF C9                  A  1956    					ret
                           A  1957    			
001600 3E1F                A  1958    os_no_args_error	ld a,1fh
001602 B7                  A  1959    					or a
001603 C9                  A  1960    					ret	
                           A  1961    
                           A  1962    ;----------------------------------------------
                           A  1963    
                           A  1964    ; Set xHL to address of zero terminated filenam
                           A  1965    ; RETURNS:	C:xDE  = File length
                           A  1966    ;    		HL     = Start cluster of file
                           A  1967    
001604 CC 7D 15 00         A  1968    ext_find_file	call z,mbase_hl
                           A  1969    
001608 CD C7 52 00         A  1970    os_find_file	call fs_hl_to_filename
00160C CD 68 4A 00         A  1971    				call fs_open_file_command		001610 38 02               A  1972    				jr c,os_fferr					001612 B7                  A  1973    				or a							001613 C9                  A  1974    				ret 		
                           A  1975    								
001614 47                  A  1976    os_fferr		ld b,a							001615 AF                  A  1977    				xor a			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  41


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001616 4F                  A  1978    				ld c,a
001617 0C                  A  1979    				inc c							001618 C9                  A  1980    				ret	
                           A  1981    
                           A  1982    ;----------------------------------------------
                           A  1983    
001619                     A  1984    os_set_load_length
                           A  1985    
001619 ED53 1E 55 00       A  1986    				ld (fs_file_transfer_length),de
00161E BF                  A  1987    				cp a							00161F C9                  A  1988    				ret
                           A  1989    				
                           A  1990    ;----------------------------------------------
                           A  1991    
001620                     A  1992    ext_set_file_pointer
                           A  1993    
001620 79                  A  1994    				ld a,c
                           A  1995    				
001621                     A  1996    os_set_file_pointer
                           A  1997    
                           A  1998    ; Moves the 'start of file' pointer allowing ra
                           A  1999    ; Note: File pointer is reset by opening a file
                           A  2000    ; by normal read function.
                           A  2001    
001621 ED53 12 55 00       A  2002    				ld (fs_file_pointer),de			001626 32 15 55 00         A  2003    				ld (fs_file_pointer+3),a
00162A F5                  A  2004    				push af
00162B AF                  A  2005    				xor a
00162C 32 44 55 00         A  2006    				ld (fs_filepointer_valid),a		001630 F1                  A  2007    				pop af
001631 BF                  A  2008    				cp a							001632 C9                  A  2009    				ret
                           A  2010    				
                           A  2011    ;----------------------------------------------
                           A  2012    
                           A  2013    ; set xHL = load address 
                           A  2014    ; (Before calling this routine, call os_find_fi
                           A  2015    
001633                     A  2016    ext_read_bytes_from_file
                           A  2017    
001633 CC 7D 15 00         A  2018    				call z,mbase_hl					                           A  2019    				
001637                     A  2020    os_read_bytes_from_file
                           A  2021    
001637 22 27 55 00         A  2022    				ld (fs_ez80_address),hl			00163B CD B3 4A 00         A  2023    				call fs_read_data_command
00163F 38 D3               A  2024    				jr c,os_fferr
001641 B7                  A  2025    				or a
001642 C9                  A  2026    				ret
                           A  2027    
                           A  2028    ;----------------------------------------------
                           A  2029    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  42


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2030    ; Before calling, set xHL = address of zero ter
                           A  2031    
001643 CC 7D 15 00         A  2032    ext_create_file	call z,mbase_hl
                           A  2033    
001647 CD C7 52 00         A  2034    os_create_file	call fs_hl_to_filename
00164B CD 69 4D 00         A  2035    				call fs_create_file_command		00164F DA 14 16 00         A  2036    				jp c,os_fferr					001653 B7                  A  2037    				or a
001654 C9                  A  2038    				ret
                           A  2039    
                           A  2040    ;----------------------------------------------
                           A  2041    
001655                     A  2042    ext_write_bytes_to_file
                           A  2043    
001655 CC 7D 15 00         A  2044    				call z,mbase_hl
001659 CC 8E 15 00         A  2045    				call z,mbase_de
                           A  2046    
00165D                     A  2047    os_write_bytes_to_file
                           A  2048    
                           A  2049    ; Before calling, set..
                           A  2050    
                           A  2051    ; xDE   = address to save data from
                           A  2052    ; xBC   = number of bytes to save
                           A  2053    ; xHL   = address of null-terminated ascii name
                           A  2054    
                           A  2055    ; On return:
                           A  2056    
                           A  2057    ; If zero flag NOT set, there was an error.
                           A  2058    ; If   A = $00, b = hardware error code
                           A  2059    ; Else A = File system error code
                           A  2060    
                           A  2061    ; NOTE:
                           A  2062    ; Will return 'file not found' if the file has 
                           A  2063    				
00165D ED43 1E 55 00       A  2064    				ld (fs_file_transfer_length),bc
001662 ED53 27 55 00       A  2065    				ld (fs_ez80_address),de	 	
001667 CD C7 52 00         A  2066    				call fs_hl_to_filename
00166B CD 9B 4D 00         A  2067    				call fs_write_bytes_to_file_com
00166F DA 14 16 00         A  2068    				jp c,os_fferr
001673 B7                  A  2069    				or a
001674 C9                  A  2070    				ret
                           A  2071    		
                           A  2072    		
                           A  2073    ;----------------------------------------------
                           A  2074    	
                           A  2075    
001675                     A  2076    os_check_volume_format
                           A  2077    
001675 CD C6 48 00         A  2078    				call fs_check_disk_format
001679 DA 14 16 00         A  2079    os_rffsc		jp c,os_fferr
00167D B7                  A  2080    				or a
00167E C9                  A  2081    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  43


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2082    
                           A  2083    ;----------------------------------------------
                           A  2084    
                           A  2085    
00167F 7B                  A  2086    ext_format		ld a,e
001680 CC 7D 15 00         A  2087    				call z,mbase_hl					                           A  2088    
001684 E5                  A  2089    os_format		push hl							001685 CD 8B 1A 00         A  2090    				call dev_to_driver_lookup
001689 E1                  A  2091    				pop hl
00168A 38 04               A  2092    				jr c,sdevok
00168C 3ED0                A  2093    				ld a,0d0h						00168E B7                  A  2094    				or a
00168F C9                  A  2095    				ret
                           A  2096    
001690 F5                  A  2097    sdevok			push af				
001691 11 EE 54 00         A  2098    				ld de,fs_sought_filename
001695 CD D6 53 00         A  2099    				call fs_clear_filename
001699 060B                A  2100    				ld b,11
00169B CD 02 12 00         A  2101    				call os_copy_ascii_run
00169F F1                  A  2102    				pop af
                           A  2103    				
0016A0 21 6E 5F 00         A  2104    				ld hl,current_driver
0016A4 46                  A  2105    				ld b,(hl)
0016A5 77                  A  2106    				ld (hl),a
0016A6 C5                  A  2107    				push bc
0016A7 E5                  A  2108    				push hl
0016A8 CD 3B 47 00         A  2109    				call fs_format_device_command
0016AC E1                  A  2110    				pop hl
0016AD C1                  A  2111    				pop bc
0016AE 70                  A  2112    				ld (hl),b
0016AF 18 C8               A  2113    				jr os_rffsc
                           A  2114    
                           A  2115    
                           A  2116    ;----------------------------------------------
                           A  2117    
                           A  2118    
0016B1 CC 7D 15 00         A  2119    ext_make_dir	call z,mbase_hl					                           A  2120    
0016B5 CD C7 52 00         A  2121    os_make_dir		call fs_hl_to_filename
0016B9 CD E1 4B 00         A  2122    				call fs_make_dir_command
0016BD 18 BA               A  2123    				jr os_rffsc
                           A  2124    
                           A  2125    
                           A  2126    ;----------------------------------------------
                           A  2127    
                           A  2128    
0016BF CC 7D 15 00         A  2129    ext_change_dir	call z,mbase_hl					                           A  2130    
0016C3 CD C7 52 00         A  2131    os_change_dir	call fs_hl_to_filename
0016C7 CD 14 4A 00         A  2132    				call fs_change_dir_command
0016CB 18 AC               A  2133    				jr os_rffsc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  44


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2134    				
                           A  2135    	
                           A  2136    ;----------------------------------------------
                           A  2137    	
                           A  2138    	
0016CD CD 45 4A 00         A  2139    os_parent_dir	call fs_parent_dir_command
0016D1 18 A6               A  2140    				jr os_rffsc
                           A  2141    				
                           A  2142    
                           A  2143    ;----------------------------------------------
                           A  2144    
                           A  2145    	
0016D3 CD 39 4A 00         A  2146    os_root_dir		call fs_goto_root_dir_command
0016D7 18 A0               A  2147    				jr os_rffsc
                           A  2148    
                           A  2149    
                           A  2150    ;----------------------------------------------
                           A  2151    
                           A  2152    
0016D9 CC 7D 15 00         A  2153    ext_erase_file	call z,mbase_hl					                           A  2154    
0016DD CD C7 52 00         A  2155    os_erase_file	call fs_hl_to_filename
0016E1 CD 2A 4F 00         A  2156    				call fs_erase_file_command
0016E5 18 92               A  2157    				jr os_rffsc
                           A  2158    	
                           A  2159    
                           A  2160    ;----------------------------------------------
                           A  2161    
                           A  2162    
0016E7                     A  2163    os_goto_first_dir_entry	
                           A  2164    
0016E7 CD 85 4F 00         A  2165    				call fs_goto_first_dir_entry
0016EB 18 8C               A  2166    				jr os_rffsc
                           A  2167    
                           A  2168    
                           A  2169    ;----------------------------------------------
                           A  2170    
                           A  2171    
0016ED                     A  2172    os_get_dir_entry		
                           A  2173    
0016ED CD 9C 4F 00         A  2174    				call fs_get_dir_entry	
0016F1 18 86               A  2175    				jr os_rffsc
                           A  2176    
                           A  2177    
                           A  2178    ;----------------------------------------------
                           A  2179    
                           A  2180    
0016F3                     A  2181    os_goto_next_dir_entry	
                           A  2182    	
0016F3 CD 29 50 00         A  2183    				call fs_goto_next_dir_entry	
0016F7 18 80               A  2184    				jr os_rffsc
                           A  2185    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  45


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2186    
                           A  2187    ;----------------------------------------------
                           A  2188    
                           A  2189    
0016F9                     A  2190    os_get_current_dir_name
                           A  2191    
0016F9 CD 8D 53 00         A  2192    				call fs_get_current_dir_name
0016FD C3 79 16 00         A  2193    				jr os_rffsc
                           A  2194    				
                           A  2195    
                           A  2196    ;----------------------------------------------
                           A  2197    
                           A  2198    
001701 CC 7D 15 00         A  2199    ext_rename_file	call z,mbase_hl
001705 CC 8E 15 00         A  2200    				call z,mbase_de
                           A  2201    
001709 D5                  A  2202    os_rename_file	push de
00170A CD C1 52 00         A  2203    				call fs_hl_to_alt_filename		00170E E1                  A  2204    				pop hl				
00170F CD C7 52 00         A  2205    				call fs_hl_to_filename	
001713 CD 41 4F 00         A  2206    				call fs_rename_command
001717 C3 79 16 00         A  2207    				jr os_rffsc
                           A  2208    				
                           A  2209    
                           A  2210    ;----------------------------------------------
                           A  2211    
                           A  2212    
00171B CC 7D 15 00         A  2213    ext_delete_dir	call z,mbase_hl					                           A  2214    
00171F CD C7 52 00         A  2215    os_delete_dir	call fs_hl_to_filename
001723 CD BA 4C 00         A  2216    				call fs_delete_dir_command
001727 C3 79 16 00         A  2217    				jp os_rffsc
                           A  2218    	
                           A  2219    	
                           A  2220    ;----- LOW LEVEL SECTOR ACCESS ETC FOR EXTERNAL
                           A  2221    
                           A  2222    
00172B                     A  2223    ext_read_sector
00172B CD 76 17 00         A  2224    				call ext_sector_access_preamble
00172F C0                  A  2225    				ret nz
001730 32 6E 5F 00         A  2226    				ld (current_driver),a
001734 CD 64 54 00         A  2227    				call fs_read_sector
001738 20 11               A  2228    				jr nz,sect_done
00173A 38 0F               A  2229    				jr c,sect_done
00173C 21 96 66 00         A  2230    				ld hl,sector_buffer
001740 ED5B 7E 5F 00       A  2231    				ld de,(sector_rd_wr_addr)
001745 01000200            A  2232    				ld bc,512
001749 EDB0                A  2233    				ldir			
00174B F5                  A  2234    sect_done		push af
00174C 3A A4 60 00         A  2235    				ld a,(sys_driver_backup)		001750 32 6E 5F 00         A  2236    				ld (current_driver),a
001754 F1                  A  2237    				pop af
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  46


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001755 C3 79 16 00         A  2238    				jp os_rffsc
                           A  2239    				
                           A  2240    
001759                     A  2241    ext_write_sector
                           A  2242    			
001759 CD 76 17 00         A  2243    				call ext_sector_access_preamble
00175D C0                  A  2244    				ret nz
00175E 32 6E 5F 00         A  2245    				ld (current_driver),a
001762 2A 7E 5F 00         A  2246    				ld hl,(sector_rd_wr_addr)
001766 11 96 66 00         A  2247    				ld de,sector_buffer
00176A 01000200            A  2248    				ld bc,512
00176E EDB0                A  2249    				ldir			
001770 CD 7C 54 00         A  2250    				call fs_write_sector
001774 18 D5               A  2251    				jr sect_done
                           A  2252    
                           A  2253    
001776                     A  2254    ext_sector_access_preamble
                           A  2255    
001776 CC 7D 15 00         A  2256    				call z,mbase_hl
00177A 22 7E 5F 00         A  2257    				ld (sector_rd_wr_addr),hl
                           A  2258    				
00177E 78                  A  2259    				ld a,b
00177F F5                  A  2260    				push af							001780 DD21 44 61 00       A  2261    				ld ix,sector_lba0
001785 DD1F00              A  2262    				ld (ix),de						001788 DD7103              A  2263    				ld (ix+3),c
00178B CD 8B 1A 00         A  2264    				call dev_to_driver_lookup		00178F E5                  A  2265    				push hl
001790 DDE1                A  2266    				pop ix
001792 2A 44 61 00         A  2267    				ld hl,(sector_lba0)				001796 3A 47 61 00         A  2268    				ld a,(sector_lba3)				00179A DD0701              A  2269    				ld bc,(ix+1)					00179D B7                  A  2270    				or a							00179E ED42                A  2271    				sbc hl,bc
0017A0 DD9E04              A  2272    				sbc a,(ix+4)
0017A3 38 05               A  2273    				jr c,range_ok
0017A5 F1                  A  2274    				pop af
0017A6 3ED5                A  2275    				ld a,0d5h						0017A8 B7                  A  2276    				or a							0017A9 C9                  A  2277    				ret
                           A  2278    	
0017AA 3A 6E 5F 00         A  2279    range_ok		ld a,(current_driver)
0017AE 32 A4 60 00         A  2280    				ld (sys_driver_backup),a
0017B2 F1                  A  2281    				pop af							0017B3 CD 8B 1A 00         A  2282    				call dev_to_driver_lookup
0017B7 30 02               A  2283    				jr nc,bad_dev
0017B9 BF                  A  2284    os_null			cp a							0017BA C9                  A  2285    				ret
                           A  2286    					
0017BB 3ED0                A  2287    bad_dev			ld a,0d0h						0017BD B7                  A  2288    				or a							0017BE C9                  A  2289    				ret	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  47


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2290    			
                           A  2291    
                           A  2292    ;----------------------------------------------
                           A  2293    
                           A  2294    
0017BF                     A  2295    os_get_device_info
                           A  2296    
0017BF 21 1F 60 00         A  2297    				ld hl,host_device_hardware_info
0017C3 11 81 5F 00         A  2298    				ld de,driver_table
0017C7 3A 6F 5F 00         A  2299    				ld a,(device_count)
0017CB 47                  A  2300    				ld b,a
0017CC 3A 6E 5F 00         A  2301    				ld a,(current_driver)
0017D0 BF                  A  2302    				cp a
0017D1 C9                  A  2303    				ret
                           A  2304    
                           A  2305    
                           A  2306    
                           A  2307    
0017D2                     A  2308    os_get_volume_info
                           A  2309    
0017D2 21 9F 5F 00         A  2310    				ld hl,volume_mount_list	
0017D6 3A 70 5F 00         A  2311    				ld a,(volume_count)
0017DA 47                  A  2312    				ld b,a
0017DB 3A 6D 5F 00         A  2313    				ld a,(current_volume)
0017DF C9                  A  2314    				ret
                           A  2315    				
                           A  2316    		
                           A  2317    ;----------------------------------------------
                           A  2318    
                           A  2319    
0017E0                     A  2320    ext_serial_get_header
                           A  2321    
0017E0 CC 7D 15 00         A  2322    				call z,mbase_hl
0017E4 7B                  A  2323    				ld a,e
0017E5 CD CE 44 00         A  2324    				call serial_get_header
0017E9 C9                  A  2325    				ret
                           A  2326    				
                           A  2327    				
0017EA                     A  2328    ext_serial_receive_file
                           A  2329    				
0017EA CC 7D 15 00         A  2330    				call z,mbase_hl
0017EE CD 69 45 00         A  2331    				call serial_receive_file
0017F2 C9                  A  2332    				ret
                           A  2333    				
                           A  2334    	
0017F3                     A  2335    ext_serial_send_file
                           A  2336    
0017F3 CC 7D 15 00         A  2337    				call z,mbase_hl
0017F7 CC A1 15 00         A  2338    				call z,mbase_ix				
0017FB CD 32 46 00         A  2339    				call serial_send_file
0017FF C9                  A  2340    				ret
                           A  2341    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  48


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2342    
001800                     A  2343    ext_serial_tx
001800 7B                  A  2344    				ld a,e
001801 CD 2D 3C 00         A  2345    				call send_serial_byte
001805 AF                  A  2346    				xor a							001806 C9                  A  2347    				ret
                           A  2348    
                           A  2349    
001807                     A  2350    ext_serial_rx
001807 7B                  A  2351    				ld a,e
001808 32 3D 5F 00         A  2352    				ld (serial_timeout),a
00180C CD F2 3B 00         A  2353    				call receive_serial_byte
001810 C9                  A  2354    				ret
                           A  2355    				
                           A  2356    
                           A  2357    ;----------------------------------------------
                           A  2358    
001811                     A  2359    ext_mount_volumes
                           A  2360    
001811 7B                  A  2361    				ld a,e
                           A  2362    
001812                     A  2363    os_mount_volumes
                           A  2364    				
001812 32 A5 60 00         A  2365    				ld (os_quiet_mode),a			                           A  2366    				
001816 21 5D 56 00         A  2367    				ld hl,storage_txt
00181A CD 17 0F 00         A  2368    				call os_print_string_cond
00181E CD 46 18 00         A  2369    				call mount_go
001822 AF                  A  2370    				xor a
001823 32 6D 5F 00         A  2371    tvloop			ld (current_volume),a
001827 CD A1 1A 00         A  2372    				call os_change_volume			00182B C8                  A  2373    				ret z							00182C 3A 6D 5F 00         A  2374    				ld a,(current_volume)			001830 3C                  A  2375    				inc a
001831 FE08                A  2376    				cp max_volumes
001833 20 EE               A  2377    				jr nz,tvloop
001835 3A 6F 5F 00         A  2378    				ld a,(device_count)
001839 B7                  A  2379    				or a
00183A 20 08               A  2380    				jr nz,mfsdevs
00183C 21 53 5D 00         A  2381    				ld hl,none_found_msg
001840 CD EE 13 00         A  2382    				call os_show_packed_text_cond
001844 AF                  A  2383    mfsdevs			xor a
001845 C9                  A  2384    				ret
                           A  2385    
                           A  2386    
                           A  2387    
001846 21 9F 5F 00         A  2388    mount_go		ld hl,volume_mount_list			00184A 01800000            A  2389    				ld bc,max_volumes*16
00184E AF                  A  2390    clrdl_lp		xor a
00184F CD 56 15 00         A  2391    				call os_bchl_memfill
                           A  2392    								
001853 21 87 5F 00         A  2393    				ld hl,volume_dir_clusters		Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  49


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001857 01180000            A  2394    				ld bc,max_volumes*3		
00185B AF                  A  2395    				xor a	
00185C CD 56 15 00         A  2396    				call os_bchl_memfill	
                           A  2397    			
001860 11 1F 60 00         A  2398    				ld de,host_device_hardware_info
001864 ED53 9F 60 00       A  2399    				ld (dhwn_temp_pointer),de
                           A  2400    				
001869 FD21 9F 5F 00       A  2401    				ld iy,volume_mount_list
00186E AF                  A  2402    				xor a
00186F 32 70 5F 00         A  2403    				ld (volume_count),a
001873 32 6F 5F 00         A  2404    				ld (device_count),a
001877 32 6E 5F 00         A  2405    mnt_loop		ld (current_driver),a			00187B CD 17 1A 00         A  2406    				call locate_driver_base			00187F 21000000            A  2407    				ld hl,0
001883 AF                  A  2408    				xor a
001884 ED5A                A  2409    				adc hl,de
001886 C8                  A  2410    				ret z							001887 EB                  A  2411    				ex de,hl						001888 FDE5                A  2412    				push iy
00188A CD 9B 18 00         A  2413    				call find_dev					00188E FDE1                A  2414    				pop iy							001890 DC 9C 18 00         A  2415    				call c,got_dev		
001894 3A 6E 5F 00         A  2416    nxt_drv			ld a,(current_driver)			001898 3C                  A  2417    				inc a
001899 18 DC               A  2418    				jr mnt_loop
                           A  2419    
                           A  2420    				
00189B E9                  A  2421    find_dev		jp (hl)
                           A  2422    			
                           A  2423    			
00189C E5                  A  2424    got_dev			push hl							00189D D5                  A  2425    				push de							00189E C5                  A  2426    				push bc
00189F CD B7 13 00         A  2427    				call os_new_line_cond			0018A3 015B0100            A  2428    				ld bc,015bh
0018A7 CD 28 1A 00         A  2429    				call os_print_multiple_chars_co
0018AB 3A 6E 5F 00         A  2430    				ld a,(current_driver)
0018AF CD 17 1A 00         A  2431    				call locate_driver_base
0018B3 210C0000            A  2432    				ld hl,0ch
0018B7 19                  A  2433    				add hl,de
0018B8 CD 17 0F 00         A  2434    				call os_print_string_cond		0018BC 015D0100            A  2435    				ld bc,015dh
0018C0 CD 28 1A 00         A  2436    				call os_print_multiple_chars_co
0018C4 C1                  A  2437    				pop bc
0018C5 D1                  A  2438    				pop de
0018C6 AF                  A  2439    				xor a
0018C7 32 A3 60 00         A  2440    				ld (vols_on_device_temp),a
                           A  2441    				
0018CB 21 6F 5F 00         A  2442    				ld hl,device_count
0018CF 34                  A  2443    				inc (hl)						0018D0 3A 6E 5F 00         A  2444    				ld a,(current_driver)
0018D4 2A 9F 60 00         A  2445    				ld hl,(dhwn_temp_pointer)	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  50


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0018D8 77                  A  2446    				ld (hl),a
0018D9 23                  A  2447    				inc hl
0018DA 73                  A  2448    				ld (hl),e						0018DB FD7304              A  2449    				ld (iy+4),e						0018DE 23                  A  2450    				inc hl							0018DF 72                  A  2451    				ld (hl),d
0018E0 FD7205              A  2452    				ld (iy+5),d
0018E3 23                  A  2453    				inc hl
0018E4 71                  A  2454    				ld (hl),c			
0018E5 FD7106              A  2455    				ld (iy+6),c
0018E8 23                  A  2456    				inc hl
0018E9 70                  A  2457    				ld (hl),b						0018EA 23                  A  2458    				inc hl
0018EB D1                  A  2459    				pop de
0018EC EB                  A  2460    				ex de,hl
0018ED 01160000            A  2461    				ld bc,22
0018F1 EDB0                A  2462    				ldir							0018F3 AF                  A  2463    				xor a
0018F4 0605                A  2464    				ld b,5		
0018F6 12                  A  2465    clrrode			ld (de),a						0018F7 13                  A  2466    				inc de
0018F8 10 FC               A  2467    				djnz clrrode
0018FA ED53 9F 60 00       A  2468    				ld (dhwn_temp_pointer),de		                           A  2469    					
0018FF AF                  A  2470    				xor a							001900 FDE5                A  2471    fnxtpart		push iy
001902 CD 64 48 00         A  2472    				call fs_get_partition_info
001906 FDE1                A  2473    				pop iy
001908 38 31               A  2474    				jr c,nxt_dev					00190A FECE                A  2475    				cp 0ceh							00190C 28 2D               A  2476    				jr z,nxt_dev
00190E F5                  A  2477    				push af
00190F FD360001            A  2478    				ld (iy),1						001913 3A 6E 5F 00         A  2479    				ld a,(current_driver)
001917 FD7701              A  2480    				ld (iy+1),a						00191A 3A A2 60 00         A  2481    				ld a,(partition_temp)	
00191E FD7707              A  2482    				ld (iy+7),a						001921 F1                  A  2483    				pop af
001922 B7                  A  2484    				or a
001923 28 35               A  2485    				jr z,dev_mbr
001925 AF                  A  2486    				xor a
001926 FD7708              A  2487    				ld (iy+8),a						001929 FD7709              A  2488    				ld (iy+9),a						00192C FD770A              A  2489    				ld (iy+10),a					00192F FD770B              A  2490    				ld (iy+11),a
001932 CD A6 19 00         A  2491    				call show_vol_info
001936 CD 97 19 00         A  2492    				call test_max_vol
00193A C8                  A  2493    				ret z							                           A  2494    			
00193B 3A A3 60 00         A  2495    nxt_dev			ld a,(vols_on_device_temp)		00193F B7                  A  2496    				or a
001940 C0                  A  2497    				ret nz		
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  51


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001941 CD F8 19 00         A  2498    				call test_quiet_mode
001945 20 06               A  2499    				jr nz,skp_cu
001947 3E0A                A  2500    				ld a,10
001949 32 49 61 00         A  2501    				ld (cursor_x),a
00194D 21 50 5D 00         A  2502    skp_cu			ld hl,no_vols_msg				001951 CD EE 13 00         A  2503    				call os_show_packed_text_cond
001955 CD B7 13 00         A  2504    				call os_new_line_cond
001959 C9                  A  2505    				ret
                           A  2506    				
                           A  2507    			
00195A 11040000            A  2508    dev_mbr			ld de,4
00195E 19                  A  2509    				add hl,de
00195F 7E                  A  2510    				ld a,(hl)						001960 B7                  A  2511    				or a
001961 C8                  A  2512    				ret z							001962 19                  A  2513    				add hl,de
                           A  2514    				
001963 FDE5                A  2515    				push iy
001965 0604                A  2516    				ld b,4
001967 7E                  A  2517    sfmbrlp			ld a,(hl)						001968 FD7708              A  2518    				ld (iy+8),a
00196B 23                  A  2519    				inc hl
00196C FD23                A  2520    				inc iy
00196E 10 F7               A  2521    				djnz sfmbrlp
001970 FDE1                A  2522    				pop iy
001972 FDE5                A  2523    				push iy
001974 0603                A  2524    				ld b,3	
001976 7E                  A  2525    nsivlp			ld a,(hl)
001977 FD7704              A  2526    				ld (iy+4),a						00197A 23                  A  2527    				inc hl
00197B FD23                A  2528    				inc iy
00197D 10 F7               A  2529    				djnz nsivlp
00197F FDE1                A  2530    				pop iy
                           A  2531    				
001981 CD A6 19 00         A  2532    				call show_vol_info
001985 CD 97 19 00         A  2533    				call test_max_vol	
001989 C8                  A  2534    				ret z							00198A 3A A2 60 00         A  2535    				ld a,(partition_temp)
00198E 3C                  A  2536    				inc a
00198F FE04                A  2537    				cp 4							001991 C2 00 19 00         A  2538    				jp nz,fnxtpart
001995 18 A4               A  2539    				jr nxt_dev
                           A  2540    				
                           A  2541    
001997                     A  2542    test_max_vol
                           A  2543    			
001997 11100000            A  2544    				ld de,16
00199B FD19                A  2545    				add iy,de			
00199D 21 70 5F 00         A  2546    				ld hl,volume_count
0019A1 34                  A  2547    				inc (hl)
0019A2 7E                  A  2548    				ld a,(hl)
0019A3 FE08                A  2549    				cp max_volumes
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  52


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0019A5 C9                  A  2550    				ret
                           A  2551    			
                           A  2552    			
0019A6                     A  2553    show_vol_info
                           A  2554    				
0019A6 CD F8 19 00         A  2555    				call test_quiet_mode
0019AA 20 06               A  2556    				jr nz,skp_cm2
0019AC 3E09                A  2557    				ld a,9			
0019AE 32 49 61 00         A  2558    				ld (cursor_x),a
0019B2 3A 70 5F 00         A  2559    skp_cm2			ld a,(volume_count)
0019B6 F5                  A  2560    				push af
0019B7 C630                A  2561    				add a,30h		
0019B9 32 75 5F 00         A  2562    				ld (vol_txt+4),a	
0019BD 21 71 5F 00         A  2563    				ld hl,vol_txt
0019C1 CD 17 0F 00         A  2564    				call os_print_string_cond		0019C5 21 A3 60 00         A  2565    				ld hl,vols_on_device_temp
0019C9 CBC6                A  2566    				set 0,(hl)						                           A  2567    			
0019CB F1                  A  2568    				pop af
0019CC FDE5                A  2569    				push iy
0019CE CD A1 1A 00         A  2570    				call os_change_volume			0019D2 28 0A               A  2571    				jr z,vform_ok					0019D4 21 00 5D 00         A  2572    svi_fe			ld hl,format_err_msg		
0019D8 CD EE 13 00         A  2573    svi_pem			call os_show_packed_text_cond	0019DC 18 0D               A  2574    				jr skpsvl
                           A  2575    			
0019DE CD 80 50 00         A  2576    vform_ok		call fs_get_volume_label
0019E2 38 0E               A  2577    				jr c,svi_hwe
0019E4 B7                  A  2578    				or a
0019E5 20 ED               A  2579    				jr nz,svi_fe
0019E7 CD 17 0F 00         A  2580    				call os_print_string_cond		                           A  2581    			
0019EB CD B7 13 00         A  2582    skpsvl			call os_new_line_cond
0019EF FDE1                A  2583    				pop iy
0019F1 C9                  A  2584    				ret
                           A  2585    				
0019F2 21 54 5B 00         A  2586    svi_hwe			ld hl,disk_err_msg
0019F6 18 E0               A  2587    				jr svi_pem
                           A  2588    			
                           A  2589    			
0019F8                     A  2590    test_quiet_mode
                           A  2591    			
0019F8 3A A5 60 00         A  2592    				ld a,(os_quiet_mode)
0019FC B7                  A  2593    				or a
0019FD C9                  A  2594    				ret
                           A  2595    
                           A  2596    ;----------------------------------------------
                           A  2597    
                           A  2598    
0019FE                     A  2599    show_dev_driver_name
                           A  2600    	
                           A  2601    	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  53


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0019FE CD 17 1A 00         A  2602    				call locate_driver_base			001A02 EB                  A  2603    				ex de,hl
001A03 110C0000            A  2604    				ld de,0ch
001A07 19                  A  2605    				add hl,de
001A08 CD 1C 0F 00         A  2606    				call os_print_string			001A0C C5                  A  2607    				push bc
001A0D 01200100            A  2608    				ld bc,0120h
001A11 CD 2D 1A 00         A  2609    				call os_print_multiple_chars	001A15 C1                  A  2610    				pop bc
001A16 C9                  A  2611    				ret
                           A  2612    
                           A  2613    
001A17                     A  2614    locate_driver_base
                           A  2615    
001A17 E5                  A  2616    				push hl							001A18 11030000            A  2617    				ld de,3							001A1C 57                  A  2618    				ld d,a
001A1D ED5C                A  2619    				mlt de
001A1F 21 81 5F 00         A  2620    				ld hl,driver_table
001A23 19                  A  2621    				add hl,de
001A24 ED17                A  2622    				ld de,(hl)
001A26 E1                  A  2623    				pop hl
001A27 C9                  A  2624    				ret
                           A  2625    				
                           A  2626    		
                           A  2627    ;----------------------------------------------
                           A  2628    
001A28                     A  2629    os_print_multiple_chars_cond
                           A  2630    
001A28 CD F8 19 00         A  2631    				call test_quiet_mode
001A2C C0                  A  2632    				ret nz
                           A  2633    			
001A2D                     A  2634    os_print_multiple_chars
                           A  2635    
                           A  2636    ;c = char
                           A  2637    ;b = count
001A2D C5                  A  2638    				push bc
001A2E E5                  A  2639    				push hl
001A2F 79                  A  2640    				ld a,c
001A30 21 D8 56 00         A  2641    				ld hl,rep_char_txt
001A34 77                  A  2642    				ld (hl),a
001A35 E5                  A  2643    pmch_lp			push hl
001A36 CD 1C 0F 00         A  2644    				call os_print_string
001A3A E1                  A  2645    				pop hl
001A3B 10 F8               A  2646    				djnz pmch_lp
001A3D E1                  A  2647    				pop hl
001A3E C1                  A  2648    				pop bc
001A3F C9                  A  2649    				ret
                           A  2650    
                           A  2651    ;----------------------------------------------
                           A  2652    
                           A  2653    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  54


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001A40 7B                  A  2654    ext_plot_char	ld a,e
001A41 C3 5D 3E 00         A  2655    				jp hwsc_plot_char
                           A  2656    				
                           A  2657    
                           A  2658    ;----------------------------------------------
                           A  2659    ; Some file system related routines 
                           A  2660    ;----------------------------------------------
                           A  2661    
                           A  2662    
001A45                     A  2663    fs_get_dir_cluster
                           A  2664    
                           A  2665    
001A45 F5                  A  2666    				push af							001A46 E5                  A  2667    				push hl			
001A47 CD 5D 1A 00         A  2668    				call fs_get_dir_cluster_address
001A4B ED17                A  2669    				ld de,(hl)
001A4D E1                  A  2670    dclopdone		pop hl
001A4E F1                  A  2671    				pop af
001A4F BF                  A  2672    				cp a							001A50 C9                  A  2673    				ret
                           A  2674    				
                           A  2675    
                           A  2676    
                           A  2677    
                           A  2678    
001A51                     A  2679    fs_update_dir_cluster
                           A  2680    
001A51 F5                  A  2681    				push af							001A52 E5                  A  2682    				push hl			
001A53 D5                  A  2683    				push de			
001A54 CD 5D 1A 00         A  2684    				call fs_get_dir_cluster_address
001A58 D1                  A  2685    				pop de
001A59 ED1F                A  2686    				ld (hl),de
001A5B 18 F0               A  2687    				jr dclopdone
                           A  2688    			
                           A  2689    
                           A  2690    
                           A  2691    
                           A  2692    
001A5D                     A  2693    fs_get_dir_cluster_address
                           A  2694    
001A5D 21 87 5F 00         A  2695    				ld hl,volume_dir_clusters		001A61 3A 6D 5F 00         A  2696    				ld a,(current_volume)	
001A65 11030000            A  2697    				ld de,3
001A69 57                  A  2698    				ld d,a
001A6A ED5C                A  2699    				mlt de
001A6C 19                  A  2700    				add hl,de
001A6D C9                  A  2701    				ret
                           A  2702    				
                           A  2703    	
                           A  2704    
                           A  2705    	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  55


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2706    	
001A6E                     A  2707    fs_get_total_sectors
                           A  2708    
                           A  2709    
001A6E F5                  A  2710    				push af
001A6F E5                  A  2711    				push hl							001A70 CD 7F 1A 00         A  2712    				call fs_calc_volume_offset	
001A74 21 A3 5F 00         A  2713    				ld hl,volume_mount_list+4
001A78 19                  A  2714    				add hl,de
001A79 ED17                A  2715    				ld de,(hl)
001A7B E1                  A  2716    				pop hl
001A7C F1                  A  2717    				pop af
001A7D BF                  A  2718    				cp a							001A7E C9                  A  2719    				ret
                           A  2720    
                           A  2721    
                           A  2722    
                           A  2723    
                           A  2724    
001A7F                     A  2725    fs_calc_volume_offset
                           A  2726    
001A7F 3A 6D 5F 00         A  2727    				ld a,(current_volume)			001A83 11100000            A  2728    calc_vol		ld de,16
001A87 57                  A  2729    				ld d,a
001A88 ED5C                A  2730    				mlt de
001A8A C9                  A  2731    				ret
                           A  2732    
                           A  2733    
                           A  2734    
                           A  2735    
                           A  2736    
001A8B                     A  2737    dev_to_driver_lookup
                           A  2738    
001A8B 21 6F 5F 00         A  2739    				ld hl,device_count				001A8F BE                  A  2740    				cp (hl)							001A90 D0                  A  2741    				ret nc
001A91 11200000            A  2742    				ld de,32						001A95 57                  A  2743    				ld d,a
001A96 ED5C                A  2744    				mlt de
001A98 21 1F 60 00         A  2745    				ld hl,host_device_hardware_info
001A9C 19                  A  2746    				add hl,de
001A9D 7E                  A  2747    				ld a,(hl)
001A9E 37                  A  2748    				scf
001A9F C9                  A  2749    				ret
                           A  2750    				
                           A  2751    
                           A  2752    
001AA0                     A  2753    ext_change_volume
                           A  2754    
001AA0 7B                  A  2755    				ld a,e
                           A  2756    
001AA1                     A  2757    os_change_volume
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  56


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2758    
001AA1 47                  A  2759    				ld b,a							001AA2 FE08                A  2760    				cp max_volumes		
001AA4 30 23               A  2761    				jr nc,fs_ccv2					                           A  2762    			
001AA6 3A 6D 5F 00         A  2763    				ld a,(current_volume)			001AAA F5                  A  2764    				push af
001AAB 78                  A  2765    				ld a,b
001AAC 32 6D 5F 00         A  2766    				ld (current_volume),a			001AB0 CD CD 1A 00         A  2767    				call fs_set_driver_for_volume	                           A  2768    				
001AB4 CD C6 48 00         A  2769    				call fs_check_disk_format		001AB8 38 06               A  2770    				jr c,fs_cant_chg_vols	
001ABA B7                  A  2771    				or a
001ABB 20 03               A  2772    				jr nz,fs_cant_chg_vols
001ABD F1                  A  2773    				pop af							001ABE AF                  A  2774    				xor a							001ABF C9                  A  2775    				ret
                           A  2776    
                           A  2777    
001AC0                     A  2778    fs_cant_chg_vols
                           A  2779    			
001AC0 F1                  A  2780    				pop af
001AC1 32 6D 5F 00         A  2781    				ld (current_volume),a			001AC5 CD CD 1A 00         A  2782    				call fs_set_driver_for_volume	                           A  2783    				
001AC9 3ECF                A  2784    fs_ccv2			ld a,0cfh						001ACB B7                  A  2785    				or a
001ACC C9                  A  2786    				ret
                           A  2787    					
                           A  2788    	
001ACD                     A  2789    fs_set_driver_for_volume
                           A  2790    
001ACD CD 7F 1A 00         A  2791    				call fs_calc_volume_offset		001AD1 21 A0 5F 00         A  2792    				ld hl,volume_mount_list+1
001AD5 19                  A  2793    				add hl,de
001AD6 7E                  A  2794    				ld a,(hl)
001AD7 32 6E 5F 00         A  2795    				ld (current_driver),a
001ADB C9                  A  2796    				ret
                           A  2797    
                           A  2798    
                           A  2799    ;----------------------------------------------
                           A  2800    
001ADC                     A  2801    ext_file_sector_list
                           A  2802    
                           A  2803    ;Input HL = cluster, E = sector offset
                           A  2804    
                           A  2805    ;Output HL = new cluster, E = new sector number
                           A  2806    ;       IX = address of LBA0 LSB of sector (int
                           A  2807    
                           A  2808    				
001ADC 3A D7 54 00         A  2809    				ld a,(fs_cluster_size)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  57


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001AE0 BB                  A  2810    				cp e
001AE1 20 0A               A  2811    				jr nz,fsl_sc
001AE3 CD 0C 53 00         A  2812    				call get_fat_entry_for_cluster
001AE7 DA 14 16 00         A  2813    				jp c,os_fferr
001AEB 1E00                A  2814    				ld e,0
001AED CD E3 53 00         A  2815    fsl_sc			call cluster_and_offset_to_lba
001AF1 1C                  A  2816    				inc e
001AF2 DD21 44 61 00       A  2817    fsl_done		ld ix,sector_lba0
001AF7 BF                  A  2818    				cp a							001AF8 C9                  A  2819    				ret
                           A  2820    				
                           A  2821    ;----------------------------------------------
                           A  2822    
                           A  2823    
001AF9 E5                  A  2824    os_count_chars	push hl							001AFA 01000000            A  2825    				ld bc,0
001AFE 7E                  A  2826    cch_lp			ld a,(hl)
001AFF B7                  A  2827    				or a
001B00 28 04               A  2828    				jr z,cch_end
001B02 23                  A  2829    				inc hl
001B03 03                  A  2830    				inc bc
001B04 18 F8               A  2831    				jr cch_lp
001B06 E1                  A  2832    cch_end			pop hl
001B07 C9                  A  2833    				ret
                           A  2834    				
                           A  2835    			
                           A  2836    ;----------------------------------------------
                           A  2837    ; Environment variable code V0.01
                           A  2838    ;----------------------------------------------
                           A  2839    
       00000100            A  2840    envar_buffer_size equ 256
                           A  2841    
                           A  2842    ;----------------------------------------------
                           A  2843    
001B08                     A  2844    ext_get_envar
001B08 CC 7D 15 00         A  2845    				call z,mbase_hl
                           A  2846    
001B0C                     A  2847    os_get_envar
                           A  2848    
                           A  2849    ;Set: 		HL = name of required variable
                           A  2850    ;Returns:	ZF Set: DE = address of variable's 
                           A  2851    ;        	ZF Not Set: Couldn't find variable
                           A  2852    				
001B0C DD21 A9 62 00       A  2853    				ld ix,envar_list-1
001B11 CD F9 1A 00         A  2854    env_fname		call os_count_chars				001B15 78                  A  2855    				ld a,b
001B16 B1                  A  2856    				or c
001B17 28 27               A  2857    				jr z,env_bad
                           A  2858    								
001B19 ED1201              A  2859    env_cname		lea de,ix+1
001B1C 1A                  A  2860    				ld a,(de)
001B1D FEFF                A  2861    				cp 0ffh
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  58


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001B1F 28 1F               A  2862    				jr z,env_bad
001B21 C5                  A  2863    				push bc
001B22 41                  A  2864    				ld b,c
001B23 CD E3 11 00         A  2865    				call os_compare_strings
001B27 C1                  A  2866    				pop bc
001B28 20 06               A  2867    				jr nz,env_nomatch
001B2A 03                  A  2868    				inc bc							001B2B EB                  A  2869    				ex de,hl
001B2C 09                  A  2870    				add hl,bc
001B2D EB                  A  2871    				ex de,hl						001B2E AF                  A  2872    				xor a
001B2F C9                  A  2873    				ret			
                           A  2874    				
001B30 DD23                A  2875    env_nomatch		inc ix							001B32 CD D8 1B 00         A  2876    				call check_envar_bounds
001B36 20 08               A  2877    				jr nz,env_bad
001B38 DD7E00              A  2878    				ld a,(ix)
001B3B B7                  A  2879    				or a
001B3C 28 DB               A  2880    				jr z,env_cname
001B3E 18 F0               A  2881    				jr env_nomatch
                           A  2882    
001B40 3E82                A  2883    env_bad			ld a,82h						001B42 B7                  A  2884    				or a
001B43 C9                  A  2885    				ret	
                           A  2886    				
                           A  2887    ;----------------------------------------------
                           A  2888    
001B44                     A  2889    ext_set_envar
                           A  2890    
                           A  2891    ;HL = addr of variable name (zero terminated)
                           A  2892    ;DE = addr of data for variable (zero terminate
                           A  2893    
                           A  2894    ;Returns:
                           A  2895    ;ZF = Set: OK
                           A  2896    ;ZF = Not Set: No enough space for new variable
                           A  2897    		
001B44 CC 7D 15 00         A  2898    				call z,mbase_hl
001B48 CC 8E 15 00         A  2899    				call z,mbase_de
                           A  2900    
001B4C 7E                  A  2901    os_set_envar	ld a,(hl)						001B4D B7                  A  2902    				or a
001B4E 28 F0               A  2903    				jr z,env_bad
001B50 1A                  A  2904    				ld a,(de)
001B51 B7                  A  2905    				or a
001B52 28 EC               A  2906    				jr z,env_bad
                           A  2907    
001B54 E5                  A  2908    				push hl
001B55 D5                  A  2909    				push de
001B56 CD A2 1B 00         A  2910    				call os_delete_envar			001B5A D1                  A  2911    				pop de
001B5B E1                  A  2912    				pop hl
                           A  2913    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  59


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001B5C DD2A B4 63 00       A  2914    				ld ix,(envar_top_loc)			001B61 CD D8 1B 00         A  2915    env_enlp		call check_envar_bounds
001B65 20 D9               A  2916    				jr nz,env_bad
001B67 7E                  A  2917    				ld a,(hl)						001B68 DD7700              A  2918    				ld (ix),a
001B6B B7                  A  2919    				or a
001B6C 28 05               A  2920    				jr z,env_ndone
001B6E 23                  A  2921    				inc hl
001B6F DD23                A  2922    				inc ix
001B71 18 EE               A  2923    				jr env_enlp
                           A  2924    				
001B73 CD D8 1B 00         A  2925    env_ndone		call check_envar_bounds			001B77 20 C7               A  2926    				jr nz,env_bad
001B79 DD36003D            A  2927    				ld (ix),'='
001B7D DD23                A  2928    				inc ix
                           A  2929    
001B7F CD D8 1B 00         A  2930    env_evlp		call check_envar_bounds			001B83 20 BB               A  2931    				jr nz,env_bad
001B85 1A                  A  2932    				ld a,(de)
001B86 DD7700              A  2933    				ld (ix),a
001B89 B7                  A  2934    				or a
001B8A 28 05               A  2935    				jr z,env_vdone
001B8C 13                  A  2936    				inc de
001B8D DD23                A  2937    				inc ix
001B8F 18 EE               A  2938    				jr env_evlp
                           A  2939    
001B91 DD23                A  2940    env_vdone		inc ix
001B93 DD3600FF            A  2941    				ld (ix),0ffh
001B97 DD22 B4 63 00       A  2942    				ld (envar_top_loc),ix			001B9C AF                  A  2943    				xor a
001B9D C9                  A  2944    				ret
                           A  2945    
                           A  2946    	
                           A  2947    ;----------------------------------------------
                           A  2948    
001B9E                     A  2949    ext_delete_envar
                           A  2950    
001B9E CC 7D 15 00         A  2951    				call z,mbase_hl
                           A  2952    
001BA2                     A  2953    os_delete_envar
                           A  2954    
                           A  2955    ;HL = name of required variable (null terminate
                           A  2956    ;ZF = Set: OK
                           A  2957    ;ZF = Not Set: Didnt find named variable
                           A  2958    
                           A  2959    
001BA2 CD 0C 1B 00         A  2960    				call os_get_envar				001BA6 C0                  A  2961    				ret nz
                           A  2962    				
001BA7 D5                  A  2963    				push de
001BA8 E1                  A  2964    				pop hl
001BA9 AF                  A  2965    				xor a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  60


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001BAA ED42                A  2966    				sbc hl,bc						                           A  2967    				
001BAC 13                  A  2968    env_fnxt		inc de							001BAD D5                  A  2969    				push de
001BAE DDE1                A  2970    				pop ix
001BB0 CD D8 1B 00         A  2971    				call check_envar_bounds
001BB4 20 8A               A  2972    				jr nz,env_bad
001BB6 1A                  A  2973    				ld a,(de)
001BB7 B7                  A  2974    				or a
001BB8 20 F2               A  2975    				jr nz,env_fnxt
                           A  2976    
001BBA 13                  A  2977    env_gnxt		inc de							001BBB EB                  A  2978    				ex de,hl
001BBC 7E                  A  2979    env_collp		ld a,(hl)
001BBD 12                  A  2980    				ld (de),a						001BBE FEFF                A  2981    				cp 0ffh
001BC0 28 0F               A  2982    				jr z,env_clspd					001BC2 E5                  A  2983    				push hl
001BC3 DDE1                A  2984    				pop ix
001BC5 CD D8 1B 00         A  2985    				call check_envar_bounds
001BC9 C2 40 1B 00         A  2986    				jr nz,env_bad
001BCD 23                  A  2987    				inc hl
001BCE 13                  A  2988    				inc de
001BCF 18 EB               A  2989    				jr env_collp
                           A  2990    
001BD1 ED53 B4 63 00       A  2991    env_clspd		ld (envar_top_loc),de			001BD6 AF                  A  2992    				xor a
001BD7 C9                  A  2993    				ret
                           A  2994    				
                           A  2995    ;----------------------------------------------
                           A  2996    
001BD8                     A  2997    check_envar_bounds
                           A  2998    
001BD8 C5                  A  2999    				push bc
001BD9 E5                  A  3000    				push hl
001BDA DDE5                A  3001    				push ix
001BDC E1                  A  3002    				pop hl
001BDD 01 AB 63 00         A  3003    				ld bc,1+(envar_list+envar_buffe
001BE1 AF                  A  3004    				xor a
001BE2 ED42                A  3005    				sbc hl,bc
001BE4 38 05               A  3006    				jr c,env_bok
001BE6 AF                  A  3007    				xor a
001BE7 3C                  A  3008    				inc a
001BE8 E1                  A  3009    				pop hl
001BE9 C1                  A  3010    				pop bc
001BEA C9                  A  3011    				ret
                           A  3012    
001BEB AF                  A  3013    env_bok			xor a
001BEC E1                  A  3014    				pop hl
001BED C1                  A  3015    				pop bc
001BEE C9                  A  3016    				ret
                           A  3017    						
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  61


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  3018    ;----------------------------------------------
                           A  3019    
001BEF                     A  3020    os_get_keymap_location
                           A  3021    
001BEF 21 A0 5D 00         A  3022    				ld hl,unshifted_keymap
001BF3 BF                  A  3023    				cp a							001BF4 C9                  A  3024    				ret
                           A  3025    
                           A  3026    ;----------------------------------------------
                           A  3027    
001BF5                     A  3028    os_get_font_info
                           A  3029    
001BF5 DD21 FF 5E 00       A  3030    				ld ix,font_parameters
001BFA BF                  A  3031    				cp a
001BFB C9                  A  3032    				ret
                           A  3033    
                           A  3034    ;==============================================
                           A  3035    ; Internal OS command routines
                           A  3036    ;==============================================
                           A  3037    
                           B     0    	include 'commands\c.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"c" - Copy memory command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
001BFC                     B     5    os_cmd_c
                           B     6    
001BFC CD 32 1C 00         B     7    				call get_start_and_end			                           B     8    				
001C00 CD 5B 1C 00         B     9    				call hexword_or_bust			001C04 CA F8 15 00         B    10    				jp z,os_no_d_addr_error
001C08 ED53 57 61 00       B    11    				ld (copy_dest_address),de
                           B    12    						
001C0D CD 20 1C 00         B    13    				call test_mem_range				001C11 DA FC 15 00         B    14    				jp c,os_range_error				001C15 ED5B 57 61 00       B    15    				ld de,(copy_dest_address)
001C1A EDB0                B    16    				ldir
                           B    17    
001C1C 3E20                B    18    copy_done		ld a,020h						001C1E B7                  B    19    				or a
001C1F C9                  B    20    				ret
                           B    21    			
                           B    22    			
                           B    23    ;----------------------------------------------
                           B    24    			
001C20                     B    25    test_mem_range
                           B    26    			
                           B    27    ; on return:
                           B    28    ;
                           B    29    ; carry flag: Set = bad range
                           B    30    ; xBC = run length on return
                           B    31    ; xHL = start address
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  62


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\c.asm
                           B    32    			
001C20 2A 54 61 00         B    33    				ld hl,(cmdop_end_address)	
001C24 ED4B 51 61 00       B    34    				ld bc,(cmdop_start_address)
001C29 C5                  B    35    				push bc
001C2A AF                  B    36    				xor a
001C2B ED42                B    37    				sbc hl,bc
001C2D E5                  B    38    				push hl
001C2E C1                  B    39    				pop bc
001C2F 03                  B    40    				inc bc
001C30 E1                  B    41    				pop hl
001C31 C9                  B    42    				ret
                           B    43    				
                           B    44    ;----------------------------------------------
                           B    45    			
001C32                     B    46    get_start_and_end
                           B    47    			
001C32 CD 93 10 00         B    48    				call ascii_to_hexword			001C36 ED53 51 61 00       B    49    				ld (cmdop_start_address),de
001C3B 23                  B    50    				inc hl
001C3C 28 09               B    51    				jr z,st_addrok
001C3E E1                  B    52    				pop hl							001C3F FE82                B    53    				cp 82h							001C41 28 02               B    54    				jr z,c_badhex
001C43 3E16                B    55    				ld a,016h						001C45 B7                  B    56    c_badhex		or a
001C46 C9                  B    57    				ret
                           B    58    				
001C47 CD 93 10 00         B    59    st_addrok		call ascii_to_hexword			001C4B ED53 54 61 00       B    60    				ld (cmdop_end_address),de
001C50 23                  B    61    				inc hl
001C51 B7                  B    62    				or a
001C52 C8                  B    63    				ret z
001C53 E1                  B    64    				pop hl							001C54 FE82                B    65    				cp 82h							001C56 28 ED               B    66    				jr z,c_badhex
001C58 3E1C                B    67    				ld a,01ch						001C5A C9                  B    68    				ret
                           B    69    				
                           B    70    ;----------------------------------------------
                           B    71    
001C5B                     B    72    hexword_or_bust
                           B    73    
                           B    74    ; Set HL to string address:
                           B    75    ; Returns to parent routine ONLY if the string 
                           B    76    ; DE = hex word. If no hex found, the zero flag
                           B    77    ; If chars are invalid hex, returns to grandpar
                           B    78    
001C5B CD 93 10 00         B    79    				call ascii_to_hexword		
001C5F FE82                B    80    				cp 82h
001C61 20 03               B    81    				jr nz,hex_good
001C63 E1                  B    82    				pop hl						; r
001C64 B7                  B    83    				or a	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  63


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\c.asm
001C65 C9                  B    84    				ret			 
001C66 FE81                B    85    hex_good		cp 081h						; n
001C68 C9                  B    86    				ret
                           B    87    	
                           B    88    ;----------------------------------------------
                           B    89    
                           B     0    	include 'commands\cd.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'cd' - Change Dir command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
001C69                     B     5    os_cmd_cd	
                           B     6    
001C69 CD 75 16 00         B     7    				call os_check_volume_format	
001C6D C0                  B     8    				ret nz
                           B     9    			
                           B    10    			
001C6E 7E                  B    11    				ld a,(hl)						001C6F B7                  B    12    				or a				
001C70 CA 17 1D 00         B    13    				jp z,cd_show_path		
                           B    14    			
                           B    15    			
001C74 7E                  B    16    				ld a,(hl)						001C75 23                  B    17    				inc hl
001C76 46                  B    18    				ld b,(hl)
001C77 2B                  B    19    				dec hl
001C78 FE2E                B    20    				cp '.'			
001C7A 20 08               B    21    				jr nz,cd_nual
001C7C B8                  B    22    				cp b
001C7D 20 05               B    23    				jr nz,cd_nual
001C7F CD CD 16 00         B    24    				call os_parent_dir	
001C83 C9                  B    25    				ret
                           B    26    			
                           B    27    			
001C84 FE2F                B    28    cd_nual			cp 02fh			
001C86 20 05               B    29    				jr nz,cd_nogor					001C88 CD D3 16 00         B    30    				call os_root_dir	
001C8C C9                  B    31    				ret
                           B    32    				
                           B    33    				
001C8D FE25                B    34    cd_nogor		cp '%'							001C8F 20 1F               B    35    				jr nz,cd_no_assign
001C91 CD 0C 1B 00         B    36    				call os_get_envar
001C95 28 04               B    37    				jr z,cd_evok
001C97 3ED1                B    38    				ld a,0d1h						001C99 B7                  B    39    				or a
001C9A C9                  B    40    				ret
001C9B 11000000            B    41    cd_evok			ld de,0
001C9F 5E                  B    42    				ld e,(hl)
001CA0 23                  B    43    				inc hl
001CA1 56                  B    44    				ld d,(hl)
001CA2 23                  B    45    				inc hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  64


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\cd.asm
001CA3 7E                  B    46    				ld a,(hl)
001CA4 D5                  B    47    				push de
001CA5 CD A1 1A 00         B    48    				call os_change_volume
001CA9 D1                  B    49    				pop de
001CAA C0                  B    50    				ret nz
001CAB CD 51 1A 00         B    51    				call fs_update_dir_cluster
001CAF C9                  B    52    				ret
                           B    53    				
                           B    54    				
001CB0                     B    55    cd_no_assign
                           B    56    			
001CB0 3A 6D 5F 00         B    57    				ld a,(current_volume)
001CB4 32 99 68 00         B    58    				ld (original_vol_cd_cmd),a
                           B    59    			
001CB8 E5                  B    60    				push hl
001CB9 DDE1                B    61    				pop ix
001CBB DD7E04              B    62    				ld a,(ix+4)
001CBE FE3A                B    63    				cp ':'							001CC0 20 25               B    64    				jr nz,cd_nchvol
001CC2 11 72 5F 00         B    65    				ld de,vol_txt+1
001CC6 0603                B    66    				ld b,3
001CC8 CD E3 11 00         B    67    				call os_compare_strings
001CCC 20 19               B    68    				jr nz,cd_nchvol
001CCE 11050000            B    69    				ld de,5
001CD2 19                  B    70    				add hl,de
001CD3 22 0A 62 00         B    71    				ld (os_args_loc),hl				001CD7 DD7E03              B    72    				ld a,(ix+3)						001CDA D630                B    73    				sub 030h
001CDC CD A1 1A 00         B    74    				call os_change_volume
001CE0 C0                  B    75    				ret nz							001CE1 CD D3 16 00         B    76    				call os_root_dir				001CE5 18 11               B    77    				jr cd_mol						                           B    78    				
                           B    79    			
001CE7 CD 45 1A 00         B    80    cd_nchvol		call fs_get_dir_cluster
001CEB ED53 96 68 00       B    81    				ld (original_dir_cd_cmd),de
                           B    82    			
001CF0 E5                  B    83    cd_mollp		push hl
001CF1 CD C3 16 00         B    84    				call os_change_dir				001CF5 E1                  B    85    				pop hl
001CF6 20 0A               B    86    				jr nz,cd_dcherr
001CF8 7E                  B    87    cd_mol			ld a,(hl)						001CF9 23                  B    88    				inc hl
001CFA B7                  B    89    				or a
001CFB C8                  B    90    				ret z
001CFC FE2F                B    91    				cp 02fh
001CFE 28 F0               B    92    				jr z,cd_mollp
001D00 18 F6               B    93    				jr cd_mol
                           B    94    					
001D02                     B    95    cd_dcherr	
                           B    96    			
001D02 F5                  B    97    				push af							Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  65


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\cd.asm
001D03 ED5B 96 68 00       B    98    				ld de,(original_dir_cd_cmd)
001D08 CD 51 1A 00         B    99    				call fs_update_dir_cluster
001D0C 3A 99 68 00         B   100    				ld a,(original_vol_cd_cmd)
001D10 CD A1 1A 00         B   101    				call os_change_volume	
001D14 F1                  B   102    				pop af
001D15 B7                  B   103    				or a
001D16 C9                  B   104    				ret
                           B   105    				
                           B   106    ;----------------------------------------------
                           B   107    			
001D17                     B   108    cd_show_path
                           B   109    			
                           B   110    			
       00000010            B   111    max_dirs	equ 16
                           B   112    			
001D17 0610                B   113    				ld b,max_dirs
001D19 0E00                B   114    				ld c,0
001D1B C5                  B   115    lp1				push bc
001D1C CD 45 1A 00         B   116    				call fs_get_dir_cluster
001D20 C1                  B   117    				pop bc
001D21 D5                  B   118    				push de
001D22 0C                  B   119    				inc c
001D23 C5                  B   120    				push bc
001D24 CD CD 16 00         B   121    				call os_parent_dir
001D28 C1                  B   122    				pop bc
001D29 20 02               B   123    				jr nz,shdir_lp
001D2B 10 EE               B   124    				djnz lp1
                           B   125    				
001D2D D1                  B   126    shdir_lp		pop de
001D2E C5                  B   127    				push bc
001D2F CD 51 1A 00         B   128    				call fs_update_dir_cluster
001D33 CD F9 16 00         B   129    				call os_get_current_dir_name
001D37 CD 1C 0F 00         B   130    				call os_print_string
001D3B 21 4D 1D 00         B   131    				ld hl,cd_fwdslash_txt
001D3F CD 1C 0F 00         B   132    				call os_print_string
001D43 C1                  B   133    				pop bc
001D44 0D                  B   134    				dec c
001D45 20 E6               B   135    				jr nz,shdir_lp
                           B   136    			
001D47 CD BC 13 00         B   137    				call os_new_line	
001D4B AF                  B   138    				xor a
001D4C C9                  B   139    				ret
                           B   140    			
001D4D 2F00                B   141    cd_fwdslash_txt	db '/',0	
                           B   142    			
                           B   143    ;----------------------------------------------
                           B   144    			
       00006896            B   145    original_dir_cd_cmd		equ scratch_pad 
       00006899            B   146    original_vol_cd_cmd	 	equ scratch_pad+3
                           B   147    					
                           B   148    ;----------------------------------------------
                           B     0    	include 'commands\cls.asm'
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  66


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\cls.asm
                           B     1    ;----------------------------------------------
                           B     2    ;"cls" - Clear screen command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
001D4F                     B     5    os_cmd_cls
                           B     6    
001D4F CD 70 3D 00         B     7    				call hwsc_clear_screen
001D53 AF                  B     8    				xor a
001D54 C9                  B     9    				ret
                           B    10    				
                           B    11    ;----------------------------------------------
                           B    12    	
                           B     0    	include 'commands\colon.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;":" for write hex bytes command. V0.02 - ADL m
                           B     3    ;----------------------------------------------
                           B     4    
001D55                     B     5    os_cmd_colon
                           B     6    	
001D55 CD 5B 1C 00         B     7    				call hexword_or_bust			001D59 CA E8 15 00         B     8    				jp z,os_no_start_addr			001D5D D5                  B     9    				push de
001D5E DDE1                B    10    				pop ix							                           B    11    			
001D60 CD 5B 1C 00         B    12    wmblp			call hexword_or_bust			001D64 28 07               B    13    				jr z,os_ccmdn
001D66 DD7300              B    14    				ld (ix),e						001D69 DD23                B    15    				inc ix
001D6B 18 F3               B    16    				jr wmblp
                           B    17    
001D6D AF                  B    18    os_ccmdn		xor a
001D6E C9                  B    19    				ret
                           B    20    		
                           B    21    
                           B    22    ;----------------------------------------------
                           B     0    	include 'commands\d.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; OS "D" Command: EZ80 Disassembler V0.02
                           B     3    ; Totally and utterly unoptimized!
                           B     4    ;----------------------------------------------
                           B     5    
001D6F FD21 56 23 00       B     6    os_cmd_d		ld iy,prefix_bits_loc
001D74 FDCB 07 C6          B     7    				set adl_dis,(iy+var_adl)
                           B     8    
001D78 CD 5B 1C 00         B     9    os_cmd_d_go		call hexword_or_bust			001D7C 28 05               B    10    				jr z,d_no_hex					001D7E ED53 CD 28 00       B    11    				ld (dis_addr),de
                           B    12    				
001D83 3A F3 5E 00         B    13    d_no_hex		ld a,(window_rows)				001D87 D602                B    14    				sub a,2
001D89 47                  B    15    				ld b,a
001D8A C5                  B    16    dis_loop		push bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  67


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B    17    				
001D8B DD2A CD 28 00       B    18    				ld ix,(dis_addr)				001D90 CD 38 23 00         B    19    				call show_ix					001D94 3E20                B    20    				ld a,' '
001D96 CD 2C 23 00         B    21    				call show_ascii_char
                           B    22    
001D9A FD21 56 23 00       B    23    				ld iy,prefix_bits_loc
001D9F FD360000            B    24    				ld (iy),0						001DA3 CD DF 1D 00         B    25    				call dis_instr					001DA7 DD23                B    26    				inc ix							                           B    27    				
001DA9 3E1A                B    28    				ld a,26							001DAB 32 49 61 00         B    29    				ld (cursor_pos+1),a				001DAF ED4B CD 28 00       B    30    				ld bc,(dis_addr)
001DB4 DD22 CD 28 00       B    31    				ld (dis_addr),ix				001DB9 DDE5                B    32    				push ix
001DBB E1                  B    33    				pop hl
001DBC AF                  B    34    				xor a
001DBD ED42                B    35    				sbc hl,bc						001DBF 7D                  B    36    				ld a,l
001DC0 E607                B    37    				and 7
001DC2 6F                  B    38    				ld l,a
001DC3 0A                  B    39    shexoplp		ld a,(bc)						001DC4 CD 1B 23 00         B    40    				call show_hex_byte
001DC8 3E20                B    41    				ld a,' '
001DCA CD 2C 23 00         B    42    				call show_ascii_char
001DCE 03                  B    43    				inc bc
001DCF 2D                  B    44    				dec l
001DD0 20 F1               B    45    				jr nz,shexoplp
                           B    46    				
001DD2 CD BC 13 00         B    47    				call os_new_line
001DD6 C1                  B    48    				pop bc
001DD7 10 B1               B    49    				djnz dis_loop
                           B    50    
001DD9 CD BC 13 00         B    51    				call os_new_line
001DDD AF                  B    52    				xor a
001DDE C9                  B    53    				ret
                           B    54    
                           B    55    
                           B    56    ;- Handle op code prefixes --------------------
                           B    57    			
       00000000            B    58    cb_prefix			equ 0					
       00000001            B    59    ed_prefix			equ 1
       00000002            B    60    sub_ix_prefix		equ 2
       00000003            B    61    sub_iy_prefix		equ 3
       00000004            B    62    ddcb_fdcb_prefix	equ 4					; p
       00000005            B    63    dot_l_prefix		equ 5
       00000006            B    64    il_prefix			equ 6
       00000007            B    65    show_adl_prefix		equ 7
                           B    66    
       00000000            B    67    adl_dis				equ 0					; b
                           B    68    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  68


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B    69    
001DDF DD7E00              B    70    dis_instr	ld a,(ix)						; c
                           B    71    			
001DE2 FDCB 07 46          B    72    			bit adl_dis,(iy+var_adl)		; i
001DE6 28 04               B    73    			jr z,z80_list					; T
001DE8 FDCB00F6            B    74    			set il_prefix,(iy)				; a
001DEC                     B    75    z80_list			
                           B    76    			
                           B    77    ;----------------------------------------------
                           B    78    
001DEC FE40                B    79    			cp 40h
001DEE 20 0A               B    80    			jr nz,not_sis
001DF0 FDCB00B6            B    81    			res il_prefix,(iy)
001DF4 FDCB00AE            B    82    			res dot_l_prefix,(iy)
001DF8 18 28               B    83    			jr set_adl_pf
                           B    84    			
001DFA FE49                B    85    not_sis		cp 49h
001DFC 20 0A               B    86    			jr nz,not_lis
001DFE FDCB00B6            B    87    			res il_prefix,(iy)
001E02 FDCB00EE            B    88    			set dot_l_prefix,(iy)
001E06 18 1A               B    89    			jr set_adl_pf
                           B    90    			
001E08 FE52                B    91    not_lis		cp 52h
001E0A 20 0A               B    92    			jr nz,not_sil
001E0C FDCB00F6            B    93    			set il_prefix,(iy)
001E10 FDCB00AE            B    94    			res dot_l_prefix,(iy)
001E14 18 0C               B    95    			jr set_adl_pf
                           B    96    			
001E16 FE5B                B    97    not_sil		cp 5bh
001E18 20 11               B    98    			jr nz,not_adl_prefix_byte
001E1A FDCB00F6            B    99    			set il_prefix,(iy)
001E1E FDCB00EE            B   100    			set dot_l_prefix,(iy)
                           B   101    			
001E22 FDCB00FE            B   102    set_adl_pf	set show_adl_prefix,(iy)
001E26 DD23                B   103    			inc ix
001E28 DD7E00              B   104    			ld a,(ix)	
                           B   105    			
                           B   106    ;----------------------------------------------
                           B   107    
001E2B                     B   108    not_adl_prefix_byte			
                           B   109    			
001E2B FECB                B   110    			cp 0cbh								001E2D 20 08               B   111    			jr nz,not_cb
001E2F FDCB00C6            B   112    do_cb		set cb_prefix,(iy)
001E33 DD23                B   113    			inc ix
001E35 18 3A               B   114    			jr not_traditional_prefix_byte
                           B   115    
001E37 FEED                B   116    not_cb		cp 0edh
001E39 20 08               B   117    			jr nz,not_ed
001E3B FDCB00CE            B   118    do_ed		set ed_prefix,(iy)
001E3F DD23                B   119    			inc ix
001E41 18 2E               B   120    			jr not_traditional_prefix_byte
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  69


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   121    
001E43 FEDD                B   122    not_ed		cp 0ddh
001E45 20 18               B   123    			jr nz,not_dd
001E47 CD 7A 20 00         B   124    do_dd		call check_nxt_byte_prefix			001E4B 28 92               B   125    			jr z,dis_instr						001E4D FDCB00D6            B   126    			set sub_ix_prefix,(iy)
001E51 FECB                B   127    xdcb_query	cp 0cbh								001E53 20 1C               B   128    			jr nz,not_traditional_prefix_byte	001E55 FDCB00E6            B   129    			set ddcb_fdcb_prefix,(iy)
001E59 DD23                B   130    			inc ix								001E5B DD23                B   131    			inc ix								001E5D 18 12               B   132    			jr not_traditional_prefix_byte
                           B   133    
001E5F FEFD                B   134    not_dd		cp 0fdh
001E61 20 0E               B   135    			jr nz,not_traditional_prefix_byte
001E63 CD 7A 20 00         B   136    do_fd		call check_nxt_byte_prefix
001E67 CA DF 1D 00         B   137    			jr z,dis_instr	
001E6B FDCB00DE            B   138    			set sub_iy_prefix,(iy)
001E6F 18 E0               B   139    			jr xdcb_query
                           B   140    
001E71                     B   141    not_traditional_prefix_byte
                           B   142    
                           B   143    ;----------------------------------------------
                           B   144    
001E71 DD7E00              B   145    			ld a,(ix)	
001E74 E6C0                B   146    			and 11000000b			; seperate 
001E76 07                  B   147    			rlca
001E77 07                  B   148    			rlca
001E78 FD77 01             B   149    			ld (iy+var_x),a			;var x= val
                           B   150    			
001E7B DD7E00              B   151    			ld a,(ix)
001E7E E638                B   152    			and 00111000b
001E80 CB3F                B   153    			srl a
001E82 CB3F                B   154    			srl a
001E84 CB3F                B   155    			srl a	
001E86 FD77 02             B   156    			ld (iy+var_y),a			;var x = vl
                           B   157    
001E89 DD7E00              B   158    			ld a,(ix)
001E8C E607                B   159    			and 00000111b
001E8E FD77 03             B   160    			ld (iy+var_z),a			;var z = va
                           B   161    			
001E91 DD7E00              B   162    			ld a,(ix)
001E94 E630                B   163    			and 00110000b
001E96 CB3F                B   164    			srl a
001E98 CB3F                B   165    			srl a
001E9A CB3F                B   166    			srl a
001E9C CB3F                B   167    			srl a
001E9E FD77 04             B   168    			ld (iy+var_p),a			; var p = v
                           B   169    			
001EA1 DD7E00              B   170    			ld a,(ix)
001EA4 E608                B   171    			and 00001000b
001EA6 CB3F                B   172    			srl a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  70


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
001EA8 CB3F                B   173    			srl a
001EAA CB3F                B   174    			srl a
001EAC FD77 05             B   175    			ld (iy+var_q),a				;var q 
                           B   176    
001EAF CD 88 20 00         B   177    			call find_instruction_ascii		; g
                           B   178    	
                           B   179    ;----------------------------------------------
                           B   180    
001EB3 78                  B   181    index_table	ld a,b							; a
001EB4 B7                  B   182    			or a
001EB5 28 07               B   183    			jr z,parse_instr				; m
001EB7 CB7E                B   184    d_filp		bit 7,(hl)						; w
001EB9 23                  B   185    			inc hl							; o
001EBA 28 FB               B   186    			jr z,d_filp					
001EBC 10 F9               B   187    			djnz d_filp
                           B   188    										
                           B   189    			
001EBE FD21 56 23 00       B   190    parse_instr	ld iy,opcode_vars
001EC3 01000000            B   191    			ld bc,0
001EC7 7E                  B   192    			ld a,(hl)						;ge
001EC8 FE80                B   193    			cp 80h
001ECA C8                  B   194    			ret z
001ECB E67F                B   195    			and 7fh
                           B   196    			
001ECD FE26                B   197    			cp '&'							;sy
001ECF 20 28               B   198    			jr nz,not_adlsym
001ED1 FDCB007E            B   199    			bit show_adl_prefix,(iy)		;do
001ED5 CA 63 20 00         B   200    			jr z,next_opcode_ascii_char
001ED9 0600                B   201    			ld b,0
001EDB FDCB006E            B   202    			bit dot_l_prefix,(iy)
001EDF 28 02               B   203    			jr z,naplsb
001EE1 CBC0                B   204    			set 0,b
001EE3 FDCB0076            B   205    naplsb		bit il_prefix,(iy)
001EE7 28 02               B   206    			jr z,napmsb
001EE9 CBC8                B   207    			set 1,b
001EEB E5                  B   208    napmsb		push hl
001EEC 21 B5 28 00         B   209    			ld hl,adl_prefix_list
001EF0 CD B3 1E 00         B   210    			call index_table				; r
001EF4 E1                  B   211    			pop hl
001EF5 C3 63 20 00         B   212    			jp next_opcode_ascii_char
                           B   213    
001EF9 FE5E                B   214    not_adlsym	cp '^'							;sy
001EFB 20 0D               B   215    			jr nz,d_not_imm8
001EFD DD23                B   216    			inc ix							;th
001EFF DD7E00              B   217    			ld a,(ix)
001F02 CD 1B 23 00         B   218    			call show_hex_byte
001F06 C3 63 20 00         B   219    			jp next_opcode_ascii_char
                           B   220    					
001F0A FE21                B   221    d_not_imm8	cp '!'							;sy
001F0C 20 26               B   222    			jr nz,d_not_imm16					001F0E 11020000            B   223    			ld de,2
001F12 FDCB0076            B   224    			bit il_prefix,(iy)				;ad
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  71


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
001F16 28 08               B   225    			jr z,imm16
001F18 13                  B   226    			inc de
001F19 DD7E03              B   227    			ld a,(ix+3)
001F1C CD 1B 23 00         B   228    			call show_hex_byte
001F20 DD7E02              B   229    imm16		ld a,(ix+2)						;sh
001F23 CD 1B 23 00         B   230    			call show_hex_byte			
001F27 DD7E01              B   231    			ld a,(ix+1)						;th
001F2A CD 1B 23 00         B   232    			call show_hex_byte
001F2E DD19                B   233    			add ix,de						;ad
001F30 C3 63 20 00         B   234    			jp next_opcode_ascii_char
                           B   235    
001F34 FE2F                B   236    d_not_imm16	cp '/'							;sy
001F36 20 36               B   237    			jr nz,d_not_sb
001F38 FDCB0066            B   238    			bit ddcb_fdcb_prefix,(iy)
001F3C 28 05               B   239    			jr z,norm_dbyte
001F3E DD7EFF              B   240    			ld a,(ix-1)						;if
001F41 18 05               B   241    			jr xdcb_dbyte
001F43 DD23                B   242    norm_dbyte	inc ix
001F45 DD7E00              B   243    			ld a,(ix)						;th
001F48 CB7F                B   244    xdcb_dbyte	bit 7,a
001F4A 20 10               B   245    			jr nz,d_sbin					;sh
001F4C F5                  B   246    			push af
001F4D 3E2B                B   247    			ld a,'+'
001F4F CD 2C 23 00         B   248    			call show_ascii_char
001F53 F1                  B   249    			pop af
001F54 CD 1B 23 00         B   250    			call show_hex_byte
001F58 C3 63 20 00         B   251    			jp next_opcode_ascii_char
001F5C F5                  B   252    d_sbin		push af
001F5D 3E2D                B   253    			ld a,'-'
001F5F CD 2C 23 00         B   254    			call show_ascii_char
001F63 F1                  B   255    			pop af
001F64 ED44                B   256    			neg
001F66 CD 1B 23 00         B   257    			call show_hex_byte
001F6A C3 63 20 00         B   258    			jp next_opcode_ascii_char
                           B   259    			
001F6E FE64                B   260    d_not_sb	cp 'd'							;sy
001F70 20 1E               B   261    			jr nz,d_not_pcdip
001F72 DD23                B   262    			inc ix
001F74 01000000            B   263    			ld bc,0
001F78 DD7E00              B   264    			ld a,(ix)
001F7B CB7F                B   265    			bit 7,a
001F7D 28 01               B   266    			jr z,d_spcd_pos
001F7F 0B                  B   267    			dec bc
001F80 4F                  B   268    d_spcd_pos	ld c,a
001F81 03                  B   269    			inc bc
001F82 DDE5                B   270    			push ix
001F84 DD09                B   271    			add ix,bc
001F86 CD 38 23 00         B   272    			call show_ix
001F8A DDE1                B   273    			pop ix
001F8C C3 63 20 00         B   274    			jp next_opcode_ascii_char
                           B   275    
001F90 FE3E                B   276    d_not_pcdip	cp '>'							;sy
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  72


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
001F92 20 16               B   277    			jr nz,d_not_sdig
001F94 23                  B   278    			inc hl							;th
001F95 01000000            B   279    			ld bc,0
001F99 4E                  B   280    			ld c,(hl)
001F9A FD21 56 23 00       B   281    			ld iy,opcode_vars
001F9F FD09                B   282    			add iy,bc
001FA1 FD7E00              B   283    			ld a,(iy)						;a 
001FA4 C630                B   284    			add a,30h						;co
001FA6 C3 5F 20 00         B   285    			jp d_output_char
                           B   286    
001FAA FE5F                B   287    d_not_sdig	cp '_'
001FAC 20 12               B   288    			jr nz,d_nhlsubst				; s
001FAE E5                  B   289    			push hl
001FAF 21 8D 28 00         B   290    			ld hl,hl_subs
001FB3 CD 6B 20 00         B   291    hl_subst	call prefix_to_offset
001FB7 CD B3 1E 00         B   292    			call index_table				; r
001FBB E1                  B   293    			pop hl
001FBC C3 63 20 00         B   294    			jp next_opcode_ascii_char
                           B   295    			
001FC0 FE7C                B   296    d_nhlsubst	cp '|'
001FC2 20 07               B   297    			jr nz,d_noinvhls
001FC4 E5                  B   298    			push hl
001FC5 21 93 28 00         B   299    			ld hl,inv_hl_subs
001FC9 18 E8               B   300    			jr hl_subst
                           B   301    			
001FCB FE68                B   302    d_noinvhls	cp 'h'							;sy
001FCD 20 07               B   303    			jr nz,d_nhsubst
001FCF E5                  B   304    			push hl
001FD0 21 99 28 00         B   305    			ld hl,h_subs
001FD4 18 DD               B   306    			jr hl_subst
                           B   307    			
001FD6 FE6C                B   308    d_nhsubst	cp 'l'							;sy
001FD8 20 07               B   309    			jr nz,d_nlsubst
001FDA E5                  B   310    			push hl
001FDB 21 A0 28 00         B   311    			ld hl,l_subs
001FDF 18 D2               B   312    			jr hl_subst
                           B   313    			
001FE1 FE24                B   314    d_nlsubst	cp '$'
001FE3 20 07               B   315    			jr nz,d_nihlsubst				; s
001FE5 E5                  B   316    			push hl
001FE6 21 A7 28 00         B   317    			ld hl,ind_hl_subs
001FEA 18 C7               B   318    			jr hl_subst
                           B   319    
                           B   320    
001FEC                     B   321    d_nihlsubst	
                           B   322    
001FEC FE7E                B   323    			cp '~'							; s
001FEE 20 1F               B   324    			jr nz,ntable_r
001FF0 11 E2 27 00         B   325    			ld de,table_r
001FF4 23                  B   326    do_table 	inc hl
001FF5 01000000            B   327    			ld bc,0							; t
001FF9 4E                  B   328    			ld c,(hl)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  73


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
001FFA FD21 56 23 00       B   329    			ld iy,opcode_vars
001FFF FD09                B   330    			add iy,bc
002001 FD4600              B   331    			ld b,(iy)						;in
002004 E5                  B   332    			push hl
002005 EB                  B   333    			ex de,hl
002006 CD B3 1E 00         B   334    			call index_table				; r
00200A E1                  B   335    			pop hl
00200B C3 63 20 00         B   336    			jp next_opcode_ascii_char
                           B   337    			
00200F 11 ED 27 00         B   338    ntable_r	ld de,table_r2					; s
002013 FE3D                B   339    			cp '='
002015 28 DD               B   340    			jr z,do_table
                           B   341    			
002017 11 F8 27 00         B   342    			ld de,table_rp					; s
00201B FE40                B   343    			cp '@'
00201D 28 D5               B   344    			jr z,do_table 
                           B   345    			
00201F 11 FF 27 00         B   346    			ld de,table_rp2					; s
002023 FE2A                B   347    			cp '*'
002025 28 CD               B   348    			jr z,do_table
                           B   349    			
002027 11 65 28 00         B   350    			ld de,table_rp3					; s
00202B FE3C                B   351    			cp '<'
00202D 28 C5               B   352    			jr z,do_table
                           B   353    			
00202F 11 6D 28 00         B   354    			ld de,table_rp4					; s
002033 FE7D                B   355    			cp '}'
002035 28 BD               B   356    			jr z,do_table
                           B   357    			
002037 11 07 28 00         B   358    			ld de,table_cc					; s
00203B FE23                B   359    			cp '#'
00203D 28 B5               B   360    			jr z,do_table 
                           B   361    			
00203F 11 13 28 00         B   362    			ld de,table_alu					; s
002043 FE3A                B   363    			cp ':'
002045 28 AD               B   364    			jr z,do_table 
                           B   365    			
002047 11 3F 28 00         B   366    			ld de,table_rot					; s
00204B FE25                B   367    			cp '%'
00204D 28 A5               B   368    			jr z,do_table 
                           B   369    			
00204F 11 7D 28 00         B   370    			ld de,table_rst					; s
002053 FE3B                B   371    			cp ';'
002055 28 9D               B   372    			jr z,do_table 
                           B   373    
002057 11 75 28 00         B   374    			ld de,table_rp5					; s
00205B FE7B                B   375    			cp '{'
00205D 28 95               B   376    			jr z,do_table 
                           B   377    
00205F                     B   378    ntable_bli
                           B   379    
                           B   380    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  74


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   381    
00205F                     B   382    d_output_char
                           B   383    
00205F CD 2C 23 00         B   384    			call show_ascii_char
                           B   385    
002063                     B   386    next_opcode_ascii_char
                           B   387    
002063 CB7E                B   388    			bit 7,(hl)						;if
002065 C0                  B   389    			ret nz
002066 23                  B   390    			inc hl
002067 C3 BE 1E 00         B   391    			jp parse_instr
                           B   392    			
                           B   393    			
                           B   394    ;----------------------------------------------
                           B   395    
                           B   396    
00206B                     B   397    prefix_to_offset
                           B   398    
00206B 0602                B   399    			ld b,2							;se
00206D FDCB005E            B   400    			bit sub_iy_prefix,(iy)
002071 C0                  B   401    			ret nz
002072 05                  B   402    			dec b
002073 FDCB0056            B   403    			bit sub_ix_prefix,(iy)
002077 C0                  B   404    			ret nz
002078 05                  B   405    			dec b
002079 C9                  B   406    			ret
                           B   407    			
                           B   408    			
00207A                     B   409    check_nxt_byte_prefix			
                           B   410    
00207A DD23                B   411    			inc ix
00207C DD7E00              B   412    			ld a,(ix)
00207F FEDD                B   413    			cp 0ddh
002081 C8                  B   414    			ret z
002082 FEED                B   415    			cp 0edh
002084 C8                  B   416    			ret z
002085 FEFD                B   417    			cp 0fdh
002087 C9                  B   418    			ret
                           B   419    			
                           B   420    			
                           B   421    ;==============================================
                           B   422    ;- Find instruction ascii ---------------------
                           B   423    ;==============================================
                           B   424    
                           B   425    ; Returns HL = ptr to ascii name
                           B   426    ;          B = group index (number of instructi
                           B   427    
002088                     B   428    find_instruction_ascii
                           B   429    
002088 0600                B   430    			ld b,0						; defau
                           B   431    
00208A FDCB0066            B   432    			bit ddcb_fdcb_prefix,(iy)	; Was t
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  75


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
00208E 28 12               B   433    			jr z,not_ddcb_fdcb_inst
002090 21 BC 27 00         B   434    			ld hl,ddcb_fdcb_z6		
002094 FD46 01             B   435    			ld b,(iy+var_x)				; x is 
002097 FD7E 03             B   436    			ld a,(iy+var_z)
00209A FE06                B   437    			cp 6
00209C C8                  B   438    			ret z
00209D 21 84 27 00         B   439    			ld hl,ddcb_fdcb_zn6					0020A1 C9                  B   440    			ret
                           B   441    			
                           B   442    ;==============================================
                           B   443    
0020A2                     B   444    not_ddcb_fdcb_inst
                           B   445    
0020A2 FDCB0046            B   446    			bit cb_prefix,(iy)			;is thi
0020A6 28 08               B   447    			jr z,not_cb_inst
0020A8 21 0C 25 00         B   448    			ld hl,cb_group		
0020AC FD46 01             B   449    			ld b,(iy+var_x)				; x is 
0020AF C9                  B   450    			ret
                           B   451    
                           B   452    ;==============================================
                           B   453    
0020B0                     B   454    not_cb_inst
                           B   455    
0020B0 FDCB004E            B   456    			bit ed_prefix,(iy)			;is thi
0020B4 CA D5 21 00         B   457    			jr z,not_ed_inst
                           B   458    
0020B8 FD7E 01             B   459    			ld a,(iy+var_x)				;x = 0
0020BB B7                  B   460    			or a
0020BC 20 56               B   461    			jr nz,notedx0
                           B   462    		
                           B   463    			
0020BE FD7E 03             B   464    			ld a,(iy+var_z)				
0020C1 B7                  B   465    			or a
0020C2 20 0D               B   466    			jr nz,notedx0z0
0020C4 21 33 25 00         B   467    			ld hl,ed_x0_z0_yn6			;x0 / z
0020C8 FD7E 02             B   468    			ld a,(iy+var_y)
0020CB FE06                B   469    			cp 6
0020CD C0                  B   470    			ret nz
0020CE 0601                B   471    			ld b,1
0020D0 C9                  B   472    			ret
                           B   473    
0020D1 FE01                B   474    notedx0z0	cp 1
0020D3 20 0D               B   475    			jr nz,notedx0z1
0020D5 21 44 25 00         B   476    			ld hl,ed_x0_z1				;x0 / z
0020D9 FD7E 02             B   477    			ld a,(iy+var_y)
0020DC FE06                B   478    			cp 6
0020DE C0                  B   479    			ret nz
0020DF 0601                B   480    			ld b,1
0020E1 C9                  B   481    			ret
                           B   482    
0020E2 FE02                B   483    notedx0z1	cp 2
0020E4 20 05               B   484    			jr nz,notedx0z2
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  76


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0020E6 21 5A 25 00         B   485    			ld hl,ed_x0_z2				;x0 / z
0020EA C9                  B   486    			ret
                           B   487    
0020EB FE03                B   488    notedx0z2	cp 3
0020ED 20 05               B   489    			jr nz,notedx0z3
0020EF 21 66 25 00         B   490    			ld hl,ed_x0_z3				;x0 / z
0020F3 C9                  B   491    			ret
                           B   492    			
0020F4 FE04                B   493    notedx0z3	cp 4
0020F6 20 05               B   494    			jr nz,notedx0z4
0020F8 21 72 25 00         B   495    			ld hl,ed_x0_z4				;x0 / z
0020FC C9                  B   496    			ret
                           B   497    
0020FD FE06                B   498    notedx0z4	cp 6
0020FF 20 05               B   499    			jr nz,notedx0z6				;x0 / z
002101 21 7C 25 00         B   500    			ld hl,ed_x0_z6
002105 C9                  B   501    			ret
                           B   502    
002106 FE07                B   503    notedx0z6	cp 7
002108 C2 DF 27 00         B   504    			jr nz,bad_opcode			;x0 / z
00210C 21 87 25 00         B   505    			ld hl,ed_x0_z7
002110 FD46 05             B   506    			ld b,(iy+var_q)
002113 C9                  B   507    			ret
                           B   508    			
                           B   509    ;----------------------------------------------
                           B   510    			
002114 FE01                B   511    notedx0		cp 1	
002116 20 68               B   512    			jr nz,ed_xn1
                           B   513    
002118 FD7E 03             B   514    			ld a,(iy+var_z)					;x 
00211B B7                  B   515    			or a
00211C 20 0D               B   516    			jr nz,ed_x1_zn0
00211E 21 9C 25 00         B   517    			ld hl,ed_x1_z0_yn6				;z 
002122 FD7E 02             B   518    			ld a,(iy+var_y)
002125 FE06                B   519    			cp 6
002127 C0                  B   520    			ret nz
002128 0601                B   521    			ld b,1
00212A C9                  B   522    			ret
                           B   523    			
00212B FE01                B   524    ed_x1_zn0	cp 1
00212D 20 0D               B   525    			jr nz,ed_x1_zn1
00212F 21 AC 25 00         B   526    			ld hl,ed_x1_z1_yn6				;z 
002133 FD7E 02             B   527    			ld a,(iy+var_y)
002136 FE06                B   528    			cp 6
002138 C0                  B   529    			ret nz
002139 0601                B   530    			ld b,1
00213B C9                  B   531    			ret
                           B   532    		
00213C FE02                B   533    ed_x1_zn1	cp 2
00213E 20 08               B   534    			jr nz,ed_x1_zn2					;z 
002140 21 C1 25 00         B   535    			ld hl,ed_x1_z2	
002144 FD46 05             B   536    			ld b,(iy+var_q)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  77


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002147 C9                  B   537    			ret
                           B   538    
002148 FE03                B   539    ed_x1_zn2	cp 3
00214A 20 08               B   540    			jr nz,ed_x1_zn3					;z 
00214C 21 D7 25 00         B   541    			ld hl,ed_x1_z3	
002150 FD46 05             B   542    			ld b,(iy+var_q)
002153 C9                  B   543    			ret
                           B   544    			
002154 FE04                B   545    ed_x1_zn3	cp 4							;z 
002156 20 08               B   546    			jr nz,ed_x1_zn4
002158 21 EC 25 00         B   547    			ld hl,ed_x1_z4
00215C FD46 02             B   548    			ld b,(iy+var_y)
00215F C9                  B   549    			ret
                           B   550    			
002160 FE05                B   551    ed_x1_zn4	cp 5
002162 20 08               B   552    			jr nz,ed_x1_zn5
002164 21 24 26 00         B   553    			ld hl,ed_x1_z5					;z 
002168 FD46 02             B   554    			ld b,(iy+var_y)
00216B C9                  B   555    			ret
                           B   556    			
00216C FE06                B   557    ed_x1_zn5	cp 6
00216E 20 08               B   558    			jr nz,ed_x1_zn6					;z=
002170 21 53 26 00         B   559    			ld hl,ed_x1_z6
002174 FD46 02             B   560    			ld b,(iy+var_y)
002177 C9                  B   561    			ret
                           B   562    			
002178 21 78 26 00         B   563    ed_x1_zn6	ld hl,ed_x1_z7					;z=
00217C FD46 02             B   564    			ld b,(iy+var_y)
00217F C9                  B   565    			ret
                           B   566    
                           B   567    ;----------------------------------------------
                           B   568    				
002180 FE02                B   569    ed_xn1		cp 2
002182 20 2E               B   570    			jr nz,ed_xn2
                           B   571    			
002184 FD46 02             B   572    			ld b,(iy+var_y)
002187 FD7E 03             B   573    			ld a,(iy+var_z)
00218A B7                  B   574    			or a
00218B 20 05               B   575    			jr nz,edx2zn0
00218D 21 9C 26 00         B   576    			ld hl,ed_x2_z0					;x=
002191 C9                  B   577    			ret
                           B   578    
002192 FE01                B   579    edx2zn0		cp 1
002194 20 05               B   580    			jr nz,edx2zn1
002196 21 B6 26 00         B   581    			ld hl,ed_x2_z1					;x=
00219A C9                  B   582    			ret
                           B   583    
00219B FE02                B   584    edx2zn1		cp 2
00219D 20 05               B   585    			jr nz,edx2zn2
00219F 21 D0 26 00         B   586    			ld hl,ed_x2_z2					;x=
0021A3 C9                  B   587    			ret
                           B   588    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  78


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0021A4 FE03                B   589    edx2zn2		cp 3
0021A6 20 05               B   590    			jr nz,edx2zn3
0021A8 21 00 27 00         B   591    			ld hl,ed_x2_z3					;x=
0021AC C9                  B   592    			ret
                           B   593    
0021AD 21 32 27 00         B   594    edx2zn3		ld hl,ed_x2_z4					;x=
0021B1 C9                  B   595    			ret
                           B   596    
                           B   597    ;----------------------------------------------
                           B   598    
0021B2 FE03                B   599    ed_xn2		cp 3
0021B4 20 18               B   600    			jr nz,ed_xn3
                           B   601    			
0021B6 FD46 02             B   602    			ld b,(iy+var_y)
0021B9 FD7E 03             B   603    			ld a,(iy+var_z)
0021BC FE02                B   604    			cp 2
0021BE 20 05               B   605    			jr nz,edx3zn2
0021C0 21 68 27 00         B   606    			ld hl,ed_x3_z2					;x=
0021C4 C9                  B   607    			ret
0021C5 FE03                B   608    edx3zn2		cp 3
0021C7 20 05               B   609    			jr nz,edx3zn3
0021C9 21 76 27 00         B   610    			ld hl,ed_x3_z3					;x=
0021CD C9                  B   611    			ret
                           B   612    
0021CE                     B   613    edx3zn3
                           B   614    
0021CE                     B   615    ed_xn3
                           B   616    
                           B   617    ;----------------------------------------------
                           B   618    
0021CE                     B   619    invalid_op
0021CE 21 DF 27 00         B   620    			ld hl,bad_opcode				; x
0021D2 0600                B   621    			ld b,0
0021D4 C9                  B   622    			ret
                           B   623    			
                           B   624    			
                           B   625    ;========= UNPREFIXED INSTRUCTION =============
                           B   626    
                           B   627    
0021D5 FD7E 01             B   628    not_ed_inst	ld a,(iy+var_x)				; is X 
0021D8 B7                  B   629    			or a
0021D9 C2 71 22 00         B   630    			jr nz,x_not_zero
                           B   631    
                           B   632    ;----------------------------------------------
                           B   633    
                           B   634    
0021DD FD7E 03             B   635    			ld a,(iy+var_z)				;x = 0
0021E0 B7                  B   636    			or a
0021E1 20 14               B   637    			jr nz,x0_z_not_zero
0021E3 21 5E 23 00         B   638    			ld hl,x0_z0
0021E7 FD7E 02             B   639    			ld a,(iy+var_y)				;y is t
0021EA 47                  B   640    			ld b,a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  79


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0021EB D604                B   641    			sub 4
0021ED FD77 06             B   642    			ld (iy+var_calc),a			;var_ca
0021F0 78                  B   643    			ld a,b
0021F1 FE04                B   644    			cp 4
0021F3 D8                  B   645    			ret c
0021F4 0604                B   646    			ld b,4						;if y >
0021F6 C9                  B   647    			ret
                           B   648    			
0021F7                     B   649    x0_z_not_zero		
                           B   650    			
0021F7 FE01                B   651    			cp 1
0021F9 20 1A               B   652    			jr nz,x0_z_not_one
0021FB FD7E 02             B   653    			ld a,(iy+var_y)				;x=0/z=
0021FE FE06                B   654    			cp 6
002200 20 0B               B   655    			jr nz,x0z1yn6
002202 CD 11 23 00         B   656    			call test_ixiy_prefix		;if y=6
002206 28 05               B   657    			jr z,x0z1yn6				;altern
002208 21 91 23 00         B   658    			ld hl,x0_z1_y6
00220C C9                  B   659    			ret
                           B   660    
00220D 21 7E 23 00         B   661    x0z1yn6		ld hl,x0_z1					;x=0, z
002211 FD46 05             B   662    			ld b,(iy+var_q)				;q is t
002214 C9                  B   663    			ret 
                           B   664    			
002215                     B   665    x0_z_not_one
                           B   666    
002215 FE02                B   667    			cp 2
002217 20 08               B   668    			jr nz,x0_z_not_two
002219 21 99 23 00         B   669    			ld hl,x0_z2
00221D FD46 02             B   670    			ld b,(iy+var_y)				;y is t
002220 C9                  B   671    			ret
                           B   672    			
002221                     B   673    x0_z_not_two
                           B   674    
002221 FE03                B   675    			cp 3
002223 20 08               B   676    			jr nz,x0_z_not_three
002225 21 E5 23 00         B   677    			ld hl,x0_z3
002229 FD46 05             B   678    			ld b,(iy+var_q)				;q is t
00222C C9                  B   679    			ret
                           B   680    			
00222D                     B   681    x0_z_not_three
                           B   682    
00222D FE04                B   683    			cp 4
00222F 20 05               B   684    			jr nz,x0_z_not_four
002231 21 F5 23 00         B   685    			ld hl,x0_z4					;no ini
002235 C9                  B   686    			ret			
                           B   687    			
002236                     B   688    x0_z_not_four
                           B   689    
002236 FE05                B   690    			cp 5
002238 20 05               B   691    			jr nz,x0_z_not_five
00223A 21 FD 23 00         B   692    			ld hl,x0_z5					;no ini
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  80


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
00223E C9                  B   693    			ret				
                           B   694    			
00223F                     B   695    x0_z_not_five
                           B   696    
00223F FE06                B   697    			cp 6
002241 20 1A               B   698    			jr nz,x0_z_not_six
002243 21 05 24 00         B   699    			ld hl,x0_z6					;normal
002247 FD7E 02             B   700    			ld a,(iy+var_y)
00224A FE07                B   701    			cp 7
00224C C0                  B   702    			ret nz
00224D FDCB0056            B   703    			bit sub_ix_prefix,(iy)
002251 20 05               B   704    			jr nz,altx0z6
002253 FDCB005E            B   705    			bit sub_iy_prefix,(iy)
002257 C8                  B   706    			ret z	
002258 21 0E 24 00         B   707    altx0z6		ld hl,alt_x0_z6				;if dd/
00225C C9                  B   708    			ret
                           B   709    
                           B   710    
00225D                     B   711    x0_z_not_six
                           B   712    			
00225D 21 16 24 00         B   713    			ld hl,x0_z7					;x=0, z
002261 FD46 02             B   714    			ld b,(iy+var_y)				;y is n
002264 CD 11 23 00         B   715    			call test_ixiy_prefix
002268 C8                  B   716    			ret z
002269 21 30 24 00         B   717    altx0z7		ld hl,alt_x0_z7				;if dd/
00226D FD46 05             B   718    			ld b,(iy+var_q)				;this i
002270 C9                  B   719    			ret
                           B   720    
                           B   721    ;----------------------------------------------
                           B   722    
002271 FE01                B   723    x_not_zero	cp 1						; is x 
002273 20 32               B   724    			jr nz,x_not_one
                           B   725    			
002275 21 42 24 00         B   726    			ld hl,x1_table				; x=1
002279 CD 11 23 00         B   727    			call test_ixiy_prefix
00227D 20 11               B   728    			jr nz,pref_x1
00227F FD7E 02             B   729    			ld a,(iy+var_y)
002282 FE06                B   730    			cp 6
002284 C0                  B   731    			ret nz
002285 FD7E 03             B   732    			ld a,(iy+var_z)
002288 FE06                B   733    			cp 6
00228A C0                  B   734    			ret nz
00228B 21 60 24 00         B   735    			ld hl,x1_y6_z6				;if y=6
00228F C9                  B   736    			ret
                           B   737    
002290 FD7E 02             B   738    pref_x1		ld a,(iy+var_y)				
002293 FE06                B   739    			cp 6
002295 20 05               B   740    			jr nz,x1yn6
002297 21 4C 24 00         B   741    			ld hl,x1_y6
00229B C9                  B   742    			ret
                           B   743    			
00229C FD7E 03             B   744    x1yn6		ld a,(iy+var_z)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  81


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
00229F FE06                B   745    			cp 6
0022A1 C0                  B   746    			ret nz
0022A2 21 56 24 00         B   747    			ld hl,x1_z6
0022A6 C9                  B   748    			ret
                           B   749    			
                           B   750    ;----------------------------------------------
                           B   751    			
0022A7 FE02                B   752    x_not_one	cp 2						; is x 
0022A9 20 05               B   753    			jr nz,x_not_two
0022AB 21 64 24 00         B   754    			ld hl,x2_table				; no in
0022AF C9                  B   755    			ret
                           B   756    			
                           B   757    ;----------------------------------------------
                           B   758    
0022B0 FD7E 03             B   759    x_not_two	ld a,(iy+var_z)				; x mus
0022B3 B7                  B   760    			or a
0022B4 20 05               B   761    			jr nz,x3_z_not_zero
0022B6 21 69 24 00         B   762    			ld hl,x3_z0					; no in
0022BA C9                  B   763    			ret
                           B   764    						
0022BB                     B   765    x3_z_not_zero
                           B   766    
0022BB FE01                B   767    			cp 1
0022BD 20 11               B   768    			jr nz,x3_z_not_one
0022BF 21 71 24 00         B   769    			ld hl,x3_z1_q0
0022C3 FD7E 05             B   770    			ld a,(iy+var_q)
0022C6 B7                  B   771    			or a
0022C7 C8                  B   772    			ret z						; no in
0022C8 21 79 24 00         B   773    			ld hl,x3_z1_q1
0022CC FD46 04             B   774    			ld b,(iy+var_p)				; index
0022CF C9                  B   775    			ret
                           B   776    
0022D0                     B   777    x3_z_not_one
                           B   778    
0022D0 FE02                B   779    			cp 2
0022D2 20 05               B   780    			jr nz,x3_z_not_two
0022D4 21 90 24 00         B   781    			ld hl,x3_z2					;no ini
0022D8 C9                  B   782    			ret
                           B   783    
0022D9                     B   784    x3_z_not_two
                           B   785    
0022D9 FE03                B   786    			cp 3
0022DB 20 08               B   787    			jr nz,x3_z_not_three
0022DD 21 99 24 00         B   788    			ld hl,x3_z3
0022E1 FD46 02             B   789    			ld b,(iy+var_y)				;index 
0022E4 C9                  B   790    			ret
                           B   791    
0022E5                     B   792    x3_z_not_three
                           B   793    
0022E5 FE04                B   794    			cp 4
0022E7 20 05               B   795    			jr nz,x3_z_not_four
0022E9 21 CE 24 00         B   796    			ld hl,x3_z4				;no initial
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  82


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0022ED C9                  B   797    			ret						
                           B   798    
                           B   799    
0022EE                     B   800    x3_z_not_four
                           B   801    
0022EE FE05                B   802    			cp 5
0022F0 20 11               B   803    			jr nz,x3_z_not_five
0022F2 21 D9 24 00         B   804    			ld hl,x3_z5_q0
0022F6 FD7E 05             B   805    			ld a,(iy+var_q)
0022F9 B7                  B   806    			or a
0022FA C8                  B   807    			ret z						;no ind
0022FB 21 E2 24 00         B   808    			ld hl,x3_z5_q1
0022FF FD46 04             B   809    			ld b,(iy+var_p)				;else i
002302 C9                  B   810    			ret
                           B   811    
002303                     B   812    x3_z_not_five
                           B   813    
002303 FE06                B   814    			cp 6
002305 20 05               B   815    			jr nz,x3_z_not_six
002307 21 00 25 00         B   816    			ld hl,x3_z6					;no ind
00230B C9                  B   817    			ret
                           B   818    
00230C                     B   819    x3_z_not_six
                           B   820    
00230C 21 04 25 00         B   821    			ld hl,x3_z7					;x=3, z
002310 C9                  B   822    			ret
                           B   823    
                           B   824    
                           B   825    ;==============================================
                           B   826    
002311                     B   827    test_ixiy_prefix
                           B   828    
002311 FDCB0056            B   829    			bit sub_ix_prefix,(iy)
002315 C0                  B   830    			ret nz
002316 FDCB005E            B   831    			bit sub_iy_prefix,(iy)
00231A C9                  B   832    			ret
                           B   833    			
                           B   834    ;==============================================
                           B   835    
                           B   836    
00231B                     B   837    show_hex_byte
                           B   838    
00231B E5                  B   839    			push hl
00231C 21 C8 28 00         B   840    			ld hl,output_byte_txt
002320 E5                  B   841    			push hl
002321 CD 5F 10 00         B   842    			call hexbyte_to_ascii
002325 E1                  B   843    			pop hl
002326 CD 1C 0F 00         B   844    			call os_print_string
00232A E1                  B   845    			pop hl
00232B C9                  B   846    			ret
                           B   847    			
                           B   848    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  83


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
00232C                     B   849    show_ascii_char
                           B   850    
00232C E5                  B   851    			push hl
00232D 21 CB 28 00         B   852    			ld hl,output_char_txt
002331 77                  B   853    			ld (hl),a
002332 CD 1C 0F 00         B   854    			call os_print_string
002336 E1                  B   855    			pop hl
002337 C9                  B   856    			ret
                           B   857    		
                           B   858    		
002338 DD22 C5 28 00       B   859    show_ix		ld (d_work_address),ix
00233D 3A C7 28 00         B   860    			ld a,(d_work_address+2)
002341 CD 1B 23 00         B   861    			call show_hex_byte
002345 3A C6 28 00         B   862    			ld a,(d_work_address+1)
002349 CD 1B 23 00         B   863    			call show_hex_byte
00234D 3A C5 28 00         B   864    			ld a,(d_work_address)
002351 CD 1B 23 00         B   865    			call show_hex_byte
002355 C9                  B   866    			ret
                           B   867    			
                           B   868    ;----------------------------------------------
                           B   869    
                           B   870    ; SYMBOLS:
                           B   871    
                           B   872    ; #  CC_table
                           B   873    ; ~  r table (registers)
                           B   874    ; =  r2 table (registers 2)
                           B   875    ; @  RP table (register pairs 1)
                           B   876    ; *  RP2 table (registers pairs 2)
                           B   877    ; :  ALU table
                           B   878    ; %  ROT table
                           B   879    ; _  HL,IX/IY substitute selected by prefix
                           B   880    ; |  HL, IY/IX substitute based on prefix (IX/I
                           B   881    ; $  (HL),(IX+d),(IY+d) substitute selected by 
                           B   882    ; h  H,IXH/IYH substitute selected by prefix
                           B   883    ; l  L,IXL,IYL substitute selected by prefix
                           B   884    ; &  ADL prefix 
                           B   885    
                           B   886    ; ^   n (8 bit immediate)
                           B   887    ; !   nn (16 or 24 bit immediate)
                           B   888    ; d   8 bit signed jump displacement from PC
                           B   889    ; /   8 bit signed byte used for IX+d, IY+d ins
                           B   890    ; >   single digit used by BIT,SET,RES instruct
                           B   891    ; <   RP3 table (register pairs 3)
                           B   892    ; }   RP4 table (register pairs 4)
                           B   893    ; ;   RST table
                           B   894    ; {   RP5 table (register pairs 5)
                           B   895    
002356                     B   896    opcode_vars
                           B   897    
002356 00                  B   898    prefix_bits_loc	db 0	
002357 00                  B   899    var_x_loc		db 0	
002358 00                  B   900    var_y_loc		db 0	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  84


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002359 00                  B   901    var_z_loc		db 0	
00235A 00                  B   902    var_p_loc		db 0	
00235B 00                  B   903    var_q_loc		db 0
00235C 00                  B   904    var_calc_loc	db 0
00235D 01                  B   905    var_adl_loc		db 1
                           B   906    
       00000000            B   907    prefix_bits		equ opcode_vars-prefix_bits_loc
       00000001            B   908    var_x			equ var_x_loc-opcode_vars
       00000002            B   909    var_y			equ var_y_loc-opcode_vars
       00000003            B   910    var_z			equ var_z_loc-opcode_vars
       00000004            B   911    var_p			equ var_p_loc-opcode_vars
       00000005            B   912    var_q			equ var_q_loc-opcode_vars
       00000006            B   913    var_calc		equ var_calc_loc-opcode_vars
       00000007            B   914    var_adl			equ var_adl_loc-opcode_vars
                           B   915    
                           B   916    ;---- Unprefixed opcodes ----------------------
                           B   917    
                           B   918    
00235E 4E4FD0              B   919    x0_z0		db 'NO','P'+80h				; y0
002361 45582041 462C4146   B   920    			db 'EX AF,AF',27h+80h		; y1 
002369 A7 
00236A 444A4E5A 206480     B   921    			db 'DJNZ ','d',80h			; y2
002371 4A522064 80         B   922    			db 'JR ','d',80h			; y3
002376 4A522023 06 2C6480   B   923    			db 'JR #',var_calc,',d',80h	; y4-y7
                           B   924    			
00237E 4C442620 40 04      B   925    x0_z1		db 'LD& @',var_p,',!',80h	; q=0
002384 2C2180 
002387 41444426 205F2C40   B   926    			db 'ADD& _,@',var_p,80h		; q=1
00238F 04 80 
002391 4C442620 7C2C2480   B   927    x0_z1_y6	db 'LD& |,$',80h
                           B   928    
002399 4C442620 28424329   B   929    x0_z2		db 'LD& (BC),','A'+80h		;y=0
0023A1 2CC1 
0023A3 4C442620 412C2842   B   930    			db 'LD& A,(BC',')'+80h		;y=1
0023AB 43A9 
0023AD 4C442620 28444529   B   931    			db 'LD& (DE),','A'+80h		;y=2
0023B5 2CC1 
0023B7 4C442620 412C2844   B   932    			db 'LD& A,(DE',')'+80h		;y=3
0023BF 45A9 
0023C1 4C442620 2821292C   B   933    			db 'LD& (!),','_'+80h		;y=4
0023C9 DF 
0023CA 4C442620 5F2C2821   B   934    			db 'LD& _,(!',')'+80h		;y=5
0023D2 A9 
0023D3 4C442620 2821292C   B   935    			db 'LD& (!),','A'+80h		;y=6
0023DB C1 
0023DC 4C442620 412C2821   B   936    			db 'LD& A,(!',')'+80h		;y=7
0023E4 A9 
                           B   937    
0023E5 494E4326 2040 04    B   938    x0_z3		db 'INC& @',var_p,80h		;q=0
0023EC 80 
0023ED 44454326 2040 04    B   939    			db 'DEC& @',var_p,80h		;q=1
0023F4 80 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  85


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   940    			
0023F5 494E4326 207E 02    B   941    x0_z4		db 'INC& ~',var_y,80h		
0023FC 80 
                           B   942    
0023FD 44454326 207E 02    B   943    x0_z5		db 'DEC& ~',var_y,80h		
002404 80 
                           B   944    			
002405 4C442620 7E 02      B   945    x0_z6		db 'LD& ~',var_y,',^',80h	
00240B 2C5E80 
00240E 4C442620 242C7C80   B   946    alt_x0_z6	db 'LD& $,|',80h			; when 
                           B   947    		
002416 524C43C1            B   948    x0_z7		db 'RLC','A'+80h		;y=0
00241A 525243C1            B   949    			db 'RRC','A'+80h		;y=1
00241E 524CC1              B   950    			db 'RL','A'+80h			;y=2
002421 5252C1              B   951    			db 'RR','A'+80h			;y=3
002424 4441C1              B   952    			db 'DA','A'+80h			;y=4
002427 4350CC              B   953    			db 'CP','L'+80h			;y=5
00242A 5343C6              B   954    			db 'SC','F'+80h			;y=6 (and n
00242D 4343C6              B   955    			db 'CC','F'+80h			;y=7 (and n
                           B   956    			
002430 4C442620 7B 04      B   957    alt_x0_z7	db 'LD& {',var_p,',$',80h	;q=0 (D
002436 2C2480 
002439 4C442620 242C7B 04   B   958    			db 'LD& $,{',var_p,80h		;q=1 (D
002441 80 
                           B   959    		
                           B   960    
                           B   961    
002442 4C442620 7E 02      B   962    x1_table	db 'LD& ~',var_y,',~',var_z,80h	
002448 2C7E 03 80 
00244C 4C442620 7E 02      B   963    x1_y6	 	db 'LD& ~',var_y,',=',var_z,80h		002452 2C3D 03 80 
002456 4C442620 3D 02      B   964    x1_z6		db 'LD& =',var_y,',~',var_z,80h		00245C 2C7E 03 80 
                           B   965    
002460 48414CD4            B   966    x1_y6_z6	db 'HAL','T'+80h
                           B   967    
                           B   968    
                           B   969    
002464 3A 02 7E 03 80      B   970    x2_table	db ':',var_y,'~',var_z,80h			                           B   971    			
                           B   972    		
                           B   973    		
002469 52455426 2023 02    B   974    x3_z0		db 'RET& #',var_y,80h
002470 80 
                           B   975    
002471 504F5026 202A 04    B   976    x3_z1_q0	db 'POP& *',var_p,80h			
002478 80 
002479 52455426 80         B   977    x3_z1_q1	db 'RET','&',80h		;p=0
00247E 4558D8              B   978    			db 'EX','X'+80h			;p=1
002481 4A502620 5F80       B   979    			db 'JP& _',80h			;p=2
002487 4C442620 53502C5F   B   980    			db 'LD& SP,_',80h		;p=3
00248F 80 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  86


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   981    
002490 4A502620 23 02      B   982    x3_z2		db 'JP& #',var_y,',!',80h		
002496 2C2180 
                           B   983    
002499 4A502620 2180       B   984    x3_z3		db 'JP& !',80h			;y = 0
00249F 43422070 667880     B   985    			db 'CB pfx',80h			;y = 1
0024A6 4F555420 285E292C   B   986    			db 'OUT (^),','A'+80h	;y = 2
0024AE C1 
0024AF 494E2041 2C285EA9   B   987    			db 'IN A,(^',')'+80h	;y = 3
0024B7 45582620 28535029   B   988    			db 'EX& (SP),','_',80h	;y = 4
0024BF 2C5F80 
0024C2 45582044 452C48CC   B   989    			db 'EX DE,H','L'+80h	;y = 5
0024CA 44C9                B   990    			db 'D','I'+80h			;y = 6
0024CC 45C9                B   991    			db 'E','I'+80h			;y = 7
                           B   992    
0024CE 43414C4C 262023 02   B   993    x3_z4		db 'CALL& #',var_y,',!',80h
0024D6 2C2180 
                           B   994    
0024D9 50555348 26202A 04   B   995    x3_z5_q0	db 'PUSH& *',var_p,80h			
0024E1 80 
0024E2 43414C4C 26202180   B   996    x3_z5_q1	db 'CALL& !',80h			;p=0
0024EA 44442070 667880     B   997    			db 'DD pfx',80h			;p=1
0024F1 45442070 667880     B   998    			db 'ED pfx',80h			;p=2
0024F8 20464420 70667880   B   999    			db' FD pfx',80h			;p=3
                           B  1000    
002500 3A 02 5E80          B  1001    x3_z6		db ':',var_y,'^',80h	;ALU_table(
                           B  1002    
002504 52535426 203B 02    B  1003    x3_z7		db 'RST& ;',var_y,80h		; rst_t
00250B 80 
                           B  1004    
                           B  1005    
                           B  1006    ;--- CB - Prefixed op-codes--------------------
                           B  1007    
                           B  1008    
00250C 25 02 207E 03 80    B  1009    cb_group		db '%',var_y,' ~',var_z,80h		002512 42495426 203E 02    B  1010    				db 'BIT& >',var_y,',~',var_z,80
002519 2C7E 03 80 
00251D 52455326 203E 02    B  1011    				db 'RES& >',var_y,',~',var_z,80
002524 2C7E 03 80 
002528 53455426 203E 02    B  1012    				db 'SET& >',var_y,',~',var_z,80
00252F 2C7E 03 80 
                           B  1013    
                           B  1014    
                           B  1015    ;---- ED - Prefixed op-codes-------------------
                           B  1016    
002533 494E3020 7E 02      B  1017    ed_x0_z0_yn6	db 'IN0 ~',var_y,',(^',')'+80h
002539 2C285EA9 
00253D 494E3020 285EA9     B  1018    ed_x0_z0_y6		db 'IN0 (^',')'+80h	
                           B  1019    
002544 4F555430 20285E29   B  1020    ed_x0_z1		db 'OUT0 (^),~',var_y,80h		00254C 2C7E 02 80 
002550 4C442620 49592C28   B  1021    				db 'LD& IY,(_',')'+80h			Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  87


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002558 5FA9 
                           B  1022    
00255A 4C454126 203C 04    B  1023    ed_x0_z2		db 'LEA& <',var_p,',IX/',80h	002561 2C49582F 80 
002566 4C454126 207D 04    B  1024    ed_x0_z3		db 'LEA& }',var_p,',IY/',80h
00256D 2C49592F 80 
002572 54535426 20412C7E   B  1025    ed_x0_z4		db 'TST& A,~',var_y,80h
00257A 02 80 
                           B  1026    
00257C 4C442620 285F292C   B  1027    ed_x0_z6		db 'LD& (_),}',var_p,80h
002584 7D 04 80 
                           B  1028    
002587 4C442620 3C 04      B  1029    ed_x0_z7		db 'LD& <',var_p,',(_',')'+80h	00258D 2C285FA9 
002591 4C442620 285F292C   B  1030    				db 'LD& (_),<',var_p,80h		002599 3C 04 80 
                           B  1031    
00259C 494E207E 02         B  1032    ed_x1_z0_yn6	db 'IN ~',var_y,',(BC',')'+80h
0025A1 2C284243 A9 
0025A6 494E2028 43A9       B  1033    ed_x1_z0_y6		db 'IN (C',')'+80h
                           B  1034    
0025AC 4F555420 28424329   B  1035    ed_x1_z1_yn6	db 'OUT (BC),~',var_y,80h
0025B4 2C7E 02 80 
0025B8 4F555420 2843292C   B  1036    ed_x1_z1_y6		db 'OUT (C),','0'+80h
0025C0 B0 
                           B  1037    
0025C1 53424326 20484C2C   B  1038    ed_x1_z2		db 'SBC& HL,@',var_p,80h		0025C9 40 04 80 
0025CC 41444326 20484C2C   B  1039    				db 'ADC& HL,@',var_p,80h		0025D4 40 04 80 
                           B  1040    
0025D7 4C442620 2821292C   B  1041    ed_x1_z3		db 'LD& (!),@',var_p,80h		0025DF 40 04 80 
0025E2 4C442620 40 04      B  1042    				db 'LD& @',var_p,',(!',')'+80h	0025E8 2C2821A9 
                           B  1043    
0025EC 4E45C7              B  1044    ed_x1_z4		db 'NE','G'+80h				;y=
0025EF 4D4C5420 42C3       B  1045    				db 'MLT B','C'+80h			;y=
0025F5 4C454126 2049582C   B  1046    				db 'LEA& IX,IY/',80h			0025FD 49592F80 
002601 4D4C5420 44C5       B  1047    				db 'MLT D','E'+80h			;y=
002607 54535426 20412C5E   B  1048    				db 'TST& A,^',80h			;y=
00260F 80 
002610 4D4C5420 48CC       B  1049    				db 'MLT H','L'+80h			;y=
002616 54535449 4F205E80   B  1050    				db 'TSTIO ^',80h			;y=
00261E 4D4C5420 53D0       B  1051    				db 'MLT S','P'+80h 			;y=
                           B  1052    
002624 5245544E 2680       B  1053    ed_x1_z5		db 'RETN&',80h				;y=
00262A 52455449 2680       B  1054    				db 'RETI&',80h				;y=
002630 4C454126 2049592C   B  1055    				db 'LEA& IY,IX/',80h		;y=
002638 49582F80 
00263C BF                  B  1056    				db '?'+80h					;y=
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  88


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
00263D 50454126 2049582F   B  1057    				db 'PEA& IX/',80h			;y=
002645 80 
002646 4C44204D 422CC1     B  1058    				db 'LD MB,','A'+80h			;y=
00264D BF                  B  1059    				db '?'+80h					;y=
00264E 53544D49 D8         B  1060    				db 'STMI','X'+80h			;y=
                           B  1061    				
                           B  1062    	
002653 494D20B0            B  1063    ed_x1_z6		db 'IM ','0'+80h			;y=
002657 BF                  B  1064    				db '?'+80h					;y=
002658 494D20B1            B  1065    				db 'IM ','1'+80h			;y=
00265C 494D20B2            B  1066    				db 'IM ','2'+80h			;y=
002660 50454126 2049592F   B  1067    				db 'PEA& IY/',80h			;y=
002668 80 
002669 4C442041 2C4DC2     B  1068    				db 'LD A,','M','B'+80h		;y=
002670 534CD0              B  1069    				db 'SL','P'+80h				;y=
002673 52534D49 D8         B  1070    				db 'RSMI','X'+80h			;y=
                           B  1071    
002678 4C442049 2CC1       B  1072    ed_x1_z7		db 'LD I,','A'+80h			;y=
00267E 4C442052 2CC1       B  1073    				db 'LD R,','A'+80h			;y=
002684 4C442041 2CC9       B  1074    				db 'LD A,','I'+80h			;y=
00268A 4C442041 2CD2       B  1075    				db 'LD A,','R'+80h			;y=
002690 5252C4              B  1076    				db 'RR','D'+80h				;y=
002693 524CC4              B  1077    				db 'RL','D'+80h				;y=
002696 4E4FD0              B  1078    				db 'NO','P'+80h				;y=
002699 4E4FD0              B  1079    				db 'NO','P'+80h				;y=
                           B  1080    
                           B  1081    
00269C BFBFBFBF            B  1082    ed_x2_z0		db '?'+80h,'?'+80h,'?'+80h,'?'+
0026A0 4C444926 80         B  1083    				db 'LDI&',80h					0026A5 4C444426 80         B  1084    				db 'LDD&',80h					0026AA 4C444952 2680       B  1085    				db 'LDIR&',80h					0026B0 4C444452 2680       B  1086    				db 'LDDR&',80h					                           B  1087    
0026B6 BFBFBFBF            B  1088    ed_x2_z1		db '?'+80h,'?'+80h,'?'+80h,'?'+
0026BA 43504926 80         B  1089    				db 'CPI&',80h					0026BF 43504426 80         B  1090    				db 'CPD&',80h					0026C4 43504952 2680       B  1091    				db 'CPIR&',80h					0026CA 43504452 2680       B  1092    				db 'CPDR&',80h					                           B  1093    
0026D0 494E494D 2680       B  1094    ed_x2_z2		db 'INIM&',80h		; y0	
0026D6 494E444D 2680       B  1095    				db 'INDM&',80h		; y1
0026DC 494E494D 522680     B  1096    				db 'INIMR&',80h		; y2
0026E3 494E444D 522680     B  1097    				db 'INDMR&',80h		; y3
0026EA 494E4926 80         B  1098    				db 'INI&',80h		; y4
0026EF 494E4426 80         B  1099    				db 'IND&',80h		; y5
0026F4 494E4952 2680       B  1100    				db 'INIR&',80h		; y6
0026FA 494E4452 2680       B  1101    				db 'INDR&',80h		; y7
                           B  1102    
                           B  1103    
002700 4F54494D 2680       B  1104    ed_x2_z3		db 'OTIM&',80h		; y0
002706 4F54444D 2680       B  1105    				db 'OTDM&',80h		; y1
00270C 4F54494D 522680     B  1106    				db 'OTIMR&',80h		; y2
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  89


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002713 4F54444D 522680     B  1107    				db 'OTDMR&',80h		; y3
00271A 4F555449 2680       B  1108    				db 'OUTI&',80h		; y4
002720 4F555444 2680       B  1109    				db 'OUTD&',80h		; y5
002726 4F544952 2680       B  1110    				db 'OTIR&',80h		; y6
00272C 4F544452 2680       B  1111    				db 'OTDR&',80h		; y7
                           B  1112    
002732 494E4932 2680       B  1113    ed_x2_z4		db 'INI2&',80h		; y0
002738 494E4432 2680       B  1114    				db 'IND2&',80h		; y1
00273E 494E4932 522680     B  1115    				db 'INI2R&',80h		; y2
002745 494E4432 522680     B  1116    				db 'IND2R&',80h		; y3
00274C 4F555449 322680     B  1117    				db 'OUTI2&',80h		; y4
002753 4F555444 322680     B  1118    				db 'OUTD2&',80h		; y5
00275A 4F544932 522680     B  1119    				db 'OTI2R&',80h		; y6
002761 4F544432 522680     B  1120    				db 'OTD2R&',80h		; y7
                           B  1121    
                           B  1122    
002768 494E4952 582680     B  1123    ed_x3_z2		db 'INIRX&',80h 	; y0
00276F 494E4452 582680     B  1124    				db 'INDRX&',80h		; y1
                           B  1125    
002776 4F544952 582680     B  1126    ed_x3_z3		db 'OTIRX&',80h		; y0
00277D 4F544452 582680     B  1127    				db 'OTDRX&',80h		; y1
                           B  1128    			
                           B  1129    
                           B  1130    ;--- DDCB or FDCB - Prefixed op-codes----------
                           B  1131    
                           B  1132    
002784 4C442620 7E 03      B  1133    ddcb_fdcb_zn6	db 'LD& ~',var_z, ',%',var_y,' 
00278A 2C25 02 202480 
002790 42495426 203E 02    B  1134    				db 'BIT& >',var_y,',$',80h		002797 2C2480 
00279A 4C442620 7E 03      B  1135    				db 'LD& ~',var_z,',RES& >',var_
0027A0 2C524553 26203E 02 
0027A8 2C2480 
0027AB 4C442620 7E 03      B  1136    				db 'LD& ~',var_z,',SET& >',var_
0027B1 2C534554 26203E 02 
0027B9 2C2480 
                           B  1137    
0027BC 25 02 202480        B  1138    ddcb_fdcb_z6	db '%',var_y,' $',80h			0027C1 42495426 203E 02    B  1139    				db 'BIT& >',var_y,',$',80h		0027C8 2C2480 
0027CB 52455326 203E 02    B  1140    				db 'RES& >',var_y,',$',80h		0027D2 2C2480 
0027D5 53455426 203E 02    B  1141    				db 'SET& >',var_y,',$',80h		0027DC 2C2480 
                           B  1142    
                           B  1143    ;----------------------------------------------
                           B  1144    
0027DF 3F3FBF              B  1145    bad_opcode	db '??','?'+80h
                           B  1146    
                           B  1147    ;----------------------------------------------
                           B  1148    
                           B  1149    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  90


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0027E2 C2C3C4C5 68806C80   B  1150    table_r		db 'B'+80h, 'C'+80h, 'D'+80h, 'E'+8
0027EA 2480C1 
                           B  1151    
0027ED C2C3C4C5 48804C80   B  1152    table_r2	db 'B'+80h, 'C'+80h, 'D'+80h, 'E'+8
0027F5 2480C1 
                           B  1153    
0027F8 42C344C5 DF53D0     B  1154    table_rp	db 'B','C'+80h, 'D','E'+80h, '_'+80
                           B  1155    
0027FF 42C344C5 5F8041C6   B  1156    table_rp2	db 'B','C'+80h, 'D','E'+80h, '_',+8
                           B  1157    	
002807 4EDADA4E C3C350CF   B  1158    table_cc	db 'N','Z'+80h, 'Z'+80h, 'N','C'+80
00280F 50C5D0CD 
                           B  1159    	
002813 41444426 2041AC41   B  1160    table_alu	db 'ADD& A',','+80h, 'ADC& A',','+8
00281B 44432620 41AC5355 
002823 4226A053 42432041 
00282B 26AC 
00282D 414E4426 A0584F52   B  1161    			db 'AND&',' '+80h, 'XOR&',' '+80h, 
002835 26A04F52 26A04350 
00283D 26A0 
                           B  1162    			
00283F 524C4326 80525243   B  1163    table_rot	db 'RLC&',80h, 'RRC&',80h, 'RL&',80
002847 2680524C 26805252 
00284F 2680 
002851 534C4126 80535241   B  1164    			db 'SLA&',80h, 'SRA&',80h, 'SLL&',8
002859 2680534C 4C268053 
002861 524C2680 
                           B  1165    	
002865 42C344C5 48CC49D8   B  1166    table_rp3	db 'B','C'+80h, 'D','E'+80h, 'H','L
                           B  1167    
00286D 42C344C5 48CC49D9   B  1168    table_rp4	db 'B','C'+80h, 'D','E'+80h, 'H','L
                           B  1169    
002875 42C344C5 48CC5F80   B  1170    table_rp5	db 'B','C'+80h, 'D','E'+80h, 'H','L
                           B  1171    
00287D 30B0                B  1172    table_rst	db '0','0'+80h
00287F 30B8                B  1173    			db '0','8'+80h
002881 31B0                B  1174    			db '1','0'+80h
002883 31B8                B  1175    			db '1','8'+80h
002885 32B0                B  1176    			db '2','0'+80h
002887 32B8                B  1177    			db '2','8'+80h	
002889 33B0                B  1178    			db '3','0'+80h
00288B 33B8                B  1179    			db '3','8'+80h			
                           B  1180    
                           B  1181    ;----------------------------------------------
                           B  1182    
                           B  1183    ; "_" = HL, IX, IY depending on prefix 
                           B  1184    ; "|" = as above with IX/IY switched
                           B  1185    
                           B  1186    ; "h" = H, IXH, IYL depending on prefix
                           B  1187    ; "l" = L, IXL, IYL depending on prefix
                           B  1188    ; "$" = (HL), (IX+d), (IY+d) depending on prefi
                           B  1189    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  91


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
00288D 48CC49D8 49D9       B  1190    hl_subs		db 'H','L'+80h, 'I','X'+80h, 'I','Y
002893 48CC49D9 49D8       B  1191    inv_hl_subs	db 'H','L'+80h, 'I','Y'+80h, 'I','X
002899 C84958C8 4959C8     B  1192    h_subs		db 'H'+80h, 'IX','H'+80h, 'IY','H'+
0028A0 CC4958CC 4959CC     B  1193    l_subs		db 'L'+80h, 'IX','L'+80h, 'IY','L'+
0028A7 28484CA9 2849582F   B  1194    ind_hl_subs	db '(HL',')'+80h, '(IX/',')'+80h, '
0028AF A9284959 2FA9 
                           B  1195    
                           B  1196    ;----------------------------------------------
                           B  1197    
0028B5                     B  1198    adl_prefix_list
                           B  1199    
0028B5 2E5349D3 2E4C49D3   B  1200    			db '.SI','S'+80h, '.LI','S'+80h, '.
0028BD 2E5349CC 2E4C49CC 
                           B  1201    
                           B  1202    ;----------------------------------------------
                           B  1203    
0028C5 000000              B  1204    d_work_address	dw24 0
                           B  1205    
0028C8 2D2D00              B  1206    output_byte_txt	db "--",0
0028CB 2D00                B  1207    output_char_txt	db "-",0
                           B  1208    
0028CD 000001              B  1209    dis_addr		dw24 10000h
                           B  1210    
                           B  1211    ;----------------------------------------------
                           B  1212    
                           B     0    	include 'commands\del.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"del" delete file command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
                           B     5    
0028D0                     B     6    os_cmd_del
                           B     7    	
0028D0 CD 75 16 00         B     8    				call os_check_volume_format	
0028D4 C0                  B     9    				ret nz
                           B    10    			
0028D5 CD DD 28 00         B    11    				call filename_or_bust
                           B    12    				
0028D9 C3 DD 16 00         B    13    				jp os_erase_file			;no
                           B    14    				
                           B    15    				
                           B    16    ;----------------------------------------------
                           B    17    			
0028DD                     B    18    filename_or_bust
                           B    19    			
0028DD 7E                  B    20    				ld a,(hl)					;is
0028DE B7                  B    21    				or a
0028DF C0                  B    22    				ret nz
0028E0 E1                  B    23    				pop hl						;ot
0028E1 C3 E0 15 00         B    24    				jp os_no_fn_error			;so
                           B    25    
                           B    26    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  92


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\dir.asm
                           B     0    	include 'commands\dir.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; FAT16 'dir' - show directory command. v0.03 -
                           B     3    ;----------------------------------------------
                           B     4    
0028E5                     B     5    os_cmd_dir
                           B     6    
0028E5 CD 75 16 00         B     7    				call os_check_volume_format	
0028E9 C0                  B     8    				ret nz
                           B     9    				
0028EA CD C4 29 00         B    10    				call div_line
0028EE CD 8D 53 00         B    11    				call fs_get_current_dir_name	0028F2 D8                  B    12    				ret c
0028F3 C0                  B    13    				ret nz
0028F4 CD 1C 0F 00         B    14    				call os_print_string
0028F8 CD 45 1A 00         B    15    				call fs_get_dir_cluster			0028FC 7A                  B    16    				ld a,d
0028FD B3                  B    17    				or e
0028FE 20 08               B    18    				jr nz,dcmdnr
002900 CD 80 50 00         B    19    				call fs_get_volume_label
002904 CD 1C 0F 00         B    20    				call os_print_string
002908 CD BC 13 00         B    21    dcmdnr			call os_new_line
                           B    22    				
00290C CD C4 29 00         B    23    nrootdir		call div_line
002910 CD 85 4F 00         B    24    				call fs_goto_first_dir_entry
002914 D8                  B    25    				ret c
002915 20 6F               B    26    				jr nz,os_dlr
002917 AF                  B    27    				xor a
002918 32 4D 61 00         B    28    				ld (os_linecount),a
                           B    29    				
00291C CD 9C 4F 00         B    30    os_dfllp		call fs_get_dir_entry			002920 D8                  B    31    				ret c
002921 20 63               B    32    				jr nz,os_dlr					002923 C5                  B    33    				push bc
002924 CD 1C 0F 00         B    34    				call os_print_string			002928 CD E7 13 00         B    35    				call os_get_cursor_position		00292C 060E                B    36    				ld b,14
00292E CD C7 13 00         B    37    				call os_set_cursor_position	
002932 C1                  B    38    				pop bc
002933 CB40                B    39    				bit 0,b							002935 28 06               B    40    				jr z,os_deif		
002937 21 D1 29 00         B    41    				ld hl,dir_txt					00293B 18 32               B    42    				jr os_dpl
                           B    43    				
00293D 21 7B 56 00         B    44    os_deif			ld hl,os_hex_prefix_txt			002941 CD 1C 0F 00         B    45    				call os_print_string
002945 ED53 96 68 00       B    46    				ld (scratch_pad),de
00294A 79                  B    47    				ld a,c
00294B 32 99 68 00         B    48    				ld (scratch_pad+3),a
00294F 21 B8 61 00         B    49    				ld hl,output_line
002953 E5                  B    50    				push hl
002954 ED5B 98 68 00       B    51    				ld de,(scratch_pad+2)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  93


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\dir.asm
002959 CD 84 10 00         B    52    				call hexword_to_ascii
00295D ED5B 96 68 00       B    53    				ld de,(scratch_pad)
002962 CD 84 10 00         B    54    				call hexword_to_ascii
002966 3600                B    55    				ld (hl),0
002968 E1                  B    56    				pop hl
002969 0607                B    57    				ld b,7							00296B CD 3C 10 00         B    58    				call os_skip_leading_ascii_zero
00296F CD 1C 0F 00         B    59    os_dpl			call os_print_string
002973 CD BC 13 00         B    60    				call os_new_line
                           B    61    				
002977 CD 29 50 00         B    62    				call fs_goto_next_dir_entry
00297B 20 09               B    63    				jr nz,os_dlr					00297D CD BA 11 00         B    64    				call os_count_lines
002981 3E79                B    65    				ld a,'y'
002983 B8                  B    66    				cp b
002984 28 96               B    67    				jr z,os_dfllp
                           B    68    				
002986 CD C4 29 00         B    69    os_dlr			call div_line					00298A CD B8 49 00         B    70    				call fs_calc_free_space
00298E D8                  B    71    				ret c	
00298F CD 9D 29 00         B    72    				call show_hlde_decimal
002993 21 D7 29 00         B    73    				ld hl,kb_spare_txt
002997 CD 1C 0F 00         B    74    				call os_print_string
00299B AF                  B    75    				xor a
00299C C9                  B    76    				ret
                           B    77    
                           B    78    ;----------------------------------------------
                           B    79    
00299D                     B    80    show_hlde_decimal
                           B    81    
00299D CD 4F 12 00         B    82    				call os_hex_to_decimal			0029A1 11070000            B    83    				ld de,7
0029A5 19                  B    84    				add hl,de						0029A6 43                  B    85    				ld b,e
0029A7 11 B8 61 00         B    86    				ld de,output_line
0029AB D5                  B    87    				push de
0029AC 7E                  B    88    dec2strlp		ld a,(hl)						0029AD B7                  B    89    				or a
0029AE 20 03               B    90    				jr nz,foundlnz
0029B0 2B                  B    91    				dec hl
0029B1 10 F9               B    92    				djnz dec2strlp
0029B3 04                  B    93    foundlnz		inc b
0029B4 7E                  B    94    ndecchar		ld a,(hl)						0029B5 C630                B    95    				add a,030h
0029B7 12                  B    96    				ld (de),a
0029B8 13                  B    97    				inc de
0029B9 2B                  B    98    				dec hl
0029BA 10 F8               B    99    				djnz ndecchar
0029BC AF                  B   100    				xor a
0029BD 12                  B   101    				ld (de),a
0029BE E1                  B   102    				pop hl							0029BF CD 1C 0F 00         B   103    				call os_print_string
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  94


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\dir.asm
0029C3 C9                  B   104    				ret
                           B   105    
                           B   106    ;----------------------------------------------
                           B   107    			
0029C4 0E2D                B   108    div_line		ld c,'-'
0029C6 0613                B   109    				ld b,19
0029C8 CD 2D 1A 00         B   110    				call os_print_multiple_chars
0029CC CD BC 13 00         B   111    				call os_new_line
0029D0 C9                  B   112    				ret
                           B   113    
                           B   114    ;----------------------------------------------
                           B   115    
0029D1 5B444952 5D00       B   116    dir_txt			db '[DIR]',0
                           B   117    
0029D7 204B4220 46726565   B   118    kb_spare_txt	db ' KB Free',11,0
0029DF 0B00 
                           B   119    
                           B   120    ;----------------------------------------------
                           B   121    	
                           B     0    	include 'commands\f.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"f" fill memory command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
0029E1                     B     5    os_cmd_f			
                           B     6    
0029E1 CD 32 1C 00         B     7    				call get_start_and_end			                           B     8    			
0029E5 CD 5B 1C 00         B     9    				call hexword_or_bust			0029E9 CA 00 16 00         B    10    				jp z,os_no_args_error			0029ED 7B                  B    11    				ld a,e
0029EE 32 64 61 00         B    12    				ld (fillbyte),a
                           B    13    					
0029F2 CD 20 1C 00         B    14    				call test_mem_range
0029F6 DA FC 15 00         B    15    				jp c,os_range_error				                           B    16    					
0029FA 3A 64 61 00         B    17    				ld a,(fillbyte)
0029FE 77                  B    18    f_floop			ld (hl),a
0029FF EDA1                B    19    				cpi								002A01 EA FE 29 00         B    20    				jp pe,f_floop
                           B    21    					
002A05 3E20                B    22    				ld a,020h						002A07 B7                  B    23    				or a
002A08 C9                  B    24    				ret
                           B    25    
                           B    26    ;----------------------------------------------
                           B     0    	include 'commands\format.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"format" - format disk command. V0.04 - ADL mo
                           B     3    ;
                           B     4    ; The internal format routine is limited to for
                           B     5    ; No partition data is allowed.
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  95


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\format.asm
                           B     6    ;----------------------------------------------
                           B     7    
                           B     8    
002A09                     B     9    os_cmd_format
                           B    10    
002A09 7E                  B    11    				ld a,(hl)						002A0A B7                  B    12    				or a
002A0B 20 04               B    13    				jr nz,fgotargs					002A0D 3E1F                B    14    				ld a,01fh						002A0F B7                  B    15    				or a
002A10 C9                  B    16    				ret
                           B    17    			
002A11                     B    18    fgotargs	
002A11 11 EE 54 00         B    19    				ld de,fs_sought_filename
002A15 CD D6 53 00         B    20    				call fs_clear_filename			002A19 E5                  B    21    				push hl							002A1A CD 9D 0F 00         B    22    				call os_next_arg
002A1E 20 04               B    23    				jr nz,fgotlab
002A20 21 51 2B 00         B    24    				ld hl,default_label
002A24 060B                B    25    fgotlab			ld b,11
002A26 CD 02 12 00         B    26    				call os_copy_ascii_run
002A2A E1                  B    27    				pop hl
                           B    28    				
002A2B 3A 6F 5F 00         B    29    				ld a,(device_count)				002A2F B7                  B    30    				or a
002A30 28 25               B    31    				jr z,fno_dev
002A32 47                  B    32    				ld b,a
002A33 0E00                B    33    				ld c,0							002A35 DD21 1F 60 00       B    34    				ld ix,host_device_hardware_info
002A3A DD7E00              B    35    fdev_lp			ld a,(ix)						002A3D CD 17 1A 00         B    36    				call locate_driver_base			002A41 D5                  B    37    				push de
002A42 FDE1                B    38    				pop iy
002A44 ED130C              B    39    				lea de,iy+0ch					002A47 C5                  B    40    				push bc
002A48 0607                B    41    				ld b,7
002A4A CD E3 11 00         B    42    				call os_compare_strings
002A4E C1                  B    43    				pop bc
002A4F 28 0A               B    44    				jr z,format_dev
002A51 ED3220              B    45    				lea ix,ix+20h					002A54 0C                  B    46    				inc c
002A55 10 E3               B    47    				djnz fdev_lp
                           B    48    			
002A57 3ED0                B    49    fno_dev			ld a,0d0h						002A59 B7                  B    50    				or a
002A5A C9                  B    51    				ret
                           B    52    				
                           B    53    			
                           B    54    				
                           B    55    ;----- FORMAT A DEVICE (USE ENTIRE CAPACITY (TR
                           B    56    			
                           B    57    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  96


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\format.asm
002A5B C5                  B    58    format_dev		push bc
002A5C CD BC 13 00         B    59    				call os_new_line
002A60 21 22 2B 00         B    60    				ld hl,form_dev_warn1
002A64 CD F3 13 00         B    61    				call os_show_packed_text
002A68 C1                  B    62    				pop bc
                           B    63    				
002A69 79                  B    64    				ld a,c							002A6A C630                B    65    				add a,030h
002A6C 32 7B 5F 00         B    66    				ld (dev_txt+3),a
002A70 21 78 5F 00         B    67    				ld hl,dev_txt	
002A74 CD 1C 0F 00         B    68    				call os_print_string			                           B    69    				
002A78 79                  B    70    				ld a,c
002A79 CD 8B 1A 00         B    71    				call dev_to_driver_lookup		002A7D E5                  B    72    				push hl
002A7E 32 6E 5F 00         B    73    				ld (current_driver),a
002A82 CD FE 19 00         B    74    				call show_dev_driver_name		002A86 DDE1                B    75    				pop ix
002A88 DD1701              B    76    				ld de,(ix+1)
002A8B FD21 60 61 00       B    77    				ld iy,xrr_temp
002A90 FD1F00              B    78    				ld (iy),de						002A93 FDCB023E            B    79    				srl (iy+2)
002A97 FDCB011E            B    80    				rr (iy+1)
002A9B FDCB001E            B    81    				rr (iy+0)						002A9F FD1700              B    82    				ld de,(iy)						002AA2 CD 9D 29 00         B    83    				call show_hlde_decimal			002AA6 21 5C 2B 00         B    84    				ld hl,kb_txt
002AAA CD 1C 0F 00         B    85    				call os_print_string
002AAE ED2205              B    86    				lea hl,ix+5		
002AB1 CD 1C 0F 00         B    87    				call os_print_string			002AB5 3E29                B    88    				ld a,')'
002AB7 CD 5E 0F 00         B    89    				call os_print_char
                           B    90    				
002ABB CD BC 13 00         B    91    				call os_new_line
002ABF CD BC 13 00         B    92    				call os_new_line
002AC3 21 29 2B 00         B    93    				ld hl,form_dev_warn2
002AC7 CD 19 2B 00         B    94    				call show_packed_text_and_cr
002ACB CD 01 2B 00         B    95    				call confirm_yes
002ACF 20 28               B    96    				jr nz,ab_form
                           B    97    				
002AD1 21 33 2B 00         B    98    				ld hl,formatting_txt			002AD5 CD 1C 0F 00         B    99    				call os_print_string
                           B   100    				
002AD9 CD 3B 47 00         B   101    				call fs_format_device_command
002ADD 38 10               B   102    				jr c,form_err
002ADF B7                  B   103    				or a
002AE0 20 0D               B   104    				jr nz,form_err
                           B   105    			
002AE2 21 43 2B 00         B   106    				ld hl,ok_txt					002AE6 CD 1C 0F 00         B   107    				call os_print_string
                           B   108    				
002AEA CD F6 31 00         B   109    f_end			call os_cmd_remount				Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  97


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\format.asm
002AEE C9                  B   110    				ret
                           B   111    			
002AEF                     B   112    form_err
002AEF 21 48 2B 00         B   113    				ld hl,ferr_txt
002AF3 CD 1C 0F 00         B   114    				call os_print_string
002AF7 18 F1               B   115    				jr f_end
                           B   116    				
                           B   117    				
                           B   118    ;----------------------------------------------
                           B   119    				
                           B   120    				
002AF9 CD BC 13 00         B   121    ab_form			call os_new_line
002AFD 3E24                B   122    				ld a,024h						002AFF B7                  B   123    				or a
002B00 C9                  B   124    				ret
                           B   125    				
002B01                     B   126    confirm_yes
                           B   127    			
002B01 21 96 68 00         B   128    				ld hl,scratch_pad
002B05 1E03                B   129    				ld e,3
002B07 E5                  B   130    				push hl
002B08 CD E8 10 00         B   131    				call os_user_input
002B0C E1                  B   132    				pop hl
002B0D C0                  B   133    				ret nz
002B0E 0603                B   134    				ld b,3
002B10 11 49 5A 00         B   135    				ld de,yes_txt+1
002B14 CD E3 11 00         B   136    				call os_compare_strings
002B18 C9                  B   137    				ret
                           B   138    			
                           B   139    			
002B19                     B   140    show_packed_text_and_cr
                           B   141    			
002B19 CD F3 13 00         B   142    				call os_show_packed_text
002B1D CD BC 13 00         B   143    				call os_new_line
002B21 C9                  B   144    				ret
                           B   145    			
                           B   146    ;----------------------------------------------
                           B   147    
002B22                     B   148    form_dev_warn1
                           B   149    
002B22 27283640 979700     B   150    				db 027h,028h,036h,040h,097h,097
                           B   151    
002B29                     B   152    form_dev_warn2
                           B   153    
002B29 52467E98 9EA2A3A5   B   154    				db 052h,046h,07eh,098h,09eh,0a2
002B31 9700 
                           B   155    
002B33                     B   156    formatting_txt
                           B   157    
002B33 0B0B466F 726D6174   B   158    				db 11,11,'Formatting.. ',0
002B3B 74696E67 2E2E2000 
                           B   159    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  98


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\format.asm
002B43 4F4B0B0B 00         B   160    ok_txt			db 'OK',11,11,0
                           B   161    
002B48 4552524F 52210B0B   B   162    ferr_txt		db 'ERROR!',11,11,0
002B50 00 
                           B   163    
002B51                     B   164    default_label	
                           B   165    
002B51 50524F53 455F4449   B   166    				db 'PROSE_DISK',0
002B59 534B00 
                           B   167    
002B5C 4B422028 00         B   168    kb_txt			db 'KB (',0
                           B   169    
                           B   170    ;----------------------------------------------
                           B   171    
       0000689A            B   172    fs_drive_sel_cache		equ scratch_pad+4		                           B   173    
                           B   174    ;----------------------------------------------
                           B   175    
                           B     0    	include 'commands\h.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"H" - Hunt in memory command V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
002B61 CD 32 1C 00         B     5    os_cmd_h		call get_start_and_end			002B65 22 5D 61 00         B     6    				ld (find_hexstringascii),hl		                           B     7    
002B69 CD 20 1C 00         B     8    				call test_mem_range
002B6D DA FC 15 00         B     9    				jp c,os_range_error				                           B    10    			
002B71 AF                  B    11    				xor a
002B72 32 0E 2C 00         B    12    				ld (h_ascii_mode),a
                           B    13    				
002B76 2A 5D 61 00         B    14    				ld hl,(find_hexstringascii)
002B7A 0600                B    15    				ld b,0
002B7C 7E                  B    16    h_lfascii		ld a,(hl)						002B7D B7                  B    17    				or a
002B7E 28 28               B    18    				jr z,h_no_text					002B80 FE22                B    19    				cp 022h
002B82 28 03               B    20    				jr z,h_found_quote
002B84 23                  B    21    				inc hl
002B85 18 F5               B    22    				jr h_lfascii
002B87 23                  B    23    h_found_quote	inc hl
002B88 22 5D 61 00         B    24    				ld (find_hexstringascii),hl
002B8C 7E                  B    25    h_fasc_len		ld a,(hl)
002B8D B7                  B    26    				or a
002B8E CA 00 16 00         B    27    				jp z,os_no_args_error			002B92 FE22                B    28    				cp 022h
002B94 28 04               B    29    				jr z,h_startas
002B96 23                  B    30    				inc hl
002B97 04                  B    31    				inc b
002B98 18 F2               B    32    				jr h_fasc_len
                           B    33    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page:  99


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\h.asm
002B9A 78                  B    34    h_startas		ld a,b
002B9B B7                  B    35    				or a
002B9C CA 00 16 00         B    36    				jp z,os_no_args_error			002BA0 3E01                B    37    				ld a,1
002BA2 32 0E 2C 00         B    38    				ld (h_ascii_mode),a
002BA6 18 16               B    39    				jr h_start_search
                           B    40    						
                           B    41    
002BA8 2A 5D 61 00         B    42    h_no_text		ld hl,(find_hexstringascii)
002BAC 0600                B    43    				ld b,0							002BAE CD 5B 1C 00         B    44    cntfbyts		call hexword_or_bust			002BB2 28 04               B    45    				jr z,gthexstr
002BB4 04                  B    46    				inc b
002BB5 23                  B    47    				inc hl
002BB6 18 F6               B    48    				jr cntfbyts
002BB8 78                  B    49    gthexstr		ld a,b
002BB9 B7                  B    50    				or a
002BBA CA 00 16 00         B    51    				jp z,os_no_args_error	
                           B    52    
                           B    53    
002BBE                     B    54    h_start_search
                           B    55    	
002BBE DD2A 51 61 00       B    56    				ld ix,(cmdop_start_address)		002BC3 DDE5                B    57    fndloop1		push ix
002BC5 FDE1                B    58    				pop iy
002BC7 48                  B    59    				ld c,b							002BC8 2A 5D 61 00         B    60    				ld hl,(find_hexstringascii)
002BCC 3A 0E 2C 00         B    61    fcmloop			ld a,(h_ascii_mode)
002BD0 B7                  B    62    				or a
002BD1 28 08               B    63    				jr z,h_hex
002BD3 FD7E00              B    64    				ld a,(iy)
002BD6 BE                  B    65    				cp (hl)
002BD7 20 23               B    66    				jr nz,nofmatch
002BD9 18 0A               B    67    				jr h_matched
002BDB CD 93 10 00         B    68    h_hex			call ascii_to_hexword			002BDF FD7E00              B    69    				ld a,(iy)
002BE2 BB                  B    70    				cp e
002BE3 20 17               B    71    				jr nz,nofmatch
002BE5 FD23                B    72    h_matched		inc iy
002BE7 23                  B    73    				inc hl
002BE8 0D                  B    74    				dec c
002BE9 20 E1               B    75    				jr nz,fcmloop
                           B    76    			
002BEB DDE5                B    77    				push ix							002BED D1                  B    78    				pop de							002BEE DDE5                B    79    				push ix
002BF0 C5                  B    80    				push bc
002BF1 CD F4 12 00         B    81    				call os_show_hex_address
002BF5 CD BC 13 00         B    82    				call os_new_line
002BF9 C1                  B    83    				pop bc
002BFA DDE1                B    84    				pop ix
                           B    85    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 100


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\h.asm
002BFC DDE5                B    86    nofmatch		push ix
002BFE DD23                B    87    				inc ix
002C00 D1                  B    88    				pop de
002C01 2A 54 61 00         B    89    				ld hl,(cmdop_end_address)
002C05 AF                  B    90    				xor a
002C06 ED52                B    91    				sbc hl,de
002C08 20 B9               B    92    				jr nz,fndloop1
                           B    93    							
002C0A 3E20                B    94    				ld a,020h						002C0C B7                  B    95    				or a
002C0D C9                  B    96    				ret
                           B    97    			
                           B    98    ;----------------------------------------------
                           B    99    
002C0E 00                  B   100    h_ascii_mode	db 0
                           B   101    
                           B   102    ;----------------------------------------------
                           B     0    	include 'commands\help.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"?" - List commands. V0.03 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
002C0F                     B     5    os_cmd_help		
002C0F AF                  B     6    				xor a
002C10 32 4D 61 00         B     7    				ld (os_linecount),a
                           B     8    				
002C14 21 61 5B 00         B     9    				ld hl,packed_help1
002C18 CD F3 13 00         B    10    show_page		call os_show_packed_text
002C1C E5                  B    11    				push hl
002C1D CD BC 13 00         B    12    				call os_new_line
002C21 E1                  B    13    				pop hl
002C22 23                  B    14    				inc hl						;sk
002C23 7E                  B    15    				ld a,(hl)
002C24 FEFF                B    16    				cp 0ffh						;la
002C26 28 09               B    17    				jr z,last_help_page
                           B    18    				
002C28 CD BA 11 00         B    19    				call os_count_lines
002C2C 78                  B    20    				ld a,b
002C2D FE79                B    21    				cp 'y'
002C2F 28 E7               B    22    				jr z,show_page
                           B    23    
002C31                     B    24    last_help_page
002C31 AF                  B    25    				xor a
002C32 C9                  B    26    				ret	
                           B    27    	
                           B    28    ;----------------------------------------------
                           B    29    	
                           B     0    	include 'commands\gtr.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;">" for write ascii bytes to memory command. V
                           B     3    ;----------------------------------------------
                           B     4    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 101


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\gtr.asm
002C33                     B     5    os_cmd_gtr
                           B     6    
002C33 CD 5B 1C 00         B     7    				call hexword_or_bust			002C37 CA E8 15 00         B     8    				jp z,os_no_start_addr
002C3B 23                  B     9    fndquot1		inc hl
002C3C 7E                  B    10    				ld a,(hl)
002C3D B7                  B    11    				or a
002C3E CA 00 16 00         B    12    				jp z,os_no_args_error
002C42 FE22                B    13    				cp 022h							002C44 20 F5               B    14    				jr nz,fndquot1
002C46 23                  B    15    				inc hl
002C47 E5                  B    16    				push hl
002C48 7E                  B    17    fndquot2		ld a,(hl)
002C49 23                  B    18    				inc hl
002C4A B7                  B    19    				or a
002C4B 28 15               B    20    				jr z,noquot2
002C4D FE22                B    21    				cp 022h							002C4F 20 F7               B    22    				jr nz,fndquot2
002C51 E1                  B    23    				pop hl
                           B    24    					
002C52 7E                  B    25    wmbalp			ld a,(hl)						002C53 FE22                B    26    				cp 022h
002C55 28 09               B    27    				jr z,os_gtrdn					002C57 FE7D                B    28    				cp 07dh
002C59 28 01               B    29    				jr z,skpnasc
002C5B 12                  B    30    				ld (de),a
002C5C 13                  B    31    skpnasc			inc de
002C5D 23                  B    32    				inc hl
002C5E 18 F2               B    33    				jr wmbalp
002C60 AF                  B    34    os_gtrdn		xor a
002C61 C9                  B    35    				ret	
                           B    36    				
002C62 E1                  B    37    noquot2			pop hl							002C63 3E12                B    38    				ld a,012h
002C65 B7                  B    39    				or a
002C66 C9                  B    40    				ret
                           B    41    
                           B    42    ;----------------------------------------------
                           B     0    	include 'commands\lb.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"lb" - Load binary file command. V0.03 - ADL m
                           B     3    ;----------------------------------------------
                           B     4    
002C67                     B     5    os_cmd_lb
                           B     6    	
002C67 CD 75 16 00         B     7    				call os_check_volume_format	
002C6B C0                  B     8    				ret nz
                           B     9    				
002C6C CD DD 28 00         B    10    				call filename_or_bust			002C70 CD 08 16 00         B    11    				call os_find_file				002C74 C0                  B    12    				ret nz
002C75 ED53 99 68 00       B    13    				ld (filesize_cache),de			Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 102


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\lb.asm
002C7A 2A A6 60 00         B    14    				ld hl,(default_load_addr)
002C7E 22 96 68 00         B    15    				ld (data_load_addr),hl			                           B    16    				
002C82 2A 0A 62 00         B    17    				ld hl,(os_args_loc)
002C86 CD 9D 0F 00         B    18    				call os_next_arg
                           B    19    
002C8A CD 5B 1C 00         B    20    				call hexword_or_bust			002C8E 28 05               B    21    				jr z,os_lbnao					002C90 ED53 96 68 00       B    22    				ld (data_load_addr),de
                           B    23    
002C95 ED5B 96 68 00       B    24    os_lbnao		ld de,(data_load_addr)			002C9A 2A B3 60 00         B    25    				ld hl,(sys_ram_high)			002C9E 2B                  B    26    				dec hl
002C9F AF                  B    27    				xor a
002CA0 ED52                B    28    				sbc hl,de
002CA2 38 04               B    29    				jr c,os_lbprok
002CA4 3E26                B    30    				ld a,026h						002CA6 B7                  B    31    				or a
002CA7 C9                  B    32    				ret
                           B    33    				
002CA8 2A 96 68 00         B    34    os_lbprok		ld hl,(data_load_addr)			002CAC CD 37 16 00         B    35    				call os_read_bytes_from_file
002CB0 C0                  B    36    				ret nz
                           B    37    			
002CB1                     B    38    report_bytes_loaded
                           B    39    
002CB1 21 7B 56 00         B    40    				ld hl,os_hex_prefix_txt			002CB5 CD 1C 0F 00         B    41    				call os_print_string			                           B    42    				
002CB9 11 9B 68 00         B    43    				ld de,filesize_cache+2			002CBD 21 B8 61 00         B    44    				ld hl,output_line
002CC1 0603                B    45    				ld b,3
002CC3 CD 51 10 00         B    46    				call n_hexbytes_to_ascii
002CC7 3600                B    47    				ld (hl),0	
002CC9 0605                B    48    				ld b,5							002CCB CD 2A 13 00         B    49    				call os_print_output_line_skip_
                           B    50    				
002CCF 21 F7 5C 00         B    51    				ld hl,bytes_loaded_msg			002CD3 CD F3 13 00         B    52    				call os_show_packed_text
                           B    53    				
002CD7 21 DA 56 00         B    54    				ld hl,to_txt					002CDB CD 1C 0F 00         B    55    				call os_print_string
                           B    56    
002CDF 21 7B 56 00         B    57    				ld hl,os_hex_prefix_txt			002CE3 CD 1C 0F 00         B    58    				call os_print_string	
                           B    59    
002CE7 ED5B 96 68 00       B    60    				ld de,(data_load_addr)			002CEC CD F4 12 00         B    61    				call os_show_hex_address
                           B    62    
002CF0 CD BC 13 00         B    63    				call os_new_line
002CF4 AF                  B    64    				xor a
002CF5 C9                  B    65    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 103


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\lb.asm
                           B    66    				
                           B    67    ;----------------------------------------------
                           B    68    
       00006896            B    69    data_load_addr	equ scratch_pad
       00006899            B    70    filesize_cache	equ scratch_pad+3
                           B    71    
                           B    72    ;----------------------------------------------
                           B     0    	include 'commands\m.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'m' - Show memory as hex bytes command. V0.02 
                           B     3    ;----------------------------------------------
                           B     4    
       00000010            B     5    bytes_per_line	equ 16
                           B     6    
002CF6 CD 5B 1C 00         B     7    os_cmd_m		call hexword_or_bust			002CFA 28 05               B     8    				jr z,m_no_hex					002CFC ED53 4E 61 00       B     9    				ld (mem_mon_addr),de
                           B    10    				
002D01 0610                B    11    m_no_hex		ld b,16							002D03 C5                  B    12    smbllp			push bc							                           B    13    				
002D04 21 3D 2D 00         B    14    				ld hl,colon_cmd_prefix			002D08 CD 1C 0F 00         B    15    				call os_print_string
002D0C ED5B 4E 61 00       B    16    				ld de,(mem_mon_addr)
002D11 CD F4 12 00         B    17    				call os_show_hex_address
                           B    18    
002D15 21 B8 61 00         B    19    				ld hl,output_line
002D19 0610                B    20    				ld b,bytes_per_line				002D1B 3620                B    21    mmbllp			ld (hl),' '
002D1D 23                  B    22    				inc hl
002D1E 1A                  B    23    				ld a,(de)	
002D1F CD 5F 10 00         B    24    				call hexbyte_to_ascii
002D23 13                  B    25    				inc de
002D24 10 F5               B    26    				djnz mmbllp
                           B    27    
002D26 ED53 4E 61 00       B    28    				ld (mem_mon_addr),de
002D2B 360B                B    29    				ld (hl),11
002D2D 23                  B    30    				inc hl
002D2E 3600                B    31    				ld (hl),0
002D30 21 B8 61 00         B    32    				ld hl,output_line
002D34 CD 1C 0F 00         B    33    				call os_print_string
002D38 C1                  B    34    				pop bc
002D39 10 C8               B    35    				djnz smbllp
                           B    36    				
002D3B AF                  B    37    				xor a
002D3C C9                  B    38    				ret
                           B    39    
                           B    40    ;----------------------------------------------
                           B    41    
002D3D 3A2000              B    42    colon_cmd_prefix	db ': ',0
                           B    43    
                           B    44    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 104


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\md.asm
                           B     0    	include 'commands\md.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"md" - Make dir command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
002D40                     B     5    os_cmd_md
                           B     6    	
002D40 CD 75 16 00         B     7    				call os_check_volume_format	
002D44 C0                  B     8    				ret nz
                           B     9    			
002D45 CD DD 28 00         B    10    				call filename_or_bust
                           B    11    				
002D49 C3 B5 16 00         B    12    				jp os_make_dir			;no poi
                           B    13    				
                           B    14    
                           B    15    ;----------------------------------------------
                           B     0    	include 'commands\r.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'R' - show CPU register values saved on return
                           B     3    ;----------------------------------------------
                           B     4    
002D4D                     B     5    os_cmd_r	
002D4D DD21 BC 60 00       B     6    				ld ix,store_a1					002D52 21 F7 2D 00         B     7    				ld hl,register_txt
002D56 CD 1C 0F 00         B     8    rcmdloop2		call os_print_string
002D5A 7E                  B     9    rcmdloop		ld a,(hl)
002D5B FE01                B    10    				cp 1
002D5D 28 0B               B    11    				jr z,showbyte
002D5F FE02                B    12    				cp 2
002D61 28 15               B    13    				jr z,showword16
002D63 FE03                B    14    				cp 3
002D65 28 2E               B    15    				jr z,showaddr
002D67 23                  B    16    				inc hl
002D68 18 F0               B    17    				jr rcmdloop
                           B    18    				
002D6A DD7E00              B    19    showbyte		ld a,(ix)
002D6D DD23                B    20    				inc ix
002D6F DDE5                B    21    				push ix
002D71 E5                  B    22    				push hl
002D72 CD 08 13 00         B    23    				call os_show_hex_byte
002D76 18 2A               B    24    				jr showreg
                           B    25    
002D78 DD7E01              B    26    showword16		ld a,(ix+1)
002D7B DDE5                B    27    				push ix
002D7D E5                  B    28    				push hl
002D7E CD 08 13 00         B    29    				call os_show_hex_byte
002D82 E1                  B    30    				pop hl
002D83 DDE1                B    31    				pop ix
002D85 DD7E00              B    32    				ld a,(ix)
002D88 DD23                B    33    				inc ix
002D8A DD23                B    34    				inc ix
002D8C DDE5                B    35    				push ix
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 105


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\r.asm
002D8E E5                  B    36    				push hl
002D8F CD 08 13 00         B    37    				call os_show_hex_byte
002D93 18 0D               B    38    				jr showreg
                           B    39    
002D95 DD1700              B    40    showaddr		ld de,(ix)
002D98 ED3203              B    41    				lea ix,ix+3
002D9B DDE5                B    42    				push ix
002D9D E5                  B    43    				push hl
002D9E CD F4 12 00         B    44    				call os_show_hex_address
002DA2 E1                  B    45    showreg			pop hl
002DA3 DDE1                B    46    				pop ix
002DA5 23                  B    47    				inc hl
002DA6 7E                  B    48    				ld a,(hl)
002DA7 B7                  B    49    				or a
002DA8 20 AC               B    50    				jr nz,rcmdloop2
                           B    51    			
002DAA CD BC 13 00         B    52    				call os_new_line				002DAE 21 5B 2E 00         B    53    				ld hl,flag_txt
002DB2 CD DC 12 00         B    54    				call os_copy_to_output_line
002DB6 21 BC 61 00         B    55    				ld hl,output_line+4
002DBA 01050000            B    56    				ld bc,5
002DBE 3A DF 60 00         B    57    				ld a,(store_f)
002DC2 CB77                B    58    				bit 6,a							002DC4 28 02               B    59    				jr z,zfzero
002DC6 3631                B    60    				ld (hl),'1'
002DC8 09                  B    61    zfzero			add hl,bc
002DC9 CB47                B    62    				bit 0,a							002DCB 28 02               B    63    				jr z,cfzero
002DCD 3631                B    64    				ld (hl),'1'
002DCF 09                  B    65    cfzero			add hl,bc
002DD0 CB7F                B    66    				bit 7,a							002DD2 28 02               B    67    				jr z,sfzero
002DD4 364D                B    68    				ld (hl),'M'
002DD6 09                  B    69    sfzero			add hl,bc
002DD7 CB57                B    70    				bit 2,a							002DD9 28 02               B    71    				jr z,pfzero
002DDB 364F                B    72    				ld (hl),'O'
002DDD 09                  B    73    pfzero			add hl,bc
002DDE 23                  B    74    				inc hl
002DDF CB67                B    75    				bit 4,a							002DE1 28 02               B    76    				jr z,iffzero
002DE3 3631                B    77    				ld (hl),'1'
002DE5                     B    78    iffzero			
002DE5 01060000            B    79    				ld bc,6
002DE9 09                  B    80    				add hl,bc
002DEA 3A E0 60 00         B    81    				ld a,(store_adl)
002DEE C630                B    82    				add a,30h
002DF0 77                  B    83    				ld (hl),a
002DF1 CD 1F 13 00         B    84    				call os_print_output_line
002DF5 AF                  B    85    				xor a
002DF6 C9                  B    86    				ret
                           B    87    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 106


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\r.asm
                           B    88    ;----------------------------------------------
                           B    89    	
                           B    90    
002DF7 20413D00 01         B    91    register_txt		db ' A=',0,1
002DFC 20204243 3D0003     B    92    					db '  BC=',0,3
002E03 20204445 3D0003     B    93    					db '  DE=',0,3
002E0A 2020484C 3D0003     B    94    					db '  HL=',0,3
                           B    95    					
002E11 0B                  B    96    					db 11
                           B    97    
002E12 27413D00 01         B    98    					db 027h,'A=',0,1
002E17 20274243 3D0003     B    99    					db ' ',027h,'BC=',0,3
002E1E 20274445 3D0003     B   100    					db ' ',027h,'DE=',0,3
002E25 2027484C 3D0003     B   101    					db ' ',027h,'HL=',0,3
                           B   102    					
002E2C 0B                  B   103    					db 11
                           B   104    
002E2D 2049583D 0003       B   105    					db ' IX=',0,3
002E33 2049593D 0003       B   106    					db ' IY=',0,3
                           B   107    					
002E39 0B                  B   108    					db 11
                           B   109    					
002E3A 2050433D 0003       B   110    					db ' PC=',0,3
002E40 204C5350 3D0003     B   111    					db ' LSP=',0,3
002E47 20535350 3D0002     B   112    					db ' SSP=',0,2
                           B   113    					
002E4E 0B                  B   114    					db 11
                           B   115    					
002E4F 204D4241 53453D00   B   116    					db ' MBASE=',0,1,0,0
002E57 010000 
                           B   117    					
002E5A 0B                  B   118    					db 11
                           B   119    
002E5B 205A463D 30204346   B   120    flag_txt			db ' ZF=0 CF=0 SF=P PV=E IF
002E63 3D302053 463D5020 
002E6B 50563D45 20494646 
002E73 3D302041 444C3D30 
002E7B 0B0B00 
                           B   121    		
                           B   122    ;----------------------------------------------
                           B     0    	include 'commands\rd.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"RD" - Remove directory command. V0.02 - ADL m
                           B     3    ;----------------------------------------------
                           B     4    
002E7E                     B     5    os_cmd_rd
                           B     6    
002E7E CD 75 16 00         B     7    				call os_check_volume_format	
002E82 C0                  B     8    				ret nz
                           B     9    				
002E83 CD DD 28 00         B    10    				call filename_or_bust
                           B    11    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 107


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rd.asm
002E87 C3 1F 17 00         B    12    				jp os_delete_dir		;no poi
                           B    13    
                           B    14    
                           B    15    ;----------------------------------------------
                           B     0    	include 'commands\rn.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"rn" - Rename command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
002E8B                     B     5    os_cmd_rn
                           B     6    	
002E8B CD 75 16 00         B     7    				call os_check_volume_format	
002E8F C0                  B     8    				ret nz
                           B     9    			
002E90 CD DD 28 00         B    10    				call filename_or_bust
002E94 E5                  B    11    				push hl
002E95 D1                  B    12    				pop de
002E96 CD 9D 0F 00         B    13    				call os_next_arg
002E9A 7E                  B    14    				ld a,(hl)						002E9B B7                  B    15    				or a
002E9C 20 04               B    16    				jr nz,rn_grfn
002E9E 3E1F                B    17    				ld a,01fh						002EA0 B7                  B    18    				or a
002EA1 C9                  B    19    				ret
                           B    20    
002EA2 EB                  B    21    rn_grfn			ex de,hl
002EA3 C3 09 17 00         B    22    				jp os_rename_file				                           B    23    		
                           B    24    ;----------------------------------------------
                           B     0    	include 'commands\sb.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'SB' - Save binary file command. V0.02 - ADL m
                           B     3    ;----------------------------------------------
                           B     4    
002EA7                     B     5    os_cmd_sb
                           B     6    	
002EA7 CD 75 16 00         B     7    				call os_check_volume_format		002EAB C0                  B     8    				ret nz
                           B     9    					
002EAC CD DD 28 00         B    10    				call filename_or_bust			002EB0 22 9C 68 00         B    11    				ld (sb_save_name_addr),hl
                           B    12    				
002EB4 2A 0A 62 00         B    13    				ld hl,(os_args_loc)
002EB8 CD 9D 0F 00         B    14    				call os_next_arg
002EBC CD 5B 1C 00         B    15    				call hexword_or_bust			002EC0 CA E8 15 00         B    16    				jp z,os_no_start_addr			002EC4 ED53 96 68 00       B    17    				ld (sb_save_addr),de
                           B    18    				
002EC9 CD 5B 1C 00         B    19    				call hexword_or_bust			002ECD CA EC 15 00         B    20    				jp z,os_no_filesize
002ED1 ED53 99 68 00       B    21    				ld (sb_save_length),de
                           B    22    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 108


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\sb.asm
002ED6 2A 9C 68 00         B    23    				ld hl,(sb_save_name_addr)		002EDA CD 47 16 00         B    24    				call os_create_file
002EDE 28 18               B    25    				jr z,os_sfapp
002EE0 FEC9                B    26    				cp 0c9h							002EE2 C0                  B    27    				ret nz			
002EE3 21 28 5B 00         B    28    				ld hl,save_append_msg			002EE7 CD F3 13 00         B    29    				call os_show_packed_text
002EEB CD 58 44 00         B    30    				call os_wait_key_press
002EEF 3E79                B    31    				ld a,'y'
002EF1 B8                  B    32    				cp b
002EF2 28 04               B    33    				jr z,os_sfapp
002EF4 3E2C                B    34    				ld a,2ch						002EF6 B7                  B    35    				or a
002EF7 C9                  B    36    				ret
                           B    37    			
002EF8 2A 9C 68 00         B    38    os_sfapp		ld hl,(sb_save_name_addr)		002EFC ED5B 96 68 00       B    39    				ld de,(sb_save_addr)			002F01 ED4B 99 68 00       B    40    				ld bc,(sb_save_length)			002F06 CD 5D 16 00         B    41    				call os_write_bytes_to_file
002F0A C0                  B    42    				ret nz	
                           B    43    				
002F0B 3E20                B    44    				ld a,020h						002F0D B7                  B    45    				or a
002F0E C9                  B    46    				ret
                           B    47    			
                           B    48    				
                           B    49    ;----------------------------------------------
                           B    50    
       00006896            B    51    sb_save_addr		equ scratch_pad
       00006899            B    52    sb_save_length		equ scratch_pad+3
       0000689C            B    53    sb_save_name_addr	equ scratch_pad+6
                           B    54    
                           B    55    ;----------------------------------------------
                           B     0    	include 'commands\rx.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"RX" - Receive binary file via serial port com
                           B     3    ;----------------------------------------------
                           B     4    
       00000080            B     5    buffer_blocks			 equ 128				       00006996            B     6    buffer_addr				 equ os_max_addr		       00006896            B     7    rx_buffer_ptr			 equ scratch_pad
       00006899            B     8    serial_file_length_cache equ scratch_pad+3
                           B     9    
                           B    10    
002F0F 7E                  B    11    os_cmd_rx		ld a,(hl)						002F10 B7                  B    12    				or a
002F11 CA E0 15 00         B    13    				jp z,os_no_fn_error
                           B    14    				
002F15 3E3E                B    15    				ld a,'>'						002F17 BE                  B    16    				cp (hl)
002F18 C2 DB 2F 00         B    17    				jp nz,rx_nrs
002F1C 23                  B    18    				inc hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 109


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
002F1D 3E20                B    19    				ld a,' '
002F1F BE                  B    20    				cp (hl)
002F20 2B                  B    21    				dec hl
002F21 C2 DB 2F 00         B    22    				jp nz,rx_nrs
                           B    23    				
002F25 CD 75 16 00         B    24    				call os_check_volume_format		002F29 C0                  B    25    				ret nz		
                           B    26    				
002F2A 112A0000            B    27    				ld de,02ah						002F2E ED53 2A 5F 00       B    28    				ld (serial_filename),de			002F33 CD DF 30 00         B    29    				call rx_get_header
002F37 C0                  B    30    				ret nz
002F38 CD 2B 46 00         B    31    				call s_holdack					                           B    32    				
002F3C 21 3E 5F 00         B    33    				ld hl,serial_fileheader			002F40 CD 47 16 00         B    34    				call os_create_file
002F44 C2 BA 2F 00         B    35    				jp nz,rxwtd_fail				                           B    36    				
002F48 21 48 5B 00         B    37    				ld hl,ser_recsave_msg
002F4C CD F3 13 00         B    38    				call os_show_packed_text
                           B    39    				
002F50 2A 4E 5F 00         B    40    rx_rnblk		ld hl,(serial_fileheader+16)	002F54 22 99 68 00         B    41    				ld (serial_file_length_cache),h
002F58 21 96 69 00         B    42    				ld hl,buffer_addr
002F5C 22 96 68 00         B    43    				ld (rx_buffer_ptr),hl
002F60 0680                B    44    				ld b,buffer_blocks				                           B    45    				
002F62 CD 13 46 00         B    46    rx_lnb			call s_goodack
002F66 CD BD 45 00         B    47    				call s_getblock
002F6A 28 0F               B    48    				jr z,rxtd_blok
                           B    49    
002F6C F5                  B    50    				push af							002F6D CD 24 46 00         B    51    				call s_badack					002F71 21 3E 5F 00         B    52    				ld hl,serial_fileheader			002F75 CD DD 16 00         B    53    				call os_erase_file
002F79 F1                  B    54    				pop af
002F7A C9                  B    55    				ret
                           B    56    
002F7B CD 2B 46 00         B    57    rxtd_blok		call s_holdack
                           B    58    				
002F7F 21 96 66 00         B    59    				ld hl,sector_buffer
002F83 ED5B 96 68 00       B    60    				ld de,(rx_buffer_ptr)
002F88 01000100            B    61    				ld bc,256
002F8C EDB0                B    62    				ldir
002F8E ED53 96 68 00       B    63    				ld (rx_buffer_ptr),de
                           B    64    				
002F93 2A 4E 5F 00         B    65    				ld hl,(serial_fileheader+16)
002F97 11000100            B    66    				ld de,256
002F9B AF                  B    67    				xor a
002F9C ED52                B    68    				sbc hl,de
002F9E 22 4E 5F 00         B    69    				ld (serial_fileheader+16),hl
002FA2 28 1D               B    70    				jr z,rx_lbr
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 110


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
002FA4 38 1B               B    71    				jr c,rx_lbr
002FA6 10 BA               B    72    				djnz rx_lnb
                           B    73    
002FA8 01008000            B    74    				ld bc,buffer_blocks*256
002FAC 11 96 69 00         B    75    				ld de,buffer_addr
002FB0 21 3E 5F 00         B    76    				ld hl,serial_fileheader
002FB4 CD 5D 16 00         B    77    				call os_write_bytes_to_file
002FB8 28 96               B    78    				jr z,rx_rnblk
002FBA F5                  B    79    rxwtd_fail		push af
002FBB CD 24 46 00         B    80    				call s_badack
002FBF F1                  B    81    				pop af
002FC0 C9                  B    82    				ret
                           B    83    				
002FC1 CD 13 46 00         B    84    rx_lbr			call s_goodack
002FC5 ED4B 99 68 00       B    85    				ld bc,(serial_file_length_cache
002FCA 11 96 69 00         B    86    				ld de,buffer_addr
002FCE 21 3E 5F 00         B    87    				ld hl,serial_fileheader
002FD2 CD 5D 16 00         B    88    				call os_write_bytes_to_file
002FD6 C0                  B    89    				ret nz	
                           B    90    				
002FD7 3E20                B    91    rxtd_done		ld a,020h						002FD9 B7                  B    92    				or a
002FDA C9                  B    93    				ret
                           B    94    
                           B    95    				
                           B    96    
                           B    97    				
002FDB 3E21                B    98    rx_nrs			ld a,'!'						002FDD BE                  B    99    				cp (hl)							002FDE C2 89 30 00         B   100    				jr nz,notrxe
002FE2 23                  B   101    				inc hl
002FE3 3E20                B   102    				ld a,' '
002FE5 BE                  B   103    				cp (hl)
002FE6 2B                  B   104    				dec hl
002FE7 C2 89 30 00         B   105    				jr nz,notrxe
002FEB 112A0000            B   106    				ld de,02ah						002FEF ED53 2A 5F 00       B   107    				ld (serial_filename),de			002FF4 CD DF 30 00         B   108    				call rx_get_header
002FF8 C0                  B   109    				ret nz
002FF9 21 3E 5B 00         B   110    				ld hl,ser_rec2_msg
002FFD CD F3 13 00         B   111    				call os_show_packed_text
003001 CD 13 46 00         B   112    				call s_goodack
003005 3E01                B   113    				ld a,1							003007 32 3D 5F 00         B   114    				ld (serial_timeout),a
00300B CD BD 45 00         B   115    				call s_getblock					00300F 28 07               B   116    				jr z,rxe_fblok
003011 F5                  B   117    rxe_badblock	push af							003012 CD 24 46 00         B   118    				call s_badack					003016 F1                  B   119    				pop af
003017 C9                  B   120    				ret
                           B   121    	
003018 2A 98 66 00         B   122    rxe_fblok		ld hl,(sector_buffer+2)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 111


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
00301C 1150524F            B   123    				ld de,04f5250h					003020 AF                  B   124    				xor a
003021 28 04               B   125    				jr z,rxe_ok
003023 3E1A                B   126    				ld a,1ah						003025 B7                  B   127    				or a
003026 C9                  B   128    				ret
003027 2A 9B 66 00         B   129    rxe_ok			ld hl,(sector_buffer+5)			00302B 22 21 5F 00         B   130    				ld (serial_ez80_address),hl
00302F 01000100            B   131    				ld bc,256						003033 DD21 3E 5F 00       B   132    				ld ix,serial_fileheader
003038 AF                  B   133    				xor a
003039 DDB612              B   134    				or (ix+18)						00303C 20 0A               B   135    				jr nz,mtones
00303E DDB611              B   136    				or a,(ix+17)					003041 20 05               B   137    				jr nz,mtones
003043 0600                B   138    				ld b,0
003045 DD4E10              B   139    				ld c,(ix+16)					003048 21 96 66 00         B   140    mtones			ld hl,sector_buffer				00304C ED5B 21 5F 00       B   141    				ld de,(serial_ez80_address)		003051 EDB0                B   142    				ldir
                           B   143    				
003053 D5                  B   144    				push de
003054 CD 13 46 00         B   145    				call s_goodack		
003058 DDE1                B   146    				pop ix							00305A 2A 4E 5F 00         B   147    				ld hl,(serial_fileheader+16)	00305E 11000100            B   148    				ld de,256
003062 AF                  B   149    				xor a
003063 ED52                B   150    				sbc hl,de						003065 28 18               B   151    				jr z,rxe_done
003067 38 16               B   152    				jr c,rxe_done
003069 EB                  B   153    				ex de,hl
00306A ED53 4E 5F 00       B   154    				ld (serial_fileheader+16),de	00306F DD2A 21 5F 00       B   155    				ld ix,(serial_ez80_address)
003074 01000100            B   156    				ld bc,256
003078 DD09                B   157    				add ix,bc
00307A CD 7B 45 00         B   158    				call s_gbloop					00307E C0                  B   159    				ret nz
00307F E1                  B   160    rxe_done		pop hl							003080 CD E3 3B 00         B   161    				call enable_nmi					003084 2A 21 5F 00         B   162    				ld hl,(serial_ez80_address)
003088 E9                  B   163    				jp (hl)							                           B   164    				
                           B   165    				
                           B   166    
003089 CD 26 31 00         B   167    notrxe			call clear_serial_filename
                           B   168    				
00308D 0610                B   169    				ld b,16							00308F 11 2A 5F 00         B   170    				ld de,serial_filename
003093 CD 02 12 00         B   171    				call os_copy_ascii_run			003097 79                  B   172    				ld a,c
003098 32 3C 5F 00         B   173    				ld (serial_fn_length),a
00309C CD A9 0F 00         B   174    				call os_scan_for_space
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 112


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
                           B   175    				
0030A0 CD 5B 1C 00         B   176    				call hexword_or_bust			0030A4 CA E8 15 00         B   177    				jp z,os_no_start_addr			0030A8 ED53 96 68 00       B   178    				ld (data_load_addr),de			0030AD 2A B3 60 00         B   179    				ld hl,(sys_ram_high)			0030B1 2B                  B   180    				dec hl
0030B2 AF                  B   181    				xor a
0030B3 ED52                B   182    				sbc hl,de
0030B5 38 04               B   183    				jr c,os_prok
0030B7 3E26                B   184    				ld a,026h						0030B9 B7                  B   185    				or a
0030BA C9                  B   186    				ret
                           B   187    
0030BB CD DF 30 00         B   188    os_prok			call rx_get_header
0030BF C0                  B   189    				ret nz
                           B   190    
0030C0 21 3E 5B 00         B   191    				ld hl,ser_rec2_msg
0030C4 CD F3 13 00         B   192    				call os_show_packed_text
                           B   193    	
0030C8 2A 96 68 00         B   194    				ld hl,(data_load_addr)			0030CC CD 69 45 00         B   195    				call serial_receive_file
0030D0 C0                  B   196    				ret nz							                           B   197    
0030D1 ED5B 4E 5F 00       B   198    				ld de,(serial_fileheader+16)	0030D6 ED53 99 68 00       B   199    				ld (filesize_cache),de
0030DB C3 B1 2C 00         B   200    				jp report_bytes_loaded			                           B   201    				
                           B   202    ;----------------------------------------------
                           B   203    
0030DF                     B   204    rx_get_header
0030DF 21 3A 5B 00         B   205    				ld hl,ser_rec_msg
0030E3 CD F3 13 00         B   206    				call os_show_packed_text
                           B   207    				
0030E7 3E00                B   208    				ld a,0
0030E9 32 5F 5F 00         B   209    				ld (anim_wait_count),a			0030ED 3A 5F 5F 00         B   210    get_hdr_loop	ld a,(anim_wait_count)
0030F1 3C                  B   211    				inc a
0030F2 47                  B   212    				ld b,a
0030F3 FE06                B   213    				cp 6
0030F5 20 07               B   214    				jr nz,notsix
0030F7 0E20                B   215    				ld c,' '
0030F9 0605                B   216    				ld b,5
0030FB AF                  B   217    				xor a
0030FC 18 02               B   218    				jr mcharset
0030FE 0E2E                B   219    notsix			ld c,'.'
003100 32 5F 5F 00         B   220    mcharset		ld (anim_wait_count),a
003104 CD 2D 1A 00         B   221    				call os_print_multiple_chars
003108 CD 65 0F 00         B   222    				call home_cursor
                           B   223    				
00310C 21 2A 5F 00         B   224    				ld hl,serial_filename			003110 3E01                B   225    				ld a,1							003112 CD CE 44 00         B   226    				call serial_get_header
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 113


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
003116 C8                  B   227    				ret z
003117 FE83                B   228    				cp 083h							003119 C0                  B   229    				ret nz
00311A CD B3 44 00         B   230    				call os_get_key_press
00311E FE76                B   231    				cp 076h
003120 20 CB               B   232    				jr nz,get_hdr_loop
003122 3E80                B   233    				ld a,080h						003124 B7                  B   234    notsto			or a
003125 C9                  B   235    				ret								                           B   236    							
                           B   237    
                           B   238    ;----------------------------------------------
                           B   239    
003126                     B   240    clear_serial_filename
                           B   241    
003126 E5                  B   242    				push hl							003127 21 2A 5F 00         B   243    				ld hl,serial_filename
00312B 01100000            B   244    				ld bc,16
00312F AF                  B   245    				xor a
003130 CD 56 15 00         B   246    				call os_bchl_memfill
003134 E1                  B   247    				pop hl
003135 C9                  B   248    				ret
                           B   249    
                           B   250    ;----------------------------------------------
                           B     0    	include 'commands\tx.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'TX' - Transmit binary file via serial port co
                           B     3    ;----------------------------------------------
                           B     4    
003136 7E                  B     5    os_cmd_tx		ld a,(hl)						003137 B7                  B     6    				or a
003138 CA E0 15 00         B     7    				jp z,os_no_fn_error
                           B     8    			
00313C E5                  B     9    				push hl							00313D 21 2A 5F 00         B    10    				ld hl,serial_filename
003141 01100000            B    11    				ld bc,16
003145 AF                  B    12    				xor a
003146 CD 56 15 00         B    13    				call os_bchl_memfill
00314A E1                  B    14    				pop hl
                           B    15    			
00314B 0610                B    16    				ld b,16							00314D 11 2A 5F 00         B    17    				ld de,serial_filename
003151 CD 02 12 00         B    18    				call os_copy_ascii_run			003155 79                  B    19    				ld a,c
003156 32 3C 5F 00         B    20    				ld (serial_fn_length),a
00315A CD A9 0F 00         B    21    				call os_scan_for_space
                           B    22    							
00315E CD 5B 1C 00         B    23    				call hexword_or_bust			003162 CA E8 15 00         B    24    				jp z,os_no_start_addr			003166 ED53 21 5F 00       B    25    				ld (serial_ez80_address),de
                           B    26    			
00316B CD 5B 1C 00         B    27    				call hexword_or_bust			Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 114


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\tx.asm
00316F CA EC 15 00         B    28    				jp z,os_no_filesize
003173 ED53 24 5F 00       B    29    				ld (serial_file_length),de
003178 21000000            B    30    				ld hl,0
00317C 3E07                B    31    				ld a,07h						00317E B7                  B    32    				or a
00317F ED5A                B    33    				adc hl,de
003181 28 1D               B    34    				jr z,s_error
                           B    35    				
003183 21 43 5B 00         B    36    				ld hl,ser_send_msg
003187 CD F3 13 00         B    37    				call os_show_packed_text
                           B    38    			
00318B ED5B 24 5F 00       B    39    				ld de,(serial_file_length)
003190 21 2A 5F 00         B    40    				ld hl,serial_filename			003194 DD2A 21 5F 00       B    41    				ld ix,(serial_ez80_address)
003199 CD 32 46 00         B    42    				call serial_send_file
00319D C0                  B    43    				ret nz			
                           B    44    			
00319E 3E20                B    45    				ld a,020h						0031A0 B7                  B    46    s_error			or a
0031A1 C9                  B    47    				ret
                           B    48    				
                           B    49    			
                           B    50    ;----------------------------------------------
                           B     0    	include 'commands\t.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'T' - Show memory as ascii text command. V0.02
                           B     3    ;----------------------------------------------
                           B     4    
0031A2 CD 5B 1C 00         B     5    os_cmd_t		call hexword_or_bust			0031A6 28 05               B     6    				jr z,t_no_hex					0031A8 ED53 4E 61 00       B     7    				ld (mem_mon_addr),de
                           B     8    							
0031AD 0610                B     9    t_no_hex		ld b,16
0031AF C5                  B    10    smaalp			push bc
                           B    11    				
0031B0 21 F3 31 00         B    12    				ld hl,gtr_cmd_prefix			0031B4 CD 1C 0F 00         B    13    				call os_print_string
0031B8 ED5B 4E 61 00       B    14    				ld de,(mem_mon_addr)
0031BD CD F4 12 00         B    15    				call os_show_hex_address
                           B    16    
0031C1 21 B8 61 00         B    17    				ld hl,output_line
0031C5 3620                B    18    				ld (hl),' '
0031C7 23                  B    19    				inc hl
0031C8 3622                B    20    				ld (hl),022h
0031CA 0610                B    21    				ld b,16
0031CC 23                  B    22    mabllp			inc hl
0031CD 1A                  B    23    				ld a,(de)	
0031CE FE20                B    24    				cp 020h
0031D0 38 04               B    25    				jr c,chchar
0031D2 FE7F                B    26    				cp 07fh
0031D4 38 02               B    27    				jr c,nchchar
0031D6 3E7C                B    28    chchar			ld a,07ch
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 115


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\t.asm
0031D8 77                  B    29    nchchar			ld (hl),a
0031D9 13                  B    30    				inc de
0031DA 10 F0               B    31    				djnz mabllp
                           B    32    
0031DC ED53 4E 61 00       B    33    				ld (mem_mon_addr),de
0031E1 23                  B    34    				inc hl
0031E2 3622                B    35    				ld (hl),022h
0031E4 23                  B    36    				inc hl
0031E5 360B                B    37    				ld (hl),11
0031E7 23                  B    38    				inc hl
0031E8 3600                B    39    				ld (hl),0
0031EA CD 1F 13 00         B    40    				call os_print_output_line
0031EE C1                  B    41    				pop bc
0031EF 10 BE               B    42    				djnz smaalp
0031F1 AF                  B    43    				xor a
0031F2 C9                  B    44    				ret
                           B    45    	
                           B    46    ;----------------------------------------------
                           B    47    
0031F3 3E2000              B    48    gtr_cmd_prefix	db '> ',0
                           B    49    
                           B    50    ;----------------------------------------------
                           B     0    	include 'commands\mount.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; "MOUNT" = Re-mount and show drives v0.02 - AD
                           B     3    ;----------------------------------------------
                           B     4    
0031F6                     B     5    os_cmd_remount
                           B     6    
0031F6 3E00                B     7    				ld a,0							0031F8 CD 12 18 00         B     8    				call os_mount_volumes
0031FC CD BC 13 00         B     9    				call os_new_line
003200 AF                  B    10    				xor a
003201 C9                  B    11    				ret
                           B    12    
                           B    13    ;----------------------------------------------
                           B    14    	
                           B     0    	include 'commands\vers.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; "Vers" = Show OS / Hardware version v0.02 - A
                           B     3    ;----------------------------------------------
                           B     4    
003202                     B     5    os_cmd_vers
                           B     6    
003202 21 7D 56 00         B     7    				ld hl,os_version_txt
003206 CD 1C 0F 00         B     8    				call os_print_string
                           B     9    			
00320A CD 95 41 00         B    10    				call hwsc_get_version
00320E D5                  B    11    				push de
00320F EB                  B    12    				ex de,hl
003210 CD 13 13 00         B    13    				call os_show_hex_word
                           B    14    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 116


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\vers.asm
003214 21 A0 56 00         B    15    				ld hl,fwd_slash_txt
003218 CD 1C 0F 00         B    16    				call os_print_string
                           B    17    				
00321C 21 8B 56 00         B    18    				ld hl,hw_version_txt
003220 CD 1C 0F 00         B    19    				call os_print_string
003224 D1                  B    20    				pop de
003225 CD 13 13 00         B    21    				call os_show_hex_word
                           B    22    				
003229 CD BC 13 00         B    23    				call os_new_line
00322D CD BC 13 00         B    24    				call os_new_line	
003231 AF                  B    25    				xor a
003232 C9                  B    26    				ret
                           B    27    	
                           B    28    ;----------------------------------------------
                           B    29    	
                           B     0    	include 'commands\exec.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"exec" - execute script V0.04 - ADL mode
                           B     3    ;
                           B     4    ; Notes: Changing drives within a script not su
                           B     5    ;        Scripts cannot launch scripts as this 
                           B     6    ;		 Abort with CRTL + C
                           B     7    ;
                           B     8    ;        Supports: IF [CONDITION] jumps. Syntax
                           B     9    ;        
                           B    10    ;          "IF ENVAR = STRING LABEL" (or IF ENV
                           B    11    ;          (goto LABEL must be declared as [LAB
                           B    12    ;----------------------------------------------
                           B    13    
       00000010            B    14    max_if_chars		equ 16 ;(string size for en
                           B    15    
       00000000            B    16    scr_in_script		equ 0
       00000001            B    17    scr_find_new_line	equ 1
       00000002            B    18    scr_if_condition	equ 2
       00000003            B    19    scr_end				equ 3
                           B    20    
                           B    21    
003233 21 1F 62 00         B    22    os_cmd_exec		ld hl,script_flags				003237 CB46                B    23    				bit scr_in_script,(hl)
003239 C2 CA 33 00         B    24    				jp nz,script_error
00323D E5                  B    25    				push hl
00323E CD 46 32 00         B    26    				call do_script
003242 E1                  B    27    				pop hl
003243 CB86                B    28    				res scr_in_script,(hl)
003245 C9                  B    29    				ret
                           B    30    				
003246 CBC6                B    31    do_script		set scr_in_script,(hl)
                           B    32    			
003248 2A 0A 62 00         B    33    				ld hl,(os_args_loc)				00324C 11 37 61 00         B    34    				ld de,script_fn					003250 060D                B    35    				ld b,13
003252 CD 02 12 00         B    36    				call os_copy_ascii_run
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 117


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\exec.asm
003256 AF                  B    37    				xor a
003257 12                  B    38    				ld (de),a
                           B    39    				
003258 CD 45 1A 00         B    40    				call fs_get_dir_cluster			00325C ED53 16 62 00       B    41    				ld (script_dir),de
                           B    42    				
003261 CD 75 16 00         B    43    				call os_check_volume_format		003265 C0                  B    44    				ret nz
                           B    45    				
003266 CD 96 33 00         B    46    				call new_script
                           B    47    
                           B    48    ;----------------------------------------------
                           B    49    
                           B    50    
00326A 3A 7C 62 00         B    51    scrp_loop		ld a,(key_mod_flags)			00326E E602                B    52    				and 2
003270 28 12               B    53    				jr z,no_quit_script	
003272 CD B3 44 00         B    54    				call os_get_key_press
003276 FE21                B    55    				cp 021h							003278 20 0A               B    56    				jr nz,no_quit_script
                           B    57    
00327A 21 57 5B 00         B    58    				ld hl,script_aborted_msg
00327E CD F3 13 00         B    59    				call os_show_packed_text
003282 AF                  B    60    				xor a							003283 C9                  B    61    				ret
                           B    62    					
                           B    63    
003284 CD A9 33 00         B    64    no_quit_script	call open_script				003288 C0                  B    65    				ret nz
003289 CD D4 33 00         B    66    				call read_script				00328D C0                  B    67    				ret nz
00328E 21 1F 62 00         B    68    				ld hl,script_flags				003292 CB5E                B    69    				bit scr_end,(hl)
003294 28 02               B    70    				jr z,scr_to_do
003296 AF                  B    71    scr_done		xor a
003297 C9                  B    72    				ret
                           B    73    				
003298 21 66 61 00         B    74    scr_to_do		ld hl,commandstring				00329C 7E                  B    75    				ld a,(hl)
00329D FE5B                B    76    				cp '['
00329F 28 1C               B    77    				jr z,exec_scr_next
                           B    78    
0032A1 11 E5 56 00         B    79    				ld de,if_command_txt			0032A5 0603                B    80    				ld b,3
0032A7 CD E3 11 00         B    81    				call os_compare_strings
0032AB 28 18               B    82    				jr z,do_exec_if
                           B    83    				
0032AD 11 E8 56 00         B    84    				ld de,end_command_txt			0032B1 0604                B    85    				ld b,4
0032B3 CD E3 11 00         B    86    				call os_compare_strings
0032B7 28 DD               B    87    				jr z,scr_done
                           B    88    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 118


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\exec.asm
0032B9 CD 41 0C 00         B    89    				call os_parse_cmd_chk_ps		                           B    90    				
0032BD 21 1F 62 00         B    91    exec_scr_next	ld hl,script_flags
0032C1 CBCE                B    92    				set scr_find_new_line,(hl)
0032C3 18 A5               B    93    				jr scrp_loop
                           B    94    	
                           B    95    ;----------------------------------------------
                           B    96    
                           B    97    ; Handle "IF" instructions in the format:
                           B    98    
                           B    99    ; "IF ENVAR = VALUE LABLE"
                           B   100    ; "IF ENVAR <> VALUE LABLE"
                           B   101    ;  (LABEL must be declared at start of a script
                           B   102    ;  square brackets ([label]) with no other data
                           B   103    
0032C5 21 68 61 00         B   104    do_exec_if		ld hl,commandstring+2			0032C9 CD B2 0F 00         B   105    				call os_scan_for_non_space
0032CD CA CA 33 00         B   106    				jr z,script_error				0032D1 11 20 62 00         B   107    				ld de,if_name_txt
0032D5 0610                B   108    				ld b,max_if_chars
0032D7 CD 02 12 00         B   109    				call os_copy_ascii_run			0032DB AF                  B   110    				xor a
0032DC 12                  B   111    				ld (de),a
                           B   112    				
0032DD CD B2 0F 00         B   113    				call os_scan_for_non_space		0032E1 CA CA 33 00         B   114    				jr z,script_error
0032E5 DD21 1F 62 00       B   115    				ld ix,script_flags
0032EA DDCB0096            B   116    				res scr_if_condition,(ix)
0032EE 7E                  B   117    				ld a,(hl)
0032EF FE3D                B   118    				cp '='
0032F1 28 04               B   119    				jr z,if_equals
0032F3 DDCB00D6            B   120    				set scr_if_condition,(ix)		                           B   121    
0032F7 CD A9 0F 00         B   122    if_equals		call os_scan_for_space			0032FB CD B2 0F 00         B   123    				call os_scan_for_non_space		0032FF CA CA 33 00         B   124    				jr z,script_error
003303 11 32 62 00         B   125    				ld de,if_value_txt				003307 0610                B   126    				ld b,max_if_chars
003309 CD 02 12 00         B   127    				call os_copy_ascii_run
00330D AF                  B   128    				xor a
00330E 12                  B   129    				ld (de),a
                           B   130    				
00330F CD B2 0F 00         B   131    				call os_scan_for_non_space
003313 CA CA 33 00         B   132    				jr z,script_error
003317 11 44 62 00         B   133    				ld de,if_label_txt				00331B 0610                B   134    				ld b,max_if_chars
00331D CD 02 12 00         B   135    				call os_copy_ascii_run			003321 AF                  B   136    				xor a
003322 12                  B   137    				ld (de),a						                           B   138    								
003323 21 20 62 00         B   139    				ld hl,if_name_txt				003327 CD 0C 1B 00         B   140    				call os_get_envar				Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 119


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\exec.asm
00332B C2 BD 32 00         B   141    				jp nz,exec_scr_next				                           B   142    								
00332F 21 32 62 00         B   143    				ld hl,if_value_txt
003333 DD21 1F 62 00       B   144    				ld ix,script_flags
003338 DDCB0056            B   145    				bit scr_if_condition,(ix)
00333C 20 0A               B   146    				jr nz,if_cond_diff
00333E CD E3 11 00         B   147    				call os_compare_strings			003342 C2 BD 32 00         B   148    				jp nz,exec_scr_next				003346 18 08               B   149    				jr if_cond_met
003348 CD E3 11 00         B   150    if_cond_diff	call os_compare_strings			00334C CA BD 32 00         B   151    				jp z,exec_scr_next				                           B   152    
003350 CD 96 33 00         B   153    if_cond_met		call new_script					                           B   154    
003354 CD A9 33 00         B   155    find_if_label	call open_script				003358 C0                  B   156    				ret nz
                           B   157    
003359 CD D4 33 00         B   158    				call read_script
00335D C0                  B   159    				ret nz
00335E 21 1F 62 00         B   160    				ld hl,script_flags
003362 CB5E                B   161    				bit scr_end,(hl)
003364 C2 96 32 00         B   162    				jp nz,scr_done
                           B   163    				
003368 21 66 61 00         B   164    				ld hl,commandstring				00336C 7E                  B   165    				ld a,(hl)
00336D FE5B                B   166    				cp '['
00336F 20 1D               B   167    				jr nz,not_a_label				                           B   168    				
003371 23                  B   169    if_find_csb		inc hl
003372 7E                  B   170    				ld a,(hl)
003373 B7                  B   171    				or a
003374 28 18               B   172    				jr z,not_a_label				003376 FE5D                B   173    				cp ']'							003378 20 F7               B   174    				jr nz,if_find_csb
00337A 3600                B   175    				ld (hl),0						00337C 21 67 61 00         B   176    				ld hl,commandstring+1
003380 11 44 62 00         B   177    				ld de,if_label_txt				003384 0610                B   178    				ld b,max_if_chars
003386 CD E3 11 00         B   179    				call os_compare_strings
00338A CA BD 32 00         B   180    				jp z,exec_scr_next				                           B   181    
00338E 21 1F 62 00         B   182    not_a_label		ld hl,script_flags
003392 CBCE                B   183    				set scr_find_new_line,(hl)		003394 18 BE               B   184    				jr find_if_label
                           B   185    											
                           B   186    ;----------------------------------------------
                           B   187    
003396 E5                  B   188    new_script		push hl
003397 21000000            B   189    				ld hl,0
00339B 22 19 62 00         B   190    				ld (script_file_offset),hl		00339F 21 1F 62 00         B   191    				ld hl,script_flags
0033A3 CB8E                B   192    				res scr_find_new_line,(hl)		Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 120


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\exec.asm
0033A5 CB9E                B   193    				res scr_end,(hl)
0033A7 E1                  B   194    				pop hl
0033A8 C9                  B   195    				ret
                           B   196    								
                           B   197    ;----------------------------------------------
                           B   198    
0033A9 CD 45 1A 00         B   199    open_script		call fs_get_dir_cluster			0033AD D5                  B   200    				push de
0033AE ED5B 16 62 00       B   201    				ld de,(script_dir)				0033B3 CD 51 1A 00         B   202    				call fs_update_dir_cluster
                           B   203    				
0033B7 21 37 61 00         B   204    				ld hl,script_fn					0033BB CD 08 16 00         B   205    				call os_find_file				0033BF ED53 1C 62 00       B   206    				ld (script_length),de			0033C4 D1                  B   207    				pop de
0033C5 C0                  B   208    				ret nz
0033C6 79                  B   209    				ld a,c							0033C7 B7                  B   210    				or a
0033C8 28 04               B   211    				jr z,scr_flok
                           B   212    				
0033CA 3E8C                B   213    script_error	ld a,08ch
0033CC B7                  B   214    				or a
0033CD C9                  B   215    				ret
                           B   216    				
0033CE CD 51 1A 00         B   217    scr_flok		call fs_update_dir_cluster		0033D2 AF                  B   218    				xor a
0033D3 C9                  B   219    				ret
                           B   220    				
                           B   221    ;----------------------------------------------
                           B   222    
                           B   223    
0033D4 21 66 61 00         B   224    read_script		ld hl,commandstring				0033D8 01500000            B   225    				ld bc,max_buffer_chars			0033DC 3E20                B   226    				ld a,32
0033DE CD 56 15 00         B   227    				call os_bchl_memfill
                           B   228    				
0033E2 11500000            B   229    				ld de,max_buffer_chars			0033E6 CD 19 16 00         B   230    				call os_set_load_length
                           B   231    				
0033EA AF                  B   232    				xor a
0033EB 2A 1C 62 00         B   233    				ld hl,(script_length)
0033EF ED5B 19 62 00       B   234    				ld de,(script_file_offset)		0033F4 37                  B   235    				scf
0033F5 ED52                B   236    				sbc hl,de						0033F7 30 08               B   237    				jr nc,not_eoscr					0033F9 21 1F 62 00         B   238    				ld hl,script_flags
0033FD CBDE                B   239    				set scr_end,(hl)				0033FF AF                  B   240    				xor a
003400 C9                  B   241    				ret
003401 CD 21 16 00         B   242    not_eoscr		call os_set_file_pointer
                           B   243    
003405 21 66 61 00         B   244    				ld hl,commandstring				Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 121


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\exec.asm
003409 CD 37 16 00         B   245    				call os_read_bytes_from_file
00340D B7                  B   246    				or a			
00340E 28 03               B   247    				jr z,scr_load_ok
003410 FECC                B   248    				cp 0cch							003412 C0                  B   249    				ret nz							                           B   250    
003413 21 1F 62 00         B   251    scr_load_ok		ld hl,script_flags
003417 CB4E                B   252    				bit scr_find_new_line,(hl)		003419 20 17               B   253    				jr nz,scr_fnl					                           B   254    
00341B 21 66 61 00         B   255    				ld hl,commandstring				00341F 0650                B   256    				ld b,max_buffer_chars
003421 7E                  B   257    scr_fcr			ld a,(hl)
003422 FE20                B   258    				cp 32
003424 38 05               B   259    				jr c,scr_gotclcr
003426 23                  B   260    				inc hl
003427 10 F8               B   261    				djnz scr_fcr
003429 AF                  B   262    				xor a
00342A C9                  B   263    				ret
00342B 3620                B   264    scr_gotclcr		ld (hl),32						00342D 23                  B   265    				inc hl
00342E 10 FB               B   266    				djnz scr_gotclcr
003430 AF                  B   267    				xor a
003431 C9                  B   268    				ret
                           B   269    
003432 FD2A 19 62 00       B   270    scr_fnl			ld iy,(script_file_offset)
003437 21 66 61 00         B   271    				ld hl,commandstring	
00343B 7E                  B   272    scr_find_cr		ld a,(hl)						00343C B7                  B   273    				or a
00343D 20 07               B   274    				jr nz,scr_neocl					00343F FD22 19 62 00       B   275    scr_eocl		ld (script_file_offset),iy
003444 18 8E               B   276    				jr read_script				
003446 FE20                B   277    scr_neocl		cp 20h							003448 38 05               B   278    				jr c,scr_got_cr
00344A 23                  B   279    				inc hl
00344B FD23                B   280    				inc iy
00344D 18 EC               B   281    				jr scr_find_cr
                           B   282    				
00344F 7E                  B   283    scr_got_cr		ld a,(hl)
003450 B7                  B   284    				or a							003451 28 EC               B   285    				jr z,scr_eocl					003453 FE20                B   286    				cp 20h
003455 30 05               B   287    				jr nc,scr_got_ch				003457 23                  B   288    				inc hl
003458 FD23                B   289    				inc iy
00345A 18 F3               B   290    				jr scr_got_cr
                           B   291    
00345C FD22 19 62 00       B   292    scr_got_ch		ld (script_file_offset),iy
003461 21 1F 62 00         B   293    				ld hl,script_flags				003465 CB8E                B   294    				res scr_find_new_line,(hl)
003467 C3 D4 33 00         B   295    				jr read_script
                           B   296    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 122


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\exec.asm
                           B   297    
                           B   298    ;----------------------------------------------
                           B   299    
                           B   300    		
                           B   301    				
                           B   302    				
                           B   303    				
                           B   304    				
                           B   305    				
                           B     0    	include 'commands\ltn.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; OS "<" Command: Update mem hex bytes and re-d
                           B     3    ;
                           B     4    ; Not currently enabled in PROSE
                           B     5    ;----------------------------------------------
                           B     6    
00346B                     B     7    os_cmd_ltn
                           B     8    
00346B AF                  B     9    				xor a
00346C C9                  B    10    				ret
                           B    11    
                           B    12    
                           B    13    ;----------------------------------------------
                           B    14    	
                           B     0    	include 'commands\pen.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"Pen" - Change attribute v0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
00346D                     B     5    os_cmd_pen
                           B     6    	
00346D 0602                B     7    				ld b,2							00346F DD21 CC 5E 00       B     8    				ld ix,current_pen
                           B     9    				
003474 CD 5B 1C 00         B    10    chpenlp			call hexword_or_bust			003478 28 0D               B    11    				jr z,pendone					00347A 23                  B    12    				inc hl
00347B DD7300              B    13    				ld (ix),e
00347E DD7201              B    14    				ld (ix+1),d
003481 DD23                B    15    				inc ix
003483 DD23                B    16    				inc ix
003485 10 ED               B    17    				djnz chpenlp	
                           B    18    				
003487 CD 8E 0F 00         B    19    pendone			call os_refresh_screen
00348B AF                  B    20    				xor a
00348C C9                  B    21    				ret
                           B    22    
                           B    23    ;----------------------------------------------
                           B     0    	include 'commands\palette.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"Palette" - Change attribute v0.01 - ADL mode
                           B     3    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 123


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\palette.asm
                           B     4    
00348D                     B     5    os_cmd_palette
                           B     6    
00348D 0610                B     7    				ld b,16							00348F DD21 D0 5E 00       B     8    				ld ix,pen_palette
                           B     9    				
003494 0E00                B    10    				ld c,0
003496 C5                  B    11    chcollp			push bc
003497 CD 5B 1C 00         B    12    				call hexword_or_bust			00349B C1                  B    13    				pop bc
00349C 28 0E               B    14    				jr z,colrdone					00349E 0C                  B    15    				inc c
00349F 23                  B    16    				inc hl
0034A0 DD7300              B    17    				ld (ix),e
0034A3 DD7201              B    18    				ld (ix+1),d
0034A6 DD23                B    19    				inc ix
0034A8 DD23                B    20    				inc ix
0034AA 10 EA               B    21    				djnz chcollp
                           B    22    			
0034AC 79                  B    23    colrdone		ld a,c
0034AD B7                  B    24    				or a
0034AE 20 04               B    25    				jr nz,pal_ok
0034B0 3E81                B    26    				ld a,81h						0034B2 B7                  B    27    				or a
0034B3 C9                  B    28    				ret
0034B4 21 D0 5E 00         B    29    pal_ok			ld hl,pen_palette
0034B8 CD 64 3D 00         B    30    				call hswc_set_ui_colours	
0034BC AF                  B    31    				xor a
0034BD C9                  B    32    				ret
                           B    33    
                           B    34    ;----------------------------------------------
                           B     0    	include 'commands\mouse.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; "Mouse" = Reset / Enable Mouse Driver v0.05 -
                           B     3    ;----------------------------------------------
                           B     4    
       00000280            B     5    window_width_pixels		equ 640
       000001E0            B     6    window_height_pixels	equ 480
                           B     7    
       00000064            B     8    default_sample_rate 	equ 100			; 100 s
       00000003            B     9    default_resolution		equ 03h			; 8 cou
       000000E6            B    10    default_scaling			equ 0e6h		; valid
                           B    11    
0034BE                     B    12    os_cmd_mouse
                           B    13    
                           B    14    		
0034BE CD 5E 3A 00         B    15    				call disable_ms_irq
                           B    16    
0034C2 21 B2 60 00         B    17    				ld hl,devices_connected
0034C6 CB8E                B    18    				res 1,(hl)
                           B    19    		
0034C8 CD DA 42 00         B    20    				call init_mouse
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 124


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\mouse.asm
0034CC C0                  B    21    				ret nz
                           B    22    			
0034CD AF                  B    23    				xor a
0034CE 32 86 62 00         B    24    				ld (mouse_packet_index),a
0034D2 32 87 62 00         B    25    				ld (mouse_buttons),a
0034D6 21000000            B    26    				ld hl,0
0034DA 22 88 62 00         B    27    				ld (mouse_disp_x),hl
0034DE 22 8B 62 00         B    28    				ld (mouse_disp_y),hl
                           B    29    
0034E2 21800200            B    30    				ld hl,window_width_pixels
0034E6 11E00100            B    31    				ld de,window_height_pixels
0034EA CD 3D 14 00         B    32    				call os_set_mouse_window
                           B    33    
0034EE CD 58 3A 00         B    34    				call enable_ms_irq
                           B    35    
0034F2 21 B2 60 00         B    36    				ld hl,devices_connected
0034F6 CBCE                B    37    				set 1,(hl)
0034F8 AF                  B    38    				xor a
0034F9 C9                  B    39    				ret				
                           B    40    				
                           B    41    ;----------------------------------------------
                           B    42    	
                           B     0    	include 'commands\vmode.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"vmode" - Change video mode - ADL mode 0.1
                           B     3    ;----------------------------------------------
                           B     4    
0034FA                     B     5    os_cmd_vmode
                           B     6    	
0034FA CD 5B 1C 00         B     7    				call hexword_or_bust			0034FE 28 78               B     8    				jr z,vm_no_data					003500 7B                  B     9    				ld a,e
                           B    10    
003501 FE04                B    11    set_vmode		cp 4
003503 30 6F               B    12    				jr nc,vm_bad_range
                           B    13    				
003505 2A 05 5F 00         B    14    				ld hl,(font_addr)				003509 ED5B 0B 5F 00       B    15    				ld de,(video_window_address)
00350E ED4B 08 5F 00       B    16    				ld bc,(font_length)
003513 EDB0                B    17    				ldir
                           B    18    								
003515 32 CB 5E 00         B    19    				ld (video_mode),a
003519 21070000            B    20    				ld hl,7
00351D 67                  B    21    				ld h,a
00351E ED6C                B    22    				mlt hl
003520 E5                  B    23    				push hl
003521 DDE1                B    24    				pop ix
003523 11 7C 35 00         B    25    				ld de,mode_param_list
003527 DD19                B    26    				add ix,de
003529 21000000            B    27    				ld hl,0
00352D 11000000            B    28    				ld de,0
003531 DD6E00              B    29    				ld l,(ix)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 125


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\vmode.asm
003534 DD6601              B    30    				ld h,(ix+1)
003537 DD5E02              B    31    				ld e,(ix+2)
00353A DD5603              B    32    				ld d,(ix+3)
00353D DD4604              B    33    				ld b,(ix+4)
003540 DDE5                B    34    				push ix
003542 CD 51 3C 00         B    35    				call set_bitmap_parameters
003546 DDE1                B    36    				pop ix
003548 DD4605              B    37    				ld b,(ix+5)
00354B DD4E06              B    38    				ld c,(ix+6)
00354E CD B7 3C 00         B    39    				call set_charmap_parameters
                           B    40    				
003552 2A 0B 5F 00         B    41    				ld hl,(video_window_address)	003556 ED5B 05 5F 00       B    42    				ld de,(font_addr)				00355B ED4B 08 5F 00       B    43    				ld bc,(font_length)				003560 EDB0                B    44    				ldir
                           B    45    				
003562 CD 70 3D 00         B    46    				call hwsc_clear_screen
                           B    47    				
003566 01080400            B    48    				ld bc,0408h
00356A CD 85 3C 00         B    49    				call set_font_parameters		                           B    50    				
00356E AF                  B    51    				xor a
00356F 32 F2 5E 00         B    52    				ld (active_cursor_image),a		                           B    53    				
003573 C9                  B    54    				ret
                           B    55    
003574 3E88                B    56    vm_bad_range	ld a,88h
003576 B7                  B    57    				or a
003577 C9                  B    58    				ret
                           B    59    
003578 3E81                B    60    vm_no_data		ld a,81h
00357A B7                  B    61    				or a
00357B C9                  B    62    				ret
                           B    63    
                           B    64    ;----------------------------------------------
                           B    65    
00357C                     B    66    mode_param_list
                           B    67    
00357C 4001E001            B    68    				dw 640/2,480
003580 00                  B    69    				db 00b
003581 503C                B    70    				db 80,60
                           B    71    				
003583 4001F000            B    72    				dw 640/2,240
003587 01                  B    73    				db 01b
003588 501E                B    74    				db 80,30
                           B    75    				
00358A A000E001            B    76    				dw 320/2,480
00358E 02                  B    77    				db 10b
00358F 283C                B    78    				db 40,60
                           B    79    				
003591 A000F000            B    80    				dw 320/2,240
003595 03                  B    81    				db 11b
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 126


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\vmode.asm
003596 281E                B    82    				db 40,30
                           B    83    				
                           B    84    ;----------------------------------------------
                           B     0    	include 'commands\font.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"font" - replace font. V0.01 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
003598                     B     5    os_cmd_font
                           B     6    	
003598 CD 75 16 00         B     7    				call os_check_volume_format	
00359C C0                  B     8    				ret nz
                           B     9    				
00359D CD DD 28 00         B    10    				call filename_or_bust			0035A1 22 96 68 00         B    11    				ld (scratch_pad),hl
                           B    12    
0035A5 CD 45 1A 00         B    13    				call fs_get_dir_cluster			0035A9 ED53 99 68 00       B    14    				ld (scratch_pad+3),de
                           B    15    				
0035AE CD D3 16 00         B    16    				call os_root_dir				0035B2 C0                  B    17    				ret nz
0035B3 21 E3 35 00         B    18    				ld hl,fonts_fn
0035B7 CD C3 16 00         B    19    				call os_change_dir
0035BB 20 1A               B    20    				jr nz,no_font
                           B    21    				
0035BD 2A 96 68 00         B    22    				ld hl,(scratch_pad)
0035C1 CD 08 16 00         B    23    				call os_find_file				0035C5 20 10               B    24    				jr nz,no_font
                           B    25    				
0035C7 11000700            B    26    				ld de,700h
0035CB CD 19 16 00         B    27    				call os_set_load_length			                           B    28    
0035CF 2A 05 5F 00         B    29    				ld hl,(font_addr)				0035D3 CD 37 16 00         B    30    				call os_read_bytes_from_file
                           B    31    						
0035D7 F5                  B    32    no_font			push af
0035D8 ED5B 99 68 00       B    33    				ld de,(scratch_pad+3)			0035DD CD 51 1A 00         B    34    				call fs_update_dir_cluster
0035E1 F1                  B    35    				pop af
0035E2 C9                  B    36    				ret
                           B    37    
                           B    38    ;----------------------------------------------
                           B    39    
0035E3 666F6E74 7300       B    40    fonts_fn		db "fonts",0
                           B    41    
                           B    42    ;----------------------------------------------
                           B     0    	include 'commands\set.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"set" - set an environment variable v0.01
                           B     3    ;
                           B     4    ; Command should be in format: "SET BLAH=SOMETH
                           B     5    ;
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 127


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\set.asm
                           B     6    ;----------------------------------------------
                           B     7    
0035E9 7E                  B     8    os_cmd_set		ld a,(hl)					; i
0035EA B7                  B     9    				or a
0035EB 28 3B               B    10    				jr z,show_envars
                           B    11    
0035ED 11 99 68 00         B    12    				ld de,scratch_pad+3			; p
0035F1 7E                  B    13    evsalp1			ld a,(hl)
0035F2 12                  B    14    				ld (de),a
0035F3 B7                  B    15    				or a
0035F4 28 2E               B    16    				jr z,set_bad_args
0035F6 FE3D                B    17    				cp '='
0035F8 28 04               B    18    				jr z,evsadone1
0035FA 23                  B    19    				inc hl
0035FB 13                  B    20    				inc de
0035FC 18 F3               B    21    				jr evsalp1
0035FE AF                  B    22    evsadone1		xor a
0035FF 12                  B    23    				ld (de),a
003600 13                  B    24    				inc de
003601 23                  B    25    				inc hl
003602 ED53 96 68 00       B    26    				ld (scratch_pad),de
                           B    27    
003607 7E                  B    28    evsalp2			ld a,(hl)
003608 12                  B    29    				ld (de),a
003609 FE20                B    30    				cp ' '
00360B 28 07               B    31    				jr z,evsadone2
00360D B7                  B    32    				or a
00360E 28 14               B    33    				jr z,set_bad_args
003610 23                  B    34    				inc hl
003611 13                  B    35    				inc de
003612 18 F3               B    36    				jr evsalp2
003614 AF                  B    37    evsadone2		xor a
003615 12                  B    38    				ld (de),a
                           B    39    				
003616 21 99 68 00         B    40    				ld hl,scratch_pad+3
00361A ED5B 96 68 00       B    41    				ld de,(scratch_pad)
00361F CD 4C 1B 00         B    42    				call os_set_envar
003623 C9                  B    43    				ret
                           B    44    
003624 3E82                B    45    set_bad_args	ld a,82h
003626 B7                  B    46    				or a
003627 C9                  B    47    				ret
                           B    48    				
                           B    49    
003628 21 AA 62 00         B    50    show_envars		ld hl,envar_list
                           B    51    				
00362C 7E                  B    52    show_envlp		ld a,(hl)
00362D FEFF                B    53    				cp 0ffh
00362F 28 12               B    54    				jr z,set_done
003631 E5                  B    55    				push hl
003632 CD 1C 0F 00         B    56    				call os_print_string
003636 CD BC 13 00         B    57    				call os_new_line
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 128


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\set.asm
00363A E1                  B    58    				pop hl
                           B    59    				
00363B 23                  B    60    set_fnl			inc hl
00363C 7E                  B    61    				ld a,(hl)
00363D B7                  B    62    				or a
00363E 20 FB               B    63    				jr nz,set_fnl
003640 23                  B    64    				inc hl
003641 18 E9               B    65    				jr show_envlp
                           B    66    				
003643 AF                  B    67    set_done		xor a
003644 C9                  B    68    				ret
                           B    69    								
                           B    70    ;----------------------------------------------
                           B     0    	include 'commands\dz.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; OS "DZ" Command: Z80-mode Disassemble V0.01
                           B     3    ;----------------------------------------------
                           B     4    
003645 FD21 56 23 00       B     5    os_cmd_dz		ld iy,prefix_bits_loc
00364A FDCB 07 86          B     6    				res adl_dis,(iy+var_adl)
00364E C3 78 1D 00         B     7    				jp os_cmd_d_go
                           B     8    				
                           B     9    ;----------------------------------------------
                           A  3071    
003652 C9                  A  3072    os_cmd_unused	ret		; <- dummy command, sho
                           A  3073    
                           A  3074    ;----------------------------------------------
                           A  3075    
003653                     A  3076    os_get_mem_high
                           A  3077    
003653 2A B3 60 00         A  3078    		ld hl,(sys_ram_high)
003657 ED5B B6 60 00       A  3079    		ld de,(vram_a_high)
00365C ED4B B9 60 00       A  3080    		ld bc,(vram_b_high)
003661 AF                  A  3081    		xor a
003662 C9                  A  3082    		ret
                           A  3083    								
                           A  3084    ;----------------------------------------------
                           A  3085    ; Drivers
                           A  3086    ;----------------------------------------------
                           A  3087    
                           B     0    	include		'prose_sdcard_driver.asm'		                           B     1    ;----------------------------------------------
                           B     2    ; Z80 MMC/SDC card access routines - Phil Rusto
                           B     3    ;----------------------------------------------
                           B     4    ;
                           B     5    ; Limitations:
                           B     6    ; ------------
                           B     7    ; Currently does not support V2.0 SD cards (IE:
                           B     8    ; Does not check for voltage compatibility or b
                           B     9    ; Somewhat arbitary timimg..
                           B    10    ;
                           B    11    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 129


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
                           B    12    
                           B    13    ; Key Routines:      Input Registers           
                           B    14    ; -------------      ---------------           
                           B    15    ; sdc_get_id			no arguments required  
                           B    16    ; sdc_read_sector		sector_LBA0-3			                           B    17    ; sdc_write_sector		sector_LBA0-3    		                           B    18    ;
                           B    19    ; (Assume all other registers are trashed.)
                           B    20    ;
                           B    21    ; Routines respond with Carry flag set if opera
                           B    22    
       00000000            B    23    sdc_error_spi_mode_failed			equ 0
       00000001            B    24    sdc_error_bad_init_mmc				equ 1
       00000002            B    25    sdc_error_bad_init					equ 2
       00000003            B    26    sdc_error_bad_id					equ 3
       00000004            B    27    sdc_error_bad_command_response		equ 4
       00000005            B    28    sdc_error_data_token_timeout		equ 5
       00000006            B    29    sdc_error_write_timeout				equ 6
       00000007            B    30    sdc_error_write_failed				equ 7
                           B    31    
                           B    32    ; Variables required:
                           B    33    ; -------------------
                           B    34    ;
                           B    35    ; "sector_buffer" - 512 bytes
                           B    36    ;
                           B    37    ; "sector_lba0" - LBA of desired sector LSB
                           B    38    ; "sector_lba1" 
                           B    39    ; "sector_lba2"
                           B    40    ; "sector_lba3" - LBA of desired sector MSB
                           B    41    ;
                           B    42    ; "sdc_sdc" - 1 byte (0 = card is MMC, 1 = card
                           B    43    
                           B    44    
                           B    45    ;----------------------------------------------
                           B    46    ; PROSE STANDARD DRIVER HEADER
                           B    47    ;----------------------------------------------
                           B    48    
003663                     B    49    sd_card_driver				; label of driver c
                           B    50    
003663 C3 77 36 00         B    51    	jp sdc_get_id			; $00 : init / get 
003667 C3 41 38 00         B    52    	jp sdc_read_sector		; $04 : jump to rea
00366B C3 91 38 00         B    53    	jp sdc_write_sector		; $08 : jump to wri
00366F 53445F43 41524400   B    54    	db "SD_CARD",0			; $0c : desired ASC
                           B    55    
                           B    56    ;----------------------------------------------
                           B    57    ; Hardware agnostic section..
                           B    58    ;----------------------------------------------
                           B    59    
003677                     B    60    sdc_get_id
                           B    61    
                           B    62    
                           B    63    ; Initializes card, reads CSD and CID into sect
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 130


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
                           B    64    ; containing ASCII device ID. Returns device ca
                           B    65    
                           B    66    ; Returns:
                           B    67    ; --------
                           B    68    ;   HL = Pointer to device ID string 
                           B    69    ; C:DE = Capacity (number of sectors)
                           B    70    
                           B    71    
003677 3E01                B    72    				ld a,1							003679 32 C7 39 00         B    73    				ld (sdc_sdc),a			
                           B    74    
00367D CD 0E 3A 00         B    75    				call sdc_power_off				003681 CD 19 3A 00         B    76    				call sdc_slow_clock				003685 CD E7 39 00         B    77    				call sdc_select_card			                           B    78    
003689 11004000            B    79    				ld de,16384						00368D CD B0 41 00         B    80    				call hwsc_time_delay
                           B    81    				
003691 CD 03 3A 00         B    82    				call sdc_power_on				                           B    83    
003695 11830000            B    84    				ld de,131						003699 CD B0 41 00         B    85    				call hwsc_time_delay
                           B    86    
00369D CD F2 39 00         B    87    				call sdc_deselect_card			                           B    88    	
0036A1 060A                B    89    				ld b,10							0036A3 CD 7F 39 00         B    90    sdc_ecilp		call sdc_send_eight_clocks
0036A7 10 FA               B    91    				djnz sdc_ecilp
                           B    92    	
0036A9 CD E7 39 00         B    93    				call sdc_select_card			                           B    94    	
0036AD 3E40                B    95    				ld a,040h						0036AF 01009500            B    96    				ld bc,09500h					0036B3 11000000            B    97    				ld de,00000h
0036B7 CD 2D 39 00         B    98    				call sdc_send_command		 
0036BB CD D8 39 00         B    99    				call sdc_get_byte				0036BF CD 52 39 00         B   100    				call sdc_wait_ncr				0036C3 EE01                B   101    				xor 01h							0036C5 C2 86 39 00         B   102    				jp nz,init_spi_mode_fail		                           B   103    
                           B   104    
0036C9 01401F00            B   105    				ld bc,8000						0036CD C5                  B   106    sdc_iwl			push bc							0036CE 3E77                B   107    				ld a,077h						0036D0 CD 25 39 00         B   108    				call sdc_send_command_null_args
0036D4 CD D8 39 00         B   109    				call sdc_get_byte				0036D8 CD D8 39 00         B   110    				call sdc_get_byte				0036DC 3E69                B   111    				ld a,069h						0036DE CD 25 39 00         B   112    				call sdc_send_command_null_args
0036E2 CD D8 39 00         B   113    				call sdc_get_byte
0036E6 C1                  B   114    				pop bc
0036E7 CD 52 39 00         B   115    				call sdc_wait_ncr				Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 131


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
0036EB CB57                B   116    				bit 2,a							0036ED 20 0C               B   117    				jr nz,mmc_init			
0036EF B7                  B   118    				or a
0036F0 28 2A               B   119    				jr z,sdc_init_done				0036F2 0B                  B   120    				dec bc
0036F3 78                  B   121    				ld a,b
0036F4 B1                  B   122    				or c
0036F5 20 D6               B   123    				jr nz,sdc_iwl
0036F7 C3 94 39 00         B   124    				jp sdc_init_fail
                           B   125    
                           B   126    
0036FB AF                  B   127    mmc_init		xor a							0036FC 32 C7 39 00         B   128    				ld (sdc_sdc),a
003700 01401F00            B   129    				ld bc,8000						003704 C5                  B   130    mmc_iwl			push bc
003705 3E41                B   131    				ld a,041h						003707 CD 25 39 00         B   132    				call sdc_send_command_null_args
00370B C1                  B   133    				pop bc
00370C CD 52 39 00         B   134    				call sdc_wait_ncr				003710 B7                  B   135    				or a							003711 28 09               B   136    				jr z,sdc_init_done
003713 0B                  B   137    				dec bc
003714 78                  B   138    				ld a,b
003715 B1                  B   139    				or c
003716 20 EC               B   140    				jr nz,mmc_iwl
003718 C3 90 39 00         B   141    				jp mmc_init_fail
                           B   142    
00371C                     B   143    sdc_init_done
                           B   144    
00371C 3E49                B   145    				ld a,049h						00371E CD 25 39 00         B   146    				call sdc_send_command_null_args
003722 CD 52 39 00         B   147    				call sdc_wait_ncr				003726 B7                  B   148    				or a							003727 C2 98 39 00         B   149    				jp nz,sdc_id_fail
00372B CD 66 39 00         B   150    				call sdc_wait_data_token		00372F B7                  B   151    				or a
003730 C2 98 39 00         B   152    				jp nz,sdc_id_fail
003734 21 96 66 00         B   153    				ld hl,sector_buffer				003738 CD 2E 38 00         B   154    				call sdc_read_id_bytes	
                           B   155    
00373C 3E4A                B   156    				ld a,04ah						00373E CD 25 39 00         B   157    				call sdc_send_command_null_args
003742 CD 52 39 00         B   158    				call sdc_wait_ncr				003746 B7                  B   159    				or a							003747 C2 98 39 00         B   160    				jp nz,sdc_id_fail
00374B CD 66 39 00         B   161    				call sdc_wait_data_token		00374F B7                  B   162    				or a
003750 C2 98 39 00         B   163    				jp nz,sdc_id_fail
003754 21 A6 66 00         B   164    				ld hl,sector_buffer+16			003758 CD 2E 38 00         B   165    				call sdc_read_id_bytes
00375C CD F2 39 00         B   166    				call sdc_deselect_card
                           B   167    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 132


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
                           B   168    
003760                     B   169    sdc_quit	
                           B   170    
003760 21 A9 66 00         B   171    				ld hl,sector_buffer+013h		003764 11 B6 66 00         B   172    				ld de,sector_buffer+020h
003768 01050000            B   173    				ld bc,5
00376C 3A C7 39 00         B   174    				ld a,(sdc_sdc)
003770 B7                  B   175    				or a
003771 20 01               B   176    				jr nz,sdc_cn5
003773 03                  B   177    				inc bc
003774 EDB0                B   178    sdc_cn5			ldir
003776 E5                  B   179    				push hl
003777 D5                  B   180    				push de
003778 21 AC 39 00         B   181    				ld hl,sdc_vnchars
00377C 011A0000            B   182    				ld bc,26
003780 EDB0                B   183    				ldir
003782 D1                  B   184    				pop de
003783 E1                  B   185    				pop hl
003784 13                  B   186    				inc de
003785 13                  B   187    				inc de
003786 7E                  B   188    				ld a,(hl)
003787 CB3F                B   189    				srl a
003789 CB3F                B   190    				srl a
00378B CB3F                B   191    				srl a
00378D CB3F                B   192    				srl a
00378F C630                B   193    				add a,030h						003791 12                  B   194    				ld (de),a
003792 13                  B   195    				inc de
003793 13                  B   196    				inc de
003794 7E                  B   197    				ld a,(hl)
003795 E60F                B   198    				and 0fh
003797 C630                B   199    				add a,030h
003799 12                  B   200    				ld (de),a						00379A 13                  B   201    				inc de
00379B 13                  B   202    				inc de
00379C 13                  B   203    				inc de
00379D 13                  B   204    				inc de
00379E 13                  B   205    				inc de
00379F 23                  B   206    				inc hl
0037A0 0604                B   207    				ld b,4
0037A2 7E                  B   208    sdc_snulp		ld a,(hl)						0037A3 CB3F                B   209    				srl a
0037A5 CB3F                B   210    				srl a
0037A7 CB3F                B   211    				srl a
0037A9 CB3F                B   212    				srl a
0037AB C630                B   213    				add a,030h
0037AD FE3A                B   214    				cp 03ah
0037AF 38 02               B   215    				jr c,sdc_hvl1
0037B1 C607                B   216    				add a,07h
0037B3 12                  B   217    sdc_hvl1		ld (de),a
0037B4 13                  B   218    				inc de
0037B5 7E                  B   219    				ld a,(hl)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 133


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
0037B6 E60F                B   220    				and 0fh
0037B8 C630                B   221    				add a,030h
0037BA FE3A                B   222    				cp 03ah
0037BC 38 02               B   223    				jr c,sdc_hvl2
0037BE C607                B   224    				add a,07h
0037C0 12                  B   225    sdc_hvl2		ld (de),a
0037C1 13                  B   226    				inc de
0037C2 23                  B   227    				inc hl
0037C3 10 DD               B   228    				djnz sdc_snulp
                           B   229    	
                           B   230    	
                           B   231    
0037C5 DD21 96 66 00       B   232    				ld ix,sector_buffer				0037CA DD7E06              B   233    				ld a,(ix+6)
0037CD E603                B   234    				and 00000011b
0037CF 57                  B   235    				ld d,a
0037D0 DD5E07              B   236    				ld e,(ix+7)
0037D3 DD7E08              B   237    				ld a,(ix+8)
0037D6 E6C0                B   238    				and 11000000b
0037D8 CB27                B   239    				sla a
0037DA CB13                B   240    				rl e
0037DC CB12                B   241    				rl d
0037DE CB27                B   242    				sla a
0037E0 CB13                B   243    				rl e
0037E2 CB12                B   244    				rl d							                           B   245    	
0037E4 DD7E09              B   246    				ld a,(ix+9)
0037E7 E603                B   247    				and 00000011b
0037E9 47                  B   248    				ld b,a
0037EA DD7E0A              B   249    				ld a,(ix+10)
0037ED E680                B   250    				and 10000000b
0037EF CB27                B   251    				sla a
0037F1 CB10                B   252    				rl b							                           B   253    	
0037F3 04                  B   254    				inc b
0037F4 04                  B   255    				inc b
0037F5 21000000            B   256    				ld hl,0
0037F9 CB23                B   257    sdc_cmsh		sla e
0037FB CB12                B   258    				rl d
0037FD CB15                B   259    				rl l
0037FF CB14                B   260    				rl h
003801 10 F6               B   261    				djnz sdc_cmsh					                           B   262    	
003803 DD7E05              B   263    				ld a,(ix+5)
003806 E60F                B   264    				and 00001111b					003808 28 17               B   265    				jr z,sdc_nbls
00380A 47                  B   266    				ld b,a
00380B CB23                B   267    sdc_blsh		sla e
00380D CB12                B   268    				rl d
00380F CB15                B   269    				rl l
003811 CB14                B   270    				rl h
003813 10 F6               B   271    				djnz sdc_blsh					Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 134


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
                           B   272    	
003815 0609                B   273    				ld b,9							003817 CB3C                B   274    sdc_cbsec		srl h
003819 CB1D                B   275    				rr l
00381B CB1A                B   276    				rr d
00381D CB1B                B   277    				rr e
00381F 10 F6               B   278    				djnz sdc_cbsec
                           B   279    
003821 E5                  B   280    sdc_nbls		push hl
003822 C1                  B   281    				pop bc							003823 21 B6 66 00         B   282    				ld hl,sector_buffer+020h		                           B   283    
003827 CD 24 3A 00         B   284    				call sdc_fast_clock				00382B AF                  B   285    				xor a
00382C 37                  B   286    				scf
00382D C9                  B   287    				ret
                           B   288    
                           B   289    
                           B   290    ;----------------------------------------------
                           B   291    
00382E                     B   292    sdc_read_id_bytes
                           B   293    
00382E 0610                B   294    				ld b,16
003830 CD D8 39 00         B   295    sdc_csdlp		call sdc_get_byte
003834 77                  B   296    				ld (hl),a
003835 23                  B   297    				inc hl
003836 10 F8               B   298    				djnz sdc_csdlp
003838 CD D8 39 00         B   299    				call sdc_get_byte				00383C CD D8 39 00         B   300    				call sdc_get_byte				003840 C9                  B   301    				ret
                           B   302    	
                           B   303    ;----------------------------------------------
                           B   304    	
                           B   305    	
003841                     B   306    sdc_read_sector
                           B   307    
                           B   308    ;set c:de to sector number to read, 512 bytes r
                           B   309    
003841 CD E7 39 00         B   310    				call sdc_select_card
                           B   311    
003845 21 44 61 00         B   312    				ld hl,sector_lba0
003849 5E                  B   313    				ld e,(hl)						00384A 23                  B   314    				inc hl
00384B 56                  B   315    				ld d,(hl)
00384C 23                  B   316    				inc hl
00384D 4E                  B   317    				ld c,(hl)
00384E CB23                B   318    				sla e							003850 CB12                B   319    				rl d
003852 CB11                B   320    				rl c
003854 3E51                B   321    				ld a,051h						003856 0601                B   322    				ld b,001h						003858 CD 2D 39 00         B   323    				call sdc_send_command		
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 135


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
00385C CD 52 39 00         B   324    				call sdc_wait_ncr				003860 B7                  B   325    				or a							003861 C2 9C 39 00         B   326    				jp nz,sdc_bcr_error			
003865 CD 66 39 00         B   327    				call sdc_wait_data_token		003869 B7                  B   328    				or a
00386A C2 A0 39 00         B   329    				jp nz,sdc_dt_timeout
                           B   330    	
00386E 21 96 66 00         B   331    				ld hl,sector_buffer				003872 0600                B   332    				ld b,0
003874 CD D8 39 00         B   333    sdc_rslp		call sdc_get_byte
003878 77                  B   334    				ld (hl),a
003879 23                  B   335    				inc hl
00387A CD D8 39 00         B   336    				call sdc_get_byte
00387E 77                  B   337    				ld (hl),a
00387F 23                  B   338    				inc hl
003880 10 F2               B   339    				djnz sdc_rslp
003882 CD D8 39 00         B   340    				call sdc_get_byte				003886 CD D8 39 00         B   341    				call sdc_get_byte				                           B   342    
00388A CD F2 39 00         B   343    				call sdc_deselect_card
00388E AF                  B   344    				xor a
00388F 37                  B   345    				scf
003890 C9                  B   346    				ret
                           B   347    	
                           B   348    ;----------------------------------------------
                           B   349    
003891                     B   350    sdc_write_sector
                           B   351    
                           B   352    ;set c:de to sector number to write, 512 bytes 
                           B   353    
003891 CD E7 39 00         B   354    				call sdc_select_card
                           B   355    
003895 21 44 61 00         B   356    				ld hl,sector_lba0
003899 5E                  B   357    				ld e,(hl)						00389A 23                  B   358    				inc hl
00389B 56                  B   359    				ld d,(hl)
00389C 23                  B   360    				inc hl
00389D 4E                  B   361    				ld c,(hl)
00389E CB23                B   362    				sla e							0038A0 CB12                B   363    				rl d
0038A2 CB11                B   364    				rl c
0038A4 3E58                B   365    				ld a,058h						0038A6 0601                B   366    				ld b,001h						0038A8 CD 2D 39 00         B   367    				call sdc_send_command		
0038AC CD 52 39 00         B   368    				call sdc_wait_ncr				0038B0 B7                  B   369    				or a							0038B1 C2 9C 39 00         B   370    				jp nz,sdc_bcr_error			
                           B   371    	
0038B5 CD 7F 39 00         B   372    				call sdc_send_eight_clocks		                           B   373    
0038B9 3EFE                B   374    				ld a,0feh
0038BB CD C8 39 00         B   375    				call sdc_send_byte				Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 136


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
                           B   376    
0038BF 21 96 66 00         B   377    				ld hl,sector_buffer				0038C3 0600                B   378    				ld b,0
0038C5 7E                  B   379    sdc_wslp		ld a,(hl)
0038C6 CD C8 39 00         B   380    				call sdc_send_byte
0038CA 23                  B   381    				inc hl
0038CB 7E                  B   382    				ld a,(hl)
0038CC CD C8 39 00         B   383    				call sdc_send_byte
0038D0 23                  B   384    				inc hl
0038D1 10 F2               B   385    				djnz sdc_wslp
                           B   386    
0038D3 CD 7F 39 00         B   387    				call sdc_send_eight_clocks		0038D7 CD 7F 39 00         B   388    				call sdc_send_eight_clocks		                           B   389    		
0038DB CD D8 39 00         B   390    				call sdc_get_byte				0038DF E61F                B   391    				and 01fh
0038E1 CB3F                B   392    				srl a
0038E3 FE02                B   393    				cp 002h
0038E5 C2 A4 39 00         B   394    				jp nz,sdc_write_fail
                           B   395    
0038E9 0150C300            B   396    				ld bc,50000						0038ED CD D8 39 00         B   397    sdc_wcbsy		call sdc_get_byte				0038F1 FEFF                B   398    				cp 0ffh
0038F3 28 09               B   399    				jr z,sdc_nbusy
0038F5 0B                  B   400    				dec bc
0038F6 78                  B   401    				ld a,b
0038F7 B1                  B   402    				or c
0038F8 20 F3               B   403    				jr nz,sdc_wcbsy
0038FA C3 A8 39 00         B   404    				jp sdc_card_busy_timeout	
                           B   405    
0038FE 3E4D                B   406    sdc_nbusy		ld a,04dh						003900 01000100            B   407    				ld bc,0100h			
003904 11000000            B   408    				ld de,0000h
003908 CD 2D 39 00         B   409    				call sdc_send_command
00390C CD 52 39 00         B   410    				call sdc_wait_ncr				003910 B7                  B   411    				or a							003911 C2 A4 39 00         B   412    				jp nz,sdc_write_fail
003915 CD D8 39 00         B   413    				call sdc_get_byte				003919 B7                  B   414    				or a							00391A C2 A4 39 00         B   415    				jp nz,sdc_write_fail		
00391E CD F2 39 00         B   416    				call sdc_deselect_card			003922 AF                  B   417    				xor a
003923 37                  B   418    				scf
003924 C9                  B   419    				ret
                           B   420    	
                           B   421    ;----------------------------------------------
                           B   422    
003925                     B   423    sdc_send_command_null_args
                           B   424    
003925 01000100            B   425    				ld bc,0100h				
003929 11000000            B   426    				ld de,0000h
                           B   427    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 137


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
                           B   428    
00392D                     B   429    sdc_send_command
                           B   430    
                           B   431    ; set A = command, C:DE for sector number, B fo
                           B   432    
00392D F5                  B   433    				push af				
00392E CD 7F 39 00         B   434    				call sdc_send_eight_clocks		003932 F1                  B   435    				pop af
                           B   436    
003933 CD C8 39 00         B   437    				call sdc_send_byte				003937 79                  B   438    				ld a,c							003938 CD C8 39 00         B   439    				call sdc_send_byte
00393C 7A                  B   440    				ld a,d
00393D CD C8 39 00         B   441    				call sdc_send_byte
003941 7B                  B   442    				ld a,e
003942 CD C8 39 00         B   443    				call sdc_send_byte
003946 3E00                B   444    				ld a,0
003948 CD C8 39 00         B   445    				call sdc_send_byte
00394C 78                  B   446    				ld a,b							00394D CD C8 39 00         B   447    				call sdc_send_byte
003951 C9                  B   448    				ret
                           B   449    
                           B   450    ;----------------------------------------------
                           B   451    
003952                     B   452    sdc_wait_ncr
                           B   453    	
003952 C5                  B   454    				push bc
003953 01000000            B   455    				ld bc,0
003957 CD D8 39 00         B   456    sdc_wncrl		call sdc_get_byte				00395B CB7F                B   457    				bit 7,a							00395D 28 05               B   458    				jr z,sdc_gcr
00395F 0B                  B   459    				dec bc
003960 78                  B   460    			 	ld a,b
003961 B1                  B   461    				or c
003962 20 F3               B   462    				jr nz,sdc_wncrl
003964 C1                  B   463    sdc_gcr			pop bc
003965 C9                  B   464    				ret
                           B   465    	
                           B   466    ;----------------------------------------------
                           B   467    
003966                     B   468    sdc_wait_data_token
                           B   469    
003966 C5                  B   470    				push bc
003967 01000000            B   471    				ld bc,0
00396B CD D8 39 00         B   472    sdc_wdt			call sdc_get_byte				00396F FEFE                B   473    				cp 0feh
003971 28 09               B   474    				jr z,sdc_gdt
003973 0B                  B   475    				dec bc
003974 78                  B   476    			 	ld a,b
003975 B1                  B   477    				or c
003976 20 F3               B   478    				jr nz,sdc_wdt
003978 C1                  B   479    				pop bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 138


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
003979 3E01                B   480    				ld a,1							00397B C9                  B   481    				ret
                           B   482    
00397C C1                  B   483    sdc_gdt			pop bc
00397D AF                  B   484    				xor a							00397E C9                  B   485    				ret
                           B   486    
                           B   487    ;----------------------------------------------
                           B   488    
00397F                     B   489    sdc_send_eight_clocks
                           B   490    
00397F 3EFF                B   491    				ld a,0ffh
003981 CD C8 39 00         B   492    				call sdc_send_byte
003985 C9                  B   493    				ret
                           B   494    
                           B   495    ;----------------------------------------------
                           B   496    	
003986                     B   497    init_spi_mode_fail	
                           B   498    
003986 3E00                B   499    				ld a,sdc_error_spi_mode_failed
003988 F5                  B   500    fail_ret		push af
003989 CD F2 39 00         B   501    				call sdc_deselect_card
00398D F1                  B   502    				pop af
00398E B7                  B   503    				or a
00398F C9                  B   504    				ret
                           B   505    				
                           B   506    ;----------------------------------------------
                           B   507    
003990                     B   508    mmc_init_fail
                           B   509    
003990 3E01                B   510    				ld a,sdc_error_bad_init_mmc
003992 18 F4               B   511    				jr fail_ret
                           B   512    
                           B   513    ;----------------------------------------------
                           B   514    
003994                     B   515    sdc_init_fail
                           B   516    
003994 3E02                B   517    				ld a,sdc_error_bad_init
003996 18 F0               B   518    				jr fail_ret
                           B   519    	
                           B   520    	
                           B   521    ;----------------------------------------------
                           B   522    
003998                     B   523    sdc_id_fail
                           B   524    
003998 3E03                B   525    				ld a,sdc_error_bad_id
00399A 18 EC               B   526    				jr fail_ret
                           B   527    
                           B   528    ;----------------------------------------------
                           B   529    
00399C                     B   530    sdc_bcr_error
                           B   531    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 139


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
00399C 3E04                B   532    				ld a,sdc_error_bad_command_resp
00399E 18 E8               B   533    				jr fail_ret
                           B   534    	
                           B   535    ;----------------------------------------------
                           B   536    
0039A0                     B   537    sdc_dt_timeout
                           B   538    
0039A0 3E05                B   539    				ld a,sdc_error_data_token_timeo
0039A2 18 E4               B   540    				jr fail_ret
                           B   541    
                           B   542    ;----------------------------------------------
                           B   543    
0039A4                     B   544    sdc_write_fail
                           B   545    	
0039A4 3E07                B   546    				ld a,sdc_error_write_failed
0039A6 18 E0               B   547    				jr fail_ret
                           B   548    
                           B   549    ;----------------------------------------------
                           B   550    
0039A8                     B   551    sdc_card_busy_timeout
                           B   552    
0039A8 3E06                B   553    				ld a,sdc_error_write_timeout
0039AA 18 DC               B   554    				jr fail_ret
                           B   555    
                           B   556    ;----------------------------------------------
                           B   557    
0039AC 2076782E 7820534E   B   558    sdc_vnchars	db " vx.x SN:00000000      ",0,0,0,
0039B4 3A303030 30303030 
0039BC 30202020 20202000 
0039C4 000000 
                           B   559    
0039C7 00                  B   560    sdc_sdc		db 0	; 0 = Card is MMC type, 1 =
                           B   561    
                           B   562    ;==============================================
                           B   563    
                           B   564    
                           B   565    ;----------------------------------------------
                           B   566    
                           C     0    include "ez80p_sdcard_code.asm"				;ha
                           C     1    ;----------------------------------------------
                           C     2    ; eZ80P Specific SD card low-level routines v0.
                           C     3    ;----------------------------------------------
                           C     4    
0039C8                     C     5    sdc_send_byte
                           C     6    
                           C     7    ;Put byte to send to card in A
                           C     8    
0039C8 C5                  C     9    					push bc
0039C9 01030000            C    10    					ld bc,port_sdc_data
0039CD ED79                C    11    					out (bc),a					                           C    12    	
0039CF 0E01                C    13    					ld c,port_hw_flags			Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 140


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_sdcard_code.asm
0039D1 ED7410              C    14    sdc_wb_loop			tstio 1<<sdc_serializer_bus
0039D4 20 FB               C    15    					jr nz,sdc_wb_loop
                           C    16    
0039D6 C1                  C    17    					pop bc
0039D7 C9                  C    18    					ret
                           C    19    
                           C    20    ;----------------------------------------------
                           C    21    
0039D8                     C    22    sdc_get_byte
                           C    23    
                           C    24    ; Returns byte read from card in A
                           C    25    
0039D8 3EFF                C    26    					ld a,0ffh
0039DA CD C8 39 00         C    27    					call sdc_send_byte
0039DE C5                  C    28    					push bc
0039DF 01030000            C    29    					ld bc,port_sdc_data
0039E3 ED78                C    30    					in a,(bc)					0039E5 C1                  C    31    					pop bc
0039E6 C9                  C    32    					ret
                           C    33    	
                           C    34    ;----------------------------------------------
                           C    35    
0039E7                     C    36    sdc_select_card
                           C    37    	
0039E7 C5                  C    38    					push bc
0039E8 01020000            C    39    					ld bc,port_sdc_ctrl
0039EC 3E02                C    40    					ld a,1<<sdc_cs				0039EE ED79                C    41    					out (bc),a
0039F0 C1                  C    42    					pop bc
0039F1 C9                  C    43    					ret
                           C    44    
                           C    45    
0039F2                     C    46    sdc_deselect_card
                           C    47    
0039F2 C5                  C    48    					push bc
0039F3 01020000            C    49    					ld bc,port_sdc_ctrl
0039F7 3E82                C    50    					ld a,080h+(1<<sdc_cs)		0039F9 ED79                C    51    					out (bc),a
0039FB C1                  C    52    					pop bc
                           C    53    				
0039FC 3EFF                C    54    					ld a,0ffh					0039FE CD C8 39 00         C    55    					call sdc_send_byte
003A02 C9                  C    56    					ret
                           C    57    	
                           C    58    ;----------------------------------------------
                           C    59    
003A03                     C    60    sdc_power_on
                           C    61    
003A03 C5                  C    62    					push bc
003A04 01020000            C    63    					ld bc,port_sdc_ctrl
003A08 3E81                C    64    					ld a,80h+(1<<sdc_power)		003A0A ED79                C    65    					out (bc),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 141


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_sdcard_code.asm
003A0C C1                  C    66    					pop bc
003A0D C9                  C    67    					ret
                           C    68    	
                           C    69    
003A0E                     C    70    sdc_power_off
                           C    71    	
003A0E C5                  C    72    					push bc						003A0F 01020000            C    73    					ld bc,port_sdc_ctrl
003A13 3E01                C    74    					ld a,1<<sdc_power			003A15 ED79                C    75    					out (bc),a					003A17 C1                  C    76    					pop bc						003A18 C9                  C    77    					ret							                           C    78    	
                           C    79    
                           C    80    ;----------------------------------------------
                           C    81    
003A19                     C    82    sdc_slow_clock
                           C    83    
003A19 C5                  C    84    					push bc
003A1A 01020000            C    85    					ld bc,port_sdc_ctrl
003A1E 3E04                C    86    					ld a,1<<sdc_speed			003A20 ED79                C    87    					out (bc),a
003A22 C1                  C    88    					pop bc
003A23 C9                  C    89    					ret
                           C    90    
                           C    91    
003A24                     C    92    sdc_fast_clock
                           C    93    	
003A24 C5                  C    94    					push bc
003A25 01020000            C    95    					ld bc,port_sdc_ctrl
003A29 3E84                C    96    					ld a,080h+(1<<sdc_speed)	003A2B ED79                C    97    					out (bc),a
003A2D C1                  C    98    					pop bc
003A2E C9                  C    99    					ret
                           C   100    
                           C   101    ;----------------------------------------------
                           B   568    
                           B   569    ;----------------------------------------------
                           A  3089    
                           A  3090    
                           A  3091    ;----------------------------------------------
                           A  3092    ; IO routines
                           A  3093    ;----------------------------------------------
                           A  3094    
                           B     0    	include		'ez80p_interrupt_code.asm'		                           B     1    ;----------------------------------------------
                           B     2    ; ez80p interrupt code v0.05 (MADL mode)
                           B     3    ;----------------------------------------------
                           B     4    
003A2F                     B     5    set_irq_vector
                           B     6    
003A2F AF                  B     7    				xor a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 142


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
003A30 ED47                B     8    				ld i,a
003A32 3EC3                B     9    				ld a,c3h						003A34 32320000            B    10    				ld (032h),a	
003A38 21 6A 3A 00         B    11    				ld hl,int_routine				003A3C 22330000            B    12    				ld (033h),hl
003A40 C9                  B    13    				ret
                           B    14    
                           B    15    
                           B    16    
003A41 21 B2 60 00         B    17    enable_os_irqs	ld hl,devices_connected			003A45 CB46                B    18    				bit 0,(hl)
003A47 C4 52 3A 00         B    19    				call nz,enable_kb_irq
003A4B CB4E                B    20    				bit 1,(hl)
003A4D C4 58 3A 00         B    21    				call nz,enable_ms_irq
003A51 C9                  B    22    				ret
                           B    23    
                           B    24    
003A52 3E81                B    25    enable_kb_irq	ld a,10000001b
003A54 ED3905              B    26    				out0 (port_irq_ctrl),a			003A57 C9                  B    27    				ret
                           B    28    
003A58 3E82                B    29    enable_ms_irq	ld a,10000010b
003A5A ED3905              B    30    				out0 (port_irq_ctrl),a			003A5D C9                  B    31    				ret
                           B    32    
003A5E 3E02                B    33    disable_ms_irq	ld a,00000010b
003A60 ED3905              B    34    				out0 (port_irq_ctrl),a			003A63 C9                  B    35    				ret
                           B    36    
003A64 3E3F                B    37    disable_irqs	ld a,00111111b
003A66 ED3905              B    38    				out0 (port_irq_ctrl),a			003A69 C9                  B    39    				ret
                           B    40    			
                           B    41    ;----------------------------------------------
                           B    42    
                           B    43    
003A6A                     B    44    int_routine
003A6A F5                  B    45    				push af							003A6B ED3807              B    46    				in0 a,(port_ps2_ctrl)			003A6E CB67                B    47    				bit 4,a
003A70 C4 82 3A 00         B    48    				call nz,kb_interrupt_handler
003A74 ED3807              B    49    				in0 a,(port_ps2_ctrl)			003A77 CB6F                B    50    				bit 5,a
003A79 C4 24 3B 00         B    51    				call nz,ms_interrupt_handler
003A7D F1                  B    52    				pop af
                           B    53    
003A7E FB                  B    54    				ei								003A7F 5BED4D              B    55    				reti.l							                           B    56    
                           B    57    ;----------------------------------------------
                           B    58    ; Keyboard IRQ routine v0.03
                           B    59    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 143


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
                           B    60    
003A82                     B    61    kb_interrupt_handler
                           B    62    
                           B    63    ;--- irq test ---------------------------------
                           B    64    
                           B    65    ;				push bc
                           B    66    ;				ld a,0ffh
                           B    67    ;				ld (hw_palette),a
                           B    68    ;				ld b,0
                           B    69    ;testlp1		djnz testlp1
                           B    70    ;				ld a,0
                           B    71    ;				ld (hw_palette),a
                           B    72    ;				pop bc
                           B    73    				
                           B    74    ;--- end of test ------------------------------
                           B    75    
                           B    76    
003A82 E5                  B    77    				push hl							003A83 C5                  B    78    				push bc
                           B    79    				
003A84 ED3802              B    80    key_loop		in0 a,(port_keyboard_data)		003A87 47                  B    81    				ld b,a
                           B    82    
003A88 3A 7A 62 00         B    83    				ld a,(key_release_mode)
003A8C B7                  B    84    				or a
003A8D 28 20               B    85    				jr z,key_pressed
                           B    86    			
003A8F 78                  B    87    				ld a,b							003A90 FEE0                B    88    				cp 0e0h							003A92 28 61               B    89    				jr z,kirq_done	
003A94 FEE1                B    90    				cp 0e1h
003A96 28 5D               B    91    				jr z,kirq_done	
                           B    92    				
003A98 CD FF 3A 00         B    93    				call qualifiers					003A9C 7D                  B    94    				ld a,l
003A9D 2F                  B    95    				cpl
003A9E 6F                  B    96    				ld l,a
003A9F 3A 7C 62 00         B    97    				ld a,(key_mod_flags)
003AA3 A5                  B    98    				and l							003AA4 32 7C 62 00         B    99    				ld (key_mod_flags),a
003AA8 AF                  B   100    				xor a
003AA9 32 7A 62 00         B   101    				ld (key_release_mode),a
003AAD 18 46               B   102    				jr kirq_done
                           B   103    	
                           B   104    
003AAF 78                  B   105    key_pressed		ld a,b							003AB0 FEE0                B   106    				cp 0e0h							003AB2 28 41               B   107    				jr z,kirq_done	
003AB4 FEE1                B   108    				cp 0e1h
003AB6 28 3D               B   109    				jr z,kirq_done	
                           B   110    			
003AB8 FEF0                B   111    				cp 0f0h							Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 144


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
003ABA 20 08               B   112    				jr nz,not_krel
003ABC 3E01                B   113    				ld a,1							003ABE 32 7A 62 00         B   114    				ld (key_release_mode),a			003AC2 18 31               B   115    				jr kirq_done
                           B   116    	
                           B   117    	
003AC4 CD FF 3A 00         B   118    not_krel		call qualifiers					003AC8 3A 7C 62 00         B   119    				ld a,(key_mod_flags)			003ACC B5                  B   120    				or l
003ACD 32 7C 62 00         B   121    				ld (key_mod_flags),a			003AD1 68                  B   122    				ld l,b
003AD2 01000000            B   123    				ld bc,0
003AD6 3A 78 62 00         B   124    				ld a,(key_buf_wr_idx)
003ADA 4F                  B   125    				ld c,a
003ADB 7D                  B   126    				ld a,l
003ADC 21 58 62 00         B   127    				ld hl,scancode_buffer
003AE0 09                  B   128    				add hl,bc
003AE1 77                  B   129    				ld (hl),a						003AE2 0E10                B   130    				ld c,16
003AE4 09                  B   131    				add hl,bc
003AE5 3A 7C 62 00         B   132    				ld a,(key_mod_flags)			003AE9 77                  B   133    				ld (hl),a	
003AEA 3A 78 62 00         B   134    				ld a,(key_buf_wr_idx)
003AEE 3C                  B   135    				inc a
003AEF E60F                B   136    				and 15
003AF1 32 78 62 00         B   137    				ld (key_buf_wr_idx),a			                           B   138    				
003AF5 ED3807              B   139    kirq_done		in0 a,(port_ps2_ctrl)			003AF8 CB67                B   140    				bit 4,a	
003AFA 20 88               B   141    				jr nz,key_loop
                           B   142    
003AFC C1                  B   143    				pop bc
003AFD E1                  B   144    				pop hl
003AFE C9                  B   145    				ret
                           B   146    
                           B   147    
003AFF 2E40                B   148    qualifiers		ld l,040h		;apps
003B01 FE2F                B   149    				cp 02fh
003B03 C8                  B   150    				ret z
                           B   151    			
003B04 2E20                B   152    				ld l,020h		;r gui
003B06 FE27                B   153    				cp 027h
003B08 C8                  B   154    				ret z
                           B   155    			
003B09 2E10                B   156    				ld l,010h		;r shift
003B0B FE59                B   157    				cp 059h
003B0D C8                  B   158    				ret z
                           B   159    			
003B0E 2E08                B   160    				ld l,08h		; alt
003B10 FE11                B   161    				cp 011h
003B12 C8                  B   162    				ret z
                           B   163    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 145


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
003B13 2E04                B   164    				ld l,04h		; l gui
003B15 FE1F                B   165    				cp 01fh
                           B   166    			
003B17 2E02                B   167    				ld l,02h		;l ctrl / r ctr
003B19 FE14                B   168    				cp 14h
003B1B C8                  B   169    				ret z
                           B   170    			
003B1C 2E01                B   171    				ld l,01h		;l shift
003B1E FE12                B   172    				cp 12h
003B20 C8                  B   173    				ret z
                           B   174    				
003B21 2E00                B   175    				ld l,0
003B23 C9                  B   176    				ret
                           B   177    
                           B   178    ;----------------------------------------------
                           B   179    ; Mouse IRQ routine v0.03
                           B   180    ;----------------------------------------------
                           B   181    
003B24                     B   182    ms_interrupt_handler
                           B   183    
                           B   184    ;--- irq test ---------------------------------
                           B   185    
                           B   186    ;				push bc
                           B   187    ;				ld a,0ffh
                           B   188    ;				ld (hw_palette),a
                           B   189    ;				ld b,0
                           B   190    ;testlp1		djnz testlp1
                           B   191    ;				ld a,0
                           B   192    ;				ld (hw_palette),a
                           B   193    ;				pop bc
                           B   194    				
                           B   195    ;--- end of test ------------------------------
                           B   196    
                           B   197    
003B24 C5                  B   198    				push bc							003B25 D5                  B   199    				push de							003B26 E5                  B   200    				push hl							                           B   201    							
003B27 11000000            B   202    ms_loop			ld de,0		
003B2B 3A 86 62 00         B   203    				ld a,(mouse_packet_index)		003B2F 5F                  B   204    				ld e,a
003B30 21 82 62 00         B   205    				ld hl,mouse_packet	
003B34 19                  B   206    				add hl,de
003B35 ED3806              B   207    				in0 a,(port_mouse_data)
003B38 77                  B   208    				ld (hl),a
                           B   209    								
003B39 21 81 62 00         B   210    				ld hl,mouse_packet_size
003B3D 1C                  B   211    				inc e							003B3E 7B                  B   212    				ld a,e
003B3F BE                  B   213    				cp (hl)
003B40 20 4F               B   214    				jr nz,msubpkt
                           B   215    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 146


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
003B42 3A 82 62 00         B   216    				ld a,(mouse_packet)				003B46 4F                  B   217    				ld c,a	
003B47 E607                B   218    				and 0111b
003B49 32 87 62 00         B   219    				ld (mouse_buttons),a
                           B   220    				
003B4D 11000000            B   221    				ld de,0							003B51 CB61                B   222    				bit 4,c
003B53 28 01               B   223    				jr z,mxsignpos
003B55 1B                  B   224    				dec de
003B56 3A 83 62 00         B   225    mxsignpos		ld a,(mouse_packet+1)
003B5A 5F                  B   226    				ld e,a
003B5B 2A 88 62 00         B   227    				ld hl,(mouse_disp_x)
003B5F 19                  B   228    				add hl,de
003B60 22 88 62 00         B   229    				ld (mouse_disp_x),hl
                           B   230    				
003B64 11000000            B   231    				ld de,0							003B68 CB69                B   232    				bit 5,c
003B6A 28 01               B   233    				jr z,mysignpos
003B6C 1B                  B   234    				dec de
003B6D 3A 84 62 00         B   235    mysignpos		ld a,(mouse_packet+2)
003B71 5F                  B   236    				ld e,a
003B72 2A 8B 62 00         B   237    				ld hl,(mouse_disp_y)			003B76 AF                  B   238    				xor a							003B77 ED52                B   239    				sbc hl,de
003B79 22 8B 62 00         B   240    				ld (mouse_disp_y),hl
                           B   241    				
003B7D 21 85 62 00         B   242    				ld hl,mouse_packet+3			003B81 3A 8E 62 00         B   243    				ld a,(mouse_wheel)
003B85 86                  B   244    				add a,(hl)
003B86 32 8E 62 00         B   245    				ld (mouse_wheel),a
                           B   246    				
003B8A 3E01                B   247    				ld a,1
003B8C 32 8F 62 00         B   248    				ld (mouse_updated),a			                           B   249    				
003B90 AF                  B   250    				xor a
003B91 32 86 62 00         B   251    msubpkt			ld (mouse_packet_index),a
                           B   252    				
003B95 ED3807              B   253    				in0 a,(port_ps2_ctrl)			003B98 CB6F                B   254    				bit 5,a
003B9A 20 8B               B   255    				jr nz,ms_loop				
                           B   256    				
003B9C E1                  B   257    				pop hl
003B9D D1                  B   258    				pop de
003B9E C1                  B   259    				pop bc
003B9F C9                  B   260    				ret
                           B   261    				
                           B   262    ;----------------------------------------------
                           B   263    ; ez80p NMI code v0.02
                           B   264    ;----------------------------------------------
                           B   265    
003BA0                     B   266    nmi_routine
003BA0 CD 35 13 00         B   267    				call os_store_CPU_regs
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 147


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
                           B   268    				
003BA4 21000000            B   269    				ld hl,0
003BA8 39                  B   270    				add hl,sp
003BA9 7E                  B   271    				ld a,(hl)						003BAA E601                B   272    				and 1
003BAC 32 E0 60 00         B   273    				ld (store_adl),a
003BB0 20 0A               B   274    				jr nz,adl_freeze
003BB2 23                  B   275    				inc hl
003BB3 5E                  B   276    				ld e,(hl)						003BB4 23                  B   277    				inc hl
003BB5 56                  B   278    				ld d,(hl)
003BB6 CD 8E 15 00         B   279    				call mbase_de
003BBA 18 02               B   280    				jr got_pc
                           B   281    				
003BBC 33                  B   282    adl_freeze		inc sp
003BBD D1                  B   283    				pop de							003BBE ED53 D6 60 00       B   284    got_pc			ld (store_pc),de				                           B   285    				
003BC3 CD EC 3B 00         B   286    				call disable_nmi
003BC7 ED3906              B   287    				out0 (port_nmi_ack),a			003BCA 3E01                B   288    				ld a,1
003BCC 32 B0 60 00         B   289    				ld (frozen),a
003BD0 C3 48 0A 00         B   290    				jp os_cold_start				                           B   291    
                           B   292    ;----------------------------------------------
                           B   293    
                           B   294    ;nmi_routine
                           B   295    ;
                           B   296    ;				push af							                           B   297    ;				push bc
                           B   298    ;				ld a,0ffh
                           B   299    ;				ld (hw_palette),a
                           B   300    ;				ld b,0
                           B   301    ;nmi_testlp2		djnz nmi_testlp2
                           B   302    ;				ld a,0
                           B   303    ;				ld (hw_palette),a
                           B   304    ;				pop bc
                           B   305    ;				pop af
                           B   306    ;				out0 (port_nmi_ack),a			                           B   307    ;				retn.l							                           B   308    
                           B   309    ;----------------------------------------------
                           B   310    
003BD4                     B   311    set_nmi_vector
                           B   312    
003BD4 3EC3                B   313    				ld a,0c3h						003BD6 32660000            B   314    				ld (066h),a
003BDA 21 A0 3B 00         B   315    				ld hl,nmi_routine				003BDE 22670000            B   316    				ld (067h),hl
003BE2 C9                  B   317    				ret
                           B   318    
                           B   319    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 148


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
                           B   320    
003BE3 ED3906              B   321    enable_nmi		out0 (port_nmi_ack),a			003BE6 3EC0                B   322    				ld a,11000000b					003BE8 ED3905              B   323    				out0 (port_irq_ctrl),a
003BEB C9                  B   324    				ret
                           B   325    
003BEC 3E40                B   326    disable_nmi		ld a,01000000b					003BEE ED3905              B   327    				out0 (port_irq_ctrl),a
003BF1 C9                  B   328    				ret
                           B   329    
                           B   330    ;----------------------------------------------
                           B   331    
                           B     0    	include		'ez80p_rs232_code.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; ez80p low level RS232 code v0.03 (ADL mode)
                           B     3    ;----------------------------------------------
                           B     4    		
003BF2                     B     5    receive_serial_byte
                           B     6    
                           B     7    ; If zero flag set on return OK, A = received b
                           B     8    ; Else timed out (and also A = error $83: time 
                           B     9    
003BF2 C5                  B    10    				push bc
003BF3 3A 3D 5F 00         B    11    				ld a,(serial_timeout)
003BF7 47                  B    12    				ld b,a
003BF8 3ECC                B    13    rx_set_timer	ld a,cch
003BFA ED3981              B    14    				out0 (TMR0_RR_L),a				003BFD 3E0C                B    15    				ld a,0ch
003BFF ED3982              B    16    				out0 (TMR0_RR_H),a				003C02 3E03                B    17    				ld a,00000011b					003C04 ED3980              B    18    				out0 (TMR0_CTL),a				003C07 ED3880              B    19    				in0 a,(TMR0_CTL)				                           B    20    				
003C0A 0EC5                B    21    rx_byte_lp		ld c,UART0_LSR					003C0C ED7401              B    22    				tstio 1							003C0F 20 0E               B    23    				jr nz,rx_in_buffer
003C11 AF                  B    24    				xor a
003C12 B0                  B    25    				or b
003C13 28 13               B    26    				jr z,rx_time_out
003C15 0E80                B    27    				ld c,TMR0_CTL	
003C17 ED7480              B    28    				tstio 128						003C1A 28 EE               B    29    				jr z,rx_byte_lp		
003C1C 05                  B    30    				dec b
003C1D 18 D9               B    31    				jr rx_set_timer
                           B    32    
003C1F 01C00000            B    33    rx_in_buffer	ld bc,UART0_RBR
003C23 ED78                B    34    				in a,(bc)						003C25 C1                  B    35    				pop bc
003C26 BF                  B    36    				cp a							003C27 C9                  B    37    				ret
                           B    38    
003C28 C1                  B    39    rx_time_out		pop bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 149


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_rs232_code.asm
003C29 3E83                B    40    				ld a,083h						003C2B B7                  B    41    				or a							003C2C C9                  B    42    				ret
                           B    43    
                           B    44    
                           B    45    
                           B    46    ;----------------------------------------------
                           B    47    
003C2D                     B    48    send_serial_byte
                           B    49    
                           B    50    ; set A to the byte to send
                           B    51    
003C2D C5                  B    52    				push bc
003C2E 0EC5                B    53    				ld c,UART0_LSR					003C30 ED7420              B    54    rs232_swait		tstio 020h						003C33 28 FB               B    55    				jr z,rs232_swait
003C35 01C00000            B    56    				ld bc,UART0_THR
003C39 ED79                B    57    				out (c),a						003C3B C1                  B    58    				pop bc
003C3C C9                  B    59    				ret
                           B    60    
                           B    61    ;----------------------------------------------
                           B    62    
003C3D                     B    63    send_serial_bytes
                           B    64    
                           B    65    ; set D to the first byte to send
                           B    66    ; and E to the second byte to send
                           B    67    
003C3D 7A                  B    68    				ld a,d
003C3E CD 2D 3C 00         B    69    				call send_serial_byte
003C42 7B                  B    70    				ld a,e
003C43 CD 2D 3C 00         B    71    				call send_serial_byte
003C47 C9                  B    72    				ret
                           B    73    
                           B    74    ;----------------------------------------------
                           B    75    
003C48                     B    76    hwsc_flush_serial_buffer
                           B    77    
003C48 C5                  B    78    				push bc
003C49 01C00000            B    79    				ld bc,UART0_RBR
003C4D ED78                B    80    				in a,(bc)						003C4F C1                  B    81    				pop bc
003C50 C9                  B    82    				ret
                           B    83    
                           B    84    ;----------------------------------------------
                           B    85    		
                           B     0    	include		'ez80p_video_code.asm'
                           B     1    ;-------------------------------------------
                           B     2    ; ez80p-specific video code v0.05 (ADL mode)
                           B     3    ; 16 colour mode routines
                           B     4    ;-------------------------------------------
                           B     5    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 150


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003C51                     B     6    set_bitmap_parameters
                           B     7    				
003C51 78                  B     8    				ld a,b
003C52 32 20 5F 00         B     9    				ld (window_pixel_doubling),a
003C56 22 F9 5E 00         B    10    				ld (window_width_bytes),hl		003C5A ED53 FC 5E 00       B    11    				ld (window_height_lines),de
                           B    12    			
003C5F 21000080            B    13    				ld hl,vram_a_addr				003C63 22 0B 5F 00         B    14    				ld (video_window_address),hl
003C67 21000000            B    15    				ld hl,0
003C6B ED5B F9 5E 00       B    16    				ld de,(window_width_bytes)
003C70 ED4B FC 5E 00       B    17    				ld bc,(window_height_lines)
003C75 19                  B    18    cwsblp			add hl,de
003C76 0B                  B    19    				dec bc
003C77 78                  B    20    				ld a,b
003C78 B1                  B    21    				or c
003C79 20 FA               B    22    				jr nz,cwsblp
003C7B 22 17 5F 00         B    23    				ld (total_window_bytes),hl
                           B    24    				
003C7F CD 10 3D 00         B    25    				call os_set_video_hw_regs
                           B    26    				
003C83 AF                  B    27    				xor a
003C84 C9                  B    28    				ret
                           B    29    
                           B    30    
                           B    31    
003C85                     B    32    set_font_parameters
                           B    33    
003C85 78                  B    34    				ld a,b							003C86 32 FF 5E 00         B    35    				ld (font_width_bytes),a
003C8A 79                  B    36    				ld a,c
003C8B 32 02 5F 00         B    37    				ld (font_height_lines),a		003C8F 11000000            B    38    				ld de,0
003C93 59                  B    39    				ld e,c
003C94 50                  B    40    				ld d,b
003C95 ED5C                B    41    				mlt de
003C97 21000000            B    42    				ld hl,0
003C9B 0638                B    43    				ld b,224/4						003C9D 19                  B    44    cfslp			add hl,de
003C9E 10 FD               B    45    				djnz cfslp
003CA0 22 08 5F 00         B    46    				ld (font_length),hl
                           B    47    							
003CA4 41                  B    48    				ld b,c
003CA5 21000000            B    49    				ld hl,0
003CA9 ED5B F9 5E 00       B    50    				ld de,(window_width_bytes)
003CAE 19                  B    51    csualp			add hl,de
003CAF 10 FD               B    52    				djnz csualp
003CB1 22 1D 5F 00         B    53    				ld (total_row_bytes),hl			                           B    54    				
003CB5 AF                  B    55    				xor a
003CB6 C9                  B    56    				ret
                           B    57    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 151


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
                           B    58    				
                           B    59    
003CB7                     B    60    set_charmap_parameters
                           B    61    
003CB7 79                  B    62    				ld a,c
003CB8 32 F3 5E 00         B    63    				ld (window_rows),a
003CBC 78                  B    64    				ld a,b
003CBD 32 F6 5E 00         B    65    				ld (window_columns),a
                           B    66    				
003CC1 2A 0B 5F 00         B    67    				ld hl,(video_window_address)
003CC5 ED5B 17 5F 00       B    68    				ld de,(total_window_bytes)
003CCA 19                  B    69    				add hl,de
003CCB 22 0E 5F 00         B    70    				ld (charmap_address),hl
                           B    71    
003CCF 11000000            B    72    				ld de,0
003CD3 3A F3 5E 00         B    73    				ld a,(window_rows)
003CD7 5F                  B    74    				ld e,a
003CD8 3A F6 5E 00         B    75    				ld a,(window_columns)
003CDC 57                  B    76    				ld d,a
003CDD ED5C                B    77    				mlt de
003CDF ED53 1A 5F 00       B    78    				ld (total_charmap_bytes),de
003CE4 19                  B    79    				add hl,de
003CE5 22 11 5F 00         B    80    				ld (attributes_address),hl
003CE9 19                  B    81    				add hl,de
003CEA 22 14 5F 00         B    82    				ld (cursor_image_address),hl
003CEE 11000000            B    83    				ld de,0
003CF2 3A 02 5F 00         B    84    				ld a,(font_height_lines)
003CF6 5F                  B    85    				ld e,a
003CF7 3A FF 5E 00         B    86    				ld a,(font_width_bytes)
003CFB 57                  B    87    				ld d,a
003CFC D5                  B    88    				push de
003CFD ED5C                B    89    				mlt de
003CFF 19                  B    90    				add hl,de
003D00 22 05 5F 00         B    91    				ld (font_addr),hl
003D04 D1                  B    92    				pop de
003D05 16E0                B    93    				ld d,224
003D07 ED5C                B    94    				mlt de
003D09 19                  B    95    				add hl,de				
003D0A 22 B6 60 00         B    96    				ld (vram_a_high),hl
003D0E AF                  B    97    				xor a
003D0F C9                  B    98    				ret
                           B    99    				
                           B   100    
003D10                     B   101    os_set_video_hw_regs
                           B   102    
003D10 DD210018 FF         B   103    				ld ix,video_control				003D15 3A 20 5F 00         B   104    				ld a,(window_pixel_doubling)
003D19 CB27                B   105    				sla a
003D1B F601                B   106    				or 1
003D1D DD7700              B   107    				ld (ix),a						003D20 DD360100            B   108    				ld (ix+1),0						003D24 DD360200            B   109    				ld (ix+2),0						Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 152


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003D28 DD360463            B   110    				ld (ix+4),99					                           B   111    
003D2C DD212010 FF         B   112    				ld ix,bitmap_parameters			003D31 ED5B 0B 5F 00       B   113    				ld de,(video_window_address)	003D36 DD1F00              B   114    				ld (ix),de						003D39 DD360401            B   115    				ld (ix+04h),1					003D3D DD360800            B   116    				ld (ix+08h),0					003D41 DD360C00            B   117    				ld (ix+0ch),0					003D45 ED4B F9 5E 00       B   118    				ld bc,(window_width_bytes)		003D4A CB38                B   119    				srl b							003D4C CB19                B   120    				rr c
003D4E CB38                B   121    				srl b
003D50 CB19                B   122    				rr c
003D52 CB38                B   123    				srl b
003D54 CB19                B   124    				rr c
003D56 0D                  B   125    				dec c
003D57 DD7110              B   126    				ld (ix+10h),c
                           B   127    				
003D5A 21 D0 5E 00         B   128    				ld hl,pen_palette
003D5E CD 64 3D 00         B   129    				call hswc_set_ui_colours
                           B   130    				
003D62 AF                  B   131    				xor a							003D63 C9                  B   132    				ret
                           B   133    
                           B   134    ;----------------------------------------------
                           B   135    				
                           B   136    				
003D64                     B   137    hswc_set_ui_colours
                           B   138    
003D64 110000FF            B   139    				ld de,hw_palette
003D68 01200000            B   140    				ld bc,16*2
003D6C EDB0                B   141    				ldir
003D6E AF                  B   142    				xor a							003D6F C9                  B   143    				ret
                           B   144    
                           B   145    
                           B   146    ;----------------------------------------------
                           B   147    
003D70                     B   148    hwsc_clear_screen
                           B   149    
003D70 2A 0B 5F 00         B   150    				ld hl,(video_window_address)	003D74 3A CE 5E 00         B   151    				ld a,(background_colour)
003D78 E60F                B   152    				and 0fh
003D7A 47                  B   153    				ld b,a
003D7B 07                  B   154    				rlca
003D7C 07                  B   155    				rlca
003D7D 07                  B   156    				rlca
003D7E 07                  B   157    				rlca
003D7F B0                  B   158    				or b
003D80 77                  B   159    				ld (hl),a
003D81 E5                  B   160    				push hl
003D82 D1                  B   161    				pop de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 153


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003D83 13                  B   162    				inc de
003D84 ED4B 17 5F 00       B   163    				ld bc,(total_window_bytes)
003D89 0B                  B   164    				dec bc
003D8A EDB0                B   165    				ldir
                           B   166    				
003D8C 2A 11 5F 00         B   167    				ld hl,(attributes_address)		003D90 ED4B 1A 5F 00       B   168    				ld bc,(total_charmap_bytes)
003D95 0B                  B   169    				dec bc
003D96 3600                B   170    				ld (hl),0
003D98 E5                  B   171    				push hl
003D99 D1                  B   172    				pop de
003D9A 13                  B   173    				inc de
003D9B EDB0                B   174    				ldir				
                           B   175    
003D9D 2A 0E 5F 00         B   176    				ld hl,(charmap_address)			003DA1 ED4B 1A 5F 00       B   177    				ld bc,(total_charmap_bytes)
003DA6 0B                  B   178    				dec bc
003DA7 3620                B   179    				ld (hl),' '
003DA9 E5                  B   180    				push hl
003DAA D1                  B   181    				pop de
003DAB 13                  B   182    				inc de
003DAC EDB0                B   183    				ldir				
                           B   184    
003DAE 01000000            B   185    				ld bc,0
003DB2 ED43 48 61 00       B   186    				ld (cursor_y),bc
003DB7 AF                  B   187    				xor a							003DB8 C9                  B   188    				ret
                           B   189    				
                           B   190    				
                           B   191    ;----------------------------------------------
                           B   192    
003DB9                     B   193    hwsc_scroll_up	
                           B   194    				
003DB9 C5                  B   195    				push bc
003DBA D5                  B   196    				push de
003DBB E5                  B   197    				push hl
                           B   198    
003DBC 2A 17 5F 00         B   199    				ld hl,(total_window_bytes)
003DC0 ED5B 1D 5F 00       B   200    				ld de,(total_row_bytes)
003DC5 AF                  B   201    				xor a
003DC6 ED52                B   202    				sbc hl,de
003DC8 E5                  B   203    				push hl
003DC9 C1                  B   204    				pop bc							003DCA 2A 0B 5F 00         B   205    				ld hl,(video_window_address)
003DCE ED5B 1D 5F 00       B   206    				ld de,(total_row_bytes)
003DD3 19                  B   207    				add hl,de						003DD4 ED5B 0B 5F 00       B   208    				ld de,(video_window_address)	003DD9 EDB0                B   209    				ldir
                           B   210    				
003DDB EB                  B   211    				ex de,hl						003DDC 3A CE 5E 00         B   212    				ld a,(background_colour)
003DE0 E60F                B   213    				and 0fh
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 154


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003DE2 4F                  B   214    				ld c,a
003DE3 07                  B   215    				rlca
003DE4 07                  B   216    				rlca
003DE5 07                  B   217    				rlca
003DE6 07                  B   218    				rlca
003DE7 B1                  B   219    				or c
003DE8 77                  B   220    				ld (hl),a
003DE9 ED4B 1D 5F 00       B   221    				ld bc,(total_row_bytes)
003DEE 0B                  B   222    				dec bc
003DEF E5                  B   223    				push hl
003DF0 D1                  B   224    				pop de
003DF1 13                  B   225    				inc de
003DF2 EDB0                B   226    				ldir
                           B   227    
003DF4 2A 0E 5F 00         B   228    				ld hl,(charmap_address)			003DF8 ED5B F6 5E 00       B   229    				ld de,(window_columns)
003DFD 19                  B   230    				add hl,de
003DFE ED5B 0E 5F 00       B   231    				ld de,(charmap_address)
003E03 ED4B F3 5E 00       B   232    				ld bc,(window_rows)
003E08 0D                  B   233    				dec c
003E09 3A F6 5E 00         B   234    				ld a,(window_columns)
003E0D 47                  B   235    				ld b,a
003E0E ED4C                B   236    				mlt bc
003E10 C5                  B   237    				push bc
003E11 EDB0                B   238    				ldir
003E13 C1                  B   239    				pop bc							                           B   240    
003E14 2A 0E 5F 00         B   241    				ld hl,(charmap_address)			003E18 09                  B   242    				add hl,bc
003E19 3620                B   243    				ld (hl),' '
003E1B ED4B F6 5E 00       B   244    				ld bc,(window_columns)
003E20 0B                  B   245    				dec bc
003E21 E5                  B   246    				push hl
003E22 D1                  B   247    				pop de
003E23 13                  B   248    				inc de
003E24 EDB0                B   249    				ldir
                           B   250    					
003E26 2A 11 5F 00         B   251    				ld hl,(attributes_address)		003E2A ED5B F6 5E 00       B   252    				ld de,(window_columns)
003E2F 19                  B   253    				add hl,de
003E30 ED5B 11 5F 00       B   254    				ld de,(attributes_address)
003E35 ED4B F3 5E 00       B   255    				ld bc,(window_rows)
003E3A 0D                  B   256    				dec c
003E3B 3A F6 5E 00         B   257    				ld a,(window_columns)
003E3F 47                  B   258    				ld b,a
003E40 ED4C                B   259    				mlt bc
003E42 C5                  B   260    				push bc
003E43 EDB0                B   261    				ldir
003E45 C1                  B   262    				pop bc			
                           B   263    
003E46 2A 11 5F 00         B   264    				ld hl,(attributes_address)		003E4A 09                  B   265    				add hl,bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 155


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003E4B 3600                B   266    				ld (hl),0
003E4D ED4B F6 5E 00       B   267    				ld bc,(window_columns)
003E52 0B                  B   268    				dec bc
003E53 E5                  B   269    				push hl
003E54 D1                  B   270    				pop de
003E55 13                  B   271    				inc de
003E56 EDB0                B   272    				ldir
                           B   273    
003E58 E1                  B   274    				pop hl
003E59 D1                  B   275    				pop de
003E5A C1                  B   276    				pop bc
003E5B AF                  B   277    				xor a							003E5C C9                  B   278    				ret
                           B   279    
                           B   280    
                           B   281    ;----------------------------------------------
                           B   282    
                           B   283    ; Set:
                           B   284    ; ----
                           B   285    ; A = ascii char
                           B   286    ; B = x character coordinate 
                           B   287    ; C = y character coordinate
                           B   288    
                           B   289    ; Can only use 8_bits * n_line fonts at present
                           B   290    
003E5D                     B   291    hwsc_plot_char
003E5D E5                  B   292    				push hl							003E5E F5                  B   293    				push af
003E5F 3A CC 5E 00         B   294    				ld a,(current_pen)
003E63 32 F0 5E 00         B   295    				ld (plotchar_colour),a
003E67 18 02               B   296    				jr plotc_go
                           B   297    				
003E69                     B   298    hwsc_plotchar_specific_attr	
                           B   299    
003E69 E5                  B   300    				push hl
003E6A F5                  B   301    				push af							003E6B 3A F3 5E 00         B   302    plotc_go		ld a,(window_rows)				003E6F 3D                  B   303    				dec a
003E70 B9                  B   304    				cp c							003E71 38 08               B   305    				jr c,win_err
003E73 3A F6 5E 00         B   306    				ld a,(window_columns)
003E77 3D                  B   307    				dec a
003E78 B8                  B   308    				cp b
003E79 30 06               B   309    				jr nc,win_ok
003E7B F1                  B   310    win_err			pop af
003E7C E1                  B   311    				pop hl
003E7D 3E82                B   312    				ld a,82h						003E7F B7                  B   313    				or a
003E80 C9                  B   314    				ret
                           B   315    				
003E81 F1                  B   316    win_ok			pop af
003E82 D5                  B   317    				push de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 156


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003E83 C5                  B   318    				push bc
003E84 DDE5                B   319    				push ix
003E86 FDE5                B   320    				push iy
003E88 2A 02 5F 00         B   321    				ld hl,(font_height_lines)		003E8C D620                B   322    				sub a,32
003E8E 67                  B   323    				ld h,a
003E8F C620                B   324    				add a,32
003E91 ED6C                B   325    				mlt hl							003E93 ED5B 05 5F 00       B   326    				ld de,(font_addr)
003E98 19                  B   327    				add hl,de
003E99 E5                  B   328    				push hl
003E9A DDE1                B   329    				pop ix							                           B   330    				
003E9C 11000000            B   331    				ld de,0
003EA0 2A 1D 5F 00         B   332    				ld hl,(total_row_bytes)			003EA4 5D                  B   333    				ld e,l
003EA5 51                  B   334    				ld d,c
003EA6 ED5C                B   335    				mlt de							003EA8 69                  B   336    				ld l,c							003EA9 ED6C                B   337    				mlt hl							003EAB 29                  B   338    				add hl,hl						003EAC 29                  B   339    				add hl,hl
003EAD 29                  B   340    				add hl,hl
003EAE 29                  B   341    				add hl,hl
003EAF 29                  B   342    				add hl,hl
003EB0 29                  B   343    				add hl,hl
003EB1 29                  B   344    				add hl,hl
003EB2 29                  B   345    				add hl,hl
003EB3 19                  B   346    				add hl,de						003EB4 ED5B FF 5E 00       B   347    				ld de,(font_width_bytes)
003EB9 50                  B   348    				ld d,b	
003EBA ED5C                B   349    				mlt de							003EBC 19                  B   350    				add hl,de						003EBD ED5B 0B 5F 00       B   351    				ld de,(video_window_address)
003EC2 19                  B   352    				add hl,de
003EC3 E5                  B   353    				push hl
003EC4 FDE1                B   354    				pop iy							                           B   355    				
003EC6 2A F6 5E 00         B   356    				ld hl,(window_columns)			003ECA 61                  B   357    				ld h,c							003ECB ED6C                B   358    				mlt hl
003ECD 11000000            B   359    				ld de,0
003ED1 58                  B   360    				ld e,b
003ED2 19                  B   361    				add hl,de
003ED3 EB                  B   362    				ex de,hl
003ED4 2A 0E 5F 00         B   363    				ld hl,(charmap_address)
003ED8 19                  B   364    				add hl,de
003ED9 77                  B   365    				ld (hl),a
                           B   366    
003EDA 3A F0 5E 00         B   367    				ld a,(plotchar_colour)			003EDE 2A 11 5F 00         B   368    				ld hl,(attributes_address)
003EE2 19                  B   369    				add hl,de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 157


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003EE3 77                  B   370    				ld (hl),a
                           B   371    
003EE4 57                  B   372    				ld d,a				
003EE5 E6F0                B   373    				and 0f0h
003EE7 20 0E               B   374    				jr nz,notransbg
003EE9 3A CE 5E 00         B   375    				ld a,(background_colour)
003EED E60F                B   376    				and 0fh
003EEF 47                  B   377    				ld b,a
003EF0 07                  B   378    				rlca
003EF1 07                  B   379    				rlca
003EF2 07                  B   380    				rlca
003EF3 07                  B   381    				rlca
003EF4 4F                  B   382    				ld c,a
003EF5 18 06               B   383    				jr gotbg
003EF7 4F                  B   384    notransbg		ld c,a							003EF8 0F                  B   385    				rrca
003EF9 0F                  B   386    				rrca
003EFA 0F                  B   387    				rrca
003EFB 0F                  B   388    				rrca
003EFC 47                  B   389    				ld b,a							003EFD 7A                  B   390    gotbg			ld a,d
003EFE E60F                B   391    				and 0fh
003F00 20 0E               B   392    				jr nz,notransfg
003F02 3A CE 5E 00         B   393    				ld a,(background_colour)
003F06 E60F                B   394    				and 0fh
003F08 57                  B   395    				ld d,a
003F09 07                  B   396    				rlca
003F0A 07                  B   397    				rlca
003F0B 07                  B   398    				rlca
003F0C 07                  B   399    				rlca
003F0D 5F                  B   400    				ld e,a
003F0E 18 06               B   401    				jr gotfg
003F10 57                  B   402    notransfg		ld d,a							003F11 07                  B   403    				rlca
003F12 07                  B   404    				rlca
003F13 07                  B   405    				rlca
003F14 07                  B   406    				rlca
003F15 5F                  B   407    				ld e,a							                           B   408    				
003F16 D9                  B   409    gotfg			exx
003F17 3A 02 5F 00         B   410    				ld a,(font_height_lines)
003F1B 47                  B   411    				ld b,a
003F1C 2A F9 5E 00         B   412    				ld hl,(window_width_bytes)
003F20 ED5B FF 5E 00       B   413    				ld de,(font_width_bytes)
003F25 AF                  B   414    				xor a
003F26 ED52                B   415    				sbc hl,de
003F28 EB                  B   416    				ex de,hl
                           B   417    						
003F29 D9                  B   418    charloop		exx
003F2A DD6E00              B   419    				ld l,(ix)						003F2D CB25                B   420    				sla l
003F2F 79                  B   421    				ld a,c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 158


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003F30 30 01               B   422    				jr nc,nbgmsb7
003F32 7B                  B   423    				ld a,e
003F33 CB25                B   424    nbgmsb7			sla l
003F35 30 03               B   425    				jr nc,nfgmsb6
003F37 B2                  B   426    				or d
003F38 18 01               B   427    				jr gotpixcol76
003F3A B0                  B   428    nfgmsb6			or b
003F3B FD7700              B   429    gotpixcol76		ld (iy),a
003F3E FD23                B   430    				inc iy
                           B   431    
003F40 CB25                B   432    				sla l
003F42 79                  B   433    				ld a,c
003F43 30 01               B   434    				jr nc,nbgmsb5
003F45 7B                  B   435    				ld a,e
003F46 CB25                B   436    nbgmsb5			sla l
003F48 30 03               B   437    				jr nc,nfgmsb4
003F4A B2                  B   438    				or d
003F4B 18 01               B   439    				jr gotpixcol54
003F4D B0                  B   440    nfgmsb4			or b
003F4E FD7700              B   441    gotpixcol54		ld (iy),a
003F51 FD23                B   442    				inc iy
                           B   443    				
003F53 CB25                B   444    				sla l
003F55 79                  B   445    				ld a,c
003F56 30 01               B   446    				jr nc,nbgmsb3
003F58 7B                  B   447    				ld a,e
003F59 CB25                B   448    nbgmsb3			sla l
003F5B 30 03               B   449    				jr nc,nfgmsb2
003F5D B2                  B   450    				or d
003F5E 18 01               B   451    				jr gotpixcol32
003F60 B0                  B   452    nfgmsb2			or b
003F61 FD7700              B   453    gotpixcol32		ld (iy),a
003F64 FD23                B   454    				inc iy
                           B   455    				
003F66 CB25                B   456    				sla l
003F68 79                  B   457    				ld a,c
003F69 30 01               B   458    				jr nc,nbgmsb1
003F6B 7B                  B   459    				ld a,e
003F6C CB25                B   460    nbgmsb1			sla l
003F6E 30 03               B   461    				jr nc,nfgmsb0
003F70 B2                  B   462    				or d
003F71 18 01               B   463    				jr gotpixcol10
003F73 B0                  B   464    nfgmsb0			or b
003F74 FD7700              B   465    gotpixcol10		ld (iy),a
003F77 FD23                B   466    				inc iy
                           B   467    				
003F79 DD23                B   468    				inc ix
003F7B D9                  B   469    				exx
003F7C FD19                B   470    				add iy,de
003F7E 10 A9               B   471    				djnz charloop
003F80 D9                  B   472    				exx 
                           B   473    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 159


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003F81 FDE1                B   474    				pop iy
003F83 DDE1                B   475    				pop ix
003F85 C1                  B   476    				pop bc
003F86 D1                  B   477    				pop de
003F87 E1                  B   478    				pop hl
003F88 AF                  B   479    				xor a
003F89 C9                  B   480    				ret
                           B   481    
                           B   482    ;----------------------------------------------
                           B   483    
003F8A                     B   484    hwsc_remove_cursor
                           B   485    
003F8A ED4B 48 61 00       B   486    				ld bc,(cursor_y)
003F8F CD 32 40 00         B   487    				call hwsc_get_charmap_addr_xy
003F93 1A                  B   488    				ld a,(de)
003F94 32 F0 5E 00         B   489    				ld (plotchar_colour),a
003F98 7E                  B   490    				ld a,(hl)				
003F99 C3 69 3E 00         B   491    				jp hwsc_plotchar_specific_attr
                           B   492    				
                           B   493    
003F9D                     B   494    hwsc_draw_cursor
                           B   495    
003F9D 21 F2 5E 00         B   496    				ld hl,active_cursor_image
003FA1 3A F1 5E 00         B   497    				ld a,(req_cursor_image)
003FA5 BE                  B   498    				cp (hl)
003FA6 C4 FA 3F 00         B   499    				call nz,hwsc_set_cursor_image
                           B   500    
003FAA ED4B 48 61 00       B   501    				ld bc,(cursor_y)
003FAF 2A 1D 5F 00         B   502    				ld hl,(total_row_bytes)			003FB3 5D                  B   503    				ld e,l
003FB4 51                  B   504    				ld d,c
003FB5 ED5C                B   505    				mlt de
003FB7 69                  B   506    				ld l,c
003FB8 ED6C                B   507    				mlt hl
003FBA 29                  B   508    				add hl,hl
003FBB 29                  B   509    				add hl,hl
003FBC 29                  B   510    				add hl,hl
003FBD 29                  B   511    				add hl,hl
003FBE 29                  B   512    				add hl,hl
003FBF 29                  B   513    				add hl,hl
003FC0 29                  B   514    				add hl,hl
003FC1 29                  B   515    				add hl,hl
003FC2 19                  B   516    				add hl,de
003FC3 ED5B FF 5E 00       B   517    				ld de,(font_width_bytes)
003FC8 50                  B   518    				ld d,b
003FC9 ED5C                B   519    				mlt de		
003FCB 19                  B   520    				add hl,de						003FCC ED5B 0B 5F 00       B   521    				ld de,(video_window_address)
003FD1 19                  B   522    				add hl,de						003FD2 E5                  B   523    				push hl
003FD3 FDE1                B   524    				pop iy
                           B   525    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 160


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003FD5 ED4B 02 5F 00       B   526    				ld bc,(font_height_lines)
003FDA DD2A 14 5F 00       B   527    				ld ix,(cursor_image_address)	003FDF ED5B F9 5E 00       B   528    				ld de,(window_width_bytes)
                           B   529    
003FE4 ED2300              B   530    curlp2			lea hl,iy+0
003FE7 0604                B   531    				ld b,4							003FE9 7E                  B   532    curlp1			ld a,(hl)
003FEA DDAE00              B   533    				xor (ix)
003FED 77                  B   534    				ld (hl),a
003FEE DD23                B   535    				inc ix
003FF0 23                  B   536    				inc hl
003FF1 10 F6               B   537    				djnz curlp1
                           B   538    											
003FF3 FD19                B   539    				add iy,de
003FF5 0D                  B   540    				dec c
003FF6 20 EC               B   541    				jr nz,curlp2
                           B   542    
003FF8 AF                  B   543    				xor a							003FF9 C9                  B   544    				ret
                           B   545    				
                           B   546    	
                           B   547    ;----------------------------------------------
                           B   548    
003FFA                     B   549    hwsc_set_cursor_image
                           B   550    
003FFA 32 F2 5E 00         B   551    				ld (active_cursor_image),a
003FFE D620                B   552    				sub a,32						004000 2A 02 5F 00         B   553    				ld hl,(font_height_lines)
004004 67                  B   554    				ld h,a
004005 ED6C                B   555    				mlt hl
004007 ED5B 05 5F 00       B   556    				ld de,(font_addr)
00400C 19                  B   557    				add hl,de
00400D ED5B 14 5F 00       B   558    				ld de,(cursor_image_address)	004012 3A 02 5F 00         B   559    				ld a,(font_height_lines)
004016 47                  B   560    				ld b,a
004017 C5                  B   561    fclp2			push bc
                           B   562    
004018 4E                  B   563    				ld c,(hl)
004019 0604                B   564    				ld b,4							00401B 3E00                B   565    fclp1			ld a,0
00401D CB21                B   566    				sla c
00401F 30 02               B   567    				jr nc,nopixl
004021 F6F0                B   568    				or a,0f0h						004023 CB21                B   569    nopixl			sla c
004025 30 02               B   570    				jr nc,nopixr
004027 F60F                B   571    				or a,0fh
004029 12                  B   572    nopixr			ld (de),a
00402A 13                  B   573    				inc de
00402B 10 EE               B   574    				djnz fclp1
                           B   575    			
00402D 23                  B   576    				inc hl
00402E C1                  B   577    				pop bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 161


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
00402F 10 E6               B   578    				djnz fclp2
004031 C9                  B   579    				ret	
                           B   580    
                           B   581    
                           B   582    ;----------------------------------------------
                           B   583    
004032                     B   584    hwsc_get_charmap_addr_xy
                           B   585    
                           B   586    ; returns address of charmap in xHL for charact
                           B   587    ; and attrmap in xDE
                           B   588    				
004032 11000000            B   589    				ld de,0
004036 3A F6 5E 00         B   590    				ld a,(window_columns)			00403A 5F                  B   591    				ld e,a							00403B 51                  B   592    				ld d,c							00403C ED5C                B   593    				mlt de
00403E 7B                  B   594    				ld a,e
00403F 80                  B   595    				add a,b
004040 5F                  B   596    				ld e,a
004041 30 01               B   597    				jr nc,choffh_ok
004043 14                  B   598    				inc d
004044 2A 0E 5F 00         B   599    choffh_ok		ld hl,(charmap_address)
004048 19                  B   600    				add hl,de
004049 E5                  B   601    				push hl
00404A 2A 11 5F 00         B   602    				ld hl,(attributes_address)
00404E 19                  B   603    				add hl,de
00404F EB                  B   604    				ex de,hl
004050 E1                  B   605    				pop hl
004051 AF                  B   606    				xor a							004052 C9                  B   607    				ret
                           B   608    								
                           B   609    ;----------------------------------------------
                           B   610    
004053                     B   611    hwsc_chars_left
                           B   612    
                           B   613    ; moves characters (in character map) on the cu
                           B   614    
004053 C5                  B   615    				push bc
004054 D5                  B   616    				push de
004055 E5                  B   617    				push hl
                           B   618    
004056 3A 48 61 00         B   619    				ld a,(cursor_y)
00405A 2A F6 5E 00         B   620    				ld hl,(window_columns)
00405E 67                  B   621    				ld h,a
00405F ED6C                B   622    				mlt hl
004061 11000000            B   623    				ld de,0
004065 58                  B   624    				ld e,b
004066 19                  B   625    				add hl,de
004067 EB                  B   626    				ex de,hl
004068 D5                  B   627    				push de
004069 2A 0E 5F 00         B   628    				ld hl,(charmap_address)
00406D 19                  B   629    				add hl,de						Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 162


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
                           B   630    
00406E E5                  B   631    				push hl
00406F D1                  B   632    				pop de
004070 1B                  B   633    				dec de							004071 3A F6 5E 00         B   634    				ld a,(window_columns)
004075 90                  B   635    				sub b
004076 01000000            B   636    				ld bc,0
00407A 4F                  B   637    				ld c,a							00407B C5                  B   638    				push bc
00407C EDB0                B   639    				ldir
00407E C1                  B   640    				pop bc
00407F 3E20                B   641    				ld a,32
004081 12                  B   642    				ld (de),a						                           B   643    				
004082 2A 11 5F 00         B   644    				ld hl,(attributes_address)		004086 D1                  B   645    				pop de
004087 19                  B   646    				add hl,de
004088 E5                  B   647    				push hl
004089 D1                  B   648    				pop de
00408A 1B                  B   649    				dec de							00408B EDB0                B   650    				ldir							00408D 3A CE 5E 00         B   651    				ld a,(background_colour)
004091 12                  B   652    				ld (de),a						                           B   653    
004092 CD F8 40 00         B   654    				call hwsc_redraw_line			                           B   655    
004096 E1                  B   656    				pop hl
004097 D1                  B   657    				pop de
004098 C1                  B   658    				pop bc
004099 C9                  B   659    				ret
                           B   660    
                           B   661    
                           B   662    
00409A                     B   663    hwsc_chars_right
                           B   664    
                           B   665    ; moves characters on current line right from c
                           B   666    
00409A C5                  B   667    				push bc
00409B D5                  B   668    				push de
00409C E5                  B   669    				push hl
                           B   670    	
00409D 21 49 61 00         B   671    				ld hl,cursor_x				
0040A1 3A F6 5E 00         B   672    				ld a,(window_columns)
0040A5 3D                  B   673    				dec a
0040A6 BE                  B   674    				cp (hl)			
0040A7 28 4B               B   675    				jr z,chright_end
                           B   676    
0040A9 46                  B   677    				ld b,(hl)
0040AA 11000000            B   678    				ld de,0
0040AE 57                  B   679    				ld d,a
0040AF 14                  B   680    				inc d
0040B0 3A 48 61 00         B   681    				ld a,(cursor_y)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 163


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
0040B4 5F                  B   682    				ld e,a
0040B5 ED5C                B   683    				mlt de
0040B7 D5                  B   684    				push de 
                           B   685    				
0040B8 C5                  B   686    				push bc
0040B9 2A 0E 5F 00         B   687    				ld hl,(charmap_address)
0040BD ED4B F6 5E 00       B   688    				ld bc,(window_columns)
0040C2 0B                  B   689    				dec bc
0040C3 0B                  B   690    				dec bc
0040C4 09                  B   691    				add hl,bc
0040C5 C1                  B   692    				pop bc
                           B   693    				
0040C6 19                  B   694    				add hl,de						0040C7 E5                  B   695    				push hl
0040C8 D1                  B   696    				pop de
0040C9 13                  B   697    				inc de							0040CA 3A F6 5E 00         B   698    				ld a,(window_columns)
0040CE 3D                  B   699    				dec a
0040CF 90                  B   700    				sub b
0040D0 47                  B   701    				ld b,a
0040D1 C5                  B   702    				push bc							0040D2 7E                  B   703    mchrlp			ld a,(hl)
0040D3 12                  B   704    				ld (de),a
0040D4 2B                  B   705    				dec hl
0040D5 1B                  B   706    				dec de
0040D6 10 FA               B   707    				djnz mchrlp
                           B   708    
0040D8 2A 11 5F 00         B   709    				ld hl,(attributes_address)		0040DC ED4B F6 5E 00       B   710    				ld bc,(window_columns)
0040E1 0B                  B   711    				dec bc
0040E2 0B                  B   712    				dec bc
0040E3 09                  B   713    				add hl,bc
                           B   714    
0040E4 C1                  B   715    				pop bc
0040E5 D1                  B   716    				pop de
0040E6 19                  B   717    				add hl,de						0040E7 E5                  B   718    				push hl
0040E8 D1                  B   719    				pop de
0040E9 13                  B   720    				inc de							0040EA 7E                  B   721    mattrlp			ld a,(hl)
0040EB 12                  B   722    				ld (de),a
0040EC 2B                  B   723    				dec hl
0040ED 1B                  B   724    				dec de
0040EE 10 FA               B   725    				djnz mattrlp
                           B   726    
0040F0 CD F8 40 00         B   727    				call hwsc_redraw_line			                           B   728    
0040F4 E1                  B   729    chright_end		pop hl	
0040F5 D1                  B   730    				pop de
0040F6 C1                  B   731    				pop bc
0040F7 C9                  B   732    				ret
                           B   733    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 164


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
                           B   734    ;----------------------------------------------
                           B   735    
0040F8                     B   736    hwsc_redraw_line
                           B   737    				
0040F8 3A 48 61 00         B   738    				ld a,(cursor_y)
0040FC 4F                  B   739    				ld c,a
                           B   740    		
0040FD                     B   741    hwsc_redraw_ui_line
                           B   742    
0040FD ED5B F6 5E 00       B   743    				ld de,(window_columns)			004102 51                  B   744    				ld d,c
004103 ED5C                B   745    				mlt de
004105 0600                B   746    				ld b,0							004107 2A 11 5F 00         B   747    rs_xloop		ld hl,(attributes_address)		00410B 19                  B   748    				add hl,de
00410C 7E                  B   749    				ld a,(hl)						00410D 32 F0 5E 00         B   750    				ld (plotchar_colour),a
004111 2A 0E 5F 00         B   751    				ld hl,(charmap_address)
004115 19                  B   752    				add hl,de
004116 7E                  B   753    				ld a,(hl)				
004117 CD 69 3E 00         B   754    				call hwsc_plotchar_specific_att
00411B 13                  B   755    				inc de
00411C 04                  B   756    				inc b
00411D 3A F6 5E 00         B   757    				ld a,(window_columns)
004121 B8                  B   758    				cp b
004122 20 E3               B   759    				jr nz,rs_xloop
004124 C9                  B   760    				ret	
                           B   761    
                           B   762    ;----------------------------------------------
                           B   763    
004125                     B   764    hwsc_charline_to_command_string	
                           B   765    								
004125 ED5B F6 5E 00       B   766    				ld de,(window_columns)
00412A 3A 48 61 00         B   767    				ld a,(cursor_y)					00412E 57                  B   768    				ld d,a
00412F ED5C                B   769    				mlt de
004131 2A 0E 5F 00         B   770    				ld hl,(charmap_address)
004135 19                  B   771    				add hl,de
004136 11 66 61 00         B   772    				ld de,commandstring				00413A ED4B F6 5E 00       B   773    				ld bc,(window_columns)
00413F EDB0                B   774    				ldir
004141 C9                  B   775    				ret
                           B   776    
                           B   777    ;----------------------------------------------
                           B   778    
004142 C5                  B   779    hwsc_wait_vrt	push bc
                           B   780    
004143 0E01                B   781    				ld c,1
004145 ED0909              B   782    				out0 (port_clear_flags),c
                           B   783    
004148 0E01                B   784    				ld c,port_hw_flags
00414A ED7420              B   785    ewaitvrtlp1		tstio 1<<vrt
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 165


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
00414D 28 FB               B   786    				jr z,ewaitvrtlp1
                           B   787    				
00414F C1                  B   788    				pop bc
004150 BF                  B   789    				cp a							004151 C9                  B   790    				ret
                           B   791    
                           B   792    
                           B   793    ;----------------------------------------------
                           B   794    
                           B     0    	include		'ez80p_misc_code.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;Misc eZ80p specific routines v0.05 (ADL versio
                           B     3    ;----------------------------------------------
                           B     4    
004152                     B     5    hwsc_default_hw_settings
                           B     6    
                           B     7    ; Set up eZ80 Wait states
                           B     8    
004152 3E48                B     9    					ld a,01001000b				004154 ED39AA              B    10    					out0 (CS0_CTL),a
004157 3E00                B    11    					ld a,000h					004159 ED39A8              B    12    					out0 (CS0_LBR),a
00415C 3EFF                B    13    					ld a,0ffh	
00415E ED39A9              B    14    					out0 (CS0_UBR),a			                           B    15    
004161 3E58                B    16    					ld a,01011000b
004163 ED39AD              B    17    					out0 (CS1_CTL),a			004166 3E00                B    18    					ld a,0
004168 ED39AB              B    19    					out0 (CS1_LBR),a			                           B    20    
                           B    21    ;set up eZ80 GPIO ports
                           B    22    
00416B 3EFF                B    23    					ld a,0ffh
00416D ED399F              B    24    					out0 (PC_DDR),a				004170 AF                  B    25    					xor a
004171 ED39A0              B    26    					out0 (PC_ALT1),a
004174 ED39A1              B    27    					out0 (PC_ALT2),a
                           B    28    					
004177 3EFF                B    29    					ld a,0ffh					004179 ED39A3              B    30    					out0 (PD_DDR),a				00417C AF                  B    31    					xor a	
00417D ED39A4              B    32    					out0 (PD_ALT1),a			004180 3E0F                B    33    					ld a,00fh				
004182 ED39A5              B    34    					out0 (PD_ALT2),a			                           B    35    
                           B    36    ;set up eZ80 timer
                           B    37    
004185 ED3892              B    38    					in0 a,(TMR_ISS)
004188 E6FC                B    39    					and 11111100b
00418A F601                B    40    					or  00000001b
00418C ED3992              B    41    					out0 (TMR_ISS),a			                           B    42    					
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 166


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B    43    					
                           B    44    ;AMOEBA default settings
                           B    45    
00418F AF                  B    46    					xor a
004190 320314FF            B    47    					ld (hw_audio_registers+3),a
                           B    48    
004194 C9                  B    49    					ret
                           B    50    
                           B    51    ;----------------------------------------------
                           B    52    
004195 11000000            B    53    hwsc_get_version	ld de,0
004199 0610                B    54    					ld b,16
00419B 78                  B    55    gethwvlp			ld a,b
00419C 3D                  B    56    					dec a
00419D ED3908              B    57    					out0 (port_selector),a		0041A0 DB01                B    58    					in a,(port_hw_flags)		0041A2 CB27                B    59    					sla a
0041A4 CB13                B    60    					rl e
0041A6 CB12                B    61    					rl d
0041A8 10 F1               B    62    					djnz gethwvlp				                           B    63    									
0041AA 212F0000            B    64    					ld hl,prose_version
0041AE BF                  B    65    					cp a						0041AF C9                  B    66    					ret
                           B    67    
                           B    68    
                           B    69    
                           B    70    ;----------------------------------------------
                           B    71    ; Timer related 
                           B    72    ;----------------------------------------------
                           B    73    
0041B0                     B    74    hwsc_time_delay
                           B    75    
                           B    76    ; set DE to 32768Hz ticks to wait
                           B    77    
0041B0 CD BC 41 00         B    78    					call set_timeout
0041B4 CD CD 41 00         B    79    twaitlp				call test_timeout
0041B8 28 FA               B    80    					jr z,twaitlp
0041BA AF                  B    81    					xor a						0041BB C9                  B    82    					ret			
                           B    83    
                           B    84    ;----------------------------------------------
                           B    85    
0041BC 7B                  B    86    set_timeout			ld a,e						0041BD ED3981              B    87    					out0 (TMR0_RR_L),a			0041C0 7A                  B    88    					ld a,d
0041C1 ED3982              B    89    					out0 (TMR0_RR_H),a			0041C4 3E03                B    90    					ld a,00000011b				0041C6 ED3980              B    91    					out0 (TMR0_CTL),a			0041C9 ED3880              B    92    					in0 a,(TMR0_CTL)			0041CC C9                  B    93    					ret
                           B    94    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 167


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
0041CD ED3880              B    95    test_timeout		in0 a,(TMR0_CTL)			0041D0 CB7F                B    96    					bit 7,a
0041D2 C9                  B    97    					ret
                           B    98    			
                           B    99    ;----------------------------------------------
                           B   100    
0041D3                     B   101    hwsc_read_rtc
0041D3 D5                  B   102    					push de
0041D4 C5                  B   103    					push bc
0041D5 0EE0                B   104    hwsc_rtc_rlp		ld c,RTC_SEC
0041D7 0608                B   105    					ld b,8
0041D9 21 A9 60 00         B   106    					ld hl,time_data
0041DD ED92                B   107    					inimr						0041DF 0EE0                B   108    					ld c,RTC_SEC
0041E1 0600                B   109    					ld b,0
0041E3 1E08                B   110    					ld e,8
0041E5 21 A9 60 00         B   111    					ld hl,time_data
0041E9 ED78                B   112    timevloop			in a,(bc)					0041EB BE                  B   113    					cp (hl)						0041EC 20 E7               B   114    					jr nz,hwsc_rtc_rlp			0041EE 23                  B   115    					inc hl
0041EF 0C                  B   116    					inc c
0041F0 1D                  B   117    					dec e
0041F1 20 F6               B   118    					jr nz,timevloop
0041F3 21 A9 60 00         B   119    					ld hl,time_data
0041F7 C1                  B   120    					pop bc
0041F8 D1                  B   121    					pop de
0041F9 BF                  B   122    					cp a						0041FA C9                  B   123    					ret
                           B   124    
                           B   125    
0041FB                     B   126    hwsc_write_rtc	
                           B   127    
                           B   128    ; set HL to location of BCD data for RTC: sec/m
                           B   129    
0041FB E5                  B   130    					push hl
0041FC C5                  B   131    					push bc
0041FD 3E21                B   132    					ld a,00100001b				0041FF ED39ED              B   133    					out0 (RTC_CTRL),a
004202 0EE0                B   134    					ld c,RTC_SEC
004204 0608                B   135    					ld b,8
004206 ED93                B   136    					otimr
004208 3E20                B   137    					ld a,00100000b				00420A ED39ED              B   138    					out0 (RTC_CTRL),a
00420D C1                  B   139    					pop bc
00420E E1                  B   140    					pop hl
00420F BF                  B   141    					cp a						004210 C9                  B   142    					ret	
                           B   143    
                           B   144    
                           B   145    ;----------------------------------------------
                           B   146    ; INIT KEYBOARD ROUTINE 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 168


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B   147    ;----------------------------------------------
                           B   148    
                           B   149    ; ZF set and A = 0 if all OK, else error code i
                           B   150    
004211                     B   151    init_keyboard
                           B   152    
004211 11004000            B   153    			ld de,16384							004215 CD B0 41 00         B   154    			call hwsc_time_delay
004219 F3                  B   155    			di
00421A CD CF 42 00         B   156    			call purge_keyboard
00421E CD 28 42 00         B   157    			call rs_keyboard
004222 FB                  B   158    			ei
004223 D0                  B   159    			ret nc
004224 3E8B                B   160    			ld a,08bh							004226 B7                  B   161    			or a
004227 C9                  B   162    			ret
                           B   163    			
                           B   164    			
004228                     B   165    rs_keyboard
                           B   166    
004228 3EFF                B   167    			ld a,0ffh
00422A CD 47 42 00         B   168    			call write_to_keyboard
00422E 30 04               B   169    			jr nc,kb_connected
004230 3E8A                B   170    			ld a,08ah							004232 B7                  B   171    			or a
004233 C9                  B   172    			ret
                           B   173    
004234                     B   174    kb_connected
                           B   175    			
004234 0605                B   176    			ld b,5
004236 C5                  B   177    kb_initlp	push bc
004237 CD B3 42 00         B   178    			call wait_kb_byte					00423B C1                  B   179    			pop bc
00423C D8                  B   180    			ret c
00423D FEAA                B   181    			cp 0aah
00423F 28 04               B   182    			jr z,kb_postok
004241 10 F3               B   183    			djnz kb_initlp						004243 37                  B   184    			scf									004244 C9                  B   185    			ret
                           B   186    			
                           B   187    			
004245 AF                  B   188    kb_postok	xor a
004246 C9                  B   189    			ret
                           B   190    	
                           B   191    	
                           B   192    ;----------------------------------------------
                           B   193    				
004247                     B   194    write_to_keyboard
                           B   195    
                           B   196    ; Put byte to send to keyboard in A
                           B   197    
004247 4F                  B   198    			ld c,a								Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 169


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
004248 3E01                B   199    			ld a,01b							00424A ED3907              B   200    			out0 (port_ps2_ctrl),a
                           B   201    
00424D 110A0000            B   202    			ld de,10
004251 CD B0 41 00         B   203    			call hwsc_time_delay				                           B   204    
004255 3E03                B   205    			ld a,11b
004257 ED3907              B   206    			out0 (port_ps2_ctrl),a				                           B   207    			
00425A 3E02                B   208    			ld a,10b
00425C ED3907              B   209    			out0 (port_ps2_ctrl),a				                           B   210    			
00425F CD 2F 44 00         B   211    			call wait_kb_clk_high
                           B   212    			
004263 1601                B   213    			ld d,1								004265 0608                B   214    			ld b,8								004267 CD 02 44 00         B   215    kdoloop		call wait_kb_clk_low	
00426B D8                  B   216    			ret c
00426C AF                  B   217    			xor a
00426D CBCF                B   218    			set 1,a
00426F CB41                B   219    			bit 0,c
004271 28 03               B   220    			jr z,kdbzero
004273 CB8F                B   221    			res 1,a
004275 14                  B   222    			inc d
004276 ED3907              B   223    kdbzero		out0 (port_ps2_ctrl),a				004279 CD 2F 44 00         B   224    			call wait_kb_clk_high
00427D D8                  B   225    			ret c
00427E CB19                B   226    			rr c
004280 10 E5               B   227    			djnz kdoloop
                           B   228    
004282 CD 02 44 00         B   229    			call wait_kb_clk_low
004286 D8                  B   230    			ret c
004287 AF                  B   231    			xor a
004288 CB42                B   232    			bit 0,d
00428A 20 02               B   233    			jr nz,kparone
00428C CBCF                B   234    			set 1,a
00428E ED3907              B   235    kparone		out0 (port_ps2_ctrl),a				004291 CD 2F 44 00         B   236    			call wait_kb_clk_high
004295 D8                  B   237    			ret c
                           B   238    			
004296 CD 02 44 00         B   239    			call wait_kb_clk_low
00429A D8                  B   240    			ret c
00429B AF                  B   241    			xor a
00429C ED3907              B   242    			out0 (port_ps2_ctrl),a				                           B   243    
00429F CD FE 43 00         B   244    			call wait_kb_data_low				0042A3 D8                  B   245    			ret c
0042A4 CD 02 44 00         B   246    			call wait_kb_clk_low				0042A8 D8                  B   247    			ret c
                           B   248    				
0042A9 CD 2B 44 00         B   249    			call wait_kb_data_high				0042AD D8                  B   250    			ret c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 170


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
0042AE CD 2F 44 00         B   251    			call wait_kb_clk_high				0042B2 C9                  B   252    			ret 
                           B   253    
                           B   254    
                           B   255    ;----------------------------------------------
                           B   256    
                           B   257    
0042B3                     B   258    wait_kb_byte
                           B   259    
0042B3 11008000            B   260    			ld de,8000h
0042B7 CD BC 41 00         B   261    			call set_timeout					                           B   262    
0042BB ED3807              B   263    wait_kloop	in0 a,(port_ps2_ctrl)
0042BE CB67                B   264    			bit 4,a
0042C0 20 08               B   265    			jr nz,rec_kbyte
                           B   266    			
0042C2 CD CD 41 00         B   267    			call test_timeout
0042C6 28 F3               B   268    			jr z,wait_kloop
0042C8 37                  B   269    			scf									0042C9 C9                  B   270    			ret
                           B   271    			
0042CA ED3802              B   272    rec_kbyte	in0 a,(port_keyboard_data)			0042CD B7                  B   273    			or a
0042CE C9                  B   274    			ret
                           B   275    
                           B   276    
                           B   277    ;----------------------------------------------
                           B   278    
0042CF                     B   279    purge_keyboard
                           B   280    			
0042CF ED3807              B   281    			in0 a,(port_ps2_ctrl)
0042D2 CB67                B   282    			bit 4,a
0042D4 C8                  B   283    			ret z
0042D5 ED3802              B   284    			in0 a,(port_keyboard_data)			0042D8 18 F5               B   285    			jr purge_keyboard
                           B   286    
                           B   287    
                           B   288    
                           B   289    ;----------------------------------------------
                           B   290    ; INIT MOUSE ROUTINE 
                           B   291    ;----------------------------------------------
                           B   292    
                           B   293    ; ZF set and A = 0 if all OK, else error code i
                           B   294    
0042DA                     B   295    init_mouse		
0042DA F3                  B   296    			di
0042DB CD F3 43 00         B   297    			call purge_mouse
0042DF CD E9 42 00         B   298    			call rs_mouse
0042E3 FB                  B   299    			ei
0042E4 D0                  B   300    			ret nc
0042E5 3E8B                B   301    			ld a,08bh							0042E7 B7                  B   302    			or a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 171


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
0042E8 C9                  B   303    			ret
                           B   304    
                           B   305    
0042E9                     B   306    rs_mouse
0042E9 3EFF                B   307    			ld a,0ffh							0042EB CD 6B 43 00         B   308    			call write_to_mouse		
0042EF 30 04               B   309    			jr nc,mouse_connected
0042F1 3E8A                B   310    			ld a,08ah							0042F3 B7                  B   311    			or a
0042F4 C9                  B   312    			ret
                           B   313    
                           B   314    
0042F5                     B   315    mouse_connected
                           B   316    
0042F5 0605                B   317    			ld b,5
0042F7 C5                  B   318    ms_initlp	push bc
0042F8 CD D7 43 00         B   319    			call wait_mouse_byte				0042FC C1                  B   320    			pop bc
0042FD D8                  B   321    			ret c
0042FE FEAA                B   322    			cp 0aah
004300 28 04               B   323    			jr z,ms_postok
004302 10 F3               B   324    			djnz ms_initlp
004304 18 43               B   325    			jr bad_mouse
                           B   326    			
004306 CD D7 43 00         B   327    ms_postok	call wait_mouse_byte				00430A D8                  B   328    			ret c
00430B B7                  B   329    			or a
00430C 20 3B               B   330    			jr nz,bad_mouse						                           B   331    			
00430E 3E03                B   332    			ld a,3
004310 32 81 62 00         B   333    			ld (mouse_packet_size),a
                           B   334    
004314 21 60 5F 00         B   335    			ld hl,intellimouse_seq
004318 0606                B   336    			ld b,6
00431A CD 4D 43 00         B   337    			call mouse_sequence
00431E D8                  B   338    			ret c
                           B   339    			
00431F 3EF2                B   340    			ld a,0f2h
004321 CD 5C 43 00         B   341    			call write_mouse_wait_ack			004325 D8                  B   342    			ret c
004326 CD D7 43 00         B   343    			call wait_mouse_byte				00432A D8                  B   344    			ret c
00432B 32 80 62 00         B   345    			ld (mouse_id),a
00432F B7                  B   346    			or a								004330 28 0A               B   347    			jr z,standard_mouse
004332 FE03                B   348    			cp 3
004334 20 13               B   349    			jr nz,bad_mouse						004336 3E04                B   350    			ld a,4
004338 32 81 62 00         B   351    			ld (mouse_packet_size),a
                           B   352    
00433C                     B   353    standard_mouse
                           B   354    		
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 172


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
00433C 21 66 5F 00         B   355    			ld hl,mouse_settings_seq
004340 0606                B   356    			ld b,6
004342 CD 4D 43 00         B   357    			call mouse_sequence
004346 D8                  B   358    			ret c
004347 AF                  B   359    			xor a								004348 C9                  B   360    			ret
                           B   361    
                           B   362    
004349 3E89                B   363    bad_mouse	ld a,089h							00434B B7                  B   364    			or a
00434C C9                  B   365    			ret
                           B   366    
                           B   367    
00434D                     B   368    mouse_sequence
                           B   369    
00434D 7E                  B   370    mseqlp		ld a,(hl)
00434E E5                  B   371    			push hl
00434F C5                  B   372    			push bc
004350 CD 5C 43 00         B   373    			call write_mouse_wait_ack
004354 C1                  B   374    			pop bc
004355 E1                  B   375    			pop hl
004356 D8                  B   376    			ret c
004357 23                  B   377    			inc hl
004358 10 F3               B   378    			djnz mseqlp
00435A AF                  B   379    			xor a
00435B C9                  B   380    			ret
                           B   381    
                           B   382    
00435C                     B   383    write_mouse_wait_ack
                           B   384    			
00435C CD 6B 43 00         B   385    			call write_to_mouse
004360 D8                  B   386    			ret c
004361 CD D7 43 00         B   387    			call wait_mouse_byte				004365 D8                  B   388    			ret c
004366 FEFA                B   389    			cp 0fah								004368 C8                  B   390    			ret z
004369 37                  B   391    			scf
00436A C9                  B   392    			ret
                           B   393    			
                           B   394    ;----------------------------------------------
                           B   395    				
00436B                     B   396    write_to_mouse
                           B   397    
                           B   398    ; Put byte to send to mouse in A
                           B   399    
00436B 4F                  B   400    			ld c,a								00436C 3E04                B   401    			ld a,0100b							00436E ED3907              B   402    			out0 (port_ps2_ctrl),a
                           B   403    
004371 110A0000            B   404    			ld de,10
004375 CD B0 41 00         B   405    			call hwsc_time_delay				                           B   406    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 173


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
004379 3E0C                B   407    			ld a,1100b
00437B ED3907              B   408    			out0 (port_ps2_ctrl),a				                           B   409    			
00437E 3E08                B   410    			ld a,1000b
004380 ED3907              B   411    			out0 (port_ps2_ctrl),a				                           B   412    			
004383 CD 37 44 00         B   413    			call wait_mouse_clk_high
                           B   414    			
004387 1601                B   415    			ld d,1								004389 0608                B   416    			ld b,8								00438B CD 0A 44 00         B   417    mdoloop		call wait_mouse_clk_low	
00438F D8                  B   418    			ret c
004390 AF                  B   419    			xor a
004391 CBDF                B   420    			set 3,a
004393 CB41                B   421    			bit 0,c
004395 28 03               B   422    			jr z,mdbzero
004397 CB9F                B   423    			res 3,a
004399 14                  B   424    			inc d
00439A ED3907              B   425    mdbzero		out0 (port_ps2_ctrl),a				00439D CD 37 44 00         B   426    			call wait_mouse_clk_high
0043A1 D8                  B   427    			ret c
0043A2 CB19                B   428    			rr c
0043A4 10 E5               B   429    			djnz mdoloop
                           B   430    
0043A6 CD 0A 44 00         B   431    			call wait_mouse_clk_low
0043AA D8                  B   432    			ret c
0043AB AF                  B   433    			xor a
0043AC CB42                B   434    			bit 0,d
0043AE 20 02               B   435    			jr nz,parone
0043B0 CBDF                B   436    			set 3,a
0043B2 ED3907              B   437    parone		out0 (port_ps2_ctrl),a				0043B5 CD 37 44 00         B   438    			call wait_mouse_clk_high
0043B9 D8                  B   439    			ret c
                           B   440    			
0043BA CD 0A 44 00         B   441    			call wait_mouse_clk_low
0043BE D8                  B   442    			ret c
0043BF AF                  B   443    			xor a
0043C0 ED3907              B   444    			out0 (port_ps2_ctrl),a				                           B   445    
0043C3 CD 06 44 00         B   446    			call wait_mouse_data_low			0043C7 D8                  B   447    			ret c
0043C8 CD 0A 44 00         B   448    			call wait_mouse_clk_low				0043CC D8                  B   449    			ret c
                           B   450    				
0043CD CD 33 44 00         B   451    			call wait_mouse_data_high			0043D1 D8                  B   452    			ret c
0043D2 CD 37 44 00         B   453    			call wait_mouse_clk_high			0043D6 C9                  B   454    			ret 
                           B   455    
                           B   456    ;----------------------------------------------
                           B   457    
                           B   458    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 174


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
0043D7                     B   459    wait_mouse_byte
                           B   460    
0043D7 11008000            B   461    			ld de,8000h
0043DB CD BC 41 00         B   462    			call set_timeout					                           B   463    
0043DF ED3807              B   464    wait_mloop	in0 a,(port_ps2_ctrl)
0043E2 CB6F                B   465    			bit 5,a
0043E4 20 08               B   466    			jr nz,rec_mbyte
                           B   467    			
0043E6 CD CD 41 00         B   468    			call test_timeout
0043EA 28 F3               B   469    			jr z,wait_mloop
0043EC 37                  B   470    			scf									0043ED C9                  B   471    			ret
                           B   472    			
0043EE ED3806              B   473    rec_mbyte	in0 a,(port_mouse_data)				0043F1 B7                  B   474    			or a
0043F2 C9                  B   475    			ret
                           B   476    
                           B   477    ;----------------------------------------------
                           B   478    
0043F3                     B   479    purge_mouse
                           B   480    			
0043F3 ED3807              B   481    			in0 a,(port_ps2_ctrl)
0043F6 CB6F                B   482    			bit 5,a
0043F8 C8                  B   483    			ret z
0043F9 ED3806              B   484    			in0 a,(port_mouse_data)			; r
0043FC 18 F5               B   485    			jr purge_mouse
                           B   486    
                           B   487    
                           B   488    ;----------------------------------------------
                           B   489    
                           B   490    
0043FE                     B   491    wait_kb_data_low
                           B   492    
0043FE 3E02                B   493    			ld a,2
004400 18 0A               B   494    			jr test_lo_ps2
                           B   495    			
004402                     B   496    wait_kb_clk_low
                           B   497    
004402 3E01                B   498    			ld a,1
004404 18 06               B   499    			jr test_lo_ps2			
                           B   500    
004406                     B   501    wait_mouse_data_low
                           B   502    
004406 3E08                B   503    			ld a,8
004408 18 02               B   504    			jr test_lo_ps2
                           B   505    
00440A                     B   506    wait_mouse_clk_low
                           B   507    
00440A 3E04                B   508    			ld a,4
                           B   509    
00440C C5                  B   510    test_lo_ps2	push bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 175


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
00440D D5                  B   511    			push de
00440E 4F                  B   512    			ld c,a
00440F 11004000            B   513    			ld de,04000h					; a
004413 CD BC 41 00         B   514    			call set_timeout
                           B   515    
004417 CD CD 41 00         B   516    nkb_lw		call test_timeout				; t
00441B 28 04               B   517    			jr z,nkb_lnto
00441D D1                  B   518    			pop de
00441E C1                  B   519    			pop bc
00441F 37                  B   520    			scf								; c
004420 C9                  B   521    			ret
004421 ED3807              B   522    nkb_lnto	in0 a,(port_ps2_ctrl)
004424 A1                  B   523    			and c
004425 20 F0               B   524    			jr nz,nkb_lw
                           B   525    					
004427 D1                  B   526    			pop de
004428 C1                  B   527    			pop bc
004429 AF                  B   528    			xor a
00442A C9                  B   529    			ret					
                           B   530    
                           B   531    
                           B   532    
                           B   533    
00442B                     B   534    wait_kb_data_high
                           B   535    
00442B 3E02                B   536    			ld a,2
00442D 18 0A               B   537    			jr test_hi_ps2
                           B   538    			
00442F                     B   539    wait_kb_clk_high
                           B   540    
00442F 3E01                B   541    			ld a,1
004431 18 06               B   542    			jr test_hi_ps2
                           B   543    
                           B   544    
004433                     B   545    wait_mouse_data_high
                           B   546    			
004433 3E08                B   547    			ld a,8
004435 18 02               B   548    			jr test_hi_ps2
                           B   549    			 
004437                     B   550    wait_mouse_clk_high
                           B   551    
004437 3E04                B   552    			ld a,4
                           B   553    
004439 C5                  B   554    test_hi_ps2	push bc
00443A D5                  B   555    			push de
00443B 4F                  B   556    			ld c,a
00443C 11004000            B   557    			ld de,04000h					; a
004440 CD BC 41 00         B   558    			call set_timeout
                           B   559    
004444 CD CD 41 00         B   560    nkb_hw		call test_timeout				; t
004448 28 04               B   561    			jr z,nkb_hnto
00444A D1                  B   562    			pop de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 176


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
00444B C1                  B   563    			pop bc
00444C 37                  B   564    			scf								; c
00444D C9                  B   565    			ret
00444E ED3807              B   566    nkb_hnto	in0 a,(port_ps2_ctrl)
004451 A1                  B   567    			and c
004452 28 F0               B   568    			jr z,nkb_hw
                           B   569    					
004454 D1                  B   570    			pop de
004455 C1                  B   571    			pop bc
004456 AF                  B   572    			xor a							; c
004457 C9                  B   573    			ret
                           B   574    
                           B   575    
                           B   576    ;==============================================
                           A  3099    
                           B     0    	include		'prose_keyboard_routines.asm'	                           B     1    ;----------------------------------------------
                           B     2    ;PROSE KEYBOARD/MOUSE ROUTINES V0.04 (ADL mode)
                           B     3    ;----------------------------------------------
                           B     4    
004458                     B     5    os_wait_key_press
                           B     6    
                           B     7    ; Busy waits for a keypress.
                           B     8    ; Handles the following modifier keys (key_mod_
                           B     9    ; Returns scancode in A and ASCII code in B (B=
                           B    10    ; (ASCII code is modifed by shift / alt key sta
                           B    11    
                           B    12    
004458 D5                  B    13    				push de
004459 51                  B    14    				ld d,c
00445A E5                  B    15    				push hl
                           B    16    				
00445B CD C5 44 00         B    17    wait_kbuf		call get_kb_buffer_indexes		00445F BE                  B    18    				cp (hl)							004460 28 F9               B    19    				jr z,wait_kbuf		
                           B    20    			
004462 01000000            B    21    new_key			ld bc,0							004466 4F                  B    22    				ld c,a
004467 21 58 62 00         B    23    				ld hl,scancode_buffer	
00446B 09                  B    24    				add hl,bc
00446C 7E                  B    25    				ld a,(hl)						                           B    26    
00446D 0E10                B    27    				ld c,16
00446F 09                  B    28    				add hl,bc						004470 4F                  B    29    				ld c,a							004471 7E                  B    30    				ld a,(hl)						                           B    31    
004472 1E00                B    32    				ld e,0							004474 21 A0 5D 00         B    33    				ld hl,unshifted_keymap			                           B    34    
004478 CB4F                B    35    				bit 1,a
00447A 28 04               B    36    				jr z,not_ctrl					Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 177


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_keyboard_routines.asm
00447C 1E60                B    37    				ld e,96							00447E 18 16               B    38    				jr got_keymap					                           B    39    							
004480 CB47                B    40    not_ctrl		bit 0,a
004482 20 04               B    41    				jr nz,shifted
004484 CB67                B    42    				bit 4,a
004486 28 06               B    43    				jr z,not_shifted
004488 21 02 5E 00         B    44    shifted			ld hl,shifted_keymap			00448C 18 08               B    45    				jr got_keymap
                           B    46    				
00448E CB5F                B    47    not_shifted		bit 3,a
004490 28 04               B    48    				jr z,got_keymap	
004492 21 64 5E 00         B    49    				ld hl,alted_keymap				                           B    50    
004496 79                  B    51    got_keymap		ld a,c							004497 FE62                B    52    				cp 062h
004499 30 07               B    53    				jr nc,gotkdone
00449B 09                  B    54    				add hl,bc						00449C 7E                  B    55    				ld a,(hl)						00449D 93                  B    56    				sub a,e							00449E 30 01               B    57    				jr nc,subkey_ok	
0044A0 AF                  B    58    				xor a							0044A1 47                  B    59    subkey_ok		ld b,a
                           B    60    				
0044A2 3A 79 62 00         B    61    gotkdone		ld a,(key_buf_rd_idx)			0044A6 3C                  B    62    				inc a							0044A7 E60F                B    63    				and 15
0044A9 32 79 62 00         B    64    				ld (key_buf_rd_idx),a			0044AD 79                  B    65    				ld a,c							0044AE E1                  B    66    				pop hl
0044AF 4A                  B    67    				ld c,d
0044B0 D1                  B    68    				pop de
0044B1 BF                  B    69    				cp a							0044B2 C9                  B    70    				ret
                           B    71    			
                           B    72    		
                           B    73    ;----------------------------------------------
                           B    74    			
0044B3                     B    75    os_get_key_press
                           B    76    				
                           B    77    ; Gets a keycode on-the-fly - If one is availab
                           B    78    ; On return, ZF is set if there is a new scanco
                           B    79    ; (ASCII code is modifed by shift key status), 
                           B    80    			
                           B    81    			
0044B3 D5                  B    82    				push de
0044B4 51                  B    83    				ld d,c
0044B5 E5                  B    84    				push hl
0044B6 CD C5 44 00         B    85    				call get_kb_buffer_indexes		0044BA BE                  B    86    				cp (hl)							0044BB 20 A5               B    87    				jr nz,new_key					0044BD 3E81                B    88    				ld a,81h			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 178


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_keyboard_routines.asm
0044BF 47                  B    89    				ld b,a
0044C0 B7                  B    90    				or a
0044C1 E1                  B    91    				pop hl
0044C2 4A                  B    92    				ld c,d
0044C3 D1                  B    93    				pop de
0044C4 C9                  B    94    				ret
                           B    95    			
                           B    96    ;----------------------------------------------
                           B    97    			
0044C5                     B    98    get_kb_buffer_indexes
                           B    99    			
                           B   100    			
0044C5 21 78 62 00         B   101    				ld hl,key_buf_wr_idx			0044C9 3A 79 62 00         B   102    				ld a,(key_buf_rd_idx)			0044CD C9                  B   103    				ret
                           B   104    			
                           B   105    		
                           B   106    ;----------------------------------------------
                           B     0    	include		'prose_serial_routines.asm'
                           B     1    ;**********************************************
                           B     2    ; PROSE Serial File Transfer Routines V0.05 (AD
                           B     3    ;**********************************************
                           B     4    
                           B     5    ;----------------------------------------------
                           B     6    ; .---------------------.
                           B     7    ; ! Receive file header !
                           B     8    ; '---------------------'
                           B     9    ;
                           B    10    ; Before calling set:-
                           B    11    ;
                           B    12    ; HL = Filename ("*" if dont care)
                           B    13    ;  A = Time out in seconds
                           B    14    ;
                           B    15    ; If zero flag set, all OK. IX returns location
                           B    16    ;    Else A=$84 = memory address out of range, 
                           B    17    ;           $87 = Filename mismatch, $86 = chec
                           B    18    ;----------------------------------------------
                           B    19    	
                           B    20    
0044CE                     B    21    serial_get_header
                           B    22    
0044CE 32 3D 5F 00         B    23    				ld (serial_timeout),a			0044D2 22 27 5F 00         B    24    				ld (serial_fn_addr),hl
0044D6 CD 48 3C 00         B    25    				call hwsc_flush_serial_buffer	                           B    26    
0044DA CD BD 45 00         B    27    				call s_getblock					0044DE 28 0C               B    28    				jr z,s_gbfhok					0044E0 F5                  B    29    				push af							0044E1 3A 5E 5F 00         B    30    				ld a,(serial_transfer_started)
0044E5 B7                  B    31    				or a							0044E6 C4 24 46 00         B    32    				call nz,s_badack				0044EA F1                  B    33    				pop af
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 179


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
0044EB C9                  B    34    				ret
                           B    35    	
0044EC 21 52 5F 00         B    36    s_gbfhok		ld hl,serial_header_id			0044F0 11 AA 66 00         B    37    				ld de,sector_buffer+20			0044F4 060C                B    38    				ld b,12
0044F6 CD E3 11 00         B    39    				call os_compare_strings
0044FA 20 0F               B    40    				jr nz,s_nfhdr
0044FC 06E0                B    41    				ld b,256-32						0044FE 21 B6 66 00         B    42    				ld hl,sector_buffer+32
004502 7E                  B    43    s_chdr			ld a,(hl)
004503 23                  B    44    				inc hl
004504 B7                  B    45    				or a
004505 20 04               B    46    				jr nz,s_nfhdr
004507 10 F9               B    47    				djnz s_chdr
004509 18 08               B    48    				jr s_fhcsok
                           B    49    				
00450B CD 24 46 00         B    50    s_nfhdr			call s_badack					00450F 3E85                B    51    				ld a,085h						004511 B7                  B    52    				or a
004512 C9                  B    53    				ret
                           B    54    		
004513 21 A6 66 00         B    55    s_fhcsok		ld hl,sector_buffer+16			004517 11 4E 5F 00         B    56    				ld de,serial_fileheader+16
00451B 01040000            B    57    				ld bc,4
00451F EDB0                B    58    				ldir
                           B    59    				
004521 21 96 66 00         B    60    				ld hl,sector_buffer
004525 11 3E 5F 00         B    61    				ld de,serial_fileheader			004529 0610                B    62    				ld b,16							00452B 7E                  B    63    s_tuclp			ld a,(hl)						00452C B7                  B    64    				or a
00452D 28 0B               B    65    				jr z,s_ffhswz	
00452F CD 1D 12 00         B    66    				call os_uppercasify
004533 12                  B    67    				ld (de),a
004534 23                  B    68    				inc hl
004535 13                  B    69    				inc de
004536 10 F3               B    70    				djnz s_tuclp
004538 18 04               B    71    				jr s_tucdone
00453A 12                  B    72    s_ffhswz		ld (de),a
00453B 13                  B    73    				inc de
00453C 10 FC               B    74    				djnz s_ffhswz		
                           B    75    	
00453E 2A 27 5F 00         B    76    s_tucdone		ld hl,(serial_fn_addr)			004542 7E                  B    77    				ld a,(hl)
004543 FE2A                B    78    				cp '*'
004545 28 14               B    79    				jr z,s_rffns					004547 11 3E 5F 00         B    80    				ld de,serial_fileheader
00454B 0610                B    81    				ld b,16
00454D CD E3 11 00         B    82    				call os_compare_strings
004551 28 08               B    83    				jr z,s_rffns
004553 CD 24 46 00         B    84    s_rfnbad		call s_badack
004557 3E87                B    85    				ld a,087h						Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 180


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
004559 B7                  B    86    				or a
00455A C9                  B    87    				ret
                           B    88    				
00455B DD21 3E 5F 00       B    89    s_rffns			ld ix,serial_fileheader			004560 AF                  B    90    				xor a
004561 C9                  B    91    				ret
                           B    92    
004562 F5                  B    93    s_fail			push af				
004563 CD 24 46 00         B    94    				call s_badack		 
004567 F1                  B    95    				pop af
004568 C9                  B    96    				ret
                           B    97    	
                           B    98    ;----------------------------------------------
                           B    99    ; .-------------------.
                           B   100    ; ! Receive file data !
                           B   101    ; '-------------------'
                           B   102    ;
                           B   103    ; Serial_get_header must be called first!
                           B   104    ;
                           B   105    ; Set:
                           B   106    ;
                           B   107    ; xHL = Address to load to [23:0]
                           B   108    ;
                           B   109    ; On return, if Zero flag is set, all OK (IX = 
                           B   110    ; Else A =  $84 = memory address out of range
                           B   111    ;           $85 = comms error
                           B   112    ;----------------------------------------------
                           B   113    
004569                     B   114    serial_receive_file
                           B   115    
004569 3E0A                B   116    				ld a,10							00456B 32 3D 5F 00         B   117    				ld (serial_timeout),a
00456F E5                  B   118    				push hl
004570 CD 13 46 00         B   119    				call s_goodack					004574 DDE1                B   120    				pop ix							004576 ED5B 4E 5F 00       B   121    				ld de,(serial_fileheader+16)	                           B   122    
00457B CD BD 45 00         B   123    s_gbloop		call s_getblock
00457F 20 E1               B   124    				jr nz,s_fail
004581 0E00                B   125    				ld c,0							004583 FD21 96 66 00       B   126    				ld iy,sector_buffer
004588 FD7E00              B   127    s_rfloop		ld a,(iy)
00458B DD7700              B   128    				ld (ix),a						00458E 1B                  B   129    				dec de							00458F 21000000            B   130    				ld hl,0
004593 AF                  B   131    				xor a
004594 ED5A                B   132    				adc hl,de						004596 28 1A               B   133    				jr z,s_rfabr					004598 C5                  B   134    				push bc
004599 01010000            B   135    				ld bc,1
00459D DD09                B   136    				add ix,bc						00459F C1                  B   137    				pop bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 181


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
0045A0 30 05               B   138    				jr nc,s_nbt
0045A2 3E84                B   139    				ld a,84h						0045A4 B7                  B   140    				or a
0045A5 18 BB               B   141    				jr s_fail
0045A7 FD23                B   142    s_nbt			inc iy
0045A9 0D                  B   143    				dec c
0045AA 20 DC               B   144    				jr nz,s_rfloop
0045AC CD 13 46 00         B   145    				call s_goodack					0045B0 18 C9               B   146    				jr s_gbloop
                           B   147    			
0045B2 CD 13 46 00         B   148    s_rfabr			call s_goodack					0045B6 DD21 3E 5F 00       B   149    				ld ix,serial_fileheader			0045BB AF                  B   150    				xor a							0045BC C9                  B   151    				ret
                           B   152    			
                           B   153    ;----------------------------------------------
                           B   154    
0045BD                     B   155    s_getblock
                           B   156    
                           B   157    ; carry set on return if timed out
                           B   158    
0045BD AF                  B   159    				xor a
0045BE 32 5E 5F 00         B   160    				ld (serial_transfer_started),a	0045C2 E5                  B   161    				push hl							0045C3 D5                  B   162    				push de
0045C4 C5                  B   163    				push bc
0045C5 21 96 66 00         B   164    				ld hl,sector_buffer				0045C9 0600                B   165    				ld b,0
0045CB D9                  B   166    				exx
0045CC 21FFFF00            B   167    				ld hl,0ffffh					0045D0 D9                  B   168    				exx
0045D1 CD F2 3B 00         B   169    s_lgb			call receive_serial_byte
0045D5 20 38               B   170    				jr nz,s_gberr					0045D7 F5                  B   171    				push af
0045D8 3E01                B   172    				ld a,1
0045DA 32 5E 5F 00         B   173    				ld (serial_transfer_started),a
0045DE F1                  B   174    				pop af
0045DF 77                  B   175    				ld (hl),a
0045E0 D9                  B   176    				exx
0045E1 AC                  B   177    				xor h							0045E2 67                  B   178    				ld h,a			
0045E3 0608                B   179    				ld b,8
0045E5 4029                B   180    rxcrcbyte		add.sis hl,hl					0045E7 30 08               B   181    				jr nc,rxcrcnext
0045E9 7C                  B   182    				ld a,h
0045EA EE10                B   183    				xor 10h
0045EC 67                  B   184    				ld h,a
0045ED 7D                  B   185    				ld a,l
0045EE EE21                B   186    				xor 21h
0045F0 6F                  B   187    				ld l,a
0045F1 10 F2               B   188    rxcrcnext		djnz rxcrcbyte
0045F3 D9                  B   189    				exx
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 182


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
0045F4 23                  B   190    				inc hl
0045F5 10 DA               B   191    				djnz s_lgb
0045F7 D9                  B   192    				exx								                           B   193    			
0045F8 CD F2 3B 00         B   194    				call receive_serial_byte		0045FC 20 11               B   195    				jr nz,s_gberr
0045FE 4F                  B   196    				ld c,a
0045FF CD F2 3B 00         B   197    				call receive_serial_byte
004603 20 0A               B   198    				jr nz,s_gberr		
004605 47                  B   199    				ld b,a
                           B   200    				
004606 AF                  B   201    				xor a							004607 52ED42              B   202    				sbc.s hl,bc						00460A 28 03               B   203    				jr z,s_gberr
                           B   204    			
00460C 3E86                B   205    				ld a,86h						00460E B7                  B   206    				or a							00460F C1                  B   207    s_gberr			pop bc
004610 D1                  B   208    				pop de
004611 E1                  B   209    				pop hl
004612 C9                  B   210    				ret
                           B   211    				
                           B   212    ;----------------------------------------------
                           B   213    
004613 C5                  B   214    s_goodack		push bc
004614 014F4B00            B   215    				ld bc,04b4fh					004618 79                  B   216    ackbytes		ld a,c
004619 CD 2D 3C 00         B   217    				call send_serial_byte
00461D 78                  B   218    				ld a,b
00461E CD 2D 3C 00         B   219    				call send_serial_byte
004622 C1                  B   220    				pop bc
004623 C9                  B   221    				ret
                           B   222    
004624 C5                  B   223    s_badack		push bc
004625 01585800            B   224    				ld bc,05858h					004629 18 ED               B   225    				jr ackbytes
                           B   226    
00462B C5                  B   227    s_holdack		push bc
00462C 01575700            B   228    				ld bc,05757h					004630 18 E6               B   229    				jr ackbytes
                           B   230    				
                           B   231    ;==============================================
                           B   232    
                           B   233    ; .-----------.
                           B   234    ; ! Send file !
                           B   235    ; '-----------'
                           B   236    
                           B   237    ; Before calling set:-
                           B   238    
                           B   239    ;  xHL   = filename
                           B   240    ;  xDE   = length of file
                           B   241    ;  xIX   = Start address [23:0]
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 183


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
                           B   242    
                           B   243    ; On return, if zero flag is set, all OK. Else:
                           B   244    ; $81 = Save length is zero
                           B   245    ; $84 = memory address out of range
                           B   246    ; $85 = comms error
                           B   247    
                           B   248    
004632                     B   249    serial_send_file
                           B   250    			
004632 3E01                B   251    				ld a,1							004634 32 3D 5F 00         B   252    				ld (serial_timeout),a
                           B   253    			
004638 DD22 21 5F 00       B   254    				ld (serial_ez80_address),ix
00463D ED53 4E 5F 00       B   255    				ld (serial_fileheader+10h),de	004642 E5                  B   256    				push hl
004643 21000000            B   257    				ld hl,0
004647 AF                  B   258    				xor a
004648 ED5A                B   259    				adc hl,de
00464A 20 05               B   260    				jr nz,s_flok
00464C E1                  B   261    				pop hl
00464D 3E81                B   262    				ld a,081h						00464F B7                  B   263    				or a							004650 C9                  B   264    				ret
                           B   265    			
004651 21 3E 5F 00         B   266    s_flok			ld hl,serial_fileheader			004655 01100000            B   267    				ld bc,16
004659 AF                  B   268    				xor a
00465A CD 56 15 00         B   269    				call os_bchl_memfill
00465E E1                  B   270    				pop hl							00465F 11 3E 5F 00         B   271    				ld de,serial_fileheader
004663 0610                B   272    				ld b,16
004665 CD 02 12 00         B   273    				call os_copy_ascii_run
                           B   274    				
004669 21 52 5F 00         B   275    				ld hl,serial_header_id			00466D 11 52 5F 00         B   276    				ld de,serial_fileheader+014h
004671 010C0000            B   277    				ld bc,12		
004675 EDB0                B   278    				ldir
                           B   279    			
004677 DD21 3E 5F 00       B   280    				ld ix,serial_fileheader			00467C 11200000            B   281    				ld de,32
004680 CD B6 46 00         B   282    				call s_makeblock			
004684 C0                  B   283    				ret nz
004685 CD EE 46 00         B   284    				call s_sendblock
004689 C0                  B   285    				ret nz
00468A CD 1B 47 00         B   286    				call s_waitack					00468E C0                  B   287    				ret nz							                           B   288    				
00468F DD2A 21 5F 00       B   289    				ld ix,(serial_ez80_address)
004694 ED5B 4E 5F 00       B   290    				ld de,(serial_fileheader+16)	004699 CD B6 46 00         B   291    s_sbloop		call s_makeblock				00469D 38 16               B   292    				jr c,s_rerr
00469F CD EE 46 00         B   293    				call s_sendblock				Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 184


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
0046A3 38 10               B   294    				jr c,s_rerr	
0046A5 CD 1B 47 00         B   295    				call s_waitack					0046A9 38 0A               B   296    				jr c,s_rerr
0046AB 21000000            B   297    				ld hl,0
0046AF AF                  B   298    				xor a
0046B0 ED5A                B   299    				adc hl,de
0046B2 20 E5               B   300    				jr nz,s_sbloop					0046B4 AF                  B   301    				xor a							0046B5 C9                  B   302    s_rerr			ret
                           B   303    
                           B   304    ;----------------------------------------------
                           B   305    
0046B6                     B   306    s_makeblock
                           B   307    
                           B   308    ; set xIX = src addr
                           B   309    ; xDE = byte count
                           B   310    ; a=0 on return if all ok	
                           B   311    
0046B6 21 96 66 00         B   312    				ld hl,sector_buffer				0046BA 01000100            B   313    				ld bc,256						0046BE AF                  B   314    				xor a							0046BF CD 56 15 00         B   315    				call os_bchl_memfill			                           B   316    				
0046C3 0600                B   317    				ld b,0							0046C5 FD21 96 66 00       B   318    				ld iy,sector_buffer	
0046CA DD7E00              B   319    s_sloop			ld a,(ix)
0046CD FD7700              B   320    				ld (iy),a
0046D0 1B                  B   321    				dec de							0046D1 21000000            B   322    				ld hl,0
0046D5 AF                  B   323    				xor a
0046D6 ED5A                B   324    				adc hl,de
0046D8 28 12               B   325    				jr z,s_mbend	
0046DA FD23                B   326    				inc iy							0046DC C5                  B   327    				push bc
0046DD 01010000            B   328    				ld bc,1
0046E1 DD09                B   329    				add ix,bc						0046E3 C1                  B   330    				pop bc							0046E4 20 04               B   331    				jr nz,s_sbok
0046E6 3E84                B   332    				ld a,84h						0046E8 B7                  B   333    				or a
0046E9 C9                  B   334    				ret
0046EA 10 DE               B   335    s_sbok			djnz s_sloop
0046EC AF                  B   336    s_mbend			xor a
0046ED C9                  B   337    				ret
                           B   338    
                           B   339    
                           B   340    
0046EE                     B   341    s_sendblock
                           B   342    
0046EE E5                  B   343    				push hl
0046EF D5                  B   344    				push de							0046F0 C5                  B   345    				push bc				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 185


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
0046F1 21 96 66 00         B   346    				ld hl,sector_buffer			
0046F5 1E00                B   347    				ld e,0
0046F7 7E                  B   348    s_sblklp		ld a,(hl)
0046F8 CD 2D 3C 00         B   349    				call send_serial_byte
0046FC 23                  B   350    				inc hl
0046FD 1D                  B   351    				dec e
0046FE 20 F7               B   352    				jr nz,s_sblklp
004700 11 96 66 00         B   353    				ld de,sector_buffer
004704 01000000            B   354    				ld bc,0
004708 CD 26 15 00         B   355    				call crc_checksum
00470C 7D                  B   356    				ld a,l
00470D CD 2D 3C 00         B   357    				call send_serial_byte
004711 7C                  B   358    				ld a,h
004712 CD 2D 3C 00         B   359    				call send_serial_byte
004716 AF                  B   360    				xor a
004717 C1                  B   361    s_popall		pop bc
004718 D1                  B   362    				pop de
004719 E1                  B   363    				pop hl
00471A C9                  B   364    				ret
                           B   365    	
                           B   366    
00471B                     B   367    s_waitack
00471B E5                  B   368    				push hl
00471C D5                  B   369    				push de
00471D C5                  B   370    				push bc
00471E CD F2 3B 00         B   371    				call receive_serial_byte		004722 20 F3               B   372    				jr nz,s_popall
004724 47                  B   373    				ld b,a
004725 CD F2 3B 00         B   374    				call receive_serial_byte
004729 20 EC               B   375    				jr nz,s_popall
00472B 4F                  B   376    				ld c,a
00472C 264F                B   377    				ld h,'O'
00472E 2E4B                B   378    				ld l,'K'
004730 AF                  B   379    				xor a
004731 52ED42              B   380    				sbc.s hl,bc						004734 28 E1               B   381    				jr z,s_popall					                           B   382    			
004736 3E85                B   383    				ld a,085h						004738 B7                  B   384    				or a
004739 18 DC               B   385    				jr s_popall
                           B   386    
                           B   387    	
                           B   388    ;----------------------------------------------
                           B     0    	include		'prose_fat16_code.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; eZ80 FAT16 File System code for PROSE by Phil
                           B     3    ;----------------------------------------------
                           B     4    ;
                           B     5    ; Changes:
                           B     6    ;
                           B     7    ; 0.05 - Fixed format command
                           B     8    ; 0.04 - File system error codes are now in the
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 186


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B     9    ; 0.03 - ADL mode
                           B    10    ; 0.02 - removed references to banks, added 24 
                           B    11    ; 0.01 - first version based on FLOS routines v
                           B    12    ;
                           B    13    ; Known limitations:
                           B    14    ; ------------------
                           B    15    ; If a disk full error is returned during a fil
                           B    16    ; Allows a file to be created in root even if t
                           B    17    ;        
                           B    18    ;----------------------------------------------
                           B    19    ;
                           B    20    ; All routines return carry clear / zero flag s
                           B    21    ;
                           B    22    ; Carry set = hardware error, A = error byte fr
                           B    23    ;
                           B    24    ; Carry clear, A = 	00 $00 - Command completed 
                           B    25    ;
                           B    26    ;					$c1  - Disk full
                           B    27    ;					$c2  - file not found
                           B    28    ;             	    $c3  - (root) dir table is 
                           B    29    ;					$c4  - directory requested 
                           B    30    ;             	    $c5  - cant delete dir, it 
                           B    31    ;					$c6  - not a file
                           B    32    ;					$c7  - file length is zero
                           B    33    ;              	    $c8  - out of memory
                           B    34    ;					$c9  - filename already exi
                           B    35    ;					$ca  - already at root dire
                           B    36    ;                  	$cb  - directory not found
                           B    37    ;					$cc  - requested bytes beyo
                           B    38    ;					$cd  - invalid filename
                           B    39    ;					$ce  - unknown/incorrect di
                           B    40    ;					$cf  - invalid volume
                           B    41    ;                 	$d0  - device not present	                           B    42    ;					$d1  - directory not found	                           B    43    ;                 	$d2  - end of directory lis
                           B    44    ;                 	$d3  - device does not use 
                           B    45    ;                  	$d4  - cant find volume lab
                           B    46    ;                   $d5  - sector out of range
                           B    47    
                           B    48    ;----------------------------------------------
                           B    49    ; Main routines called by external programs
                           B    50    ;----------------------------------------------
                           B    51    
00473B                     B    52    fs_format_device_command
                           B    53    
                           B    54    ; Creates a single partition (truncated to 2GB)
                           B    55    
                           B    56    
00473B 3A 6F 5F 00         B    57    				ld a,(device_count)				00473F 47                  B    58    				ld b,a							004740 DD21 1F 60 00       B    59    				ld ix,host_device_hardware_info
004745 3A 6E 5F 00         B    60    fdevinfo		ld a,(current_driver)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 187


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004749 DDBE00              B    61    				cp (ix)
00474C 28 09               B    62    				jr z,got_dev_info
00474E ED3220              B    63    				lea ix,ix+32
004751 10 F2               B    64    				djnz fdevinfo
004753 AF                  B    65    				xor a
004754 3ED0                B    66    				ld a,0d0h						004756 C9                  B    67    				ret	
                           B    68    	
004757 CD EA 51 00         B    69    got_dev_info	call fs_clear_sector_buffer		00475B 11000000            B    70    				ld de,0							00475F CD 4F 48 00         B    71    form_ws			call set_lba_and_write_sector
004763 D8                  B    72    				ret c
004764 13                  B    73    				inc de
004765 7A                  B    74    				ld a,d
004766 FE03                B    75    				cp 3
004768 20 F5               B    76    				jr nz,form_ws
                           B    77    	
00476A 21 98 54 00         B    78    				ld hl,bootsector_stub			00476E 11 96 66 00         B    79    				ld de,sector_buffer				004772 013F0000            B    80    				ld bc,03fh
004776 EDB0                B    81    				ldir
                           B    82    	
004778 DD7E04              B    83    				ld a,(ix+4)						00477B B7                  B    84    				or a
00477C 20 0C               B    85    				jr nz,above_2gb
00477E 2100FF3F            B    86    				ld hl,3fff00h					004782 DD1701              B    87    				ld de,(ix+1)					004785 AF                  B    88    				xor a			
004786 ED52                B    89    				sbc hl,de						004788 30 08               B    90    				jr nc,lessthan2gb				00478A 3E40                B    91    above_2gb		ld a,40h						00478C 1100FF3F            B    92    				ld de,3fff00h					004790 18 11               B    93    				jr spcvalok
                           B    94    
004792 DD4E03              B    95    lessthan2gb		ld c,(ix+3)						004795 0C                  B    96    				inc c							004796 3E01                B    97    spc_loop		ld a,1							004798 B9                  B    98    spc_comp		cp c							004799 28 08               B    99    				jr z,spcvalok
00479B 07                  B   100    				rlca
00479C FE80                B   101    				cp 080h							00479E 20 F8               B   102    				jr nz,spc_comp
0047A0 0C                  B   103    				inc c			
0047A1 18 F3               B   104    				jr spc_loop						                           B   105    							
0047A3 DD21 96 66 00       B   106    spcvalok		ld ix,sector_buffer
0047A8 DD770D              B   107    				ld (ix+0dh),a					                           B   108    				
0047AB CD 73 15 00         B   109    				call os_get_xde_msb				0047AF 4F                  B   110    				ld c,a							0047B0 B7                  B   111    				or a							0047B1 20 08               B   112    				jr nz,ts_dword					Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 188


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
0047B3 DD7313              B   113    				ld (ix+13h),e					0047B6 DD7214              B   114    				ld (ix+14h),d
0047B9 18 07               B   115    				jr ts_done
0047BB DD1F20              B   116    ts_dword		ld (ix+20h),de					0047BE DD362300            B   117    				ld (ix+23h),0
                           B   118    
0047C2 EB                  B   119    ts_done			ex de,hl						0047C3 11000000            B   120    				ld de,0						
0047C7 DD560D              B   121    				ld d,(ix+0dh)					0047CA 01000000            B   122    				ld bc,0							0047CE AF                  B   123    div_tscls		xor a							0047CF ED52                B   124    				sbc hl,de
0047D1 28 05               B   125    				jr z,gotfats
0047D3 38 03               B   126    				jr c,gotfats	
0047D5 03                  B   127    				inc bc
0047D6 18 F6               B   128    				jr div_tscls
0047D8 03                  B   129    gotfats			inc bc
0047D9 DD7116              B   130    				ld (ix+16h),c					0047DC DD7017              B   131    				ld (ix+17h),b
0047DF ED43 E8 54 00       B   132    				ld (fs_sectors_per_fat),bc
                           B   133    				
0047E4 010055AA            B   134    				ld bc,0aa5500h
0047E8 ED43 93 68 00       B   135    				ld (sector_buffer+1fdh),bc		0047ED 11000000            B   136    				ld de,0
0047F1 CD 4F 48 00         B   137    				call set_lba_and_write_sector	0047F5 D8                  B   138    				ret c
                           B   139    				
0047F6 21000000            B   140    				ld hl,0
0047FA DD6E0E              B   141    				ld l,(ix+0eh)					0047FD DD660F              B   142    				ld h,(ix+0fh)
004800 19                  B   143    				add hl,de
004801 EB                  B   144    				ex de,hl						                           B   145    				
004802 CD EA 51 00         B   146    				call fs_clear_sector_buffer		004806 DD3600FF            B   147    				ld (ix+0),0ffh
00480A DD3601F8            B   148    				ld (ix+1),0f8h
00480E DD3602FF            B   149    				ld (ix+2),0ffh
004812 DD3603FF            B   150    				ld (ix+3),0ffh
004816 CD 4F 48 00         B   151    				call set_lba_and_write_sector	00481A D8                  B   152    				ret c
                           B   153    
00481B 2A E8 54 00         B   154    				ld hl,(fs_sectors_per_fat)	
00481F 19                  B   155    				add hl,de
004820 EB                  B   156    				ex de,hl
004821 CD 4F 48 00         B   157    				call set_lba_and_write_sector 	004825 D8                  B   158    				ret c	
                           B   159    				
004826 D5                  B   160    				push de							004827 CD EA 51 00         B   161    				call fs_clear_sector_buffer
00482B 21 EE 54 00         B   162    				ld hl,fs_sought_filename
00482F 11 96 66 00         B   163    				ld de,sector_buffer
004833 010B0000            B   164    				ld bc,11
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 189


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004837 EDB0                B   165    				ldir							004839 D1                  B   166    				pop de							00483A DD360B08            B   167    				ld (ix+0bh),8					00483E DD361821            B   168    				ld (ix+018h),021h				004842 2A E8 54 00         B   169    				ld hl,(fs_sectors_per_fat)		004846 19                  B   170    				add hl,de
004847 EB                  B   171    				ex de,hl
004848 CD 4F 48 00         B   172    				call set_lba_and_write_sector	00484C D8                  B   173    				ret c	
                           B   174    			
00484D AF                  B   175    				xor a							00484E C9                  B   176    				ret
                           B   177    	
                           B   178    
                           B   179    
00484F                     B   180    set_lba_and_write_sector
                           B   181    
00484F DDE5                B   182    				push ix
004851 DD21 44 61 00       B   183    				ld ix,sector_lba0				004856 DD1F00              B   184    				ld (ix),de						004859 DD360300            B   185    				ld (ix+3),0
00485D DDE1                B   186    				pop ix
00485F CD 7C 54 00         B   187    				call fs_write_sector
004863 C9                  B   188    				ret
                           B   189    				
                           B   190    				
                           B   191    ;----------------------------------------------
                           B   192    
004864                     B   193    fs_get_partition_info
                           B   194    
                           B   195    ; Set A to partition: $00 to $03
                           B   196    ; On return: If A = $00, xHL = Address of reque
                           B   197    ;            If A = $25, A partition table is n
                           B   198    ;            If A = $13, Disk format is bad 
                           B   199    ;            If carry flag set, there was a har
                           B   200    
                           B   201    
004864 32 A2 60 00         B   202    				ld (partition_temp),a
                           B   203    				
004868 21000000            B   204    				ld hl,0							00486C 22 44 61 00         B   205    				ld (sector_lba0),hl
004870 7D                  B   206    				ld a,l
004871 32 47 61 00         B   207    				ld (sector_lba3),a
004875 CD 64 54 00         B   208    				call fs_read_sector
004879 D8                  B   209    				ret c
                           B   210    			
00487A CD B5 48 00         B   211    				call fs_check_fat_sig			00487E 20 42               B   212    				jr nz,formbad
                           B   213    			
004880 CD A6 48 00         B   214    				call check_fat16_id				004884 28 1C               B   215    				jr z,at_pbs						                           B   216    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 190


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004886 3A 58 68 00         B   217    				ld a,(sector_buffer+01c2h)		00488A E604                B   218    				and 4							00488C 28 34               B   219    				jr z,formbad	
00488E 11000000            B   220    				ld de,0
004892 3A A2 60 00         B   221    				ld a,(partition_temp)
004896 5F                  B   222    				ld e,a
004897 1610                B   223    				ld d,16
004899 ED5C                B   224    				mlt de
00489B 21 54 68 00         B   225    				ld hl,sector_buffer+01beh
00489F 19                  B   226    				add hl,de						0048A0 AF                  B   227    				xor a
0048A1 C9                  B   228    				ret
                           B   229    					
0048A2 AF                  B   230    at_pbs			xor a
0048A3 3ED3                B   231    				ld a,0d3h						0048A5 C9                  B   232    				ret
                           B   233    
                           B   234    
                           B   235    
0048A6                     B   236    check_fat16_id
                           B   237    		
0048A6 21 CC 66 00         B   238    				ld hl,sector_buffer+036h		0048AA 11 86 59 00         B   239    				ld de,fat16_txt			
0048AE 0605                B   240    				ld b,5
0048B0 CD E3 11 00         B   241    				call os_compare_strings
0048B4 C9                  B   242    				ret
                           B   243    				
                           B   244    ;----------------------------------------------
                           B   245    
                           B   246    
0048B5                     B   247    fs_check_fat_sig
                           B   248    
0048B5 2A 94 68 00         B   249    				ld hl,(sector_buffer+01feh)		0048B9 1155AA00            B   250    				ld de,0aa55h
0048BD AF                  B   251    				xor a
0048BE 52ED52              B   252    				sbc.s hl,de						0048C1 C9                  B   253    				ret
                           B   254    			
                           B   255    			
                           B   256    			
0048C2 AF                  B   257    formbad			xor a
0048C3 3ECE                B   258    				ld a,0ceh						0048C5 C9                  B   259    				ret
                           B   260    
                           B   261    ;----------------------------------------------
                           B   262    
                           B   263    
0048C6                     B   264    fs_check_disk_format
                           B   265    
                           B   266    ; ensures disk is FAT16, sets up constants..
                           B   267    	
0048C6 C5                  B   268    				push bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 191


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
0048C7 D5                  B   269    				push de
0048C8 E5                  B   270    				push hl
0048C9 CD D1 48 00         B   271    				call go_checkf
0048CD E1                  B   272    				pop hl
0048CE D1                  B   273    				pop de
0048CF C1                  B   274    				pop bc
0048D0 C9                  B   275    				ret
                           B   276    				
0048D1 CD 7F 1A 00         B   277    go_checkf		call fs_calc_volume_offset	
0048D5 21 9F 5F 00         B   278    				ld hl,volume_mount_list
0048D9 19                  B   279    				add hl,de
0048DA 7E                  B   280    				ld a,(hl)
0048DB B7                  B   281    				or a							0048DC 20 04               B   282    				jr nz,fs_volpre
0048DE AF                  B   283    				xor a
0048DF 3ECF                B   284    				ld a,cfh						0048E1 C9                  B   285    				ret
                           B   286    			
0048E2 11080000            B   287    fs_volpre		ld de,8							0048E6 19                  B   288    				add hl,de
0048E7 11 44 61 00         B   289    				ld de,sector_lba0
0048EB 01040000            B   290    				ld bc,4
0048EF EDB0                B   291    				ldir
0048F1 CD 64 54 00         B   292    				call fs_read_sector
0048F5 D8                  B   293    				ret c	
                           B   294    				
0048F6 CD B5 48 00         B   295    				call fs_check_fat_sig			0048FA 20 C6               B   296    				jr nz,formbad		
                           B   297    			
0048FC CD A6 48 00         B   298    				call check_fat16_id				004900 20 C0               B   299    				jr nz,formbad
                           B   300    			
004902 DD21 96 66 00       B   301    				ld ix,sector_buffer
004907 DD270B              B   302    				ld hl,(ix+0bh)					00490A 11000200            B   303    				ld de,512						00490E AF                  B   304    				xor a
00490F 52ED52              B   305    				sbc.s hl,de						004912 20 AE               B   306    				jr nz,formbad
                           B   307    			
004914 DD7E0D              B   308    				ld a,(ix+0dh)					004917 32 D7 54 00         B   309    				ld (fs_cluster_size),a
00491B CB27                B   310    				sla a
00491D 32 D9 54 00         B   311    				ld (fs_bytes_per_cluster+1),a
                           B   312    							
004921 21000000            B   313    				ld hl,0
004925 DD6E0E              B   314    				ld l,(ix+0eh)					004928 DD660F              B   315    				ld h,(ix+0fh)
00492B 22 DB 54 00         B   316    				ld (fs_fat1_position),hl		00492F 11000000            B   317    				ld de,0
004933 DD5E16              B   318    				ld e,(ix+16h)					004936 DD5617              B   319    				ld d,(ix+17h)
004939 ED53 E8 54 00       B   320    				ld (fs_sectors_per_fat),de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 192


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
00493E 19                  B   321    				add hl,de
00493F 22 DE 54 00         B   322    				ld (fs_fat2_position),hl		004943 19                  B   323    				add hl,de
004944 22 E1 54 00         B   324    				ld (fs_root_dir_position),hl 	004948 EB                  B   325    				ex de,hl
004949 DD6E11              B   326    				ld l,(ix+11h)					00494C DD6612              B   327    				ld h,(ix+12h)					00494F 7C                  B   328    				ld a,h
004950 B5                  B   329    				or l
004951 CA C2 48 00         B   330    				jr z,formbad					004955 29                  B   331    				add hl,hl						004956 29                  B   332    				add hl,hl						004957 29                  B   333    				add hl,hl
004958 29                  B   334    				add hl,hl
004959 EB                  B   335    				ex de,hl
00495A 7A                  B   336    				ld a,d
00495B 32 E7 54 00         B   337    				ld (fs_root_dir_sectors),a		00495F 01000000            B   338    				ld bc,0
004963 4A                  B   339    				ld c,d
004964 09                  B   340    				add hl,bc				
004965 22 E4 54 00         B   341    				ld (fs_data_area),hl			                           B   342    												004969 21000000            B   343    				ld hl,0
00496D 01000000            B   344    				ld bc,0
004971 DD4E22              B   345    				ld c,(ix+022h)					004974 DD4623              B   346    				ld b,(ix+023h)
004977 DD6E13              B   347    				ld l,(ix+013h)					00497A DD6614              B   348    				ld h,(ix+014h)
00497D 7C                  B   349    				ld a,h							00497E B5                  B   350    				or l
00497F 20 06               B   351    				jr nz,got_tsfbs
004981 DD6E20              B   352    				ld l,(ix+020h)					004984 DD6621              B   353    				ld h,(ix+021h)
004987 ED5B E4 54 00       B   354    got_tsfbs 		ld de,(fs_data_area)
00498C AF                  B   355    				xor a							00498D 52ED52              B   356    				sbc.s hl,de						004990 30 02               B   357    				jr nc,nomxcb
004992 520B                B   358    				dec.s bc
004994 3A D7 54 00         B   359    nomxcb			ld a,(fs_cluster_size)
004998 CB3F                B   360    fmaxcl			srl a
00499A 28 08               B   361    				jr z,got_cmaxc					00499C CB39                B   362    				srl c				
00499E CB1C                B   363    				rr h
0049A0 CB1D                B   364    				rr l
0049A2 18 F4               B   365    				jr fmaxcl
0049A4 E5                  B   366    got_cmaxc		push hl							0049A5 11F0FF00            B   367    				ld de,0fff0h
0049A9 AF                  B   368    				xor a
0049AA 52ED52              B   369    				sbc.s hl,de						0049AD 38 02               B   370    				jr c,cmaxok
0049AF E1                  B   371    				pop hl
0049B0 D5                  B   372    				push de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 193


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
0049B1 E1                  B   373    cmaxok			pop hl
0049B2 22 EB 54 00         B   374    				ld (fs_max_data_clusters),hl
0049B6 AF                  B   375    				xor a
0049B7 C9                  B   376    				ret				
                           B   377    
                           B   378    ;----------------------------------------------
                           B   379    
0049B8                     B   380    fs_calc_free_space
                           B   381    
                           B   382    ;returns free space in KB in HL:DE
                           B   383    
0049B8 ED5B EB 54 00       B   384    				ld de,(fs_max_data_clusters)
0049BD 13                  B   385    				inc de
0049BE 13                  B   386    				inc de							0049BF D5                  B   387    				push de
0049C0 DDE1                B   388    				pop ix
                           B   389    			
0049C2 AF                  B   390    				xor a
0049C3 32 30 55 00         B   391    cfs_lp2			ld (fs_working_sector),a
0049C7 2A DB 54 00         B   392    				ld hl,(fs_fat1_position)
0049CB CD 3A 54 00         B   393    				call set_abs_lba_and_read_secto
0049CF D8                  B   394    				ret c
                           B   395    				
0049D0 21 96 66 00         B   396    				ld hl,sector_buffer
0049D4 0600                B   397    				ld b,0
0049D6 AF                  B   398    cfs_lp1			xor a
0049D7 B6                  B   399    				or a,(hl)						0049D8 23                  B   400    				inc hl							0049D9 20 03               B   401    				jr nz,cfs_ciu					0049DB B6                  B   402    				or a,(hl)
0049DC 28 02               B   403    				jr z,cfs_ddcc
0049DE DD2B                B   404    cfs_ciu			dec ix							0049E0 23                  B   405    cfs_ddcc		inc hl
0049E1 1B                  B   406    				dec de
0049E2 7A                  B   407    				ld a,d
0049E3 B3                  B   408    				or e
0049E4 28 09               B   409    				jr z,cfs_ok						0049E6 10 EE               B   410    				djnz cfs_lp1
0049E8 3A 30 55 00         B   411    				ld a,(fs_working_sector)
0049EC 3C                  B   412    				inc a
0049ED 18 D4               B   413    				jr cfs_lp2
                           B   414    				
0049EF 3A D7 54 00         B   415    cfs_ok			ld a,(fs_cluster_size)			0049F3 CB3F                B   416    cltoslp			srl a
0049F5 28 04               B   417    				jr z,powdone
0049F7 DD29                B   418    				add ix,ix
0049F9 18 F8               B   419    				jr cltoslp	
0049FB FD21 60 61 00       B   420    powdone			ld iy,xrr_temp
004A00 FD3E00              B   421    				ld (iy),ix						004A03 FDCB023E            B   422    				srl (iy+2)
004A07 FDCB011E            B   423    				rr (iy+1)
004A0B FDCB001E            B   424    				rr (iy+0)						Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 194


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004A0F FD1700              B   425    				ld de,(iy)						004A12 AF                  B   426    				xor a
004A13 C9                  B   427    				ret
                           B   428    
                           B   429    ;----------------------------------------------
                           B   430    
004A14                     B   431    fs_change_dir_command
                           B   432    
                           B   433    ; INPUT: HL = directory name ascii (zero/space 
                           B   434    			
                           B   435    			
004A14 CD FC 51 00         B   436    				call fs_find_filename			004A18 D8                  B   437    				ret c							004A19 FEC2                B   438    				cp 0c2h							004A1B 20 04               B   439    				jr nz,founddir
004A1D AF                  B   440    				xor a							004A1E 3ED1                B   441    				ld a,0d1h						004A20 C9                  B   442    				ret
004A21 AF                  B   443    founddir		xor a							004A22 3E04                B   444    				ld a,04h						004A24 DDCB0B66            B   445    				bit 4,(ix+0bh)
004A28 C8                  B   446    				ret z
004A29 11000000            B   447    				ld de,0
004A2D DD5E1A              B   448    				ld e,(ix+01ah)
004A30 DD561B              B   449    				ld d,(ix+01bh)					004A33 CD 51 1A 00         B   450    				call fs_update_dir_cluster
004A37 AF                  B   451    				xor a
004A38 C9                  B   452    				ret
                           B   453    
                           B   454    
                           B   455    ;----------------------------------------------
                           B   456    	
                           B   457    	
004A39                     B   458    fs_goto_root_dir_command
                           B   459    
004A39 D5                  B   460    				push de
004A3A 11000000            B   461    				ld de,0
004A3E CD 51 1A 00         B   462    				call fs_update_dir_cluster
004A42 D1                  B   463    				pop de
004A43 AF                  B   464    				xor a
004A44 C9                  B   465    				ret
                           B   466    
                           B   467    ;----------------------------------------------
                           B   468    	
                           B   469    	
004A45                     B   470    fs_parent_dir_command
                           B   471    
004A45 CD 45 1A 00         B   472    				call fs_get_dir_cluster
004A49 7A                  B   473    				ld a,d
004A4A B3                  B   474    				or e
004A4B 20 03               B   475    				jr nz,pdnaroot
004A4D 3ECA                B   476    				ld a,0cah						Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 195


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004A4F C9                  B   477    				ret
004A50 212E2E20            B   478    pdnaroot		ld hl,0202e2eh					004A54 22 EE 54 00         B   479    				ld (fs_sought_filename),hl		004A58 21 F1 54 00         B   480    				ld hl,fs_sought_filename+3		004A5C 3E20                B   481    				ld a,32
004A5E 01080000            B   482    				ld bc,8
004A62 CD 56 15 00         B   483    				call os_bchl_memfill
004A66 18 AC               B   484    				jr fs_change_dir_command
                           B   485    				
                           B   486    		
                           B   487    ;----------------------------------------------
                           B   488    		
004A68                     B   489    fs_open_file_command
                           B   490    
                           B   491    ; INPUT: xHL = directory name ascii (zero/space
                           B   492    ; OUTPUT: C:xDE  = File length
                           B   493    ;            HL  = Start cluster of file
                           B   494    ;            Internal vars (file pointer reset 
                           B   495    
                           B   496    			
004A68 CD FC 51 00         B   497    				call fs_find_filename			004A6C D8                  B   498    				ret c							004A6D C0                  B   499    				ret nz							                           B   500    								
004A6E 3EC6                B   501    				ld a,0c6h						004A70 DDCB0B66            B   502    				bit 4,(ix+0bh)
004A74 C0                  B   503    				ret nz
                           B   504    
004A75 AF                  B   505    				xor a
004A76 32 44 55 00         B   506    				ld (fs_filepointer_valid),a		004A7A 21000000            B   507    				ld hl,0
004A7E 22 12 55 00         B   508    				ld (fs_file_pointer),hl			004A82 32 15 55 00         B   509    				ld (fs_file_pointer+3),a		                           B   510    				
004A86 DD171C              B   511    				ld de,(ix+01ch)
004A89 D5                  B   512    				push de
004A8A E1                  B   513    				pop hl
004A8B DD4E1F              B   514    				ld c,(ix+01fh)					004A8E ED53 16 55 00       B   515    				ld (fs_file_length),de			004A93 79                  B   516    				ld a,c
004A94 32 19 55 00         B   517    				ld (fs_file_length+3),a			004A98 B7                  B   518    				or a							004A99 28 04               B   519    				jr z,fs_dflsm					004A9B 21FFFFFF            B   520    				ld hl,0ffffffh
004A9F 22 1E 55 00         B   521    fs_dflsm		ld (fs_file_transfer_length),hl
                           B   522    				
004AA3 21000000            B   523    				ld hl,0
004AA7 DD6E1A              B   524    				ld l,(ix+01ah)		
004AAA DD661B              B   525    				ld h,(ix+01bh)
004AAD 22 21 55 00         B   526    				ld (fs_file_start_cluster),hl	004AB1 AF                  B   527    				xor a
004AB2 C9                  B   528    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 196


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B   529    
                           B   530    	
                           B   531    ;----------------------------------------------
                           B   532    
004AB3                     B   533    fs_read_data_command		
                           B   534    
                           B   535    ;*******************************************
                           B   536    ;*** 'fs_open_file' must be called first ***
                           B   537    ;*******************************************
                           B   538    		
004AB3 2A 1E 55 00         B   539    fs_load			ld hl,(fs_file_transfer_length)
004AB7 11000000            B   540    				ld de,0
004ABB AF                  B   541    				xor a
004ABC ED5A                B   542    				adc hl,de
004ABE 20 04               B   543    				jr nz,fs_btrok
004AC0 AF                  B   544    fs_fliz			xor a							004AC1 3EC7                B   545    				ld a,0c7h						004AC3 C9                  B   546    				ret
                           B   547    			 
004AC4 2A 27 55 00         B   548    fs_btrok		ld hl,(fs_ez80_address)			004AC8 22 2A 55 00         B   549    				ld (fs_ez80_working_address),hl
                           B   550    			
004ACC 2A 16 55 00         B   551    				ld hl,(fs_file_length)			004AD0 ED4B 12 55 00       B   552    				ld bc,(fs_file_pointer)			004AD5 3A 15 55 00         B   553    				ld a,(fs_file_pointer+3)		004AD9 5F                  B   554    				ld e,a
004ADA 3A 19 55 00         B   555    				ld a,(fs_file_length+3)
004ADE B7                  B   556    				or a							004ADF ED42                B   557    				sbc hl,bc
004AE1 9B                  B   558    				sbc a,e
004AE2 38 09               B   559    				jr c,fs_fpbad
004AE4 01000000            B   560    				ld bc,0
004AE8 AF                  B   561    				xor a
004AE9 ED4A                B   562    				adc hl,bc
004AEB 20 04               B   563    				jr nz,fs_fpok
004AED AF                  B   564    fs_fpbad		xor a
004AEE 3ECC                B   565    				ld a,0cch						004AF0 C9                  B   566    				ret
                           B   567    			
                           B   568    	
004AF1 3A 44 55 00         B   569    fs_fpok			ld a,(fs_filepointer_valid)		004AF5 B7                  B   570    				or a							004AF6 28 1B               B   571    				jr z,seek_strt
                           B   572    			
004AF8 ED5B 2A 55 00       B   573    				ld de,(fs_ez80_working_address)
004AFD ED4B 45 55 00       B   574    				ld bc,(fs_sector_pos_cnt)		004B02 C5                  B   575    				push bc
004B03 ED4B 2D 55 00       B   576    				ld bc,(fs_in_sector_offset)
004B08 21 96 68 00         B   577    				ld hl,sector_buffer+0200h		004B0C AF                  B   578    				xor a
004B0D ED42                B   579    				sbc hl,bc		
004B0F C3 9F 4B 00         B   580    				jr fs_dadok
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 197


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B   581    				
                           B   582    			
004B13 3E01                B   583    seek_strt		ld a,1
004B15 32 44 55 00         B   584    				ld (fs_filepointer_valid),a
004B19 2A 21 55 00         B   585    				ld hl,(fs_file_start_cluster)	004B1D 22 24 55 00         B   586    				ld (fs_file_working_cluster),hl
                           B   587    			
004B21 3A 15 55 00         B   588    				ld a,(fs_file_pointer+3)		004B25 2A 12 55 00         B   589    				ld hl,(fs_file_pointer)			004B29 ED4B D8 54 00       B   590    fs_fpblp		ld bc,(fs_bytes_per_cluster)
004B2E AF                  B   591    				xor a
004B2F ED42                B   592    				sbc hl,bc						004B31 DE00                B   593    				sbc a,0
004B33 38 14               B   594    				jr c,fs_fpgbo
004B35 E5                  B   595    fs_fpgnb		push hl				
004B36 2A 24 55 00         B   596    				ld hl,(fs_file_working_cluster)
004B3A CD 0C 53 00         B   597    				call get_fat_entry_for_cluster
004B3E 30 02               B   598    				jr nc,fs_ghok					004B40 E1                  B   599    				pop hl
004B41 C9                  B   600    				ret
004B42 22 24 55 00         B   601    fs_ghok			ld (fs_file_working_cluster),hl
004B46 E1                  B   602    				pop hl
004B47 18 E0               B   603    				jr fs_fpblp
                           B   604    			
004B49 09                  B   605    fs_fpgbo		add hl,bc						004B4A 4C                  B   606    				ld c,h
004B4B CB39                B   607    				srl c							004B4D 3A D7 54 00         B   608    				ld a,(fs_cluster_size)
004B51 91                  B   609    				sub c
004B52 47                  B   610    				ld b,a							004B53 7C                  B   611    				ld a,h
004B54 E601                B   612    				and 01h
004B56 67                  B   613    				ld h,a
004B57 22 2D 55 00         B   614    				ld (fs_in_sector_offset),hl		                           B   615    				
004B5B 79                  B   616    fs_flns			ld a,c				
004B5C 2A 24 55 00         B   617    				ld hl,(fs_file_working_cluster)
004B60 CD E3 53 00         B   618    				call cluster_and_offset_to_lba
004B64 CD 64 54 00         B   619    				call fs_read_sector				004B68 D8                  B   620    				ret c							                           B   621    			
004B69 C5                  B   622    				push bc							004B6A 11000000            B   623    				ld de,0
004B6E 2A 2D 55 00         B   624    				ld hl,(fs_in_sector_offset)		004B72 5D                  B   625    				ld e,l
004B73 54                  B   626    				ld d,h
004B74 21000200            B   627    				ld hl,512
004B78 AF                  B   628    				xor a
004B79 ED52                B   629    				sbc hl,de						004B7B 44                  B   630    				ld b,h
004B7C 4D                  B   631    				ld c,l							004B7D 21 96 66 00         B   632    				ld hl,sector_buffer				Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 198


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004B81 19                  B   633    				add hl,de						004B82 ED5B 2A 55 00       B   634    				ld de,(fs_ez80_working_address)
004B87 EDA0                B   635    fs_cblp			ldi 							                           B   636    
004B89 7A                  B   637    				ld a,d							004B8A B3                  B   638    				or e
004B8B 20 0C               B   639    				jr nz,fs_edaok
004B8D ED53 2A 55 00       B   640    				ld (fs_ez80_working_address),de
004B92 3A 2C 55 00         B   641    				ld a,(fs_ez80_working_address+2
004B96 B7                  B   642    				or a
004B97 28 43               B   643    				jr z,fs_mem_error
                           B   644    
004B99 CD 6C 53 00         B   645    fs_edaok		call transfer_length_countdown	004B9D 28 30               B   646    				jr z,fs_bdld
004B9F 78                  B   647    fs_dadok		ld a,b							004BA0 B1                  B   648    				or c
004BA1 20 E4               B   649    				jr nz,fs_cblp
                           B   650    			
004BA3 ED43 2D 55 00       B   651    				ld (fs_in_sector_offset),bc		004BA8 ED53 2A 55 00       B   652    				ld (fs_ez80_working_address),de
004BAD C1                  B   653    				pop bc							004BAE 0C                  B   654    				inc c							004BAF 10 AA               B   655    				djnz fs_flns					                           B   656    			
004BB1 2A 24 55 00         B   657    				ld hl,(fs_file_working_cluster)
004BB5 CD 0C 53 00         B   658    				call get_fat_entry_for_cluster	004BB9 D8                  B   659    				ret c							004BBA 22 24 55 00         B   660    				ld (fs_file_working_cluster),hl
004BBE CD B5 50 00         B   661    				call fs_compare_hl_fff8			004BC2 D2 ED 4A 00         B   662    				jp nc,fs_fpbad			
004BC6 0E00                B   663    fs_nfbok		ld c,0							004BC8 3A D7 54 00         B   664    				ld a,(fs_cluster_size)	
004BCC 47                  B   665    				ld b,a							004BCD 18 8C               B   666    				jr fs_flns		
                           B   667    			
004BCF ED43 2D 55 00       B   668    fs_bdld			ld (fs_in_sector_offset),bc		004BD4 C1                  B   669    				pop bc							004BD5 ED43 45 55 00       B   670    				ld (fs_sector_pos_cnt),bc
004BDA AF                  B   671    				xor a							004BDB C9                  B   672    				ret
                           B   673    				
004BDC 3EC8                B   674    fs_mem_error	ld a,0c8h						004BDE C1                  B   675    fs_flerr		pop bc
004BDF B7                  B   676    				or a							004BE0 C9                  B   677    				ret			
                           B   678    			
                           B   679    ;----------------------------------------------
                           B   680    
004BE1                     B   681    fs_make_dir_command		
                           B   682    				
004BE1 CD FC 51 00         B   683    				call fs_find_filename			004BE5 D8                  B   684    				ret c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 199


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004BE6 FEC2                B   685    				cp 0c2h							004BE8 28 04               B   686    				jr z,mdirfnde
004BEA AF                  B   687    				xor a							004BEB 3EC9                B   688    				ld a,0c9h						004BED C9                  B   689    				ret
                           B   690    			
004BEE CD C2 50 00         B   691    mdirfnde		call fs_find_free_cluster		004BF2 D8                  B   692    				ret c							004BF3 C0                  B   693    				ret nz							                           B   694    							
004BF4 2A 34 55 00         B   695    				ld hl,(fs_free_cluster)
004BF8 22 37 55 00         B   696    				ld (fs_new_file_cluster),hl
                           B   697    			
004BFC CD 13 51 00         B   698    				call fs_find_free_dir_entry		004C00 D8                  B   699    				ret c							004C01 C0                  B   700    				ret nz							                           B   701    			
004C02 DDE5                B   702    				push ix							004C04 D1                  B   703    				pop de
004C05 21 EE 54 00         B   704    				ld hl,fs_sought_filename
004C09 010B0000            B   705    				ld bc,11
004C0D EDB0                B   706    				ldir
004C0F AF                  B   707    				xor a							004C10 0615                B   708    				ld b,21
004C12 12                  B   709    clrdiren		ld (de),a
004C13 13                  B   710    				inc de
004C14 10 FC               B   711    				djnz clrdiren
004C16 DD360B10            B   712    				ld (ix+0bh),010h				004C1A DD361821            B   713    				ld (ix+018h),021h				004C1E ED5B 37 55 00       B   714    				ld de,(fs_new_file_cluster)
004C23 DD731A              B   715    				ld (ix+01ah),e					004C26 DD721B              B   716    				ld (ix+01bh),d
004C29 CD 7C 54 00         B   717    				call fs_write_sector			004C2D D8                  B   718    				ret c							                           B   719    				
004C2E CD EA 51 00         B   720    				call fs_clear_sector_buffer
004C32 DD21 96 66 00       B   721    				ld ix,sector_buffer				004C37 DD36002E            B   722    				ld (ix+00h),02eh				004C3B DD360120            B   723    				ld (ix+01h),020h
004C3F DD36202E            B   724    				ld (ix+020h),02eh
004C43 DD36212E            B   725    				ld (ix+021h),02eh
004C47 DD360B10            B   726    				ld (ix+0bh),010h
004C4B DD362B10            B   727    				ld (ix+02bh),010h
004C4F ED5B 37 55 00       B   728    				ld de,(fs_new_file_cluster)		004C54 DD731A              B   729    				ld (ix+01ah),e
004C57 DD721B              B   730    				ld (ix+01bh),d
004C5A CD 45 1A 00         B   731    				call fs_get_dir_cluster			004C5E DD733A              B   732    				ld (ix+03ah),e
004C61 DD723B              B   733    				ld (ix+03bh),d
004C64 DD361821            B   734    				ld (ix+018h),021h				004C68 DD363821            B   735    				ld (ix+038h),021h				004C6C 0609                B   736    				ld b,9
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 200


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004C6E DD360220            B   737    mndelp			ld (ix+002h),32
004C72 DD362220            B   738    				ld (ix+022h),32
004C76 DD23                B   739    				inc ix
004C78 10 F4               B   740    				djnz mndelp
004C7A 2A 37 55 00         B   741    				ld hl,(fs_new_file_cluster)		004C7E AF                  B   742    				xor a
004C7F CD E3 53 00         B   743    				call cluster_and_offset_to_lba
004C83 CD 7C 54 00         B   744    				call fs_write_sector
004C87 D8                  B   745    				ret c							                           B   746    			
004C88 CD EA 51 00         B   747    				call fs_clear_sector_buffer		004C8C AF                  B   748    				xor a
004C8D 3C                  B   749    wroslp			inc a
004C8E 32 30 55 00         B   750    				ld (fs_working_sector),a
004C92 21 D7 54 00         B   751    				ld hl,fs_cluster_size
004C96 BE                  B   752    				cp (hl)
004C97 28 13               B   753    				jr z,allsclr
004C99 2A 37 55 00         B   754    				ld hl,(fs_new_file_cluster)
004C9D CD E3 53 00         B   755    				call cluster_and_offset_to_lba
004CA1 CD 7C 54 00         B   756    				call fs_write_sector
004CA5 D8                  B   757    				ret c
004CA6 3A 30 55 00         B   758    				ld a,(fs_working_sector)
004CAA 18 E1               B   759    				jr wroslp
                           B   760    			
004CAC 2A 37 55 00         B   761    allsclr			ld hl,(fs_new_file_cluster)		004CB0 11FFFF00            B   762    				ld de,0ffffh
004CB4 CD 38 53 00         B   763    				call update_fat_entry_for_clust
004CB8 AF                  B   764    				xor a
004CB9 C9                  B   765    				ret
                           B   766    
                           B   767    
                           B   768    
                           B   769    ;----------------------------------------------
                           B   770    
004CBA                     B   771    fs_delete_dir_command
                           B   772    
004CBA CD FC 51 00         B   773    				call fs_find_filename			004CBE D8                  B   774    				ret c
004CBF 28 04               B   775    				jr z,ddc_gotd
004CC1 3ED1                B   776    				ld a,0d1h						004CC3 B7                  B   777    				or a
004CC4 C9                  B   778    				ret
                           B   779    				
004CC5 DDCB0B66            B   780    ddc_gotd		bit 4,(ix+0bh)					004CC9 20 04               B   781    				jr nz,okdeldir
004CCB AF                  B   782    				xor a
004CCC 3EC4                B   783    				ld a,0c4h						004CCE C9                  B   784    				ret
                           B   785    				
004CCF DD22 3A 55 00       B   786    okdeldir		ld (fs_fname_in_sector_addr),ix
004CD4 CD 42 54 00         B   787    				call backup_sector_lba
004CD8 DD6E1A              B   788    				ld l,(ix+01ah)					Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 201


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004CDB DD661B              B   789    				ld h,(ix+01bh)
                           B   790    				
004CDE 3A D7 54 00         B   791    fs_ddecl		ld a,(fs_cluster_size)
004CE2 47                  B   792    				ld b,a							004CE3 0E00                B   793    				ld c,0			
004CE5 79                  B   794    fs_cne2 		ld a,c
004CE6 CD E3 53 00         B   795    				call cluster_and_offset_to_lba
004CEA CD 64 54 00         B   796    				call fs_read_sector
004CEE D8                  B   797    				ret c							                           B   798    				
004CEF C5                  B   799    				push bc
004CF0 0610                B   800    				ld b,16							004CF2 DD21 96 66 00       B   801    				ld ix,sector_buffer
004CF7 11200000            B   802    				ld de,020h
004CFB DD7E00              B   803    fs_cne1			ld a,(ix)
004CFE B7                  B   804    				or a
004CFF 28 0D               B   805    				jr z,fs_chnde
004D01 FEE5                B   806    				cp 0e5h
004D03 28 09               B   807    				jr z,fs_chnde
004D05 FE2E                B   808    				cp '.'
004D07 28 05               B   809    				jr z,fs_chnde
004D09 C1                  B   810    				pop bc
004D0A AF                  B   811    				xor a							004D0B 3EC5                B   812    				ld a,0c5h						004D0D C9                  B   813    				ret
                           B   814    			
004D0E DD19                B   815    fs_chnde		add ix,de
004D10 10 E9               B   816    				djnz fs_cne1
004D12 C1                  B   817    				pop bc
004D13 0C                  B   818    				inc c
004D14 10 CF               B   819    				djnz fs_cne2
                           B   820    			
004D16 CD 0C 53 00         B   821    				call get_fat_entry_for_cluster	004D1A D8                  B   822    				ret c
004D1B CD B5 50 00         B   823    				call fs_compare_hl_fff8
004D1F 38 BD               B   824    				jr c,fs_ddecl
                           B   825    			
004D21 CD 57 54 00         B   826    dir_empty		call restore_sector_lba			004D25 CD 64 54 00         B   827    				call fs_read_sector
004D29 D8                  B   828    				ret c							004D2A 2A 3A 55 00         B   829    				ld hl,(fs_fname_in_sector_addr)
004D2E 36E5                B   830    fs_delco		ld (hl),0e5h					004D30 CD 7C 54 00         B   831    				call fs_write_sector
004D34 D8                  B   832    				ret c
                           B   833    			
004D35 E5                  B   834    				push hl
004D36 DDE1                B   835    				pop ix
004D38 DD6E1A              B   836    				ld l,(ix+01ah)
004D3B DD661B              B   837    				ld h,(ix+01bh)
004D3E 22 31 55 00         B   838    				ld (fs_working_cluster),hl
004D42 7C                  B   839    				ld a,h							004D43 B5                  B   840    				or l							Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 202


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004D44 C8                  B   841    				ret z							                           B   842    				
004D45 2A 31 55 00         B   843    clrfatlp		ld hl,(fs_working_cluster)
004D49 CD 0C 53 00         B   844    				call get_fat_entry_for_cluster
004D4D D8                  B   845    				ret c
004D4E EB                  B   846    				ex de,hl
                           B   847    				
004D4F 2A 31 55 00         B   848    				ld hl,(fs_working_cluster)
004D53 ED53 31 55 00       B   849    				ld (fs_working_cluster),de
004D58 11000000            B   850    				ld de,0
004D5C CD 38 53 00         B   851    				call update_fat_entry_for_clust
004D60 D8                  B   852    				ret c
                           B   853    				
004D61 CD B5 50 00         B   854    				call fs_compare_hl_fff8			004D65 38 DE               B   855    				jr c,clrfatlp
004D67 AF                  B   856    				xor a
004D68 C9                  B   857    				ret
                           B   858    
                           B   859    
                           B   860    ;----------------------------------------------
                           B   861    
004D69                     B   862    fs_create_file_command
                           B   863    
                           B   864    ; Note: As per FAT standard, creating a file (0
                           B   865    ; only a directory entry (FAT is only updated w
                           B   866    
004D69 CD FC 51 00         B   867    				call fs_find_filename			004D6D D8                  B   868    				ret c
004D6E FEC2                B   869    				cp 0c2h							004D70 28 04               B   870    				jr z,mfilefnde
004D72 AF                  B   871    				xor a							004D73 3EC9                B   872    				ld a,0c9h						004D75 C9                  B   873    				ret
                           B   874    			
004D76 CD 13 51 00         B   875    mfilefnde		call fs_find_free_dir_entry		004D7A D8                  B   876    				ret c							004D7B C0                  B   877    				ret nz							                           B   878    			
004D7C DDE5                B   879    				push ix							004D7E D1                  B   880    				pop de
004D7F 21 EE 54 00         B   881    				ld hl,fs_sought_filename
004D83 010B0000            B   882    				ld bc,11
004D87 EDB0                B   883    				ldir
004D89 AF                  B   884    				xor a							004D8A 0615                B   885    				ld b,21
004D8C 12                  B   886    clrfnen			ld (de),a
004D8D 13                  B   887    				inc de
004D8E 10 FC               B   888    				djnz clrfnen
004D90 DD361821            B   889    				ld (ix+018h),021h				004D94 CD 7C 54 00         B   890    				call fs_write_sector			004D98 D8                  B   891    				ret c							004D99 AF                  B   892    				xor a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 203


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004D9A C9                  B   893    				ret								                           B   894    
                           B   895    
                           B   896    ;----------------------------------------------
                           B   897    
004D9B                     B   898    fs_write_bytes_to_file_command
                           B   899    	
                           B   900    ; *********************************************
                           B   901    ; * set up: fs_file_transfer_length (new data),
                           B   902    ; * before calling                             
                           B   903    ; *********************************************
                           B   904    
                           B   905    				
004D9B ED5B 1E 55 00       B   906    				ld de,(fs_file_transfer_length)
004DA0 21000000            B   907    				ld hl,0
004DA4 AF                  B   908    				xor a
004DA5 ED5A                B   909    				adc hl,de
004DA7 CA C0 4A 00         B   910    				jp z,fs_fliz					                           B   911    				 
004DAB CD FC 51 00         B   912    				call fs_find_filename			004DAF D8                  B   913    				ret c							004DB0 FEC2                B   914    				cp 0c2h				
004DB2 C8                  B   915    				ret z							004DB3 DDCB0B66            B   916    				bit 4,(ix+0bh)					004DB7 28 04               B   917    				jr z,fs_oknad					004DB9 AF                  B   918    				xor a							004DBA 3EC6                B   919    				ld a,0c6h						004DBC C9                  B   920    				ret
                           B   921    
004DBD CD 42 54 00         B   922    fs_oknad		call backup_sector_lba
004DC1 DD22 3A 55 00       B   923    				ld (fs_fname_in_sector_addr),ix
                           B   924    
004DC6 DD311C              B   925    				ld iy,(ix+01ch)					004DC9 DD7E1F              B   926    				ld a,(ix+01fh)
004DCC FD22 1A 55 00       B   927    				ld (fs_existing_file_length),iy
004DD1 32 1A 55 00         B   928    				ld (fs_existing_file_length),a
004DD5 ED5B 1E 55 00       B   929    				ld de,(fs_file_transfer_length)
004DDA FD19                B   930    				add iy,de						004DDC CE00                B   931    				adc a,0
004DDE DD3E1C              B   932    				ld (ix+01ch),iy					004DE1 DD771F              B   933    				ld (ix+01fh),a					004DE4 30 04               B   934    				jr nc,nfsizeok
004DE6 AF                  B   935    				xor a
004DE7 3EC7                B   936    				ld a,0c7h						004DE9 C9                  B   937    				ret
                           B   938    
004DEA 11000000            B   939    nfsizeok		ld de,0
004DEE DD5E1A              B   940    				ld e,(ix+01ah)					004DF1 DD561B              B   941    				ld d,(ix+01bh)					004DF4 ED53 24 55 00       B   942    				ld (fs_file_working_cluster),de
004DF9 CD 7C 54 00         B   943    				call fs_write_sector			004DFD D8                  B   944    				ret c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 204


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004DFE 7A                  B   945    				ld a,d
004DFF B3                  B   946    				or e
004E00 20 35               B   947    				jr nz,apenclch	
                           B   948    				
004E02 CD C2 50 00         B   949    				call fs_find_free_cluster		004E06 D8                  B   950    				ret c
004E07 C0                  B   951    				ret nz
004E08 2A 34 55 00         B   952    				ld hl,(fs_free_cluster)
004E0C 22 24 55 00         B   953    				ld (fs_file_working_cluster),hl
004E10 11FFFF00            B   954    				ld de,0ffffh
004E14 CD 38 53 00         B   955    				call update_fat_entry_for_clust
004E18 D8                  B   956    				ret c
                           B   957    			
004E19 CD 57 54 00         B   958    				call restore_sector_lba			004E1D CD 64 54 00         B   959    				call fs_read_sector
004E21 D8                  B   960    				ret c
004E22 DD2A 3A 55 00       B   961    				ld ix,(fs_fname_in_sector_addr)
004E27 ED5B 24 55 00       B   962    				ld de,(fs_file_working_cluster)
004E2C DD731A              B   963    				ld (ix+01ah),e
004E2F DD721B              B   964    				ld (ix+01bh),d
004E32 CD 7C 54 00         B   965    				call fs_write_sector			004E36 D8                  B   966    				ret c
                           B   967    				
                           B   968    					
004E37 2A 24 55 00         B   969    apenclch		ld hl,(fs_file_working_cluster)
004E3B CD 0C 53 00         B   970    				call get_fat_entry_for_cluster
004E3F D8                  B   971    				ret c
004E40 CD B5 50 00         B   972    				call fs_compare_hl_fff8
004E44 30 1C               B   973    				jr nc,atlclif
004E46 22 24 55 00         B   974    				ld (fs_file_working_cluster),hl
004E4A 01000000            B   975    				ld bc,0
004E4E 3A D7 54 00         B   976    				ld a,(fs_cluster_size)
004E52 CB27                B   977    				sla a
004E54 47                  B   978    				ld b,a
004E55 2A 1A 55 00         B   979    				ld hl,(fs_existing_file_length)
004E59 AF                  B   980    				xor a							004E5A ED42                B   981    				sbc hl,bc						004E5C 22 1A 55 00         B   982    				ld (fs_existing_file_length),hl
004E60 18 D5               B   983    				jr apenclch
                           B   984    				
004E62 ED4B 1A 55 00       B   985    atlclif			ld bc,(fs_existing_file_length)
004E67 CB38                B   986    				srl b				
004E69 48                  B   987    				ld c,b							004E6A 3A D7 54 00         B   988    				ld a,(fs_cluster_size)
004E6E 91                  B   989    				sub c
004E6F 47                  B   990    				ld b,a							004E70 28 79               B   991    				jr z,fs_sfncl					                           B   992    				
004E72 2A 24 55 00         B   993    				ld hl,(fs_file_working_cluster)
004E76 79                  B   994    				ld a,c
004E77 CD E3 53 00         B   995    				call cluster_and_offset_to_lba
004E7B CD 64 54 00         B   996    				call fs_read_sector
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 205


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004E7F D8                  B   997    				ret c
004E80 C5                  B   998    				push bc							                           B   999    				
004E81 11000000            B  1000    				ld de,0
004E85 3A 1A 55 00         B  1001    				ld a,(fs_existing_file_length)
004E89 5F                  B  1002    				ld e,a
004E8A 3A 1B 55 00         B  1003    				ld a,(fs_existing_file_length+1
004E8E E601                B  1004    				and 1
004E90 57                  B  1005    				ld d,a							004E91 21000200            B  1006    				ld hl,512	
004E95 AF                  B  1007    				xor a
004E96 ED52                B  1008    				sbc hl,de						004E98 E5                  B  1009    				push hl
004E99 C1                  B  1010    				pop bc							004E9A 21 96 66 00         B  1011    				ld hl,sector_buffer
004E9E 19                  B  1012    				add hl,de
004E9F EB                  B  1013    				ex de,hl						004EA0 7C                  B  1014    				ld a,h			
004EA1 B5                  B  1015    				or l
004EA2 20 04               B  1016    				jr nz,fs_dcsb					004EA4 CD EA 51 00         B  1017    fs_dbfil		call fs_clear_sector_buffer
004EA8 2A 27 55 00         B  1018    fs_dcsb			ld hl,(fs_ez80_address)			004EAC EDA0                B  1019    fs_cbsb			ldi								004EAE 7C                  B  1020    				ld a,h							004EAF B5                  B  1021    				or l
004EB0 20 0D               B  1022    				jr nz,fs_srcadok
004EB2 22 27 55 00         B  1023    				ld (fs_ez80_address),hl
004EB6 3A 29 55 00         B  1024    				ld a,(fs_ez80_address+2)
004EBA B7                  B  1025    				or a
004EBB CA DC 4B 00         B  1026    				jp z,fs_mem_error
004EBF CD 6C 53 00         B  1027    fs_srcadok		call transfer_length_countdown
004EC3 28 54               B  1028    				jr z,fs_lbof					004EC5 78                  B  1029    fs_sadok		ld a,b							004EC6 B1                  B  1030    				or c
004EC7 20 E3               B  1031    				jr nz,fs_cbsb					                           B  1032    
004EC9 22 27 55 00         B  1033    				ld (fs_ez80_address),hl			004ECD C1                  B  1034    				pop bc							004ECE 79                  B  1035    				ld a,c
004ECF 2A 24 55 00         B  1036    				ld hl,(fs_file_working_cluster)
004ED3 CD E3 53 00         B  1037    				call cluster_and_offset_to_lba
004ED7 CD 7C 54 00         B  1038    				call fs_write_sector			004EDB D8                  B  1039    				ret c							004EDC 0C                  B  1040    				inc c							004EDD 05                  B  1041    				dec b
004EDE 28 0B               B  1042    				jr z,fs_sfncl					004EE0 C5                  B  1043    fs_sfns			push bc				
004EE1 01000200            B  1044    				ld bc,512						004EE5 11 96 66 00         B  1045    				ld de,sector_buffer				004EE9 18 B9               B  1046    				jr fs_dbfil						                           B  1047    				
004EEB CD C2 50 00         B  1048    fs_sfncl		call fs_find_free_cluster		Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 206


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004EEF D8                  B  1049    				ret c							004EF0 C0                  B  1050    				ret nz							004EF1 2A 24 55 00         B  1051    				ld hl,(fs_file_working_cluster)
004EF5 ED5B 34 55 00       B  1052    				ld de,(fs_free_cluster)
004EFA CD 38 53 00         B  1053    				call update_fat_entry_for_clust
004EFE D8                  B  1054    				ret c
004EFF 2A 34 55 00         B  1055    				ld hl,(fs_free_cluster)
004F03 22 24 55 00         B  1056    				ld (fs_file_working_cluster),hl
004F07 11FFFF00            B  1057    				ld de,0ffffh
004F0B CD 38 53 00         B  1058    				call update_fat_entry_for_clust
004F0F D8                  B  1059    				ret c
004F10 3A D7 54 00         B  1060    				ld a,(fs_cluster_size)
004F14 47                  B  1061    				ld b,a							004F15 0E00                B  1062    				ld c,0							004F17 18 C7               B  1063    				jr fs_sfns						                           B  1064    				
004F19 C1                  B  1065    fs_lbof			pop bc
004F1A 79                  B  1066    				ld a,c							004F1B 2A 24 55 00         B  1067    				ld hl,(fs_file_working_cluster)
004F1F CD E3 53 00         B  1068    				call cluster_and_offset_to_lba
004F23 CD 7C 54 00         B  1069    				call fs_write_sector	
004F27 D8                  B  1070    				ret c
004F28 AF                  B  1071    				xor a							004F29 C9                  B  1072    				ret
                           B  1073    
                           B  1074    ;----------------------------------------------
                           B  1075    
004F2A                     B  1076    fs_erase_file_command
                           B  1077    
                           B  1078    
004F2A CD FC 51 00         B  1079    				call fs_find_filename			004F2E D8                  B  1080    				ret c
004F2F C0                  B  1081    				ret nz
                           B  1082    				
004F30 DDCB0B66            B  1083    				bit 4,(ix+0bh)					004F34 28 04               B  1084    				jr z,okdelf
004F36 AF                  B  1085    				xor a
004F37 3EC6                B  1086    				ld a,0c6h						004F39 C9                  B  1087    				ret
                           B  1088    				
004F3A DDE5                B  1089    okdelf			push ix
004F3C E1                  B  1090    				pop hl
004F3D C3 2E 4D 00         B  1091    				jp fs_delco						                           B  1092    					
                           B  1093    
                           B  1094    ;----------------------------------------------
                           B  1095    
                           B  1096    
004F41                     B  1097    fs_rename_command
                           B  1098    
004F41 CD FC 51 00         B  1099    				call fs_find_filename			004F45 D8                  B  1100    				ret c							Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 207


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004F46 FEC2                B  1101    				cp 0c2h							004F48 28 04               B  1102    				jr z,fs_nfnok					004F4A AF                  B  1103    				xor a							004F4B 3EC9                B  1104    				ld a,0c9h						004F4D C9                  B  1105    				ret
                           B  1106    			
004F4E 21 EE 54 00         B  1107    fs_nfnok		ld hl,fs_sought_filename		004F52 11 06 55 00         B  1108    				ld de,fs_filename_buffer
004F56 010B0000            B  1109    				ld bc,11
004F5A EDB0                B  1110    				ldir
004F5C 21 FA 54 00         B  1111    				ld hl,fs_alt_filename			004F60 11 EE 54 00         B  1112    				ld de,fs_sought_filename
004F64 010B0000            B  1113    				ld bc,11
004F68 EDB0                B  1114    				ldir
004F6A CD FC 51 00         B  1115    				call fs_find_filename			004F6E D8                  B  1116    				ret c
004F6F FEC2                B  1117    				cp 0c2h
004F71 C8                  B  1118    				ret z							                           B  1119    				
004F72 DDE5                B  1120    				push ix
004F74 D1                  B  1121    				pop de
004F75 21 06 55 00         B  1122    				ld hl,fs_filename_buffer	 	004F79 010B0000            B  1123    				ld bc,11
004F7D EDB0                B  1124    				ldir							004F7F CD 7C 54 00         B  1125    				call fs_write_sector			                           B  1126    				
004F83 AF                  B  1127    fs_rndone		xor a
004F84 C9                  B  1128    				ret
                           B  1129    				
                           B  1130    
                           B  1131    ;----------------------------------------------
                           B  1132    
                           B  1133    
004F85                     B  1134    fs_goto_first_dir_entry
                           B  1135    
004F85 CD 45 1A 00         B  1136    				call fs_get_dir_cluster
004F89 ED53 3D 55 00       B  1137    				ld (fs_dir_entry_cluster),de
004F8E AF                  B  1138    				xor a
004F8F 32 43 55 00         B  1139    				ld (fs_dir_entry_sector),a		004F93 11000000            B  1140    				ld de,0
004F97 ED53 40 55 00       B  1141    				ld (fs_dir_entry_line_offset),d
                           B  1142    				
                           B  1143    
                           B  1144    
004F9C                     B  1145    fs_get_dir_entry
                           B  1146    
                           B  1147    ; No input parameters.
                           B  1148    ;
                           B  1149    ; Returns HL    = Location of null terminated f
                           B  1150    ;         IX:IY = Length of file (if applicable
                           B  1151    ;         B     = File flag (1 = directory, 0 =
                           B  1152    ;         A     = Error code
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 208


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B  1153    ;         Carry = Set if hardware error encount
                           B  1154    
                           B  1155    
004F9C 3A 43 55 00         B  1156    				ld a,(fs_dir_entry_sector)		004FA0 4F                  B  1157    				ld c,a
004FA1 2A 3D 55 00         B  1158    				ld hl,(fs_dir_entry_cluster)	004FA5 CD E3 53 00         B  1159    				call cluster_and_offset_to_lba
                           B  1160    			
004FA9 7C                  B  1161    				ld a,h							004FAA B5                  B  1162    				or l							004FAB 20 09               B  1163    				jr nz,nr_read					004FAD 2A E1 54 00         B  1164    				ld hl,(fs_root_dir_position)	004FB1 79                  B  1165    				ld a,c
004FB2 CD 29 54 00         B  1166    				call set_absolute_lba
                           B  1167    				
004FB6 CD 64 54 00         B  1168    nr_read			call fs_read_sector				004FBA D8                  B  1169    				ret c							                           B  1170    				
004FBB ED5B 40 55 00       B  1171    				ld de,(fs_dir_entry_line_offset
004FC0 DD21 96 66 00       B  1172    dscan_int_loop	ld ix,sector_buffer
004FC5 DD19                B  1173    				add ix,de
004FC7 DD7E00              B  1174    ds_int_loop		ld a,(ix)
004FCA B7                  B  1175    				or a							004FCB 28 0E               B  1176    				jr z,fs_dir_entry_free		
004FCD FEE5                B  1177    				cp 0e5h							004FCF 28 0A               B  1178    				jr z,fs_dir_entry_free	
004FD1 FE05                B  1179    				cp 05h							004FD3 28 06               B  1180    				jr z,fs_dir_entry_free	
004FD5 DDCB0B5E            B  1181    				bit 3,(ix+0bh)					004FD9 28 0D               B  1182    				jr z,fs_dir_entry_in_use		                           B  1183    
004FDB                     B  1184    fs_dir_entry_free
                           B  1185    
004FDB EB                  B  1186    				ex de,hl
004FDC 11200000            B  1187    				ld de,32
004FE0 19                  B  1188    				add hl,de
004FE1 EB                  B  1189    				ex de,hl
004FE2 CB4A                B  1190    				bit 1,d
004FE4 28 DA               B  1191    				jr z,dscan_int_loop
004FE6 18 54               B  1192    				jr dscan_new_sect
                           B  1193    
004FE8                     B  1194    fs_dir_entry_in_use
                           B  1195    				
004FE8 ED53 40 55 00       B  1196    				ld (fs_dir_entry_line_offset),d
004FED DDE5                B  1197    				push ix
004FEF E1                  B  1198    				pop hl
004FF0 CD 29 10 00         B  1199    				call os_clear_output_line
004FF4 0608                B  1200    				ld b,8							004FF6 11 B8 61 00         B  1201    				ld de,output_line
004FFA 7E                  B  1202    dcopyn			ld a,(hl)
004FFB FE20                B  1203    				cp ' '							004FFD 28 02               B  1204    				jr z,digchar
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 209


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004FFF 12                  B  1205    				ld (de),a
005000 13                  B  1206    				inc de
005001 23                  B  1207    digchar			inc hl
005002 10 F6               B  1208    				djnz dcopyn
005004 7E                  B  1209    				ld a,(hl)						005005 FE20                B  1210    				cp ' '							005007 28 0A               B  1211    				jr z,dirnoex
005009 3E2E                B  1212    				ld a,'.'						00500B 12                  B  1213    				ld (de),a
00500C 13                  B  1214    				inc de	
00500D 01030000            B  1215    				ld bc,3							005011 EDB0                B  1216    				ldir
005013 AF                  B  1217    dirnoex			xor a 
005014 12                  B  1218    				ld (de),a						                           B  1219    				
005015 47                  B  1220    				ld b,a
005016 DDCB0B66            B  1221    				bit 4,(ix+0bh)					00501A 28 01               B  1222    				jr z,fs_fniaf		
00501C 04                  B  1223    				inc b							00501D DD171C              B  1224    fs_fniaf		ld de,(ix+01ch)					005020 DD4E1F              B  1225    				ld c,(ix+01fh)
005023 21 B8 61 00         B  1226    				ld hl,output_line				005027 AF                  B  1227    				xor a
005028 C9                  B  1228    				ret
                           B  1229    
                           B  1230    
                           B  1231    
                           B  1232    
005029                     B  1233    fs_goto_next_dir_entry
                           B  1234    
005029 11200000            B  1235    				ld de,32
00502D 2A 40 55 00         B  1236    				ld hl,(fs_dir_entry_line_offset
005031 19                  B  1237    				add hl,de
005032 22 40 55 00         B  1238    				ld (fs_dir_entry_line_offset),h
005036 CB4C                B  1239    				bit 1,h
005038 CA 9C 4F 00         B  1240    				jp z,fs_get_dir_entry
                           B  1241    
00503C 21000000            B  1242    dscan_new_sect	ld hl,0				
005040 22 40 55 00         B  1243    				ld (fs_dir_entry_line_offset),h
                           B  1244    			
005044 21 43 55 00         B  1245    				ld hl,fs_dir_entry_sector
005048 34                  B  1246    				inc (hl)						                           B  1247    			
005049 ED5B 3D 55 00       B  1248    				ld de,(fs_dir_entry_cluster)
00504E 7A                  B  1249    				ld a,d
00504F B3                  B  1250    				or e							005050 20 0B               B  1251    				jr nz,nonroot2
005052 3A E7 54 00         B  1252    				ld a,(fs_root_dir_sectors)
005056 BE                  B  1253    				cp (hl)
005057 28 23               B  1254    				jr z,endofdir			
005059 C3 9C 4F 00         B  1255    				jp fs_get_dir_entry
                           B  1256    												Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 210


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
00505D 3A D7 54 00         B  1257    nonroot2		ld a,(fs_cluster_size)		
005061 BE                  B  1258    				cp (hl)							005062 C2 9C 4F 00         B  1259    				jp nz,fs_get_dir_entry
005066 3600                B  1260    				ld (hl),0						005068 2A 3D 55 00         B  1261    				ld hl,(fs_dir_entry_cluster)
00506C CD 0C 53 00         B  1262    				call get_fat_entry_for_cluster
005070 22 3D 55 00         B  1263    				ld (fs_dir_entry_cluster),hl
005074 CD B5 50 00         B  1264    				call fs_compare_hl_fff8			005078 DA 9C 4F 00         B  1265    				jp c,fs_get_dir_entry
                           B  1266    	
00507C 3ED2                B  1267    endofdir		ld a,0d2h
00507E B7                  B  1268    				or a							00507F C9                  B  1269    				ret	
                           B  1270    				
                           B  1271    ;----------------------------------------------
                           B  1272    
005080                     B  1273    fs_get_volume_label
                           B  1274    
                           B  1275    
                           B  1276    ; On return HL = volume label
                           B  1277    
                           B  1278    
005080 2A E1 54 00         B  1279    				ld hl,(fs_root_dir_position)
005084 AF                  B  1280    				xor a
005085 CD 3A 54 00         B  1281    				call set_abs_lba_and_read_secto
005089 D8                  B  1282    				ret c
00508A 0E10                B  1283    				ld c,16							00508C DD21 96 66 00       B  1284    				ld ix,sector_buffer
005091 DD7E0B              B  1285    find_vl			ld a,(ix+0bh)
005094 FE08                B  1286    				cp 08h
005096 20 11               B  1287    				jr nz,not_label
005098 DD360B00            B  1288    				ld (ix+0bh),0					00509C DDE5                B  1289    				push ix
00509E E1                  B  1290    				pop hl
00509F E5                  B  1291    				push hl
0050A0 060B                B  1292    				ld b,11
0050A2 CD 11 12 00         B  1293    				call uppercasify_string
0050A6 E1                  B  1294    				pop hl
0050A7 AF                  B  1295    				xor a
0050A8 C9                  B  1296    				ret
                           B  1297    				
0050A9 11200000            B  1298    not_label		ld de,32						0050AD DD19                B  1299    				add ix,de						0050AF 10 E0               B  1300    				djnz find_vl
0050B1 AF                  B  1301    				xor a
0050B2 3ED4                B  1302    				ld a,0d4h						0050B4 C9                  B  1303    				ret		
                           B  1304    
                           B  1305    ;----------------------------------------------
                           B  1306    ; Internal subroutines
                           B  1307    ;----------------------------------------------
                           B  1308    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 211


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
0050B5                     B  1309    fs_compare_hl_fff8
                           B  1310    
                           B  1311    ;INPUT HL = value to compare with fff8
                           B  1312    ;OUTPUT CARRY set if < $fff8, ZERO FLAG set if 
                           B  1313    	
                           B  1314    	
0050B5 E5                  B  1315    				push hl
0050B6 D5                  B  1316    				push de
0050B7 11F8FF00            B  1317    				ld de,0fff8h			
0050BB B7                  B  1318    				or a							0050BC 52ED52              B  1319    				sbc.s hl,de						0050BF D1                  B  1320    				pop de
0050C0 E1                  B  1321    				pop hl
0050C1 C9                  B  1322    				ret
                           B  1323    
                           B  1324    ;----------------------------------------------
                           B  1325    
                           B  1326    
0050C2                     B  1327    fs_find_free_cluster
                           B  1328    	
0050C2 DD210000 00         B  1329    				ld ix,0							0050C7 ED5B DB 54 00       B  1330    				ld de,(fs_fat1_position)		0050CC AF                  B  1331    				xor a				
0050CD 32 30 55 00         B  1332    fs_ffcl2		ld (fs_working_sector),a	
0050D1 D5                  B  1333    				push de
0050D2 E1                  B  1334    				pop hl
0050D3 3A 30 55 00         B  1335    				ld a,(fs_working_sector)
0050D7 CD 3A 54 00         B  1336    				call set_abs_lba_and_read_secto
0050DB D8                  B  1337    				ret c
0050DC 21 96 66 00         B  1338    				ld hl,sector_buffer
0050E0 0600                B  1339    				ld b,0
0050E2 7E                  B  1340    fs_ffcl1		ld a,(hl)						0050E3 23                  B  1341    				inc hl
0050E4 B6                  B  1342    				or (hl)
0050E5 23                  B  1343    				inc hl
0050E6 28 14               B  1344    				jr z,fs_gotfc
0050E8 DD23                B  1345    				inc ix
0050EA 10 F6               B  1346    				djnz fs_ffcl1
                           B  1347    				
0050EC 2A E8 54 00         B  1348    				ld hl,(fs_sectors_per_fat)
0050F0 3A 30 55 00         B  1349    				ld a,(fs_working_sector)		0050F4 3C                  B  1350    				inc a				
0050F5 BD                  B  1351    				cp l		
0050F6 20 D5               B  1352    				jr nz,fs_ffcl2					0050F8 3EC1                B  1353    fs_dfull		ld a,c1h						0050FA B7                  B  1354    				or a							0050FB C9                  B  1355    				ret
                           B  1356    			
0050FC DDE5                B  1357    fs_gotfc		push ix							0050FE E1                  B  1358    				pop hl							0050FF 2B                  B  1359    				dec hl							005100 2B                  B  1360    				dec hl							Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 212


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
005101 ED5B EB 54 00       B  1361    				ld de,(fs_max_data_clusters)
005106 AF                  B  1362    				xor a
005107 52ED52              B  1363    				sbc.s hl,de						00510A 30 EC               B  1364    				jr nc,fs_dfull
                           B  1365    			
00510C DD22 34 55 00       B  1366    				ld (fs_free_cluster),ix
005111 AF                  B  1367    				xor a
005112 C9                  B  1368    				ret
                           B  1369    	
                           B  1370    	
                           B  1371    ;----------------------------------------------
                           B  1372    	
                           B  1373    	
005113                     B  1374    fs_find_free_dir_entry
                           B  1375    
                           B  1376    
                           B  1377    ; OUTPUT IX start of 32 byte dir entry in secto
                           B  1378    
                           B  1379    			
005113 CD 45 1A 00         B  1380    				call fs_get_dir_cluster			005117 EB                  B  1381    				ex de,hl
005118 22 24 55 00         B  1382    ffenxtclu		ld (fs_file_working_cluster),hl
00511C AF                  B  1383    				xor a
00511D 32 30 55 00         B  1384    				ld (fs_working_sector),a
                           B  1385    			
005121 2A E1 54 00         B  1386    ffenxtsec		ld hl,(fs_root_dir_position)	005125 3A 30 55 00         B  1387    				ld a,(fs_working_sector)
005129 CD 29 54 00         B  1388    				call set_absolute_lba
                           B  1389    				
00512D CD 45 1A 00         B  1390    				call fs_get_dir_cluster			005131 7A                  B  1391    				ld a,d
005132 B3                  B  1392    				or e
005133 28 0C               B  1393    				jr z,at_rootd
005135 2A 24 55 00         B  1394    				ld hl,(fs_file_working_cluster)
005139 3A 30 55 00         B  1395    				ld a,(fs_working_sector)
00513D CD E3 53 00         B  1396    				call cluster_and_offset_to_lba
                           B  1397    				
005141 CD 64 54 00         B  1398    at_rootd		call fs_read_sector
005145 D8                  B  1399    				ret c
005146 0610                B  1400    				ld b,16							005148 11200000            B  1401    				ld de,32
00514C DD21 96 66 00       B  1402    				ld ix,sector_buffer
005151 DD7E00              B  1403    scdirfe			ld a,(ix)						005154 B7                  B  1404    				or a
005155 28 65               B  1405    				jr z,got_fde
005157 FEE5                B  1406    				cp 0e5h
005159 28 61               B  1407    				jr z,got_fde
00515B DD19                B  1408    				add ix,de						00515D 10 F2               B  1409    				djnz scdirfe					                           B  1410    				
00515F 21 30 55 00         B  1411    				ld hl,fs_working_sector			005163 34                  B  1412    				inc (hl)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 213


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B  1413    				
005164 CD 45 1A 00         B  1414    				call fs_get_dir_cluster			005168 7A                  B  1415    				ld a,d
005169 B3                  B  1416    				or e
00516A 20 0B               B  1417    				jr nz,ffenotroo
00516C 3A E7 54 00         B  1418    				ld a,(fs_root_dir_sectors)		005170 BE                  B  1419    				cp (hl)							005171 20 AE               B  1420    				jr nz,ffenxtsec
005173 AF                  B  1421    fenotfnd		xor a							005174 3EC3                B  1422    				ld a,0c3h						005176 C9                  B  1423    				ret
                           B  1424    			
005177 3A D7 54 00         B  1425    ffenotroo		ld a,(fs_cluster_size)			00517B BE                  B  1426    				cp (hl)
00517C 20 A3               B  1427    				jr nz,ffenxtsec
00517E 2A 24 55 00         B  1428    				ld hl,(fs_file_working_cluster)
005182 CD 0C 53 00         B  1429    				call get_fat_entry_for_cluster	005186 D8                  B  1430    				ret c
005187 CD B5 50 00         B  1431    				call fs_compare_hl_fff8			00518B 38 8B               B  1432    				jr c,ffenxtclu
                           B  1433    			
00518D CD C2 50 00         B  1434    				call fs_find_free_cluster		005191 D8                  B  1435    				ret c							005192 C0                  B  1436    				ret nz							005193 ED5B 34 55 00       B  1437    				ld de,(fs_free_cluster)
005198 2A 24 55 00         B  1438    				ld hl,(fs_file_working_cluster)
00519C CD 38 53 00         B  1439    				call update_fat_entry_for_clust
0051A0 D8                  B  1440    				ret c
0051A1 EB                  B  1441    				ex de,hl						0051A2 11FFFF00            B  1442    				ld de,0ffffh
0051A6 CD 38 53 00         B  1443    				call update_fat_entry_for_clust
0051AA D8                  B  1444    				ret c
                           B  1445    			
0051AB 2A 34 55 00         B  1446    				ld hl,(fs_free_cluster)			0051AF CD BE 51 00         B  1447    				call fs_clear_cluster			0051B3 D8                  B  1448    				ret c
0051B4 2A 34 55 00         B  1449    				ld hl,(fs_free_cluster)			0051B8 C3 18 51 00         B  1450    				jp ffenxtclu					                           B  1451    			
0051BC AF                  B  1452    got_fde			xor a
0051BD C9                  B  1453    				ret
                           B  1454    					
                           B  1455    
                           B  1456    ;----------------------------------------------
                           B  1457    
0051BE                     B  1458    fs_clear_cluster
                           B  1459    
                           B  1460    ;INPUT HL = cluster to clear
                           B  1461    
0051BE 22 31 55 00         B  1462    				ld (fs_working_cluster),hl
                           B  1463    			
0051C2 CD EA 51 00         B  1464    				call fs_clear_sector_buffer
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 214


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B  1465    					
0051C6 AF                  B  1466    				xor a				
0051C7 32 30 55 00         B  1467    				ld (fs_working_sector),a		0051CB 3A 30 55 00         B  1468    wipeclulp		ld a,(fs_working_sector)		0051CF 2A 31 55 00         B  1469    				ld hl,(fs_working_cluster)		0051D3 CD E3 53 00         B  1470    				call cluster_and_offset_to_lba	0051D7 CD 7C 54 00         B  1471    				call fs_write_sector
0051DB D8                  B  1472    				ret c
0051DC 21 30 55 00         B  1473    				ld hl,fs_working_sector
0051E0 34                  B  1474    				inc (hl)
0051E1 3A D7 54 00         B  1475    				ld a,(fs_cluster_size)
0051E5 BE                  B  1476    				cp (hl)
0051E6 20 E3               B  1477    				jr nz,wipeclulp
0051E8 AF                  B  1478    				xor a
0051E9 C9                  B  1479    				ret
                           B  1480    			
                           B  1481    			
0051EA                     B  1482    fs_clear_sector_buffer
                           B  1483    			
0051EA E5                  B  1484    				push hl
0051EB C5                  B  1485    				push bc
0051EC 21 96 66 00         B  1486    				ld hl,sector_buffer			
0051F0 01000200            B  1487    				ld bc,512				
0051F4 AF                  B  1488    				xor a				
0051F5 CD 56 15 00         B  1489    				call os_bchl_memfill	
0051F9 C1                  B  1490    				pop bc
0051FA E1                  B  1491    				pop hl
0051FB C9                  B  1492    				ret
                           B  1493    				
                           B  1494    
                           B  1495    	
                           B  1496    ;----------------------------------------------
                           B  1497    	
0051FC                     B  1498    fs_find_filename
                           B  1499    
0051FC AF                  B  1500    				xor a
                           B  1501    
0051FD                     B  1502    fs_search	
                           B  1503    				
0051FD 32 4B 55 00         B  1504    				ld (fs_search_type),a
                           B  1505    			
                           B  1506    ; OUTPUT IX start of 32 byte dir entry
                           B  1507    			
005201 CD 45 1A 00         B  1508    				call fs_get_dir_cluster
005205 ED53 24 55 00       B  1509    ffnnxtclu		ld (fs_file_working_cluster),de
00520A AF                  B  1510    				xor a
00520B 32 30 55 00         B  1511    				ld (fs_working_sector),a
                           B  1512    			
00520F 2A E1 54 00         B  1513    ffnnxtsec		ld hl,(fs_root_dir_position)	005213 3A 30 55 00         B  1514    				ld a,(fs_working_sector)
005217 CD 29 54 00         B  1515    				call set_absolute_lba
                           B  1516    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 215


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
00521B CD 45 1A 00         B  1517    				call fs_get_dir_cluster			00521F 7A                  B  1518    				ld a,d
005220 B3                  B  1519    				or e
005221 28 0C               B  1520    				jr z,at_rootd2
005223 2A 24 55 00         B  1521    				ld hl,(fs_file_working_cluster)
005227 3A 30 55 00         B  1522    				ld a,(fs_working_sector)
00522B CD E3 53 00         B  1523    				call cluster_and_offset_to_lba	                           B  1524    				
00522F CD 64 54 00         B  1525    at_rootd2		call fs_read_sector
005233 D8                  B  1526    				ret c
005234 0E10                B  1527    				ld c,16							005236 DD21 96 66 00       B  1528    				ld ix,sector_buffer
00523B DDE5                B  1529    ndirentr		push ix
00523D D1                  B  1530    				pop de
00523E 3A 4B 55 00         B  1531    				ld a,(fs_search_type)
005242 B7                  B  1532    				or a
005243 28 1E               B  1533    				jr z,fs_ststr
                           B  1534    			
005245 DD7E00              B  1535    				ld a,(ix)						005248 FE80                B  1536    				cp 080h							00524A 30 35               B  1537    				jr nc,fnnotsame
00524C FE20                B  1538    				cp 020h
00524E 38 31               B  1539    				jr c,fnnotsame
005250 ED5B 48 55 00       B  1540    				ld de,(fs_stash_dir_block)		005255 DD7E1A              B  1541    				ld a,(ix+01ah)
005258 BB                  B  1542    				cp e
005259 20 26               B  1543    				jr nz,fnnotsame
00525B DD7E1B              B  1544    				ld a,(ix+01bh)
00525E BA                  B  1545    				cp d
00525F 28 1E               B  1546    				jr z,fs_found
005261 18 1E               B  1547    				jr fnnotsame
                           B  1548    				
005263 FD21 EE 54 00       B  1549    fs_ststr		ld iy,fs_sought_filename		005268 060B                B  1550    				ld b,11							00526A 1A                  B  1551    cmpfnlp			ld a,(de)						00526B CD 1D 12 00         B  1552    				call os_uppercasify				00526F 6F                  B  1553    				ld l,a
005270 FD7E00              B  1554    				ld a,(iy)
005273 CD 1D 12 00         B  1555    				call os_uppercasify
005277 BD                  B  1556    				cp l				
005278 20 07               B  1557    				jr nz,fnnotsame
00527A FD23                B  1558    				inc iy
00527C 13                  B  1559    				inc de
00527D 10 EB               B  1560    				djnz cmpfnlp
00527F AF                  B  1561    fs_found		xor a							005280 C9                  B  1562    				ret
                           B  1563    			
005281 11200000            B  1564    fnnotsame		ld de,32						005285 DD19                B  1565    				add ix,de
005287 0D                  B  1566    				dec c
005288 20 B1               B  1567    				jr nz,ndirentr					                           B  1568    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 216


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
00528A 21 30 55 00         B  1569    				ld hl,fs_working_sector			00528E 34                  B  1570    				inc (hl)
                           B  1571    				
00528F CD 45 1A 00         B  1572    				call fs_get_dir_cluster			005293 7A                  B  1573    				ld a,d
005294 B3                  B  1574    				or e
005295 20 0D               B  1575    				jr nz,notrootdir
005297 3A E7 54 00         B  1576    				ld a,(fs_root_dir_sectors)		00529B BE                  B  1577    				cp (hl)							00529C C2 0F 52 00         B  1578    				jp nz,ffnnxtsec
0052A0 3EC2                B  1579    fnnotfnd		ld a,0c2h						0052A2 B7                  B  1580    				or a
0052A3 C9                  B  1581    				ret
                           B  1582    			
0052A4                     B  1583    notrootdir
                           B  1584    				
0052A4 3A D7 54 00         B  1585    				ld a,(fs_cluster_size)			0052A8 BE                  B  1586    				cp (hl)
0052A9 C2 0F 52 00         B  1587    				jp nz,ffnnxtsec
                           B  1588    				
0052AD 2A 24 55 00         B  1589    				ld hl,(fs_file_working_cluster)
0052B1 CD 0C 53 00         B  1590    				call get_fat_entry_for_cluster
0052B5 D8                  B  1591    				ret c
0052B6 CD B5 50 00         B  1592    				call fs_compare_hl_fff8			0052BA 30 E4               B  1593    				jr nc,fnnotfnd					0052BC EB                  B  1594    				ex de,hl						0052BD C3 05 52 00         B  1595    				jp ffnnxtclu					                           B  1596    				
                           B  1597    
                           B  1598    ;----------------------------------------------
                           B  1599    
0052C1                     B  1600    fs_hl_to_alt_filename
                           B  1601    
0052C1 11 FA 54 00         B  1602    				ld de,fs_alt_filename
0052C5 18 04               B  1603    				jr hltofngo
                           B  1604    
                           B  1605    
0052C7                     B  1606    fs_hl_to_filename
                           B  1607    
                           B  1608    ;INPUT: HL = address of filename (null / space 
                           B  1609    ;OUTPUT HL = address of first character after f
                           B  1610    ;        C = number of characters in filename
                           B  1611    
0052C7 11 EE 54 00         B  1612    				ld de,fs_sought_filename
0052CB CD D6 53 00         B  1613    hltofngo		call fs_clear_filename			0052CF D5                  B  1614    				push de			
0052D0 DDE1                B  1615    				pop ix							                           B  1616    				
0052D2 0E00                B  1617    				ld c,0
0052D4 0608                B  1618    				ld b,8
0052D6 7E                  B  1619    csfnlp2			ld a,(hl)						0052D7 B7                  B  1620    				or a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 217


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
0052D8 C8                  B  1621    				ret z							0052D9 FE20                B  1622    				cp 32
0052DB C8                  B  1623    				ret z							0052DC FE2F                B  1624    				cp 02fh
0052DE C8                  B  1625    				ret z							0052DF FE2E                B  1626    				cp '.'
0052E1 28 16               B  1627    				jr z,dofn_ext					0052E3 12                  B  1628    				ld (de),a
0052E4 13                  B  1629    				inc de
0052E5 23                  B  1630    				inc hl
0052E6 0C                  B  1631    				inc c							0052E7 10 ED               B  1632    				djnz csfnlp2					0052E9 7E                  B  1633    find_ext		ld a,(hl)
0052EA FE2E                B  1634    				cp '.'							0052EC 28 0B               B  1635    				jr z,dofn_ext	
0052EE FE20                B  1636    				cp ' '							0052F0 C8                  B  1637    				ret z
0052F1 FE2F                B  1638    				cp 02fh
0052F3 C8                  B  1639    				ret z
0052F4 B7                  B  1640    				or a
0052F5 C8                  B  1641    				ret z
0052F6 23                  B  1642    				inc hl
0052F7 18 F0               B  1643    				jr find_ext
                           B  1644    				
0052F9 23                  B  1645    dofn_ext		inc hl							0052FA 0603                B  1646    				ld b,3				
0052FC 7E                  B  1647    fnextlp			ld a,(hl)						0052FD B7                  B  1648    				or a
0052FE C8                  B  1649    				ret z							0052FF FE20                B  1650    				cp 32
005301 C8                  B  1651    				ret z
005302 DD7708              B  1652    				ld (ix+8),a
005305 DD23                B  1653    				inc ix
005307 23                  B  1654    				inc hl
005308 0C                  B  1655    				inc c
005309 10 F1               B  1656    				djnz fnextlp
00530B C9                  B  1657    				ret
                           B  1658    				
                           B  1659    ;----------------------------------------------
                           B  1660    
                           B  1661    
00530C                     B  1662    get_fat_entry_for_cluster
                           B  1663    
                           B  1664    ; INPUT: HL = cluster in question, OUTPUT: HL =
                           B  1665    
00530C C5                  B  1666    				push bc
00530D D5                  B  1667    				push de
00530E 01000000            B  1668    				ld bc,0
005312 4D                  B  1669    				ld c,l
005313 7C                  B  1670    				ld a,h
005314 2A DB 54 00         B  1671    				ld hl,(fs_fat1_position)
005318 CD 3A 54 00         B  1672    				call set_abs_lba_and_read_secto
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 218


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
00531C 38 17               B  1673    				jr c,hwerr
00531E DDE5                B  1674    				push ix
005320 DD21 96 66 00       B  1675    				ld ix,sector_buffer
005325 DD09                B  1676    				add ix,bc
005327 DD09                B  1677    				add ix,bc
005329 21000000            B  1678    				ld hl,0
00532D DD6E00              B  1679    				ld l,(ix)
005330 DD6601              B  1680    				ld h,(ix+1)
005333 DDE1                B  1681    				pop ix
005335 D1                  B  1682    hwerr			pop de
005336 C1                  B  1683    				pop bc
005337 C9                  B  1684    				ret
                           B  1685    
                           B  1686    
                           B  1687    ;----------------------------------------------
                           B  1688    
                           B  1689    
005338                     B  1690    update_fat_entry_for_cluster
                           B  1691    
                           B  1692    ; INPUT: HL = cluster in question
                           B  1693    ;        DE = new value to put in FAT tables
                           B  1694    			
005338 C5                  B  1695    				push bc
005339 E5                  B  1696    				push hl
00533A 01000000            B  1697    				ld bc,0
00533E 4D                  B  1698    				ld c,l
00533F 7C                  B  1699    				ld a,h
005340 2A DB 54 00         B  1700    				ld hl,(fs_fat1_position)		005344 CD 58 53 00         B  1701    				call fat_upd
005348 38 0B               B  1702    				jr c,fup_end
                           B  1703    			
00534A E1                  B  1704    				pop hl
00534B E5                  B  1705    				push hl
00534C 7C                  B  1706    				ld a,h
00534D 2A DE 54 00         B  1707    				ld hl,(fs_fat2_position)		005351 CD 58 53 00         B  1708    				call fat_upd
005355 E1                  B  1709    fup_end			pop hl
005356 C1                  B  1710    				pop bc
005357 C9                  B  1711    				ret
                           B  1712    			
                           B  1713    			
005358 CD 3A 54 00         B  1714    fat_upd			call set_abs_lba_and_read_secto
00535C 38 0D               B  1715    				jr c,ufehwerr
00535E 21 96 66 00         B  1716    				ld hl,sector_buffer
005362 09                  B  1717    				add hl,bc
005363 09                  B  1718    				add hl,bc
005364 73                  B  1719    				ld (hl),e
005365 23                  B  1720    				inc hl
005366 72                  B  1721    				ld (hl),d
005367 CD 7C 54 00         B  1722    				call fs_write_sector
00536B C9                  B  1723    ufehwerr		ret
                           B  1724    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 219


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B  1725    	
                           B  1726    ;----------------------------------------------
                           B  1727    
00536C                     B  1728    transfer_length_countdown
                           B  1729    
00536C E5                  B  1730    				push hl							00536D C5                  B  1731    				push bc
                           B  1732    			
00536E 0604                B  1733    				ld b,4
005370 21 12 55 00         B  1734    				ld hl,fs_file_pointer			005374 34                  B  1735    fpinclp			inc (hl)
005375 20 03               B  1736    				jr nz,fs_fpino
005377 23                  B  1737    				inc hl
005378 10 FA               B  1738    				djnz fpinclp
                           B  1739    				
00537A 2A 1E 55 00         B  1740    fs_fpino		ld hl,(fs_file_transfer_length)
00537E 2B                  B  1741    				dec hl
00537F 22 1E 55 00         B  1742    				ld (fs_file_transfer_length),hl
005383 01000000            B  1743    				ld bc,0
005387 B7                  B  1744    				or a
005388 ED4A                B  1745    				adc hl,bc						                           B  1746    				
00538A C1                  B  1747    				pop bc
00538B E1                  B  1748    				pop hl
00538C C9                  B  1749    				ret
                           B  1750    
                           B  1751    ;----------------------------------------------
                           B  1752    
00538D                     B  1753    fs_get_current_dir_name
                           B  1754    
                           B  1755    ;returns current dir name - location at HL
                           B  1756    
00538D CD 45 1A 00         B  1757    				call fs_get_dir_cluster			005391 7A                  B  1758    				ld a,d
005392 B3                  B  1759    				or e
005393 20 10               B  1760    				jr nz,fs_dnnr
005395 21 72 5F 00         B  1761    				ld hl,vol_txt+1					005399 3A 6D 5F 00         B  1762    				ld a,(current_volume)
00539D C630                B  1763    				add a,030h
00539F 32 75 5F 00         B  1764    				ld (vol_txt+4),a
0053A3 AF                  B  1765    				xor a
0053A4 C9                  B  1766    				ret
                           B  1767    					
0053A5 ED53 48 55 00       B  1768    fs_dnnr			ld (fs_stash_dir_block),de
0053AA CD 45 4A 00         B  1769    				call fs_parent_dir_command		0053AE D8                  B  1770    				ret c
0053AF B7                  B  1771    				or a
0053B0 C0                  B  1772    				ret nz
0053B1 3E01                B  1773    				ld a,1
0053B3 CD FD 51 00         B  1774    				call fs_search					0053B7 D8                  B  1775    				ret c
0053B8 C0                  B  1776    				ret nz
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 220


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B  1777    					
0053B9 DDE5                B  1778    fs_gdbn			push ix
0053BB E1                  B  1779    				pop hl
0053BC 060B                B  1780    				ld b,11							0053BE 7E                  B  1781    ntdirn			ld a,(hl)
0053BF FE20                B  1782    				cp ' '
0053C1 28 03               B  1783    				jr z,rdirfsp
0053C3 23                  B  1784    				inc hl
0053C4 10 F8               B  1785    rdirnsp			djnz ntdirn
                           B  1786    				
0053C6 3600                B  1787    rdirfsp			ld (hl),0
0053C8 DDE5                B  1788    				push ix
0053CA ED5B 48 55 00       B  1789    				ld de,(fs_stash_dir_block)
0053CF CD 51 1A 00         B  1790    				call fs_update_dir_cluster		0053D3 E1                  B  1791    				pop hl	
0053D4 AF                  B  1792    				xor a							0053D5 C9                  B  1793    				ret
                           B  1794    
                           B  1795    ;----------------------------------------------
                           B  1796    
0053D6                     B  1797    fs_clear_filename
                           B  1798    
0053D6 D5                  B  1799    				push de							0053D7 C5                  B  1800    				push bc
0053D8 060C                B  1801    				ld b,12
0053DA 3E20                B  1802    				ld a,' '
0053DC 12                  B  1803    clrfnlp			ld (de),a
0053DD 13                  B  1804    				inc de
0053DE 10 FC               B  1805    				djnz clrfnlp
0053E0 C1                  B  1806    				pop bc
0053E1 D1                  B  1807    				pop de
0053E2 C9                  B  1808    				ret
                           B  1809    				
                           B  1810    ;----------------------------------------------
                           B  1811    
                           B  1812    
0053E3                     B  1813    cluster_and_offset_to_lba
                           B  1814    
                           B  1815    ; INPUT: HL = cluster, A = sector offset, OUTPU
                           B  1816    
0053E3 C5                  B  1817    				push bc
0053E4 D5                  B  1818    				push de
0053E5 E5                  B  1819    				push hl
0053E6 DDE5                B  1820    				push ix
                           B  1821    
0053E8 2B                  B  1822    				dec hl							0053E9 2B                  B  1823    				dec hl							0053EA 11000000            B  1824    				ld de,0							0053EE 01000000            B  1825    				ld bc,0
0053F2 5F                  B  1826    				ld e,a
0053F3 3A D7 54 00         B  1827    				ld a,(fs_cluster_size)			0053F7 CB3F                B  1828    caotllp			srl a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 221


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
0053F9 28 03               B  1829    				jr z,clusdone
0053FB 29                  B  1830    				add hl,hl						0053FC 18 F9               B  1831    				jr caotllp
                           B  1832    			
0053FE ED4B E4 54 00       B  1833    clusdone		ld bc,(fs_data_area)			005403 09                  B  1834    				add hl,bc						005404 19                  B  1835    				add hl,de						                           B  1836    				
005405 E5                  B  1837    add_ptn_offset	push hl							005406 CD 7F 1A 00         B  1838    				call fs_calc_volume_offset
00540A DD21 9F 5F 00       B  1839    				ld ix,volume_mount_list
00540F DD19                B  1840    				add ix,de
005411 E1                  B  1841    				pop hl
005412 DD0708              B  1842    				ld bc,(ix+08h)					005415 DD7E0B              B  1843    				ld a,(ix+0bh)
005418 09                  B  1844    				add hl,bc
005419 CE00                B  1845    				adc a,0
00541B 22 44 61 00         B  1846    				ld (sector_lba0),hl				00541F 32 47 61 00         B  1847    				ld (sector_lba3),a				                           B  1848    				
005423 DDE1                B  1849    				pop ix
005425 E1                  B  1850    				pop hl
005426 D1                  B  1851    				pop de
005427 C1                  B  1852    				pop bc
005428 C9                  B  1853    				ret
                           B  1854    				
                           B  1855    
                           B  1856    ;----------------------------------------------
                           B  1857    
005429                     B  1858    set_absolute_lba
                           B  1859    
                           B  1860    ; set A to sector offset, HL to sectors from st
                           B  1861    
005429 C5                  B  1862    				push bc							00542A D5                  B  1863    				push de							00542B E5                  B  1864    				push hl							00542C DDE5                B  1865    				push ix							00542E 01000000            B  1866    				ld bc,0
005432 11000000            B  1867    				ld de,0
005436 5F                  B  1868    				ld e,a
005437 19                  B  1869    				add hl,de
005438 18 CB               B  1870    				jr add_ptn_offset		
                           B  1871    				
                           B  1872    
00543A                     B  1873    set_abs_lba_and_read_sector
                           B  1874    
00543A CD 29 54 00         B  1875    				call set_absolute_lba
00543E C3 64 54 00         B  1876    				jp fs_read_sector
                           B  1877    				
                           B  1878    ;----------------------------------------------
                           B  1879    
                           B  1880    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 222


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
005442                     B  1881    backup_sector_lba
                           B  1882    
005442 C5                  B  1883    				push bc
005443 D5                  B  1884    				push de
005444 E5                  B  1885    				push hl
005445 21 44 61 00         B  1886    				ld hl,sector_lba0
005449 11 4C 55 00         B  1887    				ld de,fs_backed_up_sector_lba0
00544D 01040000            B  1888    lbabur			ld bc,4
005451 EDB0                B  1889    				ldir
005453 E1                  B  1890    				pop hl
005454 D1                  B  1891    				pop de
005455 C1                  B  1892    				pop bc
005456 C9                  B  1893    				ret
                           B  1894    
                           B  1895    
005457                     B  1896    restore_sector_lba
                           B  1897    
005457 C5                  B  1898    				push bc
005458 D5                  B  1899    				push de
005459 E5                  B  1900    				push hl
00545A 21 4C 55 00         B  1901    				ld hl,fs_backed_up_sector_lba0
00545E 11 44 61 00         B  1902    				ld de,sector_lba0
005462 18 E9               B  1903    				jr lbabur	
                           B  1904    					
                           B  1905    ;----------------------------------------------
                           B  1906    
005464                     B  1907    fs_read_sector
                           B  1908    			
005464 C5                  B  1909    				push bc
005465 D5                  B  1910    				push de
005466 E5                  B  1911    				push hl
005467 DDE5                B  1912    				push ix
005469 FDE5                B  1913    				push iy
00546B 01040000            B  1914    				ld bc,04h						00546F CD 8D 54 00         B  1915    				call sector_access_redirect
005473 FDE1                B  1916    secaccend		pop iy
005475 DDE1                B  1917    				pop ix
005477 E1                  B  1918    				pop hl
005478 D1                  B  1919    				pop de
005479 C1                  B  1920    				pop bc
00547A 3F                  B  1921    				ccf								00547B C9                  B  1922    				ret								                           B  1923    
                           B  1924    
00547C                     B  1925    fs_write_sector	
                           B  1926    				
00547C C5                  B  1927    				push bc
00547D D5                  B  1928    				push de
00547E E5                  B  1929    				push hl
00547F DDE5                B  1930    				push ix
005481 FDE5                B  1931    				push iy
005483 01080000            B  1932    				ld bc,08h						Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 223


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
005487 CD 8D 54 00         B  1933    				call sector_access_redirect
00548B 18 E6               B  1934    				jr secaccend
                           B  1935    
                           B  1936    
                           B  1937    
00548D                     B  1938    sector_access_redirect
                           B  1939    
                           B  1940    	
00548D 3A 6E 5F 00         B  1941    				ld a,(current_driver)			005491 CD 17 1A 00         B  1942    				call locate_driver_base			005495 EB                  B  1943    				ex de,hl
005496 09                  B  1944    				add hl,bc						005497 E9                  B  1945    				jp (hl)
                           B  1946    
                           B  1947    ;----------------------------------------------
                           B  1948    	
005498                     B  1949    bootsector_stub
                           B  1950    
005498 EB3C904D 53444F53   B  1951    				db  0EBh,03Ch,090h,04Dh,053h,04
0054A0 352E3000 02004000 
0054A8 02000200 00F8F200   B  1952    				db  002h,000h,002h,000h,000h,0F
0054B0 3F00FF00 00000000 
0054B8 00000000 000029C4   B  1953    				db  000h,000h,000h,000h,000h,00
0054C0 E636984E 4F204E41 
0054C8 4D452020 20204641   B  1954    				db  04Dh,045h,020h,020h,020h,02
0054D0 54313620 2020C3 
                           B  1955    
                           B  1956    ;----------------------------------------------
                           B  1957    
0054D7 00                  B  1958    fs_cluster_size				db 0
0054D8 000000              B  1959    fs_bytes_per_cluster		dw24 0
0054DB 000000              B  1960    fs_fat1_position			dw24 0		; offse
0054DE 000000              B  1961    fs_fat2_position			dw24 0		; offse
0054E1 000000              B  1962    fs_root_dir_position		dw24 0		; offse
0054E4 000000              B  1963    fs_data_area				dw24 0		; offse
0054E7 00                  B  1964    fs_root_dir_sectors			db 0
                           B  1965    
0054E8 000000              B  1966    fs_sectors_per_fat			dw24 0
0054EB 000000              B  1967    fs_max_data_clusters		dw24 0
                           B  1968    
0054EE 00 00 00 00 00 00   B  1969    fs_sought_filename			blkb 12,0
0054F4 00 00 00 00 00 00 
0054FA 00 00 00 00 00 00   B  1970    fs_alt_filename				blkb 12,0
005500 00 00 00 00 00 00 
005506 00 00 00 00 00 00   B  1971    fs_filename_buffer			blkb 12,0
00550C 00 00 00 00 00 00 
                           B  1972    
005512 00000000            B  1973    fs_file_pointer				dw 0,0		; 32 bi
005516 00000000            B  1974    fs_file_length				dw 0,0		; 32 bi
00551A 00000000            B  1975    fs_existing_file_length 	dw 0,0		; 32 bi
                           B  1976    
00551E 000000              B  1977    fs_file_transfer_length		dw24 0		; 24 bi
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 224


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B  1978    
005521 000000              B  1979    fs_file_start_cluster		dw24 0
005524 000000              B  1980    fs_file_working_cluster		dw24 0
                           B  1981    
005527 000000              B  1982    fs_ez80_address				dw24 0
00552A 000000              B  1983    fs_ez80_working_address		dw24 0
                           B  1984    
00552D 000000              B  1985    fs_in_sector_offset			dw24 0
005530 00                  B  1986    fs_working_sector			db 0
                           B  1987    
005531 000000              B  1988    fs_working_cluster			dw24 0
005534 000000              B  1989    fs_free_cluster				dw24 0
005537 000000              B  1990    fs_new_file_cluster			dw24 0
                           B  1991    
00553A 000000              B  1992    fs_fname_in_sector_addr		dw24 0
                           B  1993    
00553D 000000              B  1994    fs_dir_entry_cluster		dw24 0
005540 000000              B  1995    fs_dir_entry_line_offset	dw24 0
005543 00                  B  1996    fs_dir_entry_sector			db 0
                           B  1997    
005544 00                  B  1998    fs_filepointer_valid		db 0
005545 000000              B  1999    fs_sector_pos_cnt			dw24 0
                           B  2000    
005548 000000              B  2001    fs_stash_dir_block	 		dw24 0
                           B  2002    
00554B 00                  B  2003    fs_search_type				db 0
                           B  2004    
00554C 00000000            B  2005    fs_backed_up_sector_lba0	db 0,0,0,0
                           B  2006    
                           B  2007    ;----------------------------------------------
                           B  2008    
                           A  3103    
                           A  3104    ;----------------------------------------------
                           A  3105    ; OS Data 
                           A  3106    ;----------------------------------------------
                           A  3107    
                           B     0    	include		'prose_data.asm'				                           B     1    ;**************
                           B     2    ;* PROSE DATA *
                           B     3    ;**************
                           B     4    
                           B     5    ;----------------------------------------------
                           B     6    ; kernal routine locations
                           B     7    ;----------------------------------------------
                           B     8    
005550                     B     9    kernal_table
                           B    10    
005550 111800              B    11    	dw24 ext_mount_volumes			;00		
005553 BF1700              B    12    	dw24 os_get_device_info			;01		
005556 751600              B    13    	dw24 os_check_volume_format		;02		
005559 A01A00              B    14    	dw24 ext_change_volume			;03		
00555C D21700              B    15    	dw24 os_get_volume_info			;04		
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 225


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
00555F 7F1600              B    16    	dw24 ext_format					;05		
005562 B11600              B    17    	dw24 ext_make_dir				;06		
005565 BF1600              B    18    	dw24 ext_change_dir				;07		
005568 CD1600              B    19    	dw24 os_parent_dir				;08		
00556B D31600              B    20    	dw24 os_root_dir				;09		
00556E 1B1700              B    21    	dw24 ext_delete_dir				;0a		
005571 041600              B    22    	dw24 ext_find_file				;0b		
005574 201600              B    23    	dw24 ext_set_file_pointer		;0c		
005577 191600              B    24    	dw24 os_set_load_length			;0d		
00557A 331600              B    25    	dw24 ext_read_bytes_from_file	;0e		
00557D D91600              B    26    	dw24 ext_erase_file				;0f		
005580 011700              B    27    	dw24 ext_rename_file			;10		
005583 431600              B    28    	dw24 ext_create_file			;11		
005586 551600              B    29    	dw24 ext_write_bytes_to_file	;12		
005589 6E1A00              B    30    	dw24 fs_get_total_sectors		;13		
00558C E71600              B    31    	dw24 os_goto_first_dir_entry	;14		 
00558F ED1600              B    32    	dw24 os_get_dir_entry			;15		
005592 F31600              B    33    	dw24 os_goto_next_dir_entry		;16		
005595 2B1700              B    34    	dw24 ext_read_sector			;17		
005598 591700              B    35    	dw24 ext_write_sector			;18		
00559B DC1A00              B    36    	dw24 ext_file_sector_list		;19		
00559E 451A00              B    37    	dw24 fs_get_dir_cluster			;1a		
0055A1 511A00              B    38    	dw24 fs_update_dir_cluster		;1b		
0055A4 F91600              B    39    	dw24 os_get_current_dir_name	;1c		
                           B    40    
0055A7 584400              B    41    	dw24 os_wait_key_press			;1d		
0055AA B34400              B    42    	dw24 os_get_key_press			;1e		
0055AD 421500              B    43    	dw24 os_get_key_mod_flags		;1f		
                           B    44    
0055B0 E01700              B    45    	dw24 ext_serial_get_header		;20		
0055B3 EA1700              B    46    	dw24 ext_serial_receive_file	;21		 
0055B6 F31700              B    47    	dw24 ext_serial_send_file		;22		 
0055B9 001800              B    48    	dw24 ext_serial_tx				;23		
0055BC 071800              B    49    	dw24 ext_serial_rx				;24		
                           B    50    
0055BF 110F00              B    51    	dw24 ext_print_string			;25		
0055C2 703D00              B    52    	dw24 hwsc_clear_screen			;26		
0055C5 424100              B    53    	dw24 hwsc_wait_vrt				;27		
0055C8 C71300              B    54    	dw24 os_set_cursor_position		;28		
0055CB 401A00              B    55    	dw24 ext_plot_char				;29		
0055CE 5E1500              B    56    	dw24 ext_set_pen				;2a		
0055D1 6B1500              B    57    	dw24 ext_background_colours		;2b		
0055D4 9D3F00              B    58    	dw24 hwsc_draw_cursor			;2c		
0055D7 651500              B    59    	dw24 os_get_pen					;2d		
0055DA B93D00              B    60    	dw24 hwsc_scroll_up				;2e		
0055DD 103D00              B    61    	dw24 os_set_video_hw_regs		;2f		
0055E0 481500              B    62    	dw24 os_get_display_size		;30		
0055E3 324000              B    63    	dw24 hwsc_get_charmap_addr_xy	;31		
0055E6 E71300              B    64    	dw24 os_get_cursor_position		;32		 
                           B    65    
0055E9 441B00              B    66    	dw24 ext_set_envar				;33		
0055EC 081B00              B    67    	dw24 ext_get_envar				;34		
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 226


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
0055EF 9E1B00              B    68    	dw24 ext_delete_envar			;35		
                           B    69    
0055F2 3D1400              B    70    	dw24 os_set_mouse_window		;36		
0055F5 831400              B    71    	dw24 os_get_mouse_position		;37		
0055F8 5A1400              B    72    	dw24 os_get_mouse_motion		;38		
                           B    73    
0055FB B04100              B    74    	dw24 hwsc_time_delay			;39		
0055FE DB1100              B    75    	dw24 ext_compare_strings		;3a		
005601 5A1000              B    76    	dw24 ext_hexbyte_to_ascii		;3b		
005604 8F1000              B    77    	dw24 ext_ascii_to_hexword		;3c		
005607 E41000              B    78    	dw24 ext_user_input				;3d		
                           B    79    
00560A 954100              B    80    	dw24 hwsc_get_version			;3e		
00560D B11300              B    81    	dw24 os_dont_store_registers	;3f		
005610 F51B00              B    82    	dw24 os_get_font_info			;40 	
005613 D34100              B    83    	dw24 hwsc_read_rtc				;41     
005616 FB4100              B    84    	dw24 hwsc_write_rtc				;42		 
005619 EF1B00              B    85    	dw24 os_get_keymap_location		;43		 
00561C 533600              B    86    	dw24 os_get_mem_high			;44
                           B    87    	
                           B    88    ;----------------------------------------------
                           B    89    ; Non-packed Text Strings
                           B    90    ;----------------------------------------------
                           B    91    
00561F 50524F53 4520666F   B    92    welcome_message			db "PROSE for EZ80P by 
005627 7220455A 38305020 
00562F 62792050 68696C20 
005637 52757374 6F6E2032 
00563F 3031310B 0B 
005644 53595354 454D2052   B    93    						db "SYSTEM RAM free abo
00564C 414D2066 72656520 
005654 61626F76 653A2024 
00565C 00 
00565D 44726976 65733A0B   B    94    storage_txt				db "Drives:",11,0
005665 00 
005666 434F4D4D 414E4453   B    95    os_dos_cmds_txt			db "COMMANDS",0
00566E 00 
00566F 53544152 5455502E   B    96    startup_script_fn		db "STARTUP.SCR",0
005677 53435200 
00567B 2400                B    97    os_hex_prefix_txt		db "$",0
00567D 4F532056 65727369   B    98    os_version_txt			db "OS Version: $",0	005685 6F6E3A20 2400 
00568B 414D4F45 42412048   B    99    hw_version_txt			db "AMOEBA HW Version: 
005693 57205665 7273696F 
00569B 6E3A2024 00 
0056A0 202F2000            B   100    fwd_slash_txt			db " / ",0
0056A4 4C6F6164 696E672E   B   101    loading_txt				db "Loading..",11,0
0056AC 2E0B00 
0056AF 53617669 6E672E2E   B   102    saving_txt				db "Saving..",11,0
0056B7 0B00 
0056B9 2E657A70 20         B   103    ezp_extension_txt		db ".ezp",32
0056BE 0B4D6F72 653F0B0B   B   104    os_more_txt				db 11,"More?",11,11,0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 227


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
0056C6 00 
0056C7 52656769 73746572   B   105    nmi_freeze_txt			db "Register Dump:"
0056CF 2044756D 703A 
0056D5 0B0B00              B   106    crlfx2_txt				db 11,11,0
0056D8 7800                B   107    rep_char_txt			db "x",0
0056DA 20746F20 00         B   108    to_txt					db " to ",0
0056DF 4552524F 5200       B   109    error_txt				db "ERROR",0
0056E5 494620              B   110    if_command_txt			db "IF "
0056E8 454E4420            B   111    end_command_txt			db "END "
                           B   112    
                           B   113    ;----------------------------------------------
                           B   114    ; Packed text section
                           B   115    ;----------------------------------------------
                           B   116    
0056EC 00444542 5547       B   117    dictionary				db 0,"DEBUG"			0056F2 002D2D2D 2D2D       B   118    						db 0,"-----"			0056F8 00494F              B   119    						db 0,"IO"				0056FB 002D2D              B   120    						db 0,"--"				0056FE 004D4953 43         B   121    						db 0,"MISC"				005703 002D2D2D 2D         B   122    						db 0,"----"				005708 00616464 72         B   123    						db 0,"addr"				00570D 0050524F 5345       B   124    						db 0,"PROSE"			005713 00612062 2063       B   125    						db 0,"a b c"			005719 00416464 72657373   B   126    						db 0,"Address"			005721 00427974 6573       B   127    						db 0,"Bytes"			005727 00457865 63757461   B   128    						db 0,"Executable"		00572F 626C65 
005732 0048756E 74         B   129    						db 0,"Hunt"				005737 0046696C 6C         B   130    						db 0,"Fill"				00573C 00476F74 6F         B   131    						db 0,"Goto"				                           B   132    						
005741 0053686F 77         B   133    						db 0,"Show"				005746 00435055            B   134    						db 0,"CPU"				00574A 00526567 69737465   B   135    						db 0,"Registers"		005752 7273 
005754 004173              B   136    						db 0,"As"				005757 00415343 4949       B   137    						db 0,"ASCII"			00575D 00436C65 6172       B   138    						db 0,"Clear"			005763 00536372 65656E     B   139    						db 0,"Screen"			00576A 00446973 61737365   B   140    						db 0,"Disassemble"		005772 6D626C65 
005776 00537769 746368     B   141    						db 0,"Switch"			00577D 00436F70 79         B   142    						db 0,"Copy"				005782 00446576 696365     B   143    						db 0,"Device"			005789 00436861 6E6765     B   144    						db 0,"Change"			005790 00447269 7665       B   145    						db 0,"Drive"			005796 00446972            B   146    						db 0,"Dir"				00579A 002F                B   147    						db 0,"/"				00579C 00666E              B   148    						db 0,"fn"				                           B   149    						
00579F 0044656C 657465     B   150    						db 0,"Delete"			0057A6 0046696C 65         B   151    						db 0,"File"				Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 228


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
0057AB 00496E66 6F         B   152    						db 0,"Info"				0057B0 00564F4C 783A       B   153    						db 0,"VOLx:"			0057B6 004D616B 65         B   154    						db 0,"Make"				0057BB 0052656D 6F756E74   B   155    						db 0,"Remount"			0057C3 00537461 7274       B   156    						db 0,"Start"			0057C9 00576172 6E696E67   B   157    						db 0,"Warning!"			0057D1 21 
0057D2 00416C6C            B   158    						db 0,"All"				0057D6 0052656D 6F7665     B   159    						db 0,"Remove"			0057DD 0052656E 616D65     B   160    						db 0,"Rename"			0057E4 004F72              B   161    						db 0,"Or"				0057E7 00526563 65697665   B   162    						db 0,"Receive"			0057EF 00536176 65         B   163    						db 0,"Save"				0057F4 00547261 6E736D69   B   164    						db 0,"Transmit"			0057FC 74 
0057FD 004C6F61 64         B   165    						db 0,"Load"				                           B   166    						
005802 004F532F 4857       B   167    						db 0,"OS/HW"			005808 00566572 73696F6E   B   168    						db 0,"Version"			005810 005B7065 6E207061   B   169    						db 0,"[pen paper]"		005818 7065725D 
00581C 803A                B   170    						db 80h,":"				00581E 813E                B   171    						db 81h,">"				005820 002A                B   172    						db 0,"*"				005822 00566F6C 756D6573   B   173    						db 0,"Volumes"			00582A 8343                B   174    						db 83h,"C"				00582C 844344              B   175    						db 84h,"CD"				00582F 85434C53            B   176    						db 85h,"CLS"			005833 8650454E            B   177    						db 86h,"PEN"			005837 8744                B   178    						db 87h,"D"				005839 8844454C            B   179    						db 88h,"DEL"			00583D 89444952            B   180    						db 89h,"DIR"			005841 8A48                B   181    						db 8ah,"H"				005843 8B46                B   182    						db 8bh,"F"				                           B   183    						
005845 004F6E              B   184    						db 0,"On"				005848 8C464F52 4D4154     B   185    						db 8ch,"FORMAT"			00584F 0047                B   186    						db 0,"G"				005851 8D4C42              B   187    						db 8dh,"LB"				005854 8E4D                B   188    						db 8eh,"M"				005856 8F4D4F55 4E54       B   189    						db 8fh,"MOUNT"			00585C 004265              B   190    						db 0,"Be"				00585F 9052                B   191    						db 90h,"R"				005861 915244              B   192    						db 91h,"RD"				005864 92524E              B   193    						db 92h,"RN"				005867 935258              B   194    						db 93h,"RX"				00586A 945342              B   195    						db 94h,"SB"				00586D 9554                B   196    						db 95h,"T"				00586F 965458              B   197    						db 96h,"TX"				005872 97564552 53         B   198    						db 97h,"VERS"			005877 00577269 7465       B   199    						db 0,"Write"			                           B   200    						
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 229


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
00587D 004D656D            B   201    						db 0,"Mem"				005881 00227478 7422       B   202    						db 0,22h,"txt",22h		005887 0057696C 6C         B   203    						db 0,"Will"				00588C 00526174 65         B   204    						db 0,"Rate"				005891 0061                B   205    						db 0,"a"				005893 00507265 70         B   206    						db 0,"Prep"				005898 984D44              B   207    						db 98h,"MD"				00589B 00447269 766573     B   208    						db 0,"Drives"			0058A2 006F6C64 666E       B   209    						db 0,"oldfn"			0058A8 006E6577 666E       B   210    						db 0,"newfn"			0058AE 006C656E            B   211    						db 0,"len"				0058B2 00436F6C 6F757273   B   212    						db 0,"Colours"			0058BA 993F                B   213    						db 99h,"?"				0058BC 00436F6D 6D616E64   B   214    						db 0,"Commands"			0058C4 73 
0058C5 0020                B   215    						db 0," "				0058C7 002D                B   216    						db 0,"-"				                           B   217    						
0058C9 00566F6C 756D65     B   218    						db 0,"Volume"			0058D0 0046756C 6C         B   219    						db 0,"Full"				0058D5 004E6F74            B   220    						db 0,"Not"				0058D9 00466F75 6E64       B   221    						db 0,"Found"			0058DF 004C656E 677468     B   222    						db 0,"Length"			0058E6 005A6572 6F         B   223    						db 0,"Zero"				0058EB 004F7574            B   224    						db 0,"Out"				0058EF 004F66              B   225    						db 0,"Of"				0058F2 0052616E 6765       B   226    						db 0,"Range"			0058F8 00416C72 65616479   B   227    						db 0,"Already"			005900 00457869 737473     B   228    						db 0,"Exists"			005907 004174              B   229    						db 0,"At"				00590A 00526F6F 74         B   230    						db 0,"Root"				00590F 004D6973 6D617463   B   231    						db 0,"Mismatch"			005917 68 
005918 00526571 75657374   B   232    						db 0,"Request"			005920 00446174 61         B   233    						db 0,"Data"				                           B   234    				
005925 00454F46            B   235    						db 0,"EOF"				005929 00416674 6572       B   236    						db 0,"After"			00592F 00556E6B 6E6F776E   B   237    						db 0,"Unknown"			005937 00436F6D 6D616E64   B   238    						db 0,"Command"			00593F 00426164            B   239    						db 0,"Bad"				005943 00486578            B   240    						db 0,"Hex"				005947 004E6F              B   241    						db 0,"No"				00594A 0041626F 72746564   B   242    						db 0,"Aborted"			005952 00507265 73656E74   B   243    						db 0,"Present"			00595A 00436865 636B7375   B   244    						db 0,"Checksum"			005962 6D 
005963 004C6F61 646564     B   245    						db 0,"Loaded"			00596A 00436F6D 6D73       B   246    						db 0,"Comms"			005970 00457272 6F72       B   247    						db 0,"Error"			005976 00417267 756D656E   B   248    						db 0,"Arguments"		00597E 7473 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 230


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005980 004C6F73 74         B   249    						db 0,"Lost"				                           B   250    						
005985 00                  B   251    						db 0
005986 46415431 36         B   252    fat16_txt				db "FAT16"				                           B   253    
00598B 00536572 69616C     B   254    						db 0,"Serial"			005992 0054696D 65         B   255    						db 0,"Time"				005997 00466F6E 74         B   256    						db 0,"Font"				00599C 00546F6F            B   257    						db 0,"Too"				0059A0 004C6F6E 67         B   258    						db 0,"Long"				0059A5 00446573 74696E61   B   259    						db 0,"Destination"		0059AD 74696F6E 
0059B1 0053656C 65637465   B   260    						db 0,"Selected"			0059B9 64 
0059BA 00496E76 616C6964   B   261    						db 0,"Invalid"			0059C2 004D6973 73696E67   B   262    						db 0,"Missing"			0059CA 004F4B              B   263    						db 0,"OK"				0059CD 004F53              B   264    						db 0,"OS"				0059D0 0050726F 74656374   B   265    						db 0,"Protected"		0059D8 6564 
0059DA 0041                B   266    						db 0,"A"				0059DC 004973              B   267    						db 0,"Is"				0059DF 00456D70 7479       B   268    						db 0,"Empty"			0059E5 00456E64            B   269    						db 0,"End"				                           B   270    						
0059E9 0024                B   271    						db 0,"$"
0059EB 7878                B   272    hex_byte_txt			db "xx"					                           B   273    						
0059ED 00417070 656E64     B   274    						db 0,"Append"			0059F4 003F                B   275    						db 0,"?"				0059F6 0024                B   276    						db 0,"$"				0059F8 00417761 6974696E   B   277    						db 0,"Awaiting"			005A00 67 
005A01 00526563 65697669   B   278    						db 0,"Receiving"		005A09 6E67 
005A0B 0053656E 64696E67   B   279    						db 0,"Sending"			005A13 000B                B   280    						db 0,11					005A15 002E2E              B   281    						db 0,".."				005A18 004E616D 65         B   282    						db 0,"Name"				005A1D 00204279 746573     B   283    						db 0," Bytes"			005A24 00507265 7373       B   284    						db 0,"Press"			005A2A 00416E79            B   285    						db 0,"Any"				005A2E 004B6579            B   286    						db 0,"Key"				005A32 00456E74 6572       B   287    						db 0,"Enter"			005A38 9A455845 43         B   288    						db 9ah,"EXEC"			                           B   289    				
005A3D 0052756E            B   290    						db 0,"Run"				005A41 00536372 697074     B   291    						db 0,"Script"			005A48 00594553            B   292    yes_txt					db 0,"YES" 				005A4C 00546F              B   293    						db 0,"To"				005A4F 00536574            B   294    						db 0,"Set"				005A53 00436F6E 74696E75   B   295    						db 0,"Continue"			Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 231


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005A5B 65 
005A5C 004E6F6E 65         B   296    						db 0,"None"				005A61 00447269 766572     B   297    						db 0,"Driver"			005A68 9B3C                B   298    						db 9bh,"<"				005A6A 004E6577 6572       B   299    						db 0,"Newer"			005A70 00526571 75697265   B   300    						db 0,"Required"			005A78 64 
005A79 00465047 4120636F   B   301    						db 0,"FPGA config"		005A81 6E666967 
005A85 00556E63 68616E67   B   302    						db 0,"Unchanged"		005A8D 6564 
005A8F 0020                B   303    						db 0," "				005A91 9C50414C 45545445   B   304    						db 9ch,"PALETTE"		005A99 0070616C 65747465   B   305    						db 0,"palette"			                           B   306    						
005AA1 9D4D4F55 5345       B   307    						db 9dh,"MOUSE"			005AA7 00456E61 626C65     B   308    						db 0,"Enable"			005AAE 004B6579 626F6172   B   309    						db 0,"Keyboard"			005AB6 64 
005AB7 00446574 65637465   B   310    						db 0,"Detected"			005ABF 64 
005AC0 004D6F75 7365       B   311    						db 0,"Mouse"			005AC6 00536563 746F72     B   312    						db 0,"Sector"			005ACD 00496E63 6F727265   B   313    						db 0,"Incorrect"		005AD5 6374 
005AD7 9E564D4F 4445       B   314    						db 9eh,"VMODE"			005ADD 00566964 656F       B   315    						db 0,"Video"			005AE3 004D6F64 65         B   316    						db 0,"Mode"				005AE8 9F464F4E 54         B   317    						db 9fh,"FONT"			005AED 00416E64            B   318    						db 0,"And"				005AF1 00536176 696E67     B   319    						db 0,"Saving"			005AF8 00556E73 7570706F   B   320    						db 0,"Unsupported"		005B00 72746564 
005B04 A0534554            B   321    						db 0a0h,"SET"			005B08 005B7661 723D7374   B   322    						db 0,"[var=string]"		005B10 72696E67 5D 
                           B   323    
005B15 00456E76 6172       B   324    						db 0,"Envar"			005B1B A1445A              B   325    						db 0a1h,"DZ"			005B1E 0041444C            B   326    						db 0,"ADL"				005B22 005A3830            B   327    						db 0,"Z80"				                           B   328    						
005B26 0001                B   329    						db 0,1					                           B   330    
                           B   331    
                           B   332    
                           B   333    
                           B   334    
005B28 2199696A 5F916F92   B   335    save_append_msg			db 021h,099h,069h,06ah,
005B30 9700 
005B32 2F0A9300            B   336    os_loadaddress_msg 		db 02fh,00ah,093h,0		005B36 21649300            B   337    os_filesize_msg			db 021h,064h,093h,0		Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 232


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005B3A 94219700            B   338    ser_rec_msg				db 094h,021h,097h,0		005B3E 956F9897 00         B   339    ser_rec2_msg			db 095h,06fh,098h,097h,
005B43 966F9897 00         B   340    ser_send_msg			db 096h,06fh,098h,097h,
005B48 9521BBBC 989700     B   341    ser_recsave_msg			db 095h,021h,0bbh,0bch,
005B4F A77C9097 00         B   342    hw_err_msg				db 0a7h,07ch,090h,097h,
005B54 607C00              B   343    disk_err_msg			db 060h,07ch,0			005B57 A1779797 00         B   344    script_aborted_msg		db 0a1h,077h,097h,097h,
005B5C 76B2B397 00         B   345    no_keyboard_msg			db 076h,0b2h,0b3h,097h,
                           B   346    
005B61 9700                B   347    packed_help1				db 097h,0
005B63 0100                B   348    							db 001h,0			005B65 0200                B   349    							db 002h,0			005B67 3307095F 4F500B00   B   350    							db 033h,007h,009h,0
005B6F 3407515F 4F1400     B   351    							db 034h,007h,051h,0
005B76 37070707 5F195000   B   352    							db 037h,007h,007h,0
005B7E 3B075FC2 1700       B   353    							db 03bh,007h,05fh,0
005B84 C1075FC3 1700       B   354    							db 0c1h,007h,05fh,0
005B8A 3F070754 5F0E5000   B   355    							db 03fh,007h,007h,0
005B92 42075F0F 0A00       B   356    							db 042h,007h,05fh,0
005B98 3E070709 5F0D5000   B   357    							db 03eh,007h,007h,0
005BA0 44075F10 500B00     B   358    							db 044h,007h,05fh,0
005BA7 475F1011 1200       B   359    							db 047h,05fh,010h,0
005BAD 4C075F10 50131400   B   360    							db 04ch,007h,05fh,0
                           B   361    	
005BB5 9700                B   362    							db 097h,0
005BB7 0300                B   363    							db 003h,0			005BB9 0400                B   364    							db 004h,0			005BBB 38231E1D 5F1B601E   B   365    							db 038h,023h,01eh,0
005BC3 1D00 
005BC5 3C1F5F20 2100       B   366    							db 03ch,01fh,05fh,0
005BCB 3D5F101D 00         B   367    							db 03dh,05fh,010h,0
005BD0 411A995F 551C00     B   368    							db 041h,01ah,099h,0
005BD7 431F075F 2F2100     B   369    							db 043h,01fh,007h,0
005BDE 561D5F24 1D00       B   370    							db 056h,01dh,05fh,0
005BE4 455F2557 00         B   371    							db 045h,05fh,025h,0
005BE9 481D5F29 1D00       B   372    							db 048h,01dh,05fh,0
005BEF 4958595F 2A2100     B   373    							db 049h,058h,059h,0
005BF6 4A1F075F 2C2100     B   374    							db 04ah,01fh,007h,0
005BFD 4B1F075A 5F2D2100   B   375    							db 04bh,01fh,007h,0
005C05 4D1F075A 5F2E2100   B   376    							db 04dh,01fh,007h,0
005C0D 235F1860 00         B   377    							db 023h,05fh,018h,0
                           B   378    
005C12 9700                B   379    							db 097h,0
005C14 0500                B   380    							db 005h,0			005C16 0600                B   381    							db 006h,0			005C18 395F1516 00         B   382    							db 039h,05fh,015h,0
005C1D 9F1F5FA0 A100       B   383    							db 09fh,01fh,05fh,0
005C23 BA1F5F1B 8200       B   384    							db 0bah,01fh,05fh,0
005C29 B05FB1B0 A700       B   385    							db 0b0h,05fh,0b1h,0
005C2F AE095F1B AF00       B   386    							db 0aeh,09h,05fh,01
005C35 3A325F1B 5B00       B   387    							db 03ah,032h,05fh,0
005C3B BEBF5FA4 C000       B   388    							db 0beh,0bfh,05fh,0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 233


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005C41 4E5F1030 3100       B   389    							db 04eh,05fh,010h,0
005C47 B7095F1B B8B900     B   390    							db 0b7h,09h,5fh,01b
005C4E 5C5F105D 00         B   391    							db 05ch,05fh,010h,0
005C53 9700                B   392    							db 097h,0
005C55 FF                  B   393    							db 0ffh
                           B   394    
                           B   395    
                           B   396    
                           B   397    
005C56 551D00              B   398    os_cmd_locs					dw24 os_cmd_colon	005C59 332C00              B   399    							dw24 os_cmd_gtr		005C5C 523600              B   400    							dw24 os_cmd_unused	005C5F FC1B00              B   401    							dw24 os_cmd_c		005C62 691C00              B   402    							dw24 os_cmd_cd		005C65 4F1D00              B   403    							dw24 os_cmd_cls		005C68 6D3400              B   404    							dw24 os_cmd_pen		005C6B 6F1D00              B   405    							dw24 os_cmd_d		                           B   406    					
005C6E D02800              B   407    							dw24 os_cmd_del		005C71 E52800              B   408    							dw24 os_cmd_dir		005C74 612B00              B   409    							dw24 os_cmd_h		005C77 E12900              B   410    							dw24 os_cmd_f		005C7A 092A00              B   411    							dw24 os_cmd_format	005C7D 672C00              B   412    							dw24 os_cmd_lb		005C80 F62C00              B   413    							dw24 os_cmd_m		005C83 F63100              B   414    							dw24 os_cmd_remount
                           B   415    
005C86 4D2D00              B   416    							dw24 os_cmd_r		005C89 7E2E00              B   417    							dw24 os_cmd_rd		005C8C 8B2E00              B   418    							dw24 os_cmd_rn		005C8F 0F2F00              B   419    							dw24 os_cmd_rx		005C92 A72E00              B   420    							dw24 os_cmd_sb		005C95 A23100              B   421    							dw24 os_cmd_t		005C98 363100              B   422    							dw24 os_cmd_tx		005C9B 023200              B   423    							dw24 os_cmd_vers	                           B   424    							
005C9E 402D00              B   425    							dw24 os_cmd_md		005CA1 0F2C00              B   426    							dw24 os_cmd_help	005CA4 333200              B   427    							dw24 os_cmd_exec	005CA7 6B3400              B   428    							dw24 os_cmd_ltn		005CAA 8D3400              B   429    							dw24 os_cmd_palette
005CAD BE3400              B   430    							dw24 os_cmd_mouse	005CB0 FA3400              B   431    							dw24 os_cmd_vmode	005CB3 983500              B   432    							dw24 os_cmd_font	                           B   433    							
005CB6 E93500              B   434    							dw24 os_cmd_set		005CB9 453600              B   435    							dw24 os_cmd_dz		                           B   436    							
                           B   437    								
005CBC 00                  B   438    packed_msg_list				db 0				                           B   439    		
005CBD 606100              B   440    							db 060h,061h,0		Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 234


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005CC0 21626300            B   441    							db 021h,062h,063h,0
005CC4 1D6100              B   442    							db 01dh,061h,0		005CC7 628C1D00            B   443    							db 062h,08ch,01dh,0
005CCB 1D8D628E 00         B   444    							db 01dh,08dh,062h,0
005CD0 628C2100            B   445    							db 062h,08ch,021h,0
005CD4 21648D65 00         B   446    							db 021h,064h,08dh,0
005CD9 0A666768 00         B   447    							db 00ah,066h,067h,0
005CDE 2199696A 00         B   448    							db 021h,099h,069h,0
005CE3 696B6C00            B   449    							db 069h,06bh,06ch,0
                           B   450    					
005CE7 727300              B   451    							db 072h,073h,0		005CEA 877500              B   452    							db 087h,075h,0		005CED 76219900            B   453    							db 076h,021h,099h,0
                           B   454    					
005CF1 87B500              B   455    							db 087h,0b5h,0		005CF4 797400              B   456    							db 079h,074h,0		005CF7 9A7A00              B   457    bytes_loaded_msg			db 09ah,07ah,0		005CFA 7B7C00              B   458    							db 07bh,07ch,0		005CFD 747D00              B   459    							db 074h,07dh,0		                           B   460    
005D00 627F00              B   461    format_err_msg				db 062h,07fh,0		                           B   462    
005D03 816600              B   463    							db 081h,066h,0		005D06 21998384 00         B   464    							db 021h,099h,083h,0
005D0B 76260A00            B   465    							db 076h,026h,00ah,0
005D0F 76216400            B   466    							db 076h,021h,064h,0
005D13 2D7700              B   467    							db 02dh,077h,0		005D16 2D7C6B85 00         B   468    							db 02dh,07ch,06bh,0
005D1B 628C080C 00         B   469    							db 062h,08ch,08h,0c
005D20 A9316708 AA00       B   470    							db 0a9h,031h,067h,0
005D26 768F0A00            B   471    							db 076h,08fh,00ah,0
005D2A 76850A00            B   472    							db 076h,085h,00ah,0
                           B   473    					
005D2E 746800              B   474    							db 074h,068h,0		005D31 887D00              B   475    							db 088h,07dh,0		005D34 8900                B   476    ok_msg						db 089h,0			                           B   477    					
005D36 876000              B   478    							db 087h,060h,0		005D39 1A627800            B   479    							db 01ah,062h,078h,0
                           B   480    					
005D3D 1D626300            B   481    							db 01dh,062h,063h,0
005D41 7700                B   482    							db 077h,0			                           B   483    					
005D43 21996D00            B   484    							db 021h,099h,06dh,0
005D47 8A508B00            B   485    							db 08ah,050h,08bh,0
005D4B 6F71706E 00         B   486    							db 06fh,071h,070h,0
005D50 763600              B   487    no_vols_msg					db 076h,036h,0		005D53 97A66300            B   488    none_found_msg				db 097h,0a6h,063h,0
                           B   489    							
005D57 B62100              B   490    							db 0b6h,021h,0		005D5A A9316708 AA00       B   491    							db 0a9h,031h,067h,0
005D60 21AC00              B   492    							db 021h,0ach,0		Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 235


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   493    							
005D63 766F00              B   494    							db 076h,06fh,0		005D66 746F00              B   495    							db 074h,06fh,0		005D69 66676800            B   496    							db 066h,067h,068h,0
005D6D BD1A00              B   497    							db 0bdh,01ah,0		005D70 1A62B300            B   498    							db 01ah,062h,0b3h,0
005D74 1A7C00              B   499    							db 01ah,07ch,0		005D77 A17C00              B   500    							db 0a1h,07ch,0		                           B   501    							
005D7A FF                  B   502    							db 0ffh				                           B   503    
                           B   504    ;----------------------------------------------
                           B   505    
005D7B                     B   506    kernal_error_code_translation
                           B   507    
005D7B 242D2E14 08110F2A   B   508    					db 24h,2dh,2eh,14h,08h,11h,
005D83 2F303132 33 
                           B   509    					
005D88                     B   510    fs_error_code_translation
                           B   511    
005D88 00010203 04050607   B   512    					db 00h,01h,02h,03h,04h,05h,
005D90 08090A0B 0C0D1321 
005D98 22232425 260E0000   B   513    					db 22h,23h,24h,25h,26h,0eh,
                           B   514    
                           B   515    
                           B   516    ;----------------------------------------------
                           B   517    ; Scancode to ASCII keymaps
                           B   518    ;----------------------------------------------
                           B   519    
                           C     0    include	'UK_keymap.asm'
005DA0                     C     1    keymap:
005DA0 00000000 00000000   C     2                    db 000h,000h,000h,000h,000h,000
005DA8 00000000 00006000 
005DB0 00000000 00713100   C     3                    db 000h,000h,000h,000h,000h,071
005DB8 00007A73 61773200 
005DC0 00637864 65343300   C     4                    db 000h,063h,078h,064h,065h,034
005DC8 00207666 74723500 
005DD0 006E6268 67793600   C     5                    db 000h,06Eh,062h,068h,067h,079
005DD8 00006D6A 75373800 
005DE0 002C6B69 6F303900   C     6                    db 000h,02Ch,06Bh,069h,06Fh,030
005DE8 002E2F6C 3B702D00 
005DF0 00002700 5B3D0000   C     7                    db 000h,000h,027h,000h,05Bh,03D
005DF8 0000005D 00230000 
005E00 005C0000 00000000   C     8                    db 000h,05Ch,000h,000h,000h,000
005E08 00000000 00000000 
005E10 AC000000 00000051   C     9                    db 0ACh,000h,000h,000h,000h,000
005E18 21000000 5A534157 
005E20 22000043 58444524   C    10                    db 022h,000h,000h,043h,058h,044
005E28 A3000020 56465452 
005E30 2500004E 42484759   C    11                    db 025h,000h,000h,04Eh,042h,048
005E38 5E000000 4D4A5526 
005E40 2A00003C 4B494F29   C    12                    db 02Ah,000h,000h,03Ch,04Bh,049
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 236


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\UK_keymap.asm
005E48 2800003E 3F4C3A50 
005E50 5F000000 40007B2B   C    13                    db 05Fh,000h,000h,000h,040h,000
005E58 00000000 007D007E 
005E60 0000007C 00000000   C    14                    db 000h,000h,000h,07Ch,000h,000
005E68 00000000 00000000 
005E70 00000000 00000000   C    15                    db 000h,000h,000h,000h,000h,000
005E78 00000000 00000000 
005E80 00000000 00000000   C    16                    db 000h,000h,000h,000h,000h,000
005E88 00000000 00000000 
005E90 00000000 00000000   C    17                    db 000h,000h,000h,000h,000h,000
005E98 00000000 00000000 
005EA0 00000000 00000000   C    18                    db 000h,000h,000h,000h,000h,000
005EA8 00000000 00000000 
005EB0 00000000 00000000   C    19                    db 000h,000h,000h,000h,000h,000
005EB8 00000000 00000000 
005EC0 00000000 0000       C    20                    db 000h,000h,000h,000h,000h,000
                           B   521    
       00005DA0            B   522    unshifted_keymap equ keymap+00h
       00005E02            B   523    shifted_keymap   equ keymap+62h
       00005E64            B   524    alted_keymap	 equ keymap+c4h
                           B   525    	
                           B   526    ;----------------------------------------------
                           B   527    
005EC6 00                  B   528    ui_index				db 0				; u
005EC7 00                  B   529    ui_maxchars				db 0				; "
005EC8 000000              B   530    ui_string_addr			dw24 0				; "
                           B   531    
                           B   532    ;----------------------------------------------
                           B   533    ; OS Display parameters
                           B   534    ;----------------------------------------------
                           B   535    
005ECB 00                  B   536    video_mode				db 0
005ECC 0700                B   537    current_pen				dw 07h				; c
005ECE 0000                B   538    background_colour		dw 00h				; f
                           B   539    
005ED0 00000F00 000F0F0F   B   540    pen_palette				dw 0000h,000fh,0f00h,0f
005ED8 F000FF00 F00FFF0F 
005EE0 55059909 CC0C710F   B   541    						dw 0555h,0999h,0ccch,0f
005EE8 7F00F80D 40088C03 
                           B   542    
005EF0 00                  B   543    plotchar_colour			db 0				; c
                           B   544    
005EF1 00                  B   545    req_cursor_image		db 0
005EF2 00                  B   546    active_cursor_image		db 0
                           B   547    
005EF3                     B   548    display_parameters							; D
                           B   549    ;-----------------
                           B   550    
005EF3 000000              B   551    window_rows				dw24 0				; i
005EF6 000000              B   552    window_columns			dw24 0				; i
005EF9 000000              B   553    window_width_bytes		dw24 0				; i
005EFC 000000              B   554    window_height_lines		dw24 0				; i
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 237


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   555    
005EFF 040000 080000       B   556    font_parameters			dw24 4,8,0,0
005F05 000000 000000 
       00005EFF            B   557    font_width_bytes		equ font_parameters+0	       00005F02            B   558    font_height_lines		equ font_parameters+3
       00005F05            B   559    font_addr				equ font_parameters+6
       00005F08            B   560    font_length				equ font_parameters+9
                           B   561    
005F0B 000000              B   562    video_window_address	dw24 0
005F0E 000000              B   563    charmap_address			dw24 0
005F11 000000              B   564    attributes_address		dw24 0
005F14 000000              B   565    cursor_image_address	dw24 0
005F17 000000              B   566    total_window_bytes		dw24 0
005F1A 000000              B   567    total_charmap_bytes		dw24 0
005F1D 000000              B   568    total_row_bytes			dw24 0				; i
005F20 00                  B   569    window_pixel_doubling	db 0
                           B   570    
                           B   571    ;==============================================
                           B   572    ;  Serial Routine Data
                           B   573    ;==============================================
                           B   574    
005F21 000000              B   575    serial_ez80_address		dw24 0
005F24 000000              B   576    serial_file_length		dw24 0
005F27 000000              B   577    serial_fn_addr			dw24 0
005F2A 00 00 00 00 00 00   B   578    serial_filename			blkb 18,0		
005F30 00 00 00 00 00 00 
005F36 00 00 00 00 00 00 
005F3C 00                  B   579    serial_fn_length		db 0
005F3D 00                  B   580    serial_timeout			db 0
                           B   581    
005F3E 00 00 00 00 00 00   B   582    serial_fileheader		blkb 20,0
005F44 00 00 00 00 00 00 
005F4A 00 00 00 00 00 00 
005F50 00 00 
005F52 5A383050 2E464845   B   583    serial_header_id		db "Z80P.FHEADER"		005F5A 41444552 
005F5E 00                  B   584    serial_transfer_started	db 0
                           B   585    
005F5F 00                  B   586    anim_wait_count			db 0
                           B   587    
                           B   588    ;==============================================
                           B   589    
005F60 F3C8                B   590    intellimouse_seq	db 0f3h,200
005F62 F364                B   591    					db 0f3h,100
005F64 F350                B   592    					db 0f3h,80
                           B   593    
005F66 E803                B   594    mouse_settings_seq	db 0e8h,default_resolution
005F68 E6                  B   595    					db default_scaling
005F69 F364                B   596    					db 0f3h,default_sample_rate
005F6B F4                  B   597    					db 0f4h
                           B   598    					
                           B   599    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 238


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   600    ; FILE SYSTEM RELATED VARIABLES
                           B   601    ;----------------------------------------------
                           B   602    
005F6C 00                  B   603    boot_drive			db 0
                           B   604    
005F6D 00                  B   605    current_volume		db 0
                           B   606    	
005F6E 00                  B   607    current_driver		db 0			;normally u
                           B   608    
005F6F 00                  B   609    device_count		db 0			;IE: the nu
                           B   610    
005F70 00                  B   611    volume_count		db 0
                           B   612    				
005F71 20564F4C 303A00     B   613    vol_txt				db " VOL0:",0	;space pref
005F78 44455630 3A00       B   614    dev_txt				db "DEV0:",0
                           B   615    
005F7E 000000              B   616    sector_rd_wr_addr	dw24 0
                           B   617    
                           B   618    ;==============================================
                           B   619    
                           B   620    ; Add storage device drivers here, end with 0
                           B   621    
005F81 633600              B   622    driver_table		dw24 sd_card_driver	;Device
005F84 000000              B   623    					dw24 0				;last d
                           B   624    
                           B   625    ; Each driver's code should have a header in th
                           B   626    ; ---------------------------------------------
                           B   627    ; $0    = JP to get ID routin
                           B   628    ; $4    = JP to read sector routine
                           B   629    ; $8    = JP to write sector routinee
                           B   630    ; $c    = ASCII name of device type (null termi
                           B   631    ;==============================================
                           B   632    
005F87                     B   633    volume_dir_clusters
                           B   634    
005F87 00 00 00 00 00 00   B   635    					blkb max_volumes*3,0
005F8D 00 00 00 00 00 00 
005F93 00 00 00 00 00 00 
005F99 00 00 00 00 00 00 
                           B   636    	
005F9F                     B   637    volume_mount_list
                           B   638    
005F9F 00 00 00 00 00 00   B   639    					blkb max_volumes*16,0
005FA5 00 00 00 00 00 00 
005FAB 00 00 00 00 00 00 
005FB1 00 00 00 00 00 00 
005FB7 00 00 00 00 00 00 
005FBD 00 00 00 00 00 00 
005FC3 00 00 00 00 00 00 
005FC9 00 00 00 00 00 00 
005FCF 00 00 00 00 00 00 
005FD5 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 239


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005FDB 00 00 00 00 00 00 
005FE1 00 00 00 00 00 00 
005FE7 00 00 00 00 00 00 
005FED 00 00 00 00 00 00 
005FF3 00 00 00 00 00 00 
005FF9 00 00 00 00 00 00 
005FFF 00 00 00 00 00 00 
006005 00 00 00 00 00 00 
00600B 00 00 00 00 00 00 
006011 00 00 00 00 00 00 
006017 00 00 00 00 00 00 
00601D 00 00 
                           B   640    
                           B   641    ; Each entry is 16 bytes in the form:
                           B   642    
                           B   643    ; OFFSETS
                           B   644    ; -------
                           B   645    ; $00 - Volume is present (0/1)
                           B   646    ; $01 - Volume's host driver number (1 byte)	                           B   647    ; $02 - [reserved]
                           B   648    ; $03 - [reserved]
                           B   649    ; $04 - Volume's capacity in sectors (3 bytes)
                           B   650    ; $07 - Partition number on host drive (0/1/2/3
                           B   651    ; $08 - Offset in sectors from MBR to partition
                           B   652    ; $0c - [reserved]
                           B   653    ; $0d - [reserved]	
                           B   654    ; $0e - [reserved]
                           B   655    ; $0f - [reserved]
                           B   656    
                           B   657    ;==============================================
                           B   658    
00601F                     B   659    host_device_hardware_info
                           B   660    
00601F 00 00 00 00 00 00   B   661    					blkb 32*4,0
006025 00 00 00 00 00 00 
00602B 00 00 00 00 00 00 
006031 00 00 00 00 00 00 
006037 00 00 00 00 00 00 
00603D 00 00 00 00 00 00 
006043 00 00 00 00 00 00 
006049 00 00 00 00 00 00 
00604F 00 00 00 00 00 00 
006055 00 00 00 00 00 00 
00605B 00 00 00 00 00 00 
006061 00 00 00 00 00 00 
006067 00 00 00 00 00 00 
00606D 00 00 00 00 00 00 
006073 00 00 00 00 00 00 
006079 00 00 00 00 00 00 
00607F 00 00 00 00 00 00 
006085 00 00 00 00 00 00 
00608B 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 240


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
006091 00 00 00 00 00 00 
006097 00 00 00 00 00 00 
00609D 00 00 
                           B   662    
                           B   663    ; Each entry is 32 bytes..
                           B   664    ;
                           B   665    ; OFFSETS
                           B   666    ; -------
                           B   667    ; $00 - Device driver number
                           B   668    ; $01 - Device's TOTAL capacity in sectors (4 b
                           B   669    ; $05 - Zero terminated hardware name (22 ASCII
                           B   670    ; (remaining bytes to $1F currently unused)
                           B   671    
                           B   672    ;----------------------------------------------
                           B   673    
00609F 000000              B   674    dhwn_temp_pointer		dw24 0
                           B   675    
0060A2 00                  B   676    partition_temp			db 0
0060A3 00                  B   677    vols_on_device_temp		db 0
0060A4 00                  B   678    sys_driver_backup		db 0
0060A5 00                  B   679    os_quiet_mode			db 0
                           B   680    
0060A6 966900              B   681    default_load_addr		dw24 os_max_addr
                           B   682    
                           B   683    ;----------------------------------------------
                           B   684    
0060A9 00 00 00 00 00 00   B   685    time_data				blkb	7,0
0060AF 00 
                           B   686    
0060B0 00                  B   687    frozen					db 0
0060B1 01                  B   688    first_run				db 1
0060B2 01                  B   689    devices_connected		db 1					                           B   690    
                           B   691    ;----------------------------------------------
                           B   692    
0060B3 966900              B   693    sys_ram_high			dw24 os_max_addr
0060B6 000080              B   694    vram_a_high				dw24 vram_a_addr
0060B9 0000C0              B   695    vram_b_high				dw24 vram_b_addr
                           B   696    
                           B   697    ;----------------------------------------------
                           B   698    
0060BC 00                  B   699    store_a1				db 0		
0060BD 000000              B   700    store_bc1				dw24 0
0060C0 000000              B   701    store_de1				dw24 0
0060C3 000000              B   702    store_hl1				dw24 0
0060C6 00                  B   703    store_a2				db 0
0060C7 000000              B   704    store_bc2				dw24 0
0060CA 000000              B   705    store_de2				dw24 0
0060CD 000000              B   706    store_hl2				dw24 0
0060D0 000000              B   707    store_ix				dw24 0
0060D3 000000              B   708    store_iy				dw24 0
0060D6 000000              B   709    store_pc				dw24 0		;only relev
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 241


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
0060D9 000000              B   710    store_spl				dw24 0
0060DC 0000                B   711    store_sps				dw 0
0060DE 00                  B   712    store_mbase				db 0
0060DF 00                  B   713    store_f	 				db 0
0060E0 00                  B   714    store_adl				db 0
                           B   715    
                           B   716    ;----------------------------------------------
0060E1                     B   717    os_variables
                           B   718    ;----------------------------------------------
                           B   719    
0060E1 00                  B   720    store_registers			db 0
0060E2 000000              B   721    com_start_addr			dw24 0
                           B   722    
0060E5 00 00 00 00 00 00   B   723    temp_string				blkb max_buffer_chars+2
0060EB 00 00 00 00 00 00 
0060F1 00 00 00 00 00 00 
0060F7 00 00 00 00 00 00 
0060FD 00 00 00 00 00 00 
006103 00 00 00 00 00 00 
006109 00 00 00 00 00 00 
00610F 00 00 00 00 00 00 
006115 00 00 00 00 00 00 
00611B 00 00 00 00 00 00 
006121 00 00 00 00 00 00 
006127 00 00 00 00 00 00 
00612D 00 00 00 00 00 00 
006133 00 00 00 00 
006137 00 00 00 00 00 00   B   724    script_fn				blkb 13,0
00613D 00 00 00 00 00 00 
006143 00 
                           B   725    
006144 00                  B   726    sector_lba0				db 0			; keep 
006145 00                  B   727    sector_lba1				db 0
006146 00                  B   728    sector_lba2				db 0
006147 00                  B   729    sector_lba3				db 0
                           B   730    
                           B   731    ;----------------------------------------------
                           B   732    
006148 000000              B   733    cursor_pos				dw24 0			; 3rd b
                           B   734    
       00006148            B   735    cursor_y 				equ cursor_pos
       00006149            B   736    cursor_x 				equ cursor_pos+1
                           B   737    						
00614B 00                  B   738    cursorflashtimer		db 0
00614C 00                  B   739    cursor_status			db 0
00614D 00                  B   740    os_linecount			db 0
                           B   741    		
00614E 000000              B   742    mem_mon_addr			dw24 0
006151 000000              B   743    cmdop_start_address		dw24 0
006154 000000              B   744    cmdop_end_address		dw24 0
006157 000000              B   745    copy_dest_address		dw24 0
00615A 000000              B   746    hex_address				dw24 0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 242


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   747    
00615D 000000              B   748    find_hexstringascii 	dw24 0
006160 000000              B   749    xrr_temp				dw24 0
006163 00                  B   750    temphex					db 0
006164 00                  B   751    fillbyte				db 0 
006165 00                  B   752    ui_im_cache				db 0
                           B   753    
006166 00 00 00 00 00 00   B   754    commandstring			blkb max_buffer_chars+2
00616C 00 00 00 00 00 00 
006172 00 00 00 00 00 00 
006178 00 00 00 00 00 00 
00617E 00 00 00 00 00 00 
006184 00 00 00 00 00 00 
00618A 00 00 00 00 00 00 
006190 00 00 00 00 00 00 
006196 00 00 00 00 00 00 
00619C 00 00 00 00 00 00 
0061A2 00 00 00 00 00 00 
0061A8 00 00 00 00 00 00 
0061AE 00 00 00 00 00 00 
0061B4 00 00 00 00 
0061B8 00 00 00 00 00 00   B   755    output_line				blkb max_buffer_chars+2
0061BE 00 00 00 00 00 00 
0061C4 00 00 00 00 00 00 
0061CA 00 00 00 00 00 00 
0061D0 00 00 00 00 00 00 
0061D6 00 00 00 00 00 00 
0061DC 00 00 00 00 00 00 
0061E2 00 00 00 00 00 00 
0061E8 00 00 00 00 00 00 
0061EE 00 00 00 00 00 00 
0061F4 00 00 00 00 00 00 
0061FA 00 00 00 00 00 00 
006200 00 00 00 00 00 00 
006206 00 00 00 00 
                           B   756    				
00620A 000000              B   757    os_args_loc				dw24 0
00620D 000000              B   758    os_args_pos_cache		dw24 0
                           B   759    
006210 000000              B   760    os_dir_block_cache  	dw24 0
006213 000000              B   761    os_extcmd_jmp_addr		dw24 0
                           B   762    
                           B   763    
006216 000000              B   764    script_dir				dw24 0
006219 000000              B   765    script_file_offset		dw24 0
00621C 000000              B   766    script_length			dw24 0
                           B   767    
00621F 00                  B   768    script_flags			db 0
                           B   769    
006220 00 00 00 00 00 00   B   770    if_name_txt				blkb max_if_chars+2,0
006226 00 00 00 00 00 00 
00622C 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 243


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
006232 00 00 00 00 00 00   B   771    if_value_txt			blkb max_if_chars+2,0
006238 00 00 00 00 00 00 
00623E 00 00 00 00 00 00 
006244 00 00 00 00 00 00   B   772    if_label_txt			blkb max_if_chars+2,0
00624A 00 00 00 00 00 00 
006250 00 00 00 00 00 00 
                           B   773    
                           B   774    
006256 0000                B   775    char_to_print			db 0,0	; zero terminat
                           B   776    
                           B   777    ;----------------------------------------------
                           B   778    ; Keyboard buffer and registers
                           B   779    ;----------------------------------------------
                           B   780    
006258 00 00 00 00 00 00   B   781    scancode_buffer			blkb 32,0
00625E 00 00 00 00 00 00 
006264 00 00 00 00 00 00 
00626A 00 00 00 00 00 00 
006270 00 00 00 00 00 00 
006276 00 00 
                           B   782    
006278 00                  B   783    key_buf_wr_idx			db 0
006279 00                  B   784    key_buf_rd_idx			db 0
00627A 00                  B   785    key_release_mode		db 0		
00627B 00                  B   786    not_currently_used		db 0
00627C 00                  B   787    key_mod_flags			db 0
00627D 00                  B   788    insert_mode				db 0
00627E 00                  B   789    current_scancode		db 0
00627F 00                  B   790    current_asciicode		db 0
                           B   791    
                           B   792    ;----------------------------------------------
                           B   793    ; Mouse related registers
                           B   794    ;----------------------------------------------
                           B   795    
006280 00                  B   796    mouse_id				db 0
006281 00                  B   797    mouse_packet_size		db 0
                           B   798    
006282 00 00 00 00         B   799    mouse_packet			blkb 4,0			; t
006286 00                  B   800    mouse_packet_index		db 0				;
006287 00                  B   801    mouse_buttons			db 0				;
006288 000000              B   802    mouse_disp_x			dw24 0				; c
00628B 000000              B   803    mouse_disp_y			dw24 0				; c
00628E 00                  B   804    mouse_wheel				db 0				; m
00628F 00                  B   805    mouse_updated			db 0
                           B   806    
006290 000000              B   807    mouse_window_size_x		dw24 0				; t
006293 000000              B   808    mouse_window_size_y		dw24 0
006296 000000              B   809    mouse_abs_x				dw24 0
006299 000000              B   810    mouse_abs_y				dw24 0
00629C 000000              B   811    mouse_disp_x_old		dw24 0
00629F 000000              B   812    mouse_disp_y_old		dw24 0
0062A2 000000              B   813    mouse_disp_x_buffer		dw24 0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 244


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
0062A5 000000              B   814    mouse_disp_y_buffer		dw24 0
0062A8 00                  B   815    mouse_new_window		db 0
                           B   816    
                           B   817    ;----------------------------------------------
       00006148            B   818    first_os_var			equ cursor_y
0062A9 00                  B   819    last_os_var				db 0
                           B   820    ;----------------------------------------------
                           B   821    
                           B   822    ;==============================================
                           B   823    ; Environment variables
                           B   824    ;==============================================
                           B   825    
0062AA 4552524F 523D3030   B   826    envar_list				db "ERROR=00",0
0062B2 00 
0062B3 FF                  B   827    first_ext_ev_entry		db 0ffh
0062B4 00 00 00 00 00 00   B   828    						blkb envar_buffer_size,
0062BA 00 00 00 00 00 00 
0062C0 00 00 00 00 00 00 
0062C6 00 00 00 00 00 00 
0062CC 00 00 00 00 00 00 
0062D2 00 00 00 00 00 00 
0062D8 00 00 00 00 00 00 
0062DE 00 00 00 00 00 00 
0062E4 00 00 00 00 00 00 
0062EA 00 00 00 00 00 00 
0062F0 00 00 00 00 00 00 
0062F6 00 00 00 00 00 00 
0062FC 00 00 00 00 00 00 
006302 00 00 00 00 00 00 
006308 00 00 00 00 00 00 
00630E 00 00 00 00 00 00 
006314 00 00 00 00 00 00 
00631A 00 00 00 00 00 00 
006320 00 00 00 00 00 00 
006326 00 00 00 00 00 00 
00632C 00 00 00 00 00 00 
006332 00 00 00 00 00 00 
006338 00 00 00 00 00 00 
00633E 00 00 00 00 00 00 
006344 00 00 00 00 00 00 
00634A 00 00 00 00 00 00 
006350 00 00 00 00 00 00 
006356 00 00 00 00 00 00 
00635C 00 00 00 00 00 00 
006362 00 00 00 00 00 00 
006368 00 00 00 00 00 00 
00636E 00 00 00 00 00 00 
006374 00 00 00 00 00 00 
00637A 00 00 00 00 00 00 
006380 00 00 00 00 00 00 
006386 00 00 00 00 00 00 
00638C 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 245


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
006392 00 00 00 00 00 00 
006398 00 00 00 00 00 00 
00639E 00 00 00 00 00 00 
0063A4 00 00 00 00 00 00 
0063AA 00 00 00 00 00 00 
0063B0 00 00 00 00 
                           B   829    
0063B4 B36200              B   830    envar_top_loc			dw24 first_ext_ev_entry
                           B   831    
                           B   832    ;==============================================
                           B   833    
                           B     0    	include		'prose_font_packed.asm'
0063B7                     B     1    packed_font_start:
0063B7 01010008 183C3C18   B     2                    db 001h,001h,000h,008h,018h,03C
0063BF 00181800 EEEE6601 
0063C7 00056C6C FE6CFE6C   B     3                    db 000h,005h,06Ch,06Ch,0FEh,06C
0063CF 6C00187E E07C0EFC 
0063D7 1800C6CE 1C3870E6   B     4                    db 018h,000h,0C6h,0CEh,01Ch,038
0063DF C60078EC EC78EDEE 
0063E7 7D000C1C 18010005   B     5                    db 07Dh,000h,00Ch,01Ch,018h,001
0063EF 18300160 03301800 
0063F7 3018010C 03183000   B     6                    db 030h,018h,001h,00Ch,003h,018
0063FF 105438FE 38541000 
006407 0018187E 18180100   B     7                    db 000h,018h,018h,07Eh,018h,018
00640F 07383870 0100037E 
006417 01000918 18000006   B     8                    db 001h,000h,009h,018h,018h,000
00641F 0E1C3870 E0007CE6 
006427 EEFEF6E6 7C003878   B     9                    db 0EEh,0FEh,0F6h,0E6h,07Ch,000
00642F 0138047C 007CEE0E 
006437 7CE0E0FE 00FE0C18   B    10                    db 07Ch,0E0h,0E0h,0FEh,000h,0FE
00643F 0C0ECE7C 001E3E76 
006447 E6FF0606 00FEE0FC   B    11                    db 0E6h,0FFh,006h,006h,000h,0FE
00644F 010E03FC 007EE0FC 
006457 01E6037C 00FE060C   B    12                    db 001h,0E6h,003h,07Ch,000h,0FE
00645F 18013803 007CE6E6 
006467 7CE6E67C 007C01CE   B    13                    db 07Ch,0E6h,0E6h,07Ch,000h,07C
00646F 037E0E7C 01000318 
006477 18001818 01000330   B    14                    db 018h,000h,018h,018h,001h,000
00647F 30003030 600E1C38 
006487 70381C0E 0100037E   B    15                    db 070h,038h,01Ch,00Eh,001h,000
00648F 007E0100 0370381C 
006497 0E1C3870 007CEE0E   B    16                    db 00Eh,01Ch,038h,070h,000h,07C
00649F 3C380038 007CE601 
0064A7 EE03E07C 007CE6E6   B    17                    db 0EEh,003h,0E0h,07Ch,000h,07C
0064AF FE01E603 00FCE6E6 
0064B7 FCE6E6FC 007CE601   B    18                    db 0FCh,0E6h,0E6h,0FCh,000h,07C
0064BF E003E67C 00FC01E6 
0064C7 05FC00FE E0E0F8E0   B    19                    db 005h,0FCh,000h,0FEh,0E0h,0E0
0064CF E0FE00FE E0E0F801 
0064D7 E003007C E6E0EEE6   B    20                    db 0E0h,003h,000h,07Ch,0E6h,0E0
0064DF E67C0001 E603FE01 
0064E7 E603007C 0138057C   B    21                    db 0E6h,003h,000h,07Ch,001h,038
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 246


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_font_packed.asm
0064EF 007E011C 04DC7800 
0064F7 E6ECF8EC 01E60300   B    22                    db 0E6h,0ECh,0F8h,0ECh,001h,0E6
0064FF 01E006FE 00C6EEFE 
006507 D601C603 00E6F6FE   B    23                    db 0D6h,001h,0C6h,003h,000h,0E6
00650F FEEEE6E6 007C01E6 
006517 057C00FC 01E603FC   B    24                    db 005h,07Ch,000h,0FCh,001h,0E6
00651F E0E0007C 01E603EA 
006527 EC7600FC 01E603FC   B    25                    db 0ECh,076h,000h,0FCh,001h,0E6
00652F E6E6007C EEE07C0E 
006537 EE7C00FE 01380600   B    26                    db 0EEh,07Ch,000h,0FEh,001h,038
00653F 01E6067C 0001E605 
006547 74380001 C604D6FE   B    27                    db 074h,038h,000h,001h,0C6h,004
00654F 6C00E6E6 6C3874E6 
006557 E60001E6 047E06FC   B    28                    db 0E6h,000h,001h,0E6h,004h,07E
00655F 00FE0E1C 3870E0FE 
006567 003C0130 053C00C0   B    29                    db 000h,03Ch,001h,030h,005h,03C
00656F E070381C 0E060078 
006577 01180578 0010386C   B    30                    db 001h,018h,005h,078h,000h,010
00657F C601000B FE381C01 
006587 00087C06 7EE67E00   B    31                    db 000h,008h,07Ch,006h,07Eh,0E6
00658F 00E0E0FC E6E6FC01 
006597 00037C01 E0037C00   B    32                    db 000h,003h,07Ch,001h,0E0h,003
00659F 0006067E E6E67E01 
0065A7 00037CE6 FEE07C00   B    33                    db 000h,003h,07Ch,0E6h,0FEh,0E0
0065AF 003E70FC 01700301 
0065B7 00037EE6 E67E067C   B    34                    db 000h,003h,07Eh,0E6h,0E6h,07E
0065BF 00E0E0FC 01E60300 
0065C7 00380078 38387C00   B    35                    db 000h,038h,000h,078h,038h,038
0065CF 001C0001 1C047800 
0065D7 E0EEECF8 ECEE0000   B    36                    db 0E0h,0EEh,0ECh,0F8h,0ECh,0EE
0065DF 78013804 7C010003 
0065E7 ECFED6C6 C6010003   B    37                    db 0ECh,0FEh,0D6h,0C6h,0C6h,001
0065EF FC01E604 0100037C 
0065F7 01E6037C 010003FC   B    38                    db 001h,0E6h,003h,07Ch,001h,000
0065FF E6E6FCE0 E000007E 
006607 E6E67E06 060000DC   B    39                    db 0E6h,0E6h,07Eh,006h,006h,000
00660F E601E003 0100037E 
006617 F07C1EFC 0000387E   B    40                    db 0F0h,07Ch,01Eh,0FCh,000h,000
00661F 0138031E 01000301 
006627 E6047E01 000301E6   B    41                    db 0E6h,004h,07Eh,001h,000h,003
00662F 036C3801 0003E2EA 
006637 FE7C3401 0003E67C   B    42                    db 0FEh,07Ch,034h,001h,000h,003
00663F 387CE601 000301E6 
006647 037E0CF8 0000FE1C   B    43                    db 003h,07Eh,00Ch,0F8h,000h,000
00664F 3870FE00 3C303060 
006657 30303C00 01180700   B    44                    db 030h,030h,03Ch,000h,001h,018
00665F 7818180C 18187800 
006667 337ECC01 000501FE   B    45                    db 033h,07Eh,0CCh,001h,000h,005
00666F 070100FF 01001A1C 
006677 3A70FC70 F2BC0100   B    46                    db 03Ah,070h,0FCh,070h,0F2h,0BC
00667F 297CC6BA A2BAC67C 
006687 0100147E 06060100   B    47                    db 001h,000h,014h,07Eh,006h,006
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 247


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_font_packed.asm
00668F FF0100FF 01009C 
006696                     B    48    packed_font_end:
                           A  3110    
006696 00 00 00 00 00 00   A  3111    sector_buffer	blkb 512,0
00669C 00 00 00 00 00 00 
0066A2 00 00 00 00 00 00 
0066A8 00 00 00 00 00 00 
0066AE 00 00 00 00 00 00 
0066B4 00 00 00 00 00 00 
0066BA 00 00 00 00 00 00 
0066C0 00 00 00 00 00 00 
0066C6 00 00 00 00 00 00 
0066CC 00 00 00 00 00 00 
0066D2 00 00 00 00 00 00 
0066D8 00 00 00 00 00 00 
0066DE 00 00 00 00 00 00 
0066E4 00 00 00 00 00 00 
0066EA 00 00 00 00 00 00 
0066F0 00 00 00 00 00 00 
0066F6 00 00 00 00 00 00 
0066FC 00 00 00 00 00 00 
006702 00 00 00 00 00 00 
006708 00 00 00 00 00 00 
00670E 00 00 00 00 00 00 
006714 00 00 00 00 00 00 
00671A 00 00 00 00 00 00 
006720 00 00 00 00 00 00 
006726 00 00 00 00 00 00 
00672C 00 00 00 00 00 00 
006732 00 00 00 00 00 00 
006738 00 00 00 00 00 00 
00673E 00 00 00 00 00 00 
006744 00 00 00 00 00 00 
00674A 00 00 00 00 00 00 
006750 00 00 00 00 00 00 
006756 00 00 00 00 00 00 
00675C 00 00 00 00 00 00 
006762 00 00 00 00 00 00 
006768 00 00 00 00 00 00 
00676E 00 00 00 00 00 00 
006774 00 00 00 00 00 00 
00677A 00 00 00 00 00 00 
006780 00 00 00 00 00 00 
006786 00 00 00 00 00 00 
00678C 00 00 00 00 00 00 
006792 00 00 00 00 00 00 
006798 00 00 00 00 00 00 
00679E 00 00 00 00 00 00 
0067A4 00 00 00 00 00 00 
0067AA 00 00 00 00 00 00 
0067B0 00 00 00 00 00 00 
0067B6 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 248


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0067BC 00 00 00 00 00 00 
0067C2 00 00 00 00 00 00 
0067C8 00 00 00 00 00 00 
0067CE 00 00 00 00 00 00 
0067D4 00 00 00 00 00 00 
0067DA 00 00 00 00 00 00 
0067E0 00 00 00 00 00 00 
0067E6 00 00 00 00 00 00 
0067EC 00 00 00 00 00 00 
0067F2 00 00 00 00 00 00 
0067F8 00 00 00 00 00 00 
0067FE 00 00 00 00 00 00 
006804 00 00 00 00 00 00 
00680A 00 00 00 00 00 00 
006810 00 00 00 00 00 00 
006816 00 00 00 00 00 00 
00681C 00 00 00 00 00 00 
006822 00 00 00 00 00 00 
006828 00 00 00 00 00 00 
00682E 00 00 00 00 00 00 
006834 00 00 00 00 00 00 
00683A 00 00 00 00 00 00 
006840 00 00 00 00 00 00 
006846 00 00 00 00 00 00 
00684C 00 00 00 00 00 00 
006852 00 00 00 00 00 00 
006858 00 00 00 00 00 00 
00685E 00 00 00 00 00 00 
006864 00 00 00 00 00 00 
00686A 00 00 00 00 00 00 
006870 00 00 00 00 00 00 
006876 00 00 00 00 00 00 
00687C 00 00 00 00 00 00 
006882 00 00 00 00 00 00 
006888 00 00 00 00 00 00 
00688E 00 00 00 00 00 00 
006894 00 00 
                           A  3112    
006896 00 00 00 00 00 00   A  3113    scratch_pad		blkb 256,0
00689C 00 00 00 00 00 00 
0068A2 00 00 00 00 00 00 
0068A8 00 00 00 00 00 00 
0068AE 00 00 00 00 00 00 
0068B4 00 00 00 00 00 00 
0068BA 00 00 00 00 00 00 
0068C0 00 00 00 00 00 00 
0068C6 00 00 00 00 00 00 
0068CC 00 00 00 00 00 00 
0068D2 00 00 00 00 00 00 
0068D8 00 00 00 00 00 00 
0068DE 00 00 00 00 00 00 
0068E4 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)14-Jul-11     21:00:34     page: 249


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0068EA 00 00 00 00 00 00 
0068F0 00 00 00 00 00 00 
0068F6 00 00 00 00 00 00 
0068FC 00 00 00 00 00 00 
006902 00 00 00 00 00 00 
006908 00 00 00 00 00 00 
00690E 00 00 00 00 00 00 
006914 00 00 00 00 00 00 
00691A 00 00 00 00 00 00 
006920 00 00 00 00 00 00 
006926 00 00 00 00 00 00 
00692C 00 00 00 00 00 00 
006932 00 00 00 00 00 00 
006938 00 00 00 00 00 00 
00693E 00 00 00 00 00 00 
006944 00 00 00 00 00 00 
00694A 00 00 00 00 00 00 
006950 00 00 00 00 00 00 
006956 00 00 00 00 00 00 
00695C 00 00 00 00 00 00 
006962 00 00 00 00 00 00 
006968 00 00 00 00 00 00 
00696E 00 00 00 00 00 00 
006974 00 00 00 00 00 00 
00697A 00 00 00 00 00 00 
006980 00 00 00 00 00 00 
006986 00 00 00 00 00 00 
00698C 00 00 00 00 00 00 
006992 00 00 00 00 
                           A  3114    
                           A  3115    ;==============================================
                           A  3116    	
006996 00                  A  3117    os_max_addr		db 0							                           A  3118    	
                           A  3119    				end		
                           A  3120    ;==============================================
                           A  3121    
                           A  3122    		


Errors: 0
Warnings: 0
Lines Assembled: 12447
