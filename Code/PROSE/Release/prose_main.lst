Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:   1


PC     Object              I  Line    Source 
                           A     1    
                           A     2    ; PROSE for EZ80P by Phil Ruston 2011
                           A     3    ; Compile with Zilog ZDS II
                           A     4    
                           A     5    ;----------------------------------------------
                           A     6    	.assume ADL = 1
                           A     7    ;----------------------------------------------
                           A     8    
                           B     0    	include	'ez80_cpu_equates.asm'
                           B     1    ;--- EZ80 Internal Ports ----------------------
                           B     2    
       0000009A            B     3    PB_DR			equ 09ah
       0000009B            B     4    PB_DDR			equ 09bh
       0000009C            B     5    PB_ALT1			equ 09ch
       0000009D            B     6    PB_ALT2			equ 09dh
                           B     7    
       0000009E            B     8    PC_DR			equ 09eh
       0000009F            B     9    PC_DDR			equ 09fh
       000000A0            B    10    PC_ALT1			equ 0a0h
       000000A1            B    11    PC_ALT2			equ 0a1h
                           B    12    
       000000A2            B    13    PD_DR			equ 0a2h
       000000A3            B    14    PD_DDR			equ 0a3h
       000000A4            B    15    PD_ALT1			equ 0a4h
       000000A5            B    16    PD_ALT2			equ 0a5h
                           B    17    
       000000C0            B    18    UART0_RBR		equ 0c0h
       000000C0            B    19    UART0_THR		equ 0c0h
       000000C0            B    20    UART0_BRG_L		equ 0c0h
       000000C1            B    21    UART0_BRG_H		equ 0c1h
       000000C1            B    22    UART0_IER		equ 0c1h
       000000C2            B    23    UART0_FCTL		equ 0c2h
       000000C3            B    24    UART0_LCTL		equ 0c3h
       000000C4            B    25    UART0_MCTL		equ 0c4h
       000000C5            B    26    UART0_LSR		equ 0c5h
                           B    27    
       000000A8            B    28    CS0_LBR			equ 0a8h			;eZ80 wait 
       000000A9            B    29    CS0_UBR			equ 0a9h
       000000AA            B    30    CS0_CTL			equ 0aah			
       000000AB            B    31    CS1_LBR			equ 0abh			;eZ80 wait 
       000000AC            B    32    CS1_UBR			equ 0ach
       000000AD            B    33    CS1_CTL			equ 0adh
                           B    34    
       00000080            B    35    TMR0_CTL		equ 080h			;timer 0 eq
       00000081            B    36    TMR0_DR_L		equ 081h
       00000081            B    37    TMR0_RR_L		equ 081h
       00000082            B    38    TMR0_DR_H		equ 082h
       00000082            B    39    TMR0_RR_H		equ 082h
       00000092            B    40    TMR_ISS			equ 092h
                           B    41    
       000000ED            B    42    RTC_CTRL		equ 0edh			;RTC equate
       000000EC            B    43    RTC_ACTRL		equ 0ech
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:   2


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80_cpu_equates.asm
       000000E0            B    44    RTC_SEC			equ 0e0h
       000000E1            B    45    RTC_MIN			equ 0e1h
       000000E2            B    46    RTC_HRS			equ 0e2h
       000000E3            B    47    RTC_DOW			equ 0e3h
       000000E4            B    48    RTC_DOM			equ 0e4h
       000000E5            B    49    RTC_MON			equ 0e5h
       000000E6            B    50    RTC_YR			equ 0e6h
       000000E7            B    51    RTC_CEN			equ 0e7h
                           B    52    
                           B    53    ;----------------------------------------------
                           B     0    	include	'ez80p_hardware_equates.asm'
                           B     1    
                           B     2    ;-- EZ80P Hardware equates --------------------
                           B     3    
       00000000            B     4    port_pic_data  			equ 000h
       00000001            B     5    port_pic_ctrl			equ 001h
       00000001            B     6    port_hw_flags			equ 001h
       00000002            B     7    port_sdc_ctrl			equ 002h	; this is a
       00000002            B     8    port_keyboard_data		equ 002h
       00000003            B     9    port_sdc_data		 	equ 003h	
       00000004            B    10    port_memory_paging		equ 004h
       00000005            B    11    port_irq_ctrl			equ 005h
       00000006            B    12    port_nmi_ack			equ 006h
       00000007            B    13    port_ps2_ctrl			equ 007h
       00000008            B    14    port_selector			equ 008h
       00000006            B    15    port_mouse_data			equ 006h
       00000009            B    16    port_clear_flags		equ 009h
                           B    17    
       00000000            B    18    sdc_power				equ 0		;(port_sd_c
       00000001            B    19    sdc_cs					equ 1		;(port_sd_c
       00000002            B    20    sdc_speed				equ 2 		;(port_sd_c
                           B    21    
       00000004            B    22    sdc_serializer_busy		equ 4 		;(port_hw_f
       00000005            B    23    vrt						equ 5		;(port_hw_f
                           B    24    
                           B    25    
                           B    26    ;-- Memory locations --------------------------
                           B    27    
       00800000            B    28    vram_a_addr				equ 0800000h
       00C00000            B    29    vram_b_addr				equ 0c00000h
                           B    30    
                           B    31    ;-- Hardware registers ------------------------
                           B    32    
       00FF0000            B    33    hw_palette				equ 0ff0000h
       00FF0800            B    34    hw_sprite_registers		equ 0ff0800h
       00FF1000            B    35    hw_video_parameters		equ 0ff1000h
       00FF1400            B    36    hw_audio_registers		equ 0ff1400h
       00FF1800            B    37    hw_video_settings		equ 0ff1800h
                           B    38    
       00FF1000            B    39    tilemap_parameters		equ hw_video_parameters
       00FF1020            B    40    bitmap_parameters		equ hw_video_parameters
                           B    41    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:   3


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_hardware_equates.asm
       00FF1800            B    42    video_control			equ hw_video_settings+0
       00FF1801            B    43    sprite_control			equ hw_video_settings+0
       00FF1802            B    44    bgnd_palette_select		equ hw_video_settings+0
       00FF1803            B    45    sprite_palette_select	equ hw_video_settings+0
       00FF1804            B    46    right_border_position	equ hw_video_settings+0
                           B    47    
                           B    48    ;----------------------------------------------
                           A    11    
                           A    12    ;----------------------------------------------
                           A    13    
       00000031            A    14    prose_version			equ 31h
       00000105            A    15    amoeba_version_required	equ 105h
                           A    16    
       00000A00            A    17    os_location			 	equ 0a00h
       0007FFFF            A    18    sys_mem_top				equ 07ffffh
                           A    19    
                           A    20    ;----------------------------------------------
                           A    21    ; Assembly options
                           A    22    ;----------------------------------------------
                           A    23    
       00000008            A    24    max_volumes				equ 8
                           A    25    
       00000050            A    26    max_buffer_chars		equ 80		; applies t
                           A    27    
                           A    28    ;----------------------------------------------
                           A    29    			
000A00                     A    30    			org os_location
                           A    31    			
000A00 00 00 00 00 00 00   A    32    				blkb 16,0						000A06 00 00 00 00 00 00 
000A0C 00 00 00 00 
                           A    33    			
                           A    34    ;----------------------------------------------
                           A    35    			
000A10 C3 40 0A 00         A    36    				jp os_first_run					000A14 C3 96 0E 00         A    37    				jp extcmd_return				000A18 C3000000            A    38    				jp 0							000A1C C3000000            A    39    				jp 0							                           A    40    				
                           A    41    ;----------------------------------------------
                           A    42    
000A20                     A    43    prose_kernal
                           A    44    
                           A    45    ; External apps can call kernal routines by doi
                           A    46    ; Set A to kernal routine number required (see 
                           A    47    ; (this routine is always located at os_locatio
                           A    48    
000A20 D9                  A    49    				exx		
000A21 DD21 6D 54 00       A    50    				ld ix,kernal_table				000A26 11030000            A    51    				ld de,3
000A2A 57                  A    52    				ld d,a
000A2B ED5C                A    53    				mlt de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:   4


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000A2D DD19                A    54    				add ix,de						000A2F DD3700              A    55    				ld ix,(ix)						                           A    56    				
000A32 E3                  A    57    				ex (sp),hl
000A33 7D                  A    58    				ld a,l							000A34 E601                A    59    				and 1							000A36 E3                  A    60    				ex (sp),hl
000A37 D9                  A    61    				exx
000A38 CD 3E 0A 00         A    62    				call kr_jump					000A3C 5BC9                A    63    				ret.l							                           A    64    				
000A3E DDE9                A    65    kr_jump			jp (ix)							                           A    66    						
                           A    67    ;----------------------------------------------
                           A    68    
                           A    69    ; *******************
                           A    70    ; *   START UP OS   *
                           A    71    ; *******************
                           A    72    
000A40                     A    73    os_first_run
                           A    74    	
000A40 B7                  A    75    				or a							000A41 20 05               A    76    				jr nz,os_cold_start		
000A43 78                  A    77    				ld a,b
000A44 32 D4 5E 00         A    78    				ld (boot_drive),a				                           A    79    
000A48                     A    80    os_cold_start
000A48 ED7D                A    81    				stmix							000A4A F3                  A    82    				di								000A4B ED5E                A    83    				im 2							000A4D AF                  A    84    				xor a
000A4E ED6D                A    85    				ld MB,a							000A50 4031FFFF            A    86    				ld.sis sp,0ffffh				000A54 31FFFF07            A    87    				ld sp,sys_mem_top				                           A    88    
000A58 CD 76 3B 00         A    89    				call disable_irqs
000A5C CD FE 3C 00         A    90    				call disable_nmi
                           A    91    				
000A60 3A 19 60 00         A    92    				ld a,(first_run)				000A64 B7                  A    93    				or a
000A65 28 11               A    94    				jr z,dont_resetkb
000A67 CD 9B 40 00         A    95    				call init_keyboard
000A6B 28 06               A    96    				jr z,kb_ok
000A6D 21 1A 60 00         A    97    				ld hl,devices_connected
000A71 CB86                A    98    				res 0,(hl)
000A73 AF                  A    99    kb_ok			xor a
000A74 32 19 60 00         A   100    				ld (first_run),a
000A78                     A   101    dont_resetkb
                           A   102    				
000A78 21 21 63 00         A   103    				ld hl,packed_font_start
000A7C 11000080            A   104    				ld de,vram_a_addr
000A80 01 E2 02 00         A   105    				ld bc,packed_font_end-packed_fo
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:   5


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000A84 CD D7 15 00         A   106    				call unpack_rle
000A88 CD 7A 35 00         A   107    				call convert_font
                           A   108    
000A8C CD CB 36 00         A   109    				call test_amoeba_vers
                           A   110    				
000A90 21 4C 60 00         A   111    				ld hl,os_variables				000A94 01 C7 01 00         A   112    				ld bc,last_os_var-os_variables
000A98 AF                  A   113    				xor a
000A99 CD 79 15 00         A   114    				call os_bchl_memfill
                           A   115    	
000A9D CD DC 3F 00         A   116    				call hwsc_default_hw_settings
000AA1 CD 2F 43 00         A   117    				call hwsc_disable_audio
                           A   118    				
000AA5 3A 4C 5E 00         A   119    				ld a,(video_mode)
000AA9 CD 52 15 00         A   120    				call os_set_vmode				                           A   121    				
000AAD 21 51 55 00         A   122    				ld hl,welcome_message			000AB1 CD 0D 0F 00         A   123    				call os_print_string
                           A   124    				
000AB5 CD BB 36 00         A   125    				call os_get_mem_high			000AB9 EB                  A   126    				ex de,hl
000ABA CD ED 12 00         A   127    				call os_show_hex_address
                           A   128    
000ABE CD B5 13 00         A   129    				call os_new_line
000AC2 CD B5 13 00         A   130    				call os_new_line
000AC6 CD 27 32 00         A   131    				call os_cmd_vers				000ACA CD 1B 32 00         A   132    				call os_cmd_remount				                           A   133    
000ACE CD B5 13 00         A   134    				call os_new_line				                           A   135    
000AD2 CD 59 41 00         A   136    				call purge_keyboard
                           A   137    				
000AD6 CD 41 3B 00         A   138    				call set_irq_vector
000ADA CD 53 3B 00         A   139    				call enable_os_irqs
000ADE FB                  A   140    				ei
000ADF CD E6 3C 00         A   141    				call set_nmi_vector
                           A   142    				
000AE3 21 1A 60 00         A   143    				ld hl,devices_connected			000AE7 CB46                A   144    				bit 0,(hl)
000AE9 20 08               A   145    				jr nz,kb_present
000AEB 21 D4 5A 00         A   146    				ld hl,no_keyboard_msg
000AEF CD EC 13 00         A   147    				call os_show_packed_text
000AF3                     A   148    kb_present				
000AF3 21 A1 55 00         A   149    				ld hl,startup_script_fn
000AF7 22 75 61 00         A   150    				ld (os_args_loc),hl
000AFB CD 58 32 00         A   151    				call os_cmd_exec				                           A   152    									
000AFF 3A 18 60 00         A   153    				ld a,(frozen)					000B03 B7                  A   154    				or a
000B04 28 11               A   155    				jr z,os_main_loop
000B06 AF                  A   156    				xor a
000B07 32 18 60 00         A   157    				ld (frozen),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:   6


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000B0B 21 F9 55 00         A   158    				ld hl,nmi_freeze_txt
000B0F CD 0D 0F 00         A   159    				call os_print_string
000B13 CD 72 2D 00         A   160    				call os_cmd_r
                           A   161    				
                           A   162    
                           A   163    ;==============================================
                           A   164    
000B17 CD CC 3F 00         A   165    os_main_loop	call hwsc_wait_vrt				                           A   166    
000B1B CD 5E 0F 00         A   167    				call os_cursor_flash
                           A   168    
000B1F CD D0 43 00         A   169    				call os_get_key_press
000B23 20 F2               A   170    				jr nz,os_main_loop
                           A   171    	
000B25 32 E8 61 00         A   172    				ld (current_scancode),a
000B29 78                  A   173    				ld a,b
000B2A 32 E9 61 00         A   174    				ld (current_asciicode),a		                           A   175    	
000B2E CD AB 3E 00         A   176    				call hwsc_remove_cursor
000B32 3E18                A   177    				ld a,24							000B34 32 B6 60 00         A   178    				ld (cursorflashtimer),a			000B38 AF                  A   179    				xor a
000B39 32 B7 60 00         A   180    				ld (cursor_status),a
                           A   181    				
000B3D 3A E8 61 00         A   182    				ld a,(current_scancode)			000B41 FE70                A   183    				cp 70h
000B43 20 0C               A   184    				jr nz,os_notins
000B45 3A 74 5E 00         A   185     				ld a,(overwrite_mode)
000B49 EE01                A   186    				xor 1
000B4B 32 74 5E 00         A   187    				ld (overwrite_mode),a
000B4F 18 C6               A   188    				jr os_main_loop
                           A   189    
000B51 21 B4 60 00         A   190    os_notins		ld hl,cursor_x					000B55 FE6B                A   191    				cp 06bh			
000B57 20 0E               A   192    				jr nz,os_ntlft
000B59 35                  A   193    				dec (hl)
000B5A 7E                  A   194    				ld a,(hl)
000B5B FEFF                A   195    				cp 0ffh	
000B5D 20 B8               A   196    				jr nz,os_main_loop
000B5F 3A 7A 5E 00         A   197    				ld a,(charmap_columns)
000B63 3D                  A   198    				dec a
000B64 77                  A   199    				ld (hl),a						000B65 18 B0               A   200    				jr os_main_loop
                           A   201    
000B67 FE74                A   202    os_ntlft		cp 074h							000B69 20 0C               A   203    				jr nz,os_ntrig
000B6B 34                  A   204    				inc (hl)
000B6C 3A 7A 5E 00         A   205    				ld a,(charmap_columns)
000B70 BE                  A   206    				cp (hl)
000B71 20 A4               A   207    				jr nz,os_main_loop
000B73 3600                A   208    				ld (hl),0						000B75 18 A0               A   209    				jr os_main_loop
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:   7


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A   210    
000B77 21 B3 60 00         A   211    os_ntrig		ld hl,cursor_y
000B7B FE75                A   212    				cp 075h							000B7D 20 09               A   213    				jr nz,os_ntup
000B7F 35                  A   214    				dec (hl)
000B80 CB7E                A   215    				bit 7,(hl)
000B82 28 93               A   216    				jr z,os_main_loop
000B84 3600                A   217    				ld (hl),0						000B86 18 8F               A   218    				jr os_main_loop
                           A   219    
000B88 FE72                A   220    os_ntup			cp 072h
000B8A 20 12               A   221    				jr nz,os_ntdwn					000B8C 34                  A   222    				inc (hl)
000B8D 3A 77 5E 00         A   223    				ld a,(charmap_rows)
000B91 BE                  A   224    				cp (hl)
000B92 20 83               A   225    				jr nz,os_main_loop
000B94 3D                  A   226    				dec a
000B95 77                  A   227    				ld (hl),a						000B96 CD 37 3E 00         A   228    				call hwsc_scroll_up
000B9A C3 17 0B 00         A   229    				jr os_main_loop
                           A   230    
000B9E FE71                A   231    os_ntdwn		cp 071h							000BA0 20 08               A   232    				jr nz,os_nodel		
000BA2 3A B4 60 00         A   233    				ld a,(cursor_x)					000BA6 47                  A   234    				ld b,a
000BA7 04                  A   235    				inc b
000BA8 18 13               A   236    				jr os_chrbk
                           A   237    
000BAA FE66                A   238    os_nodel		cp 066h							000BAC 20 17               A   239    				jr nz,os_nbksp
000BAE 3A B4 60 00         A   240    				ld a,(cursor_x)					000BB2 B7                  A   241    				or a							000BB3 CA 17 0B 00         A   242    				jp z,os_main_loop
000BB7 47                  A   243    				ld b,a
000BB8 3D                  A   244    				dec a
000BB9 32 B4 60 00         A   245    				ld (cursor_x),a					000BBD CD 31 3F 00         A   246    os_chrbk		call hwsc_chars_left			000BC1 C3 17 0B 00         A   247    				jp os_main_loop
                           A   248    
000BC5 FE5A                A   249    os_nbksp		cp 05ah							000BC7 CA 0F 0C 00         A   250    				jp z,os_enter_pressed
                           A   251    	
000BCB 3A E9 61 00         A   252    				ld a,(current_asciicode)		000BCF FE20                A   253    				cp 32							000BD1 38 38               A   254    				jr c,os_nvdun					                           A   255    
000BD3 FE7B                A   256    				cp 07bh							000BD5 30 12               A   257    				jr nc,os_gtcha					000BD7 FE61                A   258    				cp 061h
000BD9 38 04               A   259    				jr c,os_ntupc
000BDB D620                A   260    				sub 020h
000BDD 18 0A               A   261    				jr os_gtcha
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:   8


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000BDF FE5B                A   262    os_ntupc		cp 05bh
000BE1 30 06               A   263    				jr nc,os_gtcha
000BE3 FE41                A   264    				cp 041h
000BE5 38 02               A   265    				jr c,os_gtcha
000BE7 C620                A   266    				add a,020h
000BE9 57                  A   267    os_gtcha		ld d,a							000BEA 3A 74 5E 00         A   268    				ld a,(overwrite_mode)			000BEE B7                  A   269    				or a
000BEF CC 6A 3F 00         A   270    				call z,hwsc_chars_right
                           A   271    				
000BF3 ED4B B3 60 00       A   272    os_schi			ld bc,(cursor_pos)				000BF8 7A                  A   273    				ld a,d							000BF9 CD 72 3E 00         A   274    				call hwsc_plot_char		
000BFD 21 B4 60 00         A   275    				ld hl,cursor_x					000C01 34                  A   276    				inc (hl)
000C02 3A 7A 5E 00         A   277    				ld a,(charmap_columns)
000C06 BE                  A   278    				cp (hl)							000C07 20 02               A   279    				jr nz,os_nvdun
000C09 3600                A   280    				ld (hl),0
                           A   281    
000C0B C3 17 0B 00         A   282    os_nvdun		jp os_main_loop
                           A   283    	
                           A   284    
                           A   285    ;----------------------------------------------
                           A   286    
000C0F                     A   287    os_enter_pressed
                           A   288    	
000C0F CD AD 3F 00         A   289    				call hwsc_charline_to_command_s
                           A   290    
000C13 AF                  A   291    				xor a
000C14 32 B4 60 00         A   292    				ld (cursor_x),a					000C18 21 B3 60 00         A   293    				ld hl,cursor_y					000C1C 34                  A   294    				inc (hl)
000C1D 3A 77 5E 00         A   295    				ld a,(charmap_rows)
000C21 BE                  A   296    				cp (hl)
000C22 20 06               A   297    				jr nz,os_esdok
000C24 3D                  A   298    				dec a
000C25 77                  A   299    				ld (hl),a
000C26 CD 37 3E 00         A   300    				call hwsc_scroll_up
                           A   301    
000C2A CD 32 0C 00         A   302    os_esdok		call os_parse_cmd_chk_ps		                           A   303    
000C2E C3 17 0B 00         A   304    post_csb		jp os_main_loop
                           A   305    
                           A   306    	
                           A   307    ;----------------------------------------------
                           A   308    
                           A   309    
000C32                     A   310    os_parse_cmd_chk_ps
                           A   311    
000C32 CD 45 0C 00         A   312    				call os_parse_command_line
000C36 FEFE                A   313    				cp 0feh							Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:   9


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000C38 C0                  A   314    				ret nz
000C39 01500000            A   315    				ld bc,max_buffer_chars			000C3D 11 D1 60 00         A   316    				ld de,commandstring				000C41 EDB0                A   317    				ldir
000C43 18 ED               A   318    				jr os_parse_cmd_chk_ps
                           A   319    
                           A   320    	
                           A   321    ;----------------------------------------------
                           A   322    	
000C45                     A   323    os_parse_command_line
                           A   324    
000C45 3E01                A   325    				ld a,1
000C47 32 4C 60 00         A   326    				ld (store_registers),a			                           A   327    
000C4B 21 D1 60 00         A   328    				ld hl,commandstring				000C4F 0650                A   329    				ld b,max_buffer_chars			000C51 CD AB 0F 00         A   330    				call os_scan_for_non_space		000C55 B7                  A   331    				or a							000C56 C8                  A   332    				ret z
000C57 11 37 56 00         A   333    				ld de,dictionary-1				000C5B D5                  A   334    				push de
000C5C D1                  A   335    compcstr		pop de
000C5D E5                  A   336    				push hl
000C5E FDE1                A   337    				pop iy
000C60 13                  A   338    notacmd			inc de
000C61 1A                  A   339    				ld a,(de)
000C62 FE01                A   340    				cp 1							000C64 CA FE 0C 00         A   341    				jp z,os_no_kernal_command_found
000C68 CB7F                A   342    				bit 7,a
000C6A 28 F4               A   343    				jr z,notacmd					000C6C E67F                A   344    				and 07fh
000C6E 4F                  A   345    				ld c,a							000C6F D5                  A   346    				push de
000C70 13                  A   347    cmdnscan		inc de
000C71 FD7E00              A   348    				ld a,(iy)						000C74 CD 16 12 00         A   349    				call os_uppercasify
000C78 47                  A   350    				ld b,a
000C79 1A                  A   351    				ld a,(de)						000C7A B8                  A   352    				cp b
000C7B FD23                A   353    				inc iy
000C7D 28 F1               A   354    				jr z,cmdnscan					000C7F 1A                  A   355    nomatch			ld a,(de)						000C80 B7                  A   356    				or a
000C81 28 04               A   357    				jr z,posmatch					000C83 CB7F                A   358    				bit 7,a			
000C85 28 D5               A   359    				jr z,compcstr					000C87 FD7EFF              A   360    posmatch		ld a,(iy-1)						000C8A FE20                A   361    				cp 32
000C8C 20 CE               A   362    				jr nz,compcstr					                           A   363    	
000C8E D1                  A   364    				pop de				
000C8F FDE5                A   365    				push iy							Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  10


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000C91 E1                  A   366    				pop hl
000C92 CD AB 0F 00         A   367    				call os_scan_for_non_space
000C96 22 75 61 00         A   368    				ld (os_args_loc),hl				                           A   369    	
000C9A 21 D6 5B 00         A   370    				ld hl,os_cmd_locs
000C9E 11030000            A   371    				ld de,3
000CA2 51                  A   372    				ld d,c
000CA3 ED5C                A   373    				mlt de							000CA5 19                  A   374    				add hl,de
000CA6 ED37                A   375    				ld ix,(hl)						                           A   376    
000CA8 2A 75 61 00         A   377    				ld hl,(os_args_loc)				000CAC CD E0 0E 00         A   378    				call os_run_command				                           A   379    
000CB0 C8                  A   380    				ret z							000CB1 B7                  A   381    				or a
000CB2 20 13               A   382    				jr nz,show_erm
000CB4 78                  A   383    os_hwe1			ld a,b							000CB5 21 3B 59 00         A   384    os_hwerr		ld hl,hex_byte_txt		
000CB9 CD 58 10 00         A   385    				call hexbyte_to_ascii	
000CBD 21 C7 5A 00         A   386    				ld hl,hw_err_msg
000CC1 CD EC 13 00         A   387    				call os_show_packed_text
000CC5 AF                  A   388    				xor a
000CC6 C9                  A   389    				ret
                           A   390    
000CC7 01000000            A   391    show_erm		ld bc,0							000CCB 4F                  A   392    				ld c,a
000CCC D680                A   393    				sub 080h						000CCE 38 11               A   394    				jr c,no_trans					000CD0 21 FB 5C 00         A   395    				ld hl,kernal_error_code_transla
000CD4 CB77                A   396    				bit 6,a							000CD6 28 06               A   397    				jr z,not_fs_err					000CD8 21 09 5D 00         A   398    				ld hl,fs_error_code_translation
000CDC D640                A   399    				sub 040h
000CDE 4F                  A   400    not_fs_err		ld c,a
000CDF 09                  A   401    				add hl,bc
000CE0 4E                  A   402    				ld c,(hl)
000CE1 0600                A   403    no_trans		ld b,0
000CE3 21 3C 5C 00         A   404    				ld hl,packed_msg_list
000CE7 7E                  A   405    findmsg			ld a,(hl)
000CE8 FEFF                A   406    				cp 0ffh
000CEA C8                  A   407    				ret z							000CEB 23                  A   408    				inc hl
000CEC B7                  A   409    				or a
000CED 20 F8               A   410    				jr nz,findmsg					000CEF 04                  A   411    				inc b
000CF0 79                  A   412    				ld a,c							000CF1 B8                  A   413    				cp b
000CF2 20 F3               A   414    				jr nz,findmsg
000CF4 CD EC 13 00         A   415    				call os_show_packed_text
000CF8 CD B5 13 00         A   416    				call os_new_line
000CFC AF                  A   417    				xor a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  11


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000CFD C9                  A   418    				ret
                           A   419    	
                           A   420    
000CFE                     A   421    os_no_kernal_command_found
                           A   422    
000CFE 3E30                A   423    				ld a,030h						000D00 32 DD 5E 00         A   424    fvolcmd			ld (vol_txt+4),a				000D04 F5                  A   425    				push af			
000D05 11 DA 5E 00         A   426    				ld de,vol_txt+1		
000D09 0605                A   427    				ld b,5			
000D0B CD DC 11 00         A   428    				call os_compare_strings	
000D0F 28 08               A   429    				jr z,gotvolcmd		
000D11 F1                  A   430    				pop af				
000D12 3C                  A   431    				inc a			
000D13 FE38                A   432    				cp 030h+max_volumes		
000D15 20 E9               A   433    				jr nz,fvolcmd		
000D17 18 0B               A   434    				jr novolcmd		
000D19 F1                  A   435    gotvolcmd		pop af
000D1A D630                A   436    				sub 030h
000D1C CD C4 1A 00         A   437    				call os_change_volume
000D20 C3 C5 0E 00         A   438    				jp extcmderf					                           A   439    		
                           A   440    
                           A   441    
000D24 7E                  A   442    novolcmd		ld a,(hl)						000D25 FE47                A   443    				cp 'G'							000D27 20 29               A   444    				jr nz,not_g_cmd					000D29 23                  A   445    				inc hl
000D2A 7E                  A   446    				ld a,(hl)
000D2B 2B                  A   447    				dec hl
000D2C FE20                A   448    				cp ' '
000D2E 20 22               A   449    				jr nz,not_g_cmd
000D30 23                  A   450    				inc hl
000D31 CD AB 0F 00         A   451    				call os_scan_for_non_space
000D35 22 75 61 00         A   452    				ld (os_args_loc),hl				000D39 B7                  A   453    				or a
000D3A 20 04               A   454    				jr nz,gotgargs
000D3C 3E1F                A   455    				ld a,01fh						000D3E 18 87               A   456    				jr show_erm
000D40 CD 97 10 00         A   457    gotgargs		call ascii_to_hex_no_scan		000D44 B7                  A   458    				or a
000D45 20 80               A   459    				jr nz,show_erm
000D47 CD F5 3C 00         A   460    				call enable_nmi					000D4B D5                  A   461    				push de
000D4C DDE1                A   462    				pop ix			
000D4E C3 E0 0E 00         A   463    				jp os_run_command				                           A   464    				
                           A   465    				
                           A   466    
000D52 22 75 61 00         A   467    not_g_cmd		ld (os_args_loc),hl				000D56 22 78 61 00         A   468    				ld (os_args_pos_cache),hl
000D5A CD DF 0F 00         A   469    				call os_args_to_fn_append_ezp	Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  12


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A   470    	
000D5E CD EA 0E 00         A   471    				call cache_dir_block			                           A   472    
000D62 CD E3 47 00         A   473    				call fs_check_disk_format		000D66 38 3C               A   474    				jr c,os_ndfxc
000D68 B7                  A   475    				or a							000D69 20 39               A   476    				jr nz,os_ndfxc
                           A   477    	
000D6B CD 85 49 00         A   478    				call fs_open_file_command		000D6F DA B5 0C 00         A   479    				jp c,os_hwerr			 		000D73 B7                  A   480    				or a
000D74 28 38               A   481    				jr z,os_gecmd					                           A   482    
000D76 CD 56 49 00         A   483    				call fs_goto_root_dir_command	000D7A 21 98 55 00         A   484    				ld hl,os_dos_cmds_txt
000D7E CD E4 51 00         A   485    				call fs_hl_to_filename
000D82 CD 31 49 00         A   486    				call fs_change_dir_command		000D86 DA B5 0C 00         A   487    				jp c,os_hwerr
000D8A B7                  A   488    				or a
000D8B 20 17               A   489    				jr nz,os_ndfxc					                           A   490    	
000D8D 2A 78 61 00         A   491    				ld hl,(os_args_pos_cache)		000D91 22 75 61 00         A   492    				ld (os_args_loc),hl
000D95 CD DF 0F 00         A   493    				call os_args_to_fn_append_ezp	000D99 CD 85 49 00         A   494    				call fs_open_file_command		000D9D DA B5 0C 00         A   495    				jp c,os_hwerr
000DA1 B7                  A   496    				or a
000DA2 28 0A               A   497    				jr z,os_gecmd
000DA4 CD F6 0E 00         A   498    os_ndfxc		call restore_dir_block			000DA8 3E0B                A   499    				ld a,0bh						000DAA C3 C7 0C 00         A   500    				jp show_erm
                           A   501    
000DAE 2A 75 61 00         A   502    os_gecmd		ld hl,(os_args_loc)				000DB2 CD AB 0F 00         A   503    				call os_scan_for_non_space		000DB6 22 75 61 00         A   504    				ld (os_args_loc),hl
                           A   505    
000DBA 11100000            A   506    				ld de,16
000DBE CD 3C 16 00         A   507    				call os_set_load_length			000DC2 21 03 68 00         A   508    				ld hl,scratch_pad
000DC6 22 44 54 00         A   509    				ld (fs_ez80_address),hl
000DCA CD D0 49 00         A   510    				call fs_read_data_command
000DCE DA B5 0C 00         A   511    				jp c,os_hwerr					000DD2 B7                  A   512    				or a
000DD3 C2 C7 0C 00         A   513    				jp nz,show_erm					000DD7 2A 05 68 00         A   514    				ld hl,(scratch_pad+2)
000DDB 1150524F            A   515    				ld de,04f5250h					000DDF AF                  A   516    				xor a	
000DE0 ED52                A   517    				sbc hl,de
000DE2 28 0A               A   518    				jr z,loc_header
000DE4 CD F6 0E 00         A   519    				call restore_dir_block			000DE8 3E1A                A   520    				ld a,01ah						000DEA C3 C7 0C 00         A   521    				jp show_erm						Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  13


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A   522    				
000DEE 3A 12 68 00         A   523    loc_header		ld a,(scratch_pad+15)			000DF2 32 4B 60 00         A   524    				ld (store_adl),a			
000DF6 CD 85 49 00         A   525    				call fs_open_file_command		000DFA DA B5 0C 00         A   526    				jp c,os_hwerr
000DFE B7                  A   527    				or a	
000DFF 20 A3               A   528    				jr nz,os_ndfxc
000E01 2A 08 68 00         A   529    				ld hl,(scratch_pad+5)			000E05 22 44 54 00         A   530    				ld (fs_ez80_address),hl
000E09 ED5B 1B 60 00       A   531    				ld de,(sysram_os_highest)
000E0E AF                  A   532    				xor a
000E0F E5                  A   533    				push hl
000E10 ED52                A   534    				sbc hl,de
000E12 E1                  A   535    				pop hl
000E13 30 0A               A   536    				jr nc,osmemok
000E15 CD F6 0E 00         A   537    				call restore_dir_block			000E19 3E26                A   538    				ld a,026h
000E1B C3 C7 0C 00         A   539    				jp show_erm
                           A   540    
000E1F ED5B 0E 68 00       A   541    osmemok			ld de,(scratch_pad+11)			000E24 7B                  A   542    				ld a,e
000E25 B2                  A   543    				or d
000E26 28 14               A   544    				jr z,noprov_spec				000E28 21310000            A   545    				ld hl,prose_version
000E2C AF                  A   546    				xor a
000E2D 40ED52              A   547    				sbc.sis hl,de					000E30 30 0A               A   548    				jr nc,noprov_spec
000E32 CD F6 0E 00         A   549    				call restore_dir_block
000E36 3E1B                A   550    				ld a,01bh						000E38 C3 C7 0C 00         A   551    				jp show_erm
                           A   552    				
000E3C CD 1F 40 00         A   553    noprov_spec		call hwsc_get_version			000E40 2A 10 68 00         A   554    				ld hl,(scratch_pad+13)			000E44 EB                  A   555    				ex de,hl						000E45 7B                  A   556    				ld a,e
000E46 B2                  A   557    				or d
000E47 28 10               A   558    				jr z,nohwv_spec					000E49 AF                  A   559    				xor a
000E4A 40ED52              A   560    				sbc.sis hl,de					000E4D 30 0A               A   561    				jr nc,nohwv_spec
000E4F CD F6 0E 00         A   562    				call restore_dir_block
000E53 3E2B                A   563    				ld a,02bh						000E55 C3 C7 0C 00         A   564    				jp show_erm
                           A   565    
000E59 ED5B 0B 68 00       A   566    nohwv_spec		ld de,(scratch_pad+8)			000E5E 3A 0D 68 00         A   567    				ld a,(scratch_pad+10)			000E62 B2                  A   568    				or d
000E63 B3                  A   569    				or e
000E64 28 04               A   570    				jr z,readcode					000E66 CD 3C 16 00         A   571    				call os_set_load_length			                           A   572    		
000E6A 2A 08 68 00         A   573    readcode		ld hl,(scratch_pad+5)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  14


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000E6E 22 7E 61 00         A   574    				ld (os_extcmd_jmp_addr),hl		000E72 CD D0 49 00         A   575    				call fs_read_data_command
000E76 F5                  A   576    				push af
000E77 CD F6 0E 00         A   577    				call restore_dir_block			000E7B F1                  A   578    				pop af
000E7C DA B5 0C 00         A   579    				jp c,os_hwerr					000E80 B7                  A   580    				or a
000E81 C2 C7 0C 00         A   581    				jp nz,show_erm					                           A   582    	
000E85 CD F5 3C 00         A   583    				call enable_nmi					000E89 DD2A 7E 61 00       A   584    				ld ix,(os_extcmd_jmp_addr)		000E8E 2A 75 61 00         A   585    				ld hl,(os_args_loc)				000E92 C3 E0 0E 00         A   586    				jp os_run_command				                           A   587    
000E96 F5                  A   588    extcmd_return	push af							000E97 CD DC 3F 00         A   589    				call hwsc_default_hw_settings	000E9B 3A 4C 60 00         A   590    				ld a,(store_registers)
000E9F B7                  A   591    				or a
000EA0 28 06               A   592    				jr z,skp_strg
000EA2 F1                  A   593    				pop af
000EA3 CD 2E 13 00         A   594    				call os_store_CPU_regs			000EA7 F5                  A   595    				push af
000EA8 F1                  A   596    skp_strg		pop af
                           A   597    
000EA9 F5                  A   598    cntuasr			push af
000EAA 21 03 68 00         A   599    				ld hl,scratch_pad				000EAE CD 58 10 00         A   600    				call hexbyte_to_ascii
000EB2 3600                A   601    				ld (hl),0
000EB4 11 03 68 00         A   602    				ld de,scratch_pad
000EB8 21 11 56 00         A   603    				ld hl,error_txt
000EBC CD 6F 1B 00         A   604    				call os_set_envar
000EC0 CD FE 3C 00         A   605    				call disable_nmi				000EC4 F1                  A   606    				pop af
000EC5 28 12               A   607    extcmderf		jr z,not_errc					000EC7 B7                  A   608    				or a
000EC8 CA B4 0C 00         A   609    				jp z,os_hwe1					000ECC FEFF                A   610    				cp 0ffh							000ECE CA 48 0A 00         A   611    				jp z,os_cold_start
000ED2 FEFE                A   612    				cp 0feh							000ED4 C8                  A   613    				ret z
000ED5 C3 C7 0C 00         A   614    				jp show_erm						000ED9 FEFF                A   615    not_errc		cp 0ffh							000EDB CA 48 0A 00         A   616    				jp z,os_cold_start
000EDF C9                  A   617    				ret
                           A   618    				
                           A   619    ;----------------------------------------------
                           A   620    
000EE0                     A   621    os_run_command									000EE0 ED3906              A   622    				out0 (port_nmi_ack),a			000EE3 DD22 4D 60 00       A   623    				ld (com_start_addr),ix			000EE8 DDE9                A   624    				jp (ix)							                           A   625    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  15


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A   626    ;----------------------------------------------
                           A   627    
000EEA                     A   628    cache_dir_block
                           A   629    
                           A   630    	
000EEA D5                  A   631    				push de
000EEB CD 68 1A 00         A   632    				call fs_get_dir_cluster	
000EEF ED53 7B 61 00       A   633    				ld (os_dir_block_cache),de
000EF4 D1                  A   634    				pop de	
000EF5 C9                  A   635    				ret
                           A   636    		
                           A   637    
000EF6                     A   638    restore_dir_block
                           A   639    
000EF6 D5                  A   640    				push de
000EF7 ED5B 7B 61 00       A   641    				ld de,(os_dir_block_cache)
000EFC CD 74 1A 00         A   642    				call fs_update_dir_cluster
000F00 D1                  A   643    				pop de
000F01 C9                  A   644    				ret
                           A   645    		
                           A   646    ;==============================================
                           A   647    ; Routines called by command line
                           A   648    ;==============================================
                           A   649    
                           A   650    ; Set:-
                           A   651    ; HL to address of string
                           A   652    ; c = y
                           A   653    ; b = x
                           A   654    
000F02                     A   655    ext_print_string
                           A   656    
000F02 CC A0 15 00         A   657    				call z,mbase_hl
000F06 18 05               A   658    				jr os_print_string
                           A   659    
000F08                     A   660    os_print_string_cond
                           A   661    
000F08 CD 1B 1A 00         A   662    				call test_quiet_mode
000F0C C0                  A   663    				ret nz
                           A   664    
000F0D                     A   665    os_print_string
                           A   666    
000F0D D5                  A   667    				push de
000F0E C5                  A   668    				push bc
000F0F ED4B B3 60 00       A   669    				ld bc,(cursor_pos)				000F14 7E                  A   670    prstr_lp		ld a,(hl)
000F15 23                  A   671    				inc hl
000F16 B7                  A   672    				or a
000F17 20 09               A   673    				jr nz,prstr_ne
000F19 ED43 B3 60 00       A   674    				ld (cursor_pos),bc
000F1E C1                  A   675    				pop bc
000F1F D1                  A   676    				pop de
000F20 AF                  A   677    				xor a							Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  16


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000F21 C9                  A   678    				ret
                           A   679    
000F22 FE0D                A   680    prstr_ne		cp 13
000F24 20 04               A   681    				jr nz,not_cr
000F26 0600                A   682    				ld b,0
000F28 18 EA               A   683    				jr prstr_lp
000F2A FE0A                A   684    not_cr			cp 10
000F2C 28 12               A   685    				jr z,line_feed				
000F2E FE0B                A   686    				cp 11
000F30 28 0C               A   687    				jr z,next_line
000F32 CD 72 3E 00         A   688    				call hwsc_plot_char
000F36 04                  A   689    				inc b
000F37 3A 7A 5E 00         A   690    				ld a,(charmap_columns)
000F3B B8                  A   691    				cp b
000F3C 20 D6               A   692    				jr nz,prstr_lp
000F3E 0600                A   693    next_line		ld b,0
000F40 0C                  A   694    line_feed		inc c
000F41 3A 77 5E 00         A   695    				ld a,(charmap_rows)
000F45 B9                  A   696    				cp c
000F46 20 CC               A   697    				jr nz,prstr_lp
000F48 0D                  A   698    				dec c
000F49 CD 37 3E 00         A   699    				call hwsc_scroll_up
000F4D 18 C5               A   700    				jr prstr_lp
                           A   701    
                           A   702    ;----------------------------------------------
                           A   703    
000F4F 21 C1 61 00         A   704    os_print_char	ld hl,char_to_print
000F53 77                  A   705    				ld (hl),a
000F54 18 B7               A   706    				jr os_print_string
                           A   707    
                           A   708    ;----------------------------------------------
                           A   709    
000F56 F5                  A   710    home_cursor		push af
000F57 AF                  A   711    				xor a
000F58 32 B4 60 00         A   712    				ld (cursor_x),a
000F5C F1                  A   713    				pop af
000F5D C9                  A   714    				ret
                           A   715    				
                           A   716    ;----------------------------------------------
                           A   717    
000F5E                     A   718    os_cursor_flash
                           A   719    
000F5E 21 B6 60 00         A   720    				ld hl,cursorflashtimer
000F62 34                  A   721    				inc (hl)
000F63 7E                  A   722    				ld a,(hl)
000F64 FE19                A   723    				cp 25
000F66 C0                  A   724    				ret nz
000F67 3600                A   725    				ld (hl),0
000F69 3A B7 60 00         A   726    				ld a,(cursor_status)
000F6D EE01                A   727    				xor 1
000F6F 32 B7 60 00         A   728    				ld (cursor_status),a
000F73 28 15               A   729    				jr z,no_cursor
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  17


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000F75 3E5F                A   730    				ld a,05fh
000F77 21 74 5E 00         A   731    				ld hl,overwrite_mode
000F7B CB46                A   732    				bit 0,(hl)
000F7D 28 02               A   733    				jr z,cursor_selected
000F7F 3E7F                A   734    				ld a,07fh
                           A   735    				
000F81 CD 90 0F 00         A   736    cursor_selected	call os_set_cursor_image
000F85 CD C5 3E 00         A   737    				call hwsc_draw_cursor			000F89 C9                  A   738    				ret
                           A   739    
000F8A CD AB 3E 00         A   740    no_cursor		call hwsc_remove_cursor
000F8E C9                  A   741    				ret
                           A   742    
                           A   743    
                           A   744    ;----------------------------------------------
                           A   745    
000F8F                     A   746    ext_set_cursor_image
                           A   747    
000F8F 7B                  A   748    				ld a,e
                           A   749    				
000F90                     A   750    os_set_cursor_image
                           A   751    			
000F90 32 75 5E 00         A   752    				ld (cursor_image_char),a
000F94 BF                  A   753    				cp a
000F95 C9                  A   754    				ret
                           A   755    
                           A   756    ;----------------------------------------------
                           A   757    
000F96                     A   758    os_next_arg
                           A   759    
000F96 CD A2 0F 00         A   760    				call os_scan_for_space
000F9A B7                  A   761    				or a
000F9B C8                  A   762    				ret z
000F9C CD AB 0F 00         A   763    				call os_scan_for_non_space
000FA0 B7                  A   764    				or a
000FA1 C9                  A   765    				ret
                           A   766    
                           A   767    
                           A   768    ;----------------------------------------------
                           A   769    	
                           A   770    
000FA2                     A   771    os_scan_for_space
                           A   772    
000FA2 7E                  A   773    os_sfspl 		ld a,(hl)						000FA3 B7                  A   774    				or a							000FA4 C8                  A   775    				ret z
000FA5 FE20                A   776    				cp ' '
000FA7 C8                  A   777    				ret z
000FA8 23                  A   778    				inc hl
000FA9 18 F7               A   779    				jr os_sfspl
                           A   780    	
                           A   781    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  18


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A   782    ;----------------------------------------------
                           A   783    	
                           A   784    
000FAB                     A   785    os_scan_for_non_space
                           A   786    
000FAB 2B                  A   787    				dec hl							000FAC 23                  A   788    os_nsplp		inc hl			
000FAD 7E                  A   789    				ld a,(hl)			
000FAE B7                  A   790    				or a			
000FAF C8                  A   791    				ret z							000FB0 FE20                A   792    				cp ' '
000FB2 28 F8               A   793    				jr z,os_nsplp
000FB4 C9                  A   794    				ret
                           A   795    	
                           A   796    	
                           A   797    ;----------------------------------------------
                           A   798    
000FB5                     A   799    os_args_to_alt_filename
                           A   800    
000FB5 CD 0F 10 00         A   801    				call os_atfn_pre				000FB9 C8                  A   802    				ret z
000FBA CD DE 51 00         A   803    				call fs_hl_to_alt_filename
000FBE 18 09               A   804    				jr os_atfrl
                           A   805    	
                           A   806    	
                           A   807    	
                           A   808    		
000FC0                     A   809    os_args_to_filename
                           A   810    
000FC0 CD 0F 10 00         A   811    				call os_atfn_pre				000FC4 C8                  A   812    				ret z
000FC5 CD E4 51 00         A   813    				call fs_hl_to_filename	
                           A   814    
000FC9 7E                  A   815    os_atfrl		ld a,(hl)						000FCA B7                  A   816    				or a							000FCB 28 0B               A   817    				jr z,os_cfne
000FCD FE20                A   818    				cp 32
000FCF 28 07               A   819    				jr z,os_cfne
000FD1 FE2F                A   820    				cp 02fh
000FD3 28 03               A   821    				jr z,os_cfne
000FD5 23                  A   822    				inc hl
000FD6 18 F1               A   823    				jr os_atfrl	
000FD8 22 75 61 00         A   824    os_cfne			ld (os_args_loc),hl				000FDC 79                  A   825    				ld a,c			
000FDD B7                  A   826    				or a							000FDE C9                  A   827    				ret
                           A   828    
                           A   829    
                           A   830    
                           A   831    
000FDF                     A   832    os_args_to_fn_append_ezp
                           A   833    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  19


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A   834    	
000FDF CD 0F 10 00         A   835    				call os_atfn_pre				000FE3 C8                  A   836    				ret z
000FE4 11 50 60 00         A   837    				ld de,temp_string
000FE8 7E                  A   838    ccmdtlp			ld a,(hl)						000FE9 B7                  A   839    				or a
000FEA 28 0D               A   840    				jr z,goteocmd
000FEC FE20                A   841    				cp ' '
000FEE 28 09               A   842    				jr z,goteocmd
000FF0 FE2E                A   843    				cp '.'
000FF2 28 05               A   844    				jr z,goteocmd
000FF4 12                  A   845    				ld (de),a
000FF5 13                  A   846    				inc de
000FF6 23                  A   847    				inc hl
000FF7 18 EF               A   848    				jr ccmdtlp
                           A   849    	
000FF9 E5                  A   850    goteocmd		push hl
000FFA 21 EB 55 00         A   851    				ld hl,ezp_extension_txt
000FFE 01050000            A   852    				ld bc,5
001002 EDB0                A   853    				ldir 
001004 21 50 60 00         A   854    				ld hl,temp_string
001008 CD E4 51 00         A   855    				call fs_hl_to_filename
00100C E1                  A   856    				pop hl
00100D 18 BA               A   857    				jr os_atfrl
                           A   858    	
                           A   859    
                           A   860    
                           A   861    
00100F                     A   862    os_atfn_pre
                           A   863    
00100F 2A 75 61 00         A   864    				ld hl,(os_args_loc)				001013 CD AB 0F 00         A   865    				call os_scan_for_non_space
001017 B7                  A   866    				or a
001018 C8                  A   867    				ret z
001019 7E                  A   868    				ld a,(hl)
00101A FE2F                A   869    				cp 02fh							00101C 20 01               A   870    				jr nz,notfsl1
00101E 23                  A   871    				inc hl
00101F AF                  A   872    notfsl1			xor a
001020 3C                  A   873    				inc a
001021 C9                  A   874    				ret
                           A   875    
                           A   876    
                           A   877    ;--------- Number <-> String functions --------
                           A   878    
                           A   879    
001022                     A   880    os_clear_output_line
                           A   881    
001022 C5                  A   882    				push bc
001023 E5                  A   883    				push hl			
001024 21 23 61 00         A   884    				ld hl,output_line
001028 01500000            A   885    				ld bc,max_buffer_chars
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  20


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00102C 3E20                A   886    				ld a,32
00102E CD 79 15 00         A   887    				call os_bchl_memfill
001032 E1                  A   888    				pop hl
001033 C1                  A   889    				pop bc
001034 C9                  A   890    				ret
                           A   891    	
                           A   892    	
                           A   893    	
001035                     A   894    os_skip_leading_ascii_zeros
                           A   895    
001035 7E                  A   896    slazlp			ld a,(hl)						001036 FE30                A   897    				cp '0'							001038 C0                  A   898    				ret nz
001039 23                  A   899    				inc hl
00103A 10 F9               A   900    				djnz slazlp
00103C C9                  A   901    				ret
                           A   902    	
                           A   903    
                           A   904    
00103D                     A   905    os_leading_ascii_zeros_to_spaces
                           A   906    
00103D E5                  A   907    				push hl
00103E 7E                  A   908    clazlp			ld a,(hl)						00103F FE30                A   909    				cp '0'							001041 20 05               A   910    				jr nz,claze	
001043 3620                A   911    				ld (hl),' '
001045 23                  A   912    				inc hl
001046 10 F6               A   913    				djnz clazlp
001048 E1                  A   914    claze			pop hl
001049 C9                  A   915    				ret
                           A   916    	
                           A   917    
                           A   918    
                           A   919    		
00104A                     A   920    n_hexbytes_to_ascii
                           A   921    
00104A 1A                  A   922    				ld a,(de)						00104B CD 58 10 00         A   923    				call hexbyte_to_ascii			00104F 1B                  A   924    				dec de
001050 10 F8               A   925    				djnz n_hexbytes_to_ascii
001052 C9                  A   926    				ret
                           A   927    			
                           A   928    			
                           A   929    
001053                     A   930    ext_hexbyte_to_ascii
                           A   931    
001053 CC A0 15 00         A   932    				call z,mbase_hl
001057 7B                  A   933    				ld a,e
                           A   934    
001058                     A   935    hexbyte_to_ascii
                           A   936    
001058 C5                  A   937    				push bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  21


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001059 47                  A   938    				ld b,a							00105A CB3F                A   939    				srl a							00105C CB3F                A   940    				srl a
00105E CB3F                A   941    				srl a
001060 CB3F                A   942    				srl a
001062 CD 74 10 00         A   943    				call hxdigconv
001066 77                  A   944    				ld (hl),a
001067 23                  A   945    				inc hl
001068 78                  A   946    				ld a,b
001069 E60F                A   947    				and 0fh
00106B CD 74 10 00         A   948    				call hxdigconv
00106F 77                  A   949    				ld (hl),a
001070 23                  A   950    				inc hl
001071 C1                  A   951    				pop bc
001072 AF                  A   952    				xor a							001073 C9                  A   953    				ret
                           A   954    				
001074 C630                A   955    hxdigconv		add a,030h
001076 FE3A                A   956    				cp 03ah
001078 38 02               A   957    				jr c,hxdone
00107A C607                A   958    				add a,7
00107C C9                  A   959    hxdone			ret
                           A   960    
                           A   961    
                           A   962    
                           A   963    
00107D                     A   964    hexword_to_ascii	
                           A   965    
00107D 7A                  A   966    				ld a,d							00107E CD 58 10 00         A   967    				call hexbyte_to_ascii
001082 7B                  A   968    				ld a,e
001083 CD 58 10 00         A   969    				call hexbyte_to_ascii
001087 C9                  A   970    				ret
                           A   971    	
                           A   972    
                           A   973    
                           A   974    
001088                     A   975    ext_ascii_to_hexword
                           A   976    		
001088 CC A0 15 00         A   977    				call z,mbase_hl
                           A   978    
00108C                     A   979    ascii_to_hexword
                           A   980    	
00108C CD AB 0F 00         A   981    				call os_scan_for_non_space		001090 B7                  A   982    				or a
001091 20 04               A   983    				jr nz,ascii_to_hex_no_scan
001093 3E81                A   984    				ld a,081h						001095 B7                  A   985    				or a
001096 C9                  A   986    				ret	
                           A   987    
                           A   988    	
001097                     A   989    ascii_to_hex_no_scan
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  22


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A   990    
001097 DDE5                A   991    				push ix
001099 C5                  A   992    				push bc
00109A DD210000 00         A   993    				ld ix,0
00109F 0606                A   994    				ld b,6							0010A1 CD CD 10 00         A   995    athlp			call ascii_to_hex_digit
0010A5 FEF0                A   996    				cp 0f0h							0010A7 28 17               A   997    				jr z,athend
0010A9 FED0                A   998    				cp 0d0h
0010AB 28 13               A   999    				jr z,athend						0010AD FE10                A  1000    				cp 16
0010AF 30 17               A  1001    				jr nc,badhex					0010B1 DD29                A  1002    				add ix,ix						0010B3 DD29                A  1003    				add ix,ix
0010B5 DD29                A  1004    				add ix,ix
0010B7 DD29                A  1005    				add ix,ix
0010B9 DDB5                A  1006    				or a,ixl
0010BB DD6F                A  1007    				ld ixl,a
0010BD 23                  A  1008    				inc hl
0010BE 10 E1               A  1009    				djnz athlp
0010C0 DDE5                A  1010    athend			push ix
0010C2 D1                  A  1011    				pop de
0010C3 AF                  A  1012    				xor a
0010C4 C1                  A  1013    ath_quit		pop bc
0010C5 DDE1                A  1014    				pop ix							0010C7 C9                  A  1015    				ret
                           A  1016    		
0010C8 3E82                A  1017    badhex			ld a,82h						0010CA B7                  A  1018    				or a
0010CB 18 F7               A  1019    				jr ath_quit
                           A  1020    				
                           A  1021    	
                           A  1022    		
0010CD                     A  1023    ascii_to_hex_digit
                           A  1024    
0010CD 7E                  A  1025    				ld a,(hl)						0010CE FE61                A  1026    				cp 061h
0010D0 38 02               A  1027    				jr c,hc_uppercase
0010D2 D620                A  1028    				sub 020h						0010D4 D63A                A  1029    hc_uppercase	sub 03ah						0010D6 38 02               A  1030    				jr c,zeronine
0010D8 C6F9                A  1031    				add a,0f9h
0010DA C60A                A  1032    zeronine		add a,0ah
0010DC C9                  A  1033    				ret
                           A  1034    
                           A  1035    
                           A  1036    ;--------- Text Input / Non-numeric string func
                           A  1037    
                           A  1038    ; Waits for user to enter a string of character
                           A  1039    ; Before calling, set:  HL = destination of str
                           A  1040    ;                        E = max number of char
                           A  1041    ; Returns:   A  = number of characters in enter
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  23


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1042    
                           A  1043    
0010DD                     A  1044    ext_user_input
0010DD CC A0 15 00         A  1045    				call z,mbase_hl
                           A  1046    				
0010E1                     A  1047    os_user_input
0010E1 AF                  A  1048    				xor a
0010E2 32 47 5E 00         A  1049    				ld (ui_index),a
0010E6 22 49 5E 00         A  1050    				ld (ui_string_addr),hl
0010EA 7B                  A  1051    				ld a,e
0010EB 32 48 5E 00         A  1052    				ld (ui_maxchars),a
                           A  1053    				
0010EF 3A 74 5E 00         A  1054    				ld a,(overwrite_mode)
0010F3 32 D0 60 00         A  1055    				ld (ui_im_cache),a
0010F7 AF                  A  1056    				xor a
0010F8 32 74 5E 00         A  1057    				ld (overwrite_mode),a			                           A  1058    				
0010FC CD C5 3E 00         A  1059    ui_loop			call hwsc_draw_cursor			001100 CD 75 43 00         A  1060    				call os_wait_key_press			001104 32 E8 61 00         A  1061    				ld (current_scancode),a
001108 78                  A  1062    				ld a,b
001109 32 E9 61 00         A  1063    				ld (current_asciicode),a		00110D CD AB 3E 00         A  1064    				call hwsc_remove_cursor
                           A  1065    	
001111 3A E8 61 00         A  1066    				ld a,(current_scancode)
001115 FE66                A  1067    				cp 066h							001117 20 1F               A  1068    				jr nz,os_nuibs
001119 3A 47 5E 00         A  1069    				ld a,(ui_index)
00111D B7                  A  1070    				or a
00111E 28 DC               A  1071    				jr z,ui_loop					001120 21 B4 60 00         A  1072    				ld hl,cursor_x					001124 35                  A  1073    				dec (hl)						001125 46                  A  1074    os_uixok		ld b,(hl)		
001126 3A B3 60 00         A  1075    				ld a,(cursor_y)
00112A 4F                  A  1076    				ld c,a
00112B 3E20                A  1077    				ld a,32
00112D CD 72 3E 00         A  1078    				call hwsc_plot_char
001131 21 47 5E 00         A  1079    				ld hl,ui_index
001135 35                  A  1080    				dec (hl)						001136 18 C4               A  1081    				jr ui_loop
                           A  1082    
001138 FE76                A  1083    os_nuibs		cp 076h							00113A 28 6B               A  1084    				jr z,ui_aborted
00113C FE5A                A  1085    				cp 05ah							00113E 28 46               A  1086    				jr z,ui_enter_pressed
                           A  1087    	
001140 3A 47 5E 00         A  1088    				ld a,(ui_index)					001144 21 48 5E 00         A  1089    				ld hl,ui_maxchars
001148 BE                  A  1090    				cp (hl)
001149 28 B1               A  1091    				jr z,ui_loop	
                           A  1092    
00114B 3A E9 61 00         A  1093    				ld a,(current_asciicode)		Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  24


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00114F FE20                A  1094    				cp 32							001151 38 A9               A  1095    				jr c,ui_loop					                           A  1096    
001153 57                  A  1097    ui_gtcha		ld d,a
001154 2A 49 5E 00         A  1098    				ld hl,(ui_string_addr)
001158 3A 47 5E 00         A  1099    				ld a,(ui_index)
00115C 01000000            A  1100    				ld bc,0
001160 4F                  A  1101    				ld c,a
001161 09                  A  1102    				add hl,bc
001162 72                  A  1103    				ld (hl),d						001163 3C                  A  1104    				inc a
001164 32 47 5E 00         A  1105    				ld (ui_index),a					                           A  1106    				
001168 ED4B B3 60 00       A  1107    				ld bc,(cursor_y)				00116D 7A                  A  1108    				ld a,d
00116E CD 72 3E 00         A  1109    				call hwsc_plot_char		
001172 21 B4 60 00         A  1110    				ld hl,cursor_x					001176 34                  A  1111    				inc (hl)
001177 3A 7A 5E 00         A  1112    				ld a,(charmap_columns)			00117B BE                  A  1113    				cp (hl)
00117C C2 FC 10 00         A  1114    				jp nz,ui_loop
001180 3600                A  1115    				ld (hl),0
001182 C3 FC 10 00         A  1116    				jp ui_loop
                           A  1117    
001186                     A  1118    ui_enter_pressed
                           A  1119    				
001186 3A D0 60 00         A  1120    				ld a,(ui_im_cache)				00118A 32 74 5E 00         A  1121    				ld (overwrite_mode),a
00118E 3A 47 5E 00         A  1122    				ld a,(ui_index)					001192 B7                  A  1123    				or a
001193 20 04               A  1124    				jr nz,ui_data
001195 3E81                A  1125    				ld a,081h						001197 B7                  A  1126    				or a
001198 C9                  A  1127    				ret
001199 2A 49 5E 00         A  1128    ui_data			ld hl,(ui_string_addr)
00119D 11000000            A  1129    				ld de,0
0011A1 5F                  A  1130    				ld e,a
0011A2 19                  A  1131    				add hl,de
0011A3 3600                A  1132    				ld (hl),0						0011A5 BF                  A  1133    				cp a							0011A6 C9                  A  1134    				ret
                           A  1135    
0011A7 3A D0 60 00         A  1136    ui_aborted		ld a,(ui_im_cache)				0011AB 32 74 5E 00         A  1137    				ld (overwrite_mode),a
0011AF 3E80                A  1138    				ld a,080h						0011B1 B7                  A  1139    				or a							0011B2 C9                  A  1140    				ret
                           A  1141    		
                           A  1142    ;----------------------------------------------
                           A  1143    	
0011B3                     A  1144    os_count_lines
                           A  1145    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  25


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0011B3 E5                  A  1146    				push hl							0011B4 0679                A  1147    				ld b,'y'						0011B6 21 B8 60 00         A  1148    				ld hl,os_linecount			
0011BA 34                  A  1149    				inc (hl)						0011BB 3A 77 5E 00         A  1150    				ld a,(charmap_rows)
0011BF D604                A  1151    				sub 4
0011C1 BE                  A  1152    				cp (hl)
0011C2 20 0E               A  1153    				jr nz,os_nntpo
0011C4 3600                A  1154    				ld (hl),0
0011C6 21 F0 55 00         A  1155    				ld hl,os_more_txt
0011CA CD 0D 0F 00         A  1156    				call os_print_string
0011CE CD 75 43 00         A  1157    				call os_wait_key_press	
0011D2 E1                  A  1158    os_nntpo		pop hl
0011D3 C9                  A  1159    				ret
                           A  1160    
                           A  1161    ;----------------------------------------------
                           A  1162    
0011D4                     A  1163    ext_compare_strings
                           A  1164    	
0011D4 CC A0 15 00         A  1165    				call z,mbase_hl
0011D8 CC B1 15 00         A  1166    				call z,mbase_de
                           A  1167    				
0011DC                     A  1168    os_compare_strings
                           A  1169    
                           A  1170    ; both strings at HL/DE should be zero terminat
                           A  1171    ; compare will fail if string lengths are diffe
                           A  1172    ; unless count (B) is reached first
                           A  1173    ; Case is ignored
                           A  1174    ; Zero flag set on return if same
                           A  1175    
0011DC E5                  A  1176    				push hl							0011DD D5                  A  1177    				push de							0011DE 1A                  A  1178    ocslp			ld a,(de)						0011DF B7                  A  1179    				or a
0011E0 28 0C               A  1180    				jr z,ocsbt
0011E2 CD 1F 12 00         A  1181    				call case_insensitive_compare	0011E6 20 0E               A  1182    				jr nz,ocs_diff
0011E8 13                  A  1183    				inc de
0011E9 23                  A  1184    				inc hl
0011EA 10 F2               A  1185    				djnz ocslp
0011EC 18 04               A  1186    				jr ocs_same
0011EE 1A                  A  1187    ocsbt			ld a,(de)						0011EF B6                  A  1188    				or (hl)
0011F0 20 04               A  1189    				jr nz,ocs_diff
0011F2 D1                  A  1190    ocs_same		pop de
0011F3 E1                  A  1191    				pop hl
0011F4 AF                  A  1192    				xor a							0011F5 C9                  A  1193    				ret
0011F6 D1                  A  1194    ocs_diff		pop de
0011F7 E1                  A  1195    				pop hl
0011F8 AF                  A  1196    				xor a							0011F9 3C                  A  1197    				inc a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  26


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0011FA C9                  A  1198    				ret
                           A  1199    
                           A  1200    
                           A  1201    ;----------------------------------------------
                           A  1202    
0011FB                     A  1203    os_copy_ascii_run
                           A  1204    
                           A  1205    ;INPUT HL = source ($00 or $20 terminates)
                           A  1206    ;      DE = dest
                           A  1207    ;       b = max chars
                           A  1208    
                           A  1209    ;OUTPUT HL/DE = end of runs
                           A  1210    ;           c = char count
                           A  1211    	
0011FB 0E00                A  1212    				ld c,0
0011FD 7E                  A  1213    cpyar_lp		ld a,(hl)
0011FE B7                  A  1214    				or a
0011FF C8                  A  1215    				ret z
001200 FE20                A  1216    				cp 32
001202 C8                  A  1217    				ret z
001203 12                  A  1218    				ld (de),a
001204 23                  A  1219    				inc hl
001205 13                  A  1220    				inc de
001206 0C                  A  1221    				inc c
001207 10 F4               A  1222    				djnz cpyar_lp
001209 C9                  A  1223    				ret
                           A  1224    
                           A  1225    ;----------------------------------------------
                           A  1226    
00120A                     A  1227    uppercasify_string
                           A  1228    
                           A  1229    ; Set HL to string location ($00 quits)
                           A  1230    ; Set B to max number of chars
                           A  1231    
00120A 7E                  A  1232    				ld a,(hl)
00120B B7                  A  1233    				or a
00120C C8                  A  1234    				ret z
00120D CD 16 12 00         A  1235    				call os_uppercasify
001211 77                  A  1236    				ld (hl),a
001212 23                  A  1237    				inc hl
001213 10 F5               A  1238    				djnz uppercasify_string	
001215 C9                  A  1239    				ret
                           A  1240    	
                           A  1241    
001216                     A  1242    os_uppercasify
                           A  1243    
                           A  1244    ; INPUT/OUTPUT A = ascii char to make uppercase
                           A  1245    
001216 FE61                A  1246    				cp 061h			
001218 D8                  A  1247    				ret c
001219 FE7B                A  1248    				cp 07bh
00121B D0                  A  1249    				ret nc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  27


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00121C D620                A  1250    				sub 020h				
00121E C9                  A  1251    				ret
                           A  1252    
                           A  1253    ;----------------------------------------------
                           A  1254    
00121F                     A  1255    case_insensitive_compare
                           A  1256    
                           A  1257    ; compares A with (HL) disregarding the case of
                           A  1258    ; Zero flag set if the characters are the same
                           A  1259    ; all registers are preserved.
                           A  1260    
00121F C5                  A  1261    				push bc					
001220 4F                  A  1262    				ld c,a
                           A  1263    
001221 CD 16 12 00         A  1264    				call os_uppercasify				001225 47                  A  1265    				ld b,a
001226 7E                  A  1266    				ld a,(hl)
001227 CD 16 12 00         A  1267    				call os_uppercasify
00122B B8                  A  1268    				cp b
                           A  1269    
00122C 79                  A  1270    				ld a,c
00122D C1                  A  1271    				pop bc
00122E C9                  A  1272    				ret
                           A  1273    
                           A  1274    ;----------------------------------------------
                           A  1275    
00122F                     A  1276    os_decimal_add
                           A  1277    
                           A  1278    ;INPUT HL = source LSB, DE = dest LSB, b = numb
                           A  1279    
00122F C5                  A  1280    				push bc
001230 0E00                A  1281    				ld c,0
001232 1A                  A  1282    decdlp			ld a,(de)
001233 86                  A  1283    				add a,(hl)
001234 81                  A  1284    				add a,c
001235 FE0A                A  1285    				cp 10
001237 38 0B               A  1286    				jr c,daddnc
001239 D60A                A  1287    				sub 10
00123B 0E01                A  1288    				ld c,1
00123D 12                  A  1289    decnclp			ld (de),a
00123E 23                  A  1290    				inc hl
00123F 13                  A  1291    				inc de
001240 10 F0               A  1292    				djnz decdlp
001242 C1                  A  1293    				pop bc
001243 C9                  A  1294    				ret
001244 0E00                A  1295    daddnc			ld c,0
001246 18 F5               A  1296    				jr decnclp
                           A  1297    	
                           A  1298    ;----------------------------------------------
                           A  1299    
001248                     A  1300    os_hex_to_decimal
                           A  1301    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  28


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1302    ; INPUT xDE hex longword
                           A  1303    ; OUTPUT xHL = decimal LSB address (8 digits) 
                           A  1304    
       00006803            A  1305    hex_to_convert		equ scratch_pad
       00006806            A  1306    decimal_digits		equ scratch_pad+3
       0000680E            A  1307    decimal_add_digits	equ scratch_pad+3+8
                           A  1308    
001248 ED53 03 68 00       A  1309    				ld (hex_to_convert),de
                           A  1310    		
00124D 21 0E 68 00         A  1311    				ld hl,decimal_add_digits
001251 E5                  A  1312    				push hl
001252 11 06 68 00         A  1313    				ld de,decimal_digits
001256 AF                  A  1314    				xor a
001257 0608                A  1315    				ld b,8
001259 12                  A  1316    setupdec		ld (de),a
00125A 77                  A  1317    				ld (hl),a
00125B 23                  A  1318    				inc hl
00125C 13                  A  1319    				inc de
00125D 10 FA               A  1320    				djnz setupdec
00125F E1                  A  1321    				pop hl
001260 3601                A  1322    				ld (hl),1
                           A  1323    	
001262 21 03 68 00         A  1324    				ld hl,hex_to_convert
001266 0603                A  1325    				ld b,3
001268 C5                  A  1326    decconvlp		push bc
001269 7E                  A  1327    				ld a,(hl)
00126A CD 88 12 00         A  1328    				call decadder
00126E CD A1 12 00         A  1329    				call decaddx16
001272 7E                  A  1330    				ld a,(hl)
001273 0F                  A  1331    				rrca
001274 0F                  A  1332    				rrca
001275 0F                  A  1333    				rrca
001276 0F                  A  1334    				rrca
001277 CD 88 12 00         A  1335    				call decadder
00127B CD A1 12 00         A  1336    				call decaddx16
00127F C1                  A  1337    				pop bc
001280 23                  A  1338    				inc hl
001281 10 E5               A  1339    				djnz decconvlp
001283 21 06 68 00         A  1340    				ld hl,decimal_digits
001287 C9                  A  1341    				ret
                           A  1342    
                           A  1343    
                           A  1344    
001288 E60F                A  1345    decadder		and 15
00128A C8                  A  1346    				ret z
00128B 47                  A  1347    				ld b,a
00128C E5                  A  1348    				push hl
00128D C5                  A  1349    daddlp			push bc
00128E 11 06 68 00         A  1350    				ld de,decimal_digits
001292 21 0E 68 00         A  1351    				ld hl,decimal_add_digits
001296 0608                A  1352    				ld b,8
001298 CD 2F 12 00         A  1353    				call os_decimal_add
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  29


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00129C C1                  A  1354    				pop bc
00129D 10 EE               A  1355    				djnz daddlp	
00129F E1                  A  1356    				pop hl
0012A0 C9                  A  1357    				ret
                           A  1358    			
                           A  1359    				
0012A1 E5                  A  1360    decaddx16		push hl
0012A2 0604                A  1361    				ld b,4							0012A4 C5                  A  1362    x16loop			push bc
0012A5 11 0E 68 00         A  1363    				ld de,decimal_add_digits
0012A9 21 0E 68 00         A  1364    				ld hl,decimal_add_digits
0012AD 0608                A  1365    				ld b,8
0012AF CD 2F 12 00         A  1366    				call os_decimal_add
0012B3 C1                  A  1367    				pop bc
0012B4 10 EE               A  1368    				djnz x16loop	
0012B6 E1                  A  1369    				pop hl
0012B7 C9                  A  1370    				ret
                           A  1371    	
                           A  1372    	
                           A  1373    ;----------------------------------------------
                           A  1374    
0012B8                     A  1375    os_show_decimal
                           A  1376    
0012B8 11 23 61 00         A  1377    				ld de,output_line				0012BC 01090000            A  1378    				ld bc,9
0012C0 09                  A  1379    				add hl,bc
0012C1 060A                A  1380    				ld b,10
0012C3 7E                  A  1381    shdeclp			ld a,(hl)
0012C4 B7                  A  1382    				or a
0012C5 28 04               A  1383    				jr z,dnodigit
0012C7 C630                A  1384    				add a,030h
0012C9 12                  A  1385    				ld (de),a
0012CA 13                  A  1386    				inc de
0012CB 2B                  A  1387    dnodigit		dec hl
0012CC 10 F5               A  1388    				djnz shdeclp
0012CE AF                  A  1389    				xor a
0012CF 12                  A  1390    				ld (de),a
0012D0 CD 18 13 00         A  1391    				call os_print_output_line
0012D4 C9                  A  1392    				ret
                           A  1393    				
                           A  1394    ;----------------------------------------------
                           A  1395    		
0012D5                     A  1396    os_copy_to_output_line
                           A  1397    	
0012D5 D5                  A  1398    				push de
0012D6 C5                  A  1399    				push bc
0012D7 11 23 61 00         A  1400    				ld de,output_line				0012DB 01510000            A  1401    				ld bc,max_buffer_chars+1		0012DF EDA0                A  1402    os_cloll		ldi
0012E1 7E                  A  1403    				ld a,(hl)
0012E2 B7                  A  1404    				or a
0012E3 28 04               A  1405    				jr z,os_clold
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  30


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0012E5 78                  A  1406    				ld a,b
0012E6 B1                  A  1407    				or c
0012E7 20 F6               A  1408    				jr nz,os_cloll
0012E9 12                  A  1409    os_clold		ld (de),a
0012EA C1                  A  1410    				pop bc
0012EB D1                  A  1411    				pop de
0012EC C9                  A  1412    				ret
                           A  1413    
                           A  1414    
                           A  1415    ;----------------------------------------------
                           A  1416    
0012ED                     A  1417    os_show_hex_address
                           A  1418    
0012ED E5                  A  1419    				push hl							0012EE 21 23 61 00         A  1420    				ld hl,output_line
0012F2 ED53 C5 60 00       A  1421    				ld (hex_address),de
0012F7 3A C7 60 00         A  1422    				ld a,(hex_address+2)
0012FB CD 58 10 00         A  1423    				call hexbyte_to_ascii
0012FF 18 10               A  1424    				jr shw_nt
                           A  1425    				
                           A  1426    
001301                     A  1427    os_show_hex_byte
                           A  1428    
001301 E5                  A  1429    				push hl							001302 21 23 61 00         A  1430    				ld hl,output_line
001306 CD 58 10 00         A  1431    				call hexbyte_to_ascii
00130A 18 09               A  1432    				jr shb_nt
                           A  1433    
                           A  1434    
                           A  1435    
00130C                     A  1436    os_show_hex_word
                           A  1437    
00130C E5                  A  1438    				push hl							00130D 21 23 61 00         A  1439    				ld hl,output_line
001311 CD 7D 10 00         A  1440    shw_nt			call hexword_to_ascii
001315 3600                A  1441    shb_nt			ld (hl),0
001317 E1                  A  1442    				pop hl
                           A  1443    
                           A  1444    	
                           A  1445    
001318                     A  1446    os_print_output_line
                           A  1447    
001318 E5                  A  1448    				push hl
001319 21 23 61 00         A  1449    				ld hl,output_line
00131D CD 0D 0F 00         A  1450    cproline		call os_print_string
001321 E1                  A  1451    				pop hl
001322 C9                  A  1452    				ret
                           A  1453    
                           A  1454    
                           A  1455    
001323                     A  1456    os_print_output_line_skip_zeroes
                           A  1457    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  31


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001323 E5                  A  1458    				push hl
001324 21 23 61 00         A  1459    				ld hl,output_line
001328 CD 35 10 00         A  1460    				call os_skip_leading_ascii_zero
00132C 18 EF               A  1461    				jr cproline
                           A  1462    				
                           A  1463    		
                           A  1464    ;----------------------------------------------
                           A  1465    
00132E                     A  1466    os_store_CPU_regs
                           A  1467    
00132E F3                  A  1468    				di								                           A  1469    
00132F 33                  A  1470    				inc sp							001330 33                  A  1471    				inc sp
001331 33                  A  1472    				inc sp
001332 ED73 44 60 00       A  1473    				ld (store_spl),sp
001337 3B                  A  1474    				dec sp							001338 3B                  A  1475    				dec sp
001339 3B                  A  1476    				dec sp
                           A  1477    				
00133A F5                  A  1478    				push af
00133B 32 27 60 00         A  1479    				ld (store_a1),a					00133F 08                  A  1480    				ex af,af'
001340 32 31 60 00         A  1481    				ld (store_a2),a
001344 08                  A  1482    				ex af,af'
001345 ED43 28 60 00       A  1483    				ld (store_bc1),bc		
00134A ED53 2B 60 00       A  1484    				ld (store_de1),de
00134F 22 2E 60 00         A  1485    				ld (store_hl1),hl
001353 D9                  A  1486    				exx
001354 ED43 32 60 00       A  1487    				ld (store_bc2),bc
001359 ED53 35 60 00       A  1488    				ld (store_de2),de
00135E 22 38 60 00         A  1489    				ld (store_hl2),hl
001362 D9                  A  1490    				exx
001363 DD22 3B 60 00       A  1491    				ld (store_ix),ix
001368 FD22 3E 60 00       A  1492    				ld (store_iy),iy
                           A  1493    				
00136D ED6E                A  1494    			    ld a,MB
00136F 32 49 60 00         A  1495    				ld (store_mbase),a
                           A  1496    								
001373 C5                  A  1497    				push bc
001374 0600                A  1498    				ld b,0
001376 20 02               A  1499    				jr nz,zfstzero					001378 CBF0                A  1500    				set 6,b
                           A  1501    
00137A 30 02               A  1502    zfstzero		jr nc,cfstzero					00137C CBC0                A  1503    				set 0,b
                           A  1504    
00137E F2 84 13 00         A  1505    cfstzero		jp p,sfstzero					001382 CBF8                A  1506    				set 7,b
                           A  1507    
001384 EA 8A 13 00         A  1508    sfstzero		jp pe,pfstzero					001388 CBD0                A  1509    				set 2,b
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  32


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1510    
00138A ED57                A  1511    pfstzero		ld a,i			
00138C EA 92 13 00         A  1512    				jp pe,ifstzero					001390 CBE0                A  1513    				set 4,b
                           A  1514    
001392 78                  A  1515    ifstzero		ld a,b
001393 32 4A 60 00         A  1516    				ld (store_f),a
                           A  1517    				
001397 3E00                A  1518    				ld a,os_location/65536			001399 ED6D                A  1519    				ld MB,a							00139B 40ED73 47 60        A  1520    				ld.sis (store_sps),sp
0013A0 3A 49 60 00         A  1521    				ld a,(store_mbase)				0013A4 ED6D                A  1522    				ld MB,a
                           A  1523    				
0013A6 C1                  A  1524    				pop bc
0013A7 F1                  A  1525    				pop af
0013A8 FB                  A  1526    				ei
0013A9 C9                  A  1527    				ret
                           A  1528    
                           A  1529    
                           A  1530    
0013AA                     A  1531    os_dont_store_registers
                           A  1532    
0013AA AF                  A  1533    				xor a
0013AB 32 4C 60 00         A  1534    				ld (store_registers),a			0013AF C9                  A  1535    				ret
                           A  1536    	
                           A  1537    	
                           A  1538    ;----------------------------------------------
                           A  1539    
0013B0                     A  1540    os_new_line_cond
                           A  1541    
0013B0 CD 1B 1A 00         A  1542    				call test_quiet_mode
0013B4 C0                  A  1543    				ret nz
                           A  1544    
                           A  1545    	
0013B5                     A  1546    os_new_line
                           A  1547    
0013B5 E5                  A  1548    				push hl
0013B6 21 08 56 00         A  1549    				ld hl,crlfx2_txt+1
0013BA CD 0D 0F 00         A  1550    				call os_print_string
0013BE E1                  A  1551    				pop hl
0013BF C9                  A  1552    				ret
                           A  1553    				
                           A  1554    ;----------------------------------------------
                           A  1555    
0013C0                     A  1556    os_set_cursor_position
                           A  1557    				
                           A  1558    												0013C0 3A 77 5E 00         A  1559    				ld a,(charmap_rows)				0013C4 3D                  A  1560    				dec a							0013C5 B9                  A  1561    				cp c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  33


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0013C6 38 14               A  1562    				jr c,badpos
0013C8 79                  A  1563    				ld a,c
0013C9 32 B3 60 00         A  1564    				ld (cursor_y),a
                           A  1565    				
0013CD 3A 7A 5E 00         A  1566    				ld a,(charmap_columns)
0013D1 3D                  A  1567    				dec a
0013D2 B8                  A  1568    				cp b
0013D3 38 07               A  1569    				jr c,badpos
0013D5 78                  A  1570    				ld a,b
0013D6 32 B4 60 00         A  1571    				ld (cursor_x),a
0013DA AF                  A  1572    				xor a
0013DB C9                  A  1573    				ret				
                           A  1574    
0013DC 3E88                A  1575    badpos			ld a,88h						0013DE B7                  A  1576    				or a
0013DF C9                  A  1577    				ret
                           A  1578    
                           A  1579    
                           A  1580    					
                           A  1581    	
                           A  1582    	
0013E0                     A  1583    os_get_cursor_position
                           A  1584    
0013E0 ED4B B3 60 00       A  1585    				ld bc,(cursor_pos)				0013E5 BF                  A  1586    				cp a							0013E6 C9                  A  1587    				ret
                           A  1588    
                           A  1589    
                           A  1590    ;----------------------------------------------
                           A  1591    
0013E7                     A  1592    os_show_packed_text_cond
                           A  1593    
0013E7 CD 1B 1A 00         A  1594    				call test_quiet_mode
0013EB C0                  A  1595    				ret nz
                           A  1596    
                           A  1597    	
0013EC                     A  1598    os_show_packed_text
                           A  1599    
                           A  1600    ; Construct sentence from internal dictionary u
                           A  1601    	
0013EC C5                  A  1602    				push bc
0013ED D5                  A  1603    				push de
0013EE DDE5                A  1604    				push ix
0013F0 DD21 23 61 00       A  1605    				ld ix,output_line
0013F5 7E                  A  1606    readpind		ld a,(hl)
0013F6 B7                  A  1607    				or a
0013F7 20 10               A  1608    				jr nz,getword					0013F9 DD2B                A  1609    				dec ix							0013FB DD7700              A  1610    				ld (ix),a						                           A  1611    			
0013FE E5                  A  1612    				push hl
0013FF CD 18 13 00         A  1613    				call os_print_output_line
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  34


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001403 E1                  A  1614    				pop hl
                           A  1615    			
001404 DDE1                A  1616    				pop ix
001406 D1                  A  1617    				pop de
001407 C1                  A  1618    				pop bc
001408 C9                  A  1619    				ret
                           A  1620    				
001409 11 37 56 00         A  1621    getword			ld de,dictionary-1
00140D 0E00                A  1622    				ld c,0
00140F 13                  A  1623    dictloop		inc de
001410 1A                  A  1624    				ld a,(de)
001411 B7                  A  1625    				or a							001412 28 04               A  1626    				jr z,faword
001414 CB7F                A  1627    				bit 7,a							001416 28 F7               A  1628    				jr z,dictloop	
                           A  1629    			
001418 0C                  A  1630    faword			inc c							001419 79                  A  1631    				ld a,c
00141A BE                  A  1632    				cp (hl)
00141B 20 F2               A  1633    				jr nz,dictloop
00141D 13                  A  1634    copytol			inc de							00141E 1A                  A  1635    				ld a,(de)
00141F B7                  A  1636    				or a
001420 28 0B               A  1637    				jr z,eoword						001422 CB7F                A  1638    				bit 7,a
001424 20 07               A  1639    				jr nz,eoword
001426 DD7700              A  1640    				ld (ix),a						001429 DD23                A  1641    				inc ix
00142B 18 F0               A  1642    				jr copytol
00142D DD360020            A  1643    eoword			ld (ix),32						001431 DD23                A  1644    				inc ix
001433 23                  A  1645    				inc hl
001434 18 BF               A  1646    				jr readpind
                           A  1647    
                           A  1648    
                           A  1649    		
                           A  1650    ;--------- Mouse functions --------------------
                           A  1651    
001436                     A  1652    os_set_mouse_window
                           A  1653    
                           A  1654    ; Set: HL/DE = window size mouse pointer is to 
                           A  1655    	
001436 22 FA 61 00         A  1656    				ld (mouse_window_size_x),hl	 
00143A ED53 FD 61 00       A  1657    				ld (mouse_window_size_y),de
00143F 21000000            A  1658    				ld hl,0
001443 22 00 62 00         A  1659    				ld (mouse_abs_x),hl
001447 22 03 62 00         A  1660    				ld (mouse_abs_y),hl
00144B 3E01                A  1661    				ld a,1
00144D 32 12 62 00         A  1662    				ld (mouse_new_window),a
001451 AF                  A  1663    				xor a
001452 C9                  A  1664    				ret
                           A  1665    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  35


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1666    			
001453                     A  1667    os_get_mouse_motion
                           A  1668    			
                           A  1669    ; Returns: ZF = Set: Relative X coord in HL, Re
                           A  1670    ;          ZF = Not set: Mouse driver not initi
                           A  1671    			
001453 3A 1A 60 00         A  1672    				ld a,(devices_connected)
001457 E602                A  1673    				and 2
001459 EE02                A  1674    				xor 2
00145B C0                  A  1675    				ret nz
00145C AF                  A  1676    ms_reread		xor a
00145D 32 F9 61 00         A  1677    				ld (mouse_updated),a
001461 2A F2 61 00         A  1678    				ld hl,(mouse_disp_x)			001465 ED5B F5 61 00       A  1679    				ld de,(mouse_disp_y)
00146A 3A F9 61 00         A  1680    				ld a,(mouse_updated)			00146E B7                  A  1681    				or a
00146F 20 EB               A  1682    				jr nz,ms_reread
001471 AF                  A  1683    mouse_end		xor a
001472 3A F8 61 00         A  1684    				ld a,(mouse_wheel)
001476 47                  A  1685    				ld b,a
001477 3A F1 61 00         A  1686    				ld a,(mouse_buttons)
00147B C9                  A  1687    				ret
                           A  1688    			
                           A  1689    			
00147C                     A  1690    os_get_mouse_position
                           A  1691    
                           A  1692    ; Returns: ZF = Set: Abolute X coord in HL, Abs
                           A  1693    ;          ZF = Not set: Mouse driver not initi
                           A  1694    				
00147C CD 53 14 00         A  1695    				call os_get_mouse_motion
001480 C0                  A  1696    				ret nz
001481 22 0C 62 00         A  1697    				ld (mouse_disp_x_buffer),hl
001485 ED53 0F 62 00       A  1698    				ld (mouse_disp_y_buffer),de
00148A 3A 12 62 00         A  1699    				ld a,(mouse_new_window)
00148E B7                  A  1700    				or a
00148F 20 6C               A  1701    				jr nz,ms_nmw
                           A  1702    
001491 ED5B 06 62 00       A  1703    				ld de,(mouse_disp_x_old)
001496 AF                  A  1704    				xor a
001497 ED52                A  1705    				sbc hl,de
001499 EB                  A  1706    				ex de,hl
00149A 2A 00 62 00         A  1707    				ld hl,(mouse_abs_x)
00149E 19                  A  1708    				add hl,de
00149F E5                  A  1709    				push hl
0014A0 C1                  A  1710    				pop bc
0014A1 DD210000 80         A  1711    				ld ix,800000h					0014A6 DD09                A  1712    				add ix,bc
0014A8 30 06               A  1713    				jr nc,ms_x_ok1
0014AA 01000000            A  1714    				ld bc,0
0014AE 18 10               A  1715    				jr ms_x_ok2
0014B0 ED5B FA 61 00       A  1716    ms_x_ok1		ld de,(mouse_window_size_x)
0014B5 AF                  A  1717    				xor a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  36


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0014B6 ED52                A  1718    				sbc hl,de
0014B8 38 06               A  1719    				jr c,ms_x_ok2
0014BA ED4B FA 61 00       A  1720    				ld bc,(mouse_window_size_x)		0014BF 0B                  A  1721    				dec bc
0014C0 ED43 00 62 00       A  1722    ms_x_ok2		ld (mouse_abs_x),bc
                           A  1723    					
0014C5 2A 0F 62 00         A  1724    				ld hl,(mouse_disp_y_buffer)
0014C9 ED5B 09 62 00       A  1725    				ld de,(mouse_disp_y_old)
0014CE AF                  A  1726    				xor a
0014CF ED52                A  1727    				sbc hl,de
0014D1 EB                  A  1728    				ex de,hl
0014D2 2A 03 62 00         A  1729    				ld hl,(mouse_abs_y)
0014D6 19                  A  1730    				add hl,de
0014D7 E5                  A  1731    				push hl
0014D8 C1                  A  1732    				pop bc
0014D9 DD210000 80         A  1733    				ld ix,800000h					0014DE DD09                A  1734    				add ix,bc
0014E0 30 06               A  1735    				jr nc,ms_y_ok1
0014E2 01000000            A  1736    				ld bc,0
0014E6 18 10               A  1737    				jr ms_y_ok2
0014E8 ED5B FD 61 00       A  1738    ms_y_ok1		ld de,(mouse_window_size_y)
0014ED AF                  A  1739    				xor a
0014EE ED52                A  1740    				sbc hl,de
0014F0 38 06               A  1741    				jr c,ms_y_ok2
0014F2 ED4B FD 61 00       A  1742    				ld bc,(mouse_window_size_y)		0014F7 0B                  A  1743    				dec bc
0014F8 ED43 03 62 00       A  1744    ms_y_ok2		ld (mouse_abs_y),bc
                           A  1745    
                           A  1746    				
0014FD 2A 0C 62 00         A  1747    ms_nmw			ld hl,(mouse_disp_x_buffer)
001501 22 06 62 00         A  1748    				ld (mouse_disp_x_old),hl
001505 2A 0F 62 00         A  1749    				ld hl,(mouse_disp_y_buffer)
001509 22 09 62 00         A  1750    				ld (mouse_disp_y_old),hl
                           A  1751    				
00150D 2A 00 62 00         A  1752    				ld hl,(mouse_abs_x)
001511 ED5B 03 62 00       A  1753    				ld de,(mouse_abs_y)
                           A  1754    				
001516 AF                  A  1755    				xor a
001517 32 12 62 00         A  1756    				ld (mouse_new_window),a
00151B C3 71 14 00         A  1757    				jp mouse_end
                           A  1758    				
                           A  1759    	
                           A  1760    ;==============================================
                           A  1761    ;----- General Subroutines --------------------
                           A  1762    ;==============================================
                           A  1763    
                           A  1764    ; .--------------.
                           A  1765    ; ! CRC Checksum !
                           A  1766    ; '--------------'
                           A  1767    
                           A  1768    ; makes 16 bit checksum in HL, src addr = DE, l
                           A  1769    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  37


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00151F                     A  1770    crc_checksum
                           A  1771    
00151F 21FFFF00            A  1772    				ld hl,0ffffh		
001523 1A                  A  1773    crcloop			ld a,(de)			
001524 AC                  A  1774    				xor h			
001525 67                  A  1775    				ld h,a			
001526 0608                A  1776    				ld b,8
001528 4029                A  1777    crcbyte			add.sis hl,hl					00152A 30 08               A  1778    				jr nc,crcnext
00152C 7C                  A  1779    				ld a,h
00152D EE10                A  1780    				xor 10h
00152F 67                  A  1781    				ld h,a
001530 7D                  A  1782    				ld a,l
001531 EE21                A  1783    				xor 21h
001533 6F                  A  1784    				ld l,a
001534 10 F2               A  1785    crcnext			djnz crcbyte
001536 13                  A  1786    				inc de
001537 0D                  A  1787    				dec c
001538 20 E9               A  1788    				jr nz,crcloop
00153A C9                  A  1789    				ret
                           A  1790    
                           A  1791    
                           A  1792    ;----------------------------------------------
                           A  1793    
00153B                     A  1794    os_get_key_mod_flags
                           A  1795    
00153B 3A E7 61 00         A  1796    				ld a,(key_mod_flags)
00153F BF                  A  1797    				cp a							001540 C9                  A  1798    				ret
                           A  1799    
                           A  1800    ;----------------------------------------------
                           A  1801    
001541                     A  1802    os_get_vmode
                           A  1803    			
001541 3A 77 5E 00         A  1804    				ld a,(charmap_rows)
001545 4F                  A  1805    				ld c,a
001546 3A 7A 5E 00         A  1806    				ld a,(charmap_columns)
00154A 47                  A  1807    				ld b,a
00154B 3A 4C 5E 00         A  1808    				ld a,(video_mode)
00154F BF                  A  1809    				cp a						; Z
001550 C9                  A  1810    				ret
                           A  1811    
                           A  1812    ;----------------------------------------------
                           A  1813    
001551 7B                  A  1814    ext_set_vmode	ld a,e
                           A  1815    
001552 FE04                A  1816    os_set_vmode	cp 4
001554 38 04               A  1817    				jr c,vm_range_ok
001556 3E88                A  1818    				ld a,88h					;ou
001558 B7                  A  1819    				or a
001559 C9                  A  1820    				ret
                           A  1821    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  38


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00155A 32 4C 5E 00         A  1822    vm_range_ok		ld (video_mode),a
00155E 21030000            A  1823    				ld hl,3
001562 67                  A  1824    				ld h,a
001563 ED6C                A  1825    				mlt hl
001565 11 7D 5E 00         A  1826    				ld de,vmode_parameter_list
001569 19                  A  1827    				add hl,de
00156A 7E                  A  1828    				ld a,(hl)
00156B 23                  A  1829    				inc hl
00156C 46                  A  1830    				ld b,(hl)
00156D 23                  A  1831    				inc hl
00156E 4E                  A  1832    				ld c,(hl)
00156F CD 63 3D 00         A  1833    				call set_charmap_parameters
                           A  1834    				
001573 CD FC 3D 00         A  1835    				call hwsc_clear_screen
                           A  1836    
001577 AF                  A  1837    				xor a				
001578 C9                  A  1838    				ret
                           A  1839    
                           A  1840    
                           A  1841    ;----------------------------------------------
                           A  1842    
001579                     A  1843    os_bchl_memfill
                           A  1844    
                           A  1845    ; fill memory from xHL with A. Count in xBC.
                           A  1846    		
001579 77                  A  1847    mf_loop			ld (hl),a
00157A EDA1                A  1848    				cpi								00157C EA 79 15 00         A  1849    				jp pe,mf_loop
001580 C9                  A  1850    				ret
                           A  1851    	
                           A  1852    ;----------------------------------------------
                           A  1853    
001581 7B                  A  1854    ext_set_pen		ld a,e
                           A  1855    
001582 32 4D 5E 00         A  1856    os_set_pen		ld (current_pen),a
001586 BF                  A  1857    				cp a							001587 C9                  A  1858    				ret
                           A  1859    
                           A  1860    ;----------------------------------------------
                           A  1861    	
001588 3A 4D 5E 00         A  1862    os_get_pen		ld a,(current_pen)
00158C BF                  A  1863    				cp a							00158D C9                  A  1864    				ret	
                           A  1865    
                           A  1866    ;----------------------------------------------
                           A  1867    
00158E                     A  1868    ext_background_colours
                           A  1869    				
00158E CC A0 15 00         A  1870    				call z,mbase_hl
001592 C3 F0 3D 00         A  1871    				jp hswc_set_ui_colours
                           A  1872    				
                           A  1873    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  39


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1874    ;----------------------------------------------
                           A  1875    
001596                     A  1876    os_get_xde_msb	
                           A  1877    			
001596 ED53 CB 60 00       A  1878    				ld (xrr_temp),de				00159B 3A CD 60 00         A  1879    				ld a,(xrr_temp+2)
00159F C9                  A  1880    				ret
                           A  1881    
                           A  1882    ;----------------------------------------------
                           A  1883    
0015A0 F5                  A  1884    mbase_hl		push af
0015A1 22 CB 60 00         A  1885    				ld (xrr_temp),hl				0015A5 ED6E                A  1886    				ld a,MB
0015A7 32 CD 60 00         A  1887    				ld (xrr_temp+2),a
0015AB 2A CB 60 00         A  1888    				ld hl,(xrr_temp)
0015AF F1                  A  1889    				pop af
0015B0 C9                  A  1890    				ret
                           A  1891    				
0015B1 F5                  A  1892    mbase_de		push af
0015B2 ED53 CB 60 00       A  1893    				ld (xrr_temp),de				0015B7 ED6E                A  1894    				ld a,MB
0015B9 32 CD 60 00         A  1895    				ld (xrr_temp+2),a
0015BD ED5B CB 60 00       A  1896    				ld de,(xrr_temp)
0015C2 F1                  A  1897    				pop af
0015C3 C9                  A  1898    				ret
                           A  1899    
0015C4 F5                  A  1900    mbase_ix		push af
0015C5 DD22 CB 60 00       A  1901    				ld (xrr_temp),ix				0015CA ED6E                A  1902    				ld a,MB
0015CC 32 CD 60 00         A  1903    				ld (xrr_temp+2),a
0015D0 DD2A CB 60 00       A  1904    				ld ix,(xrr_temp)
0015D5 F1                  A  1905    				pop af
0015D6 C9                  A  1906    				ret
                           A  1907    							
                           A  1908    ;----------------------------------------------
                           A  1909    ; Unpacks Z80P_RLE packed files - V1.02 
                           A  1910    ;----------------------------------------------
                           A  1911    
0015D7                     A  1912    unpack_rle
                           A  1913    
                           A  1914    ;set xHL = source address of packed file
                           A  1915    ;set xDE = destination address for unpacked dat
                           A  1916    ;set xBC = length of packed file
                           A  1917    
0015D7 E5                  A  1918    			push hl	
0015D8 DDE1                A  1919    			pop ix
0015DA 0B                  A  1920    			dec bc								0015DB 23                  A  1921    			inc hl
0015DC DD7E00              A  1922    unp_gtok	ld a,(ix)							0015DF BE                  A  1923    unp_next	cp (hl)								0015E0 28 07               A  1924    			jr z,unp_brun						0015E2 EDA0                A  1925    			ldi									Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  40


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0015E4 EA DF 15 00         A  1926    			jp pe,unp_next						0015E8 C9                  A  1927    			ret
                           A  1928    	
0015E9 C5                  A  1929    unp_brun	push bc								0015EA 23                  A  1930    			inc hl		
0015EB 7E                  A  1931    			ld a,(hl)							0015EC 23                  A  1932    			inc hl		
0015ED 46                  A  1933    			ld b,(hl)							0015EE 23                  A  1934    			inc hl
                           A  1935    	
0015EF 12                  A  1936    unp_rllp	ld (de),a							0015F0 13                  A  1937    			inc de			
0015F1 10 FC               A  1938    			djnz unp_rllp
                           A  1939    	
0015F3 C1                  A  1940    			pop bc	
0015F4 0B                  A  1941    			dec bc								0015F5 0B                  A  1942    			dec bc
0015F6 0B                  A  1943    			dec bc
0015F7 E5                  A  1944    			push hl								0015F8 21000000            A  1945    			ld hl,0
0015FC B7                  A  1946    			or a
0015FD ED4A                A  1947    			adc hl,bc
0015FF E1                  A  1948    			pop hl
001600 20 DA               A  1949    			jr nz,unp_gtok
001602 C9                  A  1950    			ret	
                           A  1951    	
                           A  1952    ;----------------------------------------------
                           A  1953    ; Commonly called error messages - gets message
                           A  1954    ;----------------------------------------------
                           A  1955    
                           A  1956    
001603 3E0D                A  1957    os_no_fn_error		ld a,0dh
001605 B7                  A  1958    					or a
001606 C9                  A  1959    					ret
                           A  1960    			
001607 3E15                A  1961    os_fn_too_long		ld a,15h
001609 B7                  A  1962    					or a
00160A C9                  A  1963    					ret
                           A  1964    				
00160B 3E16                A  1965    os_no_start_addr	ld a,16h
00160D B7                  A  1966    					or a
00160E C9                  A  1967    					ret
                           A  1968    			
00160F 3E17                A  1969    os_no_filesize		ld a,17h
001611 B7                  A  1970    					or a
001612 C9                  A  1971    					ret
                           A  1972    			
001613 3E18                A  1973    os_abort_save		ld a,18h
001615 B7                  A  1974    					or a
001616 C9                  A  1975    					ret
                           A  1976    			
001617 3E1C                A  1977    os_no_e_addr_error	ld a,1ch
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  41


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001619 B7                  A  1978    					or a
00161A C9                  A  1979    					ret
                           A  1980    			
00161B 3E1D                A  1981    os_no_d_addr_error	ld a,1dh
00161D B7                  A  1982    					or a
00161E C9                  A  1983    					ret
                           A  1984    				
00161F 3E1E                A  1985    os_range_error		ld a,1eh
001621 B7                  A  1986    					or a
001622 C9                  A  1987    					ret
                           A  1988    			
001623 3E1F                A  1989    os_no_args_error	ld a,1fh
001625 B7                  A  1990    					or a
001626 C9                  A  1991    					ret	
                           A  1992    
                           A  1993    ;----------------------------------------------
                           A  1994    
                           A  1995    ; Set xHL to address of zero terminated filenam
                           A  1996    ; RETURNS:	C:xDE  = File length
                           A  1997    ;    		HL     = Start cluster of file
                           A  1998    
001627 CC A0 15 00         A  1999    ext_find_file	call z,mbase_hl
                           A  2000    
00162B CD E4 51 00         A  2001    os_find_file	call fs_hl_to_filename
00162F CD 85 49 00         A  2002    				call fs_open_file_command		001633 38 02               A  2003    				jr c,os_fferr					001635 B7                  A  2004    				or a							001636 C9                  A  2005    				ret 		
                           A  2006    								
001637 47                  A  2007    os_fferr		ld b,a							001638 AF                  A  2008    				xor a			
001639 4F                  A  2009    				ld c,a
00163A 0C                  A  2010    				inc c							00163B C9                  A  2011    				ret	
                           A  2012    
                           A  2013    ;----------------------------------------------
                           A  2014    
00163C                     A  2015    os_set_load_length
                           A  2016    
00163C ED53 3B 54 00       A  2017    				ld (fs_file_transfer_length),de
001641 BF                  A  2018    				cp a							001642 C9                  A  2019    				ret
                           A  2020    				
                           A  2021    ;----------------------------------------------
                           A  2022    
001643                     A  2023    ext_set_file_pointer
                           A  2024    
001643 79                  A  2025    				ld a,c
                           A  2026    				
001644                     A  2027    os_set_file_pointer
                           A  2028    
                           A  2029    ; Moves the 'start of file' pointer allowing ra
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  42


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2030    ; Note: File pointer is reset by opening a file
                           A  2031    ; by normal read function.
                           A  2032    
001644 ED53 2F 54 00       A  2033    				ld (fs_file_pointer),de			001649 32 32 54 00         A  2034    				ld (fs_file_pointer+3),a
00164D F5                  A  2035    				push af
00164E AF                  A  2036    				xor a
00164F 32 61 54 00         A  2037    				ld (fs_filepointer_valid),a		001653 F1                  A  2038    				pop af
001654 BF                  A  2039    				cp a							001655 C9                  A  2040    				ret
                           A  2041    				
                           A  2042    ;----------------------------------------------
                           A  2043    
                           A  2044    ; set xHL = load address 
                           A  2045    ; (Before calling this routine, call os_find_fi
                           A  2046    
001656                     A  2047    ext_read_bytes_from_file
                           A  2048    
001656 CC A0 15 00         A  2049    				call z,mbase_hl					                           A  2050    				
00165A                     A  2051    os_read_bytes_from_file
                           A  2052    
00165A 22 44 54 00         A  2053    				ld (fs_ez80_address),hl			00165E CD D0 49 00         A  2054    				call fs_read_data_command
001662 38 D3               A  2055    				jr c,os_fferr
001664 B7                  A  2056    				or a
001665 C9                  A  2057    				ret
                           A  2058    
                           A  2059    ;----------------------------------------------
                           A  2060    
                           A  2061    ; Before calling, set xHL = address of zero ter
                           A  2062    
001666 CC A0 15 00         A  2063    ext_create_file	call z,mbase_hl
                           A  2064    
00166A CD E4 51 00         A  2065    os_create_file	call fs_hl_to_filename
00166E CD 86 4C 00         A  2066    				call fs_create_file_command		001672 DA 37 16 00         A  2067    				jp c,os_fferr					001676 B7                  A  2068    				or a
001677 C9                  A  2069    				ret
                           A  2070    
                           A  2071    ;----------------------------------------------
                           A  2072    
001678                     A  2073    ext_write_bytes_to_file
                           A  2074    
001678 CC A0 15 00         A  2075    				call z,mbase_hl
00167C CC B1 15 00         A  2076    				call z,mbase_de
                           A  2077    
001680                     A  2078    os_write_bytes_to_file
                           A  2079    
                           A  2080    ; Before calling, set..
                           A  2081    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  43


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2082    ; xDE   = address to save data from
                           A  2083    ; xBC   = number of bytes to save
                           A  2084    ; xHL   = address of null-terminated ascii name
                           A  2085    
                           A  2086    ; On return:
                           A  2087    
                           A  2088    ; If zero flag NOT set, there was an error.
                           A  2089    ; If   A = $00, b = hardware error code
                           A  2090    ; Else A = File system error code
                           A  2091    
                           A  2092    ; NOTE:
                           A  2093    ; Will return 'file not found' if the file has 
                           A  2094    				
001680 ED43 3B 54 00       A  2095    				ld (fs_file_transfer_length),bc
001685 ED53 44 54 00       A  2096    				ld (fs_ez80_address),de	 	
00168A CD E4 51 00         A  2097    				call fs_hl_to_filename
00168E CD B8 4C 00         A  2098    				call fs_write_bytes_to_file_com
001692 DA 37 16 00         A  2099    				jp c,os_fferr
001696 B7                  A  2100    				or a
001697 C9                  A  2101    				ret
                           A  2102    		
                           A  2103    		
                           A  2104    ;----------------------------------------------
                           A  2105    	
                           A  2106    
001698                     A  2107    os_check_volume_format
                           A  2108    
001698 CD E3 47 00         A  2109    				call fs_check_disk_format
00169C DA 37 16 00         A  2110    os_rffsc		jp c,os_fferr
0016A0 B7                  A  2111    				or a
0016A1 C9                  A  2112    				ret
                           A  2113    
                           A  2114    ;----------------------------------------------
                           A  2115    
                           A  2116    
0016A2 7B                  A  2117    ext_format		ld a,e
0016A3 CC A0 15 00         A  2118    				call z,mbase_hl					                           A  2119    
0016A7 E5                  A  2120    os_format		push hl							0016A8 CD AE 1A 00         A  2121    				call dev_to_driver_lookup
0016AC E1                  A  2122    				pop hl
0016AD 38 04               A  2123    				jr c,sdevok
0016AF 3ED0                A  2124    				ld a,0d0h						0016B1 B7                  A  2125    				or a
0016B2 C9                  A  2126    				ret
                           A  2127    
0016B3 F5                  A  2128    sdevok			push af				
0016B4 11 0B 54 00         A  2129    				ld de,fs_sought_filename
0016B8 CD F3 52 00         A  2130    				call fs_clear_filename
0016BC 060B                A  2131    				ld b,11
0016BE CD FB 11 00         A  2132    				call os_copy_ascii_run
0016C2 F1                  A  2133    				pop af
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  44


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2134    				
0016C3 21 D6 5E 00         A  2135    				ld hl,current_driver
0016C7 46                  A  2136    				ld b,(hl)
0016C8 77                  A  2137    				ld (hl),a
0016C9 C5                  A  2138    				push bc
0016CA E5                  A  2139    				push hl
0016CB CD 58 46 00         A  2140    				call fs_format_device_command
0016CF E1                  A  2141    				pop hl
0016D0 C1                  A  2142    				pop bc
0016D1 70                  A  2143    				ld (hl),b
0016D2 18 C8               A  2144    				jr os_rffsc
                           A  2145    
                           A  2146    
                           A  2147    ;----------------------------------------------
                           A  2148    
                           A  2149    
0016D4 CC A0 15 00         A  2150    ext_make_dir	call z,mbase_hl					                           A  2151    
0016D8 CD E4 51 00         A  2152    os_make_dir		call fs_hl_to_filename
0016DC CD FE 4A 00         A  2153    				call fs_make_dir_command
0016E0 18 BA               A  2154    				jr os_rffsc
                           A  2155    
                           A  2156    
                           A  2157    ;----------------------------------------------
                           A  2158    
                           A  2159    
0016E2 CC A0 15 00         A  2160    ext_change_dir	call z,mbase_hl					                           A  2161    
0016E6 CD E4 51 00         A  2162    os_change_dir	call fs_hl_to_filename
0016EA CD 31 49 00         A  2163    				call fs_change_dir_command
0016EE 18 AC               A  2164    				jr os_rffsc
                           A  2165    				
                           A  2166    	
                           A  2167    ;----------------------------------------------
                           A  2168    	
                           A  2169    	
0016F0 CD 62 49 00         A  2170    os_parent_dir	call fs_parent_dir_command
0016F4 18 A6               A  2171    				jr os_rffsc
                           A  2172    				
                           A  2173    
                           A  2174    ;----------------------------------------------
                           A  2175    
                           A  2176    	
0016F6 CD 56 49 00         A  2177    os_root_dir		call fs_goto_root_dir_command
0016FA 18 A0               A  2178    				jr os_rffsc
                           A  2179    
                           A  2180    
                           A  2181    ;----------------------------------------------
                           A  2182    
                           A  2183    
0016FC CC A0 15 00         A  2184    ext_erase_file	call z,mbase_hl					                           A  2185    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  45


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001700 CD E4 51 00         A  2186    os_erase_file	call fs_hl_to_filename
001704 CD 47 4E 00         A  2187    				call fs_erase_file_command
001708 18 92               A  2188    				jr os_rffsc
                           A  2189    	
                           A  2190    
                           A  2191    ;----------------------------------------------
                           A  2192    
                           A  2193    
00170A                     A  2194    os_goto_first_dir_entry	
                           A  2195    
00170A CD A2 4E 00         A  2196    				call fs_goto_first_dir_entry
00170E 18 8C               A  2197    				jr os_rffsc
                           A  2198    
                           A  2199    
                           A  2200    ;----------------------------------------------
                           A  2201    
                           A  2202    
001710                     A  2203    os_get_dir_entry		
                           A  2204    
001710 CD B9 4E 00         A  2205    				call fs_get_dir_entry	
001714 18 86               A  2206    				jr os_rffsc
                           A  2207    
                           A  2208    
                           A  2209    ;----------------------------------------------
                           A  2210    
                           A  2211    
001716                     A  2212    os_goto_next_dir_entry	
                           A  2213    	
001716 CD 46 4F 00         A  2214    				call fs_goto_next_dir_entry	
00171A 18 80               A  2215    				jr os_rffsc
                           A  2216    
                           A  2217    
                           A  2218    ;----------------------------------------------
                           A  2219    
                           A  2220    
00171C                     A  2221    os_get_current_dir_name
                           A  2222    
00171C CD AA 52 00         A  2223    				call fs_get_current_dir_name
001720 C3 9C 16 00         A  2224    				jr os_rffsc
                           A  2225    				
                           A  2226    
                           A  2227    ;----------------------------------------------
                           A  2228    
                           A  2229    
001724 CC A0 15 00         A  2230    ext_rename_file	call z,mbase_hl
001728 CC B1 15 00         A  2231    				call z,mbase_de
                           A  2232    
00172C D5                  A  2233    os_rename_file	push de
00172D CD DE 51 00         A  2234    				call fs_hl_to_alt_filename		001731 E1                  A  2235    				pop hl				
001732 CD E4 51 00         A  2236    				call fs_hl_to_filename	
001736 CD 5E 4E 00         A  2237    				call fs_rename_command
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  46


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00173A C3 9C 16 00         A  2238    				jr os_rffsc
                           A  2239    				
                           A  2240    
                           A  2241    ;----------------------------------------------
                           A  2242    
                           A  2243    
00173E CC A0 15 00         A  2244    ext_delete_dir	call z,mbase_hl					                           A  2245    
001742 CD E4 51 00         A  2246    os_delete_dir	call fs_hl_to_filename
001746 CD D7 4B 00         A  2247    				call fs_delete_dir_command
00174A C3 9C 16 00         A  2248    				jp os_rffsc
                           A  2249    	
                           A  2250    	
                           A  2251    ;----- LOW LEVEL SECTOR ACCESS ETC FOR EXTERNAL
                           A  2252    
                           A  2253    
00174E                     A  2254    ext_read_sector
00174E CD 99 17 00         A  2255    				call ext_sector_access_preamble
001752 C0                  A  2256    				ret nz
001753 32 D6 5E 00         A  2257    				ld (current_driver),a
001757 CD 81 53 00         A  2258    				call fs_read_sector
00175B 20 11               A  2259    				jr nz,sect_done
00175D 38 0F               A  2260    				jr c,sect_done
00175F 21 03 66 00         A  2261    				ld hl,sector_buffer
001763 ED5B E6 5E 00       A  2262    				ld de,(sector_rd_wr_addr)
001768 01000200            A  2263    				ld bc,512
00176C EDB0                A  2264    				ldir			
00176E F5                  A  2265    sect_done		push af
00176F 3A 0C 60 00         A  2266    				ld a,(sys_driver_backup)		001773 32 D6 5E 00         A  2267    				ld (current_driver),a
001777 F1                  A  2268    				pop af
001778 C3 9C 16 00         A  2269    				jp os_rffsc
                           A  2270    				
                           A  2271    
00177C                     A  2272    ext_write_sector
                           A  2273    			
00177C CD 99 17 00         A  2274    				call ext_sector_access_preamble
001780 C0                  A  2275    				ret nz
001781 32 D6 5E 00         A  2276    				ld (current_driver),a
001785 2A E6 5E 00         A  2277    				ld hl,(sector_rd_wr_addr)
001789 11 03 66 00         A  2278    				ld de,sector_buffer
00178D 01000200            A  2279    				ld bc,512
001791 EDB0                A  2280    				ldir			
001793 CD 99 53 00         A  2281    				call fs_write_sector
001797 18 D5               A  2282    				jr sect_done
                           A  2283    
                           A  2284    
001799                     A  2285    ext_sector_access_preamble
                           A  2286    
001799 CC A0 15 00         A  2287    				call z,mbase_hl
00179D 22 E6 5E 00         A  2288    				ld (sector_rd_wr_addr),hl
                           A  2289    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  47


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0017A1 78                  A  2290    				ld a,b
0017A2 F5                  A  2291    				push af							0017A3 DD21 AF 60 00       A  2292    				ld ix,sector_lba0
0017A8 DD1F00              A  2293    				ld (ix),de						0017AB DD7103              A  2294    				ld (ix+3),c
0017AE CD AE 1A 00         A  2295    				call dev_to_driver_lookup		0017B2 E5                  A  2296    				push hl
0017B3 DDE1                A  2297    				pop ix
0017B5 2A AF 60 00         A  2298    				ld hl,(sector_lba0)				0017B9 3A B2 60 00         A  2299    				ld a,(sector_lba3)				0017BD DD0701              A  2300    				ld bc,(ix+1)					0017C0 B7                  A  2301    				or a							0017C1 ED42                A  2302    				sbc hl,bc
0017C3 DD9E04              A  2303    				sbc a,(ix+4)
0017C6 38 05               A  2304    				jr c,range_ok
0017C8 F1                  A  2305    				pop af
0017C9 3ED5                A  2306    				ld a,0d5h						0017CB B7                  A  2307    				or a							0017CC C9                  A  2308    				ret
                           A  2309    	
0017CD 3A D6 5E 00         A  2310    range_ok		ld a,(current_driver)
0017D1 32 0C 60 00         A  2311    				ld (sys_driver_backup),a
0017D5 F1                  A  2312    				pop af							0017D6 CD AE 1A 00         A  2313    				call dev_to_driver_lookup
0017DA 30 02               A  2314    				jr nc,bad_dev
0017DC BF                  A  2315    os_null			cp a							0017DD C9                  A  2316    				ret
                           A  2317    					
0017DE 3ED0                A  2318    bad_dev			ld a,0d0h						0017E0 B7                  A  2319    				or a							0017E1 C9                  A  2320    				ret	
                           A  2321    			
                           A  2322    
                           A  2323    ;----------------------------------------------
                           A  2324    
                           A  2325    
0017E2                     A  2326    os_get_device_info
                           A  2327    
0017E2 21 87 5F 00         A  2328    				ld hl,host_device_hardware_info
0017E6 11 E9 5E 00         A  2329    				ld de,driver_table
0017EA 3A D7 5E 00         A  2330    				ld a,(device_count)
0017EE 47                  A  2331    				ld b,a
0017EF 3A D6 5E 00         A  2332    				ld a,(current_driver)
0017F3 BF                  A  2333    				cp a
0017F4 C9                  A  2334    				ret
                           A  2335    
                           A  2336    
                           A  2337    
                           A  2338    
0017F5                     A  2339    os_get_volume_info
                           A  2340    
0017F5 21 07 5F 00         A  2341    				ld hl,volume_mount_list	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  48


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0017F9 3A D8 5E 00         A  2342    				ld a,(volume_count)
0017FD 47                  A  2343    				ld b,a
0017FE 3A D5 5E 00         A  2344    				ld a,(current_volume)
001802 C9                  A  2345    				ret
                           A  2346    				
                           A  2347    		
                           A  2348    ;----------------------------------------------
                           A  2349    
                           A  2350    
001803                     A  2351    ext_serial_get_header
                           A  2352    
001803 CC A0 15 00         A  2353    				call z,mbase_hl
001807 7B                  A  2354    				ld a,e
001808 CD EB 43 00         A  2355    				call serial_get_header
00180C C9                  A  2356    				ret
                           A  2357    				
                           A  2358    				
00180D                     A  2359    ext_serial_receive_file
                           A  2360    				
00180D CC A0 15 00         A  2361    				call z,mbase_hl
001811 CD 86 44 00         A  2362    				call serial_receive_file
001815 C9                  A  2363    				ret
                           A  2364    				
                           A  2365    	
001816                     A  2366    ext_serial_send_file
                           A  2367    
001816 CC A0 15 00         A  2368    				call z,mbase_hl
00181A CC C4 15 00         A  2369    				call z,mbase_ix				
00181E CD 4F 45 00         A  2370    				call serial_send_file
001822 C9                  A  2371    				ret
                           A  2372    
                           A  2373    
001823                     A  2374    ext_serial_tx
001823 7B                  A  2375    				ld a,e
001824 CD 3F 3D 00         A  2376    				call send_serial_byte
001828 AF                  A  2377    				xor a							001829 C9                  A  2378    				ret
                           A  2379    
                           A  2380    
00182A                     A  2381    ext_serial_rx
00182A 7B                  A  2382    				ld a,e
00182B 32 A5 5E 00         A  2383    				ld (serial_timeout),a
00182F CD 04 3D 00         A  2384    				call receive_serial_byte
001833 C9                  A  2385    				ret
                           A  2386    				
                           A  2387    
                           A  2388    ;----------------------------------------------
                           A  2389    
001834                     A  2390    ext_mount_volumes
                           A  2391    
001834 7B                  A  2392    				ld a,e
                           A  2393    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  49


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001835                     A  2394    os_mount_volumes
                           A  2395    				
001835 32 0D 60 00         A  2396    				ld (os_quiet_mode),a			                           A  2397    				
001839 21 8F 55 00         A  2398    				ld hl,storage_txt
00183D CD 08 0F 00         A  2399    				call os_print_string_cond
001841 CD 69 18 00         A  2400    				call mount_go
001845 AF                  A  2401    				xor a
001846 32 D5 5E 00         A  2402    tvloop			ld (current_volume),a
00184A CD C4 1A 00         A  2403    				call os_change_volume			00184E C8                  A  2404    				ret z							00184F 3A D5 5E 00         A  2405    				ld a,(current_volume)			001853 3C                  A  2406    				inc a
001854 FE08                A  2407    				cp max_volumes
001856 20 EE               A  2408    				jr nz,tvloop
001858 3A D7 5E 00         A  2409    				ld a,(device_count)
00185C B7                  A  2410    				or a
00185D 20 08               A  2411    				jr nz,mfsdevs
00185F 21 D3 5C 00         A  2412    				ld hl,none_found_msg
001863 CD E7 13 00         A  2413    				call os_show_packed_text_cond
001867 AF                  A  2414    mfsdevs			xor a
001868 C9                  A  2415    				ret
                           A  2416    
                           A  2417    
                           A  2418    
001869 21 07 5F 00         A  2419    mount_go		ld hl,volume_mount_list			00186D 01800000            A  2420    				ld bc,max_volumes*16
001871 AF                  A  2421    clrdl_lp		xor a
001872 CD 79 15 00         A  2422    				call os_bchl_memfill
                           A  2423    								
001876 21 EF 5E 00         A  2424    				ld hl,volume_dir_clusters		00187A 01180000            A  2425    				ld bc,max_volumes*3		
00187E AF                  A  2426    				xor a	
00187F CD 79 15 00         A  2427    				call os_bchl_memfill	
                           A  2428    			
001883 11 87 5F 00         A  2429    				ld de,host_device_hardware_info
001887 ED53 07 60 00       A  2430    				ld (dhwn_temp_pointer),de
                           A  2431    				
00188C FD21 07 5F 00       A  2432    				ld iy,volume_mount_list
001891 AF                  A  2433    				xor a
001892 32 D8 5E 00         A  2434    				ld (volume_count),a
001896 32 D7 5E 00         A  2435    				ld (device_count),a
00189A 32 D6 5E 00         A  2436    mnt_loop		ld (current_driver),a			00189E CD 3A 1A 00         A  2437    				call locate_driver_base			0018A2 21000000            A  2438    				ld hl,0
0018A6 AF                  A  2439    				xor a
0018A7 ED5A                A  2440    				adc hl,de
0018A9 C8                  A  2441    				ret z							0018AA EB                  A  2442    				ex de,hl						0018AB FDE5                A  2443    				push iy
0018AD CD BE 18 00         A  2444    				call find_dev					0018B1 FDE1                A  2445    				pop iy							Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  50


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0018B3 DC BF 18 00         A  2446    				call c,got_dev		
0018B7 3A D6 5E 00         A  2447    nxt_drv			ld a,(current_driver)			0018BB 3C                  A  2448    				inc a
0018BC 18 DC               A  2449    				jr mnt_loop
                           A  2450    
                           A  2451    				
0018BE E9                  A  2452    find_dev		jp (hl)
                           A  2453    			
                           A  2454    			
0018BF E5                  A  2455    got_dev			push hl							0018C0 D5                  A  2456    				push de							0018C1 C5                  A  2457    				push bc
0018C2 CD B0 13 00         A  2458    				call os_new_line_cond			0018C6 015B0100            A  2459    				ld bc,015bh
0018CA CD 4B 1A 00         A  2460    				call os_print_multiple_chars_co
0018CE 3A D6 5E 00         A  2461    				ld a,(current_driver)
0018D2 CD 3A 1A 00         A  2462    				call locate_driver_base
0018D6 210C0000            A  2463    				ld hl,0ch
0018DA 19                  A  2464    				add hl,de
0018DB CD 08 0F 00         A  2465    				call os_print_string_cond		0018DF 015D0100            A  2466    				ld bc,015dh
0018E3 CD 4B 1A 00         A  2467    				call os_print_multiple_chars_co
0018E7 C1                  A  2468    				pop bc
0018E8 D1                  A  2469    				pop de
0018E9 AF                  A  2470    				xor a
0018EA 32 0B 60 00         A  2471    				ld (vols_on_device_temp),a
                           A  2472    				
0018EE 21 D7 5E 00         A  2473    				ld hl,device_count
0018F2 34                  A  2474    				inc (hl)						0018F3 3A D6 5E 00         A  2475    				ld a,(current_driver)
0018F7 2A 07 60 00         A  2476    				ld hl,(dhwn_temp_pointer)	
0018FB 77                  A  2477    				ld (hl),a
0018FC 23                  A  2478    				inc hl
0018FD 73                  A  2479    				ld (hl),e						0018FE FD7304              A  2480    				ld (iy+4),e						001901 23                  A  2481    				inc hl							001902 72                  A  2482    				ld (hl),d
001903 FD7205              A  2483    				ld (iy+5),d
001906 23                  A  2484    				inc hl
001907 71                  A  2485    				ld (hl),c			
001908 FD7106              A  2486    				ld (iy+6),c
00190B 23                  A  2487    				inc hl
00190C 70                  A  2488    				ld (hl),b						00190D 23                  A  2489    				inc hl
00190E D1                  A  2490    				pop de
00190F EB                  A  2491    				ex de,hl
001910 01160000            A  2492    				ld bc,22
001914 EDB0                A  2493    				ldir							001916 AF                  A  2494    				xor a
001917 0605                A  2495    				ld b,5		
001919 12                  A  2496    clrrode			ld (de),a						00191A 13                  A  2497    				inc de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  51


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00191B 10 FC               A  2498    				djnz clrrode
00191D ED53 07 60 00       A  2499    				ld (dhwn_temp_pointer),de		                           A  2500    					
001922 AF                  A  2501    				xor a							001923 FDE5                A  2502    fnxtpart		push iy
001925 CD 81 47 00         A  2503    				call fs_get_partition_info
001929 FDE1                A  2504    				pop iy
00192B 38 31               A  2505    				jr c,nxt_dev					00192D FECE                A  2506    				cp 0ceh							00192F 28 2D               A  2507    				jr z,nxt_dev
001931 F5                  A  2508    				push af
001932 FD360001            A  2509    				ld (iy),1						001936 3A D6 5E 00         A  2510    				ld a,(current_driver)
00193A FD7701              A  2511    				ld (iy+1),a						00193D 3A 0A 60 00         A  2512    				ld a,(partition_temp)	
001941 FD7707              A  2513    				ld (iy+7),a						001944 F1                  A  2514    				pop af
001945 B7                  A  2515    				or a
001946 28 35               A  2516    				jr z,dev_mbr
001948 AF                  A  2517    				xor a
001949 FD7708              A  2518    				ld (iy+8),a						00194C FD7709              A  2519    				ld (iy+9),a						00194F FD770A              A  2520    				ld (iy+10),a					001952 FD770B              A  2521    				ld (iy+11),a
001955 CD C9 19 00         A  2522    				call show_vol_info
001959 CD BA 19 00         A  2523    				call test_max_vol
00195D C8                  A  2524    				ret z							                           A  2525    			
00195E 3A 0B 60 00         A  2526    nxt_dev			ld a,(vols_on_device_temp)		001962 B7                  A  2527    				or a
001963 C0                  A  2528    				ret nz		
001964 CD 1B 1A 00         A  2529    				call test_quiet_mode
001968 20 06               A  2530    				jr nz,skp_cu
00196A 3E0A                A  2531    				ld a,10
00196C 32 B4 60 00         A  2532    				ld (cursor_x),a
001970 21 D0 5C 00         A  2533    skp_cu			ld hl,no_vols_msg				001974 CD E7 13 00         A  2534    				call os_show_packed_text_cond
001978 CD B0 13 00         A  2535    				call os_new_line_cond
00197C C9                  A  2536    				ret
                           A  2537    				
                           A  2538    			
00197D 11040000            A  2539    dev_mbr			ld de,4
001981 19                  A  2540    				add hl,de
001982 7E                  A  2541    				ld a,(hl)						001983 B7                  A  2542    				or a
001984 C8                  A  2543    				ret z							001985 19                  A  2544    				add hl,de
                           A  2545    				
001986 FDE5                A  2546    				push iy
001988 0604                A  2547    				ld b,4
00198A 7E                  A  2548    sfmbrlp			ld a,(hl)						00198B FD7708              A  2549    				ld (iy+8),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  52


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00198E 23                  A  2550    				inc hl
00198F FD23                A  2551    				inc iy
001991 10 F7               A  2552    				djnz sfmbrlp
001993 FDE1                A  2553    				pop iy
001995 FDE5                A  2554    				push iy
001997 0603                A  2555    				ld b,3	
001999 7E                  A  2556    nsivlp			ld a,(hl)
00199A FD7704              A  2557    				ld (iy+4),a						00199D 23                  A  2558    				inc hl
00199E FD23                A  2559    				inc iy
0019A0 10 F7               A  2560    				djnz nsivlp
0019A2 FDE1                A  2561    				pop iy
                           A  2562    				
0019A4 CD C9 19 00         A  2563    				call show_vol_info
0019A8 CD BA 19 00         A  2564    				call test_max_vol	
0019AC C8                  A  2565    				ret z							0019AD 3A 0A 60 00         A  2566    				ld a,(partition_temp)
0019B1 3C                  A  2567    				inc a
0019B2 FE04                A  2568    				cp 4							0019B4 C2 23 19 00         A  2569    				jp nz,fnxtpart
0019B8 18 A4               A  2570    				jr nxt_dev
                           A  2571    				
                           A  2572    
0019BA                     A  2573    test_max_vol
                           A  2574    			
0019BA 11100000            A  2575    				ld de,16
0019BE FD19                A  2576    				add iy,de			
0019C0 21 D8 5E 00         A  2577    				ld hl,volume_count
0019C4 34                  A  2578    				inc (hl)
0019C5 7E                  A  2579    				ld a,(hl)
0019C6 FE08                A  2580    				cp max_volumes
0019C8 C9                  A  2581    				ret
                           A  2582    			
                           A  2583    			
0019C9                     A  2584    show_vol_info
                           A  2585    				
0019C9 CD 1B 1A 00         A  2586    				call test_quiet_mode
0019CD 20 06               A  2587    				jr nz,skp_cm2
0019CF 3E09                A  2588    				ld a,9			
0019D1 32 B4 60 00         A  2589    				ld (cursor_x),a
0019D5 3A D8 5E 00         A  2590    skp_cm2			ld a,(volume_count)
0019D9 F5                  A  2591    				push af
0019DA C630                A  2592    				add a,30h		
0019DC 32 DD 5E 00         A  2593    				ld (vol_txt+4),a	
0019E0 21 D9 5E 00         A  2594    				ld hl,vol_txt
0019E4 CD 08 0F 00         A  2595    				call os_print_string_cond		0019E8 21 0B 60 00         A  2596    				ld hl,vols_on_device_temp
0019EC CBC6                A  2597    				set 0,(hl)						                           A  2598    			
0019EE F1                  A  2599    				pop af
0019EF FDE5                A  2600    				push iy
0019F1 CD C4 1A 00         A  2601    				call os_change_volume			Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  53


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0019F5 28 0A               A  2602    				jr z,vform_ok					0019F7 21 80 5C 00         A  2603    svi_fe			ld hl,format_err_msg		
0019FB CD E7 13 00         A  2604    svi_pem			call os_show_packed_text_cond	0019FF 18 0D               A  2605    				jr skpsvl
                           A  2606    			
001A01 CD 9D 4F 00         A  2607    vform_ok		call fs_get_volume_label
001A05 38 0E               A  2608    				jr c,svi_hwe
001A07 B7                  A  2609    				or a
001A08 20 ED               A  2610    				jr nz,svi_fe
001A0A CD 08 0F 00         A  2611    				call os_print_string_cond		                           A  2612    			
001A0E CD B0 13 00         A  2613    skpsvl			call os_new_line_cond
001A12 FDE1                A  2614    				pop iy
001A14 C9                  A  2615    				ret
                           A  2616    				
001A15 21 CC 5A 00         A  2617    svi_hwe			ld hl,disk_err_msg
001A19 18 E0               A  2618    				jr svi_pem
                           A  2619    			
                           A  2620    			
001A1B                     A  2621    test_quiet_mode
                           A  2622    			
001A1B 3A 0D 60 00         A  2623    				ld a,(os_quiet_mode)
001A1F B7                  A  2624    				or a
001A20 C9                  A  2625    				ret
                           A  2626    
                           A  2627    ;----------------------------------------------
                           A  2628    
                           A  2629    
001A21                     A  2630    show_dev_driver_name
                           A  2631    	
                           A  2632    	
001A21 CD 3A 1A 00         A  2633    				call locate_driver_base			001A25 EB                  A  2634    				ex de,hl
001A26 110C0000            A  2635    				ld de,0ch
001A2A 19                  A  2636    				add hl,de
001A2B CD 0D 0F 00         A  2637    				call os_print_string			001A2F C5                  A  2638    				push bc
001A30 01200100            A  2639    				ld bc,0120h
001A34 CD 50 1A 00         A  2640    				call os_print_multiple_chars	001A38 C1                  A  2641    				pop bc
001A39 C9                  A  2642    				ret
                           A  2643    
                           A  2644    
001A3A                     A  2645    locate_driver_base
                           A  2646    
001A3A E5                  A  2647    				push hl							001A3B 11030000            A  2648    				ld de,3							001A3F 57                  A  2649    				ld d,a
001A40 ED5C                A  2650    				mlt de
001A42 21 E9 5E 00         A  2651    				ld hl,driver_table
001A46 19                  A  2652    				add hl,de
001A47 ED17                A  2653    				ld de,(hl)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  54


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001A49 E1                  A  2654    				pop hl
001A4A C9                  A  2655    				ret
                           A  2656    				
                           A  2657    		
                           A  2658    ;----------------------------------------------
                           A  2659    
001A4B                     A  2660    os_print_multiple_chars_cond
                           A  2661    
001A4B CD 1B 1A 00         A  2662    				call test_quiet_mode
001A4F C0                  A  2663    				ret nz
                           A  2664    			
001A50                     A  2665    os_print_multiple_chars
                           A  2666    
                           A  2667    ;c = char
                           A  2668    ;b = count
001A50 C5                  A  2669    				push bc
001A51 E5                  A  2670    				push hl
001A52 79                  A  2671    				ld a,c
001A53 21 0A 56 00         A  2672    				ld hl,rep_char_txt
001A57 77                  A  2673    				ld (hl),a
001A58 E5                  A  2674    pmch_lp			push hl
001A59 CD 0D 0F 00         A  2675    				call os_print_string
001A5D E1                  A  2676    				pop hl
001A5E 10 F8               A  2677    				djnz pmch_lp
001A60 E1                  A  2678    				pop hl
001A61 C1                  A  2679    				pop bc
001A62 C9                  A  2680    				ret
                           A  2681    
                           A  2682    ;----------------------------------------------
                           A  2683    
                           A  2684    
001A63 7B                  A  2685    ext_plot_char	ld a,e
001A64 C3 72 3E 00         A  2686    				jp hwsc_plot_char
                           A  2687    				
                           A  2688    
                           A  2689    ;----------------------------------------------
                           A  2690    ; Some file system related routines 
                           A  2691    ;----------------------------------------------
                           A  2692    
                           A  2693    
001A68                     A  2694    fs_get_dir_cluster
                           A  2695    
                           A  2696    
001A68 F5                  A  2697    				push af							001A69 E5                  A  2698    				push hl			
001A6A CD 80 1A 00         A  2699    				call fs_get_dir_cluster_address
001A6E ED17                A  2700    				ld de,(hl)
001A70 E1                  A  2701    dclopdone		pop hl
001A71 F1                  A  2702    				pop af
001A72 BF                  A  2703    				cp a							001A73 C9                  A  2704    				ret
                           A  2705    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  55


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2706    
                           A  2707    
                           A  2708    
                           A  2709    
001A74                     A  2710    fs_update_dir_cluster
                           A  2711    
001A74 F5                  A  2712    				push af							001A75 E5                  A  2713    				push hl			
001A76 D5                  A  2714    				push de			
001A77 CD 80 1A 00         A  2715    				call fs_get_dir_cluster_address
001A7B D1                  A  2716    				pop de
001A7C ED1F                A  2717    				ld (hl),de
001A7E 18 F0               A  2718    				jr dclopdone
                           A  2719    			
                           A  2720    
                           A  2721    
                           A  2722    
                           A  2723    
001A80                     A  2724    fs_get_dir_cluster_address
                           A  2725    
001A80 21 EF 5E 00         A  2726    				ld hl,volume_dir_clusters		001A84 3A D5 5E 00         A  2727    				ld a,(current_volume)	
001A88 11030000            A  2728    				ld de,3
001A8C 57                  A  2729    				ld d,a
001A8D ED5C                A  2730    				mlt de
001A8F 19                  A  2731    				add hl,de
001A90 C9                  A  2732    				ret
                           A  2733    				
                           A  2734    	
                           A  2735    
                           A  2736    	
                           A  2737    	
001A91                     A  2738    fs_get_total_sectors
                           A  2739    
                           A  2740    
001A91 F5                  A  2741    				push af
001A92 E5                  A  2742    				push hl							001A93 CD A2 1A 00         A  2743    				call fs_calc_volume_offset	
001A97 21 0B 5F 00         A  2744    				ld hl,volume_mount_list+4
001A9B 19                  A  2745    				add hl,de
001A9C ED17                A  2746    				ld de,(hl)
001A9E E1                  A  2747    				pop hl
001A9F F1                  A  2748    				pop af
001AA0 BF                  A  2749    				cp a							001AA1 C9                  A  2750    				ret
                           A  2751    
                           A  2752    
                           A  2753    
                           A  2754    
                           A  2755    
001AA2                     A  2756    fs_calc_volume_offset
                           A  2757    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  56


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001AA2 3A D5 5E 00         A  2758    				ld a,(current_volume)			001AA6 11100000            A  2759    calc_vol		ld de,16
001AAA 57                  A  2760    				ld d,a
001AAB ED5C                A  2761    				mlt de
001AAD C9                  A  2762    				ret
                           A  2763    
                           A  2764    
                           A  2765    
                           A  2766    
                           A  2767    
001AAE                     A  2768    dev_to_driver_lookup
                           A  2769    
001AAE 21 D7 5E 00         A  2770    				ld hl,device_count				001AB2 BE                  A  2771    				cp (hl)							001AB3 D0                  A  2772    				ret nc
001AB4 11200000            A  2773    				ld de,32						001AB8 57                  A  2774    				ld d,a
001AB9 ED5C                A  2775    				mlt de
001ABB 21 87 5F 00         A  2776    				ld hl,host_device_hardware_info
001ABF 19                  A  2777    				add hl,de
001AC0 7E                  A  2778    				ld a,(hl)
001AC1 37                  A  2779    				scf
001AC2 C9                  A  2780    				ret
                           A  2781    				
                           A  2782    
                           A  2783    
001AC3                     A  2784    ext_change_volume
                           A  2785    
001AC3 7B                  A  2786    				ld a,e
                           A  2787    
001AC4                     A  2788    os_change_volume
                           A  2789    
001AC4 47                  A  2790    				ld b,a							001AC5 FE08                A  2791    				cp max_volumes		
001AC7 30 23               A  2792    				jr nc,fs_ccv2					                           A  2793    			
001AC9 3A D5 5E 00         A  2794    				ld a,(current_volume)			001ACD F5                  A  2795    				push af
001ACE 78                  A  2796    				ld a,b
001ACF 32 D5 5E 00         A  2797    				ld (current_volume),a			001AD3 CD F0 1A 00         A  2798    				call fs_set_driver_for_volume	                           A  2799    				
001AD7 CD E3 47 00         A  2800    				call fs_check_disk_format		001ADB 38 06               A  2801    				jr c,fs_cant_chg_vols	
001ADD B7                  A  2802    				or a
001ADE 20 03               A  2803    				jr nz,fs_cant_chg_vols
001AE0 F1                  A  2804    				pop af							001AE1 AF                  A  2805    				xor a							001AE2 C9                  A  2806    				ret
                           A  2807    
                           A  2808    
001AE3                     A  2809    fs_cant_chg_vols
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  57


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2810    			
001AE3 F1                  A  2811    				pop af
001AE4 32 D5 5E 00         A  2812    				ld (current_volume),a			001AE8 CD F0 1A 00         A  2813    				call fs_set_driver_for_volume	                           A  2814    				
001AEC 3ECF                A  2815    fs_ccv2			ld a,0cfh						001AEE B7                  A  2816    				or a
001AEF C9                  A  2817    				ret
                           A  2818    					
                           A  2819    	
001AF0                     A  2820    fs_set_driver_for_volume
                           A  2821    
001AF0 CD A2 1A 00         A  2822    				call fs_calc_volume_offset		001AF4 21 08 5F 00         A  2823    				ld hl,volume_mount_list+1
001AF8 19                  A  2824    				add hl,de
001AF9 7E                  A  2825    				ld a,(hl)
001AFA 32 D6 5E 00         A  2826    				ld (current_driver),a
001AFE C9                  A  2827    				ret
                           A  2828    
                           A  2829    
                           A  2830    ;----------------------------------------------
                           A  2831    
001AFF                     A  2832    ext_file_sector_list
                           A  2833    
                           A  2834    ;Input HL = cluster, E = sector offset
                           A  2835    
                           A  2836    ;Output HL = new cluster, E = new sector number
                           A  2837    ;       IX = address of LBA0 LSB of sector (int
                           A  2838    
                           A  2839    				
001AFF 3A F4 53 00         A  2840    				ld a,(fs_cluster_size)
001B03 BB                  A  2841    				cp e
001B04 20 0A               A  2842    				jr nz,fsl_sc
001B06 CD 29 52 00         A  2843    				call get_fat_entry_for_cluster
001B0A DA 37 16 00         A  2844    				jp c,os_fferr
001B0E 1E00                A  2845    				ld e,0
001B10 CD 00 53 00         A  2846    fsl_sc			call cluster_and_offset_to_lba
001B14 1C                  A  2847    				inc e
001B15 DD21 AF 60 00       A  2848    fsl_done		ld ix,sector_lba0
001B1A BF                  A  2849    				cp a							001B1B C9                  A  2850    				ret
                           A  2851    				
                           A  2852    ;----------------------------------------------
                           A  2853    
                           A  2854    
001B1C E5                  A  2855    os_count_chars	push hl							001B1D 01000000            A  2856    				ld bc,0
001B21 7E                  A  2857    cch_lp			ld a,(hl)
001B22 B7                  A  2858    				or a
001B23 28 04               A  2859    				jr z,cch_end
001B25 23                  A  2860    				inc hl
001B26 03                  A  2861    				inc bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  58


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001B27 18 F8               A  2862    				jr cch_lp
001B29 E1                  A  2863    cch_end			pop hl
001B2A C9                  A  2864    				ret
                           A  2865    				
                           A  2866    			
                           A  2867    ;----------------------------------------------
                           A  2868    ; Environment variable code V0.01
                           A  2869    ;----------------------------------------------
                           A  2870    
       00000100            A  2871    envar_buffer_size equ 256
                           A  2872    
                           A  2873    ;----------------------------------------------
                           A  2874    
001B2B                     A  2875    ext_get_envar
001B2B CC A0 15 00         A  2876    				call z,mbase_hl
                           A  2877    
001B2F                     A  2878    os_get_envar
                           A  2879    
                           A  2880    ;Set: 		HL = name of required variable
                           A  2881    ;Returns:	ZF Set: DE = address of variable's 
                           A  2882    ;        	ZF Not Set: Couldn't find variable
                           A  2883    				
001B2F DD21 13 62 00       A  2884    				ld ix,envar_list-1
001B34 CD 1C 1B 00         A  2885    env_fname		call os_count_chars				001B38 78                  A  2886    				ld a,b
001B39 B1                  A  2887    				or c
001B3A 28 27               A  2888    				jr z,env_bad
                           A  2889    								
001B3C ED1201              A  2890    env_cname		lea de,ix+1
001B3F 1A                  A  2891    				ld a,(de)
001B40 FEFF                A  2892    				cp 0ffh
001B42 28 1F               A  2893    				jr z,env_bad
001B44 C5                  A  2894    				push bc
001B45 41                  A  2895    				ld b,c
001B46 CD DC 11 00         A  2896    				call os_compare_strings
001B4A C1                  A  2897    				pop bc
001B4B 20 06               A  2898    				jr nz,env_nomatch
001B4D 03                  A  2899    				inc bc							001B4E EB                  A  2900    				ex de,hl
001B4F 09                  A  2901    				add hl,bc
001B50 EB                  A  2902    				ex de,hl						001B51 AF                  A  2903    				xor a
001B52 C9                  A  2904    				ret			
                           A  2905    				
001B53 DD23                A  2906    env_nomatch		inc ix							001B55 CD FB 1B 00         A  2907    				call check_envar_bounds
001B59 20 08               A  2908    				jr nz,env_bad
001B5B DD7E00              A  2909    				ld a,(ix)
001B5E B7                  A  2910    				or a
001B5F 28 DB               A  2911    				jr z,env_cname
001B61 18 F0               A  2912    				jr env_nomatch
                           A  2913    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  59


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001B63 3E82                A  2914    env_bad			ld a,82h						001B65 B7                  A  2915    				or a
001B66 C9                  A  2916    				ret	
                           A  2917    				
                           A  2918    ;----------------------------------------------
                           A  2919    
001B67                     A  2920    ext_set_envar
                           A  2921    
                           A  2922    ;HL = addr of variable name (zero terminated)
                           A  2923    ;DE = addr of data for variable (zero terminate
                           A  2924    
                           A  2925    ;Returns:
                           A  2926    ;ZF = Set: OK
                           A  2927    ;ZF = Not Set: No enough space for new variable
                           A  2928    		
001B67 CC A0 15 00         A  2929    				call z,mbase_hl
001B6B CC B1 15 00         A  2930    				call z,mbase_de
                           A  2931    
001B6F 7E                  A  2932    os_set_envar	ld a,(hl)						001B70 B7                  A  2933    				or a
001B71 28 F0               A  2934    				jr z,env_bad
001B73 1A                  A  2935    				ld a,(de)
001B74 B7                  A  2936    				or a
001B75 28 EC               A  2937    				jr z,env_bad
                           A  2938    
001B77 E5                  A  2939    				push hl
001B78 D5                  A  2940    				push de
001B79 CD C5 1B 00         A  2941    				call os_delete_envar			001B7D D1                  A  2942    				pop de
001B7E E1                  A  2943    				pop hl
                           A  2944    				
001B7F DD2A 1E 63 00       A  2945    				ld ix,(envar_top_loc)			001B84 CD FB 1B 00         A  2946    env_enlp		call check_envar_bounds
001B88 20 D9               A  2947    				jr nz,env_bad
001B8A 7E                  A  2948    				ld a,(hl)						001B8B DD7700              A  2949    				ld (ix),a
001B8E B7                  A  2950    				or a
001B8F 28 05               A  2951    				jr z,env_ndone
001B91 23                  A  2952    				inc hl
001B92 DD23                A  2953    				inc ix
001B94 18 EE               A  2954    				jr env_enlp
                           A  2955    				
001B96 CD FB 1B 00         A  2956    env_ndone		call check_envar_bounds			001B9A 20 C7               A  2957    				jr nz,env_bad
001B9C DD36003D            A  2958    				ld (ix),'='
001BA0 DD23                A  2959    				inc ix
                           A  2960    
001BA2 CD FB 1B 00         A  2961    env_evlp		call check_envar_bounds			001BA6 20 BB               A  2962    				jr nz,env_bad
001BA8 1A                  A  2963    				ld a,(de)
001BA9 DD7700              A  2964    				ld (ix),a
001BAC B7                  A  2965    				or a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  60


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001BAD 28 05               A  2966    				jr z,env_vdone
001BAF 13                  A  2967    				inc de
001BB0 DD23                A  2968    				inc ix
001BB2 18 EE               A  2969    				jr env_evlp
                           A  2970    
001BB4 DD23                A  2971    env_vdone		inc ix
001BB6 DD3600FF            A  2972    				ld (ix),0ffh
001BBA DD22 1E 63 00       A  2973    				ld (envar_top_loc),ix			001BBF AF                  A  2974    				xor a
001BC0 C9                  A  2975    				ret
                           A  2976    
                           A  2977    	
                           A  2978    ;----------------------------------------------
                           A  2979    
001BC1                     A  2980    ext_delete_envar
                           A  2981    
001BC1 CC A0 15 00         A  2982    				call z,mbase_hl
                           A  2983    
001BC5                     A  2984    os_delete_envar
                           A  2985    
                           A  2986    ;HL = name of required variable (null terminate
                           A  2987    ;ZF = Set: OK
                           A  2988    ;ZF = Not Set: Didnt find named variable
                           A  2989    
                           A  2990    
001BC5 CD 2F 1B 00         A  2991    				call os_get_envar				001BC9 C0                  A  2992    				ret nz
                           A  2993    				
001BCA D5                  A  2994    				push de
001BCB E1                  A  2995    				pop hl
001BCC AF                  A  2996    				xor a
001BCD ED42                A  2997    				sbc hl,bc						                           A  2998    				
001BCF 13                  A  2999    env_fnxt		inc de							001BD0 D5                  A  3000    				push de
001BD1 DDE1                A  3001    				pop ix
001BD3 CD FB 1B 00         A  3002    				call check_envar_bounds
001BD7 20 8A               A  3003    				jr nz,env_bad
001BD9 1A                  A  3004    				ld a,(de)
001BDA B7                  A  3005    				or a
001BDB 20 F2               A  3006    				jr nz,env_fnxt
                           A  3007    
001BDD 13                  A  3008    env_gnxt		inc de							001BDE EB                  A  3009    				ex de,hl
001BDF 7E                  A  3010    env_collp		ld a,(hl)
001BE0 12                  A  3011    				ld (de),a						001BE1 FEFF                A  3012    				cp 0ffh
001BE3 28 0F               A  3013    				jr z,env_clspd					001BE5 E5                  A  3014    				push hl
001BE6 DDE1                A  3015    				pop ix
001BE8 CD FB 1B 00         A  3016    				call check_envar_bounds
001BEC C2 63 1B 00         A  3017    				jr nz,env_bad
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  61


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001BF0 23                  A  3018    				inc hl
001BF1 13                  A  3019    				inc de
001BF2 18 EB               A  3020    				jr env_collp
                           A  3021    
001BF4 ED53 1E 63 00       A  3022    env_clspd		ld (envar_top_loc),de			001BF9 AF                  A  3023    				xor a
001BFA C9                  A  3024    				ret
                           A  3025    				
                           A  3026    ;----------------------------------------------
                           A  3027    
001BFB                     A  3028    check_envar_bounds
                           A  3029    
001BFB C5                  A  3030    				push bc
001BFC E5                  A  3031    				push hl
001BFD DDE5                A  3032    				push ix
001BFF E1                  A  3033    				pop hl
001C00 01 15 63 00         A  3034    				ld bc,1+(envar_list+envar_buffe
001C04 AF                  A  3035    				xor a
001C05 ED42                A  3036    				sbc hl,bc
001C07 38 05               A  3037    				jr c,env_bok
001C09 AF                  A  3038    				xor a
001C0A 3C                  A  3039    				inc a
001C0B E1                  A  3040    				pop hl
001C0C C1                  A  3041    				pop bc
001C0D C9                  A  3042    				ret
                           A  3043    
001C0E AF                  A  3044    env_bok			xor a
001C0F E1                  A  3045    				pop hl
001C10 C1                  A  3046    				pop bc
001C11 C9                  A  3047    				ret
                           A  3048    						
                           A  3049    ;----------------------------------------------
                           A  3050    
001C12                     A  3051    os_get_keymap_location
                           A  3052    
001C12 21 21 5D 00         A  3053    				ld hl,unshifted_keymap
001C16 BF                  A  3054    				cp a							001C17 C9                  A  3055    				ret
                           A  3056    
                           A  3057    
                           A  3058    ;----------------------------------------------
                           A  3059    
                           A  3060    
001C18 CC A0 15 00         A  3061    ext_play_audio	call z,mbase_hl
                           A  3062    				
001C1C CD E2 42 00         A  3063    os_play_audio	call hwsc_play_audio
001C20 C9                  A  3064    				ret
                           A  3065    				
                           A  3066    				
                           A  3067    ;==============================================
                           A  3068    ; Internal OS command routines
                           A  3069    ;==============================================
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  62


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  3070    
                           B     0    	include 'commands\c.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"c" - Copy memory command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
001C21                     B     5    os_cmd_c
                           B     6    
001C21 CD 57 1C 00         B     7    				call get_start_and_end			                           B     8    				
001C25 CD 80 1C 00         B     9    				call hexword_or_bust			001C29 CA 1B 16 00         B    10    				jp z,os_no_d_addr_error
001C2D ED53 C2 60 00       B    11    				ld (copy_dest_address),de
                           B    12    						
001C32 CD 45 1C 00         B    13    				call test_mem_range				001C36 DA 1F 16 00         B    14    				jp c,os_range_error				001C3A ED5B C2 60 00       B    15    				ld de,(copy_dest_address)
001C3F EDB0                B    16    				ldir
                           B    17    
001C41 3E20                B    18    copy_done		ld a,020h						001C43 B7                  B    19    				or a
001C44 C9                  B    20    				ret
                           B    21    			
                           B    22    			
                           B    23    ;----------------------------------------------
                           B    24    			
001C45                     B    25    test_mem_range
                           B    26    			
                           B    27    ; on return:
                           B    28    ;
                           B    29    ; carry flag: Set = bad range
                           B    30    ; xBC = run length on return
                           B    31    ; xHL = start address
                           B    32    			
001C45 2A BF 60 00         B    33    				ld hl,(cmdop_end_address)	
001C49 ED4B BC 60 00       B    34    				ld bc,(cmdop_start_address)
001C4E C5                  B    35    				push bc
001C4F AF                  B    36    				xor a
001C50 ED42                B    37    				sbc hl,bc
001C52 E5                  B    38    				push hl
001C53 C1                  B    39    				pop bc
001C54 03                  B    40    				inc bc
001C55 E1                  B    41    				pop hl
001C56 C9                  B    42    				ret
                           B    43    				
                           B    44    ;----------------------------------------------
                           B    45    			
001C57                     B    46    get_start_and_end
                           B    47    			
001C57 CD 8C 10 00         B    48    				call ascii_to_hexword			001C5B ED53 BC 60 00       B    49    				ld (cmdop_start_address),de
001C60 23                  B    50    				inc hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  63


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\c.asm
001C61 28 09               B    51    				jr z,st_addrok
001C63 E1                  B    52    				pop hl							001C64 FE82                B    53    				cp 82h							001C66 28 02               B    54    				jr z,c_badhex
001C68 3E16                B    55    				ld a,016h						001C6A B7                  B    56    c_badhex		or a
001C6B C9                  B    57    				ret
                           B    58    				
001C6C CD 8C 10 00         B    59    st_addrok		call ascii_to_hexword			001C70 ED53 BF 60 00       B    60    				ld (cmdop_end_address),de
001C75 23                  B    61    				inc hl
001C76 B7                  B    62    				or a
001C77 C8                  B    63    				ret z
001C78 E1                  B    64    				pop hl							001C79 FE82                B    65    				cp 82h							001C7B 28 ED               B    66    				jr z,c_badhex
001C7D 3E1C                B    67    				ld a,01ch						001C7F C9                  B    68    				ret
                           B    69    				
                           B    70    ;----------------------------------------------
                           B    71    
001C80                     B    72    hexword_or_bust
                           B    73    
                           B    74    ; Set HL to string address:
                           B    75    ; Returns to parent routine ONLY if the string 
                           B    76    ; DE = hex word. If no hex found, the zero flag
                           B    77    ; If chars are invalid hex, returns to grandpar
                           B    78    
001C80 CD 8C 10 00         B    79    				call ascii_to_hexword		
001C84 FE82                B    80    				cp 82h
001C86 20 03               B    81    				jr nz,hex_good
001C88 E1                  B    82    				pop hl						; r
001C89 B7                  B    83    				or a	
001C8A C9                  B    84    				ret			 
001C8B FE81                B    85    hex_good		cp 081h						; n
001C8D C9                  B    86    				ret
                           B    87    	
                           B    88    ;----------------------------------------------
                           B    89    
                           B     0    	include 'commands\cd.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'cd' - Change Dir command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
001C8E                     B     5    os_cmd_cd	
                           B     6    
001C8E CD 98 16 00         B     7    				call os_check_volume_format	
001C92 C0                  B     8    				ret nz
                           B     9    			
                           B    10    			
001C93 7E                  B    11    				ld a,(hl)						001C94 B7                  B    12    				or a				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  64


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\cd.asm
001C95 CA 3C 1D 00         B    13    				jp z,cd_show_path		
                           B    14    			
                           B    15    			
001C99 7E                  B    16    				ld a,(hl)						001C9A 23                  B    17    				inc hl
001C9B 46                  B    18    				ld b,(hl)
001C9C 2B                  B    19    				dec hl
001C9D FE2E                B    20    				cp '.'			
001C9F 20 08               B    21    				jr nz,cd_nual
001CA1 B8                  B    22    				cp b
001CA2 20 05               B    23    				jr nz,cd_nual
001CA4 CD F0 16 00         B    24    				call os_parent_dir	
001CA8 C9                  B    25    				ret
                           B    26    			
                           B    27    			
001CA9 FE2F                B    28    cd_nual			cp 02fh			
001CAB 20 05               B    29    				jr nz,cd_nogor					001CAD CD F6 16 00         B    30    				call os_root_dir	
001CB1 C9                  B    31    				ret
                           B    32    				
                           B    33    				
001CB2 FE25                B    34    cd_nogor		cp '%'							001CB4 20 1F               B    35    				jr nz,cd_no_assign
001CB6 CD 2F 1B 00         B    36    				call os_get_envar
001CBA 28 04               B    37    				jr z,cd_evok
001CBC 3ED1                B    38    				ld a,0d1h						001CBE B7                  B    39    				or a
001CBF C9                  B    40    				ret
001CC0 11000000            B    41    cd_evok			ld de,0
001CC4 5E                  B    42    				ld e,(hl)
001CC5 23                  B    43    				inc hl
001CC6 56                  B    44    				ld d,(hl)
001CC7 23                  B    45    				inc hl
001CC8 7E                  B    46    				ld a,(hl)
001CC9 D5                  B    47    				push de
001CCA CD C4 1A 00         B    48    				call os_change_volume
001CCE D1                  B    49    				pop de
001CCF C0                  B    50    				ret nz
001CD0 CD 74 1A 00         B    51    				call fs_update_dir_cluster
001CD4 C9                  B    52    				ret
                           B    53    				
                           B    54    				
001CD5                     B    55    cd_no_assign
                           B    56    			
001CD5 3A D5 5E 00         B    57    				ld a,(current_volume)
001CD9 32 06 68 00         B    58    				ld (original_vol_cd_cmd),a
                           B    59    			
001CDD E5                  B    60    				push hl
001CDE DDE1                B    61    				pop ix
001CE0 DD7E04              B    62    				ld a,(ix+4)
001CE3 FE3A                B    63    				cp ':'							001CE5 20 25               B    64    				jr nz,cd_nchvol
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  65


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\cd.asm
001CE7 11 DA 5E 00         B    65    				ld de,vol_txt+1
001CEB 0603                B    66    				ld b,3
001CED CD DC 11 00         B    67    				call os_compare_strings
001CF1 20 19               B    68    				jr nz,cd_nchvol
001CF3 11050000            B    69    				ld de,5
001CF7 19                  B    70    				add hl,de
001CF8 22 75 61 00         B    71    				ld (os_args_loc),hl				001CFC DD7E03              B    72    				ld a,(ix+3)						001CFF D630                B    73    				sub 030h
001D01 CD C4 1A 00         B    74    				call os_change_volume
001D05 C0                  B    75    				ret nz							001D06 CD F6 16 00         B    76    				call os_root_dir				001D0A 18 11               B    77    				jr cd_mol						                           B    78    				
                           B    79    			
001D0C CD 68 1A 00         B    80    cd_nchvol		call fs_get_dir_cluster
001D10 ED53 03 68 00       B    81    				ld (original_dir_cd_cmd),de
                           B    82    			
001D15 E5                  B    83    cd_mollp		push hl
001D16 CD E6 16 00         B    84    				call os_change_dir				001D1A E1                  B    85    				pop hl
001D1B 20 0A               B    86    				jr nz,cd_dcherr
001D1D 7E                  B    87    cd_mol			ld a,(hl)						001D1E 23                  B    88    				inc hl
001D1F B7                  B    89    				or a
001D20 C8                  B    90    				ret z
001D21 FE2F                B    91    				cp 02fh
001D23 28 F0               B    92    				jr z,cd_mollp
001D25 18 F6               B    93    				jr cd_mol
                           B    94    					
001D27                     B    95    cd_dcherr	
                           B    96    			
001D27 F5                  B    97    				push af							001D28 ED5B 03 68 00       B    98    				ld de,(original_dir_cd_cmd)
001D2D CD 74 1A 00         B    99    				call fs_update_dir_cluster
001D31 3A 06 68 00         B   100    				ld a,(original_vol_cd_cmd)
001D35 CD C4 1A 00         B   101    				call os_change_volume	
001D39 F1                  B   102    				pop af
001D3A B7                  B   103    				or a
001D3B C9                  B   104    				ret
                           B   105    				
                           B   106    ;----------------------------------------------
                           B   107    			
001D3C                     B   108    cd_show_path
                           B   109    			
                           B   110    			
       00000010            B   111    max_dirs	equ 16
                           B   112    			
001D3C 0610                B   113    				ld b,max_dirs
001D3E 0E00                B   114    				ld c,0
001D40 C5                  B   115    lp1				push bc
001D41 CD 68 1A 00         B   116    				call fs_get_dir_cluster
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  66


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\cd.asm
001D45 C1                  B   117    				pop bc
001D46 D5                  B   118    				push de
001D47 0C                  B   119    				inc c
001D48 C5                  B   120    				push bc
001D49 CD F0 16 00         B   121    				call os_parent_dir
001D4D C1                  B   122    				pop bc
001D4E 20 02               B   123    				jr nz,shdir_lp
001D50 10 EE               B   124    				djnz lp1
                           B   125    				
001D52 D1                  B   126    shdir_lp		pop de
001D53 C5                  B   127    				push bc
001D54 CD 74 1A 00         B   128    				call fs_update_dir_cluster
001D58 CD 1C 17 00         B   129    				call os_get_current_dir_name
001D5C CD 0D 0F 00         B   130    				call os_print_string
001D60 21 72 1D 00         B   131    				ld hl,cd_fwdslash_txt
001D64 CD 0D 0F 00         B   132    				call os_print_string
001D68 C1                  B   133    				pop bc
001D69 0D                  B   134    				dec c
001D6A 20 E6               B   135    				jr nz,shdir_lp
                           B   136    			
001D6C CD B5 13 00         B   137    				call os_new_line	
001D70 AF                  B   138    				xor a
001D71 C9                  B   139    				ret
                           B   140    			
001D72 2F00                B   141    cd_fwdslash_txt	db '/',0	
                           B   142    			
                           B   143    ;----------------------------------------------
                           B   144    			
       00006803            B   145    original_dir_cd_cmd		equ scratch_pad 
       00006806            B   146    original_vol_cd_cmd	 	equ scratch_pad+3
                           B   147    					
                           B   148    ;----------------------------------------------
                           B     0    	include 'commands\cls.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"cls" - Clear screen command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
001D74                     B     5    os_cmd_cls
                           B     6    
001D74 CD FC 3D 00         B     7    				call hwsc_clear_screen
001D78 AF                  B     8    				xor a
001D79 C9                  B     9    				ret
                           B    10    				
                           B    11    ;----------------------------------------------
                           B    12    	
                           B     0    	include 'commands\colon.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;":" for write hex bytes command. V0.02 - ADL m
                           B     3    ;----------------------------------------------
                           B     4    
001D7A                     B     5    os_cmd_colon
                           B     6    	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  67


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\colon.asm
001D7A CD 80 1C 00         B     7    				call hexword_or_bust			001D7E CA 0B 16 00         B     8    				jp z,os_no_start_addr			001D82 D5                  B     9    				push de
001D83 DDE1                B    10    				pop ix							                           B    11    			
001D85 CD 80 1C 00         B    12    wmblp			call hexword_or_bust			001D89 28 07               B    13    				jr z,os_ccmdn
001D8B DD7300              B    14    				ld (ix),e						001D8E DD23                B    15    				inc ix
001D90 18 F3               B    16    				jr wmblp
                           B    17    
001D92 AF                  B    18    os_ccmdn		xor a
001D93 C9                  B    19    				ret
                           B    20    		
                           B    21    
                           B    22    ;----------------------------------------------
                           B     0    	include 'commands\d.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; OS "D" Command: EZ80 Disassembler V0.02
                           B     3    ; Totally and utterly unoptimized!
                           B     4    ;----------------------------------------------
                           B     5    
001D94 FD21 7B 23 00       B     6    os_cmd_d		ld iy,prefix_bits_loc
001D99 FDCB 07 C6          B     7    				set adl_dis,(iy+var_adl)
                           B     8    
001D9D CD 80 1C 00         B     9    os_cmd_d_go		call hexword_or_bust			001DA1 28 05               B    10    				jr z,d_no_hex					001DA3 ED53 F2 28 00       B    11    				ld (dis_addr),de
                           B    12    				
001DA8 3A 77 5E 00         B    13    d_no_hex		ld a,(charmap_rows)				001DAC D602                B    14    				sub a,2
001DAE 47                  B    15    				ld b,a
001DAF C5                  B    16    dis_loop		push bc
                           B    17    				
001DB0 DD2A F2 28 00       B    18    				ld ix,(dis_addr)				001DB5 CD 5D 23 00         B    19    				call show_ix					001DB9 3E20                B    20    				ld a,' '
001DBB CD 51 23 00         B    21    				call show_ascii_char
                           B    22    
001DBF FD21 7B 23 00       B    23    				ld iy,prefix_bits_loc
001DC4 FD360000            B    24    				ld (iy),0						001DC8 CD 04 1E 00         B    25    				call dis_instr					001DCC DD23                B    26    				inc ix							                           B    27    				
001DCE 3E1A                B    28    				ld a,26							001DD0 32 B4 60 00         B    29    				ld (cursor_pos+1),a				001DD4 ED4B F2 28 00       B    30    				ld bc,(dis_addr)
001DD9 DD22 F2 28 00       B    31    				ld (dis_addr),ix				001DDE DDE5                B    32    				push ix
001DE0 E1                  B    33    				pop hl
001DE1 AF                  B    34    				xor a
001DE2 ED42                B    35    				sbc hl,bc						Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  68


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
001DE4 7D                  B    36    				ld a,l
001DE5 E607                B    37    				and 7
001DE7 6F                  B    38    				ld l,a
001DE8 0A                  B    39    shexoplp		ld a,(bc)						001DE9 CD 40 23 00         B    40    				call show_hex_byte
001DED 3E20                B    41    				ld a,' '
001DEF CD 51 23 00         B    42    				call show_ascii_char
001DF3 03                  B    43    				inc bc
001DF4 2D                  B    44    				dec l
001DF5 20 F1               B    45    				jr nz,shexoplp
                           B    46    				
001DF7 CD B5 13 00         B    47    				call os_new_line
001DFB C1                  B    48    				pop bc
001DFC 10 B1               B    49    				djnz dis_loop
                           B    50    
001DFE CD B5 13 00         B    51    				call os_new_line
001E02 AF                  B    52    				xor a
001E03 C9                  B    53    				ret
                           B    54    
                           B    55    
                           B    56    ;- Handle op code prefixes --------------------
                           B    57    			
       00000000            B    58    cb_prefix			equ 0					
       00000001            B    59    ed_prefix			equ 1
       00000002            B    60    sub_ix_prefix		equ 2
       00000003            B    61    sub_iy_prefix		equ 3
       00000004            B    62    ddcb_fdcb_prefix	equ 4					; p
       00000005            B    63    dot_l_prefix		equ 5
       00000006            B    64    il_prefix			equ 6
       00000007            B    65    show_adl_prefix		equ 7
                           B    66    
       00000000            B    67    adl_dis				equ 0					; b
                           B    68    
                           B    69    
001E04 DD7E00              B    70    dis_instr	ld a,(ix)						; c
                           B    71    			
001E07 FDCB 07 46          B    72    			bit adl_dis,(iy+var_adl)		; i
001E0B 28 04               B    73    			jr z,z80_list					; T
001E0D FDCB00F6            B    74    			set il_prefix,(iy)				; a
001E11                     B    75    z80_list			
                           B    76    			
                           B    77    ;----------------------------------------------
                           B    78    
001E11 FE40                B    79    			cp 40h
001E13 20 0A               B    80    			jr nz,not_sis
001E15 FDCB00B6            B    81    			res il_prefix,(iy)
001E19 FDCB00AE            B    82    			res dot_l_prefix,(iy)
001E1D 18 28               B    83    			jr set_adl_pf
                           B    84    			
001E1F FE49                B    85    not_sis		cp 49h
001E21 20 0A               B    86    			jr nz,not_lis
001E23 FDCB00B6            B    87    			res il_prefix,(iy)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  69


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
001E27 FDCB00EE            B    88    			set dot_l_prefix,(iy)
001E2B 18 1A               B    89    			jr set_adl_pf
                           B    90    			
001E2D FE52                B    91    not_lis		cp 52h
001E2F 20 0A               B    92    			jr nz,not_sil
001E31 FDCB00F6            B    93    			set il_prefix,(iy)
001E35 FDCB00AE            B    94    			res dot_l_prefix,(iy)
001E39 18 0C               B    95    			jr set_adl_pf
                           B    96    			
001E3B FE5B                B    97    not_sil		cp 5bh
001E3D 20 11               B    98    			jr nz,not_adl_prefix_byte
001E3F FDCB00F6            B    99    			set il_prefix,(iy)
001E43 FDCB00EE            B   100    			set dot_l_prefix,(iy)
                           B   101    			
001E47 FDCB00FE            B   102    set_adl_pf	set show_adl_prefix,(iy)
001E4B DD23                B   103    			inc ix
001E4D DD7E00              B   104    			ld a,(ix)	
                           B   105    			
                           B   106    ;----------------------------------------------
                           B   107    
001E50                     B   108    not_adl_prefix_byte			
                           B   109    			
001E50 FECB                B   110    			cp 0cbh								001E52 20 08               B   111    			jr nz,not_cb
001E54 FDCB00C6            B   112    do_cb		set cb_prefix,(iy)
001E58 DD23                B   113    			inc ix
001E5A 18 3A               B   114    			jr not_traditional_prefix_byte
                           B   115    
001E5C FEED                B   116    not_cb		cp 0edh
001E5E 20 08               B   117    			jr nz,not_ed
001E60 FDCB00CE            B   118    do_ed		set ed_prefix,(iy)
001E64 DD23                B   119    			inc ix
001E66 18 2E               B   120    			jr not_traditional_prefix_byte
                           B   121    
001E68 FEDD                B   122    not_ed		cp 0ddh
001E6A 20 18               B   123    			jr nz,not_dd
001E6C CD 9F 20 00         B   124    do_dd		call check_nxt_byte_prefix			001E70 28 92               B   125    			jr z,dis_instr						001E72 FDCB00D6            B   126    			set sub_ix_prefix,(iy)
001E76 FECB                B   127    xdcb_query	cp 0cbh								001E78 20 1C               B   128    			jr nz,not_traditional_prefix_byte	001E7A FDCB00E6            B   129    			set ddcb_fdcb_prefix,(iy)
001E7E DD23                B   130    			inc ix								001E80 DD23                B   131    			inc ix								001E82 18 12               B   132    			jr not_traditional_prefix_byte
                           B   133    
001E84 FEFD                B   134    not_dd		cp 0fdh
001E86 20 0E               B   135    			jr nz,not_traditional_prefix_byte
001E88 CD 9F 20 00         B   136    do_fd		call check_nxt_byte_prefix
001E8C CA 04 1E 00         B   137    			jr z,dis_instr	
001E90 FDCB00DE            B   138    			set sub_iy_prefix,(iy)
001E94 18 E0               B   139    			jr xdcb_query
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  70


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   140    
001E96                     B   141    not_traditional_prefix_byte
                           B   142    
                           B   143    ;----------------------------------------------
                           B   144    
001E96 DD7E00              B   145    			ld a,(ix)	
001E99 E6C0                B   146    			and 11000000b			; seperate 
001E9B 07                  B   147    			rlca
001E9C 07                  B   148    			rlca
001E9D FD77 01             B   149    			ld (iy+var_x),a			;var x= val
                           B   150    			
001EA0 DD7E00              B   151    			ld a,(ix)
001EA3 E638                B   152    			and 00111000b
001EA5 CB3F                B   153    			srl a
001EA7 CB3F                B   154    			srl a
001EA9 CB3F                B   155    			srl a	
001EAB FD77 02             B   156    			ld (iy+var_y),a			;var x = vl
                           B   157    
001EAE DD7E00              B   158    			ld a,(ix)
001EB1 E607                B   159    			and 00000111b
001EB3 FD77 03             B   160    			ld (iy+var_z),a			;var z = va
                           B   161    			
001EB6 DD7E00              B   162    			ld a,(ix)
001EB9 E630                B   163    			and 00110000b
001EBB CB3F                B   164    			srl a
001EBD CB3F                B   165    			srl a
001EBF CB3F                B   166    			srl a
001EC1 CB3F                B   167    			srl a
001EC3 FD77 04             B   168    			ld (iy+var_p),a			; var p = v
                           B   169    			
001EC6 DD7E00              B   170    			ld a,(ix)
001EC9 E608                B   171    			and 00001000b
001ECB CB3F                B   172    			srl a
001ECD CB3F                B   173    			srl a
001ECF CB3F                B   174    			srl a
001ED1 FD77 05             B   175    			ld (iy+var_q),a				;var q 
                           B   176    
001ED4 CD AD 20 00         B   177    			call find_instruction_ascii		; g
                           B   178    	
                           B   179    ;----------------------------------------------
                           B   180    
001ED8 78                  B   181    index_table	ld a,b							; a
001ED9 B7                  B   182    			or a
001EDA 28 07               B   183    			jr z,parse_instr				; m
001EDC CB7E                B   184    d_filp		bit 7,(hl)						; w
001EDE 23                  B   185    			inc hl							; o
001EDF 28 FB               B   186    			jr z,d_filp					
001EE1 10 F9               B   187    			djnz d_filp
                           B   188    										
                           B   189    			
001EE3 FD21 7B 23 00       B   190    parse_instr	ld iy,opcode_vars
001EE8 01000000            B   191    			ld bc,0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  71


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
001EEC 7E                  B   192    			ld a,(hl)						;ge
001EED FE80                B   193    			cp 80h
001EEF C8                  B   194    			ret z
001EF0 E67F                B   195    			and 7fh
                           B   196    			
001EF2 FE26                B   197    			cp '&'							;sy
001EF4 20 28               B   198    			jr nz,not_adlsym
001EF6 FDCB007E            B   199    			bit show_adl_prefix,(iy)		;do
001EFA CA 88 20 00         B   200    			jr z,next_opcode_ascii_char
001EFE 0600                B   201    			ld b,0
001F00 FDCB006E            B   202    			bit dot_l_prefix,(iy)
001F04 28 02               B   203    			jr z,naplsb
001F06 CBC0                B   204    			set 0,b
001F08 FDCB0076            B   205    naplsb		bit il_prefix,(iy)
001F0C 28 02               B   206    			jr z,napmsb
001F0E CBC8                B   207    			set 1,b
001F10 E5                  B   208    napmsb		push hl
001F11 21 DA 28 00         B   209    			ld hl,adl_prefix_list
001F15 CD D8 1E 00         B   210    			call index_table				; r
001F19 E1                  B   211    			pop hl
001F1A C3 88 20 00         B   212    			jp next_opcode_ascii_char
                           B   213    
001F1E FE5E                B   214    not_adlsym	cp '^'							;sy
001F20 20 0D               B   215    			jr nz,d_not_imm8
001F22 DD23                B   216    			inc ix							;th
001F24 DD7E00              B   217    			ld a,(ix)
001F27 CD 40 23 00         B   218    			call show_hex_byte
001F2B C3 88 20 00         B   219    			jp next_opcode_ascii_char
                           B   220    					
001F2F FE21                B   221    d_not_imm8	cp '!'							;sy
001F31 20 26               B   222    			jr nz,d_not_imm16					001F33 11020000            B   223    			ld de,2
001F37 FDCB0076            B   224    			bit il_prefix,(iy)				;ad
001F3B 28 08               B   225    			jr z,imm16
001F3D 13                  B   226    			inc de
001F3E DD7E03              B   227    			ld a,(ix+3)
001F41 CD 40 23 00         B   228    			call show_hex_byte
001F45 DD7E02              B   229    imm16		ld a,(ix+2)						;sh
001F48 CD 40 23 00         B   230    			call show_hex_byte			
001F4C DD7E01              B   231    			ld a,(ix+1)						;th
001F4F CD 40 23 00         B   232    			call show_hex_byte
001F53 DD19                B   233    			add ix,de						;ad
001F55 C3 88 20 00         B   234    			jp next_opcode_ascii_char
                           B   235    
001F59 FE2F                B   236    d_not_imm16	cp '/'							;sy
001F5B 20 36               B   237    			jr nz,d_not_sb
001F5D FDCB0066            B   238    			bit ddcb_fdcb_prefix,(iy)
001F61 28 05               B   239    			jr z,norm_dbyte
001F63 DD7EFF              B   240    			ld a,(ix-1)						;if
001F66 18 05               B   241    			jr xdcb_dbyte
001F68 DD23                B   242    norm_dbyte	inc ix
001F6A DD7E00              B   243    			ld a,(ix)						;th
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  72


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
001F6D CB7F                B   244    xdcb_dbyte	bit 7,a
001F6F 20 10               B   245    			jr nz,d_sbin					;sh
001F71 F5                  B   246    			push af
001F72 3E2B                B   247    			ld a,'+'
001F74 CD 51 23 00         B   248    			call show_ascii_char
001F78 F1                  B   249    			pop af
001F79 CD 40 23 00         B   250    			call show_hex_byte
001F7D C3 88 20 00         B   251    			jp next_opcode_ascii_char
001F81 F5                  B   252    d_sbin		push af
001F82 3E2D                B   253    			ld a,'-'
001F84 CD 51 23 00         B   254    			call show_ascii_char
001F88 F1                  B   255    			pop af
001F89 ED44                B   256    			neg
001F8B CD 40 23 00         B   257    			call show_hex_byte
001F8F C3 88 20 00         B   258    			jp next_opcode_ascii_char
                           B   259    			
001F93 FE64                B   260    d_not_sb	cp 'd'							;sy
001F95 20 1E               B   261    			jr nz,d_not_pcdip
001F97 DD23                B   262    			inc ix
001F99 01000000            B   263    			ld bc,0
001F9D DD7E00              B   264    			ld a,(ix)
001FA0 CB7F                B   265    			bit 7,a
001FA2 28 01               B   266    			jr z,d_spcd_pos
001FA4 0B                  B   267    			dec bc
001FA5 4F                  B   268    d_spcd_pos	ld c,a
001FA6 03                  B   269    			inc bc
001FA7 DDE5                B   270    			push ix
001FA9 DD09                B   271    			add ix,bc
001FAB CD 5D 23 00         B   272    			call show_ix
001FAF DDE1                B   273    			pop ix
001FB1 C3 88 20 00         B   274    			jp next_opcode_ascii_char
                           B   275    
001FB5 FE3E                B   276    d_not_pcdip	cp '>'							;sy
001FB7 20 16               B   277    			jr nz,d_not_sdig
001FB9 23                  B   278    			inc hl							;th
001FBA 01000000            B   279    			ld bc,0
001FBE 4E                  B   280    			ld c,(hl)
001FBF FD21 7B 23 00       B   281    			ld iy,opcode_vars
001FC4 FD09                B   282    			add iy,bc
001FC6 FD7E00              B   283    			ld a,(iy)						;a 
001FC9 C630                B   284    			add a,30h						;co
001FCB C3 84 20 00         B   285    			jp d_output_char
                           B   286    
001FCF FE5F                B   287    d_not_sdig	cp '_'
001FD1 20 12               B   288    			jr nz,d_nhlsubst				; s
001FD3 E5                  B   289    			push hl
001FD4 21 B2 28 00         B   290    			ld hl,hl_subs
001FD8 CD 90 20 00         B   291    hl_subst	call prefix_to_offset
001FDC CD D8 1E 00         B   292    			call index_table				; r
001FE0 E1                  B   293    			pop hl
001FE1 C3 88 20 00         B   294    			jp next_opcode_ascii_char
                           B   295    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  73


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
001FE5 FE7C                B   296    d_nhlsubst	cp '|'
001FE7 20 07               B   297    			jr nz,d_noinvhls
001FE9 E5                  B   298    			push hl
001FEA 21 B8 28 00         B   299    			ld hl,inv_hl_subs
001FEE 18 E8               B   300    			jr hl_subst
                           B   301    			
001FF0 FE68                B   302    d_noinvhls	cp 'h'							;sy
001FF2 20 07               B   303    			jr nz,d_nhsubst
001FF4 E5                  B   304    			push hl
001FF5 21 BE 28 00         B   305    			ld hl,h_subs
001FF9 18 DD               B   306    			jr hl_subst
                           B   307    			
001FFB FE6C                B   308    d_nhsubst	cp 'l'							;sy
001FFD 20 07               B   309    			jr nz,d_nlsubst
001FFF E5                  B   310    			push hl
002000 21 C5 28 00         B   311    			ld hl,l_subs
002004 18 D2               B   312    			jr hl_subst
                           B   313    			
002006 FE24                B   314    d_nlsubst	cp '$'
002008 20 07               B   315    			jr nz,d_nihlsubst				; s
00200A E5                  B   316    			push hl
00200B 21 CC 28 00         B   317    			ld hl,ind_hl_subs
00200F 18 C7               B   318    			jr hl_subst
                           B   319    
                           B   320    
002011                     B   321    d_nihlsubst	
                           B   322    
002011 FE7E                B   323    			cp '~'							; s
002013 20 1F               B   324    			jr nz,ntable_r
002015 11 07 28 00         B   325    			ld de,table_r
002019 23                  B   326    do_table 	inc hl
00201A 01000000            B   327    			ld bc,0							; t
00201E 4E                  B   328    			ld c,(hl)
00201F FD21 7B 23 00       B   329    			ld iy,opcode_vars
002024 FD09                B   330    			add iy,bc
002026 FD4600              B   331    			ld b,(iy)						;in
002029 E5                  B   332    			push hl
00202A EB                  B   333    			ex de,hl
00202B CD D8 1E 00         B   334    			call index_table				; r
00202F E1                  B   335    			pop hl
002030 C3 88 20 00         B   336    			jp next_opcode_ascii_char
                           B   337    			
002034 11 12 28 00         B   338    ntable_r	ld de,table_r2					; s
002038 FE3D                B   339    			cp '='
00203A 28 DD               B   340    			jr z,do_table
                           B   341    			
00203C 11 1D 28 00         B   342    			ld de,table_rp					; s
002040 FE40                B   343    			cp '@'
002042 28 D5               B   344    			jr z,do_table 
                           B   345    			
002044 11 24 28 00         B   346    			ld de,table_rp2					; s
002048 FE2A                B   347    			cp '*'
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  74


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
00204A 28 CD               B   348    			jr z,do_table
                           B   349    			
00204C 11 8A 28 00         B   350    			ld de,table_rp3					; s
002050 FE3C                B   351    			cp '<'
002052 28 C5               B   352    			jr z,do_table
                           B   353    			
002054 11 92 28 00         B   354    			ld de,table_rp4					; s
002058 FE7D                B   355    			cp '}'
00205A 28 BD               B   356    			jr z,do_table
                           B   357    			
00205C 11 2C 28 00         B   358    			ld de,table_cc					; s
002060 FE23                B   359    			cp '#'
002062 28 B5               B   360    			jr z,do_table 
                           B   361    			
002064 11 38 28 00         B   362    			ld de,table_alu					; s
002068 FE3A                B   363    			cp ':'
00206A 28 AD               B   364    			jr z,do_table 
                           B   365    			
00206C 11 64 28 00         B   366    			ld de,table_rot					; s
002070 FE25                B   367    			cp '%'
002072 28 A5               B   368    			jr z,do_table 
                           B   369    			
002074 11 A2 28 00         B   370    			ld de,table_rst					; s
002078 FE3B                B   371    			cp ';'
00207A 28 9D               B   372    			jr z,do_table 
                           B   373    
00207C 11 9A 28 00         B   374    			ld de,table_rp5					; s
002080 FE7B                B   375    			cp '{'
002082 28 95               B   376    			jr z,do_table 
                           B   377    
002084                     B   378    ntable_bli
                           B   379    
                           B   380    ;----------------------------------------------
                           B   381    
002084                     B   382    d_output_char
                           B   383    
002084 CD 51 23 00         B   384    			call show_ascii_char
                           B   385    
002088                     B   386    next_opcode_ascii_char
                           B   387    
002088 CB7E                B   388    			bit 7,(hl)						;if
00208A C0                  B   389    			ret nz
00208B 23                  B   390    			inc hl
00208C C3 E3 1E 00         B   391    			jp parse_instr
                           B   392    			
                           B   393    			
                           B   394    ;----------------------------------------------
                           B   395    
                           B   396    
002090                     B   397    prefix_to_offset
                           B   398    
002090 0602                B   399    			ld b,2							;se
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  75


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002092 FDCB005E            B   400    			bit sub_iy_prefix,(iy)
002096 C0                  B   401    			ret nz
002097 05                  B   402    			dec b
002098 FDCB0056            B   403    			bit sub_ix_prefix,(iy)
00209C C0                  B   404    			ret nz
00209D 05                  B   405    			dec b
00209E C9                  B   406    			ret
                           B   407    			
                           B   408    			
00209F                     B   409    check_nxt_byte_prefix			
                           B   410    
00209F DD23                B   411    			inc ix
0020A1 DD7E00              B   412    			ld a,(ix)
0020A4 FEDD                B   413    			cp 0ddh
0020A6 C8                  B   414    			ret z
0020A7 FEED                B   415    			cp 0edh
0020A9 C8                  B   416    			ret z
0020AA FEFD                B   417    			cp 0fdh
0020AC C9                  B   418    			ret
                           B   419    			
                           B   420    			
                           B   421    ;==============================================
                           B   422    ;- Find instruction ascii ---------------------
                           B   423    ;==============================================
                           B   424    
                           B   425    ; Returns HL = ptr to ascii name
                           B   426    ;          B = group index (number of instructi
                           B   427    
0020AD                     B   428    find_instruction_ascii
                           B   429    
0020AD 0600                B   430    			ld b,0						; defau
                           B   431    
0020AF FDCB0066            B   432    			bit ddcb_fdcb_prefix,(iy)	; Was t
0020B3 28 12               B   433    			jr z,not_ddcb_fdcb_inst
0020B5 21 E1 27 00         B   434    			ld hl,ddcb_fdcb_z6		
0020B9 FD46 01             B   435    			ld b,(iy+var_x)				; x is 
0020BC FD7E 03             B   436    			ld a,(iy+var_z)
0020BF FE06                B   437    			cp 6
0020C1 C8                  B   438    			ret z
0020C2 21 A9 27 00         B   439    			ld hl,ddcb_fdcb_zn6					0020C6 C9                  B   440    			ret
                           B   441    			
                           B   442    ;==============================================
                           B   443    
0020C7                     B   444    not_ddcb_fdcb_inst
                           B   445    
0020C7 FDCB0046            B   446    			bit cb_prefix,(iy)			;is thi
0020CB 28 08               B   447    			jr z,not_cb_inst
0020CD 21 31 25 00         B   448    			ld hl,cb_group		
0020D1 FD46 01             B   449    			ld b,(iy+var_x)				; x is 
0020D4 C9                  B   450    			ret
                           B   451    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  76


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   452    ;==============================================
                           B   453    
0020D5                     B   454    not_cb_inst
                           B   455    
0020D5 FDCB004E            B   456    			bit ed_prefix,(iy)			;is thi
0020D9 CA FA 21 00         B   457    			jr z,not_ed_inst
                           B   458    
0020DD FD7E 01             B   459    			ld a,(iy+var_x)				;x = 0
0020E0 B7                  B   460    			or a
0020E1 20 56               B   461    			jr nz,notedx0
                           B   462    		
                           B   463    			
0020E3 FD7E 03             B   464    			ld a,(iy+var_z)				
0020E6 B7                  B   465    			or a
0020E7 20 0D               B   466    			jr nz,notedx0z0
0020E9 21 58 25 00         B   467    			ld hl,ed_x0_z0_yn6			;x0 / z
0020ED FD7E 02             B   468    			ld a,(iy+var_y)
0020F0 FE06                B   469    			cp 6
0020F2 C0                  B   470    			ret nz
0020F3 0601                B   471    			ld b,1
0020F5 C9                  B   472    			ret
                           B   473    
0020F6 FE01                B   474    notedx0z0	cp 1
0020F8 20 0D               B   475    			jr nz,notedx0z1
0020FA 21 69 25 00         B   476    			ld hl,ed_x0_z1				;x0 / z
0020FE FD7E 02             B   477    			ld a,(iy+var_y)
002101 FE06                B   478    			cp 6
002103 C0                  B   479    			ret nz
002104 0601                B   480    			ld b,1
002106 C9                  B   481    			ret
                           B   482    
002107 FE02                B   483    notedx0z1	cp 2
002109 20 05               B   484    			jr nz,notedx0z2
00210B 21 7F 25 00         B   485    			ld hl,ed_x0_z2				;x0 / z
00210F C9                  B   486    			ret
                           B   487    
002110 FE03                B   488    notedx0z2	cp 3
002112 20 05               B   489    			jr nz,notedx0z3
002114 21 8B 25 00         B   490    			ld hl,ed_x0_z3				;x0 / z
002118 C9                  B   491    			ret
                           B   492    			
002119 FE04                B   493    notedx0z3	cp 4
00211B 20 05               B   494    			jr nz,notedx0z4
00211D 21 97 25 00         B   495    			ld hl,ed_x0_z4				;x0 / z
002121 C9                  B   496    			ret
                           B   497    
002122 FE06                B   498    notedx0z4	cp 6
002124 20 05               B   499    			jr nz,notedx0z6				;x0 / z
002126 21 A1 25 00         B   500    			ld hl,ed_x0_z6
00212A C9                  B   501    			ret
                           B   502    
00212B FE07                B   503    notedx0z6	cp 7
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  77


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
00212D C2 04 28 00         B   504    			jr nz,bad_opcode			;x0 / z
002131 21 AC 25 00         B   505    			ld hl,ed_x0_z7
002135 FD46 05             B   506    			ld b,(iy+var_q)
002138 C9                  B   507    			ret
                           B   508    			
                           B   509    ;----------------------------------------------
                           B   510    			
002139 FE01                B   511    notedx0		cp 1	
00213B 20 68               B   512    			jr nz,ed_xn1
                           B   513    
00213D FD7E 03             B   514    			ld a,(iy+var_z)					;x 
002140 B7                  B   515    			or a
002141 20 0D               B   516    			jr nz,ed_x1_zn0
002143 21 C1 25 00         B   517    			ld hl,ed_x1_z0_yn6				;z 
002147 FD7E 02             B   518    			ld a,(iy+var_y)
00214A FE06                B   519    			cp 6
00214C C0                  B   520    			ret nz
00214D 0601                B   521    			ld b,1
00214F C9                  B   522    			ret
                           B   523    			
002150 FE01                B   524    ed_x1_zn0	cp 1
002152 20 0D               B   525    			jr nz,ed_x1_zn1
002154 21 D1 25 00         B   526    			ld hl,ed_x1_z1_yn6				;z 
002158 FD7E 02             B   527    			ld a,(iy+var_y)
00215B FE06                B   528    			cp 6
00215D C0                  B   529    			ret nz
00215E 0601                B   530    			ld b,1
002160 C9                  B   531    			ret
                           B   532    		
002161 FE02                B   533    ed_x1_zn1	cp 2
002163 20 08               B   534    			jr nz,ed_x1_zn2					;z 
002165 21 E6 25 00         B   535    			ld hl,ed_x1_z2	
002169 FD46 05             B   536    			ld b,(iy+var_q)
00216C C9                  B   537    			ret
                           B   538    
00216D FE03                B   539    ed_x1_zn2	cp 3
00216F 20 08               B   540    			jr nz,ed_x1_zn3					;z 
002171 21 FC 25 00         B   541    			ld hl,ed_x1_z3	
002175 FD46 05             B   542    			ld b,(iy+var_q)
002178 C9                  B   543    			ret
                           B   544    			
002179 FE04                B   545    ed_x1_zn3	cp 4							;z 
00217B 20 08               B   546    			jr nz,ed_x1_zn4
00217D 21 11 26 00         B   547    			ld hl,ed_x1_z4
002181 FD46 02             B   548    			ld b,(iy+var_y)
002184 C9                  B   549    			ret
                           B   550    			
002185 FE05                B   551    ed_x1_zn4	cp 5
002187 20 08               B   552    			jr nz,ed_x1_zn5
002189 21 49 26 00         B   553    			ld hl,ed_x1_z5					;z 
00218D FD46 02             B   554    			ld b,(iy+var_y)
002190 C9                  B   555    			ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  78


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   556    			
002191 FE06                B   557    ed_x1_zn5	cp 6
002193 20 08               B   558    			jr nz,ed_x1_zn6					;z=
002195 21 78 26 00         B   559    			ld hl,ed_x1_z6
002199 FD46 02             B   560    			ld b,(iy+var_y)
00219C C9                  B   561    			ret
                           B   562    			
00219D 21 9D 26 00         B   563    ed_x1_zn6	ld hl,ed_x1_z7					;z=
0021A1 FD46 02             B   564    			ld b,(iy+var_y)
0021A4 C9                  B   565    			ret
                           B   566    
                           B   567    ;----------------------------------------------
                           B   568    				
0021A5 FE02                B   569    ed_xn1		cp 2
0021A7 20 2E               B   570    			jr nz,ed_xn2
                           B   571    			
0021A9 FD46 02             B   572    			ld b,(iy+var_y)
0021AC FD7E 03             B   573    			ld a,(iy+var_z)
0021AF B7                  B   574    			or a
0021B0 20 05               B   575    			jr nz,edx2zn0
0021B2 21 C1 26 00         B   576    			ld hl,ed_x2_z0					;x=
0021B6 C9                  B   577    			ret
                           B   578    
0021B7 FE01                B   579    edx2zn0		cp 1
0021B9 20 05               B   580    			jr nz,edx2zn1
0021BB 21 DB 26 00         B   581    			ld hl,ed_x2_z1					;x=
0021BF C9                  B   582    			ret
                           B   583    
0021C0 FE02                B   584    edx2zn1		cp 2
0021C2 20 05               B   585    			jr nz,edx2zn2
0021C4 21 F5 26 00         B   586    			ld hl,ed_x2_z2					;x=
0021C8 C9                  B   587    			ret
                           B   588    
0021C9 FE03                B   589    edx2zn2		cp 3
0021CB 20 05               B   590    			jr nz,edx2zn3
0021CD 21 25 27 00         B   591    			ld hl,ed_x2_z3					;x=
0021D1 C9                  B   592    			ret
                           B   593    
0021D2 21 57 27 00         B   594    edx2zn3		ld hl,ed_x2_z4					;x=
0021D6 C9                  B   595    			ret
                           B   596    
                           B   597    ;----------------------------------------------
                           B   598    
0021D7 FE03                B   599    ed_xn2		cp 3
0021D9 20 18               B   600    			jr nz,ed_xn3
                           B   601    			
0021DB FD46 02             B   602    			ld b,(iy+var_y)
0021DE FD7E 03             B   603    			ld a,(iy+var_z)
0021E1 FE02                B   604    			cp 2
0021E3 20 05               B   605    			jr nz,edx3zn2
0021E5 21 8D 27 00         B   606    			ld hl,ed_x3_z2					;x=
0021E9 C9                  B   607    			ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  79


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0021EA FE03                B   608    edx3zn2		cp 3
0021EC 20 05               B   609    			jr nz,edx3zn3
0021EE 21 9B 27 00         B   610    			ld hl,ed_x3_z3					;x=
0021F2 C9                  B   611    			ret
                           B   612    
0021F3                     B   613    edx3zn3
                           B   614    
0021F3                     B   615    ed_xn3
                           B   616    
                           B   617    ;----------------------------------------------
                           B   618    
0021F3                     B   619    invalid_op
0021F3 21 04 28 00         B   620    			ld hl,bad_opcode				; x
0021F7 0600                B   621    			ld b,0
0021F9 C9                  B   622    			ret
                           B   623    			
                           B   624    			
                           B   625    ;========= UNPREFIXED INSTRUCTION =============
                           B   626    
                           B   627    
0021FA FD7E 01             B   628    not_ed_inst	ld a,(iy+var_x)				; is X 
0021FD B7                  B   629    			or a
0021FE C2 96 22 00         B   630    			jr nz,x_not_zero
                           B   631    
                           B   632    ;----------------------------------------------
                           B   633    
                           B   634    
002202 FD7E 03             B   635    			ld a,(iy+var_z)				;x = 0
002205 B7                  B   636    			or a
002206 20 14               B   637    			jr nz,x0_z_not_zero
002208 21 83 23 00         B   638    			ld hl,x0_z0
00220C FD7E 02             B   639    			ld a,(iy+var_y)				;y is t
00220F 47                  B   640    			ld b,a
002210 D604                B   641    			sub 4
002212 FD77 06             B   642    			ld (iy+var_calc),a			;var_ca
002215 78                  B   643    			ld a,b
002216 FE04                B   644    			cp 4
002218 D8                  B   645    			ret c
002219 0604                B   646    			ld b,4						;if y >
00221B C9                  B   647    			ret
                           B   648    			
00221C                     B   649    x0_z_not_zero		
                           B   650    			
00221C FE01                B   651    			cp 1
00221E 20 1A               B   652    			jr nz,x0_z_not_one
002220 FD7E 02             B   653    			ld a,(iy+var_y)				;x=0/z=
002223 FE06                B   654    			cp 6
002225 20 0B               B   655    			jr nz,x0z1yn6
002227 CD 36 23 00         B   656    			call test_ixiy_prefix		;if y=6
00222B 28 05               B   657    			jr z,x0z1yn6				;altern
00222D 21 B6 23 00         B   658    			ld hl,x0_z1_y6
002231 C9                  B   659    			ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  80


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   660    
002232 21 A3 23 00         B   661    x0z1yn6		ld hl,x0_z1					;x=0, z
002236 FD46 05             B   662    			ld b,(iy+var_q)				;q is t
002239 C9                  B   663    			ret 
                           B   664    			
00223A                     B   665    x0_z_not_one
                           B   666    
00223A FE02                B   667    			cp 2
00223C 20 08               B   668    			jr nz,x0_z_not_two
00223E 21 BE 23 00         B   669    			ld hl,x0_z2
002242 FD46 02             B   670    			ld b,(iy+var_y)				;y is t
002245 C9                  B   671    			ret
                           B   672    			
002246                     B   673    x0_z_not_two
                           B   674    
002246 FE03                B   675    			cp 3
002248 20 08               B   676    			jr nz,x0_z_not_three
00224A 21 0A 24 00         B   677    			ld hl,x0_z3
00224E FD46 05             B   678    			ld b,(iy+var_q)				;q is t
002251 C9                  B   679    			ret
                           B   680    			
002252                     B   681    x0_z_not_three
                           B   682    
002252 FE04                B   683    			cp 4
002254 20 05               B   684    			jr nz,x0_z_not_four
002256 21 1A 24 00         B   685    			ld hl,x0_z4					;no ini
00225A C9                  B   686    			ret			
                           B   687    			
00225B                     B   688    x0_z_not_four
                           B   689    
00225B FE05                B   690    			cp 5
00225D 20 05               B   691    			jr nz,x0_z_not_five
00225F 21 22 24 00         B   692    			ld hl,x0_z5					;no ini
002263 C9                  B   693    			ret				
                           B   694    			
002264                     B   695    x0_z_not_five
                           B   696    
002264 FE06                B   697    			cp 6
002266 20 1A               B   698    			jr nz,x0_z_not_six
002268 21 2A 24 00         B   699    			ld hl,x0_z6					;normal
00226C FD7E 02             B   700    			ld a,(iy+var_y)
00226F FE07                B   701    			cp 7
002271 C0                  B   702    			ret nz
002272 FDCB0056            B   703    			bit sub_ix_prefix,(iy)
002276 20 05               B   704    			jr nz,altx0z6
002278 FDCB005E            B   705    			bit sub_iy_prefix,(iy)
00227C C8                  B   706    			ret z	
00227D 21 33 24 00         B   707    altx0z6		ld hl,alt_x0_z6				;if dd/
002281 C9                  B   708    			ret
                           B   709    
                           B   710    
002282                     B   711    x0_z_not_six
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  81


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   712    			
002282 21 3B 24 00         B   713    			ld hl,x0_z7					;x=0, z
002286 FD46 02             B   714    			ld b,(iy+var_y)				;y is n
002289 CD 36 23 00         B   715    			call test_ixiy_prefix
00228D C8                  B   716    			ret z
00228E 21 55 24 00         B   717    altx0z7		ld hl,alt_x0_z7				;if dd/
002292 FD46 05             B   718    			ld b,(iy+var_q)				;this i
002295 C9                  B   719    			ret
                           B   720    
                           B   721    ;----------------------------------------------
                           B   722    
002296 FE01                B   723    x_not_zero	cp 1						; is x 
002298 20 32               B   724    			jr nz,x_not_one
                           B   725    			
00229A 21 67 24 00         B   726    			ld hl,x1_table				; x=1
00229E CD 36 23 00         B   727    			call test_ixiy_prefix
0022A2 20 11               B   728    			jr nz,pref_x1
0022A4 FD7E 02             B   729    			ld a,(iy+var_y)
0022A7 FE06                B   730    			cp 6
0022A9 C0                  B   731    			ret nz
0022AA FD7E 03             B   732    			ld a,(iy+var_z)
0022AD FE06                B   733    			cp 6
0022AF C0                  B   734    			ret nz
0022B0 21 85 24 00         B   735    			ld hl,x1_y6_z6				;if y=6
0022B4 C9                  B   736    			ret
                           B   737    
0022B5 FD7E 02             B   738    pref_x1		ld a,(iy+var_y)				
0022B8 FE06                B   739    			cp 6
0022BA 20 05               B   740    			jr nz,x1yn6
0022BC 21 71 24 00         B   741    			ld hl,x1_y6
0022C0 C9                  B   742    			ret
                           B   743    			
0022C1 FD7E 03             B   744    x1yn6		ld a,(iy+var_z)
0022C4 FE06                B   745    			cp 6
0022C6 C0                  B   746    			ret nz
0022C7 21 7B 24 00         B   747    			ld hl,x1_z6
0022CB C9                  B   748    			ret
                           B   749    			
                           B   750    ;----------------------------------------------
                           B   751    			
0022CC FE02                B   752    x_not_one	cp 2						; is x 
0022CE 20 05               B   753    			jr nz,x_not_two
0022D0 21 89 24 00         B   754    			ld hl,x2_table				; no in
0022D4 C9                  B   755    			ret
                           B   756    			
                           B   757    ;----------------------------------------------
                           B   758    
0022D5 FD7E 03             B   759    x_not_two	ld a,(iy+var_z)				; x mus
0022D8 B7                  B   760    			or a
0022D9 20 05               B   761    			jr nz,x3_z_not_zero
0022DB 21 8E 24 00         B   762    			ld hl,x3_z0					; no in
0022DF C9                  B   763    			ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  82


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   764    						
0022E0                     B   765    x3_z_not_zero
                           B   766    
0022E0 FE01                B   767    			cp 1
0022E2 20 11               B   768    			jr nz,x3_z_not_one
0022E4 21 96 24 00         B   769    			ld hl,x3_z1_q0
0022E8 FD7E 05             B   770    			ld a,(iy+var_q)
0022EB B7                  B   771    			or a
0022EC C8                  B   772    			ret z						; no in
0022ED 21 9E 24 00         B   773    			ld hl,x3_z1_q1
0022F1 FD46 04             B   774    			ld b,(iy+var_p)				; index
0022F4 C9                  B   775    			ret
                           B   776    
0022F5                     B   777    x3_z_not_one
                           B   778    
0022F5 FE02                B   779    			cp 2
0022F7 20 05               B   780    			jr nz,x3_z_not_two
0022F9 21 B5 24 00         B   781    			ld hl,x3_z2					;no ini
0022FD C9                  B   782    			ret
                           B   783    
0022FE                     B   784    x3_z_not_two
                           B   785    
0022FE FE03                B   786    			cp 3
002300 20 08               B   787    			jr nz,x3_z_not_three
002302 21 BE 24 00         B   788    			ld hl,x3_z3
002306 FD46 02             B   789    			ld b,(iy+var_y)				;index 
002309 C9                  B   790    			ret
                           B   791    
00230A                     B   792    x3_z_not_three
                           B   793    
00230A FE04                B   794    			cp 4
00230C 20 05               B   795    			jr nz,x3_z_not_four
00230E 21 F3 24 00         B   796    			ld hl,x3_z4				;no initial
002312 C9                  B   797    			ret						
                           B   798    
                           B   799    
002313                     B   800    x3_z_not_four
                           B   801    
002313 FE05                B   802    			cp 5
002315 20 11               B   803    			jr nz,x3_z_not_five
002317 21 FE 24 00         B   804    			ld hl,x3_z5_q0
00231B FD7E 05             B   805    			ld a,(iy+var_q)
00231E B7                  B   806    			or a
00231F C8                  B   807    			ret z						;no ind
002320 21 07 25 00         B   808    			ld hl,x3_z5_q1
002324 FD46 04             B   809    			ld b,(iy+var_p)				;else i
002327 C9                  B   810    			ret
                           B   811    
002328                     B   812    x3_z_not_five
                           B   813    
002328 FE06                B   814    			cp 6
00232A 20 05               B   815    			jr nz,x3_z_not_six
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  83


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
00232C 21 25 25 00         B   816    			ld hl,x3_z6					;no ind
002330 C9                  B   817    			ret
                           B   818    
002331                     B   819    x3_z_not_six
                           B   820    
002331 21 29 25 00         B   821    			ld hl,x3_z7					;x=3, z
002335 C9                  B   822    			ret
                           B   823    
                           B   824    
                           B   825    ;==============================================
                           B   826    
002336                     B   827    test_ixiy_prefix
                           B   828    
002336 FDCB0056            B   829    			bit sub_ix_prefix,(iy)
00233A C0                  B   830    			ret nz
00233B FDCB005E            B   831    			bit sub_iy_prefix,(iy)
00233F C9                  B   832    			ret
                           B   833    			
                           B   834    ;==============================================
                           B   835    
                           B   836    
002340                     B   837    show_hex_byte
                           B   838    
002340 E5                  B   839    			push hl
002341 21 ED 28 00         B   840    			ld hl,output_byte_txt
002345 E5                  B   841    			push hl
002346 CD 58 10 00         B   842    			call hexbyte_to_ascii
00234A E1                  B   843    			pop hl
00234B CD 0D 0F 00         B   844    			call os_print_string
00234F E1                  B   845    			pop hl
002350 C9                  B   846    			ret
                           B   847    			
                           B   848    
002351                     B   849    show_ascii_char
                           B   850    
002351 E5                  B   851    			push hl
002352 21 F0 28 00         B   852    			ld hl,output_char_txt
002356 77                  B   853    			ld (hl),a
002357 CD 0D 0F 00         B   854    			call os_print_string
00235B E1                  B   855    			pop hl
00235C C9                  B   856    			ret
                           B   857    		
                           B   858    		
00235D DD22 EA 28 00       B   859    show_ix		ld (d_work_address),ix
002362 3A EC 28 00         B   860    			ld a,(d_work_address+2)
002366 CD 40 23 00         B   861    			call show_hex_byte
00236A 3A EB 28 00         B   862    			ld a,(d_work_address+1)
00236E CD 40 23 00         B   863    			call show_hex_byte
002372 3A EA 28 00         B   864    			ld a,(d_work_address)
002376 CD 40 23 00         B   865    			call show_hex_byte
00237A C9                  B   866    			ret
                           B   867    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  84


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   868    ;----------------------------------------------
                           B   869    
                           B   870    ; SYMBOLS:
                           B   871    
                           B   872    ; #  CC_table
                           B   873    ; ~  r table (registers)
                           B   874    ; =  r2 table (registers 2)
                           B   875    ; @  RP table (register pairs 1)
                           B   876    ; *  RP2 table (registers pairs 2)
                           B   877    ; :  ALU table
                           B   878    ; %  ROT table
                           B   879    ; _  HL,IX/IY substitute selected by prefix
                           B   880    ; |  HL, IY/IX substitute based on prefix (IX/I
                           B   881    ; $  (HL),(IX+d),(IY+d) substitute selected by 
                           B   882    ; h  H,IXH/IYH substitute selected by prefix
                           B   883    ; l  L,IXL,IYL substitute selected by prefix
                           B   884    ; &  ADL prefix 
                           B   885    
                           B   886    ; ^   n (8 bit immediate)
                           B   887    ; !   nn (16 or 24 bit immediate)
                           B   888    ; d   8 bit signed jump displacement from PC
                           B   889    ; /   8 bit signed byte used for IX+d, IY+d ins
                           B   890    ; >   single digit used by BIT,SET,RES instruct
                           B   891    ; <   RP3 table (register pairs 3)
                           B   892    ; }   RP4 table (register pairs 4)
                           B   893    ; ;   RST table
                           B   894    ; {   RP5 table (register pairs 5)
                           B   895    
00237B                     B   896    opcode_vars
                           B   897    
00237B 00                  B   898    prefix_bits_loc	db 0	
00237C 00                  B   899    var_x_loc		db 0	
00237D 00                  B   900    var_y_loc		db 0	
00237E 00                  B   901    var_z_loc		db 0	
00237F 00                  B   902    var_p_loc		db 0	
002380 00                  B   903    var_q_loc		db 0
002381 00                  B   904    var_calc_loc	db 0
002382 01                  B   905    var_adl_loc		db 1
                           B   906    
       00000000            B   907    prefix_bits		equ opcode_vars-prefix_bits_loc
       00000001            B   908    var_x			equ var_x_loc-opcode_vars
       00000002            B   909    var_y			equ var_y_loc-opcode_vars
       00000003            B   910    var_z			equ var_z_loc-opcode_vars
       00000004            B   911    var_p			equ var_p_loc-opcode_vars
       00000005            B   912    var_q			equ var_q_loc-opcode_vars
       00000006            B   913    var_calc		equ var_calc_loc-opcode_vars
       00000007            B   914    var_adl			equ var_adl_loc-opcode_vars
                           B   915    
                           B   916    ;---- Unprefixed opcodes ----------------------
                           B   917    
                           B   918    
002383 4E4FD0              B   919    x0_z0		db 'NO','P'+80h				; y0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  85


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002386 45582041 462C4146   B   920    			db 'EX AF,AF',27h+80h		; y1 
00238E A7 
00238F 444A4E5A 206480     B   921    			db 'DJNZ ','d',80h			; y2
002396 4A522064 80         B   922    			db 'JR ','d',80h			; y3
00239B 4A522023 06 2C6480   B   923    			db 'JR #',var_calc,',d',80h	; y4-y7
                           B   924    			
0023A3 4C442620 40 04      B   925    x0_z1		db 'LD& @',var_p,',!',80h	; q=0
0023A9 2C2180 
0023AC 41444426 205F2C40   B   926    			db 'ADD& _,@',var_p,80h		; q=1
0023B4 04 80 
0023B6 4C442620 7C2C2480   B   927    x0_z1_y6	db 'LD& |,$',80h
                           B   928    
0023BE 4C442620 28424329   B   929    x0_z2		db 'LD& (BC),','A'+80h		;y=0
0023C6 2CC1 
0023C8 4C442620 412C2842   B   930    			db 'LD& A,(BC',')'+80h		;y=1
0023D0 43A9 
0023D2 4C442620 28444529   B   931    			db 'LD& (DE),','A'+80h		;y=2
0023DA 2CC1 
0023DC 4C442620 412C2844   B   932    			db 'LD& A,(DE',')'+80h		;y=3
0023E4 45A9 
0023E6 4C442620 2821292C   B   933    			db 'LD& (!),','_'+80h		;y=4
0023EE DF 
0023EF 4C442620 5F2C2821   B   934    			db 'LD& _,(!',')'+80h		;y=5
0023F7 A9 
0023F8 4C442620 2821292C   B   935    			db 'LD& (!),','A'+80h		;y=6
002400 C1 
002401 4C442620 412C2821   B   936    			db 'LD& A,(!',')'+80h		;y=7
002409 A9 
                           B   937    
00240A 494E4326 2040 04    B   938    x0_z3		db 'INC& @',var_p,80h		;q=0
002411 80 
002412 44454326 2040 04    B   939    			db 'DEC& @',var_p,80h		;q=1
002419 80 
                           B   940    			
00241A 494E4326 207E 02    B   941    x0_z4		db 'INC& ~',var_y,80h		
002421 80 
                           B   942    
002422 44454326 207E 02    B   943    x0_z5		db 'DEC& ~',var_y,80h		
002429 80 
                           B   944    			
00242A 4C442620 7E 02      B   945    x0_z6		db 'LD& ~',var_y,',^',80h	
002430 2C5E80 
002433 4C442620 242C7C80   B   946    alt_x0_z6	db 'LD& $,|',80h			; when 
                           B   947    		
00243B 524C43C1            B   948    x0_z7		db 'RLC','A'+80h		;y=0
00243F 525243C1            B   949    			db 'RRC','A'+80h		;y=1
002443 524CC1              B   950    			db 'RL','A'+80h			;y=2
002446 5252C1              B   951    			db 'RR','A'+80h			;y=3
002449 4441C1              B   952    			db 'DA','A'+80h			;y=4
00244C 4350CC              B   953    			db 'CP','L'+80h			;y=5
00244F 5343C6              B   954    			db 'SC','F'+80h			;y=6 (and n
002452 4343C6              B   955    			db 'CC','F'+80h			;y=7 (and n
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  86


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   956    			
002455 4C442620 7B 04      B   957    alt_x0_z7	db 'LD& {',var_p,',$',80h	;q=0 (D
00245B 2C2480 
00245E 4C442620 242C7B 04   B   958    			db 'LD& $,{',var_p,80h		;q=1 (D
002466 80 
                           B   959    		
                           B   960    
                           B   961    
002467 4C442620 7E 02      B   962    x1_table	db 'LD& ~',var_y,',~',var_z,80h	
00246D 2C7E 03 80 
002471 4C442620 7E 02      B   963    x1_y6	 	db 'LD& ~',var_y,',=',var_z,80h		002477 2C3D 03 80 
00247B 4C442620 3D 02      B   964    x1_z6		db 'LD& =',var_y,',~',var_z,80h		002481 2C7E 03 80 
                           B   965    
002485 48414CD4            B   966    x1_y6_z6	db 'HAL','T'+80h
                           B   967    
                           B   968    
                           B   969    
002489 3A 02 7E 03 80      B   970    x2_table	db ':',var_y,'~',var_z,80h			                           B   971    			
                           B   972    		
                           B   973    		
00248E 52455426 2023 02    B   974    x3_z0		db 'RET& #',var_y,80h
002495 80 
                           B   975    
002496 504F5026 202A 04    B   976    x3_z1_q0	db 'POP& *',var_p,80h			
00249D 80 
00249E 52455426 80         B   977    x3_z1_q1	db 'RET','&',80h		;p=0
0024A3 4558D8              B   978    			db 'EX','X'+80h			;p=1
0024A6 4A502620 5F80       B   979    			db 'JP& _',80h			;p=2
0024AC 4C442620 53502C5F   B   980    			db 'LD& SP,_',80h		;p=3
0024B4 80 
                           B   981    
0024B5 4A502620 23 02      B   982    x3_z2		db 'JP& #',var_y,',!',80h		
0024BB 2C2180 
                           B   983    
0024BE 4A502620 2180       B   984    x3_z3		db 'JP& !',80h			;y = 0
0024C4 43422070 667880     B   985    			db 'CB pfx',80h			;y = 1
0024CB 4F555420 285E292C   B   986    			db 'OUT (^),','A'+80h	;y = 2
0024D3 C1 
0024D4 494E2041 2C285EA9   B   987    			db 'IN A,(^',')'+80h	;y = 3
0024DC 45582620 28535029   B   988    			db 'EX& (SP),','_',80h	;y = 4
0024E4 2C5F80 
0024E7 45582044 452C48CC   B   989    			db 'EX DE,H','L'+80h	;y = 5
0024EF 44C9                B   990    			db 'D','I'+80h			;y = 6
0024F1 45C9                B   991    			db 'E','I'+80h			;y = 7
                           B   992    
0024F3 43414C4C 262023 02   B   993    x3_z4		db 'CALL& #',var_y,',!',80h
0024FB 2C2180 
                           B   994    
0024FE 50555348 26202A 04   B   995    x3_z5_q0	db 'PUSH& *',var_p,80h			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  87


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002506 80 
002507 43414C4C 26202180   B   996    x3_z5_q1	db 'CALL& !',80h			;p=0
00250F 44442070 667880     B   997    			db 'DD pfx',80h			;p=1
002516 45442070 667880     B   998    			db 'ED pfx',80h			;p=2
00251D 20464420 70667880   B   999    			db' FD pfx',80h			;p=3
                           B  1000    
002525 3A 02 5E80          B  1001    x3_z6		db ':',var_y,'^',80h	;ALU_table(
                           B  1002    
002529 52535426 203B 02    B  1003    x3_z7		db 'RST& ;',var_y,80h		; rst_t
002530 80 
                           B  1004    
                           B  1005    
                           B  1006    ;--- CB - Prefixed op-codes--------------------
                           B  1007    
                           B  1008    
002531 25 02 207E 03 80    B  1009    cb_group		db '%',var_y,' ~',var_z,80h		002537 42495426 203E 02    B  1010    				db 'BIT& >',var_y,',~',var_z,80
00253E 2C7E 03 80 
002542 52455326 203E 02    B  1011    				db 'RES& >',var_y,',~',var_z,80
002549 2C7E 03 80 
00254D 53455426 203E 02    B  1012    				db 'SET& >',var_y,',~',var_z,80
002554 2C7E 03 80 
                           B  1013    
                           B  1014    
                           B  1015    ;---- ED - Prefixed op-codes-------------------
                           B  1016    
002558 494E3020 7E 02      B  1017    ed_x0_z0_yn6	db 'IN0 ~',var_y,',(^',')'+80h
00255E 2C285EA9 
002562 494E3020 285EA9     B  1018    ed_x0_z0_y6		db 'IN0 (^',')'+80h	
                           B  1019    
002569 4F555430 20285E29   B  1020    ed_x0_z1		db 'OUT0 (^),~',var_y,80h		002571 2C7E 02 80 
002575 4C442620 49592C28   B  1021    				db 'LD& IY,(_',')'+80h			00257D 5FA9 
                           B  1022    
00257F 4C454126 203C 04    B  1023    ed_x0_z2		db 'LEA& <',var_p,',IX/',80h	002586 2C49582F 80 
00258B 4C454126 207D 04    B  1024    ed_x0_z3		db 'LEA& }',var_p,',IY/',80h
002592 2C49592F 80 
002597 54535426 20412C7E   B  1025    ed_x0_z4		db 'TST& A,~',var_y,80h
00259F 02 80 
                           B  1026    
0025A1 4C442620 285F292C   B  1027    ed_x0_z6		db 'LD& (_),}',var_p,80h
0025A9 7D 04 80 
                           B  1028    
0025AC 4C442620 3C 04      B  1029    ed_x0_z7		db 'LD& <',var_p,',(_',')'+80h	0025B2 2C285FA9 
0025B6 4C442620 285F292C   B  1030    				db 'LD& (_),<',var_p,80h		0025BE 3C 04 80 
                           B  1031    
0025C1 494E207E 02         B  1032    ed_x1_z0_yn6	db 'IN ~',var_y,',(BC',')'+80h
0025C6 2C284243 A9 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  88


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0025CB 494E2028 43A9       B  1033    ed_x1_z0_y6		db 'IN (C',')'+80h
                           B  1034    
0025D1 4F555420 28424329   B  1035    ed_x1_z1_yn6	db 'OUT (BC),~',var_y,80h
0025D9 2C7E 02 80 
0025DD 4F555420 2843292C   B  1036    ed_x1_z1_y6		db 'OUT (C),','0'+80h
0025E5 B0 
                           B  1037    
0025E6 53424326 20484C2C   B  1038    ed_x1_z2		db 'SBC& HL,@',var_p,80h		0025EE 40 04 80 
0025F1 41444326 20484C2C   B  1039    				db 'ADC& HL,@',var_p,80h		0025F9 40 04 80 
                           B  1040    
0025FC 4C442620 2821292C   B  1041    ed_x1_z3		db 'LD& (!),@',var_p,80h		002604 40 04 80 
002607 4C442620 40 04      B  1042    				db 'LD& @',var_p,',(!',')'+80h	00260D 2C2821A9 
                           B  1043    
002611 4E45C7              B  1044    ed_x1_z4		db 'NE','G'+80h				;y=
002614 4D4C5420 42C3       B  1045    				db 'MLT B','C'+80h			;y=
00261A 4C454126 2049582C   B  1046    				db 'LEA& IX,IY/',80h			002622 49592F80 
002626 4D4C5420 44C5       B  1047    				db 'MLT D','E'+80h			;y=
00262C 54535426 20412C5E   B  1048    				db 'TST& A,^',80h			;y=
002634 80 
002635 4D4C5420 48CC       B  1049    				db 'MLT H','L'+80h			;y=
00263B 54535449 4F205E80   B  1050    				db 'TSTIO ^',80h			;y=
002643 4D4C5420 53D0       B  1051    				db 'MLT S','P'+80h 			;y=
                           B  1052    
002649 5245544E 2680       B  1053    ed_x1_z5		db 'RETN&',80h				;y=
00264F 52455449 2680       B  1054    				db 'RETI&',80h				;y=
002655 4C454126 2049592C   B  1055    				db 'LEA& IY,IX/',80h		;y=
00265D 49582F80 
002661 BF                  B  1056    				db '?'+80h					;y=
002662 50454126 2049582F   B  1057    				db 'PEA& IX/',80h			;y=
00266A 80 
00266B 4C44204D 422CC1     B  1058    				db 'LD MB,','A'+80h			;y=
002672 BF                  B  1059    				db '?'+80h					;y=
002673 53544D49 D8         B  1060    				db 'STMI','X'+80h			;y=
                           B  1061    				
                           B  1062    	
002678 494D20B0            B  1063    ed_x1_z6		db 'IM ','0'+80h			;y=
00267C BF                  B  1064    				db '?'+80h					;y=
00267D 494D20B1            B  1065    				db 'IM ','1'+80h			;y=
002681 494D20B2            B  1066    				db 'IM ','2'+80h			;y=
002685 50454126 2049592F   B  1067    				db 'PEA& IY/',80h			;y=
00268D 80 
00268E 4C442041 2C4DC2     B  1068    				db 'LD A,','M','B'+80h		;y=
002695 534CD0              B  1069    				db 'SL','P'+80h				;y=
002698 52534D49 D8         B  1070    				db 'RSMI','X'+80h			;y=
                           B  1071    
00269D 4C442049 2CC1       B  1072    ed_x1_z7		db 'LD I,','A'+80h			;y=
0026A3 4C442052 2CC1       B  1073    				db 'LD R,','A'+80h			;y=
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  89


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0026A9 4C442041 2CC9       B  1074    				db 'LD A,','I'+80h			;y=
0026AF 4C442041 2CD2       B  1075    				db 'LD A,','R'+80h			;y=
0026B5 5252C4              B  1076    				db 'RR','D'+80h				;y=
0026B8 524CC4              B  1077    				db 'RL','D'+80h				;y=
0026BB 4E4FD0              B  1078    				db 'NO','P'+80h				;y=
0026BE 4E4FD0              B  1079    				db 'NO','P'+80h				;y=
                           B  1080    
                           B  1081    
0026C1 BFBFBFBF            B  1082    ed_x2_z0		db '?'+80h,'?'+80h,'?'+80h,'?'+
0026C5 4C444926 80         B  1083    				db 'LDI&',80h					0026CA 4C444426 80         B  1084    				db 'LDD&',80h					0026CF 4C444952 2680       B  1085    				db 'LDIR&',80h					0026D5 4C444452 2680       B  1086    				db 'LDDR&',80h					                           B  1087    
0026DB BFBFBFBF            B  1088    ed_x2_z1		db '?'+80h,'?'+80h,'?'+80h,'?'+
0026DF 43504926 80         B  1089    				db 'CPI&',80h					0026E4 43504426 80         B  1090    				db 'CPD&',80h					0026E9 43504952 2680       B  1091    				db 'CPIR&',80h					0026EF 43504452 2680       B  1092    				db 'CPDR&',80h					                           B  1093    
0026F5 494E494D 2680       B  1094    ed_x2_z2		db 'INIM&',80h		; y0	
0026FB 494E444D 2680       B  1095    				db 'INDM&',80h		; y1
002701 494E494D 522680     B  1096    				db 'INIMR&',80h		; y2
002708 494E444D 522680     B  1097    				db 'INDMR&',80h		; y3
00270F 494E4926 80         B  1098    				db 'INI&',80h		; y4
002714 494E4426 80         B  1099    				db 'IND&',80h		; y5
002719 494E4952 2680       B  1100    				db 'INIR&',80h		; y6
00271F 494E4452 2680       B  1101    				db 'INDR&',80h		; y7
                           B  1102    
                           B  1103    
002725 4F54494D 2680       B  1104    ed_x2_z3		db 'OTIM&',80h		; y0
00272B 4F54444D 2680       B  1105    				db 'OTDM&',80h		; y1
002731 4F54494D 522680     B  1106    				db 'OTIMR&',80h		; y2
002738 4F54444D 522680     B  1107    				db 'OTDMR&',80h		; y3
00273F 4F555449 2680       B  1108    				db 'OUTI&',80h		; y4
002745 4F555444 2680       B  1109    				db 'OUTD&',80h		; y5
00274B 4F544952 2680       B  1110    				db 'OTIR&',80h		; y6
002751 4F544452 2680       B  1111    				db 'OTDR&',80h		; y7
                           B  1112    
002757 494E4932 2680       B  1113    ed_x2_z4		db 'INI2&',80h		; y0
00275D 494E4432 2680       B  1114    				db 'IND2&',80h		; y1
002763 494E4932 522680     B  1115    				db 'INI2R&',80h		; y2
00276A 494E4432 522680     B  1116    				db 'IND2R&',80h		; y3
002771 4F555449 322680     B  1117    				db 'OUTI2&',80h		; y4
002778 4F555444 322680     B  1118    				db 'OUTD2&',80h		; y5
00277F 4F544932 522680     B  1119    				db 'OTI2R&',80h		; y6
002786 4F544432 522680     B  1120    				db 'OTD2R&',80h		; y7
                           B  1121    
                           B  1122    
00278D 494E4952 582680     B  1123    ed_x3_z2		db 'INIRX&',80h 	; y0
002794 494E4452 582680     B  1124    				db 'INDRX&',80h		; y1
                           B  1125    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  90


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
00279B 4F544952 582680     B  1126    ed_x3_z3		db 'OTIRX&',80h		; y0
0027A2 4F544452 582680     B  1127    				db 'OTDRX&',80h		; y1
                           B  1128    			
                           B  1129    
                           B  1130    ;--- DDCB or FDCB - Prefixed op-codes----------
                           B  1131    
                           B  1132    
0027A9 4C442620 7E 03      B  1133    ddcb_fdcb_zn6	db 'LD& ~',var_z, ',%',var_y,' 
0027AF 2C25 02 202480 
0027B5 42495426 203E 02    B  1134    				db 'BIT& >',var_y,',$',80h		0027BC 2C2480 
0027BF 4C442620 7E 03      B  1135    				db 'LD& ~',var_z,',RES& >',var_
0027C5 2C524553 26203E 02 
0027CD 2C2480 
0027D0 4C442620 7E 03      B  1136    				db 'LD& ~',var_z,',SET& >',var_
0027D6 2C534554 26203E 02 
0027DE 2C2480 
                           B  1137    
0027E1 25 02 202480        B  1138    ddcb_fdcb_z6	db '%',var_y,' $',80h			0027E6 42495426 203E 02    B  1139    				db 'BIT& >',var_y,',$',80h		0027ED 2C2480 
0027F0 52455326 203E 02    B  1140    				db 'RES& >',var_y,',$',80h		0027F7 2C2480 
0027FA 53455426 203E 02    B  1141    				db 'SET& >',var_y,',$',80h		002801 2C2480 
                           B  1142    
                           B  1143    ;----------------------------------------------
                           B  1144    
002804 3F3FBF              B  1145    bad_opcode	db '??','?'+80h
                           B  1146    
                           B  1147    ;----------------------------------------------
                           B  1148    
                           B  1149    
002807 C2C3C4C5 68806C80   B  1150    table_r		db 'B'+80h, 'C'+80h, 'D'+80h, 'E'+8
00280F 2480C1 
                           B  1151    
002812 C2C3C4C5 48804C80   B  1152    table_r2	db 'B'+80h, 'C'+80h, 'D'+80h, 'E'+8
00281A 2480C1 
                           B  1153    
00281D 42C344C5 DF53D0     B  1154    table_rp	db 'B','C'+80h, 'D','E'+80h, '_'+80
                           B  1155    
002824 42C344C5 5F8041C6   B  1156    table_rp2	db 'B','C'+80h, 'D','E'+80h, '_',+8
                           B  1157    	
00282C 4EDADA4E C3C350CF   B  1158    table_cc	db 'N','Z'+80h, 'Z'+80h, 'N','C'+80
002834 50C5D0CD 
                           B  1159    	
002838 41444426 2041AC41   B  1160    table_alu	db 'ADD& A',','+80h, 'ADC& A',','+8
002840 44432620 41AC5355 
002848 4226A053 42432041 
002850 26AC 
002852 414E4426 A0584F52   B  1161    			db 'AND&',' '+80h, 'XOR&',' '+80h, 
00285A 26A04F52 26A04350 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  91


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002862 26A0 
                           B  1162    			
002864 524C4326 80525243   B  1163    table_rot	db 'RLC&',80h, 'RRC&',80h, 'RL&',80
00286C 2680524C 26805252 
002874 2680 
002876 534C4126 80535241   B  1164    			db 'SLA&',80h, 'SRA&',80h, 'SLL&',8
00287E 2680534C 4C268053 
002886 524C2680 
                           B  1165    	
00288A 42C344C5 48CC49D8   B  1166    table_rp3	db 'B','C'+80h, 'D','E'+80h, 'H','L
                           B  1167    
002892 42C344C5 48CC49D9   B  1168    table_rp4	db 'B','C'+80h, 'D','E'+80h, 'H','L
                           B  1169    
00289A 42C344C5 48CC5F80   B  1170    table_rp5	db 'B','C'+80h, 'D','E'+80h, 'H','L
                           B  1171    
0028A2 30B0                B  1172    table_rst	db '0','0'+80h
0028A4 30B8                B  1173    			db '0','8'+80h
0028A6 31B0                B  1174    			db '1','0'+80h
0028A8 31B8                B  1175    			db '1','8'+80h
0028AA 32B0                B  1176    			db '2','0'+80h
0028AC 32B8                B  1177    			db '2','8'+80h	
0028AE 33B0                B  1178    			db '3','0'+80h
0028B0 33B8                B  1179    			db '3','8'+80h			
                           B  1180    
                           B  1181    ;----------------------------------------------
                           B  1182    
                           B  1183    ; "_" = HL, IX, IY depending on prefix 
                           B  1184    ; "|" = as above with IX/IY switched
                           B  1185    
                           B  1186    ; "h" = H, IXH, IYL depending on prefix
                           B  1187    ; "l" = L, IXL, IYL depending on prefix
                           B  1188    ; "$" = (HL), (IX+d), (IY+d) depending on prefi
                           B  1189    
0028B2 48CC49D8 49D9       B  1190    hl_subs		db 'H','L'+80h, 'I','X'+80h, 'I','Y
0028B8 48CC49D9 49D8       B  1191    inv_hl_subs	db 'H','L'+80h, 'I','Y'+80h, 'I','X
0028BE C84958C8 4959C8     B  1192    h_subs		db 'H'+80h, 'IX','H'+80h, 'IY','H'+
0028C5 CC4958CC 4959CC     B  1193    l_subs		db 'L'+80h, 'IX','L'+80h, 'IY','L'+
0028CC 28484CA9 2849582F   B  1194    ind_hl_subs	db '(HL',')'+80h, '(IX/',')'+80h, '
0028D4 A9284959 2FA9 
                           B  1195    
                           B  1196    ;----------------------------------------------
                           B  1197    
0028DA                     B  1198    adl_prefix_list
                           B  1199    
0028DA 2E5349D3 2E4C49D3   B  1200    			db '.SI','S'+80h, '.LI','S'+80h, '.
0028E2 2E5349CC 2E4C49CC 
                           B  1201    
                           B  1202    ;----------------------------------------------
                           B  1203    
0028EA 000000              B  1204    d_work_address	dw24 0
                           B  1205    
0028ED 2D2D00              B  1206    output_byte_txt	db "--",0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  92


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0028F0 2D00                B  1207    output_char_txt	db "-",0
                           B  1208    
0028F2 000001              B  1209    dis_addr		dw24 10000h
                           B  1210    
                           B  1211    ;----------------------------------------------
                           B  1212    
                           B     0    	include 'commands\del.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"del" delete file command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
                           B     5    
0028F5                     B     6    os_cmd_del
                           B     7    	
0028F5 CD 98 16 00         B     8    				call os_check_volume_format	
0028F9 C0                  B     9    				ret nz
                           B    10    			
0028FA CD 02 29 00         B    11    				call filename_or_bust
                           B    12    				
0028FE C3 00 17 00         B    13    				jp os_erase_file			;no
                           B    14    				
                           B    15    				
                           B    16    ;----------------------------------------------
                           B    17    			
002902                     B    18    filename_or_bust
                           B    19    			
002902 7E                  B    20    				ld a,(hl)					;is
002903 B7                  B    21    				or a
002904 C0                  B    22    				ret nz
002905 E1                  B    23    				pop hl						;ot
002906 C3 03 16 00         B    24    				jp os_no_fn_error			;so
                           B    25    
                           B    26    ;----------------------------------------------
                           B     0    	include 'commands\dir.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; FAT16 'dir' - show directory command. v0.03 -
                           B     3    ;----------------------------------------------
                           B     4    
00290A                     B     5    os_cmd_dir
                           B     6    
00290A CD 98 16 00         B     7    				call os_check_volume_format	
00290E C0                  B     8    				ret nz
                           B     9    				
00290F CD E9 29 00         B    10    				call div_line
002913 CD AA 52 00         B    11    				call fs_get_current_dir_name	002917 D8                  B    12    				ret c
002918 C0                  B    13    				ret nz
002919 CD 0D 0F 00         B    14    				call os_print_string
00291D CD 68 1A 00         B    15    				call fs_get_dir_cluster			002921 7A                  B    16    				ld a,d
002922 B3                  B    17    				or e
002923 20 08               B    18    				jr nz,dcmdnr
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  93


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\dir.asm
002925 CD 9D 4F 00         B    19    				call fs_get_volume_label
002929 CD 0D 0F 00         B    20    				call os_print_string
00292D CD B5 13 00         B    21    dcmdnr			call os_new_line
                           B    22    				
002931 CD E9 29 00         B    23    nrootdir		call div_line
002935 CD A2 4E 00         B    24    				call fs_goto_first_dir_entry
002939 D8                  B    25    				ret c
00293A 20 6F               B    26    				jr nz,os_dlr
00293C AF                  B    27    				xor a
00293D 32 B8 60 00         B    28    				ld (os_linecount),a
                           B    29    				
002941 CD B9 4E 00         B    30    os_dfllp		call fs_get_dir_entry			002945 D8                  B    31    				ret c
002946 20 63               B    32    				jr nz,os_dlr					002948 C5                  B    33    				push bc
002949 CD 0D 0F 00         B    34    				call os_print_string			00294D CD E0 13 00         B    35    				call os_get_cursor_position		002951 060E                B    36    				ld b,14
002953 CD C0 13 00         B    37    				call os_set_cursor_position	
002957 C1                  B    38    				pop bc
002958 CB40                B    39    				bit 0,b							00295A 28 06               B    40    				jr z,os_deif		
00295C 21 F6 29 00         B    41    				ld hl,dir_txt					002960 18 32               B    42    				jr os_dpl
                           B    43    				
002962 21 AD 55 00         B    44    os_deif			ld hl,os_hex_prefix_txt			002966 CD 0D 0F 00         B    45    				call os_print_string
00296A ED53 03 68 00       B    46    				ld (scratch_pad),de
00296F 79                  B    47    				ld a,c
002970 32 06 68 00         B    48    				ld (scratch_pad+3),a
002974 21 23 61 00         B    49    				ld hl,output_line
002978 E5                  B    50    				push hl
002979 ED5B 05 68 00       B    51    				ld de,(scratch_pad+2)
00297E CD 7D 10 00         B    52    				call hexword_to_ascii
002982 ED5B 03 68 00       B    53    				ld de,(scratch_pad)
002987 CD 7D 10 00         B    54    				call hexword_to_ascii
00298B 3600                B    55    				ld (hl),0
00298D E1                  B    56    				pop hl
00298E 0607                B    57    				ld b,7							002990 CD 35 10 00         B    58    				call os_skip_leading_ascii_zero
002994 CD 0D 0F 00         B    59    os_dpl			call os_print_string
002998 CD B5 13 00         B    60    				call os_new_line
                           B    61    				
00299C CD 46 4F 00         B    62    				call fs_goto_next_dir_entry
0029A0 20 09               B    63    				jr nz,os_dlr					0029A2 CD B3 11 00         B    64    				call os_count_lines
0029A6 3E79                B    65    				ld a,'y'
0029A8 B8                  B    66    				cp b
0029A9 28 96               B    67    				jr z,os_dfllp
                           B    68    				
0029AB CD E9 29 00         B    69    os_dlr			call div_line					0029AF CD D5 48 00         B    70    				call fs_calc_free_space
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  94


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\dir.asm
0029B3 D8                  B    71    				ret c	
0029B4 CD C2 29 00         B    72    				call show_hlde_decimal
0029B8 21 FC 29 00         B    73    				ld hl,kb_spare_txt
0029BC CD 0D 0F 00         B    74    				call os_print_string
0029C0 AF                  B    75    				xor a
0029C1 C9                  B    76    				ret
                           B    77    
                           B    78    ;----------------------------------------------
                           B    79    
0029C2                     B    80    show_hlde_decimal
                           B    81    
0029C2 CD 48 12 00         B    82    				call os_hex_to_decimal			0029C6 11070000            B    83    				ld de,7
0029CA 19                  B    84    				add hl,de						0029CB 43                  B    85    				ld b,e
0029CC 11 23 61 00         B    86    				ld de,output_line
0029D0 D5                  B    87    				push de
0029D1 7E                  B    88    dec2strlp		ld a,(hl)						0029D2 B7                  B    89    				or a
0029D3 20 03               B    90    				jr nz,foundlnz
0029D5 2B                  B    91    				dec hl
0029D6 10 F9               B    92    				djnz dec2strlp
0029D8 04                  B    93    foundlnz		inc b
0029D9 7E                  B    94    ndecchar		ld a,(hl)						0029DA C630                B    95    				add a,030h
0029DC 12                  B    96    				ld (de),a
0029DD 13                  B    97    				inc de
0029DE 2B                  B    98    				dec hl
0029DF 10 F8               B    99    				djnz ndecchar
0029E1 AF                  B   100    				xor a
0029E2 12                  B   101    				ld (de),a
0029E3 E1                  B   102    				pop hl							0029E4 CD 0D 0F 00         B   103    				call os_print_string
0029E8 C9                  B   104    				ret
                           B   105    
                           B   106    ;----------------------------------------------
                           B   107    			
0029E9 0E2D                B   108    div_line		ld c,'-'
0029EB 0613                B   109    				ld b,19
0029ED CD 50 1A 00         B   110    				call os_print_multiple_chars
0029F1 CD B5 13 00         B   111    				call os_new_line
0029F5 C9                  B   112    				ret
                           B   113    
                           B   114    ;----------------------------------------------
                           B   115    
0029F6 5B444952 5D00       B   116    dir_txt			db '[DIR]',0
                           B   117    
0029FC 204B4220 46726565   B   118    kb_spare_txt	db ' KB Free',11,0
002A04 0B00 
                           B   119    
                           B   120    ;----------------------------------------------
                           B   121    	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  95


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\f.asm
                           B     0    	include 'commands\f.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"f" fill memory command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
002A06                     B     5    os_cmd_f			
                           B     6    
002A06 CD 57 1C 00         B     7    				call get_start_and_end			                           B     8    			
002A0A CD 80 1C 00         B     9    				call hexword_or_bust			002A0E CA 23 16 00         B    10    				jp z,os_no_args_error			002A12 7B                  B    11    				ld a,e
002A13 32 CF 60 00         B    12    				ld (fillbyte),a
                           B    13    					
002A17 CD 45 1C 00         B    14    				call test_mem_range
002A1B DA 1F 16 00         B    15    				jp c,os_range_error				                           B    16    					
002A1F 3A CF 60 00         B    17    				ld a,(fillbyte)
002A23 77                  B    18    f_floop			ld (hl),a
002A24 EDA1                B    19    				cpi								002A26 EA 23 2A 00         B    20    				jp pe,f_floop
                           B    21    					
002A2A 3E20                B    22    				ld a,020h						002A2C B7                  B    23    				or a
002A2D C9                  B    24    				ret
                           B    25    
                           B    26    ;----------------------------------------------
                           B     0    	include 'commands\format.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"format" - format disk command. V0.04 - ADL mo
                           B     3    ;
                           B     4    ; The internal format routine is limited to for
                           B     5    ; No partition data is allowed.
                           B     6    ;----------------------------------------------
                           B     7    
                           B     8    
002A2E                     B     9    os_cmd_format
                           B    10    
002A2E 7E                  B    11    				ld a,(hl)						002A2F B7                  B    12    				or a
002A30 20 04               B    13    				jr nz,fgotargs					002A32 3E1F                B    14    				ld a,01fh						002A34 B7                  B    15    				or a
002A35 C9                  B    16    				ret
                           B    17    			
002A36                     B    18    fgotargs	
002A36 11 0B 54 00         B    19    				ld de,fs_sought_filename
002A3A CD F3 52 00         B    20    				call fs_clear_filename			002A3E E5                  B    21    				push hl							002A3F CD 96 0F 00         B    22    				call os_next_arg
002A43 20 04               B    23    				jr nz,fgotlab
002A45 21 76 2B 00         B    24    				ld hl,default_label
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  96


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\format.asm
002A49 060B                B    25    fgotlab			ld b,11
002A4B CD FB 11 00         B    26    				call os_copy_ascii_run
002A4F E1                  B    27    				pop hl
                           B    28    				
002A50 3A D7 5E 00         B    29    				ld a,(device_count)				002A54 B7                  B    30    				or a
002A55 28 25               B    31    				jr z,fno_dev
002A57 47                  B    32    				ld b,a
002A58 0E00                B    33    				ld c,0							002A5A DD21 87 5F 00       B    34    				ld ix,host_device_hardware_info
002A5F DD7E00              B    35    fdev_lp			ld a,(ix)						002A62 CD 3A 1A 00         B    36    				call locate_driver_base			002A66 D5                  B    37    				push de
002A67 FDE1                B    38    				pop iy
002A69 ED130C              B    39    				lea de,iy+0ch					002A6C C5                  B    40    				push bc
002A6D 0607                B    41    				ld b,7
002A6F CD DC 11 00         B    42    				call os_compare_strings
002A73 C1                  B    43    				pop bc
002A74 28 0A               B    44    				jr z,format_dev
002A76 ED3220              B    45    				lea ix,ix+20h					002A79 0C                  B    46    				inc c
002A7A 10 E3               B    47    				djnz fdev_lp
                           B    48    			
002A7C 3ED0                B    49    fno_dev			ld a,0d0h						002A7E B7                  B    50    				or a
002A7F C9                  B    51    				ret
                           B    52    				
                           B    53    			
                           B    54    				
                           B    55    ;----- FORMAT A DEVICE (USE ENTIRE CAPACITY (TR
                           B    56    			
                           B    57    			
002A80 C5                  B    58    format_dev		push bc
002A81 CD B5 13 00         B    59    				call os_new_line
002A85 21 47 2B 00         B    60    				ld hl,form_dev_warn1
002A89 CD EC 13 00         B    61    				call os_show_packed_text
002A8D C1                  B    62    				pop bc
                           B    63    				
002A8E 79                  B    64    				ld a,c							002A8F C630                B    65    				add a,030h
002A91 32 E3 5E 00         B    66    				ld (dev_txt+3),a
002A95 21 E0 5E 00         B    67    				ld hl,dev_txt	
002A99 CD 0D 0F 00         B    68    				call os_print_string			                           B    69    				
002A9D 79                  B    70    				ld a,c
002A9E CD AE 1A 00         B    71    				call dev_to_driver_lookup		002AA2 E5                  B    72    				push hl
002AA3 32 D6 5E 00         B    73    				ld (current_driver),a
002AA7 CD 21 1A 00         B    74    				call show_dev_driver_name		002AAB DDE1                B    75    				pop ix
002AAD DD1701              B    76    				ld de,(ix+1)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  97


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\format.asm
002AB0 FD21 CB 60 00       B    77    				ld iy,xrr_temp
002AB5 FD1F00              B    78    				ld (iy),de						002AB8 FDCB023E            B    79    				srl (iy+2)
002ABC FDCB011E            B    80    				rr (iy+1)
002AC0 FDCB001E            B    81    				rr (iy+0)						002AC4 FD1700              B    82    				ld de,(iy)						002AC7 CD C2 29 00         B    83    				call show_hlde_decimal			002ACB 21 81 2B 00         B    84    				ld hl,kb_txt
002ACF CD 0D 0F 00         B    85    				call os_print_string
002AD3 ED2205              B    86    				lea hl,ix+5		
002AD6 CD 0D 0F 00         B    87    				call os_print_string			002ADA 3E29                B    88    				ld a,')'
002ADC CD 4F 0F 00         B    89    				call os_print_char
                           B    90    				
002AE0 CD B5 13 00         B    91    				call os_new_line
002AE4 CD B5 13 00         B    92    				call os_new_line
002AE8 21 4E 2B 00         B    93    				ld hl,form_dev_warn2
002AEC CD 3E 2B 00         B    94    				call show_packed_text_and_cr
002AF0 CD 26 2B 00         B    95    				call confirm_yes
002AF4 20 28               B    96    				jr nz,ab_form
                           B    97    				
002AF6 21 58 2B 00         B    98    				ld hl,formatting_txt			002AFA CD 0D 0F 00         B    99    				call os_print_string
                           B   100    				
002AFE CD 58 46 00         B   101    				call fs_format_device_command
002B02 38 10               B   102    				jr c,form_err
002B04 B7                  B   103    				or a
002B05 20 0D               B   104    				jr nz,form_err
                           B   105    			
002B07 21 68 2B 00         B   106    				ld hl,ok_txt					002B0B CD 0D 0F 00         B   107    				call os_print_string
                           B   108    				
002B0F CD 1B 32 00         B   109    f_end			call os_cmd_remount				002B13 C9                  B   110    				ret
                           B   111    			
002B14                     B   112    form_err
002B14 21 6D 2B 00         B   113    				ld hl,ferr_txt
002B18 CD 0D 0F 00         B   114    				call os_print_string
002B1C 18 F1               B   115    				jr f_end
                           B   116    				
                           B   117    				
                           B   118    ;----------------------------------------------
                           B   119    				
                           B   120    				
002B1E CD B5 13 00         B   121    ab_form			call os_new_line
002B22 3E24                B   122    				ld a,024h						002B24 B7                  B   123    				or a
002B25 C9                  B   124    				ret
                           B   125    				
002B26                     B   126    confirm_yes
                           B   127    			
002B26 21 03 68 00         B   128    				ld hl,scratch_pad
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  98


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\format.asm
002B2A 1E03                B   129    				ld e,3
002B2C E5                  B   130    				push hl
002B2D CD E1 10 00         B   131    				call os_user_input
002B31 E1                  B   132    				pop hl
002B32 C0                  B   133    				ret nz
002B33 0603                B   134    				ld b,3
002B35 11 99 59 00         B   135    				ld de,yes_txt+1
002B39 CD DC 11 00         B   136    				call os_compare_strings
002B3D C9                  B   137    				ret
                           B   138    			
                           B   139    			
002B3E                     B   140    show_packed_text_and_cr
                           B   141    			
002B3E CD EC 13 00         B   142    				call os_show_packed_text
002B42 CD B5 13 00         B   143    				call os_new_line
002B46 C9                  B   144    				ret
                           B   145    			
                           B   146    ;----------------------------------------------
                           B   147    
002B47                     B   148    form_dev_warn1
                           B   149    
002B47 27283640 979700     B   150    				db 027h,028h,036h,040h,097h,097
                           B   151    
002B4E                     B   152    form_dev_warn2
                           B   153    
002B4E 52467E98 9EA2A3A5   B   154    				db 052h,046h,07eh,098h,09eh,0a2
002B56 9700 
                           B   155    
002B58                     B   156    formatting_txt
                           B   157    
002B58 0B0B466F 726D6174   B   158    				db 11,11,'Formatting.. ',0
002B60 74696E67 2E2E2000 
                           B   159    
002B68 4F4B0B0B 00         B   160    ok_txt			db 'OK',11,11,0
                           B   161    
002B6D 4552524F 52210B0B   B   162    ferr_txt		db 'ERROR!',11,11,0
002B75 00 
                           B   163    
002B76                     B   164    default_label	
                           B   165    
002B76 50524F53 455F4449   B   166    				db 'PROSE_DISK',0
002B7E 534B00 
                           B   167    
002B81 4B422028 00         B   168    kb_txt			db 'KB (',0
                           B   169    
                           B   170    ;----------------------------------------------
                           B   171    
       00006807            B   172    fs_drive_sel_cache		equ scratch_pad+4		                           B   173    
                           B   174    ;----------------------------------------------
                           B   175    
                           B     0    	include 'commands\h.asm'
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page:  99


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\h.asm
                           B     1    ;----------------------------------------------
                           B     2    ;"H" - Hunt in memory command V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
002B86 CD 57 1C 00         B     5    os_cmd_h		call get_start_and_end			002B8A 22 C8 60 00         B     6    				ld (find_hexstringascii),hl		                           B     7    
002B8E CD 45 1C 00         B     8    				call test_mem_range
002B92 DA 1F 16 00         B     9    				jp c,os_range_error				                           B    10    			
002B96 AF                  B    11    				xor a
002B97 32 33 2C 00         B    12    				ld (h_ascii_mode),a
                           B    13    				
002B9B 2A C8 60 00         B    14    				ld hl,(find_hexstringascii)
002B9F 0600                B    15    				ld b,0
002BA1 7E                  B    16    h_lfascii		ld a,(hl)						002BA2 B7                  B    17    				or a
002BA3 28 28               B    18    				jr z,h_no_text					002BA5 FE22                B    19    				cp 022h
002BA7 28 03               B    20    				jr z,h_found_quote
002BA9 23                  B    21    				inc hl
002BAA 18 F5               B    22    				jr h_lfascii
002BAC 23                  B    23    h_found_quote	inc hl
002BAD 22 C8 60 00         B    24    				ld (find_hexstringascii),hl
002BB1 7E                  B    25    h_fasc_len		ld a,(hl)
002BB2 B7                  B    26    				or a
002BB3 CA 23 16 00         B    27    				jp z,os_no_args_error			002BB7 FE22                B    28    				cp 022h
002BB9 28 04               B    29    				jr z,h_startas
002BBB 23                  B    30    				inc hl
002BBC 04                  B    31    				inc b
002BBD 18 F2               B    32    				jr h_fasc_len
                           B    33    
002BBF 78                  B    34    h_startas		ld a,b
002BC0 B7                  B    35    				or a
002BC1 CA 23 16 00         B    36    				jp z,os_no_args_error			002BC5 3E01                B    37    				ld a,1
002BC7 32 33 2C 00         B    38    				ld (h_ascii_mode),a
002BCB 18 16               B    39    				jr h_start_search
                           B    40    						
                           B    41    
002BCD 2A C8 60 00         B    42    h_no_text		ld hl,(find_hexstringascii)
002BD1 0600                B    43    				ld b,0							002BD3 CD 80 1C 00         B    44    cntfbyts		call hexword_or_bust			002BD7 28 04               B    45    				jr z,gthexstr
002BD9 04                  B    46    				inc b
002BDA 23                  B    47    				inc hl
002BDB 18 F6               B    48    				jr cntfbyts
002BDD 78                  B    49    gthexstr		ld a,b
002BDE B7                  B    50    				or a
002BDF CA 23 16 00         B    51    				jp z,os_no_args_error	
                           B    52    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 100


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\h.asm
                           B    53    
002BE3                     B    54    h_start_search
                           B    55    	
002BE3 DD2A BC 60 00       B    56    				ld ix,(cmdop_start_address)		002BE8 DDE5                B    57    fndloop1		push ix
002BEA FDE1                B    58    				pop iy
002BEC 48                  B    59    				ld c,b							002BED 2A C8 60 00         B    60    				ld hl,(find_hexstringascii)
002BF1 3A 33 2C 00         B    61    fcmloop			ld a,(h_ascii_mode)
002BF5 B7                  B    62    				or a
002BF6 28 08               B    63    				jr z,h_hex
002BF8 FD7E00              B    64    				ld a,(iy)
002BFB BE                  B    65    				cp (hl)
002BFC 20 23               B    66    				jr nz,nofmatch
002BFE 18 0A               B    67    				jr h_matched
002C00 CD 8C 10 00         B    68    h_hex			call ascii_to_hexword			002C04 FD7E00              B    69    				ld a,(iy)
002C07 BB                  B    70    				cp e
002C08 20 17               B    71    				jr nz,nofmatch
002C0A FD23                B    72    h_matched		inc iy
002C0C 23                  B    73    				inc hl
002C0D 0D                  B    74    				dec c
002C0E 20 E1               B    75    				jr nz,fcmloop
                           B    76    			
002C10 DDE5                B    77    				push ix							002C12 D1                  B    78    				pop de							002C13 DDE5                B    79    				push ix
002C15 C5                  B    80    				push bc
002C16 CD ED 12 00         B    81    				call os_show_hex_address
002C1A CD B5 13 00         B    82    				call os_new_line
002C1E C1                  B    83    				pop bc
002C1F DDE1                B    84    				pop ix
                           B    85    				
002C21 DDE5                B    86    nofmatch		push ix
002C23 DD23                B    87    				inc ix
002C25 D1                  B    88    				pop de
002C26 2A BF 60 00         B    89    				ld hl,(cmdop_end_address)
002C2A AF                  B    90    				xor a
002C2B ED52                B    91    				sbc hl,de
002C2D 20 B9               B    92    				jr nz,fndloop1
                           B    93    							
002C2F 3E20                B    94    				ld a,020h						002C31 B7                  B    95    				or a
002C32 C9                  B    96    				ret
                           B    97    			
                           B    98    ;----------------------------------------------
                           B    99    
002C33 00                  B   100    h_ascii_mode	db 0
                           B   101    
                           B   102    ;----------------------------------------------
                           B     0    	include 'commands\help.asm'
                           B     1    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 101


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\help.asm
                           B     2    ;"?" - List commands. V0.03 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
002C34                     B     5    os_cmd_help		
002C34 AF                  B     6    				xor a
002C35 32 B8 60 00         B     7    				ld (os_linecount),a
                           B     8    				
002C39 21 D9 5A 00         B     9    				ld hl,packed_help1
002C3D CD EC 13 00         B    10    show_page		call os_show_packed_text
002C41 E5                  B    11    				push hl
002C42 CD B5 13 00         B    12    				call os_new_line
002C46 E1                  B    13    				pop hl
002C47 23                  B    14    				inc hl						;sk
002C48 7E                  B    15    				ld a,(hl)
002C49 FEFF                B    16    				cp 0ffh						;la
002C4B 28 09               B    17    				jr z,last_help_page
                           B    18    				
002C4D CD B3 11 00         B    19    				call os_count_lines
002C51 78                  B    20    				ld a,b
002C52 FE79                B    21    				cp 'y'
002C54 28 E7               B    22    				jr z,show_page
                           B    23    
002C56                     B    24    last_help_page
002C56 AF                  B    25    				xor a
002C57 C9                  B    26    				ret	
                           B    27    	
                           B    28    ;----------------------------------------------
                           B    29    	
                           B     0    	include 'commands\gtr.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;">" for write ascii bytes to memory command. V
                           B     3    ;----------------------------------------------
                           B     4    
002C58                     B     5    os_cmd_gtr
                           B     6    
002C58 CD 80 1C 00         B     7    				call hexword_or_bust			002C5C CA 0B 16 00         B     8    				jp z,os_no_start_addr
002C60 23                  B     9    fndquot1		inc hl
002C61 7E                  B    10    				ld a,(hl)
002C62 B7                  B    11    				or a
002C63 CA 23 16 00         B    12    				jp z,os_no_args_error
002C67 FE22                B    13    				cp 022h							002C69 20 F5               B    14    				jr nz,fndquot1
002C6B 23                  B    15    				inc hl
002C6C E5                  B    16    				push hl
002C6D 7E                  B    17    fndquot2		ld a,(hl)
002C6E 23                  B    18    				inc hl
002C6F B7                  B    19    				or a
002C70 28 15               B    20    				jr z,noquot2
002C72 FE22                B    21    				cp 022h							002C74 20 F7               B    22    				jr nz,fndquot2
002C76 E1                  B    23    				pop hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 102


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\gtr.asm
                           B    24    					
002C77 7E                  B    25    wmbalp			ld a,(hl)						002C78 FE22                B    26    				cp 022h
002C7A 28 09               B    27    				jr z,os_gtrdn					002C7C FE7D                B    28    				cp 07dh
002C7E 28 01               B    29    				jr z,skpnasc
002C80 12                  B    30    				ld (de),a
002C81 13                  B    31    skpnasc			inc de
002C82 23                  B    32    				inc hl
002C83 18 F2               B    33    				jr wmbalp
002C85 AF                  B    34    os_gtrdn		xor a
002C86 C9                  B    35    				ret	
                           B    36    				
002C87 E1                  B    37    noquot2			pop hl							002C88 3E12                B    38    				ld a,012h
002C8A B7                  B    39    				or a
002C8B C9                  B    40    				ret
                           B    41    
                           B    42    ;----------------------------------------------
                           B     0    	include 'commands\lb.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"lb" - Load binary file command. V0.03 - ADL m
                           B     3    ;----------------------------------------------
                           B     4    
002C8C                     B     5    os_cmd_lb
                           B     6    	
002C8C CD 98 16 00         B     7    				call os_check_volume_format	
002C90 C0                  B     8    				ret nz
                           B     9    				
002C91 CD 02 29 00         B    10    				call filename_or_bust			002C95 CD 2B 16 00         B    11    				call os_find_file				002C99 C0                  B    12    				ret nz
002C9A ED53 06 68 00       B    13    				ld (filesize_cache),de			002C9F 2A 0E 60 00         B    14    				ld hl,(default_load_addr)
002CA3 22 03 68 00         B    15    				ld (data_load_addr),hl			                           B    16    				
002CA7 2A 75 61 00         B    17    				ld hl,(os_args_loc)
002CAB CD 96 0F 00         B    18    				call os_next_arg
                           B    19    
002CAF CD 80 1C 00         B    20    				call hexword_or_bust			002CB3 28 05               B    21    				jr z,os_lbnao					002CB5 ED53 03 68 00       B    22    				ld (data_load_addr),de
                           B    23    
002CBA ED5B 03 68 00       B    24    os_lbnao		ld de,(data_load_addr)			002CBF 2A 1B 60 00         B    25    				ld hl,(sysram_os_highest)		002CC3 2B                  B    26    				dec hl
002CC4 AF                  B    27    				xor a
002CC5 ED52                B    28    				sbc hl,de
002CC7 38 04               B    29    				jr c,os_lbprok
002CC9 3E26                B    30    				ld a,026h						002CCB B7                  B    31    				or a
002CCC C9                  B    32    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 103


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\lb.asm
                           B    33    				
002CCD 2A 03 68 00         B    34    os_lbprok		ld hl,(data_load_addr)			002CD1 CD 5A 16 00         B    35    				call os_read_bytes_from_file
002CD5 C0                  B    36    				ret nz
                           B    37    			
002CD6                     B    38    report_bytes_loaded
                           B    39    
002CD6 21 AD 55 00         B    40    				ld hl,os_hex_prefix_txt			002CDA CD 0D 0F 00         B    41    				call os_print_string			                           B    42    				
002CDE 11 08 68 00         B    43    				ld de,filesize_cache+2			002CE2 21 23 61 00         B    44    				ld hl,output_line
002CE6 0603                B    45    				ld b,3
002CE8 CD 4A 10 00         B    46    				call n_hexbytes_to_ascii
002CEC 3600                B    47    				ld (hl),0	
002CEE 0605                B    48    				ld b,5							002CF0 CD 23 13 00         B    49    				call os_print_output_line_skip_
                           B    50    				
002CF4 21 77 5C 00         B    51    				ld hl,bytes_loaded_msg			002CF8 CD EC 13 00         B    52    				call os_show_packed_text
                           B    53    				
002CFC 21 0C 56 00         B    54    				ld hl,to_txt					002D00 CD 0D 0F 00         B    55    				call os_print_string
                           B    56    
002D04 21 AD 55 00         B    57    				ld hl,os_hex_prefix_txt			002D08 CD 0D 0F 00         B    58    				call os_print_string	
                           B    59    
002D0C ED5B 03 68 00       B    60    				ld de,(data_load_addr)			002D11 CD ED 12 00         B    61    				call os_show_hex_address
                           B    62    
002D15 CD B5 13 00         B    63    				call os_new_line
002D19 AF                  B    64    				xor a
002D1A C9                  B    65    				ret
                           B    66    				
                           B    67    ;----------------------------------------------
                           B    68    
       00006803            B    69    data_load_addr	equ scratch_pad
       00006806            B    70    filesize_cache	equ scratch_pad+3
                           B    71    
                           B    72    ;----------------------------------------------
                           B     0    	include 'commands\m.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'m' - Show memory as hex bytes command. V0.02 
                           B     3    ;----------------------------------------------
                           B     4    
       00000010            B     5    bytes_per_line	equ 16
                           B     6    
002D1B CD 80 1C 00         B     7    os_cmd_m		call hexword_or_bust			002D1F 28 05               B     8    				jr z,m_no_hex					002D21 ED53 B9 60 00       B     9    				ld (mem_mon_addr),de
                           B    10    				
002D26 0610                B    11    m_no_hex		ld b,16							Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 104


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\m.asm
002D28 C5                  B    12    smbllp			push bc							                           B    13    				
002D29 21 62 2D 00         B    14    				ld hl,colon_cmd_prefix			002D2D CD 0D 0F 00         B    15    				call os_print_string
002D31 ED5B B9 60 00       B    16    				ld de,(mem_mon_addr)
002D36 CD ED 12 00         B    17    				call os_show_hex_address
                           B    18    
002D3A 21 23 61 00         B    19    				ld hl,output_line
002D3E 0610                B    20    				ld b,bytes_per_line				002D40 3620                B    21    mmbllp			ld (hl),' '
002D42 23                  B    22    				inc hl
002D43 1A                  B    23    				ld a,(de)	
002D44 CD 58 10 00         B    24    				call hexbyte_to_ascii
002D48 13                  B    25    				inc de
002D49 10 F5               B    26    				djnz mmbllp
                           B    27    
002D4B ED53 B9 60 00       B    28    				ld (mem_mon_addr),de
002D50 360B                B    29    				ld (hl),11
002D52 23                  B    30    				inc hl
002D53 3600                B    31    				ld (hl),0
002D55 21 23 61 00         B    32    				ld hl,output_line
002D59 CD 0D 0F 00         B    33    				call os_print_string
002D5D C1                  B    34    				pop bc
002D5E 10 C8               B    35    				djnz smbllp
                           B    36    				
002D60 AF                  B    37    				xor a
002D61 C9                  B    38    				ret
                           B    39    
                           B    40    ;----------------------------------------------
                           B    41    
002D62 3A2000              B    42    colon_cmd_prefix	db ': ',0
                           B    43    
                           B    44    ;----------------------------------------------
                           B     0    	include 'commands\md.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"md" - Make dir command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
002D65                     B     5    os_cmd_md
                           B     6    	
002D65 CD 98 16 00         B     7    				call os_check_volume_format	
002D69 C0                  B     8    				ret nz
                           B     9    			
002D6A CD 02 29 00         B    10    				call filename_or_bust
                           B    11    				
002D6E C3 D8 16 00         B    12    				jp os_make_dir			;no poi
                           B    13    				
                           B    14    
                           B    15    ;----------------------------------------------
                           B     0    	include 'commands\r.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'R' - show CPU register values saved on return
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 105


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\r.asm
                           B     3    ;----------------------------------------------
                           B     4    
002D72                     B     5    os_cmd_r	
002D72 DD21 27 60 00       B     6    				ld ix,store_a1					002D77 21 1C 2E 00         B     7    				ld hl,register_txt
002D7B CD 0D 0F 00         B     8    rcmdloop2		call os_print_string
002D7F 7E                  B     9    rcmdloop		ld a,(hl)
002D80 FE01                B    10    				cp 1
002D82 28 0B               B    11    				jr z,showbyte
002D84 FE02                B    12    				cp 2
002D86 28 15               B    13    				jr z,showword16
002D88 FE03                B    14    				cp 3
002D8A 28 2E               B    15    				jr z,showaddr
002D8C 23                  B    16    				inc hl
002D8D 18 F0               B    17    				jr rcmdloop
                           B    18    				
002D8F DD7E00              B    19    showbyte		ld a,(ix)
002D92 DD23                B    20    				inc ix
002D94 DDE5                B    21    				push ix
002D96 E5                  B    22    				push hl
002D97 CD 01 13 00         B    23    				call os_show_hex_byte
002D9B 18 2A               B    24    				jr showreg
                           B    25    
002D9D DD7E01              B    26    showword16		ld a,(ix+1)
002DA0 DDE5                B    27    				push ix
002DA2 E5                  B    28    				push hl
002DA3 CD 01 13 00         B    29    				call os_show_hex_byte
002DA7 E1                  B    30    				pop hl
002DA8 DDE1                B    31    				pop ix
002DAA DD7E00              B    32    				ld a,(ix)
002DAD DD23                B    33    				inc ix
002DAF DD23                B    34    				inc ix
002DB1 DDE5                B    35    				push ix
002DB3 E5                  B    36    				push hl
002DB4 CD 01 13 00         B    37    				call os_show_hex_byte
002DB8 18 0D               B    38    				jr showreg
                           B    39    
002DBA DD1700              B    40    showaddr		ld de,(ix)
002DBD ED3203              B    41    				lea ix,ix+3
002DC0 DDE5                B    42    				push ix
002DC2 E5                  B    43    				push hl
002DC3 CD ED 12 00         B    44    				call os_show_hex_address
002DC7 E1                  B    45    showreg			pop hl
002DC8 DDE1                B    46    				pop ix
002DCA 23                  B    47    				inc hl
002DCB 7E                  B    48    				ld a,(hl)
002DCC B7                  B    49    				or a
002DCD 20 AC               B    50    				jr nz,rcmdloop2
                           B    51    			
002DCF CD B5 13 00         B    52    				call os_new_line				002DD3 21 80 2E 00         B    53    				ld hl,flag_txt
002DD7 CD D5 12 00         B    54    				call os_copy_to_output_line
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 106


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\r.asm
002DDB 21 27 61 00         B    55    				ld hl,output_line+4
002DDF 01050000            B    56    				ld bc,5
002DE3 3A 4A 60 00         B    57    				ld a,(store_f)
002DE7 CB77                B    58    				bit 6,a							002DE9 28 02               B    59    				jr z,zfzero
002DEB 3631                B    60    				ld (hl),'1'
002DED 09                  B    61    zfzero			add hl,bc
002DEE CB47                B    62    				bit 0,a							002DF0 28 02               B    63    				jr z,cfzero
002DF2 3631                B    64    				ld (hl),'1'
002DF4 09                  B    65    cfzero			add hl,bc
002DF5 CB7F                B    66    				bit 7,a							002DF7 28 02               B    67    				jr z,sfzero
002DF9 364D                B    68    				ld (hl),'M'
002DFB 09                  B    69    sfzero			add hl,bc
002DFC CB57                B    70    				bit 2,a							002DFE 28 02               B    71    				jr z,pfzero
002E00 364F                B    72    				ld (hl),'O'
002E02 09                  B    73    pfzero			add hl,bc
002E03 23                  B    74    				inc hl
002E04 CB67                B    75    				bit 4,a							002E06 28 02               B    76    				jr z,iffzero
002E08 3631                B    77    				ld (hl),'1'
002E0A                     B    78    iffzero			
002E0A 01060000            B    79    				ld bc,6
002E0E 09                  B    80    				add hl,bc
002E0F 3A 4B 60 00         B    81    				ld a,(store_adl)
002E13 C630                B    82    				add a,30h
002E15 77                  B    83    				ld (hl),a
002E16 CD 18 13 00         B    84    				call os_print_output_line
002E1A AF                  B    85    				xor a
002E1B C9                  B    86    				ret
                           B    87    
                           B    88    ;----------------------------------------------
                           B    89    	
                           B    90    
002E1C 20413D00 01         B    91    register_txt		db ' A=',0,1
002E21 20204243 3D0003     B    92    					db '  BC=',0,3
002E28 20204445 3D0003     B    93    					db '  DE=',0,3
002E2F 2020484C 3D0003     B    94    					db '  HL=',0,3
                           B    95    					
002E36 0B                  B    96    					db 11
                           B    97    
002E37 27413D00 01         B    98    					db 027h,'A=',0,1
002E3C 20274243 3D0003     B    99    					db ' ',027h,'BC=',0,3
002E43 20274445 3D0003     B   100    					db ' ',027h,'DE=',0,3
002E4A 2027484C 3D0003     B   101    					db ' ',027h,'HL=',0,3
                           B   102    					
002E51 0B                  B   103    					db 11
                           B   104    
002E52 2049583D 0003       B   105    					db ' IX=',0,3
002E58 2049593D 0003       B   106    					db ' IY=',0,3
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 107


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\r.asm
                           B   107    					
002E5E 0B                  B   108    					db 11
                           B   109    					
002E5F 2050433D 0003       B   110    					db ' PC=',0,3
002E65 204C5350 3D0003     B   111    					db ' LSP=',0,3
002E6C 20535350 3D0002     B   112    					db ' SSP=',0,2
                           B   113    					
002E73 0B                  B   114    					db 11
                           B   115    					
002E74 204D4241 53453D00   B   116    					db ' MBASE=',0,1,0,0
002E7C 010000 
                           B   117    					
002E7F 0B                  B   118    					db 11
                           B   119    
002E80 205A463D 30204346   B   120    flag_txt			db ' ZF=0 CF=0 SF=P PV=E IF
002E88 3D302053 463D5020 
002E90 50563D45 20494646 
002E98 3D302041 444C3D30 
002EA0 0B0B00 
                           B   121    		
                           B   122    ;----------------------------------------------
                           B     0    	include 'commands\rd.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"RD" - Remove directory command. V0.02 - ADL m
                           B     3    ;----------------------------------------------
                           B     4    
002EA3                     B     5    os_cmd_rd
                           B     6    
002EA3 CD 98 16 00         B     7    				call os_check_volume_format	
002EA7 C0                  B     8    				ret nz
                           B     9    				
002EA8 CD 02 29 00         B    10    				call filename_or_bust
                           B    11    			
002EAC C3 42 17 00         B    12    				jp os_delete_dir		;no poi
                           B    13    
                           B    14    
                           B    15    ;----------------------------------------------
                           B     0    	include 'commands\rn.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"rn" - Rename command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
002EB0                     B     5    os_cmd_rn
                           B     6    	
002EB0 CD 98 16 00         B     7    				call os_check_volume_format	
002EB4 C0                  B     8    				ret nz
                           B     9    			
002EB5 CD 02 29 00         B    10    				call filename_or_bust
002EB9 E5                  B    11    				push hl
002EBA D1                  B    12    				pop de
002EBB CD 96 0F 00         B    13    				call os_next_arg
002EBF 7E                  B    14    				ld a,(hl)						Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 108


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rn.asm
002EC0 B7                  B    15    				or a
002EC1 20 04               B    16    				jr nz,rn_grfn
002EC3 3E1F                B    17    				ld a,01fh						002EC5 B7                  B    18    				or a
002EC6 C9                  B    19    				ret
                           B    20    
002EC7 EB                  B    21    rn_grfn			ex de,hl
002EC8 C3 2C 17 00         B    22    				jp os_rename_file				                           B    23    		
                           B    24    ;----------------------------------------------
                           B     0    	include 'commands\sb.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'SB' - Save binary file command. V0.02 - ADL m
                           B     3    ;----------------------------------------------
                           B     4    
002ECC                     B     5    os_cmd_sb
                           B     6    	
002ECC CD 98 16 00         B     7    				call os_check_volume_format		002ED0 C0                  B     8    				ret nz
                           B     9    					
002ED1 CD 02 29 00         B    10    				call filename_or_bust			002ED5 22 09 68 00         B    11    				ld (sb_save_name_addr),hl
                           B    12    				
002ED9 2A 75 61 00         B    13    				ld hl,(os_args_loc)
002EDD CD 96 0F 00         B    14    				call os_next_arg
002EE1 CD 80 1C 00         B    15    				call hexword_or_bust			002EE5 CA 0B 16 00         B    16    				jp z,os_no_start_addr			002EE9 ED53 03 68 00       B    17    				ld (sb_save_addr),de
                           B    18    				
002EEE CD 80 1C 00         B    19    				call hexword_or_bust			002EF2 CA 0F 16 00         B    20    				jp z,os_no_filesize
002EF6 ED53 06 68 00       B    21    				ld (sb_save_length),de
                           B    22    				
002EFB 2A 09 68 00         B    23    				ld hl,(sb_save_name_addr)		002EFF CD 6A 16 00         B    24    				call os_create_file
002F03 28 18               B    25    				jr z,os_sfapp
002F05 FEC9                B    26    				cp 0c9h							002F07 C0                  B    27    				ret nz			
002F08 21 A0 5A 00         B    28    				ld hl,save_append_msg			002F0C CD EC 13 00         B    29    				call os_show_packed_text
002F10 CD 75 43 00         B    30    				call os_wait_key_press
002F14 3E79                B    31    				ld a,'y'
002F16 B8                  B    32    				cp b
002F17 28 04               B    33    				jr z,os_sfapp
002F19 3E2C                B    34    				ld a,2ch						002F1B B7                  B    35    				or a
002F1C C9                  B    36    				ret
                           B    37    			
002F1D 2A 09 68 00         B    38    os_sfapp		ld hl,(sb_save_name_addr)		002F21 ED5B 03 68 00       B    39    				ld de,(sb_save_addr)			002F26 ED4B 06 68 00       B    40    				ld bc,(sb_save_length)			002F2B CD 80 16 00         B    41    				call os_write_bytes_to_file
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 109


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\sb.asm
002F2F C0                  B    42    				ret nz	
                           B    43    				
002F30 3E20                B    44    				ld a,020h						002F32 B7                  B    45    				or a
002F33 C9                  B    46    				ret
                           B    47    			
                           B    48    				
                           B    49    ;----------------------------------------------
                           B    50    
       00006803            B    51    sb_save_addr		equ scratch_pad
       00006806            B    52    sb_save_length		equ scratch_pad+3
       00006809            B    53    sb_save_name_addr	equ scratch_pad+6
                           B    54    
                           B    55    ;----------------------------------------------
                           B     0    	include 'commands\rx.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"RX" - Receive binary file via serial port com
                           B     3    ;----------------------------------------------
                           B     4    
       00000080            B     5    buffer_blocks			 equ 128				       00006903            B     6    buffer_addr				 equ os_max_addr		       00006803            B     7    rx_buffer_ptr			 equ scratch_pad
       00006806            B     8    serial_file_length_cache equ scratch_pad+3
                           B     9    
                           B    10    
002F34 7E                  B    11    os_cmd_rx		ld a,(hl)						002F35 B7                  B    12    				or a
002F36 CA 03 16 00         B    13    				jp z,os_no_fn_error
                           B    14    				
002F3A 3E3E                B    15    				ld a,'>'						002F3C BE                  B    16    				cp (hl)
002F3D C2 00 30 00         B    17    				jp nz,rx_nrs
002F41 23                  B    18    				inc hl
002F42 3E20                B    19    				ld a,' '
002F44 BE                  B    20    				cp (hl)
002F45 2B                  B    21    				dec hl
002F46 C2 00 30 00         B    22    				jp nz,rx_nrs
                           B    23    				
002F4A CD 98 16 00         B    24    				call os_check_volume_format		002F4E C0                  B    25    				ret nz		
                           B    26    				
002F4F 112A0000            B    27    				ld de,02ah						002F53 ED53 92 5E 00       B    28    				ld (serial_filename),de			002F58 CD 04 31 00         B    29    				call rx_get_header
002F5C C0                  B    30    				ret nz
002F5D CD 48 45 00         B    31    				call s_holdack					                           B    32    				
002F61 21 A6 5E 00         B    33    				ld hl,serial_fileheader			002F65 CD 6A 16 00         B    34    				call os_create_file
002F69 C2 DF 2F 00         B    35    				jp nz,rxwtd_fail				                           B    36    				
002F6D 21 C0 5A 00         B    37    				ld hl,ser_recsave_msg
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 110


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
002F71 CD EC 13 00         B    38    				call os_show_packed_text
                           B    39    				
002F75 2A B6 5E 00         B    40    rx_rnblk		ld hl,(serial_fileheader+16)	002F79 22 06 68 00         B    41    				ld (serial_file_length_cache),h
002F7D 21 03 69 00         B    42    				ld hl,buffer_addr
002F81 22 03 68 00         B    43    				ld (rx_buffer_ptr),hl
002F85 0680                B    44    				ld b,buffer_blocks				                           B    45    				
002F87 CD 30 45 00         B    46    rx_lnb			call s_goodack
002F8B CD DA 44 00         B    47    				call s_getblock
002F8F 28 0F               B    48    				jr z,rxtd_blok
                           B    49    
002F91 F5                  B    50    				push af							002F92 CD 41 45 00         B    51    				call s_badack					002F96 21 A6 5E 00         B    52    				ld hl,serial_fileheader			002F9A CD 00 17 00         B    53    				call os_erase_file
002F9E F1                  B    54    				pop af
002F9F C9                  B    55    				ret
                           B    56    
002FA0 CD 48 45 00         B    57    rxtd_blok		call s_holdack
                           B    58    				
002FA4 21 03 66 00         B    59    				ld hl,sector_buffer
002FA8 ED5B 03 68 00       B    60    				ld de,(rx_buffer_ptr)
002FAD 01000100            B    61    				ld bc,256
002FB1 EDB0                B    62    				ldir
002FB3 ED53 03 68 00       B    63    				ld (rx_buffer_ptr),de
                           B    64    				
002FB8 2A B6 5E 00         B    65    				ld hl,(serial_fileheader+16)
002FBC 11000100            B    66    				ld de,256
002FC0 AF                  B    67    				xor a
002FC1 ED52                B    68    				sbc hl,de
002FC3 22 B6 5E 00         B    69    				ld (serial_fileheader+16),hl
002FC7 28 1D               B    70    				jr z,rx_lbr
002FC9 38 1B               B    71    				jr c,rx_lbr
002FCB 10 BA               B    72    				djnz rx_lnb
                           B    73    
002FCD 01008000            B    74    				ld bc,buffer_blocks*256
002FD1 11 03 69 00         B    75    				ld de,buffer_addr
002FD5 21 A6 5E 00         B    76    				ld hl,serial_fileheader
002FD9 CD 80 16 00         B    77    				call os_write_bytes_to_file
002FDD 28 96               B    78    				jr z,rx_rnblk
002FDF F5                  B    79    rxwtd_fail		push af
002FE0 CD 41 45 00         B    80    				call s_badack
002FE4 F1                  B    81    				pop af
002FE5 C9                  B    82    				ret
                           B    83    				
002FE6 CD 30 45 00         B    84    rx_lbr			call s_goodack
002FEA ED4B 06 68 00       B    85    				ld bc,(serial_file_length_cache
002FEF 11 03 69 00         B    86    				ld de,buffer_addr
002FF3 21 A6 5E 00         B    87    				ld hl,serial_fileheader
002FF7 CD 80 16 00         B    88    				call os_write_bytes_to_file
002FFB C0                  B    89    				ret nz	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 111


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
                           B    90    				
002FFC 3E20                B    91    rxtd_done		ld a,020h						002FFE B7                  B    92    				or a
002FFF C9                  B    93    				ret
                           B    94    
                           B    95    				
                           B    96    
                           B    97    				
003000 3E21                B    98    rx_nrs			ld a,'!'						003002 BE                  B    99    				cp (hl)							003003 C2 AE 30 00         B   100    				jr nz,notrxe
003007 23                  B   101    				inc hl
003008 3E20                B   102    				ld a,' '
00300A BE                  B   103    				cp (hl)
00300B 2B                  B   104    				dec hl
00300C C2 AE 30 00         B   105    				jr nz,notrxe
003010 112A0000            B   106    				ld de,02ah						003014 ED53 92 5E 00       B   107    				ld (serial_filename),de			003019 CD 04 31 00         B   108    				call rx_get_header
00301D C0                  B   109    				ret nz
00301E 21 B6 5A 00         B   110    				ld hl,ser_rec2_msg
003022 CD EC 13 00         B   111    				call os_show_packed_text
003026 CD 30 45 00         B   112    				call s_goodack
00302A 3E01                B   113    				ld a,1							00302C 32 A5 5E 00         B   114    				ld (serial_timeout),a
003030 CD DA 44 00         B   115    				call s_getblock					003034 28 07               B   116    				jr z,rxe_fblok
003036 F5                  B   117    rxe_badblock	push af							003037 CD 41 45 00         B   118    				call s_badack					00303B F1                  B   119    				pop af
00303C C9                  B   120    				ret
                           B   121    	
00303D 2A 05 66 00         B   122    rxe_fblok		ld hl,(sector_buffer+2)
003041 1150524F            B   123    				ld de,04f5250h					003045 AF                  B   124    				xor a
003046 28 04               B   125    				jr z,rxe_ok
003048 3E1A                B   126    				ld a,1ah						00304A B7                  B   127    				or a
00304B C9                  B   128    				ret
00304C 2A 08 66 00         B   129    rxe_ok			ld hl,(sector_buffer+5)			003050 22 89 5E 00         B   130    				ld (serial_ez80_address),hl
003054 01000100            B   131    				ld bc,256						003058 DD21 A6 5E 00       B   132    				ld ix,serial_fileheader
00305D AF                  B   133    				xor a
00305E DDB612              B   134    				or (ix+18)						003061 20 0A               B   135    				jr nz,mtones
003063 DDB611              B   136    				or a,(ix+17)					003066 20 05               B   137    				jr nz,mtones
003068 0600                B   138    				ld b,0
00306A DD4E10              B   139    				ld c,(ix+16)					00306D 21 03 66 00         B   140    mtones			ld hl,sector_buffer				003071 ED5B 89 5E 00       B   141    				ld de,(serial_ez80_address)		Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 112


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
003076 EDB0                B   142    				ldir
                           B   143    				
003078 D5                  B   144    				push de
003079 CD 30 45 00         B   145    				call s_goodack		
00307D DDE1                B   146    				pop ix							00307F 2A B6 5E 00         B   147    				ld hl,(serial_fileheader+16)	003083 11000100            B   148    				ld de,256
003087 AF                  B   149    				xor a
003088 ED52                B   150    				sbc hl,de						00308A 28 18               B   151    				jr z,rxe_done
00308C 38 16               B   152    				jr c,rxe_done
00308E EB                  B   153    				ex de,hl
00308F ED53 B6 5E 00       B   154    				ld (serial_fileheader+16),de	003094 DD2A 89 5E 00       B   155    				ld ix,(serial_ez80_address)
003099 01000100            B   156    				ld bc,256
00309D DD09                B   157    				add ix,bc
00309F CD 98 44 00         B   158    				call s_gbloop					0030A3 C0                  B   159    				ret nz
0030A4 E1                  B   160    rxe_done		pop hl							0030A5 CD F5 3C 00         B   161    				call enable_nmi					0030A9 2A 89 5E 00         B   162    				ld hl,(serial_ez80_address)
0030AD E9                  B   163    				jp (hl)							                           B   164    				
                           B   165    				
                           B   166    
0030AE CD 4B 31 00         B   167    notrxe			call clear_serial_filename
                           B   168    				
0030B2 0610                B   169    				ld b,16							0030B4 11 92 5E 00         B   170    				ld de,serial_filename
0030B8 CD FB 11 00         B   171    				call os_copy_ascii_run			0030BC 79                  B   172    				ld a,c
0030BD 32 A4 5E 00         B   173    				ld (serial_fn_length),a
0030C1 CD A2 0F 00         B   174    				call os_scan_for_space
                           B   175    				
0030C5 CD 80 1C 00         B   176    				call hexword_or_bust			0030C9 CA 0B 16 00         B   177    				jp z,os_no_start_addr			0030CD ED53 03 68 00       B   178    				ld (data_load_addr),de			0030D2 2A 1B 60 00         B   179    				ld hl,(sysram_os_highest)		0030D6 2B                  B   180    				dec hl
0030D7 AF                  B   181    				xor a
0030D8 ED52                B   182    				sbc hl,de
0030DA 38 04               B   183    				jr c,os_prok
0030DC 3E26                B   184    				ld a,026h						0030DE B7                  B   185    				or a
0030DF C9                  B   186    				ret
                           B   187    
0030E0 CD 04 31 00         B   188    os_prok			call rx_get_header
0030E4 C0                  B   189    				ret nz
                           B   190    
0030E5 21 B6 5A 00         B   191    				ld hl,ser_rec2_msg
0030E9 CD EC 13 00         B   192    				call os_show_packed_text
                           B   193    	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 113


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
0030ED 2A 03 68 00         B   194    				ld hl,(data_load_addr)			0030F1 CD 86 44 00         B   195    				call serial_receive_file
0030F5 C0                  B   196    				ret nz							                           B   197    
0030F6 ED5B B6 5E 00       B   198    				ld de,(serial_fileheader+16)	0030FB ED53 06 68 00       B   199    				ld (filesize_cache),de
003100 C3 D6 2C 00         B   200    				jp report_bytes_loaded			                           B   201    				
                           B   202    ;----------------------------------------------
                           B   203    
003104                     B   204    rx_get_header
003104 21 B2 5A 00         B   205    				ld hl,ser_rec_msg
003108 CD EC 13 00         B   206    				call os_show_packed_text
                           B   207    				
00310C 3E00                B   208    				ld a,0
00310E 32 C7 5E 00         B   209    				ld (anim_wait_count),a			003112 3A C7 5E 00         B   210    get_hdr_loop	ld a,(anim_wait_count)
003116 3C                  B   211    				inc a
003117 47                  B   212    				ld b,a
003118 FE06                B   213    				cp 6
00311A 20 07               B   214    				jr nz,notsix
00311C 0E20                B   215    				ld c,' '
00311E 0605                B   216    				ld b,5
003120 AF                  B   217    				xor a
003121 18 02               B   218    				jr mcharset
003123 0E2E                B   219    notsix			ld c,'.'
003125 32 C7 5E 00         B   220    mcharset		ld (anim_wait_count),a
003129 CD 50 1A 00         B   221    				call os_print_multiple_chars
00312D CD 56 0F 00         B   222    				call home_cursor
                           B   223    				
003131 21 92 5E 00         B   224    				ld hl,serial_filename			003135 3E01                B   225    				ld a,1							003137 CD EB 43 00         B   226    				call serial_get_header
00313B C8                  B   227    				ret z
00313C FE83                B   228    				cp 083h							00313E C0                  B   229    				ret nz
00313F CD D0 43 00         B   230    				call os_get_key_press
003143 FE76                B   231    				cp 076h
003145 20 CB               B   232    				jr nz,get_hdr_loop
003147 3E80                B   233    				ld a,080h						003149 B7                  B   234    notsto			or a
00314A C9                  B   235    				ret								                           B   236    							
                           B   237    
                           B   238    ;----------------------------------------------
                           B   239    
00314B                     B   240    clear_serial_filename
                           B   241    
00314B E5                  B   242    				push hl							00314C 21 92 5E 00         B   243    				ld hl,serial_filename
003150 01100000            B   244    				ld bc,16
003154 AF                  B   245    				xor a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 114


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
003155 CD 79 15 00         B   246    				call os_bchl_memfill
003159 E1                  B   247    				pop hl
00315A C9                  B   248    				ret
                           B   249    
                           B   250    ;----------------------------------------------
                           B     0    	include 'commands\tx.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'TX' - Transmit binary file via serial port co
                           B     3    ;----------------------------------------------
                           B     4    
00315B 7E                  B     5    os_cmd_tx		ld a,(hl)						00315C B7                  B     6    				or a
00315D CA 03 16 00         B     7    				jp z,os_no_fn_error
                           B     8    			
003161 E5                  B     9    				push hl							003162 21 92 5E 00         B    10    				ld hl,serial_filename
003166 01100000            B    11    				ld bc,16
00316A AF                  B    12    				xor a
00316B CD 79 15 00         B    13    				call os_bchl_memfill
00316F E1                  B    14    				pop hl
                           B    15    			
003170 0610                B    16    				ld b,16							003172 11 92 5E 00         B    17    				ld de,serial_filename
003176 CD FB 11 00         B    18    				call os_copy_ascii_run			00317A 79                  B    19    				ld a,c
00317B 32 A4 5E 00         B    20    				ld (serial_fn_length),a
00317F CD A2 0F 00         B    21    				call os_scan_for_space
                           B    22    							
003183 CD 80 1C 00         B    23    				call hexword_or_bust			003187 CA 0B 16 00         B    24    				jp z,os_no_start_addr			00318B ED53 89 5E 00       B    25    				ld (serial_ez80_address),de
                           B    26    			
003190 CD 80 1C 00         B    27    				call hexword_or_bust			003194 CA 0F 16 00         B    28    				jp z,os_no_filesize
003198 ED53 8C 5E 00       B    29    				ld (serial_file_length),de
00319D 21000000            B    30    				ld hl,0
0031A1 3E07                B    31    				ld a,07h						0031A3 B7                  B    32    				or a
0031A4 ED5A                B    33    				adc hl,de
0031A6 28 1D               B    34    				jr z,s_error
                           B    35    				
0031A8 21 BB 5A 00         B    36    				ld hl,ser_send_msg
0031AC CD EC 13 00         B    37    				call os_show_packed_text
                           B    38    			
0031B0 ED5B 8C 5E 00       B    39    				ld de,(serial_file_length)
0031B5 21 92 5E 00         B    40    				ld hl,serial_filename			0031B9 DD2A 89 5E 00       B    41    				ld ix,(serial_ez80_address)
0031BE CD 4F 45 00         B    42    				call serial_send_file
0031C2 C0                  B    43    				ret nz			
                           B    44    			
0031C3 3E20                B    45    				ld a,020h						0031C5 B7                  B    46    s_error			or a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 115


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\tx.asm
0031C6 C9                  B    47    				ret
                           B    48    				
                           B    49    			
                           B    50    ;----------------------------------------------
                           B     0    	include 'commands\t.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'T' - Show memory as ascii text command. V0.02
                           B     3    ;----------------------------------------------
                           B     4    
0031C7 CD 80 1C 00         B     5    os_cmd_t		call hexword_or_bust			0031CB 28 05               B     6    				jr z,t_no_hex					0031CD ED53 B9 60 00       B     7    				ld (mem_mon_addr),de
                           B     8    							
0031D2 0610                B     9    t_no_hex		ld b,16
0031D4 C5                  B    10    smaalp			push bc
                           B    11    				
0031D5 21 18 32 00         B    12    				ld hl,gtr_cmd_prefix			0031D9 CD 0D 0F 00         B    13    				call os_print_string
0031DD ED5B B9 60 00       B    14    				ld de,(mem_mon_addr)
0031E2 CD ED 12 00         B    15    				call os_show_hex_address
                           B    16    
0031E6 21 23 61 00         B    17    				ld hl,output_line
0031EA 3620                B    18    				ld (hl),' '
0031EC 23                  B    19    				inc hl
0031ED 3622                B    20    				ld (hl),022h
0031EF 0610                B    21    				ld b,16
0031F1 23                  B    22    mabllp			inc hl
0031F2 1A                  B    23    				ld a,(de)	
0031F3 FE20                B    24    				cp 020h
0031F5 38 04               B    25    				jr c,chchar
0031F7 FE7F                B    26    				cp 07fh
0031F9 38 02               B    27    				jr c,nchchar
0031FB 3E7C                B    28    chchar			ld a,07ch
0031FD 77                  B    29    nchchar			ld (hl),a
0031FE 13                  B    30    				inc de
0031FF 10 F0               B    31    				djnz mabllp
                           B    32    
003201 ED53 B9 60 00       B    33    				ld (mem_mon_addr),de
003206 23                  B    34    				inc hl
003207 3622                B    35    				ld (hl),022h
003209 23                  B    36    				inc hl
00320A 360B                B    37    				ld (hl),11
00320C 23                  B    38    				inc hl
00320D 3600                B    39    				ld (hl),0
00320F CD 18 13 00         B    40    				call os_print_output_line
003213 C1                  B    41    				pop bc
003214 10 BE               B    42    				djnz smaalp
003216 AF                  B    43    				xor a
003217 C9                  B    44    				ret
                           B    45    	
                           B    46    ;----------------------------------------------
                           B    47    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 116


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\t.asm
003218 3E2000              B    48    gtr_cmd_prefix	db '> ',0
                           B    49    
                           B    50    ;----------------------------------------------
                           B     0    	include 'commands\mount.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; "MOUNT" = Re-mount and show drives v0.02 - AD
                           B     3    ;----------------------------------------------
                           B     4    
00321B                     B     5    os_cmd_remount
                           B     6    
00321B 3E00                B     7    				ld a,0							00321D CD 35 18 00         B     8    				call os_mount_volumes
003221 CD B5 13 00         B     9    				call os_new_line
003225 AF                  B    10    				xor a
003226 C9                  B    11    				ret
                           B    12    
                           B    13    ;----------------------------------------------
                           B    14    	
                           B     0    	include 'commands\vers.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; "Vers" = Show OS / Hardware version v0.02 - A
                           B     3    ;----------------------------------------------
                           B     4    
003227                     B     5    os_cmd_vers
                           B     6    
003227 21 AF 55 00         B     7    				ld hl,os_version_txt
00322B CD 0D 0F 00         B     8    				call os_print_string
                           B     9    			
00322F CD 1F 40 00         B    10    				call hwsc_get_version
003233 D5                  B    11    				push de
003234 EB                  B    12    				ex de,hl
003235 CD 0C 13 00         B    13    				call os_show_hex_word
                           B    14    				
003239 21 D2 55 00         B    15    				ld hl,fwd_slash_txt
00323D CD 0D 0F 00         B    16    				call os_print_string
                           B    17    				
003241 21 BD 55 00         B    18    				ld hl,hw_version_txt
003245 CD 0D 0F 00         B    19    				call os_print_string
003249 D1                  B    20    				pop de
00324A CD 0C 13 00         B    21    				call os_show_hex_word
                           B    22    				
00324E CD B5 13 00         B    23    				call os_new_line
003252 CD B5 13 00         B    24    				call os_new_line	
003256 AF                  B    25    				xor a
003257 C9                  B    26    				ret
                           B    27    	
                           B    28    ;----------------------------------------------
                           B    29    	
                           B     0    	include 'commands\exec.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"exec" - execute script V0.04 - ADL mode
                           B     3    ;
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 117


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\exec.asm
                           B     4    ; Notes: Changing drives within a script not su
                           B     5    ;        Scripts cannot launch scripts as this 
                           B     6    ;		 Abort with CRTL + C
                           B     7    ;
                           B     8    ;        Supports: IF [CONDITION] jumps. Syntax
                           B     9    ;        
                           B    10    ;          "IF ENVAR = STRING LABEL" (or IF ENV
                           B    11    ;          (goto LABEL must be declared as [LAB
                           B    12    ;----------------------------------------------
                           B    13    
       00000010            B    14    max_if_chars		equ 16 ;(string size for en
                           B    15    
       00000000            B    16    scr_in_script		equ 0
       00000001            B    17    scr_find_new_line	equ 1
       00000002            B    18    scr_if_condition	equ 2
       00000003            B    19    scr_end				equ 3
                           B    20    
                           B    21    
003258 21 8A 61 00         B    22    os_cmd_exec		ld hl,script_flags				00325C CB46                B    23    				bit scr_in_script,(hl)
00325E C2 EF 33 00         B    24    				jp nz,script_error
003262 E5                  B    25    				push hl
003263 CD 6B 32 00         B    26    				call do_script
003267 E1                  B    27    				pop hl
003268 CB86                B    28    				res scr_in_script,(hl)
00326A C9                  B    29    				ret
                           B    30    				
00326B CBC6                B    31    do_script		set scr_in_script,(hl)
                           B    32    			
00326D 2A 75 61 00         B    33    				ld hl,(os_args_loc)				003271 11 A2 60 00         B    34    				ld de,script_fn					003275 060D                B    35    				ld b,13
003277 CD FB 11 00         B    36    				call os_copy_ascii_run
00327B AF                  B    37    				xor a
00327C 12                  B    38    				ld (de),a
                           B    39    				
00327D CD 68 1A 00         B    40    				call fs_get_dir_cluster			003281 ED53 81 61 00       B    41    				ld (script_dir),de
                           B    42    				
003286 CD 98 16 00         B    43    				call os_check_volume_format		00328A C0                  B    44    				ret nz
                           B    45    				
00328B CD BB 33 00         B    46    				call new_script
                           B    47    
                           B    48    ;----------------------------------------------
                           B    49    
                           B    50    
00328F 3A E7 61 00         B    51    scrp_loop		ld a,(key_mod_flags)			003293 E602                B    52    				and 2
003295 28 12               B    53    				jr z,no_quit_script	
003297 CD D0 43 00         B    54    				call os_get_key_press
00329B FE21                B    55    				cp 021h							Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 118


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\exec.asm
00329D 20 0A               B    56    				jr nz,no_quit_script
                           B    57    
00329F 21 CF 5A 00         B    58    				ld hl,script_aborted_msg
0032A3 CD EC 13 00         B    59    				call os_show_packed_text
0032A7 AF                  B    60    				xor a							0032A8 C9                  B    61    				ret
                           B    62    					
                           B    63    
0032A9 CD CE 33 00         B    64    no_quit_script	call open_script				0032AD C0                  B    65    				ret nz
0032AE CD F9 33 00         B    66    				call read_script				0032B2 C0                  B    67    				ret nz
0032B3 21 8A 61 00         B    68    				ld hl,script_flags				0032B7 CB5E                B    69    				bit scr_end,(hl)
0032B9 28 02               B    70    				jr z,scr_to_do
0032BB AF                  B    71    scr_done		xor a
0032BC C9                  B    72    				ret
                           B    73    				
0032BD 21 D1 60 00         B    74    scr_to_do		ld hl,commandstring				0032C1 7E                  B    75    				ld a,(hl)
0032C2 FE5B                B    76    				cp '['
0032C4 28 1C               B    77    				jr z,exec_scr_next
                           B    78    
0032C6 11 17 56 00         B    79    				ld de,if_command_txt			0032CA 0603                B    80    				ld b,3
0032CC CD DC 11 00         B    81    				call os_compare_strings
0032D0 28 18               B    82    				jr z,do_exec_if
                           B    83    				
0032D2 11 1A 56 00         B    84    				ld de,end_command_txt			0032D6 0604                B    85    				ld b,4
0032D8 CD DC 11 00         B    86    				call os_compare_strings
0032DC 28 DD               B    87    				jr z,scr_done
                           B    88    			
0032DE CD 32 0C 00         B    89    				call os_parse_cmd_chk_ps		                           B    90    				
0032E2 21 8A 61 00         B    91    exec_scr_next	ld hl,script_flags
0032E6 CBCE                B    92    				set scr_find_new_line,(hl)
0032E8 18 A5               B    93    				jr scrp_loop
                           B    94    	
                           B    95    ;----------------------------------------------
                           B    96    
                           B    97    ; Handle "IF" instructions in the format:
                           B    98    
                           B    99    ; "IF ENVAR = VALUE LABLE"
                           B   100    ; "IF ENVAR <> VALUE LABLE"
                           B   101    ;  (LABEL must be declared at start of a script
                           B   102    ;  square brackets ([label]) with no other data
                           B   103    
0032EA 21 D3 60 00         B   104    do_exec_if		ld hl,commandstring+2			0032EE CD AB 0F 00         B   105    				call os_scan_for_non_space
0032F2 CA EF 33 00         B   106    				jr z,script_error				0032F6 11 8B 61 00         B   107    				ld de,if_name_txt
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 119


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\exec.asm
0032FA 0610                B   108    				ld b,max_if_chars
0032FC CD FB 11 00         B   109    				call os_copy_ascii_run			003300 AF                  B   110    				xor a
003301 12                  B   111    				ld (de),a
                           B   112    				
003302 CD AB 0F 00         B   113    				call os_scan_for_non_space		003306 CA EF 33 00         B   114    				jr z,script_error
00330A DD21 8A 61 00       B   115    				ld ix,script_flags
00330F DDCB0096            B   116    				res scr_if_condition,(ix)
003313 7E                  B   117    				ld a,(hl)
003314 FE3D                B   118    				cp '='
003316 28 04               B   119    				jr z,if_equals
003318 DDCB00D6            B   120    				set scr_if_condition,(ix)		                           B   121    
00331C CD A2 0F 00         B   122    if_equals		call os_scan_for_space			003320 CD AB 0F 00         B   123    				call os_scan_for_non_space		003324 CA EF 33 00         B   124    				jr z,script_error
003328 11 9D 61 00         B   125    				ld de,if_value_txt				00332C 0610                B   126    				ld b,max_if_chars
00332E CD FB 11 00         B   127    				call os_copy_ascii_run
003332 AF                  B   128    				xor a
003333 12                  B   129    				ld (de),a
                           B   130    				
003334 CD AB 0F 00         B   131    				call os_scan_for_non_space
003338 CA EF 33 00         B   132    				jr z,script_error
00333C 11 AF 61 00         B   133    				ld de,if_label_txt				003340 0610                B   134    				ld b,max_if_chars
003342 CD FB 11 00         B   135    				call os_copy_ascii_run			003346 AF                  B   136    				xor a
003347 12                  B   137    				ld (de),a						                           B   138    								
003348 21 8B 61 00         B   139    				ld hl,if_name_txt				00334C CD 2F 1B 00         B   140    				call os_get_envar				003350 C2 E2 32 00         B   141    				jp nz,exec_scr_next				                           B   142    								
003354 21 9D 61 00         B   143    				ld hl,if_value_txt
003358 DD21 8A 61 00       B   144    				ld ix,script_flags
00335D DDCB0056            B   145    				bit scr_if_condition,(ix)
003361 20 0A               B   146    				jr nz,if_cond_diff
003363 CD DC 11 00         B   147    				call os_compare_strings			003367 C2 E2 32 00         B   148    				jp nz,exec_scr_next				00336B 18 08               B   149    				jr if_cond_met
00336D CD DC 11 00         B   150    if_cond_diff	call os_compare_strings			003371 CA E2 32 00         B   151    				jp z,exec_scr_next				                           B   152    
003375 CD BB 33 00         B   153    if_cond_met		call new_script					                           B   154    
003379 CD CE 33 00         B   155    find_if_label	call open_script				00337D C0                  B   156    				ret nz
                           B   157    
00337E CD F9 33 00         B   158    				call read_script
003382 C0                  B   159    				ret nz
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 120


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\exec.asm
003383 21 8A 61 00         B   160    				ld hl,script_flags
003387 CB5E                B   161    				bit scr_end,(hl)
003389 C2 BB 32 00         B   162    				jp nz,scr_done
                           B   163    				
00338D 21 D1 60 00         B   164    				ld hl,commandstring				003391 7E                  B   165    				ld a,(hl)
003392 FE5B                B   166    				cp '['
003394 20 1D               B   167    				jr nz,not_a_label				                           B   168    				
003396 23                  B   169    if_find_csb		inc hl
003397 7E                  B   170    				ld a,(hl)
003398 B7                  B   171    				or a
003399 28 18               B   172    				jr z,not_a_label				00339B FE5D                B   173    				cp ']'							00339D 20 F7               B   174    				jr nz,if_find_csb
00339F 3600                B   175    				ld (hl),0						0033A1 21 D2 60 00         B   176    				ld hl,commandstring+1
0033A5 11 AF 61 00         B   177    				ld de,if_label_txt				0033A9 0610                B   178    				ld b,max_if_chars
0033AB CD DC 11 00         B   179    				call os_compare_strings
0033AF CA E2 32 00         B   180    				jp z,exec_scr_next				                           B   181    
0033B3 21 8A 61 00         B   182    not_a_label		ld hl,script_flags
0033B7 CBCE                B   183    				set scr_find_new_line,(hl)		0033B9 18 BE               B   184    				jr find_if_label
                           B   185    											
                           B   186    ;----------------------------------------------
                           B   187    
0033BB E5                  B   188    new_script		push hl
0033BC 21000000            B   189    				ld hl,0
0033C0 22 84 61 00         B   190    				ld (script_file_offset),hl		0033C4 21 8A 61 00         B   191    				ld hl,script_flags
0033C8 CB8E                B   192    				res scr_find_new_line,(hl)		0033CA CB9E                B   193    				res scr_end,(hl)
0033CC E1                  B   194    				pop hl
0033CD C9                  B   195    				ret
                           B   196    								
                           B   197    ;----------------------------------------------
                           B   198    
0033CE CD 68 1A 00         B   199    open_script		call fs_get_dir_cluster			0033D2 D5                  B   200    				push de
0033D3 ED5B 81 61 00       B   201    				ld de,(script_dir)				0033D8 CD 74 1A 00         B   202    				call fs_update_dir_cluster
                           B   203    				
0033DC 21 A2 60 00         B   204    				ld hl,script_fn					0033E0 CD 2B 16 00         B   205    				call os_find_file				0033E4 ED53 87 61 00       B   206    				ld (script_length),de			0033E9 D1                  B   207    				pop de
0033EA C0                  B   208    				ret nz
0033EB 79                  B   209    				ld a,c							0033EC B7                  B   210    				or a
0033ED 28 04               B   211    				jr z,scr_flok
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 121


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\exec.asm
                           B   212    				
0033EF 3E8C                B   213    script_error	ld a,08ch
0033F1 B7                  B   214    				or a
0033F2 C9                  B   215    				ret
                           B   216    				
0033F3 CD 74 1A 00         B   217    scr_flok		call fs_update_dir_cluster		0033F7 AF                  B   218    				xor a
0033F8 C9                  B   219    				ret
                           B   220    				
                           B   221    ;----------------------------------------------
                           B   222    
                           B   223    
0033F9 21 D1 60 00         B   224    read_script		ld hl,commandstring				0033FD 01500000            B   225    				ld bc,max_buffer_chars			003401 3E20                B   226    				ld a,32
003403 CD 79 15 00         B   227    				call os_bchl_memfill
                           B   228    				
003407 11500000            B   229    				ld de,max_buffer_chars			00340B CD 3C 16 00         B   230    				call os_set_load_length
                           B   231    				
00340F AF                  B   232    				xor a
003410 2A 87 61 00         B   233    				ld hl,(script_length)
003414 ED5B 84 61 00       B   234    				ld de,(script_file_offset)		003419 37                  B   235    				scf
00341A ED52                B   236    				sbc hl,de						00341C 30 08               B   237    				jr nc,not_eoscr					00341E 21 8A 61 00         B   238    				ld hl,script_flags
003422 CBDE                B   239    				set scr_end,(hl)				003424 AF                  B   240    				xor a
003425 C9                  B   241    				ret
003426 CD 44 16 00         B   242    not_eoscr		call os_set_file_pointer
                           B   243    
00342A 21 D1 60 00         B   244    				ld hl,commandstring				00342E CD 5A 16 00         B   245    				call os_read_bytes_from_file
003432 B7                  B   246    				or a			
003433 28 03               B   247    				jr z,scr_load_ok
003435 FECC                B   248    				cp 0cch							003437 C0                  B   249    				ret nz							                           B   250    
003438 21 8A 61 00         B   251    scr_load_ok		ld hl,script_flags
00343C CB4E                B   252    				bit scr_find_new_line,(hl)		00343E 20 17               B   253    				jr nz,scr_fnl					                           B   254    
003440 21 D1 60 00         B   255    				ld hl,commandstring				003444 0650                B   256    				ld b,max_buffer_chars
003446 7E                  B   257    scr_fcr			ld a,(hl)
003447 FE20                B   258    				cp 32
003449 38 05               B   259    				jr c,scr_gotclcr
00344B 23                  B   260    				inc hl
00344C 10 F8               B   261    				djnz scr_fcr
00344E AF                  B   262    				xor a
00344F C9                  B   263    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 122


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\exec.asm
003450 3620                B   264    scr_gotclcr		ld (hl),32						003452 23                  B   265    				inc hl
003453 10 FB               B   266    				djnz scr_gotclcr
003455 AF                  B   267    				xor a
003456 C9                  B   268    				ret
                           B   269    
003457 FD2A 84 61 00       B   270    scr_fnl			ld iy,(script_file_offset)
00345C 21 D1 60 00         B   271    				ld hl,commandstring	
003460 7E                  B   272    scr_find_cr		ld a,(hl)						003461 B7                  B   273    				or a
003462 20 07               B   274    				jr nz,scr_neocl					003464 FD22 84 61 00       B   275    scr_eocl		ld (script_file_offset),iy
003469 18 8E               B   276    				jr read_script				
00346B FE20                B   277    scr_neocl		cp 20h							00346D 38 05               B   278    				jr c,scr_got_cr
00346F 23                  B   279    				inc hl
003470 FD23                B   280    				inc iy
003472 18 EC               B   281    				jr scr_find_cr
                           B   282    				
003474 7E                  B   283    scr_got_cr		ld a,(hl)
003475 B7                  B   284    				or a							003476 28 EC               B   285    				jr z,scr_eocl					003478 FE20                B   286    				cp 20h
00347A 30 05               B   287    				jr nc,scr_got_ch				00347C 23                  B   288    				inc hl
00347D FD23                B   289    				inc iy
00347F 18 F3               B   290    				jr scr_got_cr
                           B   291    
003481 FD22 84 61 00       B   292    scr_got_ch		ld (script_file_offset),iy
003486 21 8A 61 00         B   293    				ld hl,script_flags				00348A CB8E                B   294    				res scr_find_new_line,(hl)
00348C C3 F9 33 00         B   295    				jr read_script
                           B   296    
                           B   297    
                           B   298    ;----------------------------------------------
                           B   299    
                           B   300    		
                           B   301    				
                           B   302    				
                           B   303    				
                           B   304    				
                           B   305    				
                           B     0    	include 'commands\ltn.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; OS "<" Command: Update mem hex bytes and re-d
                           B     3    ;
                           B     4    ; Not currently enabled in PROSE
                           B     5    ;----------------------------------------------
                           B     6    
003490                     B     7    os_cmd_ltn
                           B     8    
003490 AF                  B     9    				xor a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 123


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\ltn.asm
003491 C9                  B    10    				ret
                           B    11    
                           B    12    
                           B    13    ;----------------------------------------------
                           B    14    	
                           B     0    	include 'commands\pen.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"Pen" - Change attribute v0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
003492                     B     5    os_cmd_pen
                           B     6    	
003492 0602                B     7    				ld b,2							003494 DD21 4D 5E 00       B     8    				ld ix,current_pen
                           B     9    				
003499 CD 80 1C 00         B    10    chpenlp			call hexword_or_bust			00349D 28 0D               B    11    				jr z,pendone					00349F 23                  B    12    				inc hl
0034A0 DD7300              B    13    				ld (ix),e
0034A3 DD7201              B    14    				ld (ix+1),d
0034A6 DD23                B    15    				inc ix
0034A8 DD23                B    16    				inc ix
0034AA 10 ED               B    17    				djnz chpenlp	
                           B    18    				
0034AC AF                  B    19    pendone			xor a
0034AD C9                  B    20    				ret
                           B    21    
                           B    22    ;----------------------------------------------
                           B     0    	include 'commands\palette.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"Palette" - Change attribute v0.01 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
0034AE                     B     5    os_cmd_palette
                           B     6    
0034AE 0610                B     7    				ld b,16							0034B0 DD21 51 5E 00       B     8    				ld ix,pen_palette
                           B     9    				
0034B5 0E00                B    10    				ld c,0
0034B7 C5                  B    11    chcollp			push bc
0034B8 CD 80 1C 00         B    12    				call hexword_or_bust			0034BC C1                  B    13    				pop bc
0034BD 28 0E               B    14    				jr z,colrdone					0034BF 0C                  B    15    				inc c
0034C0 23                  B    16    				inc hl
0034C1 DD7300              B    17    				ld (ix),e
0034C4 DD7201              B    18    				ld (ix+1),d
0034C7 DD23                B    19    				inc ix
0034C9 DD23                B    20    				inc ix
0034CB 10 EA               B    21    				djnz chcollp
                           B    22    			
0034CD 79                  B    23    colrdone		ld a,c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 124


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\palette.asm
0034CE B7                  B    24    				or a
0034CF 20 04               B    25    				jr nz,pal_ok
0034D1 3E81                B    26    				ld a,81h						0034D3 B7                  B    27    				or a
0034D4 C9                  B    28    				ret
0034D5 21 51 5E 00         B    29    pal_ok			ld hl,pen_palette
0034D9 CD F0 3D 00         B    30    				call hswc_set_ui_colours	
0034DD AF                  B    31    				xor a
0034DE C9                  B    32    				ret
                           B    33    
                           B    34    ;----------------------------------------------
                           B     0    	include 'commands\mouse.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; "Mouse" = Reset / Enable Mouse Driver v0.05 -
                           B     3    ;----------------------------------------------
                           B     4    
       00000280            B     5    window_width_pixels		equ 640
       000001E0            B     6    window_height_pixels	equ 480
                           B     7    
       00000064            B     8    default_sample_rate 	equ 100			; 100 s
       00000003            B     9    default_resolution		equ 03h			; 8 cou
       000000E6            B    10    default_scaling			equ 0e6h		; valid
                           B    11    
0034DF                     B    12    os_cmd_mouse
                           B    13    
                           B    14    		
0034DF CD 70 3B 00         B    15    				call disable_ms_irq
                           B    16    
0034E3 21 1A 60 00         B    17    				ld hl,devices_connected
0034E7 CB8E                B    18    				res 1,(hl)
                           B    19    		
0034E9 CD 64 41 00         B    20    				call init_mouse
0034ED C0                  B    21    				ret nz
                           B    22    			
0034EE AF                  B    23    				xor a
0034EF 32 F0 61 00         B    24    				ld (mouse_packet_index),a
0034F3 32 F1 61 00         B    25    				ld (mouse_buttons),a
0034F7 21000000            B    26    				ld hl,0
0034FB 22 F2 61 00         B    27    				ld (mouse_disp_x),hl
0034FF 22 F5 61 00         B    28    				ld (mouse_disp_y),hl
                           B    29    
003503 21800200            B    30    				ld hl,window_width_pixels
003507 11E00100            B    31    				ld de,window_height_pixels
00350B CD 36 14 00         B    32    				call os_set_mouse_window
                           B    33    
00350F CD 6A 3B 00         B    34    				call enable_ms_irq
                           B    35    
003513 21 1A 60 00         B    36    				ld hl,devices_connected
003517 CBCE                B    37    				set 1,(hl)
003519 AF                  B    38    				xor a
00351A C9                  B    39    				ret				
                           B    40    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 125


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\mouse.asm
                           B    41    ;----------------------------------------------
                           B    42    	
                           B     0    	include 'commands\vmode.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"vmode" - Change video mode - ADL mode 0.3
                           B     3    ;----------------------------------------------
                           B     4    
00351B                     B     5    os_cmd_vmode
                           B     6    	
00351B CD 80 1C 00         B     7    				call hexword_or_bust			00351F 20 04               B     8    				jr nz,vm_data					003521 3E81                B     9    				ld a,81h						003523 B7                  B    10    				or a
003524 C9                  B    11    				ret
                           B    12    
003525 7B                  B    13    vm_data			ld a,e
003526 CD 52 15 00         B    14    				call os_set_vmode
00352A C9                  B    15    				ret
                           B    16    				
                           B    17    ;----------------------------------------------
                           B     0    	include 'commands\font.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"font" - replace font. V0.01 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
00352B                     B     5    os_cmd_font
                           B     6    	
00352B CD 98 16 00         B     7    				call os_check_volume_format	
00352F C0                  B     8    				ret nz
                           B     9    				
003530 CD 02 29 00         B    10    				call filename_or_bust			003534 22 03 68 00         B    11    				ld (scratch_pad),hl
                           B    12    
003538 CD 68 1A 00         B    13    				call fs_get_dir_cluster			00353C ED53 06 68 00       B    14    				ld (scratch_pad+3),de
                           B    15    				
003541 CD F6 16 00         B    16    				call os_root_dir				003545 C0                  B    17    				ret nz
003546 21 B4 35 00         B    18    				ld hl,fonts_fn
00354A CD E6 16 00         B    19    				call os_change_dir
00354E 20 1E               B    20    				jr nz,no_font
                           B    21    				
003550 2A 03 68 00         B    22    				ld hl,(scratch_pad)
003554 CD 2B 16 00         B    23    				call os_find_file				003558 20 14               B    24    				jr nz,no_font
                           B    25    				
00355A 11000800            B    26    				ld de,800h
00355E CD 3C 16 00         B    27    				call os_set_load_length			                           B    28    
003562 21000080            B    29    				ld hl,vram_a_addr				003566 CD 5A 16 00         B    30    				call os_read_bytes_from_file
00356A CD 7A 35 00         B    31    				call convert_font
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 126


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\font.asm
                           B    32    				
00356E F5                  B    33    no_font			push af
00356F ED5B 06 68 00       B    34    				ld de,(scratch_pad+3)			003574 CD 74 1A 00         B    35    				call fs_update_dir_cluster
003578 F1                  B    36    				pop af
003579 C9                  B    37    				ret
                           B    38    				
                           B    39    
                           B    40    ;----------------------------------------------
                           B    41    				
00357A 1EFF                B    42    convert_font	ld e,255						00357C 01080000            B    43    				ld bc,8
003580 21F80780            B    44    				ld hl,vram_a_addr+07f8h	
003584 CD 8F 35 00         B    45    conv_allch		call char_to_font
003588 AF                  B    46    				xor a
003589 ED42                B    47    				sbc hl,bc
00358B 1D                  B    48    				dec e
00358C 20 F6               B    49    				jr nz,conv_allch
00358E C9                  B    50    				ret
                           B    51    
                           B    52    ;----------------------------------------------
                           B    53    
                           B    54    ; set E = character number
                           B    55    ;     HL = character source def address
                           B    56    
00358F E5                  B    57    char_to_font	push hl
003590 C5                  B    58    				push bc
003591 01400000            B    59    				ld bc,64
003595 43                  B    60    				ld b,e
003596 ED4C                B    61    				mlt bc
003598 DD210000 80         B    62    				ld ix,vram_a_addr
00359D DD09                B    63    				add ix,bc
00359F CD A7 35 00         B    64    				call conv_char
0035A3 C1                  B    65    				pop bc
0035A4 E1                  B    66    				pop hl
0035A5 AF                  B    67    				xor a
0035A6 C9                  B    68    				ret
                           B    69    	
                           B    70    ;----------------------------------------------
                           B    71    
0035A7 0608                B    72    conv_char		ld b,8
0035A9 7E                  B    73    bfontlp1		ld a,(hl)
0035AA DD7700              B    74    				ld (ix),a
0035AD 23                  B    75    				inc hl
0035AE ED3208              B    76    				lea ix,ix+8
0035B1 10 F6               B    77    				djnz bfontlp1
0035B3 C9                  B    78    				ret	
                           B    79    				
                           B    80    ;----------------------------------------------
                           B    81    
0035B4 666F6E74 7300       B    82    fonts_fn		db "fonts",0
                           B    83    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 127


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\font.asm
                           B    84    ;----------------------------------------------
                           B     0    	include 'commands\set.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"set" - set an environment variable v0.01
                           B     3    ;
                           B     4    ; Command should be in format: "SET BLAH=SOMETH
                           B     5    ;
                           B     6    ;----------------------------------------------
                           B     7    
0035BA 7E                  B     8    os_cmd_set		ld a,(hl)					; i
0035BB B7                  B     9    				or a
0035BC 28 3B               B    10    				jr z,show_envars
                           B    11    
0035BE 11 06 68 00         B    12    				ld de,scratch_pad+3			; p
0035C2 7E                  B    13    evsalp1			ld a,(hl)
0035C3 12                  B    14    				ld (de),a
0035C4 B7                  B    15    				or a
0035C5 28 2E               B    16    				jr z,set_bad_args
0035C7 FE3D                B    17    				cp '='
0035C9 28 04               B    18    				jr z,evsadone1
0035CB 23                  B    19    				inc hl
0035CC 13                  B    20    				inc de
0035CD 18 F3               B    21    				jr evsalp1
0035CF AF                  B    22    evsadone1		xor a
0035D0 12                  B    23    				ld (de),a
0035D1 13                  B    24    				inc de
0035D2 23                  B    25    				inc hl
0035D3 ED53 03 68 00       B    26    				ld (scratch_pad),de
                           B    27    
0035D8 7E                  B    28    evsalp2			ld a,(hl)
0035D9 12                  B    29    				ld (de),a
0035DA FE20                B    30    				cp ' '
0035DC 28 07               B    31    				jr z,evsadone2
0035DE B7                  B    32    				or a
0035DF 28 14               B    33    				jr z,set_bad_args
0035E1 23                  B    34    				inc hl
0035E2 13                  B    35    				inc de
0035E3 18 F3               B    36    				jr evsalp2
0035E5 AF                  B    37    evsadone2		xor a
0035E6 12                  B    38    				ld (de),a
                           B    39    				
0035E7 21 06 68 00         B    40    				ld hl,scratch_pad+3
0035EB ED5B 03 68 00       B    41    				ld de,(scratch_pad)
0035F0 CD 6F 1B 00         B    42    				call os_set_envar
0035F4 C9                  B    43    				ret
                           B    44    
0035F5 3E82                B    45    set_bad_args	ld a,82h
0035F7 B7                  B    46    				or a
0035F8 C9                  B    47    				ret
                           B    48    				
                           B    49    
0035F9 21 14 62 00         B    50    show_envars		ld hl,envar_list
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 128


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\set.asm
                           B    51    				
0035FD 7E                  B    52    show_envlp		ld a,(hl)
0035FE FEFF                B    53    				cp 0ffh
003600 28 12               B    54    				jr z,set_done
003602 E5                  B    55    				push hl
003603 CD 0D 0F 00         B    56    				call os_print_string
003607 CD B5 13 00         B    57    				call os_new_line
00360B E1                  B    58    				pop hl
                           B    59    				
00360C 23                  B    60    set_fnl			inc hl
00360D 7E                  B    61    				ld a,(hl)
00360E B7                  B    62    				or a
00360F 20 FB               B    63    				jr nz,set_fnl
003611 23                  B    64    				inc hl
003612 18 E9               B    65    				jr show_envlp
                           B    66    				
003614 AF                  B    67    set_done		xor a
003615 C9                  B    68    				ret
                           B    69    								
                           B    70    ;----------------------------------------------
                           B     0    	include 'commands\dz.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; OS "DZ" Command: Z80-mode Disassemble V0.01
                           B     3    ;----------------------------------------------
                           B     4    
003616 FD21 7B 23 00       B     5    os_cmd_dz		ld iy,prefix_bits_loc
00361B FDCB 07 86          B     6    				res adl_dis,(iy+var_adl)
00361F C3 9D 1D 00         B     7    				jp os_cmd_d_go
                           B     8    				
                           B     9    ;----------------------------------------------
                           B     0    	include 'commands\sound.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"Sound" - Play a section of Audio RAM v1.00
                           B     3    ;----------------------------------------------
                           B     4    
003623 11FFFF00            B     5    os_cmd_sound	ld de,0ffffh					003627 ED53 B6 36 00       B     6    				ld (aud_per),de
00362C 3E40                B     7    				ld a,64
00362E 32 B8 36 00         B     8    				ld (aud_vol),a
003632 3E11                B     9    				ld a,11h
003634 32 B9 36 00         B    10    				ld (aud_chans),a
                           B    11    				
003638 CD 80 1C 00         B    12    				call hexword_or_bust			00363C 20 06               B    13    				jr nz,alocok					00363E CD 2F 43 00         B    14    				call hwsc_disable_audio			003642 AF                  B    15    				xor a
003643 C9                  B    16    				ret
003644 ED53 AA 36 00       B    17    alocok			ld (aud_loc),de
003649 ED53 B0 36 00       B    18    				ld (aud_loc_loop),de
                           B    19    				
00364E CD 80 1C 00         B    20    				call hexword_or_bust
003652 20 04               B    21    				jr nz,gotaudlen
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 129


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\sound.asm
003654 3E8D                B    22    missaudpar		ld a,8dh						003656 B7                  B    23    				or a
003657 C9                  B    24    				ret				
003658 ED53 AD 36 00       B    25    gotaudlen		ld (aud_len),de
00365D ED53 B3 36 00       B    26    				ld (aud_len_loop),de
                           B    27    				
003662 CD 80 1C 00         B    28    				call hexword_or_bust
003666 28 33               B    29    				jr z,play_sound
003668 7B                  B    30    				ld a,e
003669 32 B6 36 00         B    31    				ld (aud_per),a
00366D 7A                  B    32    				ld a,d
00366E 32 B7 36 00         B    33    				ld (aud_per+1),a
                           B    34    				
003672 CD 80 1C 00         B    35    				call hexword_or_bust
003676 28 23               B    36    				jr z,play_sound
003678 7B                  B    37    				ld a,e
003679 32 B8 36 00         B    38    				ld (aud_vol),a
                           B    39    				
00367D CD 80 1C 00         B    40    				call hexword_or_bust
003681 28 18               B    41    				jr z,play_sound
003683 7B                  B    42    				ld a,e
003684 32 B9 36 00         B    43    				ld (aud_chans),a
                           B    44    				
003688 CD 80 1C 00         B    45    				call hexword_or_bust
00368C 28 0D               B    46    				jr z,play_sound
00368E 7B                  B    47    				ld a,e
00368F B7                  B    48    				or a
003690 20 09               B    49    				jr nz,play_sound
003692 11010000            B    50    				ld de,1
003696 ED53 B3 36 00       B    51    				ld (aud_len_loop),de
                           B    52    				
00369B 21 AA 36 00         B    53    play_sound		ld hl,audio_structure
00369F 3A B9 36 00         B    54    				ld a,(aud_chans)
0036A3 4F                  B    55    				ld c,a
0036A4 CD E2 42 00         B    56    				call hwsc_play_audio
0036A8 AF                  B    57    				xor a
0036A9 C9                  B    58    				ret
                           B    59    				
                           B    60    
                           B    61    ;----------------------------------------------
                           B    62    
0036AA                     B    63    audio_structure
                           B    64    
0036AA 000000              B    65    aud_loc			dw24 0			;loc
0036AD 000000              B    66    aud_len			dw24 0			;len
0036B0 000000              B    67    aud_loc_loop	dw24 0	  	    ;loop loc
0036B3 000000              B    68    aud_len_loop	dw24 0		    ;loop len
                           B    69    
0036B6 FFFF                B    70    aud_per			dw 0ffffh		;per
0036B8 40                  B    71    aud_vol			db 64			;vol
                           B    72    
0036B9 11                  B    73    aud_chans		db 11h			;channels to pl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 130


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\sound.asm
                           B    74    
                           B    75    ;----------------------------------------------
                           B    76    		
                           A  3105    
0036BA C9                  A  3106    os_cmd_unused	ret		; <- dummy command, sho
                           A  3107    
                           A  3108    ;----------------------------------------------
                           A  3109    
0036BB                     A  3110    os_get_mem_high
                           A  3111    
0036BB 2A 1B 60 00         A  3112    		ld hl,(sysram_os_highest)
0036BF ED5B 1E 60 00       A  3113    		ld de,(vram_a_os_highest)
0036C4 ED4B 21 60 00       A  3114    		ld bc,(vram_b_os_highest)
0036C9 AF                  A  3115    		xor a
0036CA C9                  A  3116    		ret
                           A  3117    
                           A  3118    ;----------------------------------------------
                           A  3119    
0036CB                     A  3120    test_amoeba_vers
                           A  3121    
0036CB CD 1F 40 00         A  3122    				call hwsc_get_version			0036CF 21040100            A  3123    				ld hl,amoeba_version_required-1
0036D3 AF                  A  3124    				xor a
0036D4 ED52                A  3125    				sbc hl,de
0036D6 D8                  A  3126    				ret c
                           A  3127    				
0036D7 21 33 56 00         A  3128    				ld hl,hw_warn_txt2
0036DB 11050100            A  3129    				ld de,amoeba_version_required
0036DF CD 7D 10 00         A  3130    				call hexword_to_ascii
                           A  3131    				
0036E3 21004080            A  3132    				ld hl,vram_a_addr+16384			0036E7 222010FF            A  3133    				ld (bitmap_parameters),hl		0036EB 3600                A  3134    				ld (hl),0
0036ED E5                  A  3135    				push hl
0036EE D1                  A  3136    				pop de
0036EF 13                  A  3137    				inc de
0036F0 01002C01            A  3138    				ld bc,320*240
0036F4 EDB0                A  3139    				ldir
                           A  3140    					
0036F6 DD2138D1 80         A  3141    				ld ix,vram_a_addr+16384+(320*11
0036FB FD21 1E 56 00       A  3142    				ld iy,hw_warn_txt1				003700 FD7E00              A  3143    nextwchar		ld a,(iy)
003703 B7                  A  3144    				or a
003704 28 3B               A  3145    				jr z,wmsg_done
003706 21400000            A  3146    				ld hl,64
00370A 67                  A  3147    				ld h,a
00370B ED6C                A  3148    				mlt hl
00370D 11000080            A  3149    				ld de,vram_a_addr
003711 19                  A  3150    				add hl,de						003712 0E08                A  3151    				ld c,8
003714 7E                  A  3152    wpixlp2			ld a,(hl)
003715 0608                A  3153    				ld b,8
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 131


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
003717 CB17                A  3154    wpixlp1			rl a
003719 30 06               A  3155    				jr nc,nowpix
00371B DD360001            A  3156    				ld (ix),1
00371F 18 04               A  3157    				jr wpixd
003721 DD360000            A  3158    nowpix			ld (ix),0
003725 DD23                A  3159    wpixd			inc ix
003727 10 EE               A  3160    				djnz wpixlp1
003729 11380100            A  3161    				ld de,320-8
00372D DD19                A  3162    				add ix,de
00372F 11080000            A  3163    				ld de,8
003733 19                  A  3164    				add hl,de
003734 0D                  A  3165    				dec c
003735 20 DD               A  3166    				jr nz,wpixlp2
                           A  3167    				
003737 1108F6FF            A  3168    				ld de,8-(320*8)
00373B DD19                A  3169    				add ix,de
00373D FD23                A  3170    				inc iy
00373F 18 BF               A  3171    				jr nextwchar
                           A  3172    
                           A  3173    
003741 CD 59 41 00         A  3174    wmsg_done		call purge_keyboard
003745 CD 41 3B 00         A  3175    				call set_irq_vector
003749 CD 53 3B 00         A  3176    				call enable_os_irqs
00374D FB                  A  3177    				ei
                           A  3178    
00374E CD CC 3F 00         A  3179    wmsg_loop		call hwsc_wait_vrt			;	                           A  3180    				
003752 11CC0C00            A  3181    				ld de,ccch
003756 21 B6 60 00         A  3182    				ld hl,cursorflashtimer
00375A 34                  A  3183    				inc (hl)
00375B 7E                  A  3184    				ld a,(hl)
00375C E640                A  3185    				and 64
00375E 28 04               A  3186    				jr z,got_wcolour
003760 11000000            A  3187    				ld de,000h
003764 ED530200 FF         A  3188    got_wcolour		ld (hw_palette+2),de
                           A  3189    								
003769 CD D0 43 00         A  3190    				call os_get_key_press
00376D FE76                A  3191    				cp 76h
00376F 20 DD               A  3192    				jr nz,wmsg_loop
003771 C3000000            A  3193    				jp 0
                           A  3194    				
                           A  3195    ;----------------------------------------------
                           A  3196    ; Drivers
                           A  3197    ;----------------------------------------------
                           A  3198    
                           B     0    	include		'prose_sdcard_driver.asm'		                           B     1    ;----------------------------------------------
                           B     2    ; Z80 MMC/SDC card access routines - Phil Rusto
                           B     3    ;----------------------------------------------
                           B     4    ;
                           B     5    ; Limitations:
                           B     6    ; ------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 132


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
                           B     7    ; Currently does not support V2.0 SD cards (IE:
                           B     8    ; Does not check for voltage compatibility or b
                           B     9    ; Somewhat arbitary timimg..
                           B    10    ;
                           B    11    ;----------------------------------------------
                           B    12    
                           B    13    ; Key Routines:      Input Registers           
                           B    14    ; -------------      ---------------           
                           B    15    ; sdc_get_id			no arguments required  
                           B    16    ; sdc_read_sector		sector_LBA0-3			                           B    17    ; sdc_write_sector		sector_LBA0-3    		                           B    18    ;
                           B    19    ; (Assume all other registers are trashed.)
                           B    20    ;
                           B    21    ; Routines respond with Carry flag set if opera
                           B    22    
       00000000            B    23    sdc_error_spi_mode_failed			equ 0
       00000001            B    24    sdc_error_bad_init_mmc				equ 1
       00000002            B    25    sdc_error_bad_init					equ 2
       00000003            B    26    sdc_error_bad_id					equ 3
       00000004            B    27    sdc_error_bad_command_response		equ 4
       00000005            B    28    sdc_error_data_token_timeout		equ 5
       00000006            B    29    sdc_error_write_timeout				equ 6
       00000007            B    30    sdc_error_write_failed				equ 7
                           B    31    
                           B    32    ; Variables required:
                           B    33    ; -------------------
                           B    34    ;
                           B    35    ; "sector_buffer" - 512 bytes
                           B    36    ;
                           B    37    ; "sector_lba0" - LBA of desired sector LSB
                           B    38    ; "sector_lba1" 
                           B    39    ; "sector_lba2"
                           B    40    ; "sector_lba3" - LBA of desired sector MSB
                           B    41    ;
                           B    42    ; "sdc_sdc" - 1 byte (0 = card is MMC, 1 = card
                           B    43    
                           B    44    
                           B    45    ;----------------------------------------------
                           B    46    ; PROSE STANDARD DRIVER HEADER
                           B    47    ;----------------------------------------------
                           B    48    
003775                     B    49    sd_card_driver				; label of driver c
                           B    50    
003775 C3 89 37 00         B    51    	jp sdc_get_id			; $00 : init / get 
003779 C3 53 39 00         B    52    	jp sdc_read_sector		; $04 : jump to rea
00377D C3 A3 39 00         B    53    	jp sdc_write_sector		; $08 : jump to wri
003781 53445F43 41524400   B    54    	db "SD_CARD",0			; $0c : desired ASC
                           B    55    
                           B    56    ;----------------------------------------------
                           B    57    ; Hardware agnostic section..
                           B    58    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 133


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
                           B    59    
003789                     B    60    sdc_get_id
                           B    61    
                           B    62    
                           B    63    ; Initializes card, reads CSD and CID into sect
                           B    64    ; containing ASCII device ID. Returns device ca
                           B    65    
                           B    66    ; Returns:
                           B    67    ; --------
                           B    68    ;   HL = Pointer to device ID string 
                           B    69    ; C:DE = Capacity (number of sectors)
                           B    70    
                           B    71    
003789 3E01                B    72    				ld a,1							00378B 32 D9 3A 00         B    73    				ld (sdc_sdc),a			
                           B    74    
00378F CD 20 3B 00         B    75    				call sdc_power_off				003793 CD 2B 3B 00         B    76    				call sdc_slow_clock				003797 CD F9 3A 00         B    77    				call sdc_select_card			                           B    78    
00379B 11004000            B    79    				ld de,16384						00379F CD 3A 40 00         B    80    				call hwsc_time_delay
                           B    81    				
0037A3 CD 15 3B 00         B    82    				call sdc_power_on				                           B    83    
0037A7 11830000            B    84    				ld de,131						0037AB CD 3A 40 00         B    85    				call hwsc_time_delay
                           B    86    
0037AF CD 04 3B 00         B    87    				call sdc_deselect_card			                           B    88    	
0037B3 060A                B    89    				ld b,10							0037B5 CD 91 3A 00         B    90    sdc_ecilp		call sdc_send_eight_clocks
0037B9 10 FA               B    91    				djnz sdc_ecilp
                           B    92    	
0037BB CD F9 3A 00         B    93    				call sdc_select_card			                           B    94    	
0037BF 3E40                B    95    				ld a,040h						0037C1 01009500            B    96    				ld bc,09500h					0037C5 11000000            B    97    				ld de,00000h
0037C9 CD 3F 3A 00         B    98    				call sdc_send_command		 
0037CD CD EA 3A 00         B    99    				call sdc_get_byte				0037D1 CD 64 3A 00         B   100    				call sdc_wait_ncr				0037D5 EE01                B   101    				xor 01h							0037D7 C2 98 3A 00         B   102    				jp nz,init_spi_mode_fail		                           B   103    
                           B   104    
0037DB 01401F00            B   105    				ld bc,8000						0037DF C5                  B   106    sdc_iwl			push bc							0037E0 3E77                B   107    				ld a,077h						0037E2 CD 37 3A 00         B   108    				call sdc_send_command_null_args
0037E6 CD EA 3A 00         B   109    				call sdc_get_byte				0037EA CD EA 3A 00         B   110    				call sdc_get_byte				Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 134


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
0037EE 3E69                B   111    				ld a,069h						0037F0 CD 37 3A 00         B   112    				call sdc_send_command_null_args
0037F4 CD EA 3A 00         B   113    				call sdc_get_byte
0037F8 C1                  B   114    				pop bc
0037F9 CD 64 3A 00         B   115    				call sdc_wait_ncr				0037FD CB57                B   116    				bit 2,a							0037FF 20 0C               B   117    				jr nz,mmc_init			
003801 B7                  B   118    				or a
003802 28 2A               B   119    				jr z,sdc_init_done				003804 0B                  B   120    				dec bc
003805 78                  B   121    				ld a,b
003806 B1                  B   122    				or c
003807 20 D6               B   123    				jr nz,sdc_iwl
003809 C3 A6 3A 00         B   124    				jp sdc_init_fail
                           B   125    
                           B   126    
00380D AF                  B   127    mmc_init		xor a							00380E 32 D9 3A 00         B   128    				ld (sdc_sdc),a
003812 01401F00            B   129    				ld bc,8000						003816 C5                  B   130    mmc_iwl			push bc
003817 3E41                B   131    				ld a,041h						003819 CD 37 3A 00         B   132    				call sdc_send_command_null_args
00381D C1                  B   133    				pop bc
00381E CD 64 3A 00         B   134    				call sdc_wait_ncr				003822 B7                  B   135    				or a							003823 28 09               B   136    				jr z,sdc_init_done
003825 0B                  B   137    				dec bc
003826 78                  B   138    				ld a,b
003827 B1                  B   139    				or c
003828 20 EC               B   140    				jr nz,mmc_iwl
00382A C3 A2 3A 00         B   141    				jp mmc_init_fail
                           B   142    
00382E                     B   143    sdc_init_done
                           B   144    
00382E 3E49                B   145    				ld a,049h						003830 CD 37 3A 00         B   146    				call sdc_send_command_null_args
003834 CD 64 3A 00         B   147    				call sdc_wait_ncr				003838 B7                  B   148    				or a							003839 C2 AA 3A 00         B   149    				jp nz,sdc_id_fail
00383D CD 78 3A 00         B   150    				call sdc_wait_data_token		003841 B7                  B   151    				or a
003842 C2 AA 3A 00         B   152    				jp nz,sdc_id_fail
003846 21 03 66 00         B   153    				ld hl,sector_buffer				00384A CD 40 39 00         B   154    				call sdc_read_id_bytes	
                           B   155    
00384E 3E4A                B   156    				ld a,04ah						003850 CD 37 3A 00         B   157    				call sdc_send_command_null_args
003854 CD 64 3A 00         B   158    				call sdc_wait_ncr				003858 B7                  B   159    				or a							003859 C2 AA 3A 00         B   160    				jp nz,sdc_id_fail
00385D CD 78 3A 00         B   161    				call sdc_wait_data_token		003861 B7                  B   162    				or a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 135


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
003862 C2 AA 3A 00         B   163    				jp nz,sdc_id_fail
003866 21 13 66 00         B   164    				ld hl,sector_buffer+16			00386A CD 40 39 00         B   165    				call sdc_read_id_bytes
00386E CD 04 3B 00         B   166    				call sdc_deselect_card
                           B   167    
                           B   168    
003872                     B   169    sdc_quit	
                           B   170    
003872 21 16 66 00         B   171    				ld hl,sector_buffer+013h		003876 11 23 66 00         B   172    				ld de,sector_buffer+020h
00387A 01050000            B   173    				ld bc,5
00387E 3A D9 3A 00         B   174    				ld a,(sdc_sdc)
003882 B7                  B   175    				or a
003883 20 01               B   176    				jr nz,sdc_cn5
003885 03                  B   177    				inc bc
003886 EDB0                B   178    sdc_cn5			ldir
003888 E5                  B   179    				push hl
003889 D5                  B   180    				push de
00388A 21 BE 3A 00         B   181    				ld hl,sdc_vnchars
00388E 011A0000            B   182    				ld bc,26
003892 EDB0                B   183    				ldir
003894 D1                  B   184    				pop de
003895 E1                  B   185    				pop hl
003896 13                  B   186    				inc de
003897 13                  B   187    				inc de
003898 7E                  B   188    				ld a,(hl)
003899 CB3F                B   189    				srl a
00389B CB3F                B   190    				srl a
00389D CB3F                B   191    				srl a
00389F CB3F                B   192    				srl a
0038A1 C630                B   193    				add a,030h						0038A3 12                  B   194    				ld (de),a
0038A4 13                  B   195    				inc de
0038A5 13                  B   196    				inc de
0038A6 7E                  B   197    				ld a,(hl)
0038A7 E60F                B   198    				and 0fh
0038A9 C630                B   199    				add a,030h
0038AB 12                  B   200    				ld (de),a						0038AC 13                  B   201    				inc de
0038AD 13                  B   202    				inc de
0038AE 13                  B   203    				inc de
0038AF 13                  B   204    				inc de
0038B0 13                  B   205    				inc de
0038B1 23                  B   206    				inc hl
0038B2 0604                B   207    				ld b,4
0038B4 7E                  B   208    sdc_snulp		ld a,(hl)						0038B5 CB3F                B   209    				srl a
0038B7 CB3F                B   210    				srl a
0038B9 CB3F                B   211    				srl a
0038BB CB3F                B   212    				srl a
0038BD C630                B   213    				add a,030h
0038BF FE3A                B   214    				cp 03ah
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 136


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
0038C1 38 02               B   215    				jr c,sdc_hvl1
0038C3 C607                B   216    				add a,07h
0038C5 12                  B   217    sdc_hvl1		ld (de),a
0038C6 13                  B   218    				inc de
0038C7 7E                  B   219    				ld a,(hl)
0038C8 E60F                B   220    				and 0fh
0038CA C630                B   221    				add a,030h
0038CC FE3A                B   222    				cp 03ah
0038CE 38 02               B   223    				jr c,sdc_hvl2
0038D0 C607                B   224    				add a,07h
0038D2 12                  B   225    sdc_hvl2		ld (de),a
0038D3 13                  B   226    				inc de
0038D4 23                  B   227    				inc hl
0038D5 10 DD               B   228    				djnz sdc_snulp
                           B   229    	
                           B   230    	
                           B   231    
0038D7 DD21 03 66 00       B   232    				ld ix,sector_buffer				0038DC DD7E06              B   233    				ld a,(ix+6)
0038DF E603                B   234    				and 00000011b
0038E1 57                  B   235    				ld d,a
0038E2 DD5E07              B   236    				ld e,(ix+7)
0038E5 DD7E08              B   237    				ld a,(ix+8)
0038E8 E6C0                B   238    				and 11000000b
0038EA CB27                B   239    				sla a
0038EC CB13                B   240    				rl e
0038EE CB12                B   241    				rl d
0038F0 CB27                B   242    				sla a
0038F2 CB13                B   243    				rl e
0038F4 CB12                B   244    				rl d							                           B   245    	
0038F6 DD7E09              B   246    				ld a,(ix+9)
0038F9 E603                B   247    				and 00000011b
0038FB 47                  B   248    				ld b,a
0038FC DD7E0A              B   249    				ld a,(ix+10)
0038FF E680                B   250    				and 10000000b
003901 CB27                B   251    				sla a
003903 CB10                B   252    				rl b							                           B   253    	
003905 04                  B   254    				inc b
003906 04                  B   255    				inc b
003907 21000000            B   256    				ld hl,0
00390B CB23                B   257    sdc_cmsh		sla e
00390D CB12                B   258    				rl d
00390F CB15                B   259    				rl l
003911 CB14                B   260    				rl h
003913 10 F6               B   261    				djnz sdc_cmsh					                           B   262    	
003915 DD7E05              B   263    				ld a,(ix+5)
003918 E60F                B   264    				and 00001111b					00391A 28 17               B   265    				jr z,sdc_nbls
00391C 47                  B   266    				ld b,a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 137


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
00391D CB23                B   267    sdc_blsh		sla e
00391F CB12                B   268    				rl d
003921 CB15                B   269    				rl l
003923 CB14                B   270    				rl h
003925 10 F6               B   271    				djnz sdc_blsh					                           B   272    	
003927 0609                B   273    				ld b,9							003929 CB3C                B   274    sdc_cbsec		srl h
00392B CB1D                B   275    				rr l
00392D CB1A                B   276    				rr d
00392F CB1B                B   277    				rr e
003931 10 F6               B   278    				djnz sdc_cbsec
                           B   279    
003933 E5                  B   280    sdc_nbls		push hl
003934 C1                  B   281    				pop bc							003935 21 23 66 00         B   282    				ld hl,sector_buffer+020h		                           B   283    
003939 CD 36 3B 00         B   284    				call sdc_fast_clock				00393D AF                  B   285    				xor a
00393E 37                  B   286    				scf
00393F C9                  B   287    				ret
                           B   288    
                           B   289    
                           B   290    ;----------------------------------------------
                           B   291    
003940                     B   292    sdc_read_id_bytes
                           B   293    
003940 0610                B   294    				ld b,16
003942 CD EA 3A 00         B   295    sdc_csdlp		call sdc_get_byte
003946 77                  B   296    				ld (hl),a
003947 23                  B   297    				inc hl
003948 10 F8               B   298    				djnz sdc_csdlp
00394A CD EA 3A 00         B   299    				call sdc_get_byte				00394E CD EA 3A 00         B   300    				call sdc_get_byte				003952 C9                  B   301    				ret
                           B   302    	
                           B   303    ;----------------------------------------------
                           B   304    	
                           B   305    	
003953                     B   306    sdc_read_sector
                           B   307    
                           B   308    ;set c:de to sector number to read, 512 bytes r
                           B   309    
003953 CD F9 3A 00         B   310    				call sdc_select_card
                           B   311    
003957 21 AF 60 00         B   312    				ld hl,sector_lba0
00395B 5E                  B   313    				ld e,(hl)						00395C 23                  B   314    				inc hl
00395D 56                  B   315    				ld d,(hl)
00395E 23                  B   316    				inc hl
00395F 4E                  B   317    				ld c,(hl)
003960 CB23                B   318    				sla e							Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 138


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
003962 CB12                B   319    				rl d
003964 CB11                B   320    				rl c
003966 3E51                B   321    				ld a,051h						003968 0601                B   322    				ld b,001h						00396A CD 3F 3A 00         B   323    				call sdc_send_command		
00396E CD 64 3A 00         B   324    				call sdc_wait_ncr				003972 B7                  B   325    				or a							003973 C2 AE 3A 00         B   326    				jp nz,sdc_bcr_error			
003977 CD 78 3A 00         B   327    				call sdc_wait_data_token		00397B B7                  B   328    				or a
00397C C2 B2 3A 00         B   329    				jp nz,sdc_dt_timeout
                           B   330    	
003980 21 03 66 00         B   331    				ld hl,sector_buffer				003984 0600                B   332    				ld b,0
003986 CD EA 3A 00         B   333    sdc_rslp		call sdc_get_byte
00398A 77                  B   334    				ld (hl),a
00398B 23                  B   335    				inc hl
00398C CD EA 3A 00         B   336    				call sdc_get_byte
003990 77                  B   337    				ld (hl),a
003991 23                  B   338    				inc hl
003992 10 F2               B   339    				djnz sdc_rslp
003994 CD EA 3A 00         B   340    				call sdc_get_byte				003998 CD EA 3A 00         B   341    				call sdc_get_byte				                           B   342    
00399C CD 04 3B 00         B   343    				call sdc_deselect_card
0039A0 AF                  B   344    				xor a
0039A1 37                  B   345    				scf
0039A2 C9                  B   346    				ret
                           B   347    	
                           B   348    ;----------------------------------------------
                           B   349    
0039A3                     B   350    sdc_write_sector
                           B   351    
                           B   352    ;set c:de to sector number to write, 512 bytes 
                           B   353    
0039A3 CD F9 3A 00         B   354    				call sdc_select_card
                           B   355    
0039A7 21 AF 60 00         B   356    				ld hl,sector_lba0
0039AB 5E                  B   357    				ld e,(hl)						0039AC 23                  B   358    				inc hl
0039AD 56                  B   359    				ld d,(hl)
0039AE 23                  B   360    				inc hl
0039AF 4E                  B   361    				ld c,(hl)
0039B0 CB23                B   362    				sla e							0039B2 CB12                B   363    				rl d
0039B4 CB11                B   364    				rl c
0039B6 3E58                B   365    				ld a,058h						0039B8 0601                B   366    				ld b,001h						0039BA CD 3F 3A 00         B   367    				call sdc_send_command		
0039BE CD 64 3A 00         B   368    				call sdc_wait_ncr				0039C2 B7                  B   369    				or a							0039C3 C2 AE 3A 00         B   370    				jp nz,sdc_bcr_error			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 139


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
                           B   371    	
0039C7 CD 91 3A 00         B   372    				call sdc_send_eight_clocks		                           B   373    
0039CB 3EFE                B   374    				ld a,0feh
0039CD CD DA 3A 00         B   375    				call sdc_send_byte				                           B   376    
0039D1 21 03 66 00         B   377    				ld hl,sector_buffer				0039D5 0600                B   378    				ld b,0
0039D7 7E                  B   379    sdc_wslp		ld a,(hl)
0039D8 CD DA 3A 00         B   380    				call sdc_send_byte
0039DC 23                  B   381    				inc hl
0039DD 7E                  B   382    				ld a,(hl)
0039DE CD DA 3A 00         B   383    				call sdc_send_byte
0039E2 23                  B   384    				inc hl
0039E3 10 F2               B   385    				djnz sdc_wslp
                           B   386    
0039E5 CD 91 3A 00         B   387    				call sdc_send_eight_clocks		0039E9 CD 91 3A 00         B   388    				call sdc_send_eight_clocks		                           B   389    		
0039ED CD EA 3A 00         B   390    				call sdc_get_byte				0039F1 E61F                B   391    				and 01fh
0039F3 CB3F                B   392    				srl a
0039F5 FE02                B   393    				cp 002h
0039F7 C2 B6 3A 00         B   394    				jp nz,sdc_write_fail
                           B   395    
0039FB 0150C300            B   396    				ld bc,50000						0039FF CD EA 3A 00         B   397    sdc_wcbsy		call sdc_get_byte				003A03 FEFF                B   398    				cp 0ffh
003A05 28 09               B   399    				jr z,sdc_nbusy
003A07 0B                  B   400    				dec bc
003A08 78                  B   401    				ld a,b
003A09 B1                  B   402    				or c
003A0A 20 F3               B   403    				jr nz,sdc_wcbsy
003A0C C3 BA 3A 00         B   404    				jp sdc_card_busy_timeout	
                           B   405    
003A10 3E4D                B   406    sdc_nbusy		ld a,04dh						003A12 01000100            B   407    				ld bc,0100h			
003A16 11000000            B   408    				ld de,0000h
003A1A CD 3F 3A 00         B   409    				call sdc_send_command
003A1E CD 64 3A 00         B   410    				call sdc_wait_ncr				003A22 B7                  B   411    				or a							003A23 C2 B6 3A 00         B   412    				jp nz,sdc_write_fail
003A27 CD EA 3A 00         B   413    				call sdc_get_byte				003A2B B7                  B   414    				or a							003A2C C2 B6 3A 00         B   415    				jp nz,sdc_write_fail		
003A30 CD 04 3B 00         B   416    				call sdc_deselect_card			003A34 AF                  B   417    				xor a
003A35 37                  B   418    				scf
003A36 C9                  B   419    				ret
                           B   420    	
                           B   421    ;----------------------------------------------
                           B   422    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 140


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
003A37                     B   423    sdc_send_command_null_args
                           B   424    
003A37 01000100            B   425    				ld bc,0100h				
003A3B 11000000            B   426    				ld de,0000h
                           B   427    
                           B   428    
003A3F                     B   429    sdc_send_command
                           B   430    
                           B   431    ; set A = command, C:DE for sector number, B fo
                           B   432    
003A3F F5                  B   433    				push af				
003A40 CD 91 3A 00         B   434    				call sdc_send_eight_clocks		003A44 F1                  B   435    				pop af
                           B   436    
003A45 CD DA 3A 00         B   437    				call sdc_send_byte				003A49 79                  B   438    				ld a,c							003A4A CD DA 3A 00         B   439    				call sdc_send_byte
003A4E 7A                  B   440    				ld a,d
003A4F CD DA 3A 00         B   441    				call sdc_send_byte
003A53 7B                  B   442    				ld a,e
003A54 CD DA 3A 00         B   443    				call sdc_send_byte
003A58 3E00                B   444    				ld a,0
003A5A CD DA 3A 00         B   445    				call sdc_send_byte
003A5E 78                  B   446    				ld a,b							003A5F CD DA 3A 00         B   447    				call sdc_send_byte
003A63 C9                  B   448    				ret
                           B   449    
                           B   450    ;----------------------------------------------
                           B   451    
003A64                     B   452    sdc_wait_ncr
                           B   453    	
003A64 C5                  B   454    				push bc
003A65 01000000            B   455    				ld bc,0
003A69 CD EA 3A 00         B   456    sdc_wncrl		call sdc_get_byte				003A6D CB7F                B   457    				bit 7,a							003A6F 28 05               B   458    				jr z,sdc_gcr
003A71 0B                  B   459    				dec bc
003A72 78                  B   460    			 	ld a,b
003A73 B1                  B   461    				or c
003A74 20 F3               B   462    				jr nz,sdc_wncrl
003A76 C1                  B   463    sdc_gcr			pop bc
003A77 C9                  B   464    				ret
                           B   465    	
                           B   466    ;----------------------------------------------
                           B   467    
003A78                     B   468    sdc_wait_data_token
                           B   469    
003A78 C5                  B   470    				push bc
003A79 01000000            B   471    				ld bc,0
003A7D CD EA 3A 00         B   472    sdc_wdt			call sdc_get_byte				003A81 FEFE                B   473    				cp 0feh
003A83 28 09               B   474    				jr z,sdc_gdt
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 141


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
003A85 0B                  B   475    				dec bc
003A86 78                  B   476    			 	ld a,b
003A87 B1                  B   477    				or c
003A88 20 F3               B   478    				jr nz,sdc_wdt
003A8A C1                  B   479    				pop bc
003A8B 3E01                B   480    				ld a,1							003A8D C9                  B   481    				ret
                           B   482    
003A8E C1                  B   483    sdc_gdt			pop bc
003A8F AF                  B   484    				xor a							003A90 C9                  B   485    				ret
                           B   486    
                           B   487    ;----------------------------------------------
                           B   488    
003A91                     B   489    sdc_send_eight_clocks
                           B   490    
003A91 3EFF                B   491    				ld a,0ffh
003A93 CD DA 3A 00         B   492    				call sdc_send_byte
003A97 C9                  B   493    				ret
                           B   494    
                           B   495    ;----------------------------------------------
                           B   496    	
003A98                     B   497    init_spi_mode_fail	
                           B   498    
003A98 3E00                B   499    				ld a,sdc_error_spi_mode_failed
003A9A F5                  B   500    fail_ret		push af
003A9B CD 04 3B 00         B   501    				call sdc_deselect_card
003A9F F1                  B   502    				pop af
003AA0 B7                  B   503    				or a
003AA1 C9                  B   504    				ret
                           B   505    				
                           B   506    ;----------------------------------------------
                           B   507    
003AA2                     B   508    mmc_init_fail
                           B   509    
003AA2 3E01                B   510    				ld a,sdc_error_bad_init_mmc
003AA4 18 F4               B   511    				jr fail_ret
                           B   512    
                           B   513    ;----------------------------------------------
                           B   514    
003AA6                     B   515    sdc_init_fail
                           B   516    
003AA6 3E02                B   517    				ld a,sdc_error_bad_init
003AA8 18 F0               B   518    				jr fail_ret
                           B   519    	
                           B   520    	
                           B   521    ;----------------------------------------------
                           B   522    
003AAA                     B   523    sdc_id_fail
                           B   524    
003AAA 3E03                B   525    				ld a,sdc_error_bad_id
003AAC 18 EC               B   526    				jr fail_ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 142


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver.asm
                           B   527    
                           B   528    ;----------------------------------------------
                           B   529    
003AAE                     B   530    sdc_bcr_error
                           B   531    
003AAE 3E04                B   532    				ld a,sdc_error_bad_command_resp
003AB0 18 E8               B   533    				jr fail_ret
                           B   534    	
                           B   535    ;----------------------------------------------
                           B   536    
003AB2                     B   537    sdc_dt_timeout
                           B   538    
003AB2 3E05                B   539    				ld a,sdc_error_data_token_timeo
003AB4 18 E4               B   540    				jr fail_ret
                           B   541    
                           B   542    ;----------------------------------------------
                           B   543    
003AB6                     B   544    sdc_write_fail
                           B   545    	
003AB6 3E07                B   546    				ld a,sdc_error_write_failed
003AB8 18 E0               B   547    				jr fail_ret
                           B   548    
                           B   549    ;----------------------------------------------
                           B   550    
003ABA                     B   551    sdc_card_busy_timeout
                           B   552    
003ABA 3E06                B   553    				ld a,sdc_error_write_timeout
003ABC 18 DC               B   554    				jr fail_ret
                           B   555    
                           B   556    ;----------------------------------------------
                           B   557    
003ABE 2076782E 7820534E   B   558    sdc_vnchars	db " vx.x SN:00000000      ",0,0,0,
003AC6 3A303030 30303030 
003ACE 30202020 20202000 
003AD6 000000 
                           B   559    
003AD9 00                  B   560    sdc_sdc		db 0	; 0 = Card is MMC type, 1 =
                           B   561    
                           B   562    ;==============================================
                           B   563    
                           B   564    
                           B   565    ;----------------------------------------------
                           B   566    
                           C     0    include "ez80p_sdcard_code.asm"				;ha
                           C     1    ;----------------------------------------------
                           C     2    ; eZ80P Specific SD card low-level routines v0.
                           C     3    ;----------------------------------------------
                           C     4    
003ADA                     C     5    sdc_send_byte
                           C     6    
                           C     7    ;Put byte to send to card in A
                           C     8    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 143


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_sdcard_code.asm
003ADA C5                  C     9    					push bc
003ADB 01030000            C    10    					ld bc,port_sdc_data
003ADF ED79                C    11    					out (bc),a					                           C    12    	
003AE1 0E01                C    13    					ld c,port_hw_flags			003AE3 ED7410              C    14    sdc_wb_loop			tstio 1<<sdc_serializer_bus
003AE6 20 FB               C    15    					jr nz,sdc_wb_loop
                           C    16    
003AE8 C1                  C    17    					pop bc
003AE9 C9                  C    18    					ret
                           C    19    
                           C    20    ;----------------------------------------------
                           C    21    
003AEA                     C    22    sdc_get_byte
                           C    23    
                           C    24    ; Returns byte read from card in A
                           C    25    
003AEA 3EFF                C    26    					ld a,0ffh
003AEC CD DA 3A 00         C    27    					call sdc_send_byte
003AF0 C5                  C    28    					push bc
003AF1 01030000            C    29    					ld bc,port_sdc_data
003AF5 ED78                C    30    					in a,(bc)					003AF7 C1                  C    31    					pop bc
003AF8 C9                  C    32    					ret
                           C    33    	
                           C    34    ;----------------------------------------------
                           C    35    
003AF9                     C    36    sdc_select_card
                           C    37    	
003AF9 C5                  C    38    					push bc
003AFA 01020000            C    39    					ld bc,port_sdc_ctrl
003AFE 3E02                C    40    					ld a,1<<sdc_cs				003B00 ED79                C    41    					out (bc),a
003B02 C1                  C    42    					pop bc
003B03 C9                  C    43    					ret
                           C    44    
                           C    45    
003B04                     C    46    sdc_deselect_card
                           C    47    
003B04 C5                  C    48    					push bc
003B05 01020000            C    49    					ld bc,port_sdc_ctrl
003B09 3E82                C    50    					ld a,080h+(1<<sdc_cs)		003B0B ED79                C    51    					out (bc),a
003B0D C1                  C    52    					pop bc
                           C    53    				
003B0E 3EFF                C    54    					ld a,0ffh					003B10 CD DA 3A 00         C    55    					call sdc_send_byte
003B14 C9                  C    56    					ret
                           C    57    	
                           C    58    ;----------------------------------------------
                           C    59    
003B15                     C    60    sdc_power_on
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 144


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_sdcard_code.asm
                           C    61    
003B15 C5                  C    62    					push bc
003B16 01020000            C    63    					ld bc,port_sdc_ctrl
003B1A 3E81                C    64    					ld a,80h+(1<<sdc_power)		003B1C ED79                C    65    					out (bc),a
003B1E C1                  C    66    					pop bc
003B1F C9                  C    67    					ret
                           C    68    	
                           C    69    
003B20                     C    70    sdc_power_off
                           C    71    	
003B20 C5                  C    72    					push bc						003B21 01020000            C    73    					ld bc,port_sdc_ctrl
003B25 3E01                C    74    					ld a,1<<sdc_power			003B27 ED79                C    75    					out (bc),a					003B29 C1                  C    76    					pop bc						003B2A C9                  C    77    					ret							                           C    78    	
                           C    79    
                           C    80    ;----------------------------------------------
                           C    81    
003B2B                     C    82    sdc_slow_clock
                           C    83    
003B2B C5                  C    84    					push bc
003B2C 01020000            C    85    					ld bc,port_sdc_ctrl
003B30 3E04                C    86    					ld a,1<<sdc_speed			003B32 ED79                C    87    					out (bc),a
003B34 C1                  C    88    					pop bc
003B35 C9                  C    89    					ret
                           C    90    
                           C    91    
003B36                     C    92    sdc_fast_clock
                           C    93    	
003B36 C5                  C    94    					push bc
003B37 01020000            C    95    					ld bc,port_sdc_ctrl
003B3B 3E84                C    96    					ld a,080h+(1<<sdc_speed)	003B3D ED79                C    97    					out (bc),a
003B3F C1                  C    98    					pop bc
003B40 C9                  C    99    					ret
                           C   100    
                           C   101    ;----------------------------------------------
                           B   568    
                           B   569    ;----------------------------------------------
                           A  3200    
                           A  3201    
                           A  3202    ;----------------------------------------------
                           A  3203    ; IO routines
                           A  3204    ;----------------------------------------------
                           A  3205    
                           B     0    	include		'ez80p_interrupt_code.asm'		                           B     1    ;----------------------------------------------
                           B     2    ; ez80p interrupt code v0.05 (MADL mode)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 145


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
                           B     3    ;----------------------------------------------
                           B     4    
003B41                     B     5    set_irq_vector
                           B     6    
003B41 AF                  B     7    				xor a
003B42 ED47                B     8    				ld i,a
003B44 3EC3                B     9    				ld a,c3h						003B46 32320000            B    10    				ld (032h),a	
003B4A 21 7C 3B 00         B    11    				ld hl,int_routine				003B4E 22330000            B    12    				ld (033h),hl
003B52 C9                  B    13    				ret
                           B    14    
                           B    15    
                           B    16    
003B53 21 1A 60 00         B    17    enable_os_irqs	ld hl,devices_connected			003B57 CB46                B    18    				bit 0,(hl)
003B59 C4 64 3B 00         B    19    				call nz,enable_kb_irq
003B5D CB4E                B    20    				bit 1,(hl)
003B5F C4 6A 3B 00         B    21    				call nz,enable_ms_irq
003B63 C9                  B    22    				ret
                           B    23    
                           B    24    
003B64 3E81                B    25    enable_kb_irq	ld a,10000001b
003B66 ED3905              B    26    				out0 (port_irq_ctrl),a			003B69 C9                  B    27    				ret
                           B    28    
003B6A 3E82                B    29    enable_ms_irq	ld a,10000010b
003B6C ED3905              B    30    				out0 (port_irq_ctrl),a			003B6F C9                  B    31    				ret
                           B    32    
003B70 3E02                B    33    disable_ms_irq	ld a,00000010b
003B72 ED3905              B    34    				out0 (port_irq_ctrl),a			003B75 C9                  B    35    				ret
                           B    36    
003B76 3E3F                B    37    disable_irqs	ld a,00111111b
003B78 ED3905              B    38    				out0 (port_irq_ctrl),a			003B7B C9                  B    39    				ret
                           B    40    			
                           B    41    ;----------------------------------------------
                           B    42    
                           B    43    
003B7C                     B    44    int_routine
003B7C F5                  B    45    				push af							003B7D ED3807              B    46    				in0 a,(port_ps2_ctrl)			003B80 CB67                B    47    				bit 4,a
003B82 C4 94 3B 00         B    48    				call nz,kb_interrupt_handler
003B86 ED3807              B    49    				in0 a,(port_ps2_ctrl)			003B89 CB6F                B    50    				bit 5,a
003B8B C4 36 3C 00         B    51    				call nz,ms_interrupt_handler
003B8F F1                  B    52    				pop af
                           B    53    
003B90 FB                  B    54    				ei								Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 146


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
003B91 5BED4D              B    55    				reti.l							                           B    56    
                           B    57    ;----------------------------------------------
                           B    58    ; Keyboard IRQ routine v0.03
                           B    59    ;----------------------------------------------
                           B    60    
003B94                     B    61    kb_interrupt_handler
                           B    62    
                           B    63    ;--- irq test ---------------------------------
                           B    64    
                           B    65    ;				push bc
                           B    66    ;				ld a,0ffh
                           B    67    ;				ld (hw_palette),a
                           B    68    ;				ld b,0
                           B    69    ;testlp1		djnz testlp1
                           B    70    ;				ld a,0
                           B    71    ;				ld (hw_palette),a
                           B    72    ;				pop bc
                           B    73    				
                           B    74    ;--- end of test ------------------------------
                           B    75    
                           B    76    
003B94 E5                  B    77    				push hl							003B95 C5                  B    78    				push bc
                           B    79    				
003B96 ED3802              B    80    key_loop		in0 a,(port_keyboard_data)		003B99 47                  B    81    				ld b,a
                           B    82    
003B9A 3A E5 61 00         B    83    				ld a,(key_release_mode)
003B9E B7                  B    84    				or a
003B9F 28 20               B    85    				jr z,key_pressed
                           B    86    			
003BA1 78                  B    87    				ld a,b							003BA2 FEE0                B    88    				cp 0e0h							003BA4 28 61               B    89    				jr z,kirq_done	
003BA6 FEE1                B    90    				cp 0e1h
003BA8 28 5D               B    91    				jr z,kirq_done	
                           B    92    				
003BAA CD 11 3C 00         B    93    				call qualifiers					003BAE 7D                  B    94    				ld a,l
003BAF 2F                  B    95    				cpl
003BB0 6F                  B    96    				ld l,a
003BB1 3A E7 61 00         B    97    				ld a,(key_mod_flags)
003BB5 A5                  B    98    				and l							003BB6 32 E7 61 00         B    99    				ld (key_mod_flags),a
003BBA AF                  B   100    				xor a
003BBB 32 E5 61 00         B   101    				ld (key_release_mode),a
003BBF 18 46               B   102    				jr kirq_done
                           B   103    	
                           B   104    
003BC1 78                  B   105    key_pressed		ld a,b							003BC2 FEE0                B   106    				cp 0e0h							Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 147


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
003BC4 28 41               B   107    				jr z,kirq_done	
003BC6 FEE1                B   108    				cp 0e1h
003BC8 28 3D               B   109    				jr z,kirq_done	
                           B   110    			
003BCA FEF0                B   111    				cp 0f0h							003BCC 20 08               B   112    				jr nz,not_krel
003BCE 3E01                B   113    				ld a,1							003BD0 32 E5 61 00         B   114    				ld (key_release_mode),a			003BD4 18 31               B   115    				jr kirq_done
                           B   116    	
                           B   117    	
003BD6 CD 11 3C 00         B   118    not_krel		call qualifiers					003BDA 3A E7 61 00         B   119    				ld a,(key_mod_flags)			003BDE B5                  B   120    				or l
003BDF 32 E7 61 00         B   121    				ld (key_mod_flags),a			003BE3 68                  B   122    				ld l,b
003BE4 01000000            B   123    				ld bc,0
003BE8 3A E3 61 00         B   124    				ld a,(key_buf_wr_idx)
003BEC 4F                  B   125    				ld c,a
003BED 7D                  B   126    				ld a,l
003BEE 21 C3 61 00         B   127    				ld hl,scancode_buffer
003BF2 09                  B   128    				add hl,bc
003BF3 77                  B   129    				ld (hl),a						003BF4 0E10                B   130    				ld c,16
003BF6 09                  B   131    				add hl,bc
003BF7 3A E7 61 00         B   132    				ld a,(key_mod_flags)			003BFB 77                  B   133    				ld (hl),a	
003BFC 3A E3 61 00         B   134    				ld a,(key_buf_wr_idx)
003C00 3C                  B   135    				inc a
003C01 E60F                B   136    				and 15
003C03 32 E3 61 00         B   137    				ld (key_buf_wr_idx),a			                           B   138    				
003C07 ED3807              B   139    kirq_done		in0 a,(port_ps2_ctrl)			003C0A CB67                B   140    				bit 4,a	
003C0C 20 88               B   141    				jr nz,key_loop
                           B   142    
003C0E C1                  B   143    				pop bc
003C0F E1                  B   144    				pop hl
003C10 C9                  B   145    				ret
                           B   146    
                           B   147    
003C11 2E40                B   148    qualifiers		ld l,040h		;apps
003C13 FE2F                B   149    				cp 02fh
003C15 C8                  B   150    				ret z
                           B   151    			
003C16 2E20                B   152    				ld l,020h		;r gui
003C18 FE27                B   153    				cp 027h
003C1A C8                  B   154    				ret z
                           B   155    			
003C1B 2E10                B   156    				ld l,010h		;r shift
003C1D FE59                B   157    				cp 059h
003C1F C8                  B   158    				ret z
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 148


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
                           B   159    			
003C20 2E08                B   160    				ld l,08h		; alt
003C22 FE11                B   161    				cp 011h
003C24 C8                  B   162    				ret z
                           B   163    			
003C25 2E04                B   164    				ld l,04h		; l gui
003C27 FE1F                B   165    				cp 01fh
                           B   166    			
003C29 2E02                B   167    				ld l,02h		;l ctrl / r ctr
003C2B FE14                B   168    				cp 14h
003C2D C8                  B   169    				ret z
                           B   170    			
003C2E 2E01                B   171    				ld l,01h		;l shift
003C30 FE12                B   172    				cp 12h
003C32 C8                  B   173    				ret z
                           B   174    				
003C33 2E00                B   175    				ld l,0
003C35 C9                  B   176    				ret
                           B   177    
                           B   178    ;----------------------------------------------
                           B   179    ; Mouse IRQ routine v0.03
                           B   180    ;----------------------------------------------
                           B   181    
003C36                     B   182    ms_interrupt_handler
                           B   183    
                           B   184    ;--- irq test ---------------------------------
                           B   185    
                           B   186    ;				push bc
                           B   187    ;				ld a,0ffh
                           B   188    ;				ld (hw_palette),a
                           B   189    ;				ld b,0
                           B   190    ;testlp1		djnz testlp1
                           B   191    ;				ld a,0
                           B   192    ;				ld (hw_palette),a
                           B   193    ;				pop bc
                           B   194    				
                           B   195    ;--- end of test ------------------------------
                           B   196    
                           B   197    
003C36 C5                  B   198    				push bc							003C37 D5                  B   199    				push de							003C38 E5                  B   200    				push hl							                           B   201    							
003C39 11000000            B   202    ms_loop			ld de,0		
003C3D 3A F0 61 00         B   203    				ld a,(mouse_packet_index)		003C41 5F                  B   204    				ld e,a
003C42 21 EC 61 00         B   205    				ld hl,mouse_packet	
003C46 19                  B   206    				add hl,de
003C47 ED3806              B   207    				in0 a,(port_mouse_data)
003C4A 77                  B   208    				ld (hl),a
                           B   209    								
003C4B 21 EB 61 00         B   210    				ld hl,mouse_packet_size
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 149


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
003C4F 1C                  B   211    				inc e							003C50 7B                  B   212    				ld a,e
003C51 BE                  B   213    				cp (hl)
003C52 20 4F               B   214    				jr nz,msubpkt
                           B   215    
003C54 3A EC 61 00         B   216    				ld a,(mouse_packet)				003C58 4F                  B   217    				ld c,a	
003C59 E607                B   218    				and 0111b
003C5B 32 F1 61 00         B   219    				ld (mouse_buttons),a
                           B   220    				
003C5F 11000000            B   221    				ld de,0							003C63 CB61                B   222    				bit 4,c
003C65 28 01               B   223    				jr z,mxsignpos
003C67 1B                  B   224    				dec de
003C68 3A ED 61 00         B   225    mxsignpos		ld a,(mouse_packet+1)
003C6C 5F                  B   226    				ld e,a
003C6D 2A F2 61 00         B   227    				ld hl,(mouse_disp_x)
003C71 19                  B   228    				add hl,de
003C72 22 F2 61 00         B   229    				ld (mouse_disp_x),hl
                           B   230    				
003C76 11000000            B   231    				ld de,0							003C7A CB69                B   232    				bit 5,c
003C7C 28 01               B   233    				jr z,mysignpos
003C7E 1B                  B   234    				dec de
003C7F 3A EE 61 00         B   235    mysignpos		ld a,(mouse_packet+2)
003C83 5F                  B   236    				ld e,a
003C84 2A F5 61 00         B   237    				ld hl,(mouse_disp_y)			003C88 AF                  B   238    				xor a							003C89 ED52                B   239    				sbc hl,de
003C8B 22 F5 61 00         B   240    				ld (mouse_disp_y),hl
                           B   241    				
003C8F 21 EF 61 00         B   242    				ld hl,mouse_packet+3			003C93 3A F8 61 00         B   243    				ld a,(mouse_wheel)
003C97 86                  B   244    				add a,(hl)
003C98 32 F8 61 00         B   245    				ld (mouse_wheel),a
                           B   246    				
003C9C 3E01                B   247    				ld a,1
003C9E 32 F9 61 00         B   248    				ld (mouse_updated),a			                           B   249    				
003CA2 AF                  B   250    				xor a
003CA3 32 F0 61 00         B   251    msubpkt			ld (mouse_packet_index),a
                           B   252    				
003CA7 ED3807              B   253    				in0 a,(port_ps2_ctrl)			003CAA CB6F                B   254    				bit 5,a
003CAC 20 8B               B   255    				jr nz,ms_loop				
                           B   256    				
003CAE E1                  B   257    				pop hl
003CAF D1                  B   258    				pop de
003CB0 C1                  B   259    				pop bc
003CB1 C9                  B   260    				ret
                           B   261    				
                           B   262    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 150


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
                           B   263    ; ez80p NMI code v0.02
                           B   264    ;----------------------------------------------
                           B   265    
003CB2                     B   266    nmi_routine
003CB2 CD 2E 13 00         B   267    				call os_store_CPU_regs
                           B   268    				
003CB6 21000000            B   269    				ld hl,0
003CBA 39                  B   270    				add hl,sp
003CBB 7E                  B   271    				ld a,(hl)						003CBC E601                B   272    				and 1
003CBE 32 4B 60 00         B   273    				ld (store_adl),a
003CC2 20 0A               B   274    				jr nz,adl_freeze
003CC4 23                  B   275    				inc hl
003CC5 5E                  B   276    				ld e,(hl)						003CC6 23                  B   277    				inc hl
003CC7 56                  B   278    				ld d,(hl)
003CC8 CD B1 15 00         B   279    				call mbase_de
003CCC 18 02               B   280    				jr got_pc
                           B   281    				
003CCE 33                  B   282    adl_freeze		inc sp
003CCF D1                  B   283    				pop de							003CD0 ED53 41 60 00       B   284    got_pc			ld (store_pc),de				                           B   285    				
003CD5 CD FE 3C 00         B   286    				call disable_nmi
003CD9 ED3906              B   287    				out0 (port_nmi_ack),a			003CDC 3E01                B   288    				ld a,1
003CDE 32 18 60 00         B   289    				ld (frozen),a
003CE2 C3 48 0A 00         B   290    				jp os_cold_start				                           B   291    
                           B   292    ;----------------------------------------------
                           B   293    
                           B   294    ;nmi_routine
                           B   295    ;
                           B   296    ;				push af							                           B   297    ;				push bc
                           B   298    ;				ld a,0ffh
                           B   299    ;				ld (hw_palette),a
                           B   300    ;				ld b,0
                           B   301    ;nmi_testlp2		djnz nmi_testlp2
                           B   302    ;				ld a,0
                           B   303    ;				ld (hw_palette),a
                           B   304    ;				pop bc
                           B   305    ;				pop af
                           B   306    ;				out0 (port_nmi_ack),a			                           B   307    ;				retn.l							                           B   308    
                           B   309    ;----------------------------------------------
                           B   310    
003CE6                     B   311    set_nmi_vector
                           B   312    
003CE6 3EC3                B   313    				ld a,0c3h						003CE8 32660000            B   314    				ld (066h),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 151


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
003CEC 21 B2 3C 00         B   315    				ld hl,nmi_routine				003CF0 22670000            B   316    				ld (067h),hl
003CF4 C9                  B   317    				ret
                           B   318    
                           B   319    ;----------------------------------------------
                           B   320    
003CF5 ED3906              B   321    enable_nmi		out0 (port_nmi_ack),a			003CF8 3EC0                B   322    				ld a,11000000b					003CFA ED3905              B   323    				out0 (port_irq_ctrl),a
003CFD C9                  B   324    				ret
                           B   325    
003CFE 3E40                B   326    disable_nmi		ld a,01000000b					003D00 ED3905              B   327    				out0 (port_irq_ctrl),a
003D03 C9                  B   328    				ret
                           B   329    
                           B   330    ;----------------------------------------------
                           B   331    
                           B     0    	include		'ez80p_rs232_code.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; ez80p low level RS232 code v0.03 (ADL mode)
                           B     3    ;----------------------------------------------
                           B     4    		
003D04                     B     5    receive_serial_byte
                           B     6    
                           B     7    ; If zero flag set on return OK, A = received b
                           B     8    ; Else timed out (and also A = error $83: time 
                           B     9    
003D04 C5                  B    10    				push bc
003D05 3A A5 5E 00         B    11    				ld a,(serial_timeout)
003D09 47                  B    12    				ld b,a
003D0A 3ECC                B    13    rx_set_timer	ld a,cch
003D0C ED3981              B    14    				out0 (TMR0_RR_L),a				003D0F 3E0C                B    15    				ld a,0ch
003D11 ED3982              B    16    				out0 (TMR0_RR_H),a				003D14 3E03                B    17    				ld a,00000011b					003D16 ED3980              B    18    				out0 (TMR0_CTL),a				003D19 ED3880              B    19    				in0 a,(TMR0_CTL)				                           B    20    				
003D1C 0EC5                B    21    rx_byte_lp		ld c,UART0_LSR					003D1E ED7401              B    22    				tstio 1							003D21 20 0E               B    23    				jr nz,rx_in_buffer
003D23 AF                  B    24    				xor a
003D24 B0                  B    25    				or b
003D25 28 13               B    26    				jr z,rx_time_out
003D27 0E80                B    27    				ld c,TMR0_CTL	
003D29 ED7480              B    28    				tstio 128						003D2C 28 EE               B    29    				jr z,rx_byte_lp		
003D2E 05                  B    30    				dec b
003D2F 18 D9               B    31    				jr rx_set_timer
                           B    32    
003D31 01C00000            B    33    rx_in_buffer	ld bc,UART0_RBR
003D35 ED78                B    34    				in a,(bc)						Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 152


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_rs232_code.asm
003D37 C1                  B    35    				pop bc
003D38 BF                  B    36    				cp a							003D39 C9                  B    37    				ret
                           B    38    
003D3A C1                  B    39    rx_time_out		pop bc
003D3B 3E83                B    40    				ld a,083h						003D3D B7                  B    41    				or a							003D3E C9                  B    42    				ret
                           B    43    
                           B    44    
                           B    45    
                           B    46    ;----------------------------------------------
                           B    47    
003D3F                     B    48    send_serial_byte
                           B    49    
                           B    50    ; set A to the byte to send
                           B    51    
003D3F C5                  B    52    				push bc
003D40 0EC5                B    53    				ld c,UART0_LSR					003D42 ED7420              B    54    rs232_swait		tstio 020h						003D45 28 FB               B    55    				jr z,rs232_swait
003D47 01C00000            B    56    				ld bc,UART0_THR
003D4B ED79                B    57    				out (c),a						003D4D C1                  B    58    				pop bc
003D4E C9                  B    59    				ret
                           B    60    
                           B    61    ;----------------------------------------------
                           B    62    
003D4F                     B    63    send_serial_bytes
                           B    64    
                           B    65    ; set D to the first byte to send
                           B    66    ; and E to the second byte to send
                           B    67    
003D4F 7A                  B    68    				ld a,d
003D50 CD 3F 3D 00         B    69    				call send_serial_byte
003D54 7B                  B    70    				ld a,e
003D55 CD 3F 3D 00         B    71    				call send_serial_byte
003D59 C9                  B    72    				ret
                           B    73    
                           B    74    ;----------------------------------------------
                           B    75    
003D5A                     B    76    hwsc_flush_serial_buffer
                           B    77    
003D5A C5                  B    78    				push bc
003D5B 01C00000            B    79    				ld bc,UART0_RBR
003D5F ED78                B    80    				in a,(bc)						003D61 C1                  B    81    				pop bc
003D62 C9                  B    82    				ret
                           B    83    
                           B    84    ;----------------------------------------------
                           B    85    		
                           B     0    	include		'ez80p_video_code.asm'
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 153


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
                           B     1    ;---------------------------------
                           B     2    ; ez80p-specific video code v0.10
                           B     3    ; Character Mode Routines
                           B     4    ;---------------------------------
                           B     5    
       00804000            B     6    charmap_addr	equ vram_a_addr+04000h			                           B     7    
003D63                     B     8    set_charmap_parameters
                           B     9    
                           B    10    ;set
                           B    11    ; a = line/pixel doubling (bit 0 = line double,
                           B    12    ; b = columns
                           B    13    ; c = rows
                           B    14    
003D63 E603                B    15    				and 3
003D65 32 76 5E 00         B    16    				ld (video_doubling),a
003D69 79                  B    17    				ld a,c
003D6A 32 77 5E 00         B    18    				ld (charmap_rows),a
003D6E 78                  B    19    				ld a,b
003D6F 32 7A 5E 00         B    20    				ld (charmap_columns),a
003D73 21000000            B    21    				ld hl,0
003D77 69                  B    22    				ld l,c
003D78 60                  B    23    				ld h,b
003D79 ED6C                B    24    				mlt hl
003D7B 29                  B    25    				add hl,hl
003D7C 22 24 60 00         B    26    				ld (charmap_size),hl
003D80 11004080            B    27    				ld de,charmap_addr
003D84 19                  B    28    				add hl,de
003D85 22 1E 60 00         B    29    				ld (vram_a_os_highest),hl		                           B    30    				
003D89 CD 8F 3D 00         B    31    				call os_set_video_hw_regs
003D8D AF                  B    32    				xor a
003D8E C9                  B    33    				ret
                           B    34    				
                           B    35    
003D8F                     B    36    os_set_video_hw_regs
                           B    37    
003D8F 3A 76 5E 00         B    38    				ld a,(video_doubling)
003D93 CB27                B    39    				sla a
003D95 F618                B    40    				or 00011000b
003D97 320018FF            B    41    				ld (video_control),a			003D9B AF                  B    42    				xor a
003D9C 320218FF            B    43    				ld (bgnd_palette_select),a
003DA0 3E63                B    44    				ld a,99
003DA2 320418FF            B    45    				ld (right_border_position),a
                           B    46    
003DA6 DD210010 FF         B    47    				ld ix,tilemap_parameters		003DAB 21004080            B    48    				ld hl,charmap_addr
003DAF DD2F00              B    49    				ld (ix),hl			   			                           B    50    
003DB2 21020000            B    51    				ld hl,2
003DB6 DD2F04              B    52    				ld (ix+04h),hl					Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 154


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
                           B    53    				
003DB9 21000008            B    54    				ld hl,80000h
003DBD 11000000            B    55    				ld de,0
003DC1 3A 7A 5E 00         B    56    				ld a,(charmap_columns)
003DC5 5F                  B    57    				ld e,a
003DC6 AF                  B    58    				xor a
003DC7 ED52                B    59    				sbc hl,de
003DC9 AF                  B    60    				xor a
003DCA ED52                B    61    				sbc hl,de
003DCC DD2F08              B    62    				ld (ix+08h),hl					                           B    63    				
003DCF 21000000            B    64    				ld hl,0
003DD3 DD2F0C              B    65    				ld (ix+0ch),hl					                           B    66    				
003DD6 3A 7A 5E 00         B    67    				ld a,(charmap_columns)
003DDA 3D                  B    68    				dec a
003DDB DD7710              B    69    				ld (ix+10h),a					                           B    70    				
003DDE 3E00                B    71    				ld a,0
003DE0 DD7711              B    72    				ld (ix+11h),a					003DE3 DD7712              B    73    				ld (ix+12h),a					                           B    74    
003DE6 21 51 5E 00         B    75    				ld hl,pen_palette
003DEA CD F0 3D 00         B    76    				call hswc_set_ui_colours
                           B    77    				
003DEE AF                  B    78    				xor a							003DEF C9                  B    79    				ret
                           B    80    
                           B    81    ;----------------------------------------------
                           B    82    				
003DF0                     B    83    hswc_set_ui_colours
                           B    84    
003DF0 110000FF            B    85    				ld de,hw_palette
003DF4 01200000            B    86    				ld bc,16*2
003DF8 EDB0                B    87    				ldir
003DFA AF                  B    88    				xor a							003DFB C9                  B    89    				ret
                           B    90    
                           B    91    
                           B    92    ;----------------------------------------------
                           B    93    
003DFC                     B    94    hwsc_clear_screen
                           B    95    
003DFC 21004080            B    96    				ld hl,charmap_addr				003E00 3620                B    97    				ld (hl),32						003E02 23                  B    98    				inc hl
003E03 CD 22 3E 00         B    99    				call get_fill_attr
003E07 77                  B   100    				ld (hl),a
003E08 23                  B   101    				inc hl
003E09 EB                  B   102    				ex de,hl
003E0A 21004080            B   103    				ld hl,charmap_addr
003E0E ED4B 24 60 00       B   104    				ld bc,(charmap_size)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 155


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003E13 0B                  B   105    				dec bc
003E14 0B                  B   106    				dec bc
003E15 EDB0                B   107    				ldir
                           B   108    				
003E17 01000000            B   109    				ld bc,0
003E1B ED43 B3 60 00       B   110    				ld (cursor_y),bc
003E20 AF                  B   111    				xor a							003E21 C9                  B   112    				ret
                           B   113    				
                           B   114    				
003E22 D5                  B   115    get_fill_attr	push de
003E23 3A 4D 5E 00         B   116    				ld a,(current_pen)
003E27 E60F                B   117    				and 0fh
003E29 5F                  B   118    				ld e,a
003E2A 3A 4F 5E 00         B   119    				ld a,(background_colour)
003E2E 0F                  B   120    				rrca
003E2F 0F                  B   121    				rrca
003E30 0F                  B   122    				rrca
003E31 0F                  B   123    				rrca
003E32 E6F0                B   124    				and 0f0h
003E34 B3                  B   125    				or e
003E35 D1                  B   126    				pop de
003E36 C9                  B   127    				ret
                           B   128    				
                           B   129    
                           B   130    ;----------------------------------------------
                           B   131    
003E37                     B   132    hwsc_scroll_up	
                           B   133    				
003E37 C5                  B   134    				push bc
003E38 D5                  B   135    				push de
003E39 E5                  B   136    				push hl
                           B   137    
003E3A 2A 24 60 00         B   138    				ld hl,(charmap_size)
003E3E ED5B 7A 5E 00       B   139    				ld de,(charmap_columns)
003E43 AF                  B   140    				xor a
003E44 ED52                B   141    				sbc hl,de
003E46 ED52                B   142    				sbc hl,de						003E48 E5                  B   143    				push hl
003E49 C1                  B   144    				pop bc							003E4A 21004080            B   145    				ld hl,charmap_addr
003E4E E5                  B   146    				push hl
003E4F 19                  B   147    				add hl,de
003E50 19                  B   148    				add hl,de
003E51 D1                  B   149    				pop de
003E52 EDB0                B   150    				ldir
                           B   151    				
003E54 EB                  B   152    				ex de,hl						003E55 E5                  B   153    				push hl
003E56 3620                B   154    				ld (hl),32
003E58 23                  B   155    				inc hl
003E59 CD 22 3E 00         B   156    				call get_fill_attr
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 156


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003E5D 77                  B   157    				ld (hl),a
003E5E 2A 7A 5E 00         B   158    				ld hl,(charmap_columns)
003E62 2B                  B   159    				dec hl
003E63 29                  B   160    				add hl,hl
003E64 E5                  B   161    				push hl
003E65 C1                  B   162    				pop bc
003E66 E1                  B   163    				pop hl
003E67 E5                  B   164    				push hl
003E68 D1                  B   165    				pop de
003E69 13                  B   166    				inc de
003E6A 13                  B   167    				inc de
003E6B EDB0                B   168    				ldir
                           B   169    				
003E6D E1                  B   170    				pop hl
003E6E D1                  B   171    				pop de
003E6F C1                  B   172    				pop bc
003E70 AF                  B   173    				xor a							003E71 C9                  B   174    				ret
                           B   175    
                           B   176    
                           B   177    ;----------------------------------------------
                           B   178    
003E72                     B   179    hwsc_plot_char
                           B   180    
                           B   181    ; Set:
                           B   182    ; ----
                           B   183    ; A = ascii char
                           B   184    ; B = x character coordinate 
                           B   185    ; C = y character coordinate
                           B   186    
003E72 E5                  B   187    				push hl							003E73 D5                  B   188    				push de
003E74 F5                  B   189    				push af
                           B   190    
003E75 3A 77 5E 00         B   191    				ld a,(charmap_rows)				003E79 3D                  B   192    				dec a
003E7A B9                  B   193    				cp c							003E7B 38 08               B   194    				jr c,win_err
003E7D 3A 7A 5E 00         B   195    				ld a,(charmap_columns)
003E81 3D                  B   196    				dec a
003E82 B8                  B   197    				cp b
003E83 30 07               B   198    				jr nc,win_ok
003E85 F1                  B   199    win_err			pop af
003E86 D1                  B   200    				pop de
003E87 E1                  B   201    				pop hl
003E88 3E88                B   202    				ld a,88h						003E8A B7                  B   203    				or a
003E8B C9                  B   204    				ret
                           B   205    				
003E8C 2A 7A 5E 00         B   206    win_ok			ld hl,(charmap_columns)			003E90 61                  B   207    				ld h,c
003E91 ED6C                B   208    				mlt hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 157


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003E93 11000000            B   209    				ld de,0
003E97 58                  B   210    				ld e,b
003E98 19                  B   211    				add hl,de
003E99 29                  B   212    				add hl,hl
003E9A 11004080            B   213    				ld de,charmap_addr
003E9E 19                  B   214    				add hl,de
003E9F F1                  B   215    				pop af
003EA0 77                  B   216    				ld (hl),a
003EA1 23                  B   217    				inc hl
003EA2 3A 4D 5E 00         B   218    				ld a,(current_pen)
003EA6 77                  B   219    				ld (hl),a
003EA7 D1                  B   220    				pop de
003EA8 E1                  B   221    				pop hl
003EA9 AF                  B   222    				xor a
003EAA C9                  B   223    				ret
                           B   224    				
                           B   225    				
                           B   226    ;----------------------------------------------
                           B   227    
003EAB                     B   228    hwsc_remove_cursor
                           B   229    
003EAB 3A 73 5E 00         B   230    				ld a,(cursor_present)			003EAF B7                  B   231    				or a
003EB0 C8                  B   232    				ret z
003EB1 ED4B B3 60 00       B   233    				ld bc,(cursor_y)
003EB6 CD 19 3F 00         B   234    				call hwsc_get_charmap_addr_xy
003EBA 3A 72 5E 00         B   235    				ld a,(char_under_cursor)
003EBE 77                  B   236    				ld (hl),a
003EBF AF                  B   237    				xor a
003EC0 32 73 5E 00         B   238    				ld (cursor_present),a
003EC4 C9                  B   239    				ret
                           B   240    
                           B   241    
003EC5                     B   242    hwsc_draw_cursor
                           B   243    								
003EC5 3A 73 5E 00         B   244    				ld a,(cursor_present)			003EC9 B7                  B   245    				or a
003ECA C0                  B   246    				ret nz
003ECB 3C                  B   247    				inc a
003ECC 32 73 5E 00         B   248    				ld (cursor_present),a
                           B   249    				
003ED0 ED4B B3 60 00       B   250    				ld bc,(cursor_y)
003ED5 CD 19 3F 00         B   251    				call hwsc_get_charmap_addr_xy
003ED9 7E                  B   252    				ld a,(hl)						003EDA 32 72 5E 00         B   253    				ld (char_under_cursor),a		003EDE 36FF                B   254    				ld (hl),ffh						                           B   255    				
003EE0 11400000            B   256    				ld de,64						003EE4 57                  B   257    				ld d,a
003EE5 ED5C                B   258    				mlt de
003EE7 FD210000 80         B   259    				ld iy,vram_a_addr				003EEC FD19                B   260    				add iy,de						Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 158


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
                           B   261    				
003EEE 21400000            B   262    				ld hl,64
003EF2 3A 75 5E 00         B   263    				ld a,(cursor_image_char)
003EF6 67                  B   264    				ld h,a
003EF7 ED6C                B   265    				mlt hl
003EF9 11000080            B   266    				ld de,vram_a_addr
003EFD 19                  B   267    				add hl,de
                           B   268    				
003EFE DD21C03F 80         B   269    				ld ix,vram_a_addr+03fc0h
003F03 11080000            B   270    				ld de,8
003F07 0608                B   271    				ld b,8
003F09 FD7E00              B   272    cur_loop		ld a,(iy)						003F0C AE                  B   273    				xor (hl)						003F0D DD7700              B   274    				ld (ix),a						003F10 FD19                B   275    				add iy,de
003F12 DD19                B   276    				add ix,de
003F14 19                  B   277    				add hl,de
003F15 10 F2               B   278    				djnz cur_loop
                           B   279    				
003F17 AF                  B   280    				xor a
003F18 C9                  B   281    				ret
                           B   282    				
                           B   283    
                           B   284    ;----------------------------------------------
                           B   285    
003F19                     B   286    hwsc_get_charmap_addr_xy
                           B   287    
                           B   288    ; returns address of charmap in xHL for charact
                           B   289    ; and attrmap in xDE
                           B   290    				
003F19 2A 7A 5E 00         B   291    				ld hl,(charmap_columns)			003F1D 61                  B   292    				ld h,c
003F1E ED6C                B   293    				mlt hl
003F20 11000000            B   294    				ld de,0
003F24 58                  B   295    				ld e,b
003F25 19                  B   296    				add hl,de
003F26 29                  B   297    				add hl,hl
003F27 11004080            B   298    				ld de,charmap_addr
003F2B 19                  B   299    				add hl,de
003F2C E5                  B   300    				push hl
003F2D D1                  B   301    				pop de
003F2E 13                  B   302    				inc de
003F2F AF                  B   303    				xor a
003F30 C9                  B   304    				ret
                           B   305    								
                           B   306    ;----------------------------------------------
                           B   307    
003F31                     B   308    hwsc_chars_left
                           B   309    
                           B   310    ; moves characters (in character map) on the cu
                           B   311    
003F31 E5                  B   312    				push hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 159


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003F32 D5                  B   313    				push de
003F33 C5                  B   314    				push bc
                           B   315    				
003F34 2A 7A 5E 00         B   316    				ld hl,(charmap_columns)
003F38 3A B3 60 00         B   317    				ld a,(cursor_y)
003F3C 67                  B   318    				ld h,a
003F3D ED6C                B   319    				mlt hl
003F3F 11000000            B   320    				ld de,0
003F43 58                  B   321    				ld e,b
003F44 19                  B   322    				add hl,de
003F45 29                  B   323    				add hl,hl
003F46 11004080            B   324    				ld de,charmap_addr
003F4A 19                  B   325    				add hl,de
                           B   326    				
003F4B 3A 7A 5E 00         B   327    				ld a,(charmap_columns)
003F4F 90                  B   328    				sub b
003F50 CB27                B   329    				sla a
003F52 01000000            B   330    				ld bc,0
003F56 4F                  B   331    				ld c,a
003F57 E5                  B   332    				push hl
003F58 D1                  B   333    				pop de
003F59 1B                  B   334    				dec de
003F5A 1B                  B   335    				dec de
003F5B EDB0                B   336    				ldir
                           B   337    				
003F5D 3E20                B   338    				ld a,32						;pu
003F5F 12                  B   339    				ld (de),a
003F60 13                  B   340    				inc de
003F61 CD 22 3E 00         B   341    				call get_fill_attr
003F65 12                  B   342    				ld (de),a
                           B   343    				
003F66 C1                  B   344    				pop bc
003F67 D1                  B   345    				pop de
003F68 E1                  B   346    				pop hl
003F69 C9                  B   347    				ret
                           B   348    
                           B   349    
                           B   350    ;----------------------------------------------
                           B   351    
                           B   352    
003F6A                     B   353    hwsc_chars_right
                           B   354    
                           B   355    ; moves characters on current line right from c
                           B   356    
003F6A C5                  B   357    				push bc
003F6B D5                  B   358    				push de
003F6C E5                  B   359    				push hl
                           B   360    	
003F6D 21 B4 60 00         B   361    				ld hl,cursor_x				
003F71 3A 7A 5E 00         B   362    				ld a,(charmap_columns)
003F75 3D                  B   363    				dec a
003F76 BE                  B   364    				cp (hl)			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 160


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003F77 28 30               B   365    				jr z,chright_end
003F79 46                  B   366    				ld b,(hl)
                           B   367    				
003F7A 2A 7A 5E 00         B   368    				ld hl,(charmap_columns)
003F7E 3A B3 60 00         B   369    				ld a,(cursor_y)
003F82 3C                  B   370    				inc a							003F83 67                  B   371    				ld h,a
003F84 ED6C                B   372    				mlt hl
003F86 29                  B   373    				add hl,hl
003F87 11004080            B   374    				ld de,charmap_addr
003F8B 19                  B   375    				add hl,de					
003F8C 2B                  B   376    				dec hl							003F8D E5                  B   377    				push hl
003F8E D1                  B   378    				pop de							003F8F 2B                  B   379    				dec hl
003F90 2B                  B   380    				dec hl							003F91 3A 7A 5E 00         B   381    				ld a,(charmap_columns)
003F95 90                  B   382    				sub b
003F96 3D                  B   383    				dec a
003F97 CB27                B   384    				sla a
003F99 01000000            B   385    				ld bc,0
003F9D 4F                  B   386    				ld c,a							003F9E EDB8                B   387    				lddr
003FA0 23                  B   388    				inc hl							003FA1 3620                B   389    				ld (hl),32
003FA3 23                  B   390    				inc hl
003FA4 CD 22 3E 00         B   391    				call get_fill_attr
003FA8 77                  B   392    				ld (hl),a
                           B   393    							
003FA9 E1                  B   394    chright_end		pop hl	
003FAA D1                  B   395    				pop de
003FAB C1                  B   396    				pop bc
003FAC C9                  B   397    				ret
                           B   398    
                           B   399    ;----------------------------------------------
                           B   400    
                           B   401    
003FAD                     B   402    hwsc_charline_to_command_string	
                           B   403    				
                           B   404    				
003FAD 2A 7A 5E 00         B   405    				ld hl,(charmap_columns)			003FB1 3A B3 60 00         B   406    				ld a,(cursor_y)
003FB5 67                  B   407    				ld h,a
003FB6 ED6C                B   408    				mlt hl
003FB8 29                  B   409    				add hl,hl
003FB9 11004080            B   410    				ld de,charmap_addr
003FBD 19                  B   411    				add hl,de
003FBE 11 D1 60 00         B   412    				ld de,commandstring
003FC2 0650                B   413    				ld b,max_buffer_chars			003FC4 7E                  B   414    copy_to_cmdline	ld a,(hl)
003FC5 12                  B   415    				ld (de),a
003FC6 13                  B   416    				inc de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 161


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
003FC7 23                  B   417    				inc hl
003FC8 23                  B   418    				inc hl
003FC9 10 F9               B   419    				djnz copy_to_cmdline
003FCB C9                  B   420    				ret
                           B   421    
                           B   422    ;----------------------------------------------
                           B   423    
                           B   424    
003FCC C5                  B   425    hwsc_wait_vrt	push bc
                           B   426    
003FCD 0E01                B   427    				ld c,1
003FCF ED0909              B   428    				out0 (port_clear_flags),c
                           B   429    
003FD2 0E01                B   430    				ld c,port_hw_flags
003FD4 ED7420              B   431    ewaitvrtlp1		tstio 1<<vrt
003FD7 28 FB               B   432    				jr z,ewaitvrtlp1
                           B   433    				
003FD9 C1                  B   434    				pop bc
003FDA BF                  B   435    				cp a							003FDB C9                  B   436    				ret
                           B   437    
                           B   438    
                           B   439    ;----------------------------------------------
                           B   440    
                           B     0    	include		'ez80p_misc_code.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;Misc eZ80p specific routines v0.05 (ADL versio
                           B     3    ;----------------------------------------------
                           B     4    
003FDC                     B     5    hwsc_default_hw_settings
                           B     6    
                           B     7    ; Set up eZ80 Wait states
                           B     8    
003FDC 3E48                B     9    					ld a,01001000b				003FDE ED39AA              B    10    					out0 (CS0_CTL),a
003FE1 3E00                B    11    					ld a,000h					003FE3 ED39A8              B    12    					out0 (CS0_LBR),a
003FE6 3EFF                B    13    					ld a,0ffh	
003FE8 ED39A9              B    14    					out0 (CS0_UBR),a			                           B    15    
003FEB 3E58                B    16    					ld a,01011000b
003FED ED39AD              B    17    					out0 (CS1_CTL),a			003FF0 3E00                B    18    					ld a,0
003FF2 ED39AB              B    19    					out0 (CS1_LBR),a			                           B    20    
                           B    21    ;set up eZ80 GPIO ports
                           B    22    
003FF5 3EFF                B    23    					ld a,0ffh
003FF7 ED399F              B    24    					out0 (PC_DDR),a				003FFA AF                  B    25    					xor a
003FFB ED39A0              B    26    					out0 (PC_ALT1),a
003FFE ED39A1              B    27    					out0 (PC_ALT2),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 162


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B    28    					
004001 3EFF                B    29    					ld a,0ffh					004003 ED39A3              B    30    					out0 (PD_DDR),a				004006 AF                  B    31    					xor a	
004007 ED39A4              B    32    					out0 (PD_ALT1),a			00400A 3E0F                B    33    					ld a,00fh				
00400C ED39A5              B    34    					out0 (PD_ALT2),a			                           B    35    
                           B    36    ;set up eZ80 timer
                           B    37    
00400F ED3892              B    38    					in0 a,(TMR_ISS)
004012 E6FC                B    39    					and 11111100b
004014 F601                B    40    					or  00000001b
004016 ED3992              B    41    					out0 (TMR_ISS),a			                           B    42    					
                           B    43    					
                           B    44    ;AMOEBA default settings
                           B    45    
004019 AF                  B    46    					xor a
00401A 320314FF            B    47    					ld (hw_audio_registers+3),a
                           B    48    
00401E C9                  B    49    					ret
                           B    50    
                           B    51    ;----------------------------------------------
                           B    52    
00401F 11000000            B    53    hwsc_get_version	ld de,0
004023 0610                B    54    					ld b,16
004025 78                  B    55    gethwvlp			ld a,b
004026 3D                  B    56    					dec a
004027 ED3908              B    57    					out0 (port_selector),a		00402A DB01                B    58    					in a,(port_hw_flags)		00402C CB27                B    59    					sla a
00402E CB13                B    60    					rl e
004030 CB12                B    61    					rl d
004032 10 F1               B    62    					djnz gethwvlp				                           B    63    									
004034 21310000            B    64    					ld hl,prose_version
004038 BF                  B    65    					cp a						004039 C9                  B    66    					ret
                           B    67    
                           B    68    
                           B    69    
                           B    70    ;----------------------------------------------
                           B    71    ; Timer related 
                           B    72    ;----------------------------------------------
                           B    73    
00403A                     B    74    hwsc_time_delay
                           B    75    
                           B    76    ; set DE to 32768Hz ticks to wait
                           B    77    
00403A CD 46 40 00         B    78    					call set_timeout
00403E CD 57 40 00         B    79    twaitlp				call test_timeout
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 163


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
004042 28 FA               B    80    					jr z,twaitlp
004044 AF                  B    81    					xor a						004045 C9                  B    82    					ret			
                           B    83    
                           B    84    ;----------------------------------------------
                           B    85    
004046 7B                  B    86    set_timeout			ld a,e						004047 ED3981              B    87    					out0 (TMR0_RR_L),a			00404A 7A                  B    88    					ld a,d
00404B ED3982              B    89    					out0 (TMR0_RR_H),a			00404E 3E03                B    90    					ld a,00000011b				004050 ED3980              B    91    					out0 (TMR0_CTL),a			004053 ED3880              B    92    					in0 a,(TMR0_CTL)			004056 C9                  B    93    					ret
                           B    94    			
004057 ED3880              B    95    test_timeout		in0 a,(TMR0_CTL)			00405A CB7F                B    96    					bit 7,a
00405C C9                  B    97    					ret
                           B    98    			
                           B    99    ;----------------------------------------------
                           B   100    
00405D                     B   101    hwsc_read_rtc
00405D D5                  B   102    					push de
00405E C5                  B   103    					push bc
00405F 0EE0                B   104    hwsc_rtc_rlp		ld c,RTC_SEC
004061 0608                B   105    					ld b,8
004063 21 11 60 00         B   106    					ld hl,time_data
004067 ED92                B   107    					inimr						004069 0EE0                B   108    					ld c,RTC_SEC
00406B 0600                B   109    					ld b,0
00406D 1E08                B   110    					ld e,8
00406F 21 11 60 00         B   111    					ld hl,time_data
004073 ED78                B   112    timevloop			in a,(bc)					004075 BE                  B   113    					cp (hl)						004076 20 E7               B   114    					jr nz,hwsc_rtc_rlp			004078 23                  B   115    					inc hl
004079 0C                  B   116    					inc c
00407A 1D                  B   117    					dec e
00407B 20 F6               B   118    					jr nz,timevloop
00407D 21 11 60 00         B   119    					ld hl,time_data
004081 C1                  B   120    					pop bc
004082 D1                  B   121    					pop de
004083 BF                  B   122    					cp a						004084 C9                  B   123    					ret
                           B   124    
                           B   125    
004085                     B   126    hwsc_write_rtc	
                           B   127    
                           B   128    ; set HL to location of BCD data for RTC: sec/m
                           B   129    
004085 E5                  B   130    					push hl
004086 C5                  B   131    					push bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 164


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
004087 3E21                B   132    					ld a,00100001b				004089 ED39ED              B   133    					out0 (RTC_CTRL),a
00408C 0EE0                B   134    					ld c,RTC_SEC
00408E 0608                B   135    					ld b,8
004090 ED93                B   136    					otimr
004092 3E20                B   137    					ld a,00100000b				004094 ED39ED              B   138    					out0 (RTC_CTRL),a
004097 C1                  B   139    					pop bc
004098 E1                  B   140    					pop hl
004099 BF                  B   141    					cp a						00409A C9                  B   142    					ret	
                           B   143    
                           B   144    
                           B   145    ;----------------------------------------------
                           B   146    ; INIT KEYBOARD ROUTINE 
                           B   147    ;----------------------------------------------
                           B   148    
                           B   149    ; ZF set and A = 0 if all OK, else error code i
                           B   150    
00409B                     B   151    init_keyboard
                           B   152    
00409B 11004000            B   153    			ld de,16384							00409F CD 3A 40 00         B   154    			call hwsc_time_delay
0040A3 F3                  B   155    			di
0040A4 CD 59 41 00         B   156    			call purge_keyboard
0040A8 CD B2 40 00         B   157    			call rs_keyboard
0040AC FB                  B   158    			ei
0040AD D0                  B   159    			ret nc
0040AE 3E8B                B   160    			ld a,08bh							0040B0 B7                  B   161    			or a
0040B1 C9                  B   162    			ret
                           B   163    			
                           B   164    			
0040B2                     B   165    rs_keyboard
                           B   166    
0040B2 3EFF                B   167    			ld a,0ffh
0040B4 CD D1 40 00         B   168    			call write_to_keyboard
0040B8 30 04               B   169    			jr nc,kb_connected
0040BA 3E8A                B   170    			ld a,08ah							0040BC B7                  B   171    			or a
0040BD C9                  B   172    			ret
                           B   173    
0040BE                     B   174    kb_connected
                           B   175    			
0040BE 0605                B   176    			ld b,5
0040C0 C5                  B   177    kb_initlp	push bc
0040C1 CD 3D 41 00         B   178    			call wait_kb_byte					0040C5 C1                  B   179    			pop bc
0040C6 D8                  B   180    			ret c
0040C7 FEAA                B   181    			cp 0aah
0040C9 28 04               B   182    			jr z,kb_postok
0040CB 10 F3               B   183    			djnz kb_initlp						Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 165


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
0040CD 37                  B   184    			scf									0040CE C9                  B   185    			ret
                           B   186    			
                           B   187    			
0040CF AF                  B   188    kb_postok	xor a
0040D0 C9                  B   189    			ret
                           B   190    	
                           B   191    	
                           B   192    ;----------------------------------------------
                           B   193    				
0040D1                     B   194    write_to_keyboard
                           B   195    
                           B   196    ; Put byte to send to keyboard in A
                           B   197    
0040D1 4F                  B   198    			ld c,a								0040D2 3E01                B   199    			ld a,01b							0040D4 ED3907              B   200    			out0 (port_ps2_ctrl),a
                           B   201    
0040D7 110A0000            B   202    			ld de,10
0040DB CD 3A 40 00         B   203    			call hwsc_time_delay				                           B   204    
0040DF 3E03                B   205    			ld a,11b
0040E1 ED3907              B   206    			out0 (port_ps2_ctrl),a				                           B   207    			
0040E4 3E02                B   208    			ld a,10b
0040E6 ED3907              B   209    			out0 (port_ps2_ctrl),a				                           B   210    			
0040E9 CD B9 42 00         B   211    			call wait_kb_clk_high
                           B   212    			
0040ED 1601                B   213    			ld d,1								0040EF 0608                B   214    			ld b,8								0040F1 CD 8C 42 00         B   215    kdoloop		call wait_kb_clk_low	
0040F5 D8                  B   216    			ret c
0040F6 AF                  B   217    			xor a
0040F7 CBCF                B   218    			set 1,a
0040F9 CB41                B   219    			bit 0,c
0040FB 28 03               B   220    			jr z,kdbzero
0040FD CB8F                B   221    			res 1,a
0040FF 14                  B   222    			inc d
004100 ED3907              B   223    kdbzero		out0 (port_ps2_ctrl),a				004103 CD B9 42 00         B   224    			call wait_kb_clk_high
004107 D8                  B   225    			ret c
004108 CB19                B   226    			rr c
00410A 10 E5               B   227    			djnz kdoloop
                           B   228    
00410C CD 8C 42 00         B   229    			call wait_kb_clk_low
004110 D8                  B   230    			ret c
004111 AF                  B   231    			xor a
004112 CB42                B   232    			bit 0,d
004114 20 02               B   233    			jr nz,kparone
004116 CBCF                B   234    			set 1,a
004118 ED3907              B   235    kparone		out0 (port_ps2_ctrl),a				Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 166


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
00411B CD B9 42 00         B   236    			call wait_kb_clk_high
00411F D8                  B   237    			ret c
                           B   238    			
004120 CD 8C 42 00         B   239    			call wait_kb_clk_low
004124 D8                  B   240    			ret c
004125 AF                  B   241    			xor a
004126 ED3907              B   242    			out0 (port_ps2_ctrl),a				                           B   243    
004129 CD 88 42 00         B   244    			call wait_kb_data_low				00412D D8                  B   245    			ret c
00412E CD 8C 42 00         B   246    			call wait_kb_clk_low				004132 D8                  B   247    			ret c
                           B   248    				
004133 CD B5 42 00         B   249    			call wait_kb_data_high				004137 D8                  B   250    			ret c
004138 CD B9 42 00         B   251    			call wait_kb_clk_high				00413C C9                  B   252    			ret 
                           B   253    
                           B   254    
                           B   255    ;----------------------------------------------
                           B   256    
                           B   257    
00413D                     B   258    wait_kb_byte
                           B   259    
00413D 11008000            B   260    			ld de,8000h
004141 CD 46 40 00         B   261    			call set_timeout					                           B   262    
004145 ED3807              B   263    wait_kloop	in0 a,(port_ps2_ctrl)
004148 CB67                B   264    			bit 4,a
00414A 20 08               B   265    			jr nz,rec_kbyte
                           B   266    			
00414C CD 57 40 00         B   267    			call test_timeout
004150 28 F3               B   268    			jr z,wait_kloop
004152 37                  B   269    			scf									004153 C9                  B   270    			ret
                           B   271    			
004154 ED3802              B   272    rec_kbyte	in0 a,(port_keyboard_data)			004157 B7                  B   273    			or a
004158 C9                  B   274    			ret
                           B   275    
                           B   276    
                           B   277    ;----------------------------------------------
                           B   278    
004159                     B   279    purge_keyboard
                           B   280    			
004159 ED3807              B   281    			in0 a,(port_ps2_ctrl)
00415C CB67                B   282    			bit 4,a
00415E C8                  B   283    			ret z
00415F ED3802              B   284    			in0 a,(port_keyboard_data)			004162 18 F5               B   285    			jr purge_keyboard
                           B   286    
                           B   287    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 167


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B   288    
                           B   289    ;----------------------------------------------
                           B   290    ; INIT MOUSE ROUTINE 
                           B   291    ;----------------------------------------------
                           B   292    
                           B   293    ; ZF set and A = 0 if all OK, else error code i
                           B   294    
004164                     B   295    init_mouse		
004164 F3                  B   296    			di
004165 CD 7D 42 00         B   297    			call purge_mouse
004169 CD 73 41 00         B   298    			call rs_mouse
00416D FB                  B   299    			ei
00416E D0                  B   300    			ret nc
00416F 3E8B                B   301    			ld a,08bh							004171 B7                  B   302    			or a
004172 C9                  B   303    			ret
                           B   304    
                           B   305    
004173                     B   306    rs_mouse
004173 3EFF                B   307    			ld a,0ffh							004175 CD F5 41 00         B   308    			call write_to_mouse		
004179 30 04               B   309    			jr nc,mouse_connected
00417B 3E8A                B   310    			ld a,08ah							00417D B7                  B   311    			or a
00417E C9                  B   312    			ret
                           B   313    
                           B   314    
00417F                     B   315    mouse_connected
                           B   316    
00417F 0605                B   317    			ld b,5
004181 C5                  B   318    ms_initlp	push bc
004182 CD 61 42 00         B   319    			call wait_mouse_byte				004186 C1                  B   320    			pop bc
004187 D8                  B   321    			ret c
004188 FEAA                B   322    			cp 0aah
00418A 28 04               B   323    			jr z,ms_postok
00418C 10 F3               B   324    			djnz ms_initlp
00418E 18 43               B   325    			jr bad_mouse
                           B   326    			
004190 CD 61 42 00         B   327    ms_postok	call wait_mouse_byte				004194 D8                  B   328    			ret c
004195 B7                  B   329    			or a
004196 20 3B               B   330    			jr nz,bad_mouse						                           B   331    			
004198 3E03                B   332    			ld a,3
00419A 32 EB 61 00         B   333    			ld (mouse_packet_size),a
                           B   334    
00419E 21 C8 5E 00         B   335    			ld hl,intellimouse_seq
0041A2 0606                B   336    			ld b,6
0041A4 CD D7 41 00         B   337    			call mouse_sequence
0041A8 D8                  B   338    			ret c
                           B   339    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 168


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
0041A9 3EF2                B   340    			ld a,0f2h
0041AB CD E6 41 00         B   341    			call write_mouse_wait_ack			0041AF D8                  B   342    			ret c
0041B0 CD 61 42 00         B   343    			call wait_mouse_byte				0041B4 D8                  B   344    			ret c
0041B5 32 EA 61 00         B   345    			ld (mouse_id),a
0041B9 B7                  B   346    			or a								0041BA 28 0A               B   347    			jr z,standard_mouse
0041BC FE03                B   348    			cp 3
0041BE 20 13               B   349    			jr nz,bad_mouse						0041C0 3E04                B   350    			ld a,4
0041C2 32 EB 61 00         B   351    			ld (mouse_packet_size),a
                           B   352    
0041C6                     B   353    standard_mouse
                           B   354    		
0041C6 21 CE 5E 00         B   355    			ld hl,mouse_settings_seq
0041CA 0606                B   356    			ld b,6
0041CC CD D7 41 00         B   357    			call mouse_sequence
0041D0 D8                  B   358    			ret c
0041D1 AF                  B   359    			xor a								0041D2 C9                  B   360    			ret
                           B   361    
                           B   362    
0041D3 3E89                B   363    bad_mouse	ld a,089h							0041D5 B7                  B   364    			or a
0041D6 C9                  B   365    			ret
                           B   366    
                           B   367    
0041D7                     B   368    mouse_sequence
                           B   369    
0041D7 7E                  B   370    mseqlp		ld a,(hl)
0041D8 E5                  B   371    			push hl
0041D9 C5                  B   372    			push bc
0041DA CD E6 41 00         B   373    			call write_mouse_wait_ack
0041DE C1                  B   374    			pop bc
0041DF E1                  B   375    			pop hl
0041E0 D8                  B   376    			ret c
0041E1 23                  B   377    			inc hl
0041E2 10 F3               B   378    			djnz mseqlp
0041E4 AF                  B   379    			xor a
0041E5 C9                  B   380    			ret
                           B   381    
                           B   382    
0041E6                     B   383    write_mouse_wait_ack
                           B   384    			
0041E6 CD F5 41 00         B   385    			call write_to_mouse
0041EA D8                  B   386    			ret c
0041EB CD 61 42 00         B   387    			call wait_mouse_byte				0041EF D8                  B   388    			ret c
0041F0 FEFA                B   389    			cp 0fah								0041F2 C8                  B   390    			ret z
0041F3 37                  B   391    			scf
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 169


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
0041F4 C9                  B   392    			ret
                           B   393    			
                           B   394    ;----------------------------------------------
                           B   395    				
0041F5                     B   396    write_to_mouse
                           B   397    
                           B   398    ; Put byte to send to mouse in A
                           B   399    
0041F5 4F                  B   400    			ld c,a								0041F6 3E04                B   401    			ld a,0100b							0041F8 ED3907              B   402    			out0 (port_ps2_ctrl),a
                           B   403    
0041FB 110A0000            B   404    			ld de,10
0041FF CD 3A 40 00         B   405    			call hwsc_time_delay				                           B   406    
004203 3E0C                B   407    			ld a,1100b
004205 ED3907              B   408    			out0 (port_ps2_ctrl),a				                           B   409    			
004208 3E08                B   410    			ld a,1000b
00420A ED3907              B   411    			out0 (port_ps2_ctrl),a				                           B   412    			
00420D CD C1 42 00         B   413    			call wait_mouse_clk_high
                           B   414    			
004211 1601                B   415    			ld d,1								004213 0608                B   416    			ld b,8								004215 CD 94 42 00         B   417    mdoloop		call wait_mouse_clk_low	
004219 D8                  B   418    			ret c
00421A AF                  B   419    			xor a
00421B CBDF                B   420    			set 3,a
00421D CB41                B   421    			bit 0,c
00421F 28 03               B   422    			jr z,mdbzero
004221 CB9F                B   423    			res 3,a
004223 14                  B   424    			inc d
004224 ED3907              B   425    mdbzero		out0 (port_ps2_ctrl),a				004227 CD C1 42 00         B   426    			call wait_mouse_clk_high
00422B D8                  B   427    			ret c
00422C CB19                B   428    			rr c
00422E 10 E5               B   429    			djnz mdoloop
                           B   430    
004230 CD 94 42 00         B   431    			call wait_mouse_clk_low
004234 D8                  B   432    			ret c
004235 AF                  B   433    			xor a
004236 CB42                B   434    			bit 0,d
004238 20 02               B   435    			jr nz,parone
00423A CBDF                B   436    			set 3,a
00423C ED3907              B   437    parone		out0 (port_ps2_ctrl),a				00423F CD C1 42 00         B   438    			call wait_mouse_clk_high
004243 D8                  B   439    			ret c
                           B   440    			
004244 CD 94 42 00         B   441    			call wait_mouse_clk_low
004248 D8                  B   442    			ret c
004249 AF                  B   443    			xor a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 170


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
00424A ED3907              B   444    			out0 (port_ps2_ctrl),a				                           B   445    
00424D CD 90 42 00         B   446    			call wait_mouse_data_low			004251 D8                  B   447    			ret c
004252 CD 94 42 00         B   448    			call wait_mouse_clk_low				004256 D8                  B   449    			ret c
                           B   450    				
004257 CD BD 42 00         B   451    			call wait_mouse_data_high			00425B D8                  B   452    			ret c
00425C CD C1 42 00         B   453    			call wait_mouse_clk_high			004260 C9                  B   454    			ret 
                           B   455    
                           B   456    ;----------------------------------------------
                           B   457    
                           B   458    
004261                     B   459    wait_mouse_byte
                           B   460    
004261 11008000            B   461    			ld de,8000h
004265 CD 46 40 00         B   462    			call set_timeout					                           B   463    
004269 ED3807              B   464    wait_mloop	in0 a,(port_ps2_ctrl)
00426C CB6F                B   465    			bit 5,a
00426E 20 08               B   466    			jr nz,rec_mbyte
                           B   467    			
004270 CD 57 40 00         B   468    			call test_timeout
004274 28 F3               B   469    			jr z,wait_mloop
004276 37                  B   470    			scf									004277 C9                  B   471    			ret
                           B   472    			
004278 ED3806              B   473    rec_mbyte	in0 a,(port_mouse_data)				00427B B7                  B   474    			or a
00427C C9                  B   475    			ret
                           B   476    
                           B   477    ;----------------------------------------------
                           B   478    
00427D                     B   479    purge_mouse
                           B   480    			
00427D ED3807              B   481    			in0 a,(port_ps2_ctrl)
004280 CB6F                B   482    			bit 5,a
004282 C8                  B   483    			ret z
004283 ED3806              B   484    			in0 a,(port_mouse_data)			; r
004286 18 F5               B   485    			jr purge_mouse
                           B   486    
                           B   487    
                           B   488    ;----------------------------------------------
                           B   489    
                           B   490    
004288                     B   491    wait_kb_data_low
                           B   492    
004288 3E02                B   493    			ld a,2
00428A 18 0A               B   494    			jr test_lo_ps2
                           B   495    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 171


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
00428C                     B   496    wait_kb_clk_low
                           B   497    
00428C 3E01                B   498    			ld a,1
00428E 18 06               B   499    			jr test_lo_ps2			
                           B   500    
004290                     B   501    wait_mouse_data_low
                           B   502    
004290 3E08                B   503    			ld a,8
004292 18 02               B   504    			jr test_lo_ps2
                           B   505    
004294                     B   506    wait_mouse_clk_low
                           B   507    
004294 3E04                B   508    			ld a,4
                           B   509    
004296 C5                  B   510    test_lo_ps2	push bc
004297 D5                  B   511    			push de
004298 4F                  B   512    			ld c,a
004299 11004000            B   513    			ld de,04000h					; a
00429D CD 46 40 00         B   514    			call set_timeout
                           B   515    
0042A1 CD 57 40 00         B   516    nkb_lw		call test_timeout				; t
0042A5 28 04               B   517    			jr z,nkb_lnto
0042A7 D1                  B   518    			pop de
0042A8 C1                  B   519    			pop bc
0042A9 37                  B   520    			scf								; c
0042AA C9                  B   521    			ret
0042AB ED3807              B   522    nkb_lnto	in0 a,(port_ps2_ctrl)
0042AE A1                  B   523    			and c
0042AF 20 F0               B   524    			jr nz,nkb_lw
                           B   525    					
0042B1 D1                  B   526    			pop de
0042B2 C1                  B   527    			pop bc
0042B3 AF                  B   528    			xor a
0042B4 C9                  B   529    			ret					
                           B   530    
                           B   531    
                           B   532    
                           B   533    
0042B5                     B   534    wait_kb_data_high
                           B   535    
0042B5 3E02                B   536    			ld a,2
0042B7 18 0A               B   537    			jr test_hi_ps2
                           B   538    			
0042B9                     B   539    wait_kb_clk_high
                           B   540    
0042B9 3E01                B   541    			ld a,1
0042BB 18 06               B   542    			jr test_hi_ps2
                           B   543    
                           B   544    
0042BD                     B   545    wait_mouse_data_high
                           B   546    			
0042BD 3E08                B   547    			ld a,8
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 172


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
0042BF 18 02               B   548    			jr test_hi_ps2
                           B   549    			 
0042C1                     B   550    wait_mouse_clk_high
                           B   551    
0042C1 3E04                B   552    			ld a,4
                           B   553    
0042C3 C5                  B   554    test_hi_ps2	push bc
0042C4 D5                  B   555    			push de
0042C5 4F                  B   556    			ld c,a
0042C6 11004000            B   557    			ld de,04000h					; a
0042CA CD 46 40 00         B   558    			call set_timeout
                           B   559    
0042CE CD 57 40 00         B   560    nkb_hw		call test_timeout				; t
0042D2 28 04               B   561    			jr z,nkb_hnto
0042D4 D1                  B   562    			pop de
0042D5 C1                  B   563    			pop bc
0042D6 37                  B   564    			scf								; c
0042D7 C9                  B   565    			ret
0042D8 ED3807              B   566    nkb_hnto	in0 a,(port_ps2_ctrl)
0042DB A1                  B   567    			and c
0042DC 28 F0               B   568    			jr z,nkb_hw
                           B   569    					
0042DE D1                  B   570    			pop de
0042DF C1                  B   571    			pop bc
0042E0 AF                  B   572    			xor a							; c
0042E1 C9                  B   573    			ret
                           B   574    
                           B   575    
                           B   576    ;==============================================
                           B   577    
0042E2                     B   578    hwsc_play_audio
                           B   579    
                           B   580    ; set HL register to location of an audio data 
                           B   581    
                           B   582    ; 0 - start 
                           B   583    ; 3 - length
                           B   584    ; 6 - loop start
                           B   585    ; 9 - loop length
                           B   586    ; c - frequency constant
                           B   587    ; e - volume
                           B   588    
                           B   589    ; set C register to set channels wave is to pla
                           B   590    
0042E2 E5                  B   591    				push hl
0042E3 FDE1                B   592    				pop iy
0042E5 DD210014 FF         B   593    				ld ix,hw_audio_registers
0042EA CD 1F 43 00         B   594    				call audio_reg_wait				                           B   595    				
0042EE 0608                B   596    				ld b,8
0042F0 CB39                B   597    audchanloop		srl c
0042F2 30 24               B   598    				jr nc,not_this_chan
                           B   599    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 173


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
0042F4 FD1700              B   600    				ld de,(iy)
0042F7 DD1F00              B   601    				ld (ix),de						                           B   602    
0042FA FD1703              B   603    				ld de,(iy+3)
0042FD DD1F04              B   604    				ld (ix+04h),de					                           B   605    				
004300 FD170C              B   606    				ld de,(iy+0ch)
004303 DD1F08              B   607    				ld (ix+08h),de					                           B   608    				
004306 FD5E0E              B   609    				ld e,(iy+0eh)
004309 DD1F0C              B   610    				ld (ix+0ch),de					                           B   611    				
00430C FD1706              B   612    				ld de,(iy+6)
00430F DD1F10              B   613    				ld (ix+10h),de					                           B   614    				
004312 FD1709              B   615    				ld de,(iy+9)
004315 DD1F14              B   616    				ld (ix+14h),de					                           B   617    
004318                     B   618    not_this_chan	
004318 ED3220              B   619    				lea ix,ix+20h			
00431B 10 D3               B   620    				djnz audchanloop
00431D AF                  B   621    				xor a
00431E C9                  B   622    				ret
                           B   623    
                           B   624    
                           B   625    ;----------------------------------------------
                           B   626    
00431F                     B   627    audio_reg_wait	
                           B   628    
00431F 3E01                B   629    				ld a,1
004321 320314FF            B   630    				ld (hw_audio_registers+3),a		                           B   631    				
004325 ED3801              B   632    wait_audreg		in0 a,(port_hw_flags)			004328 E640                B   633    				and 040h
00432A 28 F9               B   634    				jr z,wait_audreg				00432C AF                  B   635    				xor a
00432D C9                  B   636    				ret
00432E C9                  B   637    				ret
                           B   638    
                           B   639    
                           B   640    ;----------------------------------------------
                           B   641    				
                           B   642    				
00432F                     B   643    hwsc_disable_audio
                           B   644    
00432F AF                  B   645    				xor a
004330 320314FF            B   646    				ld (hw_audio_registers+3),a		                           B   647    				
004334 DD210014 FF         B   648    				ld ix,hw_audio_registers		004339 0608                B   649    				ld b,8
00433B 11000000            B   650    				ld de,0
00433F DD1F0C              B   651    disaud_lp		ld (ix+0ch),de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 174


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
004342 ED3220              B   652    				lea ix,ix+020h
004345 10 F8               B   653    				djnz disaud_lp
004347 C9                  B   654    				ret
                           B   655    				
                           B   656    ;----------------------------------------------
                           B   657    
004348                     B   658    hwsc_get_joysticks
                           B   659    
004348 ED389E              B   660    				in0 a,(PC_DR)				
00434B 2F                  B   661    				cpl
00434C 47                  B   662    				ld b,a
00434D E60F                B   663    				and 0fh
00434F 5F                  B   664    				ld e,a
004350 78                  B   665    				ld a,b
004351 0F                  B   666    				rrca
004352 0F                  B   667    				rrca
004353 0F                  B   668    				rrca
004354 0F                  B   669    				rrca
004355 E60F                B   670    				and 0fh
004357 57                  B   671    				ld d,a
                           B   672    				
004358 ED38A2              B   673    				in0 a,(PD_DR)	
00435B CB67                B   674    				bit 4,a						; f
00435D 20 02               B   675    				jr nz,noj1b1
00435F CBEA                B   676    				set 5,d
                           B   677    
004361 CB6F                B   678    noj1b1			bit 5,a						; f
004363 20 02               B   679    				jr nz,noj1b0
004365 CBE2                B   680    				set 4,d
                           B   681    				
004367 CB77                B   682    noj1b0			bit 6,a						; f
004369 20 02               B   683    				jr nz,noj0b1
00436B CBEB                B   684    				set 5,e
                           B   685    
00436D CB7F                B   686    noj0b1			bit 7,a						; f
00436F 20 02               B   687    				jr nz,noj0b0
004371 CBE3                B   688    				set 4,e
                           B   689    
004373 AF                  B   690    noj0b0			xor a
004374 C9                  B   691    				ret
                           B   692    				
                           B   693    				
                           B   694    ;----------------------------------------------
                           B   695    			
                           B   696    				
                           B   697    				
                           A  3210    
                           B     0    	include		'prose_keyboard_routines.asm'	                           B     1    ;----------------------------------------------
                           B     2    ;PROSE KEYBOARD/MOUSE ROUTINES V0.04 (ADL mode)
                           B     3    ;----------------------------------------------
                           B     4    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 175


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_keyboard_routines.asm
004375                     B     5    os_wait_key_press
                           B     6    
                           B     7    ; Busy waits for a keypress.
                           B     8    ; Handles the following modifier keys (key_mod_
                           B     9    ; Returns scancode in A and ASCII code in B (B=
                           B    10    ; (ASCII code is modifed by shift / alt key sta
                           B    11    
                           B    12    
004375 D5                  B    13    				push de
004376 51                  B    14    				ld d,c
004377 E5                  B    15    				push hl
                           B    16    				
004378 CD E2 43 00         B    17    wait_kbuf		call get_kb_buffer_indexes		00437C BE                  B    18    				cp (hl)							00437D 28 F9               B    19    				jr z,wait_kbuf		
                           B    20    			
00437F 01000000            B    21    new_key			ld bc,0							004383 4F                  B    22    				ld c,a
004384 21 C3 61 00         B    23    				ld hl,scancode_buffer	
004388 09                  B    24    				add hl,bc
004389 7E                  B    25    				ld a,(hl)						                           B    26    
00438A 0E10                B    27    				ld c,16
00438C 09                  B    28    				add hl,bc						00438D 4F                  B    29    				ld c,a							00438E 7E                  B    30    				ld a,(hl)						                           B    31    
00438F 1E00                B    32    				ld e,0							004391 21 21 5D 00         B    33    				ld hl,unshifted_keymap			                           B    34    
004395 CB4F                B    35    				bit 1,a
004397 28 04               B    36    				jr z,not_ctrl					004399 1E60                B    37    				ld e,96							00439B 18 16               B    38    				jr got_keymap					                           B    39    							
00439D CB47                B    40    not_ctrl		bit 0,a
00439F 20 04               B    41    				jr nz,shifted
0043A1 CB67                B    42    				bit 4,a
0043A3 28 06               B    43    				jr z,not_shifted
0043A5 21 83 5D 00         B    44    shifted			ld hl,shifted_keymap			0043A9 18 08               B    45    				jr got_keymap
                           B    46    				
0043AB CB5F                B    47    not_shifted		bit 3,a
0043AD 28 04               B    48    				jr z,got_keymap	
0043AF 21 E5 5D 00         B    49    				ld hl,alted_keymap				                           B    50    
0043B3 79                  B    51    got_keymap		ld a,c							0043B4 FE62                B    52    				cp 062h
0043B6 30 07               B    53    				jr nc,gotkdone
0043B8 09                  B    54    				add hl,bc						0043B9 7E                  B    55    				ld a,(hl)						0043BA 93                  B    56    				sub a,e							Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 176


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_keyboard_routines.asm
0043BB 30 01               B    57    				jr nc,subkey_ok	
0043BD AF                  B    58    				xor a							0043BE 47                  B    59    subkey_ok		ld b,a
                           B    60    				
0043BF 3A E4 61 00         B    61    gotkdone		ld a,(key_buf_rd_idx)			0043C3 3C                  B    62    				inc a							0043C4 E60F                B    63    				and 15
0043C6 32 E4 61 00         B    64    				ld (key_buf_rd_idx),a			0043CA 79                  B    65    				ld a,c							0043CB E1                  B    66    				pop hl
0043CC 4A                  B    67    				ld c,d
0043CD D1                  B    68    				pop de
0043CE BF                  B    69    				cp a							0043CF C9                  B    70    				ret
                           B    71    			
                           B    72    		
                           B    73    ;----------------------------------------------
                           B    74    			
0043D0                     B    75    os_get_key_press
                           B    76    				
                           B    77    ; Gets a keycode on-the-fly - If one is availab
                           B    78    ; On return, ZF is set if there is a new scanco
                           B    79    ; (ASCII code is modifed by shift key status), 
                           B    80    			
                           B    81    			
0043D0 D5                  B    82    				push de
0043D1 51                  B    83    				ld d,c
0043D2 E5                  B    84    				push hl
0043D3 CD E2 43 00         B    85    				call get_kb_buffer_indexes		0043D7 BE                  B    86    				cp (hl)							0043D8 20 A5               B    87    				jr nz,new_key					0043DA 3E81                B    88    				ld a,81h			
0043DC 47                  B    89    				ld b,a
0043DD B7                  B    90    				or a
0043DE E1                  B    91    				pop hl
0043DF 4A                  B    92    				ld c,d
0043E0 D1                  B    93    				pop de
0043E1 C9                  B    94    				ret
                           B    95    			
                           B    96    ;----------------------------------------------
                           B    97    			
0043E2                     B    98    get_kb_buffer_indexes
                           B    99    			
                           B   100    			
0043E2 21 E3 61 00         B   101    				ld hl,key_buf_wr_idx			0043E6 3A E4 61 00         B   102    				ld a,(key_buf_rd_idx)			0043EA C9                  B   103    				ret
                           B   104    			
                           B   105    		
                           B   106    ;----------------------------------------------
                           B     0    	include		'prose_serial_routines.asm'
                           B     1    ;**********************************************
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 177


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
                           B     2    ; PROSE Serial File Transfer Routines V0.05 (AD
                           B     3    ;**********************************************
                           B     4    
                           B     5    ;----------------------------------------------
                           B     6    ; .---------------------.
                           B     7    ; ! Receive file header !
                           B     8    ; '---------------------'
                           B     9    ;
                           B    10    ; Before calling set:-
                           B    11    ;
                           B    12    ; HL = Filename ("*" if dont care)
                           B    13    ;  A = Time out in seconds
                           B    14    ;
                           B    15    ; If zero flag set, all OK. IX returns location
                           B    16    ;    Else A=$84 = memory address out of range, 
                           B    17    ;           $87 = Filename mismatch, $86 = chec
                           B    18    ;----------------------------------------------
                           B    19    	
                           B    20    
0043EB                     B    21    serial_get_header
                           B    22    
0043EB 32 A5 5E 00         B    23    				ld (serial_timeout),a			0043EF 22 8F 5E 00         B    24    				ld (serial_fn_addr),hl
0043F3 CD 5A 3D 00         B    25    				call hwsc_flush_serial_buffer	                           B    26    
0043F7 CD DA 44 00         B    27    				call s_getblock					0043FB 28 0C               B    28    				jr z,s_gbfhok					0043FD F5                  B    29    				push af							0043FE 3A C6 5E 00         B    30    				ld a,(serial_transfer_started)
004402 B7                  B    31    				or a							004403 C4 41 45 00         B    32    				call nz,s_badack				004407 F1                  B    33    				pop af
004408 C9                  B    34    				ret
                           B    35    	
004409 21 BA 5E 00         B    36    s_gbfhok		ld hl,serial_header_id			00440D 11 17 66 00         B    37    				ld de,sector_buffer+20			004411 060C                B    38    				ld b,12
004413 CD DC 11 00         B    39    				call os_compare_strings
004417 20 0F               B    40    				jr nz,s_nfhdr
004419 06E0                B    41    				ld b,256-32						00441B 21 23 66 00         B    42    				ld hl,sector_buffer+32
00441F 7E                  B    43    s_chdr			ld a,(hl)
004420 23                  B    44    				inc hl
004421 B7                  B    45    				or a
004422 20 04               B    46    				jr nz,s_nfhdr
004424 10 F9               B    47    				djnz s_chdr
004426 18 08               B    48    				jr s_fhcsok
                           B    49    				
004428 CD 41 45 00         B    50    s_nfhdr			call s_badack					00442C 3E85                B    51    				ld a,085h						00442E B7                  B    52    				or a
00442F C9                  B    53    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 178


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
                           B    54    		
004430 21 13 66 00         B    55    s_fhcsok		ld hl,sector_buffer+16			004434 11 B6 5E 00         B    56    				ld de,serial_fileheader+16
004438 01040000            B    57    				ld bc,4
00443C EDB0                B    58    				ldir
                           B    59    				
00443E 21 03 66 00         B    60    				ld hl,sector_buffer
004442 11 A6 5E 00         B    61    				ld de,serial_fileheader			004446 0610                B    62    				ld b,16							004448 7E                  B    63    s_tuclp			ld a,(hl)						004449 B7                  B    64    				or a
00444A 28 0B               B    65    				jr z,s_ffhswz	
00444C CD 16 12 00         B    66    				call os_uppercasify
004450 12                  B    67    				ld (de),a
004451 23                  B    68    				inc hl
004452 13                  B    69    				inc de
004453 10 F3               B    70    				djnz s_tuclp
004455 18 04               B    71    				jr s_tucdone
004457 12                  B    72    s_ffhswz		ld (de),a
004458 13                  B    73    				inc de
004459 10 FC               B    74    				djnz s_ffhswz		
                           B    75    	
00445B 2A 8F 5E 00         B    76    s_tucdone		ld hl,(serial_fn_addr)			00445F 7E                  B    77    				ld a,(hl)
004460 FE2A                B    78    				cp '*'
004462 28 14               B    79    				jr z,s_rffns					004464 11 A6 5E 00         B    80    				ld de,serial_fileheader
004468 0610                B    81    				ld b,16
00446A CD DC 11 00         B    82    				call os_compare_strings
00446E 28 08               B    83    				jr z,s_rffns
004470 CD 41 45 00         B    84    s_rfnbad		call s_badack
004474 3E87                B    85    				ld a,087h						004476 B7                  B    86    				or a
004477 C9                  B    87    				ret
                           B    88    				
004478 DD21 A6 5E 00       B    89    s_rffns			ld ix,serial_fileheader			00447D AF                  B    90    				xor a
00447E C9                  B    91    				ret
                           B    92    
00447F F5                  B    93    s_fail			push af				
004480 CD 41 45 00         B    94    				call s_badack		 
004484 F1                  B    95    				pop af
004485 C9                  B    96    				ret
                           B    97    	
                           B    98    ;----------------------------------------------
                           B    99    ; .-------------------.
                           B   100    ; ! Receive file data !
                           B   101    ; '-------------------'
                           B   102    ;
                           B   103    ; Serial_get_header must be called first!
                           B   104    ;
                           B   105    ; Set:
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 179


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
                           B   106    ;
                           B   107    ; xHL = Address to load to [23:0]
                           B   108    ;
                           B   109    ; On return, if Zero flag is set, all OK (IX = 
                           B   110    ; Else A =  $84 = memory address out of range
                           B   111    ;           $85 = comms error
                           B   112    ;----------------------------------------------
                           B   113    
004486                     B   114    serial_receive_file
                           B   115    
004486 3E0A                B   116    				ld a,10							004488 32 A5 5E 00         B   117    				ld (serial_timeout),a
00448C E5                  B   118    				push hl
00448D CD 30 45 00         B   119    				call s_goodack					004491 DDE1                B   120    				pop ix							004493 ED5B B6 5E 00       B   121    				ld de,(serial_fileheader+16)	                           B   122    
004498 CD DA 44 00         B   123    s_gbloop		call s_getblock
00449C 20 E1               B   124    				jr nz,s_fail
00449E 0E00                B   125    				ld c,0							0044A0 FD21 03 66 00       B   126    				ld iy,sector_buffer
0044A5 FD7E00              B   127    s_rfloop		ld a,(iy)
0044A8 DD7700              B   128    				ld (ix),a						0044AB 1B                  B   129    				dec de							0044AC 21000000            B   130    				ld hl,0
0044B0 AF                  B   131    				xor a
0044B1 ED5A                B   132    				adc hl,de						0044B3 28 1A               B   133    				jr z,s_rfabr					0044B5 C5                  B   134    				push bc
0044B6 01010000            B   135    				ld bc,1
0044BA DD09                B   136    				add ix,bc						0044BC C1                  B   137    				pop bc
0044BD 30 05               B   138    				jr nc,s_nbt
0044BF 3E84                B   139    				ld a,84h						0044C1 B7                  B   140    				or a
0044C2 18 BB               B   141    				jr s_fail
0044C4 FD23                B   142    s_nbt			inc iy
0044C6 0D                  B   143    				dec c
0044C7 20 DC               B   144    				jr nz,s_rfloop
0044C9 CD 30 45 00         B   145    				call s_goodack					0044CD 18 C9               B   146    				jr s_gbloop
                           B   147    			
0044CF CD 30 45 00         B   148    s_rfabr			call s_goodack					0044D3 DD21 A6 5E 00       B   149    				ld ix,serial_fileheader			0044D8 AF                  B   150    				xor a							0044D9 C9                  B   151    				ret
                           B   152    			
                           B   153    ;----------------------------------------------
                           B   154    
0044DA                     B   155    s_getblock
                           B   156    
                           B   157    ; carry set on return if timed out
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 180


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
                           B   158    
0044DA AF                  B   159    				xor a
0044DB 32 C6 5E 00         B   160    				ld (serial_transfer_started),a	0044DF E5                  B   161    				push hl							0044E0 D5                  B   162    				push de
0044E1 C5                  B   163    				push bc
0044E2 21 03 66 00         B   164    				ld hl,sector_buffer				0044E6 0600                B   165    				ld b,0
0044E8 D9                  B   166    				exx
0044E9 21FFFF00            B   167    				ld hl,0ffffh					0044ED D9                  B   168    				exx
0044EE CD 04 3D 00         B   169    s_lgb			call receive_serial_byte
0044F2 20 38               B   170    				jr nz,s_gberr					0044F4 F5                  B   171    				push af
0044F5 3E01                B   172    				ld a,1
0044F7 32 C6 5E 00         B   173    				ld (serial_transfer_started),a
0044FB F1                  B   174    				pop af
0044FC 77                  B   175    				ld (hl),a
0044FD D9                  B   176    				exx
0044FE AC                  B   177    				xor h							0044FF 67                  B   178    				ld h,a			
004500 0608                B   179    				ld b,8
004502 4029                B   180    rxcrcbyte		add.sis hl,hl					004504 30 08               B   181    				jr nc,rxcrcnext
004506 7C                  B   182    				ld a,h
004507 EE10                B   183    				xor 10h
004509 67                  B   184    				ld h,a
00450A 7D                  B   185    				ld a,l
00450B EE21                B   186    				xor 21h
00450D 6F                  B   187    				ld l,a
00450E 10 F2               B   188    rxcrcnext		djnz rxcrcbyte
004510 D9                  B   189    				exx
004511 23                  B   190    				inc hl
004512 10 DA               B   191    				djnz s_lgb
004514 D9                  B   192    				exx								                           B   193    			
004515 CD 04 3D 00         B   194    				call receive_serial_byte		004519 20 11               B   195    				jr nz,s_gberr
00451B 4F                  B   196    				ld c,a
00451C CD 04 3D 00         B   197    				call receive_serial_byte
004520 20 0A               B   198    				jr nz,s_gberr		
004522 47                  B   199    				ld b,a
                           B   200    				
004523 AF                  B   201    				xor a							004524 52ED42              B   202    				sbc.s hl,bc						004527 28 03               B   203    				jr z,s_gberr
                           B   204    			
004529 3E86                B   205    				ld a,86h						00452B B7                  B   206    				or a							00452C C1                  B   207    s_gberr			pop bc
00452D D1                  B   208    				pop de
00452E E1                  B   209    				pop hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 181


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
00452F C9                  B   210    				ret
                           B   211    				
                           B   212    ;----------------------------------------------
                           B   213    
004530 C5                  B   214    s_goodack		push bc
004531 014F4B00            B   215    				ld bc,04b4fh					004535 79                  B   216    ackbytes		ld a,c
004536 CD 3F 3D 00         B   217    				call send_serial_byte
00453A 78                  B   218    				ld a,b
00453B CD 3F 3D 00         B   219    				call send_serial_byte
00453F C1                  B   220    				pop bc
004540 C9                  B   221    				ret
                           B   222    
004541 C5                  B   223    s_badack		push bc
004542 01585800            B   224    				ld bc,05858h					004546 18 ED               B   225    				jr ackbytes
                           B   226    
004548 C5                  B   227    s_holdack		push bc
004549 01575700            B   228    				ld bc,05757h					00454D 18 E6               B   229    				jr ackbytes
                           B   230    				
                           B   231    ;==============================================
                           B   232    
                           B   233    ; .-----------.
                           B   234    ; ! Send file !
                           B   235    ; '-----------'
                           B   236    
                           B   237    ; Before calling set:-
                           B   238    
                           B   239    ;  xHL   = filename
                           B   240    ;  xDE   = length of file
                           B   241    ;  xIX   = Start address [23:0]
                           B   242    
                           B   243    ; On return, if zero flag is set, all OK. Else:
                           B   244    ; $81 = Save length is zero
                           B   245    ; $84 = memory address out of range
                           B   246    ; $85 = comms error
                           B   247    
                           B   248    
00454F                     B   249    serial_send_file
                           B   250    			
00454F 3E01                B   251    				ld a,1							004551 32 A5 5E 00         B   252    				ld (serial_timeout),a
                           B   253    			
004555 DD22 89 5E 00       B   254    				ld (serial_ez80_address),ix
00455A ED53 B6 5E 00       B   255    				ld (serial_fileheader+10h),de	00455F E5                  B   256    				push hl
004560 21000000            B   257    				ld hl,0
004564 AF                  B   258    				xor a
004565 ED5A                B   259    				adc hl,de
004567 20 05               B   260    				jr nz,s_flok
004569 E1                  B   261    				pop hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 182


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
00456A 3E81                B   262    				ld a,081h						00456C B7                  B   263    				or a							00456D C9                  B   264    				ret
                           B   265    			
00456E 21 A6 5E 00         B   266    s_flok			ld hl,serial_fileheader			004572 01100000            B   267    				ld bc,16
004576 AF                  B   268    				xor a
004577 CD 79 15 00         B   269    				call os_bchl_memfill
00457B E1                  B   270    				pop hl							00457C 11 A6 5E 00         B   271    				ld de,serial_fileheader
004580 0610                B   272    				ld b,16
004582 CD FB 11 00         B   273    				call os_copy_ascii_run
                           B   274    				
004586 21 BA 5E 00         B   275    				ld hl,serial_header_id			00458A 11 BA 5E 00         B   276    				ld de,serial_fileheader+014h
00458E 010C0000            B   277    				ld bc,12		
004592 EDB0                B   278    				ldir
                           B   279    			
004594 DD21 A6 5E 00       B   280    				ld ix,serial_fileheader			004599 11200000            B   281    				ld de,32
00459D CD D3 45 00         B   282    				call s_makeblock			
0045A1 C0                  B   283    				ret nz
0045A2 CD 0B 46 00         B   284    				call s_sendblock
0045A6 C0                  B   285    				ret nz
0045A7 CD 38 46 00         B   286    				call s_waitack					0045AB C0                  B   287    				ret nz							                           B   288    				
0045AC DD2A 89 5E 00       B   289    				ld ix,(serial_ez80_address)
0045B1 ED5B B6 5E 00       B   290    				ld de,(serial_fileheader+16)	0045B6 CD D3 45 00         B   291    s_sbloop		call s_makeblock				0045BA 38 16               B   292    				jr c,s_rerr
0045BC CD 0B 46 00         B   293    				call s_sendblock				0045C0 38 10               B   294    				jr c,s_rerr	
0045C2 CD 38 46 00         B   295    				call s_waitack					0045C6 38 0A               B   296    				jr c,s_rerr
0045C8 21000000            B   297    				ld hl,0
0045CC AF                  B   298    				xor a
0045CD ED5A                B   299    				adc hl,de
0045CF 20 E5               B   300    				jr nz,s_sbloop					0045D1 AF                  B   301    				xor a							0045D2 C9                  B   302    s_rerr			ret
                           B   303    
                           B   304    ;----------------------------------------------
                           B   305    
0045D3                     B   306    s_makeblock
                           B   307    
                           B   308    ; set xIX = src addr
                           B   309    ; xDE = byte count
                           B   310    ; a=0 on return if all ok	
                           B   311    
0045D3 21 03 66 00         B   312    				ld hl,sector_buffer				0045D7 01000100            B   313    				ld bc,256						Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 183


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
0045DB AF                  B   314    				xor a							0045DC CD 79 15 00         B   315    				call os_bchl_memfill			                           B   316    				
0045E0 0600                B   317    				ld b,0							0045E2 FD21 03 66 00       B   318    				ld iy,sector_buffer	
0045E7 DD7E00              B   319    s_sloop			ld a,(ix)
0045EA FD7700              B   320    				ld (iy),a
0045ED 1B                  B   321    				dec de							0045EE 21000000            B   322    				ld hl,0
0045F2 AF                  B   323    				xor a
0045F3 ED5A                B   324    				adc hl,de
0045F5 28 12               B   325    				jr z,s_mbend	
0045F7 FD23                B   326    				inc iy							0045F9 C5                  B   327    				push bc
0045FA 01010000            B   328    				ld bc,1
0045FE DD09                B   329    				add ix,bc						004600 C1                  B   330    				pop bc							004601 20 04               B   331    				jr nz,s_sbok
004603 3E84                B   332    				ld a,84h						004605 B7                  B   333    				or a
004606 C9                  B   334    				ret
004607 10 DE               B   335    s_sbok			djnz s_sloop
004609 AF                  B   336    s_mbend			xor a
00460A C9                  B   337    				ret
                           B   338    
                           B   339    
                           B   340    
00460B                     B   341    s_sendblock
                           B   342    
00460B E5                  B   343    				push hl
00460C D5                  B   344    				push de							00460D C5                  B   345    				push bc				
00460E 21 03 66 00         B   346    				ld hl,sector_buffer			
004612 1E00                B   347    				ld e,0
004614 7E                  B   348    s_sblklp		ld a,(hl)
004615 CD 3F 3D 00         B   349    				call send_serial_byte
004619 23                  B   350    				inc hl
00461A 1D                  B   351    				dec e
00461B 20 F7               B   352    				jr nz,s_sblklp
00461D 11 03 66 00         B   353    				ld de,sector_buffer
004621 01000000            B   354    				ld bc,0
004625 CD 1F 15 00         B   355    				call crc_checksum
004629 7D                  B   356    				ld a,l
00462A CD 3F 3D 00         B   357    				call send_serial_byte
00462E 7C                  B   358    				ld a,h
00462F CD 3F 3D 00         B   359    				call send_serial_byte
004633 AF                  B   360    				xor a
004634 C1                  B   361    s_popall		pop bc
004635 D1                  B   362    				pop de
004636 E1                  B   363    				pop hl
004637 C9                  B   364    				ret
                           B   365    	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 184


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
                           B   366    
004638                     B   367    s_waitack
004638 E5                  B   368    				push hl
004639 D5                  B   369    				push de
00463A C5                  B   370    				push bc
00463B CD 04 3D 00         B   371    				call receive_serial_byte		00463F 20 F3               B   372    				jr nz,s_popall
004641 47                  B   373    				ld b,a
004642 CD 04 3D 00         B   374    				call receive_serial_byte
004646 20 EC               B   375    				jr nz,s_popall
004648 4F                  B   376    				ld c,a
004649 264F                B   377    				ld h,'O'
00464B 2E4B                B   378    				ld l,'K'
00464D AF                  B   379    				xor a
00464E 52ED42              B   380    				sbc.s hl,bc						004651 28 E1               B   381    				jr z,s_popall					                           B   382    			
004653 3E85                B   383    				ld a,085h						004655 B7                  B   384    				or a
004656 18 DC               B   385    				jr s_popall
                           B   386    
                           B   387    	
                           B   388    ;----------------------------------------------
                           B     0    	include		'prose_fat16_code.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; eZ80 FAT16 File System code for PROSE by Phil
                           B     3    ;----------------------------------------------
                           B     4    ;
                           B     5    ; Changes:
                           B     6    ;
                           B     7    ; 0.05 - Fixed format command
                           B     8    ; 0.04 - File system error codes are now in the
                           B     9    ; 0.03 - ADL mode
                           B    10    ; 0.02 - removed references to banks, added 24 
                           B    11    ; 0.01 - first version based on FLOS routines v
                           B    12    ;
                           B    13    ; Known limitations:
                           B    14    ; ------------------
                           B    15    ; If a disk full error is returned during a fil
                           B    16    ; Allows a file to be created in root even if t
                           B    17    ;        
                           B    18    ;----------------------------------------------
                           B    19    ;
                           B    20    ; All routines return carry clear / zero flag s
                           B    21    ;
                           B    22    ; Carry set = hardware error, A = error byte fr
                           B    23    ;
                           B    24    ; Carry clear, A = 	00 $00 - Command completed 
                           B    25    ;
                           B    26    ;					$c1  - Disk full
                           B    27    ;					$c2  - file not found
                           B    28    ;             	    $c3  - (root) dir table is 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 185


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B    29    ;					$c4  - directory requested 
                           B    30    ;             	    $c5  - cant delete dir, it 
                           B    31    ;					$c6  - not a file
                           B    32    ;					$c7  - file length is zero
                           B    33    ;              	    $c8  - out of memory
                           B    34    ;					$c9  - filename already exi
                           B    35    ;					$ca  - already at root dire
                           B    36    ;                  	$cb  - directory not found
                           B    37    ;					$cc  - requested bytes beyo
                           B    38    ;					$cd  - invalid filename
                           B    39    ;					$ce  - unknown/incorrect di
                           B    40    ;					$cf  - invalid volume
                           B    41    ;                 	$d0  - device not present	                           B    42    ;					$d1  - directory not found	                           B    43    ;                 	$d2  - end of directory lis
                           B    44    ;                 	$d3  - device does not use 
                           B    45    ;                  	$d4  - cant find volume lab
                           B    46    ;                   $d5  - sector out of range
                           B    47    
                           B    48    ;----------------------------------------------
                           B    49    ; Main routines called by external programs
                           B    50    ;----------------------------------------------
                           B    51    
004658                     B    52    fs_format_device_command
                           B    53    
                           B    54    ; Creates a single partition (truncated to 2GB)
                           B    55    
                           B    56    
004658 3A D7 5E 00         B    57    				ld a,(device_count)				00465C 47                  B    58    				ld b,a							00465D DD21 87 5F 00       B    59    				ld ix,host_device_hardware_info
004662 3A D6 5E 00         B    60    fdevinfo		ld a,(current_driver)
004666 DDBE00              B    61    				cp (ix)
004669 28 09               B    62    				jr z,got_dev_info
00466B ED3220              B    63    				lea ix,ix+32
00466E 10 F2               B    64    				djnz fdevinfo
004670 AF                  B    65    				xor a
004671 3ED0                B    66    				ld a,0d0h						004673 C9                  B    67    				ret	
                           B    68    	
004674 CD 07 51 00         B    69    got_dev_info	call fs_clear_sector_buffer		004678 11000000            B    70    				ld de,0							00467C CD 6C 47 00         B    71    form_ws			call set_lba_and_write_sector
004680 D8                  B    72    				ret c
004681 13                  B    73    				inc de
004682 7A                  B    74    				ld a,d
004683 FE03                B    75    				cp 3
004685 20 F5               B    76    				jr nz,form_ws
                           B    77    	
004687 21 B5 53 00         B    78    				ld hl,bootsector_stub			00468B 11 03 66 00         B    79    				ld de,sector_buffer				00468F 013F0000            B    80    				ld bc,03fh
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 186


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004693 EDB0                B    81    				ldir
                           B    82    	
004695 DD7E04              B    83    				ld a,(ix+4)						004698 B7                  B    84    				or a
004699 20 0C               B    85    				jr nz,above_2gb
00469B 2100FF3F            B    86    				ld hl,3fff00h					00469F DD1701              B    87    				ld de,(ix+1)					0046A2 AF                  B    88    				xor a			
0046A3 ED52                B    89    				sbc hl,de						0046A5 30 08               B    90    				jr nc,lessthan2gb				0046A7 3E40                B    91    above_2gb		ld a,40h						0046A9 1100FF3F            B    92    				ld de,3fff00h					0046AD 18 11               B    93    				jr spcvalok
                           B    94    
0046AF DD4E03              B    95    lessthan2gb		ld c,(ix+3)						0046B2 0C                  B    96    				inc c							0046B3 3E01                B    97    spc_loop		ld a,1							0046B5 B9                  B    98    spc_comp		cp c							0046B6 28 08               B    99    				jr z,spcvalok
0046B8 07                  B   100    				rlca
0046B9 FE80                B   101    				cp 080h							0046BB 20 F8               B   102    				jr nz,spc_comp
0046BD 0C                  B   103    				inc c			
0046BE 18 F3               B   104    				jr spc_loop						                           B   105    							
0046C0 DD21 03 66 00       B   106    spcvalok		ld ix,sector_buffer
0046C5 DD770D              B   107    				ld (ix+0dh),a					                           B   108    				
0046C8 CD 96 15 00         B   109    				call os_get_xde_msb				0046CC 4F                  B   110    				ld c,a							0046CD B7                  B   111    				or a							0046CE 20 08               B   112    				jr nz,ts_dword					0046D0 DD7313              B   113    				ld (ix+13h),e					0046D3 DD7214              B   114    				ld (ix+14h),d
0046D6 18 07               B   115    				jr ts_done
0046D8 DD1F20              B   116    ts_dword		ld (ix+20h),de					0046DB DD362300            B   117    				ld (ix+23h),0
                           B   118    
0046DF EB                  B   119    ts_done			ex de,hl						0046E0 11000000            B   120    				ld de,0						
0046E4 DD560D              B   121    				ld d,(ix+0dh)					0046E7 01000000            B   122    				ld bc,0							0046EB AF                  B   123    div_tscls		xor a							0046EC ED52                B   124    				sbc hl,de
0046EE 28 05               B   125    				jr z,gotfats
0046F0 38 03               B   126    				jr c,gotfats	
0046F2 03                  B   127    				inc bc
0046F3 18 F6               B   128    				jr div_tscls
0046F5 03                  B   129    gotfats			inc bc
0046F6 DD7116              B   130    				ld (ix+16h),c					0046F9 DD7017              B   131    				ld (ix+17h),b
0046FC ED43 05 54 00       B   132    				ld (fs_sectors_per_fat),bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 187


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B   133    				
004701 010055AA            B   134    				ld bc,0aa5500h
004705 ED43 00 68 00       B   135    				ld (sector_buffer+1fdh),bc		00470A 11000000            B   136    				ld de,0
00470E CD 6C 47 00         B   137    				call set_lba_and_write_sector	004712 D8                  B   138    				ret c
                           B   139    				
004713 21000000            B   140    				ld hl,0
004717 DD6E0E              B   141    				ld l,(ix+0eh)					00471A DD660F              B   142    				ld h,(ix+0fh)
00471D 19                  B   143    				add hl,de
00471E EB                  B   144    				ex de,hl						                           B   145    				
00471F CD 07 51 00         B   146    				call fs_clear_sector_buffer		004723 DD3600FF            B   147    				ld (ix+0),0ffh
004727 DD3601F8            B   148    				ld (ix+1),0f8h
00472B DD3602FF            B   149    				ld (ix+2),0ffh
00472F DD3603FF            B   150    				ld (ix+3),0ffh
004733 CD 6C 47 00         B   151    				call set_lba_and_write_sector	004737 D8                  B   152    				ret c
                           B   153    
004738 2A 05 54 00         B   154    				ld hl,(fs_sectors_per_fat)	
00473C 19                  B   155    				add hl,de
00473D EB                  B   156    				ex de,hl
00473E CD 6C 47 00         B   157    				call set_lba_and_write_sector 	004742 D8                  B   158    				ret c	
                           B   159    				
004743 D5                  B   160    				push de							004744 CD 07 51 00         B   161    				call fs_clear_sector_buffer
004748 21 0B 54 00         B   162    				ld hl,fs_sought_filename
00474C 11 03 66 00         B   163    				ld de,sector_buffer
004750 010B0000            B   164    				ld bc,11
004754 EDB0                B   165    				ldir							004756 D1                  B   166    				pop de							004757 DD360B08            B   167    				ld (ix+0bh),8					00475B DD361821            B   168    				ld (ix+018h),021h				00475F 2A 05 54 00         B   169    				ld hl,(fs_sectors_per_fat)		004763 19                  B   170    				add hl,de
004764 EB                  B   171    				ex de,hl
004765 CD 6C 47 00         B   172    				call set_lba_and_write_sector	004769 D8                  B   173    				ret c	
                           B   174    			
00476A AF                  B   175    				xor a							00476B C9                  B   176    				ret
                           B   177    	
                           B   178    
                           B   179    
00476C                     B   180    set_lba_and_write_sector
                           B   181    
00476C DDE5                B   182    				push ix
00476E DD21 AF 60 00       B   183    				ld ix,sector_lba0				004773 DD1F00              B   184    				ld (ix),de						Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 188


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004776 DD360300            B   185    				ld (ix+3),0
00477A DDE1                B   186    				pop ix
00477C CD 99 53 00         B   187    				call fs_write_sector
004780 C9                  B   188    				ret
                           B   189    				
                           B   190    				
                           B   191    ;----------------------------------------------
                           B   192    
004781                     B   193    fs_get_partition_info
                           B   194    
                           B   195    ; Set A to partition: $00 to $03
                           B   196    ; On return: If A = $00, xHL = Address of reque
                           B   197    ;            If A = $25, A partition table is n
                           B   198    ;            If A = $13, Disk format is bad 
                           B   199    ;            If carry flag set, there was a har
                           B   200    
                           B   201    
004781 32 0A 60 00         B   202    				ld (partition_temp),a
                           B   203    				
004785 21000000            B   204    				ld hl,0							004789 22 AF 60 00         B   205    				ld (sector_lba0),hl
00478D 7D                  B   206    				ld a,l
00478E 32 B2 60 00         B   207    				ld (sector_lba3),a
004792 CD 81 53 00         B   208    				call fs_read_sector
004796 D8                  B   209    				ret c
                           B   210    			
004797 CD D2 47 00         B   211    				call fs_check_fat_sig			00479B 20 42               B   212    				jr nz,formbad
                           B   213    			
00479D CD C3 47 00         B   214    				call check_fat16_id				0047A1 28 1C               B   215    				jr z,at_pbs						                           B   216    				
0047A3 3A C5 67 00         B   217    				ld a,(sector_buffer+01c2h)		0047A7 E604                B   218    				and 4							0047A9 28 34               B   219    				jr z,formbad	
0047AB 11000000            B   220    				ld de,0
0047AF 3A 0A 60 00         B   221    				ld a,(partition_temp)
0047B3 5F                  B   222    				ld e,a
0047B4 1610                B   223    				ld d,16
0047B6 ED5C                B   224    				mlt de
0047B8 21 C1 67 00         B   225    				ld hl,sector_buffer+01beh
0047BC 19                  B   226    				add hl,de						0047BD AF                  B   227    				xor a
0047BE C9                  B   228    				ret
                           B   229    					
0047BF AF                  B   230    at_pbs			xor a
0047C0 3ED3                B   231    				ld a,0d3h						0047C2 C9                  B   232    				ret
                           B   233    
                           B   234    
                           B   235    
0047C3                     B   236    check_fat16_id
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 189


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B   237    		
0047C3 21 39 66 00         B   238    				ld hl,sector_buffer+036h		0047C7 11 D6 58 00         B   239    				ld de,fat16_txt			
0047CB 0605                B   240    				ld b,5
0047CD CD DC 11 00         B   241    				call os_compare_strings
0047D1 C9                  B   242    				ret
                           B   243    				
                           B   244    ;----------------------------------------------
                           B   245    
                           B   246    
0047D2                     B   247    fs_check_fat_sig
                           B   248    
0047D2 2A 01 68 00         B   249    				ld hl,(sector_buffer+01feh)		0047D6 1155AA00            B   250    				ld de,0aa55h
0047DA AF                  B   251    				xor a
0047DB 52ED52              B   252    				sbc.s hl,de						0047DE C9                  B   253    				ret
                           B   254    			
                           B   255    			
                           B   256    			
0047DF AF                  B   257    formbad			xor a
0047E0 3ECE                B   258    				ld a,0ceh						0047E2 C9                  B   259    				ret
                           B   260    
                           B   261    ;----------------------------------------------
                           B   262    
                           B   263    
0047E3                     B   264    fs_check_disk_format
                           B   265    
                           B   266    ; ensures disk is FAT16, sets up constants..
                           B   267    	
0047E3 C5                  B   268    				push bc
0047E4 D5                  B   269    				push de
0047E5 E5                  B   270    				push hl
0047E6 CD EE 47 00         B   271    				call go_checkf
0047EA E1                  B   272    				pop hl
0047EB D1                  B   273    				pop de
0047EC C1                  B   274    				pop bc
0047ED C9                  B   275    				ret
                           B   276    				
0047EE CD A2 1A 00         B   277    go_checkf		call fs_calc_volume_offset	
0047F2 21 07 5F 00         B   278    				ld hl,volume_mount_list
0047F6 19                  B   279    				add hl,de
0047F7 7E                  B   280    				ld a,(hl)
0047F8 B7                  B   281    				or a							0047F9 20 04               B   282    				jr nz,fs_volpre
0047FB AF                  B   283    				xor a
0047FC 3ECF                B   284    				ld a,cfh						0047FE C9                  B   285    				ret
                           B   286    			
0047FF 11080000            B   287    fs_volpre		ld de,8							004803 19                  B   288    				add hl,de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 190


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004804 11 AF 60 00         B   289    				ld de,sector_lba0
004808 01040000            B   290    				ld bc,4
00480C EDB0                B   291    				ldir
00480E CD 81 53 00         B   292    				call fs_read_sector
004812 D8                  B   293    				ret c	
                           B   294    				
004813 CD D2 47 00         B   295    				call fs_check_fat_sig			004817 20 C6               B   296    				jr nz,formbad		
                           B   297    			
004819 CD C3 47 00         B   298    				call check_fat16_id				00481D 20 C0               B   299    				jr nz,formbad
                           B   300    			
00481F DD21 03 66 00       B   301    				ld ix,sector_buffer
004824 DD270B              B   302    				ld hl,(ix+0bh)					004827 11000200            B   303    				ld de,512						00482B AF                  B   304    				xor a
00482C 52ED52              B   305    				sbc.s hl,de						00482F 20 AE               B   306    				jr nz,formbad
                           B   307    			
004831 DD7E0D              B   308    				ld a,(ix+0dh)					004834 32 F4 53 00         B   309    				ld (fs_cluster_size),a
004838 CB27                B   310    				sla a
00483A 32 F6 53 00         B   311    				ld (fs_bytes_per_cluster+1),a
                           B   312    							
00483E 21000000            B   313    				ld hl,0
004842 DD6E0E              B   314    				ld l,(ix+0eh)					004845 DD660F              B   315    				ld h,(ix+0fh)
004848 22 F8 53 00         B   316    				ld (fs_fat1_position),hl		00484C 11000000            B   317    				ld de,0
004850 DD5E16              B   318    				ld e,(ix+16h)					004853 DD5617              B   319    				ld d,(ix+17h)
004856 ED53 05 54 00       B   320    				ld (fs_sectors_per_fat),de
00485B 19                  B   321    				add hl,de
00485C 22 FB 53 00         B   322    				ld (fs_fat2_position),hl		004860 19                  B   323    				add hl,de
004861 22 FE 53 00         B   324    				ld (fs_root_dir_position),hl 	004865 EB                  B   325    				ex de,hl
004866 DD6E11              B   326    				ld l,(ix+11h)					004869 DD6612              B   327    				ld h,(ix+12h)					00486C 7C                  B   328    				ld a,h
00486D B5                  B   329    				or l
00486E CA DF 47 00         B   330    				jr z,formbad					004872 29                  B   331    				add hl,hl						004873 29                  B   332    				add hl,hl						004874 29                  B   333    				add hl,hl
004875 29                  B   334    				add hl,hl
004876 EB                  B   335    				ex de,hl
004877 7A                  B   336    				ld a,d
004878 32 04 54 00         B   337    				ld (fs_root_dir_sectors),a		00487C 01000000            B   338    				ld bc,0
004880 4A                  B   339    				ld c,d
004881 09                  B   340    				add hl,bc				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 191


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004882 22 01 54 00         B   341    				ld (fs_data_area),hl			                           B   342    												004886 21000000            B   343    				ld hl,0
00488A 01000000            B   344    				ld bc,0
00488E DD4E22              B   345    				ld c,(ix+022h)					004891 DD4623              B   346    				ld b,(ix+023h)
004894 DD6E13              B   347    				ld l,(ix+013h)					004897 DD6614              B   348    				ld h,(ix+014h)
00489A 7C                  B   349    				ld a,h							00489B B5                  B   350    				or l
00489C 20 06               B   351    				jr nz,got_tsfbs
00489E DD6E20              B   352    				ld l,(ix+020h)					0048A1 DD6621              B   353    				ld h,(ix+021h)
0048A4 ED5B 01 54 00       B   354    got_tsfbs 		ld de,(fs_data_area)
0048A9 AF                  B   355    				xor a							0048AA 52ED52              B   356    				sbc.s hl,de						0048AD 30 02               B   357    				jr nc,nomxcb
0048AF 520B                B   358    				dec.s bc
0048B1 3A F4 53 00         B   359    nomxcb			ld a,(fs_cluster_size)
0048B5 CB3F                B   360    fmaxcl			srl a
0048B7 28 08               B   361    				jr z,got_cmaxc					0048B9 CB39                B   362    				srl c				
0048BB CB1C                B   363    				rr h
0048BD CB1D                B   364    				rr l
0048BF 18 F4               B   365    				jr fmaxcl
0048C1 E5                  B   366    got_cmaxc		push hl							0048C2 11F0FF00            B   367    				ld de,0fff0h
0048C6 AF                  B   368    				xor a
0048C7 52ED52              B   369    				sbc.s hl,de						0048CA 38 02               B   370    				jr c,cmaxok
0048CC E1                  B   371    				pop hl
0048CD D5                  B   372    				push de
0048CE E1                  B   373    cmaxok			pop hl
0048CF 22 08 54 00         B   374    				ld (fs_max_data_clusters),hl
0048D3 AF                  B   375    				xor a
0048D4 C9                  B   376    				ret				
                           B   377    
                           B   378    ;----------------------------------------------
                           B   379    
0048D5                     B   380    fs_calc_free_space
                           B   381    
                           B   382    ;returns free space in KB in HL:DE
                           B   383    
0048D5 ED5B 08 54 00       B   384    				ld de,(fs_max_data_clusters)
0048DA 13                  B   385    				inc de
0048DB 13                  B   386    				inc de							0048DC D5                  B   387    				push de
0048DD DDE1                B   388    				pop ix
                           B   389    			
0048DF AF                  B   390    				xor a
0048E0 32 4D 54 00         B   391    cfs_lp2			ld (fs_working_sector),a
0048E4 2A F8 53 00         B   392    				ld hl,(fs_fat1_position)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 192


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
0048E8 CD 57 53 00         B   393    				call set_abs_lba_and_read_secto
0048EC D8                  B   394    				ret c
                           B   395    				
0048ED 21 03 66 00         B   396    				ld hl,sector_buffer
0048F1 0600                B   397    				ld b,0
0048F3 AF                  B   398    cfs_lp1			xor a
0048F4 B6                  B   399    				or a,(hl)						0048F5 23                  B   400    				inc hl							0048F6 20 03               B   401    				jr nz,cfs_ciu					0048F8 B6                  B   402    				or a,(hl)
0048F9 28 02               B   403    				jr z,cfs_ddcc
0048FB DD2B                B   404    cfs_ciu			dec ix							0048FD 23                  B   405    cfs_ddcc		inc hl
0048FE 1B                  B   406    				dec de
0048FF 7A                  B   407    				ld a,d
004900 B3                  B   408    				or e
004901 28 09               B   409    				jr z,cfs_ok						004903 10 EE               B   410    				djnz cfs_lp1
004905 3A 4D 54 00         B   411    				ld a,(fs_working_sector)
004909 3C                  B   412    				inc a
00490A 18 D4               B   413    				jr cfs_lp2
                           B   414    				
00490C 3A F4 53 00         B   415    cfs_ok			ld a,(fs_cluster_size)			004910 CB3F                B   416    cltoslp			srl a
004912 28 04               B   417    				jr z,powdone
004914 DD29                B   418    				add ix,ix
004916 18 F8               B   419    				jr cltoslp	
004918 FD21 CB 60 00       B   420    powdone			ld iy,xrr_temp
00491D FD3E00              B   421    				ld (iy),ix						004920 FDCB023E            B   422    				srl (iy+2)
004924 FDCB011E            B   423    				rr (iy+1)
004928 FDCB001E            B   424    				rr (iy+0)						00492C FD1700              B   425    				ld de,(iy)						00492F AF                  B   426    				xor a
004930 C9                  B   427    				ret
                           B   428    
                           B   429    ;----------------------------------------------
                           B   430    
004931                     B   431    fs_change_dir_command
                           B   432    
                           B   433    ; INPUT: HL = directory name ascii (zero/space 
                           B   434    			
                           B   435    			
004931 CD 19 51 00         B   436    				call fs_find_filename			004935 D8                  B   437    				ret c							004936 FEC2                B   438    				cp 0c2h							004938 20 04               B   439    				jr nz,founddir
00493A AF                  B   440    				xor a							00493B 3ED1                B   441    				ld a,0d1h						00493D C9                  B   442    				ret
00493E AF                  B   443    founddir		xor a							00493F 3E04                B   444    				ld a,04h						Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 193


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004941 DDCB0B66            B   445    				bit 4,(ix+0bh)
004945 C8                  B   446    				ret z
004946 11000000            B   447    				ld de,0
00494A DD5E1A              B   448    				ld e,(ix+01ah)
00494D DD561B              B   449    				ld d,(ix+01bh)					004950 CD 74 1A 00         B   450    				call fs_update_dir_cluster
004954 AF                  B   451    				xor a
004955 C9                  B   452    				ret
                           B   453    
                           B   454    
                           B   455    ;----------------------------------------------
                           B   456    	
                           B   457    	
004956                     B   458    fs_goto_root_dir_command
                           B   459    
004956 D5                  B   460    				push de
004957 11000000            B   461    				ld de,0
00495B CD 74 1A 00         B   462    				call fs_update_dir_cluster
00495F D1                  B   463    				pop de
004960 AF                  B   464    				xor a
004961 C9                  B   465    				ret
                           B   466    
                           B   467    ;----------------------------------------------
                           B   468    	
                           B   469    	
004962                     B   470    fs_parent_dir_command
                           B   471    
004962 CD 68 1A 00         B   472    				call fs_get_dir_cluster
004966 7A                  B   473    				ld a,d
004967 B3                  B   474    				or e
004968 20 03               B   475    				jr nz,pdnaroot
00496A 3ECA                B   476    				ld a,0cah						00496C C9                  B   477    				ret
00496D 212E2E20            B   478    pdnaroot		ld hl,0202e2eh					004971 22 0B 54 00         B   479    				ld (fs_sought_filename),hl		004975 21 0E 54 00         B   480    				ld hl,fs_sought_filename+3		004979 3E20                B   481    				ld a,32
00497B 01080000            B   482    				ld bc,8
00497F CD 79 15 00         B   483    				call os_bchl_memfill
004983 18 AC               B   484    				jr fs_change_dir_command
                           B   485    				
                           B   486    		
                           B   487    ;----------------------------------------------
                           B   488    		
004985                     B   489    fs_open_file_command
                           B   490    
                           B   491    ; INPUT: xHL = directory name ascii (zero/space
                           B   492    ; OUTPUT: C:xDE  = File length
                           B   493    ;            HL  = Start cluster of file
                           B   494    ;            Internal vars (file pointer reset 
                           B   495    
                           B   496    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 194


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004985 CD 19 51 00         B   497    				call fs_find_filename			004989 D8                  B   498    				ret c							00498A C0                  B   499    				ret nz							                           B   500    								
00498B 3EC6                B   501    				ld a,0c6h						00498D DDCB0B66            B   502    				bit 4,(ix+0bh)
004991 C0                  B   503    				ret nz
                           B   504    
004992 AF                  B   505    				xor a
004993 32 61 54 00         B   506    				ld (fs_filepointer_valid),a		004997 21000000            B   507    				ld hl,0
00499B 22 2F 54 00         B   508    				ld (fs_file_pointer),hl			00499F 32 32 54 00         B   509    				ld (fs_file_pointer+3),a		                           B   510    				
0049A3 DD171C              B   511    				ld de,(ix+01ch)
0049A6 D5                  B   512    				push de
0049A7 E1                  B   513    				pop hl
0049A8 DD4E1F              B   514    				ld c,(ix+01fh)					0049AB ED53 33 54 00       B   515    				ld (fs_file_length),de			0049B0 79                  B   516    				ld a,c
0049B1 32 36 54 00         B   517    				ld (fs_file_length+3),a			0049B5 B7                  B   518    				or a							0049B6 28 04               B   519    				jr z,fs_dflsm					0049B8 21FFFFFF            B   520    				ld hl,0ffffffh
0049BC 22 3B 54 00         B   521    fs_dflsm		ld (fs_file_transfer_length),hl
                           B   522    				
0049C0 21000000            B   523    				ld hl,0
0049C4 DD6E1A              B   524    				ld l,(ix+01ah)		
0049C7 DD661B              B   525    				ld h,(ix+01bh)
0049CA 22 3E 54 00         B   526    				ld (fs_file_start_cluster),hl	0049CE AF                  B   527    				xor a
0049CF C9                  B   528    				ret
                           B   529    
                           B   530    	
                           B   531    ;----------------------------------------------
                           B   532    
0049D0                     B   533    fs_read_data_command		
                           B   534    
                           B   535    ;*******************************************
                           B   536    ;*** 'fs_open_file' must be called first ***
                           B   537    ;*******************************************
                           B   538    		
0049D0 2A 3B 54 00         B   539    fs_load			ld hl,(fs_file_transfer_length)
0049D4 11000000            B   540    				ld de,0
0049D8 AF                  B   541    				xor a
0049D9 ED5A                B   542    				adc hl,de
0049DB 20 04               B   543    				jr nz,fs_btrok
0049DD AF                  B   544    fs_fliz			xor a							0049DE 3EC7                B   545    				ld a,0c7h						0049E0 C9                  B   546    				ret
                           B   547    			 
0049E1 2A 44 54 00         B   548    fs_btrok		ld hl,(fs_ez80_address)			Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 195


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
0049E5 22 47 54 00         B   549    				ld (fs_ez80_working_address),hl
                           B   550    			
0049E9 2A 33 54 00         B   551    				ld hl,(fs_file_length)			0049ED ED4B 2F 54 00       B   552    				ld bc,(fs_file_pointer)			0049F2 3A 32 54 00         B   553    				ld a,(fs_file_pointer+3)		0049F6 5F                  B   554    				ld e,a
0049F7 3A 36 54 00         B   555    				ld a,(fs_file_length+3)
0049FB B7                  B   556    				or a							0049FC ED42                B   557    				sbc hl,bc
0049FE 9B                  B   558    				sbc a,e
0049FF 38 09               B   559    				jr c,fs_fpbad
004A01 01000000            B   560    				ld bc,0
004A05 AF                  B   561    				xor a
004A06 ED4A                B   562    				adc hl,bc
004A08 20 04               B   563    				jr nz,fs_fpok
004A0A AF                  B   564    fs_fpbad		xor a
004A0B 3ECC                B   565    				ld a,0cch						004A0D C9                  B   566    				ret
                           B   567    			
                           B   568    	
004A0E 3A 61 54 00         B   569    fs_fpok			ld a,(fs_filepointer_valid)		004A12 B7                  B   570    				or a							004A13 28 1B               B   571    				jr z,seek_strt
                           B   572    			
004A15 ED5B 47 54 00       B   573    				ld de,(fs_ez80_working_address)
004A1A ED4B 62 54 00       B   574    				ld bc,(fs_sector_pos_cnt)		004A1F C5                  B   575    				push bc
004A20 ED4B 4A 54 00       B   576    				ld bc,(fs_in_sector_offset)
004A25 21 03 68 00         B   577    				ld hl,sector_buffer+0200h		004A29 AF                  B   578    				xor a
004A2A ED42                B   579    				sbc hl,bc		
004A2C C3 BC 4A 00         B   580    				jr fs_dadok
                           B   581    				
                           B   582    			
004A30 3E01                B   583    seek_strt		ld a,1
004A32 32 61 54 00         B   584    				ld (fs_filepointer_valid),a
004A36 2A 3E 54 00         B   585    				ld hl,(fs_file_start_cluster)	004A3A 22 41 54 00         B   586    				ld (fs_file_working_cluster),hl
                           B   587    			
004A3E 3A 32 54 00         B   588    				ld a,(fs_file_pointer+3)		004A42 2A 2F 54 00         B   589    				ld hl,(fs_file_pointer)			004A46 ED4B F5 53 00       B   590    fs_fpblp		ld bc,(fs_bytes_per_cluster)
004A4B AF                  B   591    				xor a
004A4C ED42                B   592    				sbc hl,bc						004A4E DE00                B   593    				sbc a,0
004A50 38 14               B   594    				jr c,fs_fpgbo
004A52 E5                  B   595    fs_fpgnb		push hl				
004A53 2A 41 54 00         B   596    				ld hl,(fs_file_working_cluster)
004A57 CD 29 52 00         B   597    				call get_fat_entry_for_cluster
004A5B 30 02               B   598    				jr nc,fs_ghok					004A5D E1                  B   599    				pop hl
004A5E C9                  B   600    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 196


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004A5F 22 41 54 00         B   601    fs_ghok			ld (fs_file_working_cluster),hl
004A63 E1                  B   602    				pop hl
004A64 18 E0               B   603    				jr fs_fpblp
                           B   604    			
004A66 09                  B   605    fs_fpgbo		add hl,bc						004A67 4C                  B   606    				ld c,h
004A68 CB39                B   607    				srl c							004A6A 3A F4 53 00         B   608    				ld a,(fs_cluster_size)
004A6E 91                  B   609    				sub c
004A6F 47                  B   610    				ld b,a							004A70 7C                  B   611    				ld a,h
004A71 E601                B   612    				and 01h
004A73 67                  B   613    				ld h,a
004A74 22 4A 54 00         B   614    				ld (fs_in_sector_offset),hl		                           B   615    				
004A78 79                  B   616    fs_flns			ld a,c				
004A79 2A 41 54 00         B   617    				ld hl,(fs_file_working_cluster)
004A7D CD 00 53 00         B   618    				call cluster_and_offset_to_lba
004A81 CD 81 53 00         B   619    				call fs_read_sector				004A85 D8                  B   620    				ret c							                           B   621    			
004A86 C5                  B   622    				push bc							004A87 11000000            B   623    				ld de,0
004A8B 2A 4A 54 00         B   624    				ld hl,(fs_in_sector_offset)		004A8F 5D                  B   625    				ld e,l
004A90 54                  B   626    				ld d,h
004A91 21000200            B   627    				ld hl,512
004A95 AF                  B   628    				xor a
004A96 ED52                B   629    				sbc hl,de						004A98 44                  B   630    				ld b,h
004A99 4D                  B   631    				ld c,l							004A9A 21 03 66 00         B   632    				ld hl,sector_buffer				004A9E 19                  B   633    				add hl,de						004A9F ED5B 47 54 00       B   634    				ld de,(fs_ez80_working_address)
004AA4 EDA0                B   635    fs_cblp			ldi 							                           B   636    
004AA6 7A                  B   637    				ld a,d							004AA7 B3                  B   638    				or e
004AA8 20 0C               B   639    				jr nz,fs_edaok
004AAA ED53 47 54 00       B   640    				ld (fs_ez80_working_address),de
004AAF 3A 49 54 00         B   641    				ld a,(fs_ez80_working_address+2
004AB3 B7                  B   642    				or a
004AB4 28 43               B   643    				jr z,fs_mem_error
                           B   644    
004AB6 CD 89 52 00         B   645    fs_edaok		call transfer_length_countdown	004ABA 28 30               B   646    				jr z,fs_bdld
004ABC 78                  B   647    fs_dadok		ld a,b							004ABD B1                  B   648    				or c
004ABE 20 E4               B   649    				jr nz,fs_cblp
                           B   650    			
004AC0 ED43 4A 54 00       B   651    				ld (fs_in_sector_offset),bc		004AC5 ED53 47 54 00       B   652    				ld (fs_ez80_working_address),de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 197


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004ACA C1                  B   653    				pop bc							004ACB 0C                  B   654    				inc c							004ACC 10 AA               B   655    				djnz fs_flns					                           B   656    			
004ACE 2A 41 54 00         B   657    				ld hl,(fs_file_working_cluster)
004AD2 CD 29 52 00         B   658    				call get_fat_entry_for_cluster	004AD6 D8                  B   659    				ret c							004AD7 22 41 54 00         B   660    				ld (fs_file_working_cluster),hl
004ADB CD D2 4F 00         B   661    				call fs_compare_hl_fff8			004ADF D2 0A 4A 00         B   662    				jp nc,fs_fpbad			
004AE3 0E00                B   663    fs_nfbok		ld c,0							004AE5 3A F4 53 00         B   664    				ld a,(fs_cluster_size)	
004AE9 47                  B   665    				ld b,a							004AEA 18 8C               B   666    				jr fs_flns		
                           B   667    			
004AEC ED43 4A 54 00       B   668    fs_bdld			ld (fs_in_sector_offset),bc		004AF1 C1                  B   669    				pop bc							004AF2 ED43 62 54 00       B   670    				ld (fs_sector_pos_cnt),bc
004AF7 AF                  B   671    				xor a							004AF8 C9                  B   672    				ret
                           B   673    				
004AF9 3EC8                B   674    fs_mem_error	ld a,0c8h						004AFB C1                  B   675    fs_flerr		pop bc
004AFC B7                  B   676    				or a							004AFD C9                  B   677    				ret			
                           B   678    			
                           B   679    ;----------------------------------------------
                           B   680    
004AFE                     B   681    fs_make_dir_command		
                           B   682    				
004AFE CD 19 51 00         B   683    				call fs_find_filename			004B02 D8                  B   684    				ret c
004B03 FEC2                B   685    				cp 0c2h							004B05 28 04               B   686    				jr z,mdirfnde
004B07 AF                  B   687    				xor a							004B08 3EC9                B   688    				ld a,0c9h						004B0A C9                  B   689    				ret
                           B   690    			
004B0B CD DF 4F 00         B   691    mdirfnde		call fs_find_free_cluster		004B0F D8                  B   692    				ret c							004B10 C0                  B   693    				ret nz							                           B   694    							
004B11 2A 51 54 00         B   695    				ld hl,(fs_free_cluster)
004B15 22 54 54 00         B   696    				ld (fs_new_file_cluster),hl
                           B   697    			
004B19 CD 30 50 00         B   698    				call fs_find_free_dir_entry		004B1D D8                  B   699    				ret c							004B1E C0                  B   700    				ret nz							                           B   701    			
004B1F DDE5                B   702    				push ix							004B21 D1                  B   703    				pop de
004B22 21 0B 54 00         B   704    				ld hl,fs_sought_filename
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 198


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004B26 010B0000            B   705    				ld bc,11
004B2A EDB0                B   706    				ldir
004B2C AF                  B   707    				xor a							004B2D 0615                B   708    				ld b,21
004B2F 12                  B   709    clrdiren		ld (de),a
004B30 13                  B   710    				inc de
004B31 10 FC               B   711    				djnz clrdiren
004B33 DD360B10            B   712    				ld (ix+0bh),010h				004B37 DD361821            B   713    				ld (ix+018h),021h				004B3B ED5B 54 54 00       B   714    				ld de,(fs_new_file_cluster)
004B40 DD731A              B   715    				ld (ix+01ah),e					004B43 DD721B              B   716    				ld (ix+01bh),d
004B46 CD 99 53 00         B   717    				call fs_write_sector			004B4A D8                  B   718    				ret c							                           B   719    				
004B4B CD 07 51 00         B   720    				call fs_clear_sector_buffer
004B4F DD21 03 66 00       B   721    				ld ix,sector_buffer				004B54 DD36002E            B   722    				ld (ix+00h),02eh				004B58 DD360120            B   723    				ld (ix+01h),020h
004B5C DD36202E            B   724    				ld (ix+020h),02eh
004B60 DD36212E            B   725    				ld (ix+021h),02eh
004B64 DD360B10            B   726    				ld (ix+0bh),010h
004B68 DD362B10            B   727    				ld (ix+02bh),010h
004B6C ED5B 54 54 00       B   728    				ld de,(fs_new_file_cluster)		004B71 DD731A              B   729    				ld (ix+01ah),e
004B74 DD721B              B   730    				ld (ix+01bh),d
004B77 CD 68 1A 00         B   731    				call fs_get_dir_cluster			004B7B DD733A              B   732    				ld (ix+03ah),e
004B7E DD723B              B   733    				ld (ix+03bh),d
004B81 DD361821            B   734    				ld (ix+018h),021h				004B85 DD363821            B   735    				ld (ix+038h),021h				004B89 0609                B   736    				ld b,9
004B8B DD360220            B   737    mndelp			ld (ix+002h),32
004B8F DD362220            B   738    				ld (ix+022h),32
004B93 DD23                B   739    				inc ix
004B95 10 F4               B   740    				djnz mndelp
004B97 2A 54 54 00         B   741    				ld hl,(fs_new_file_cluster)		004B9B AF                  B   742    				xor a
004B9C CD 00 53 00         B   743    				call cluster_and_offset_to_lba
004BA0 CD 99 53 00         B   744    				call fs_write_sector
004BA4 D8                  B   745    				ret c							                           B   746    			
004BA5 CD 07 51 00         B   747    				call fs_clear_sector_buffer		004BA9 AF                  B   748    				xor a
004BAA 3C                  B   749    wroslp			inc a
004BAB 32 4D 54 00         B   750    				ld (fs_working_sector),a
004BAF 21 F4 53 00         B   751    				ld hl,fs_cluster_size
004BB3 BE                  B   752    				cp (hl)
004BB4 28 13               B   753    				jr z,allsclr
004BB6 2A 54 54 00         B   754    				ld hl,(fs_new_file_cluster)
004BBA CD 00 53 00         B   755    				call cluster_and_offset_to_lba
004BBE CD 99 53 00         B   756    				call fs_write_sector
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 199


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004BC2 D8                  B   757    				ret c
004BC3 3A 4D 54 00         B   758    				ld a,(fs_working_sector)
004BC7 18 E1               B   759    				jr wroslp
                           B   760    			
004BC9 2A 54 54 00         B   761    allsclr			ld hl,(fs_new_file_cluster)		004BCD 11FFFF00            B   762    				ld de,0ffffh
004BD1 CD 55 52 00         B   763    				call update_fat_entry_for_clust
004BD5 AF                  B   764    				xor a
004BD6 C9                  B   765    				ret
                           B   766    
                           B   767    
                           B   768    
                           B   769    ;----------------------------------------------
                           B   770    
004BD7                     B   771    fs_delete_dir_command
                           B   772    
004BD7 CD 19 51 00         B   773    				call fs_find_filename			004BDB D8                  B   774    				ret c
004BDC 28 04               B   775    				jr z,ddc_gotd
004BDE 3ED1                B   776    				ld a,0d1h						004BE0 B7                  B   777    				or a
004BE1 C9                  B   778    				ret
                           B   779    				
004BE2 DDCB0B66            B   780    ddc_gotd		bit 4,(ix+0bh)					004BE6 20 04               B   781    				jr nz,okdeldir
004BE8 AF                  B   782    				xor a
004BE9 3EC4                B   783    				ld a,0c4h						004BEB C9                  B   784    				ret
                           B   785    				
004BEC DD22 57 54 00       B   786    okdeldir		ld (fs_fname_in_sector_addr),ix
004BF1 CD 5F 53 00         B   787    				call backup_sector_lba
004BF5 DD6E1A              B   788    				ld l,(ix+01ah)					004BF8 DD661B              B   789    				ld h,(ix+01bh)
                           B   790    				
004BFB 3A F4 53 00         B   791    fs_ddecl		ld a,(fs_cluster_size)
004BFF 47                  B   792    				ld b,a							004C00 0E00                B   793    				ld c,0			
004C02 79                  B   794    fs_cne2 		ld a,c
004C03 CD 00 53 00         B   795    				call cluster_and_offset_to_lba
004C07 CD 81 53 00         B   796    				call fs_read_sector
004C0B D8                  B   797    				ret c							                           B   798    				
004C0C C5                  B   799    				push bc
004C0D 0610                B   800    				ld b,16							004C0F DD21 03 66 00       B   801    				ld ix,sector_buffer
004C14 11200000            B   802    				ld de,020h
004C18 DD7E00              B   803    fs_cne1			ld a,(ix)
004C1B B7                  B   804    				or a
004C1C 28 0D               B   805    				jr z,fs_chnde
004C1E FEE5                B   806    				cp 0e5h
004C20 28 09               B   807    				jr z,fs_chnde
004C22 FE2E                B   808    				cp '.'
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 200


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004C24 28 05               B   809    				jr z,fs_chnde
004C26 C1                  B   810    				pop bc
004C27 AF                  B   811    				xor a							004C28 3EC5                B   812    				ld a,0c5h						004C2A C9                  B   813    				ret
                           B   814    			
004C2B DD19                B   815    fs_chnde		add ix,de
004C2D 10 E9               B   816    				djnz fs_cne1
004C2F C1                  B   817    				pop bc
004C30 0C                  B   818    				inc c
004C31 10 CF               B   819    				djnz fs_cne2
                           B   820    			
004C33 CD 29 52 00         B   821    				call get_fat_entry_for_cluster	004C37 D8                  B   822    				ret c
004C38 CD D2 4F 00         B   823    				call fs_compare_hl_fff8
004C3C 38 BD               B   824    				jr c,fs_ddecl
                           B   825    			
004C3E CD 74 53 00         B   826    dir_empty		call restore_sector_lba			004C42 CD 81 53 00         B   827    				call fs_read_sector
004C46 D8                  B   828    				ret c							004C47 2A 57 54 00         B   829    				ld hl,(fs_fname_in_sector_addr)
004C4B 36E5                B   830    fs_delco		ld (hl),0e5h					004C4D CD 99 53 00         B   831    				call fs_write_sector
004C51 D8                  B   832    				ret c
                           B   833    			
004C52 E5                  B   834    				push hl
004C53 DDE1                B   835    				pop ix
004C55 DD6E1A              B   836    				ld l,(ix+01ah)
004C58 DD661B              B   837    				ld h,(ix+01bh)
004C5B 22 4E 54 00         B   838    				ld (fs_working_cluster),hl
004C5F 7C                  B   839    				ld a,h							004C60 B5                  B   840    				or l							004C61 C8                  B   841    				ret z							                           B   842    				
004C62 2A 4E 54 00         B   843    clrfatlp		ld hl,(fs_working_cluster)
004C66 CD 29 52 00         B   844    				call get_fat_entry_for_cluster
004C6A D8                  B   845    				ret c
004C6B EB                  B   846    				ex de,hl
                           B   847    				
004C6C 2A 4E 54 00         B   848    				ld hl,(fs_working_cluster)
004C70 ED53 4E 54 00       B   849    				ld (fs_working_cluster),de
004C75 11000000            B   850    				ld de,0
004C79 CD 55 52 00         B   851    				call update_fat_entry_for_clust
004C7D D8                  B   852    				ret c
                           B   853    				
004C7E CD D2 4F 00         B   854    				call fs_compare_hl_fff8			004C82 38 DE               B   855    				jr c,clrfatlp
004C84 AF                  B   856    				xor a
004C85 C9                  B   857    				ret
                           B   858    
                           B   859    
                           B   860    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 201


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B   861    
004C86                     B   862    fs_create_file_command
                           B   863    
                           B   864    ; Note: As per FAT standard, creating a file (0
                           B   865    ; only a directory entry (FAT is only updated w
                           B   866    
004C86 CD 19 51 00         B   867    				call fs_find_filename			004C8A D8                  B   868    				ret c
004C8B FEC2                B   869    				cp 0c2h							004C8D 28 04               B   870    				jr z,mfilefnde
004C8F AF                  B   871    				xor a							004C90 3EC9                B   872    				ld a,0c9h						004C92 C9                  B   873    				ret
                           B   874    			
004C93 CD 30 50 00         B   875    mfilefnde		call fs_find_free_dir_entry		004C97 D8                  B   876    				ret c							004C98 C0                  B   877    				ret nz							                           B   878    			
004C99 DDE5                B   879    				push ix							004C9B D1                  B   880    				pop de
004C9C 21 0B 54 00         B   881    				ld hl,fs_sought_filename
004CA0 010B0000            B   882    				ld bc,11
004CA4 EDB0                B   883    				ldir
004CA6 AF                  B   884    				xor a							004CA7 0615                B   885    				ld b,21
004CA9 12                  B   886    clrfnen			ld (de),a
004CAA 13                  B   887    				inc de
004CAB 10 FC               B   888    				djnz clrfnen
004CAD DD361821            B   889    				ld (ix+018h),021h				004CB1 CD 99 53 00         B   890    				call fs_write_sector			004CB5 D8                  B   891    				ret c							004CB6 AF                  B   892    				xor a
004CB7 C9                  B   893    				ret								                           B   894    
                           B   895    
                           B   896    ;----------------------------------------------
                           B   897    
004CB8                     B   898    fs_write_bytes_to_file_command
                           B   899    	
                           B   900    ; *********************************************
                           B   901    ; * set up: fs_file_transfer_length (new data),
                           B   902    ; * before calling                             
                           B   903    ; *********************************************
                           B   904    
                           B   905    				
004CB8 ED5B 3B 54 00       B   906    				ld de,(fs_file_transfer_length)
004CBD 21000000            B   907    				ld hl,0
004CC1 AF                  B   908    				xor a
004CC2 ED5A                B   909    				adc hl,de
004CC4 CA DD 49 00         B   910    				jp z,fs_fliz					                           B   911    				 
004CC8 CD 19 51 00         B   912    				call fs_find_filename			Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 202


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004CCC D8                  B   913    				ret c							004CCD FEC2                B   914    				cp 0c2h				
004CCF C8                  B   915    				ret z							004CD0 DDCB0B66            B   916    				bit 4,(ix+0bh)					004CD4 28 04               B   917    				jr z,fs_oknad					004CD6 AF                  B   918    				xor a							004CD7 3EC6                B   919    				ld a,0c6h						004CD9 C9                  B   920    				ret
                           B   921    
004CDA CD 5F 53 00         B   922    fs_oknad		call backup_sector_lba
004CDE DD22 57 54 00       B   923    				ld (fs_fname_in_sector_addr),ix
                           B   924    
004CE3 DD311C              B   925    				ld iy,(ix+01ch)					004CE6 DD7E1F              B   926    				ld a,(ix+01fh)
004CE9 FD22 37 54 00       B   927    				ld (fs_existing_file_length),iy
004CEE 32 37 54 00         B   928    				ld (fs_existing_file_length),a
004CF2 ED5B 3B 54 00       B   929    				ld de,(fs_file_transfer_length)
004CF7 FD19                B   930    				add iy,de						004CF9 CE00                B   931    				adc a,0
004CFB DD3E1C              B   932    				ld (ix+01ch),iy					004CFE DD771F              B   933    				ld (ix+01fh),a					004D01 30 04               B   934    				jr nc,nfsizeok
004D03 AF                  B   935    				xor a
004D04 3EC7                B   936    				ld a,0c7h						004D06 C9                  B   937    				ret
                           B   938    
004D07 11000000            B   939    nfsizeok		ld de,0
004D0B DD5E1A              B   940    				ld e,(ix+01ah)					004D0E DD561B              B   941    				ld d,(ix+01bh)					004D11 ED53 41 54 00       B   942    				ld (fs_file_working_cluster),de
004D16 CD 99 53 00         B   943    				call fs_write_sector			004D1A D8                  B   944    				ret c
004D1B 7A                  B   945    				ld a,d
004D1C B3                  B   946    				or e
004D1D 20 35               B   947    				jr nz,apenclch	
                           B   948    				
004D1F CD DF 4F 00         B   949    				call fs_find_free_cluster		004D23 D8                  B   950    				ret c
004D24 C0                  B   951    				ret nz
004D25 2A 51 54 00         B   952    				ld hl,(fs_free_cluster)
004D29 22 41 54 00         B   953    				ld (fs_file_working_cluster),hl
004D2D 11FFFF00            B   954    				ld de,0ffffh
004D31 CD 55 52 00         B   955    				call update_fat_entry_for_clust
004D35 D8                  B   956    				ret c
                           B   957    			
004D36 CD 74 53 00         B   958    				call restore_sector_lba			004D3A CD 81 53 00         B   959    				call fs_read_sector
004D3E D8                  B   960    				ret c
004D3F DD2A 57 54 00       B   961    				ld ix,(fs_fname_in_sector_addr)
004D44 ED5B 41 54 00       B   962    				ld de,(fs_file_working_cluster)
004D49 DD731A              B   963    				ld (ix+01ah),e
004D4C DD721B              B   964    				ld (ix+01bh),d
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 203


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004D4F CD 99 53 00         B   965    				call fs_write_sector			004D53 D8                  B   966    				ret c
                           B   967    				
                           B   968    					
004D54 2A 41 54 00         B   969    apenclch		ld hl,(fs_file_working_cluster)
004D58 CD 29 52 00         B   970    				call get_fat_entry_for_cluster
004D5C D8                  B   971    				ret c
004D5D CD D2 4F 00         B   972    				call fs_compare_hl_fff8
004D61 30 1C               B   973    				jr nc,atlclif
004D63 22 41 54 00         B   974    				ld (fs_file_working_cluster),hl
004D67 01000000            B   975    				ld bc,0
004D6B 3A F4 53 00         B   976    				ld a,(fs_cluster_size)
004D6F CB27                B   977    				sla a
004D71 47                  B   978    				ld b,a
004D72 2A 37 54 00         B   979    				ld hl,(fs_existing_file_length)
004D76 AF                  B   980    				xor a							004D77 ED42                B   981    				sbc hl,bc						004D79 22 37 54 00         B   982    				ld (fs_existing_file_length),hl
004D7D 18 D5               B   983    				jr apenclch
                           B   984    				
004D7F ED4B 37 54 00       B   985    atlclif			ld bc,(fs_existing_file_length)
004D84 CB38                B   986    				srl b				
004D86 48                  B   987    				ld c,b							004D87 3A F4 53 00         B   988    				ld a,(fs_cluster_size)
004D8B 91                  B   989    				sub c
004D8C 47                  B   990    				ld b,a							004D8D 28 79               B   991    				jr z,fs_sfncl					                           B   992    				
004D8F 2A 41 54 00         B   993    				ld hl,(fs_file_working_cluster)
004D93 79                  B   994    				ld a,c
004D94 CD 00 53 00         B   995    				call cluster_and_offset_to_lba
004D98 CD 81 53 00         B   996    				call fs_read_sector
004D9C D8                  B   997    				ret c
004D9D C5                  B   998    				push bc							                           B   999    				
004D9E 11000000            B  1000    				ld de,0
004DA2 3A 37 54 00         B  1001    				ld a,(fs_existing_file_length)
004DA6 5F                  B  1002    				ld e,a
004DA7 3A 38 54 00         B  1003    				ld a,(fs_existing_file_length+1
004DAB E601                B  1004    				and 1
004DAD 57                  B  1005    				ld d,a							004DAE 21000200            B  1006    				ld hl,512	
004DB2 AF                  B  1007    				xor a
004DB3 ED52                B  1008    				sbc hl,de						004DB5 E5                  B  1009    				push hl
004DB6 C1                  B  1010    				pop bc							004DB7 21 03 66 00         B  1011    				ld hl,sector_buffer
004DBB 19                  B  1012    				add hl,de
004DBC EB                  B  1013    				ex de,hl						004DBD 7C                  B  1014    				ld a,h			
004DBE B5                  B  1015    				or l
004DBF 20 04               B  1016    				jr nz,fs_dcsb					Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 204


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004DC1 CD 07 51 00         B  1017    fs_dbfil		call fs_clear_sector_buffer
004DC5 2A 44 54 00         B  1018    fs_dcsb			ld hl,(fs_ez80_address)			004DC9 EDA0                B  1019    fs_cbsb			ldi								004DCB 7C                  B  1020    				ld a,h							004DCC B5                  B  1021    				or l
004DCD 20 0D               B  1022    				jr nz,fs_srcadok
004DCF 22 44 54 00         B  1023    				ld (fs_ez80_address),hl
004DD3 3A 46 54 00         B  1024    				ld a,(fs_ez80_address+2)
004DD7 B7                  B  1025    				or a
004DD8 CA F9 4A 00         B  1026    				jp z,fs_mem_error
004DDC CD 89 52 00         B  1027    fs_srcadok		call transfer_length_countdown
004DE0 28 54               B  1028    				jr z,fs_lbof					004DE2 78                  B  1029    fs_sadok		ld a,b							004DE3 B1                  B  1030    				or c
004DE4 20 E3               B  1031    				jr nz,fs_cbsb					                           B  1032    
004DE6 22 44 54 00         B  1033    				ld (fs_ez80_address),hl			004DEA C1                  B  1034    				pop bc							004DEB 79                  B  1035    				ld a,c
004DEC 2A 41 54 00         B  1036    				ld hl,(fs_file_working_cluster)
004DF0 CD 00 53 00         B  1037    				call cluster_and_offset_to_lba
004DF4 CD 99 53 00         B  1038    				call fs_write_sector			004DF8 D8                  B  1039    				ret c							004DF9 0C                  B  1040    				inc c							004DFA 05                  B  1041    				dec b
004DFB 28 0B               B  1042    				jr z,fs_sfncl					004DFD C5                  B  1043    fs_sfns			push bc				
004DFE 01000200            B  1044    				ld bc,512						004E02 11 03 66 00         B  1045    				ld de,sector_buffer				004E06 18 B9               B  1046    				jr fs_dbfil						                           B  1047    				
004E08 CD DF 4F 00         B  1048    fs_sfncl		call fs_find_free_cluster		004E0C D8                  B  1049    				ret c							004E0D C0                  B  1050    				ret nz							004E0E 2A 41 54 00         B  1051    				ld hl,(fs_file_working_cluster)
004E12 ED5B 51 54 00       B  1052    				ld de,(fs_free_cluster)
004E17 CD 55 52 00         B  1053    				call update_fat_entry_for_clust
004E1B D8                  B  1054    				ret c
004E1C 2A 51 54 00         B  1055    				ld hl,(fs_free_cluster)
004E20 22 41 54 00         B  1056    				ld (fs_file_working_cluster),hl
004E24 11FFFF00            B  1057    				ld de,0ffffh
004E28 CD 55 52 00         B  1058    				call update_fat_entry_for_clust
004E2C D8                  B  1059    				ret c
004E2D 3A F4 53 00         B  1060    				ld a,(fs_cluster_size)
004E31 47                  B  1061    				ld b,a							004E32 0E00                B  1062    				ld c,0							004E34 18 C7               B  1063    				jr fs_sfns						                           B  1064    				
004E36 C1                  B  1065    fs_lbof			pop bc
004E37 79                  B  1066    				ld a,c							004E38 2A 41 54 00         B  1067    				ld hl,(fs_file_working_cluster)
004E3C CD 00 53 00         B  1068    				call cluster_and_offset_to_lba
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 205


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004E40 CD 99 53 00         B  1069    				call fs_write_sector	
004E44 D8                  B  1070    				ret c
004E45 AF                  B  1071    				xor a							004E46 C9                  B  1072    				ret
                           B  1073    
                           B  1074    ;----------------------------------------------
                           B  1075    
004E47                     B  1076    fs_erase_file_command
                           B  1077    
                           B  1078    
004E47 CD 19 51 00         B  1079    				call fs_find_filename			004E4B D8                  B  1080    				ret c
004E4C C0                  B  1081    				ret nz
                           B  1082    				
004E4D DDCB0B66            B  1083    				bit 4,(ix+0bh)					004E51 28 04               B  1084    				jr z,okdelf
004E53 AF                  B  1085    				xor a
004E54 3EC6                B  1086    				ld a,0c6h						004E56 C9                  B  1087    				ret
                           B  1088    				
004E57 DDE5                B  1089    okdelf			push ix
004E59 E1                  B  1090    				pop hl
004E5A C3 4B 4C 00         B  1091    				jp fs_delco						                           B  1092    					
                           B  1093    
                           B  1094    ;----------------------------------------------
                           B  1095    
                           B  1096    
004E5E                     B  1097    fs_rename_command
                           B  1098    
004E5E CD 19 51 00         B  1099    				call fs_find_filename			004E62 D8                  B  1100    				ret c							004E63 FEC2                B  1101    				cp 0c2h							004E65 28 04               B  1102    				jr z,fs_nfnok					004E67 AF                  B  1103    				xor a							004E68 3EC9                B  1104    				ld a,0c9h						004E6A C9                  B  1105    				ret
                           B  1106    			
004E6B 21 0B 54 00         B  1107    fs_nfnok		ld hl,fs_sought_filename		004E6F 11 23 54 00         B  1108    				ld de,fs_filename_buffer
004E73 010B0000            B  1109    				ld bc,11
004E77 EDB0                B  1110    				ldir
004E79 21 17 54 00         B  1111    				ld hl,fs_alt_filename			004E7D 11 0B 54 00         B  1112    				ld de,fs_sought_filename
004E81 010B0000            B  1113    				ld bc,11
004E85 EDB0                B  1114    				ldir
004E87 CD 19 51 00         B  1115    				call fs_find_filename			004E8B D8                  B  1116    				ret c
004E8C FEC2                B  1117    				cp 0c2h
004E8E C8                  B  1118    				ret z							                           B  1119    				
004E8F DDE5                B  1120    				push ix
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 206


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004E91 D1                  B  1121    				pop de
004E92 21 23 54 00         B  1122    				ld hl,fs_filename_buffer	 	004E96 010B0000            B  1123    				ld bc,11
004E9A EDB0                B  1124    				ldir							004E9C CD 99 53 00         B  1125    				call fs_write_sector			                           B  1126    				
004EA0 AF                  B  1127    fs_rndone		xor a
004EA1 C9                  B  1128    				ret
                           B  1129    				
                           B  1130    
                           B  1131    ;----------------------------------------------
                           B  1132    
                           B  1133    
004EA2                     B  1134    fs_goto_first_dir_entry
                           B  1135    
004EA2 CD 68 1A 00         B  1136    				call fs_get_dir_cluster
004EA6 ED53 5A 54 00       B  1137    				ld (fs_dir_entry_cluster),de
004EAB AF                  B  1138    				xor a
004EAC 32 60 54 00         B  1139    				ld (fs_dir_entry_sector),a		004EB0 11000000            B  1140    				ld de,0
004EB4 ED53 5D 54 00       B  1141    				ld (fs_dir_entry_line_offset),d
                           B  1142    				
                           B  1143    
                           B  1144    
004EB9                     B  1145    fs_get_dir_entry
                           B  1146    
                           B  1147    ; No input parameters.
                           B  1148    ;
                           B  1149    ; Returns HL    = Location of null terminated f
                           B  1150    ;         IX:IY = Length of file (if applicable
                           B  1151    ;         B     = File flag (1 = directory, 0 =
                           B  1152    ;         A     = Error code
                           B  1153    ;         Carry = Set if hardware error encount
                           B  1154    
                           B  1155    
004EB9 3A 60 54 00         B  1156    				ld a,(fs_dir_entry_sector)		004EBD 4F                  B  1157    				ld c,a
004EBE 2A 5A 54 00         B  1158    				ld hl,(fs_dir_entry_cluster)	004EC2 CD 00 53 00         B  1159    				call cluster_and_offset_to_lba
                           B  1160    			
004EC6 7C                  B  1161    				ld a,h							004EC7 B5                  B  1162    				or l							004EC8 20 09               B  1163    				jr nz,nr_read					004ECA 2A FE 53 00         B  1164    				ld hl,(fs_root_dir_position)	004ECE 79                  B  1165    				ld a,c
004ECF CD 46 53 00         B  1166    				call set_absolute_lba
                           B  1167    				
004ED3 CD 81 53 00         B  1168    nr_read			call fs_read_sector				004ED7 D8                  B  1169    				ret c							                           B  1170    				
004ED8 ED5B 5D 54 00       B  1171    				ld de,(fs_dir_entry_line_offset
004EDD DD21 03 66 00       B  1172    dscan_int_loop	ld ix,sector_buffer
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 207


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004EE2 DD19                B  1173    				add ix,de
004EE4 DD7E00              B  1174    ds_int_loop		ld a,(ix)
004EE7 B7                  B  1175    				or a							004EE8 28 0E               B  1176    				jr z,fs_dir_entry_free		
004EEA FEE5                B  1177    				cp 0e5h							004EEC 28 0A               B  1178    				jr z,fs_dir_entry_free	
004EEE FE05                B  1179    				cp 05h							004EF0 28 06               B  1180    				jr z,fs_dir_entry_free	
004EF2 DDCB0B5E            B  1181    				bit 3,(ix+0bh)					004EF6 28 0D               B  1182    				jr z,fs_dir_entry_in_use		                           B  1183    
004EF8                     B  1184    fs_dir_entry_free
                           B  1185    
004EF8 EB                  B  1186    				ex de,hl
004EF9 11200000            B  1187    				ld de,32
004EFD 19                  B  1188    				add hl,de
004EFE EB                  B  1189    				ex de,hl
004EFF CB4A                B  1190    				bit 1,d
004F01 28 DA               B  1191    				jr z,dscan_int_loop
004F03 18 54               B  1192    				jr dscan_new_sect
                           B  1193    
004F05                     B  1194    fs_dir_entry_in_use
                           B  1195    				
004F05 ED53 5D 54 00       B  1196    				ld (fs_dir_entry_line_offset),d
004F0A DDE5                B  1197    				push ix
004F0C E1                  B  1198    				pop hl
004F0D CD 22 10 00         B  1199    				call os_clear_output_line
004F11 0608                B  1200    				ld b,8							004F13 11 23 61 00         B  1201    				ld de,output_line
004F17 7E                  B  1202    dcopyn			ld a,(hl)
004F18 FE20                B  1203    				cp ' '							004F1A 28 02               B  1204    				jr z,digchar
004F1C 12                  B  1205    				ld (de),a
004F1D 13                  B  1206    				inc de
004F1E 23                  B  1207    digchar			inc hl
004F1F 10 F6               B  1208    				djnz dcopyn
004F21 7E                  B  1209    				ld a,(hl)						004F22 FE20                B  1210    				cp ' '							004F24 28 0A               B  1211    				jr z,dirnoex
004F26 3E2E                B  1212    				ld a,'.'						004F28 12                  B  1213    				ld (de),a
004F29 13                  B  1214    				inc de	
004F2A 01030000            B  1215    				ld bc,3							004F2E EDB0                B  1216    				ldir
004F30 AF                  B  1217    dirnoex			xor a 
004F31 12                  B  1218    				ld (de),a						                           B  1219    				
004F32 47                  B  1220    				ld b,a
004F33 DDCB0B66            B  1221    				bit 4,(ix+0bh)					004F37 28 01               B  1222    				jr z,fs_fniaf		
004F39 04                  B  1223    				inc b							004F3A DD171C              B  1224    fs_fniaf		ld de,(ix+01ch)					Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 208


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004F3D DD4E1F              B  1225    				ld c,(ix+01fh)
004F40 21 23 61 00         B  1226    				ld hl,output_line				004F44 AF                  B  1227    				xor a
004F45 C9                  B  1228    				ret
                           B  1229    
                           B  1230    
                           B  1231    
                           B  1232    
004F46                     B  1233    fs_goto_next_dir_entry
                           B  1234    
004F46 11200000            B  1235    				ld de,32
004F4A 2A 5D 54 00         B  1236    				ld hl,(fs_dir_entry_line_offset
004F4E 19                  B  1237    				add hl,de
004F4F 22 5D 54 00         B  1238    				ld (fs_dir_entry_line_offset),h
004F53 CB4C                B  1239    				bit 1,h
004F55 CA B9 4E 00         B  1240    				jp z,fs_get_dir_entry
                           B  1241    
004F59 21000000            B  1242    dscan_new_sect	ld hl,0				
004F5D 22 5D 54 00         B  1243    				ld (fs_dir_entry_line_offset),h
                           B  1244    			
004F61 21 60 54 00         B  1245    				ld hl,fs_dir_entry_sector
004F65 34                  B  1246    				inc (hl)						                           B  1247    			
004F66 ED5B 5A 54 00       B  1248    				ld de,(fs_dir_entry_cluster)
004F6B 7A                  B  1249    				ld a,d
004F6C B3                  B  1250    				or e							004F6D 20 0B               B  1251    				jr nz,nonroot2
004F6F 3A 04 54 00         B  1252    				ld a,(fs_root_dir_sectors)
004F73 BE                  B  1253    				cp (hl)
004F74 28 23               B  1254    				jr z,endofdir			
004F76 C3 B9 4E 00         B  1255    				jp fs_get_dir_entry
                           B  1256    												004F7A 3A F4 53 00         B  1257    nonroot2		ld a,(fs_cluster_size)		
004F7E BE                  B  1258    				cp (hl)							004F7F C2 B9 4E 00         B  1259    				jp nz,fs_get_dir_entry
004F83 3600                B  1260    				ld (hl),0						004F85 2A 5A 54 00         B  1261    				ld hl,(fs_dir_entry_cluster)
004F89 CD 29 52 00         B  1262    				call get_fat_entry_for_cluster
004F8D 22 5A 54 00         B  1263    				ld (fs_dir_entry_cluster),hl
004F91 CD D2 4F 00         B  1264    				call fs_compare_hl_fff8			004F95 DA B9 4E 00         B  1265    				jp c,fs_get_dir_entry
                           B  1266    	
004F99 3ED2                B  1267    endofdir		ld a,0d2h
004F9B B7                  B  1268    				or a							004F9C C9                  B  1269    				ret	
                           B  1270    				
                           B  1271    ;----------------------------------------------
                           B  1272    
004F9D                     B  1273    fs_get_volume_label
                           B  1274    
                           B  1275    
                           B  1276    ; On return HL = volume label
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 209


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B  1277    
                           B  1278    
004F9D 2A FE 53 00         B  1279    				ld hl,(fs_root_dir_position)
004FA1 AF                  B  1280    				xor a
004FA2 CD 57 53 00         B  1281    				call set_abs_lba_and_read_secto
004FA6 D8                  B  1282    				ret c
004FA7 0E10                B  1283    				ld c,16							004FA9 DD21 03 66 00       B  1284    				ld ix,sector_buffer
004FAE DD7E0B              B  1285    find_vl			ld a,(ix+0bh)
004FB1 FE08                B  1286    				cp 08h
004FB3 20 11               B  1287    				jr nz,not_label
004FB5 DD360B00            B  1288    				ld (ix+0bh),0					004FB9 DDE5                B  1289    				push ix
004FBB E1                  B  1290    				pop hl
004FBC E5                  B  1291    				push hl
004FBD 060B                B  1292    				ld b,11
004FBF CD 0A 12 00         B  1293    				call uppercasify_string
004FC3 E1                  B  1294    				pop hl
004FC4 AF                  B  1295    				xor a
004FC5 C9                  B  1296    				ret
                           B  1297    				
004FC6 11200000            B  1298    not_label		ld de,32						004FCA DD19                B  1299    				add ix,de						004FCC 10 E0               B  1300    				djnz find_vl
004FCE AF                  B  1301    				xor a
004FCF 3ED4                B  1302    				ld a,0d4h						004FD1 C9                  B  1303    				ret		
                           B  1304    
                           B  1305    ;----------------------------------------------
                           B  1306    ; Internal subroutines
                           B  1307    ;----------------------------------------------
                           B  1308    
004FD2                     B  1309    fs_compare_hl_fff8
                           B  1310    
                           B  1311    ;INPUT HL = value to compare with fff8
                           B  1312    ;OUTPUT CARRY set if < $fff8, ZERO FLAG set if 
                           B  1313    	
                           B  1314    	
004FD2 E5                  B  1315    				push hl
004FD3 D5                  B  1316    				push de
004FD4 11F8FF00            B  1317    				ld de,0fff8h			
004FD8 B7                  B  1318    				or a							004FD9 52ED52              B  1319    				sbc.s hl,de						004FDC D1                  B  1320    				pop de
004FDD E1                  B  1321    				pop hl
004FDE C9                  B  1322    				ret
                           B  1323    
                           B  1324    ;----------------------------------------------
                           B  1325    
                           B  1326    
004FDF                     B  1327    fs_find_free_cluster
                           B  1328    	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 210


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
004FDF DD210000 00         B  1329    				ld ix,0							004FE4 ED5B F8 53 00       B  1330    				ld de,(fs_fat1_position)		004FE9 AF                  B  1331    				xor a				
004FEA 32 4D 54 00         B  1332    fs_ffcl2		ld (fs_working_sector),a	
004FEE D5                  B  1333    				push de
004FEF E1                  B  1334    				pop hl
004FF0 3A 4D 54 00         B  1335    				ld a,(fs_working_sector)
004FF4 CD 57 53 00         B  1336    				call set_abs_lba_and_read_secto
004FF8 D8                  B  1337    				ret c
004FF9 21 03 66 00         B  1338    				ld hl,sector_buffer
004FFD 0600                B  1339    				ld b,0
004FFF 7E                  B  1340    fs_ffcl1		ld a,(hl)						005000 23                  B  1341    				inc hl
005001 B6                  B  1342    				or (hl)
005002 23                  B  1343    				inc hl
005003 28 14               B  1344    				jr z,fs_gotfc
005005 DD23                B  1345    				inc ix
005007 10 F6               B  1346    				djnz fs_ffcl1
                           B  1347    				
005009 2A 05 54 00         B  1348    				ld hl,(fs_sectors_per_fat)
00500D 3A 4D 54 00         B  1349    				ld a,(fs_working_sector)		005011 3C                  B  1350    				inc a				
005012 BD                  B  1351    				cp l		
005013 20 D5               B  1352    				jr nz,fs_ffcl2					005015 3EC1                B  1353    fs_dfull		ld a,c1h						005017 B7                  B  1354    				or a							005018 C9                  B  1355    				ret
                           B  1356    			
005019 DDE5                B  1357    fs_gotfc		push ix							00501B E1                  B  1358    				pop hl							00501C 2B                  B  1359    				dec hl							00501D 2B                  B  1360    				dec hl							00501E ED5B 08 54 00       B  1361    				ld de,(fs_max_data_clusters)
005023 AF                  B  1362    				xor a
005024 52ED52              B  1363    				sbc.s hl,de						005027 30 EC               B  1364    				jr nc,fs_dfull
                           B  1365    			
005029 DD22 51 54 00       B  1366    				ld (fs_free_cluster),ix
00502E AF                  B  1367    				xor a
00502F C9                  B  1368    				ret
                           B  1369    	
                           B  1370    	
                           B  1371    ;----------------------------------------------
                           B  1372    	
                           B  1373    	
005030                     B  1374    fs_find_free_dir_entry
                           B  1375    
                           B  1376    
                           B  1377    ; OUTPUT IX start of 32 byte dir entry in secto
                           B  1378    
                           B  1379    			
005030 CD 68 1A 00         B  1380    				call fs_get_dir_cluster			Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 211


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
005034 EB                  B  1381    				ex de,hl
005035 22 41 54 00         B  1382    ffenxtclu		ld (fs_file_working_cluster),hl
005039 AF                  B  1383    				xor a
00503A 32 4D 54 00         B  1384    				ld (fs_working_sector),a
                           B  1385    			
00503E 2A FE 53 00         B  1386    ffenxtsec		ld hl,(fs_root_dir_position)	005042 3A 4D 54 00         B  1387    				ld a,(fs_working_sector)
005046 CD 46 53 00         B  1388    				call set_absolute_lba
                           B  1389    				
00504A CD 68 1A 00         B  1390    				call fs_get_dir_cluster			00504E 7A                  B  1391    				ld a,d
00504F B3                  B  1392    				or e
005050 28 0C               B  1393    				jr z,at_rootd
005052 2A 41 54 00         B  1394    				ld hl,(fs_file_working_cluster)
005056 3A 4D 54 00         B  1395    				ld a,(fs_working_sector)
00505A CD 00 53 00         B  1396    				call cluster_and_offset_to_lba
                           B  1397    				
00505E CD 81 53 00         B  1398    at_rootd		call fs_read_sector
005062 D8                  B  1399    				ret c
005063 0610                B  1400    				ld b,16							005065 11200000            B  1401    				ld de,32
005069 DD21 03 66 00       B  1402    				ld ix,sector_buffer
00506E DD7E00              B  1403    scdirfe			ld a,(ix)						005071 B7                  B  1404    				or a
005072 28 65               B  1405    				jr z,got_fde
005074 FEE5                B  1406    				cp 0e5h
005076 28 61               B  1407    				jr z,got_fde
005078 DD19                B  1408    				add ix,de						00507A 10 F2               B  1409    				djnz scdirfe					                           B  1410    				
00507C 21 4D 54 00         B  1411    				ld hl,fs_working_sector			005080 34                  B  1412    				inc (hl)
                           B  1413    				
005081 CD 68 1A 00         B  1414    				call fs_get_dir_cluster			005085 7A                  B  1415    				ld a,d
005086 B3                  B  1416    				or e
005087 20 0B               B  1417    				jr nz,ffenotroo
005089 3A 04 54 00         B  1418    				ld a,(fs_root_dir_sectors)		00508D BE                  B  1419    				cp (hl)							00508E 20 AE               B  1420    				jr nz,ffenxtsec
005090 AF                  B  1421    fenotfnd		xor a							005091 3EC3                B  1422    				ld a,0c3h						005093 C9                  B  1423    				ret
                           B  1424    			
005094 3A F4 53 00         B  1425    ffenotroo		ld a,(fs_cluster_size)			005098 BE                  B  1426    				cp (hl)
005099 20 A3               B  1427    				jr nz,ffenxtsec
00509B 2A 41 54 00         B  1428    				ld hl,(fs_file_working_cluster)
00509F CD 29 52 00         B  1429    				call get_fat_entry_for_cluster	0050A3 D8                  B  1430    				ret c
0050A4 CD D2 4F 00         B  1431    				call fs_compare_hl_fff8			0050A8 38 8B               B  1432    				jr c,ffenxtclu
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 212


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B  1433    			
0050AA CD DF 4F 00         B  1434    				call fs_find_free_cluster		0050AE D8                  B  1435    				ret c							0050AF C0                  B  1436    				ret nz							0050B0 ED5B 51 54 00       B  1437    				ld de,(fs_free_cluster)
0050B5 2A 41 54 00         B  1438    				ld hl,(fs_file_working_cluster)
0050B9 CD 55 52 00         B  1439    				call update_fat_entry_for_clust
0050BD D8                  B  1440    				ret c
0050BE EB                  B  1441    				ex de,hl						0050BF 11FFFF00            B  1442    				ld de,0ffffh
0050C3 CD 55 52 00         B  1443    				call update_fat_entry_for_clust
0050C7 D8                  B  1444    				ret c
                           B  1445    			
0050C8 2A 51 54 00         B  1446    				ld hl,(fs_free_cluster)			0050CC CD DB 50 00         B  1447    				call fs_clear_cluster			0050D0 D8                  B  1448    				ret c
0050D1 2A 51 54 00         B  1449    				ld hl,(fs_free_cluster)			0050D5 C3 35 50 00         B  1450    				jp ffenxtclu					                           B  1451    			
0050D9 AF                  B  1452    got_fde			xor a
0050DA C9                  B  1453    				ret
                           B  1454    					
                           B  1455    
                           B  1456    ;----------------------------------------------
                           B  1457    
0050DB                     B  1458    fs_clear_cluster
                           B  1459    
                           B  1460    ;INPUT HL = cluster to clear
                           B  1461    
0050DB 22 4E 54 00         B  1462    				ld (fs_working_cluster),hl
                           B  1463    			
0050DF CD 07 51 00         B  1464    				call fs_clear_sector_buffer
                           B  1465    					
0050E3 AF                  B  1466    				xor a				
0050E4 32 4D 54 00         B  1467    				ld (fs_working_sector),a		0050E8 3A 4D 54 00         B  1468    wipeclulp		ld a,(fs_working_sector)		0050EC 2A 4E 54 00         B  1469    				ld hl,(fs_working_cluster)		0050F0 CD 00 53 00         B  1470    				call cluster_and_offset_to_lba	0050F4 CD 99 53 00         B  1471    				call fs_write_sector
0050F8 D8                  B  1472    				ret c
0050F9 21 4D 54 00         B  1473    				ld hl,fs_working_sector
0050FD 34                  B  1474    				inc (hl)
0050FE 3A F4 53 00         B  1475    				ld a,(fs_cluster_size)
005102 BE                  B  1476    				cp (hl)
005103 20 E3               B  1477    				jr nz,wipeclulp
005105 AF                  B  1478    				xor a
005106 C9                  B  1479    				ret
                           B  1480    			
                           B  1481    			
005107                     B  1482    fs_clear_sector_buffer
                           B  1483    			
005107 E5                  B  1484    				push hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 213


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
005108 C5                  B  1485    				push bc
005109 21 03 66 00         B  1486    				ld hl,sector_buffer			
00510D 01000200            B  1487    				ld bc,512				
005111 AF                  B  1488    				xor a				
005112 CD 79 15 00         B  1489    				call os_bchl_memfill	
005116 C1                  B  1490    				pop bc
005117 E1                  B  1491    				pop hl
005118 C9                  B  1492    				ret
                           B  1493    				
                           B  1494    
                           B  1495    	
                           B  1496    ;----------------------------------------------
                           B  1497    	
005119                     B  1498    fs_find_filename
                           B  1499    
005119 AF                  B  1500    				xor a
                           B  1501    
00511A                     B  1502    fs_search	
                           B  1503    				
00511A 32 68 54 00         B  1504    				ld (fs_search_type),a
                           B  1505    			
                           B  1506    ; OUTPUT IX start of 32 byte dir entry
                           B  1507    			
00511E CD 68 1A 00         B  1508    				call fs_get_dir_cluster
005122 ED53 41 54 00       B  1509    ffnnxtclu		ld (fs_file_working_cluster),de
005127 AF                  B  1510    				xor a
005128 32 4D 54 00         B  1511    				ld (fs_working_sector),a
                           B  1512    			
00512C 2A FE 53 00         B  1513    ffnnxtsec		ld hl,(fs_root_dir_position)	005130 3A 4D 54 00         B  1514    				ld a,(fs_working_sector)
005134 CD 46 53 00         B  1515    				call set_absolute_lba
                           B  1516    				
005138 CD 68 1A 00         B  1517    				call fs_get_dir_cluster			00513C 7A                  B  1518    				ld a,d
00513D B3                  B  1519    				or e
00513E 28 0C               B  1520    				jr z,at_rootd2
005140 2A 41 54 00         B  1521    				ld hl,(fs_file_working_cluster)
005144 3A 4D 54 00         B  1522    				ld a,(fs_working_sector)
005148 CD 00 53 00         B  1523    				call cluster_and_offset_to_lba	                           B  1524    				
00514C CD 81 53 00         B  1525    at_rootd2		call fs_read_sector
005150 D8                  B  1526    				ret c
005151 0E10                B  1527    				ld c,16							005153 DD21 03 66 00       B  1528    				ld ix,sector_buffer
005158 DDE5                B  1529    ndirentr		push ix
00515A D1                  B  1530    				pop de
00515B 3A 68 54 00         B  1531    				ld a,(fs_search_type)
00515F B7                  B  1532    				or a
005160 28 1E               B  1533    				jr z,fs_ststr
                           B  1534    			
005162 DD7E00              B  1535    				ld a,(ix)						005165 FE80                B  1536    				cp 080h							Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 214


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
005167 30 35               B  1537    				jr nc,fnnotsame
005169 FE20                B  1538    				cp 020h
00516B 38 31               B  1539    				jr c,fnnotsame
00516D ED5B 65 54 00       B  1540    				ld de,(fs_stash_dir_block)		005172 DD7E1A              B  1541    				ld a,(ix+01ah)
005175 BB                  B  1542    				cp e
005176 20 26               B  1543    				jr nz,fnnotsame
005178 DD7E1B              B  1544    				ld a,(ix+01bh)
00517B BA                  B  1545    				cp d
00517C 28 1E               B  1546    				jr z,fs_found
00517E 18 1E               B  1547    				jr fnnotsame
                           B  1548    				
005180 FD21 0B 54 00       B  1549    fs_ststr		ld iy,fs_sought_filename		005185 060B                B  1550    				ld b,11							005187 1A                  B  1551    cmpfnlp			ld a,(de)						005188 CD 16 12 00         B  1552    				call os_uppercasify				00518C 6F                  B  1553    				ld l,a
00518D FD7E00              B  1554    				ld a,(iy)
005190 CD 16 12 00         B  1555    				call os_uppercasify
005194 BD                  B  1556    				cp l				
005195 20 07               B  1557    				jr nz,fnnotsame
005197 FD23                B  1558    				inc iy
005199 13                  B  1559    				inc de
00519A 10 EB               B  1560    				djnz cmpfnlp
00519C AF                  B  1561    fs_found		xor a							00519D C9                  B  1562    				ret
                           B  1563    			
00519E 11200000            B  1564    fnnotsame		ld de,32						0051A2 DD19                B  1565    				add ix,de
0051A4 0D                  B  1566    				dec c
0051A5 20 B1               B  1567    				jr nz,ndirentr					                           B  1568    				
0051A7 21 4D 54 00         B  1569    				ld hl,fs_working_sector			0051AB 34                  B  1570    				inc (hl)
                           B  1571    				
0051AC CD 68 1A 00         B  1572    				call fs_get_dir_cluster			0051B0 7A                  B  1573    				ld a,d
0051B1 B3                  B  1574    				or e
0051B2 20 0D               B  1575    				jr nz,notrootdir
0051B4 3A 04 54 00         B  1576    				ld a,(fs_root_dir_sectors)		0051B8 BE                  B  1577    				cp (hl)							0051B9 C2 2C 51 00         B  1578    				jp nz,ffnnxtsec
0051BD 3EC2                B  1579    fnnotfnd		ld a,0c2h						0051BF B7                  B  1580    				or a
0051C0 C9                  B  1581    				ret
                           B  1582    			
0051C1                     B  1583    notrootdir
                           B  1584    				
0051C1 3A F4 53 00         B  1585    				ld a,(fs_cluster_size)			0051C5 BE                  B  1586    				cp (hl)
0051C6 C2 2C 51 00         B  1587    				jp nz,ffnnxtsec
                           B  1588    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 215


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
0051CA 2A 41 54 00         B  1589    				ld hl,(fs_file_working_cluster)
0051CE CD 29 52 00         B  1590    				call get_fat_entry_for_cluster
0051D2 D8                  B  1591    				ret c
0051D3 CD D2 4F 00         B  1592    				call fs_compare_hl_fff8			0051D7 30 E4               B  1593    				jr nc,fnnotfnd					0051D9 EB                  B  1594    				ex de,hl						0051DA C3 22 51 00         B  1595    				jp ffnnxtclu					                           B  1596    				
                           B  1597    
                           B  1598    ;----------------------------------------------
                           B  1599    
0051DE                     B  1600    fs_hl_to_alt_filename
                           B  1601    
0051DE 11 17 54 00         B  1602    				ld de,fs_alt_filename
0051E2 18 04               B  1603    				jr hltofngo
                           B  1604    
                           B  1605    
0051E4                     B  1606    fs_hl_to_filename
                           B  1607    
                           B  1608    ;INPUT: HL = address of filename (null / space 
                           B  1609    ;OUTPUT HL = address of first character after f
                           B  1610    ;        C = number of characters in filename
                           B  1611    
0051E4 11 0B 54 00         B  1612    				ld de,fs_sought_filename
0051E8 CD F3 52 00         B  1613    hltofngo		call fs_clear_filename			0051EC D5                  B  1614    				push de			
0051ED DDE1                B  1615    				pop ix							                           B  1616    				
0051EF 0E00                B  1617    				ld c,0
0051F1 0608                B  1618    				ld b,8
0051F3 7E                  B  1619    csfnlp2			ld a,(hl)						0051F4 B7                  B  1620    				or a
0051F5 C8                  B  1621    				ret z							0051F6 FE20                B  1622    				cp 32
0051F8 C8                  B  1623    				ret z							0051F9 FE2F                B  1624    				cp 02fh
0051FB C8                  B  1625    				ret z							0051FC FE2E                B  1626    				cp '.'
0051FE 28 16               B  1627    				jr z,dofn_ext					005200 12                  B  1628    				ld (de),a
005201 13                  B  1629    				inc de
005202 23                  B  1630    				inc hl
005203 0C                  B  1631    				inc c							005204 10 ED               B  1632    				djnz csfnlp2					005206 7E                  B  1633    find_ext		ld a,(hl)
005207 FE2E                B  1634    				cp '.'							005209 28 0B               B  1635    				jr z,dofn_ext	
00520B FE20                B  1636    				cp ' '							00520D C8                  B  1637    				ret z
00520E FE2F                B  1638    				cp 02fh
005210 C8                  B  1639    				ret z
005211 B7                  B  1640    				or a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 216


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
005212 C8                  B  1641    				ret z
005213 23                  B  1642    				inc hl
005214 18 F0               B  1643    				jr find_ext
                           B  1644    				
005216 23                  B  1645    dofn_ext		inc hl							005217 0603                B  1646    				ld b,3				
005219 7E                  B  1647    fnextlp			ld a,(hl)						00521A B7                  B  1648    				or a
00521B C8                  B  1649    				ret z							00521C FE20                B  1650    				cp 32
00521E C8                  B  1651    				ret z
00521F DD7708              B  1652    				ld (ix+8),a
005222 DD23                B  1653    				inc ix
005224 23                  B  1654    				inc hl
005225 0C                  B  1655    				inc c
005226 10 F1               B  1656    				djnz fnextlp
005228 C9                  B  1657    				ret
                           B  1658    				
                           B  1659    ;----------------------------------------------
                           B  1660    
                           B  1661    
005229                     B  1662    get_fat_entry_for_cluster
                           B  1663    
                           B  1664    ; INPUT: HL = cluster in question, OUTPUT: HL =
                           B  1665    
005229 C5                  B  1666    				push bc
00522A D5                  B  1667    				push de
00522B 01000000            B  1668    				ld bc,0
00522F 4D                  B  1669    				ld c,l
005230 7C                  B  1670    				ld a,h
005231 2A F8 53 00         B  1671    				ld hl,(fs_fat1_position)
005235 CD 57 53 00         B  1672    				call set_abs_lba_and_read_secto
005239 38 17               B  1673    				jr c,hwerr
00523B DDE5                B  1674    				push ix
00523D DD21 03 66 00       B  1675    				ld ix,sector_buffer
005242 DD09                B  1676    				add ix,bc
005244 DD09                B  1677    				add ix,bc
005246 21000000            B  1678    				ld hl,0
00524A DD6E00              B  1679    				ld l,(ix)
00524D DD6601              B  1680    				ld h,(ix+1)
005250 DDE1                B  1681    				pop ix
005252 D1                  B  1682    hwerr			pop de
005253 C1                  B  1683    				pop bc
005254 C9                  B  1684    				ret
                           B  1685    
                           B  1686    
                           B  1687    ;----------------------------------------------
                           B  1688    
                           B  1689    
005255                     B  1690    update_fat_entry_for_cluster
                           B  1691    
                           B  1692    ; INPUT: HL = cluster in question
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 217


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
                           B  1693    ;        DE = new value to put in FAT tables
                           B  1694    			
005255 C5                  B  1695    				push bc
005256 E5                  B  1696    				push hl
005257 01000000            B  1697    				ld bc,0
00525B 4D                  B  1698    				ld c,l
00525C 7C                  B  1699    				ld a,h
00525D 2A F8 53 00         B  1700    				ld hl,(fs_fat1_position)		005261 CD 75 52 00         B  1701    				call fat_upd
005265 38 0B               B  1702    				jr c,fup_end
                           B  1703    			
005267 E1                  B  1704    				pop hl
005268 E5                  B  1705    				push hl
005269 7C                  B  1706    				ld a,h
00526A 2A FB 53 00         B  1707    				ld hl,(fs_fat2_position)		00526E CD 75 52 00         B  1708    				call fat_upd
005272 E1                  B  1709    fup_end			pop hl
005273 C1                  B  1710    				pop bc
005274 C9                  B  1711    				ret
                           B  1712    			
                           B  1713    			
005275 CD 57 53 00         B  1714    fat_upd			call set_abs_lba_and_read_secto
005279 38 0D               B  1715    				jr c,ufehwerr
00527B 21 03 66 00         B  1716    				ld hl,sector_buffer
00527F 09                  B  1717    				add hl,bc
005280 09                  B  1718    				add hl,bc
005281 73                  B  1719    				ld (hl),e
005282 23                  B  1720    				inc hl
005283 72                  B  1721    				ld (hl),d
005284 CD 99 53 00         B  1722    				call fs_write_sector
005288 C9                  B  1723    ufehwerr		ret
                           B  1724    				
                           B  1725    	
                           B  1726    ;----------------------------------------------
                           B  1727    
005289                     B  1728    transfer_length_countdown
                           B  1729    
005289 E5                  B  1730    				push hl							00528A C5                  B  1731    				push bc
                           B  1732    			
00528B 0604                B  1733    				ld b,4
00528D 21 2F 54 00         B  1734    				ld hl,fs_file_pointer			005291 34                  B  1735    fpinclp			inc (hl)
005292 20 03               B  1736    				jr nz,fs_fpino
005294 23                  B  1737    				inc hl
005295 10 FA               B  1738    				djnz fpinclp
                           B  1739    				
005297 2A 3B 54 00         B  1740    fs_fpino		ld hl,(fs_file_transfer_length)
00529B 2B                  B  1741    				dec hl
00529C 22 3B 54 00         B  1742    				ld (fs_file_transfer_length),hl
0052A0 01000000            B  1743    				ld bc,0
0052A4 B7                  B  1744    				or a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 218


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
0052A5 ED4A                B  1745    				adc hl,bc						                           B  1746    				
0052A7 C1                  B  1747    				pop bc
0052A8 E1                  B  1748    				pop hl
0052A9 C9                  B  1749    				ret
                           B  1750    
                           B  1751    ;----------------------------------------------
                           B  1752    
0052AA                     B  1753    fs_get_current_dir_name
                           B  1754    
                           B  1755    ;returns current dir name - location at HL
                           B  1756    
0052AA CD 68 1A 00         B  1757    				call fs_get_dir_cluster			0052AE 7A                  B  1758    				ld a,d
0052AF B3                  B  1759    				or e
0052B0 20 10               B  1760    				jr nz,fs_dnnr
0052B2 21 DA 5E 00         B  1761    				ld hl,vol_txt+1					0052B6 3A D5 5E 00         B  1762    				ld a,(current_volume)
0052BA C630                B  1763    				add a,030h
0052BC 32 DD 5E 00         B  1764    				ld (vol_txt+4),a
0052C0 AF                  B  1765    				xor a
0052C1 C9                  B  1766    				ret
                           B  1767    					
0052C2 ED53 65 54 00       B  1768    fs_dnnr			ld (fs_stash_dir_block),de
0052C7 CD 62 49 00         B  1769    				call fs_parent_dir_command		0052CB D8                  B  1770    				ret c
0052CC B7                  B  1771    				or a
0052CD C0                  B  1772    				ret nz
0052CE 3E01                B  1773    				ld a,1
0052D0 CD 1A 51 00         B  1774    				call fs_search					0052D4 D8                  B  1775    				ret c
0052D5 C0                  B  1776    				ret nz
                           B  1777    					
0052D6 DDE5                B  1778    fs_gdbn			push ix
0052D8 E1                  B  1779    				pop hl
0052D9 060B                B  1780    				ld b,11							0052DB 7E                  B  1781    ntdirn			ld a,(hl)
0052DC FE20                B  1782    				cp ' '
0052DE 28 03               B  1783    				jr z,rdirfsp
0052E0 23                  B  1784    				inc hl
0052E1 10 F8               B  1785    rdirnsp			djnz ntdirn
                           B  1786    				
0052E3 3600                B  1787    rdirfsp			ld (hl),0
0052E5 DDE5                B  1788    				push ix
0052E7 ED5B 65 54 00       B  1789    				ld de,(fs_stash_dir_block)
0052EC CD 74 1A 00         B  1790    				call fs_update_dir_cluster		0052F0 E1                  B  1791    				pop hl	
0052F1 AF                  B  1792    				xor a							0052F2 C9                  B  1793    				ret
                           B  1794    
                           B  1795    ;----------------------------------------------
                           B  1796    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 219


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
0052F3                     B  1797    fs_clear_filename
                           B  1798    
0052F3 D5                  B  1799    				push de							0052F4 C5                  B  1800    				push bc
0052F5 060C                B  1801    				ld b,12
0052F7 3E20                B  1802    				ld a,' '
0052F9 12                  B  1803    clrfnlp			ld (de),a
0052FA 13                  B  1804    				inc de
0052FB 10 FC               B  1805    				djnz clrfnlp
0052FD C1                  B  1806    				pop bc
0052FE D1                  B  1807    				pop de
0052FF C9                  B  1808    				ret
                           B  1809    				
                           B  1810    ;----------------------------------------------
                           B  1811    
                           B  1812    
005300                     B  1813    cluster_and_offset_to_lba
                           B  1814    
                           B  1815    ; INPUT: HL = cluster, A = sector offset, OUTPU
                           B  1816    
005300 C5                  B  1817    				push bc
005301 D5                  B  1818    				push de
005302 E5                  B  1819    				push hl
005303 DDE5                B  1820    				push ix
                           B  1821    
005305 2B                  B  1822    				dec hl							005306 2B                  B  1823    				dec hl							005307 11000000            B  1824    				ld de,0							00530B 01000000            B  1825    				ld bc,0
00530F 5F                  B  1826    				ld e,a
005310 3A F4 53 00         B  1827    				ld a,(fs_cluster_size)			005314 CB3F                B  1828    caotllp			srl a
005316 28 03               B  1829    				jr z,clusdone
005318 29                  B  1830    				add hl,hl						005319 18 F9               B  1831    				jr caotllp
                           B  1832    			
00531B ED4B 01 54 00       B  1833    clusdone		ld bc,(fs_data_area)			005320 09                  B  1834    				add hl,bc						005321 19                  B  1835    				add hl,de						                           B  1836    				
005322 E5                  B  1837    add_ptn_offset	push hl							005323 CD A2 1A 00         B  1838    				call fs_calc_volume_offset
005327 DD21 07 5F 00       B  1839    				ld ix,volume_mount_list
00532C DD19                B  1840    				add ix,de
00532E E1                  B  1841    				pop hl
00532F DD0708              B  1842    				ld bc,(ix+08h)					005332 DD7E0B              B  1843    				ld a,(ix+0bh)
005335 09                  B  1844    				add hl,bc
005336 CE00                B  1845    				adc a,0
005338 22 AF 60 00         B  1846    				ld (sector_lba0),hl				00533C 32 B2 60 00         B  1847    				ld (sector_lba3),a				                           B  1848    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 220


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
005340 DDE1                B  1849    				pop ix
005342 E1                  B  1850    				pop hl
005343 D1                  B  1851    				pop de
005344 C1                  B  1852    				pop bc
005345 C9                  B  1853    				ret
                           B  1854    				
                           B  1855    
                           B  1856    ;----------------------------------------------
                           B  1857    
005346                     B  1858    set_absolute_lba
                           B  1859    
                           B  1860    ; set A to sector offset, HL to sectors from st
                           B  1861    
005346 C5                  B  1862    				push bc							005347 D5                  B  1863    				push de							005348 E5                  B  1864    				push hl							005349 DDE5                B  1865    				push ix							00534B 01000000            B  1866    				ld bc,0
00534F 11000000            B  1867    				ld de,0
005353 5F                  B  1868    				ld e,a
005354 19                  B  1869    				add hl,de
005355 18 CB               B  1870    				jr add_ptn_offset		
                           B  1871    				
                           B  1872    
005357                     B  1873    set_abs_lba_and_read_sector
                           B  1874    
005357 CD 46 53 00         B  1875    				call set_absolute_lba
00535B C3 81 53 00         B  1876    				jp fs_read_sector
                           B  1877    				
                           B  1878    ;----------------------------------------------
                           B  1879    
                           B  1880    
00535F                     B  1881    backup_sector_lba
                           B  1882    
00535F C5                  B  1883    				push bc
005360 D5                  B  1884    				push de
005361 E5                  B  1885    				push hl
005362 21 AF 60 00         B  1886    				ld hl,sector_lba0
005366 11 69 54 00         B  1887    				ld de,fs_backed_up_sector_lba0
00536A 01040000            B  1888    lbabur			ld bc,4
00536E EDB0                B  1889    				ldir
005370 E1                  B  1890    				pop hl
005371 D1                  B  1891    				pop de
005372 C1                  B  1892    				pop bc
005373 C9                  B  1893    				ret
                           B  1894    
                           B  1895    
005374                     B  1896    restore_sector_lba
                           B  1897    
005374 C5                  B  1898    				push bc
005375 D5                  B  1899    				push de
005376 E5                  B  1900    				push hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 221


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
005377 21 69 54 00         B  1901    				ld hl,fs_backed_up_sector_lba0
00537B 11 AF 60 00         B  1902    				ld de,sector_lba0
00537F 18 E9               B  1903    				jr lbabur	
                           B  1904    					
                           B  1905    ;----------------------------------------------
                           B  1906    
005381                     B  1907    fs_read_sector
                           B  1908    			
005381 C5                  B  1909    				push bc
005382 D5                  B  1910    				push de
005383 E5                  B  1911    				push hl
005384 DDE5                B  1912    				push ix
005386 FDE5                B  1913    				push iy
005388 01040000            B  1914    				ld bc,04h						00538C CD AA 53 00         B  1915    				call sector_access_redirect
005390 FDE1                B  1916    secaccend		pop iy
005392 DDE1                B  1917    				pop ix
005394 E1                  B  1918    				pop hl
005395 D1                  B  1919    				pop de
005396 C1                  B  1920    				pop bc
005397 3F                  B  1921    				ccf								005398 C9                  B  1922    				ret								                           B  1923    
                           B  1924    
005399                     B  1925    fs_write_sector	
                           B  1926    				
005399 C5                  B  1927    				push bc
00539A D5                  B  1928    				push de
00539B E5                  B  1929    				push hl
00539C DDE5                B  1930    				push ix
00539E FDE5                B  1931    				push iy
0053A0 01080000            B  1932    				ld bc,08h						0053A4 CD AA 53 00         B  1933    				call sector_access_redirect
0053A8 18 E6               B  1934    				jr secaccend
                           B  1935    
                           B  1936    
                           B  1937    
0053AA                     B  1938    sector_access_redirect
                           B  1939    
                           B  1940    	
0053AA 3A D6 5E 00         B  1941    				ld a,(current_driver)			0053AE CD 3A 1A 00         B  1942    				call locate_driver_base			0053B2 EB                  B  1943    				ex de,hl
0053B3 09                  B  1944    				add hl,bc						0053B4 E9                  B  1945    				jp (hl)
                           B  1946    
                           B  1947    ;----------------------------------------------
                           B  1948    	
0053B5                     B  1949    bootsector_stub
                           B  1950    
0053B5 EB3C904D 53444F53   B  1951    				db  0EBh,03Ch,090h,04Dh,053h,04
0053BD 352E3000 02004000 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 222


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
0053C5 02000200 00F8F200   B  1952    				db  002h,000h,002h,000h,000h,0F
0053CD 3F00FF00 00000000 
0053D5 00000000 000029C4   B  1953    				db  000h,000h,000h,000h,000h,00
0053DD E636984E 4F204E41 
0053E5 4D452020 20204641   B  1954    				db  04Dh,045h,020h,020h,020h,02
0053ED 54313620 2020C3 
                           B  1955    
                           B  1956    ;----------------------------------------------
                           B  1957    
0053F4 00                  B  1958    fs_cluster_size				db 0
0053F5 000000              B  1959    fs_bytes_per_cluster		dw24 0
0053F8 000000              B  1960    fs_fat1_position			dw24 0		; offse
0053FB 000000              B  1961    fs_fat2_position			dw24 0		; offse
0053FE 000000              B  1962    fs_root_dir_position		dw24 0		; offse
005401 000000              B  1963    fs_data_area				dw24 0		; offse
005404 00                  B  1964    fs_root_dir_sectors			db 0
                           B  1965    
005405 000000              B  1966    fs_sectors_per_fat			dw24 0
005408 000000              B  1967    fs_max_data_clusters		dw24 0
                           B  1968    
00540B 00 00 00 00 00 00   B  1969    fs_sought_filename			blkb 12,0
005411 00 00 00 00 00 00 
005417 00 00 00 00 00 00   B  1970    fs_alt_filename				blkb 12,0
00541D 00 00 00 00 00 00 
005423 00 00 00 00 00 00   B  1971    fs_filename_buffer			blkb 12,0
005429 00 00 00 00 00 00 
                           B  1972    
00542F 00000000            B  1973    fs_file_pointer				dw 0,0		; 32 bi
005433 00000000            B  1974    fs_file_length				dw 0,0		; 32 bi
005437 00000000            B  1975    fs_existing_file_length 	dw 0,0		; 32 bi
                           B  1976    
00543B 000000              B  1977    fs_file_transfer_length		dw24 0		; 24 bi
                           B  1978    
00543E 000000              B  1979    fs_file_start_cluster		dw24 0
005441 000000              B  1980    fs_file_working_cluster		dw24 0
                           B  1981    
005444 000000              B  1982    fs_ez80_address				dw24 0
005447 000000              B  1983    fs_ez80_working_address		dw24 0
                           B  1984    
00544A 000000              B  1985    fs_in_sector_offset			dw24 0
00544D 00                  B  1986    fs_working_sector			db 0
                           B  1987    
00544E 000000              B  1988    fs_working_cluster			dw24 0
005451 000000              B  1989    fs_free_cluster				dw24 0
005454 000000              B  1990    fs_new_file_cluster			dw24 0
                           B  1991    
005457 000000              B  1992    fs_fname_in_sector_addr		dw24 0
                           B  1993    
00545A 000000              B  1994    fs_dir_entry_cluster		dw24 0
00545D 000000              B  1995    fs_dir_entry_line_offset	dw24 0
005460 00                  B  1996    fs_dir_entry_sector			db 0
                           B  1997    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 223


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code.asm
005461 00                  B  1998    fs_filepointer_valid		db 0
005462 000000              B  1999    fs_sector_pos_cnt			dw24 0
                           B  2000    
005465 000000              B  2001    fs_stash_dir_block	 		dw24 0
                           B  2002    
005468 00                  B  2003    fs_search_type				db 0
                           B  2004    
005469 00000000            B  2005    fs_backed_up_sector_lba0	db 0,0,0,0
                           B  2006    
                           B  2007    ;----------------------------------------------
                           B  2008    
                           A  3214    
                           A  3215    ;----------------------------------------------
                           A  3216    ; OS Data 
                           A  3217    ;----------------------------------------------
                           A  3218    
                           B     0    	include		'prose_data.asm'				                           B     1    ;**************
                           B     2    ;* PROSE DATA *
                           B     3    ;**************
                           B     4    
                           B     5    ;----------------------------------------------
                           B     6    ; kernal routine locations
                           B     7    ;----------------------------------------------
                           B     8    
00546D                     B     9    kernal_table
                           B    10    
00546D 341800              B    11    	dw24 ext_mount_volumes			;00		
005470 E21700              B    12    	dw24 os_get_device_info			;01		
005473 981600              B    13    	dw24 os_check_volume_format		;02		
005476 C31A00              B    14    	dw24 ext_change_volume			;03		
005479 F51700              B    15    	dw24 os_get_volume_info			;04		
00547C A21600              B    16    	dw24 ext_format					;05		
00547F D41600              B    17    	dw24 ext_make_dir				;06		
005482 E21600              B    18    	dw24 ext_change_dir				;07		
005485 F01600              B    19    	dw24 os_parent_dir				;08		
005488 F61600              B    20    	dw24 os_root_dir				;09		
00548B 3E1700              B    21    	dw24 ext_delete_dir				;0a		
00548E 271600              B    22    	dw24 ext_find_file				;0b		
005491 431600              B    23    	dw24 ext_set_file_pointer		;0c		
005494 3C1600              B    24    	dw24 os_set_load_length			;0d		
005497 561600              B    25    	dw24 ext_read_bytes_from_file	;0e		
00549A FC1600              B    26    	dw24 ext_erase_file				;0f		
00549D 241700              B    27    	dw24 ext_rename_file			;10		
0054A0 661600              B    28    	dw24 ext_create_file			;11		
0054A3 781600              B    29    	dw24 ext_write_bytes_to_file	;12		
0054A6 911A00              B    30    	dw24 fs_get_total_sectors		;13		
0054A9 0A1700              B    31    	dw24 os_goto_first_dir_entry	;14		 
0054AC 101700              B    32    	dw24 os_get_dir_entry			;15		
0054AF 161700              B    33    	dw24 os_goto_next_dir_entry		;16		
0054B2 4E1700              B    34    	dw24 ext_read_sector			;17		
0054B5 7C1700              B    35    	dw24 ext_write_sector			;18		
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 224


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
0054B8 FF1A00              B    36    	dw24 ext_file_sector_list		;19		
0054BB 681A00              B    37    	dw24 fs_get_dir_cluster			;1a		
0054BE 741A00              B    38    	dw24 fs_update_dir_cluster		;1b		
0054C1 1C1700              B    39    	dw24 os_get_current_dir_name	;1c		
                           B    40    
0054C4 754300              B    41    	dw24 os_wait_key_press			;1d		
0054C7 D04300              B    42    	dw24 os_get_key_press			;1e		
0054CA 3B1500              B    43    	dw24 os_get_key_mod_flags		;1f		
                           B    44    
0054CD 031800              B    45    	dw24 ext_serial_get_header		;20		
0054D0 0D1800              B    46    	dw24 ext_serial_receive_file	;21		 
0054D3 161800              B    47    	dw24 ext_serial_send_file		;22		 
0054D6 231800              B    48    	dw24 ext_serial_tx				;23		
0054D9 2A1800              B    49    	dw24 ext_serial_rx				;24		
                           B    50    
0054DC 020F00              B    51    	dw24 ext_print_string			;25		
0054DF FC3D00              B    52    	dw24 hwsc_clear_screen			;26		
0054E2 CC3F00              B    53    	dw24 hwsc_wait_vrt				;27		
0054E5 C01300              B    54    	dw24 os_set_cursor_position		;28		
0054E8 631A00              B    55    	dw24 ext_plot_char				;29		
0054EB 811500              B    56    	dw24 ext_set_pen				;2a		
0054EE 8E1500              B    57    	dw24 ext_background_colours		;2b		
0054F1 C53E00              B    58    	dw24 hwsc_draw_cursor			;2c		
0054F4 881500              B    59    	dw24 os_get_pen					;2d		
0054F7 373E00              B    60    	dw24 hwsc_scroll_up				;2e		
0054FA 8F3D00              B    61    	dw24 os_set_video_hw_regs		;2f		
0054FD 411500              B    62    	dw24 os_get_vmode				;30			005500 193F00              B    63    	dw24 hwsc_get_charmap_addr_xy	;31		
005503 E01300              B    64    	dw24 os_get_cursor_position		;32		 
                           B    65    
005506 671B00              B    66    	dw24 ext_set_envar				;33		
005509 2B1B00              B    67    	dw24 ext_get_envar				;34		
00550C C11B00              B    68    	dw24 ext_delete_envar			;35		
                           B    69    
00550F 361400              B    70    	dw24 os_set_mouse_window		;36		
005512 7C1400              B    71    	dw24 os_get_mouse_position		;37		
005515 531400              B    72    	dw24 os_get_mouse_motion		;38		
                           B    73    
005518 3A4000              B    74    	dw24 hwsc_time_delay			;39		
00551B D41100              B    75    	dw24 ext_compare_strings		;3a		
00551E 531000              B    76    	dw24 ext_hexbyte_to_ascii		;3b		
005521 881000              B    77    	dw24 ext_ascii_to_hexword		;3c		
005524 DD1000              B    78    	dw24 ext_user_input				;3d		
                           B    79    
005527 1F4000              B    80    	dw24 hwsc_get_version			;3e		
00552A AA1300              B    81    	dw24 os_dont_store_registers	;3f		
00552D BA3600              B    82    	dw24 os_cmd_unused				;40 		005530 5D4000              B    83    	dw24 hwsc_read_rtc				;41     
005533 854000              B    84    	dw24 hwsc_write_rtc				;42		 
005536 121C00              B    85    	dw24 os_get_keymap_location		;43		 
005539 BB3600              B    86    	dw24 os_get_mem_high			;44
00553C 181C00              B    87    	dw24 ext_play_audio				;45
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 225


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
00553F 2F4300              B    88    	dw24 hwsc_disable_audio			;46
005542 484300              B    89    	dw24 hwsc_get_joysticks			;47
005545 511500              B    90    	dw24 ext_set_vmode				;48
005548 8F0F00              B    91    	dw24 ext_set_cursor_image		;49
00554B AB3E00              B    92    	dw24 hwsc_remove_cursor			;4a
00554E 8F3500              B    93    	dw24 char_to_font				;4b
                           B    94    	
                           B    95    ;----------------------------------------------
                           B    96    ; Non-packed Text Strings
                           B    97    ;----------------------------------------------
                           B    98    
005551 50524F53 4520666F   B    99    welcome_message			db "PROSE for EZ80P by 
005559 7220455A 38305020 
005561 62792050 68696C20 
005569 52757374 6F6E2032 
005571 3031310B 0B 
005576 53595354 454D2052   B   100    						db "SYSTEM RAM free abo
00557E 414D2066 72656520 
005586 61626F76 653A2024 
00558E 00 
00558F 44726976 65733A0B   B   101    storage_txt				db "Drives:",11,0
005597 00 
005598 434F4D4D 414E4453   B   102    os_dos_cmds_txt			db "COMMANDS",0
0055A0 00 
0055A1 53544152 5455502E   B   103    startup_script_fn		db "STARTUP.SCR",0
0055A9 53435200 
0055AD 2400                B   104    os_hex_prefix_txt		db "$",0
0055AF 4F532056 65727369   B   105    os_version_txt			db "OS Version: $",0	0055B7 6F6E3A20 2400 
0055BD 414D4F45 42412048   B   106    hw_version_txt			db "AMOEBA HW Version: 
0055C5 57205665 7273696F 
0055CD 6E3A2024 00 
0055D2 202F2000            B   107    fwd_slash_txt			db " / ",0
0055D6 4C6F6164 696E672E   B   108    loading_txt				db "Loading..",11,0
0055DE 2E0B00 
0055E1 53617669 6E672E2E   B   109    saving_txt				db "Saving..",11,0
0055E9 0B00 
0055EB 2E657A70 20         B   110    ezp_extension_txt		db ".ezp",32
0055F0 0B4D6F72 653F0B0B   B   111    os_more_txt				db 11,"More?",11,11,0
0055F8 00 
0055F9 52656769 73746572   B   112    nmi_freeze_txt			db "Register Dump:"
005601 2044756D 703A 
005607 0B0B00              B   113    crlfx2_txt				db 11,11,0
00560A 7800                B   114    rep_char_txt			db "x",0
00560C 20746F20 00         B   115    to_txt					db " to ",0
005611 4552524F 5200       B   116    error_txt				db "ERROR",0
005617 494620              B   117    if_command_txt			db "IF "
00561A 454E4420            B   118    end_command_txt			db "END "
00561E 4F532052 45515549   B   119    hw_warn_txt1			db "OS REQUIRES AMOEBA 
005626 52455320 414D4F45 
00562E 42412056 3A 
005633 2D2D2D2D 00         B   120    hw_warn_txt2			db "----",0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 226


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   121    
                           B   122    ;----------------------------------------------
                           B   123    ; Packed text section
                           B   124    ;----------------------------------------------
                           B   125    
005638 00444542 5547       B   126    dictionary				db 0,"DEBUG"			00563E 002D2D2D 2D2D       B   127    						db 0,"-----"			005644 00494F              B   128    						db 0,"IO"				005647 002D2D              B   129    						db 0,"--"				00564A 004D4953 43         B   130    						db 0,"MISC"				00564F 002D2D2D 2D         B   131    						db 0,"----"				005654 00616464 72         B   132    						db 0,"addr"				005659 0050524F 5345       B   133    						db 0,"PROSE"			00565F 00612062 2063       B   134    						db 0,"a b c"			005665 00416464 72657373   B   135    						db 0,"Address"			00566D 00427974 6573       B   136    						db 0,"Bytes"			005673 00457865 63757461   B   137    						db 0,"Executable"		00567B 626C65 
00567E 0048756E 74         B   138    						db 0,"Hunt"				005683 0046696C 6C         B   139    						db 0,"Fill"				005688 00476F74 6F         B   140    						db 0,"Goto"				                           B   141    						
00568D 0053686F 77         B   142    						db 0,"Show"				005692 00435055            B   143    						db 0,"CPU"				005696 00526567 69737465   B   144    						db 0,"Registers"		00569E 7273 
0056A0 004173              B   145    						db 0,"As"				0056A3 00415343 4949       B   146    						db 0,"ASCII"			0056A9 00436C65 6172       B   147    						db 0,"Clear"			0056AF 00536372 65656E     B   148    						db 0,"Screen"			0056B6 00446973 61737365   B   149    						db 0,"Disassemble"		0056BE 6D626C65 
0056C2 00537769 746368     B   150    						db 0,"Switch"			0056C9 00436F70 79         B   151    						db 0,"Copy"				0056CE 00446576 696365     B   152    						db 0,"Device"			0056D5 00436861 6E6765     B   153    						db 0,"Change"			0056DC 00447269 7665       B   154    						db 0,"Drive"			0056E2 00446972            B   155    						db 0,"Dir"				0056E6 002F                B   156    						db 0,"/"				0056E8 00666E              B   157    						db 0,"fn"				                           B   158    						
0056EB 0044656C 657465     B   159    						db 0,"Delete"			0056F2 0046696C 65         B   160    						db 0,"File"				0056F7 00496E66 6F         B   161    						db 0,"Info"				0056FC 00564F4C 783A       B   162    						db 0,"VOLx:"			005702 004D616B 65         B   163    						db 0,"Make"				005707 0052656D 6F756E74   B   164    						db 0,"Remount"			00570F 00537461 7274       B   165    						db 0,"Start"			005715 00576172 6E696E67   B   166    						db 0,"Warning!"			00571D 21 
00571E 00416C6C            B   167    						db 0,"All"				005722 0052656D 6F7665     B   168    						db 0,"Remove"			Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 227


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005729 0052656E 616D65     B   169    						db 0,"Rename"			005730 004F72              B   170    						db 0,"Or"				005733 00526563 65697665   B   171    						db 0,"Receive"			00573B 00536176 65         B   172    						db 0,"Save"				005740 00547261 6E736D69   B   173    						db 0,"Transmit"			005748 74 
005749 004C6F61 64         B   174    						db 0,"Load"				                           B   175    						
00574E 004F532F 4857       B   176    						db 0,"OS/HW"			005754 00566572 73696F6E   B   177    						db 0,"Version"			00575C 005B7065 6E207061   B   178    						db 0,"[pen paper]"		005764 7065725D 
005768 803A                B   179    						db 80h,":"				00576A 813E                B   180    						db 81h,">"				00576C 82534F55 4E44       B   181    						db 82h,"SOUND"			005772 00566F6C 756D6573   B   182    						db 0,"Volumes"			00577A 8343                B   183    						db 83h,"C"				00577C 844344              B   184    						db 84h,"CD"				00577F 85434C53            B   185    						db 85h,"CLS"			005783 8650454E            B   186    						db 86h,"PEN"			005787 8744                B   187    						db 87h,"D"				005789 8844454C            B   188    						db 88h,"DEL"			00578D 89444952            B   189    						db 89h,"DIR"			005791 8A48                B   190    						db 8ah,"H"				005793 8B46                B   191    						db 8bh,"F"				                           B   192    						
005795 004F6E              B   193    						db 0,"On"				005798 8C464F52 4D4154     B   194    						db 8ch,"FORMAT"			00579F 0047                B   195    						db 0,"G"				0057A1 8D4C42              B   196    						db 8dh,"LB"				0057A4 8E4D                B   197    						db 8eh,"M"				0057A6 8F4D4F55 4E54       B   198    						db 8fh,"MOUNT"			0057AC 004265              B   199    						db 0,"Be"				0057AF 9052                B   200    						db 90h,"R"				0057B1 915244              B   201    						db 91h,"RD"				0057B4 92524E              B   202    						db 92h,"RN"				0057B7 935258              B   203    						db 93h,"RX"				0057BA 945342              B   204    						db 94h,"SB"				0057BD 9554                B   205    						db 95h,"T"				0057BF 965458              B   206    						db 96h,"TX"				0057C2 97564552 53         B   207    						db 97h,"VERS"			0057C7 00577269 7465       B   208    						db 0,"Write"			                           B   209    						
0057CD 004D656D            B   210    						db 0,"Mem"				0057D1 00227478 7422       B   211    						db 0,22h,"txt",22h		0057D7 0057696C 6C         B   212    						db 0,"Will"				0057DC 00526174 65         B   213    						db 0,"Rate"				0057E1 0061                B   214    						db 0,"a"				0057E3 00507265 70         B   215    						db 0,"Prep"				0057E8 984D44              B   216    						db 98h,"MD"				0057EB 00447269 766573     B   217    						db 0,"Drives"			0057F2 006F6C64 666E       B   218    						db 0,"oldfn"			Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 228


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
0057F8 006E6577 666E       B   219    						db 0,"newfn"			0057FE 006C656E            B   220    						db 0,"len"				005802 00436F6C 6F757273   B   221    						db 0,"Colours"			00580A 993F                B   222    						db 99h,"?"				00580C 00436F6D 6D616E64   B   223    						db 0,"Commands"			005814 73 
005815 0020                B   224    						db 0," "				005817 002D                B   225    						db 0,"-"				                           B   226    						
005819 00566F6C 756D65     B   227    						db 0,"Volume"			005820 0046756C 6C         B   228    						db 0,"Full"				005825 004E6F74            B   229    						db 0,"Not"				005829 00466F75 6E64       B   230    						db 0,"Found"			00582F 004C656E 677468     B   231    						db 0,"Length"			005836 005A6572 6F         B   232    						db 0,"Zero"				00583B 004F7574            B   233    						db 0,"Out"				00583F 004F66              B   234    						db 0,"Of"				005842 0052616E 6765       B   235    						db 0,"Range"			005848 00416C72 65616479   B   236    						db 0,"Already"			005850 00457869 737473     B   237    						db 0,"Exists"			005857 004174              B   238    						db 0,"At"				00585A 00526F6F 74         B   239    						db 0,"Root"				00585F 004D6973 6D617463   B   240    						db 0,"Mismatch"			005867 68 
005868 00526571 75657374   B   241    						db 0,"Request"			005870 00446174 61         B   242    						db 0,"Data"				                           B   243    				
005875 00454F46            B   244    						db 0,"EOF"				005879 00416674 6572       B   245    						db 0,"After"			00587F 00556E6B 6E6F776E   B   246    						db 0,"Unknown"			005887 00436F6D 6D616E64   B   247    						db 0,"Command"			00588F 00426164            B   248    						db 0,"Bad"				005893 00486578            B   249    						db 0,"Hex"				005897 004E6F              B   250    						db 0,"No"				00589A 0041626F 72746564   B   251    						db 0,"Aborted"			0058A2 00507265 73656E74   B   252    						db 0,"Present"			0058AA 00436865 636B7375   B   253    						db 0,"Checksum"			0058B2 6D 
0058B3 004C6F61 646564     B   254    						db 0,"Loaded"			0058BA 00436F6D 6D73       B   255    						db 0,"Comms"			0058C0 00457272 6F72       B   256    						db 0,"Error"			0058C6 00417267 756D656E   B   257    						db 0,"Arguments"		0058CE 7473 
0058D0 004C6F73 74         B   258    						db 0,"Lost"				                           B   259    						
0058D5 00                  B   260    						db 0
0058D6 46415431 36         B   261    fat16_txt				db "FAT16"				                           B   262    
0058DB 00536572 69616C     B   263    						db 0,"Serial"			0058E2 0054696D 65         B   264    						db 0,"Time"				0058E7 00466F6E 74         B   265    						db 0,"Font"				0058EC 00546F6F            B   266    						db 0,"Too"				Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 229


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
0058F0 004C6F6E 67         B   267    						db 0,"Long"				0058F5 00446573 74696E61   B   268    						db 0,"Destination"		0058FD 74696F6E 
005901 0053656C 65637465   B   269    						db 0,"Selected"			005909 64 
00590A 00496E76 616C6964   B   270    						db 0,"Invalid"			005912 004D6973 73696E67   B   271    						db 0,"Missing"			00591A 004F4B              B   272    						db 0,"OK"				00591D 004F53              B   273    						db 0,"OS"				005920 0050726F 74656374   B   274    						db 0,"Protected"		005928 6564 
00592A 0041                B   275    						db 0,"A"				00592C 004973              B   276    						db 0,"Is"				00592F 00456D70 7479       B   277    						db 0,"Empty"			005935 00456E64            B   278    						db 0,"End"				                           B   279    						
005939 0024                B   280    						db 0,"$"
00593B 7878                B   281    hex_byte_txt			db "xx"					                           B   282    						
00593D 00417070 656E64     B   283    						db 0,"Append"			005944 003F                B   284    						db 0,"?"				005946 0024                B   285    						db 0,"$"				005948 00417761 6974696E   B   286    						db 0,"Awaiting"			005950 67 
005951 00526563 65697669   B   287    						db 0,"Receiving"		005959 6E67 
00595B 0053656E 64696E67   B   288    						db 0,"Sending"			005963 000B                B   289    						db 0,11					005965 002E2E              B   290    						db 0,".."				005968 004E616D 65         B   291    						db 0,"Name"				00596D 00204279 746573     B   292    						db 0," Bytes"			005974 00507265 7373       B   293    						db 0,"Press"			00597A 00416E79            B   294    						db 0,"Any"				00597E 004B6579            B   295    						db 0,"Key"				005982 00456E74 6572       B   296    						db 0,"Enter"			005988 9A455845 43         B   297    						db 9ah,"EXEC"			                           B   298    				
00598D 0052756E            B   299    						db 0,"Run"				005991 00536372 697074     B   300    						db 0,"Script"			005998 00594553            B   301    yes_txt					db 0,"YES" 				00599C 00546F              B   302    						db 0,"To"				00599F 00536574            B   303    						db 0,"Set"				0059A3 00436F6E 74696E75   B   304    						db 0,"Continue"			0059AB 65 
0059AC 004E6F6E 65         B   305    						db 0,"None"				0059B1 00447269 766572     B   306    						db 0,"Driver"			0059B8 9B3C                B   307    						db 9bh,"<"				0059BA 004E6577 6572       B   308    						db 0,"Newer"			0059C0 00526571 75697265   B   309    						db 0,"Required"			0059C8 64 
0059C9 00465047 4120636F   B   310    						db 0,"FPGA config"		0059D1 6E666967 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 230


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
0059D5 00556E63 68616E67   B   311    						db 0,"Unchanged"		0059DD 6564 
0059DF 006C6F63 206C656E   B   312    						db 0,"loc len [per vol 
0059E7 205B7065 7220766F 
0059EF 6C206368 616E7320 
0059F7 6C6F6F70 3F5D20 
0059FE 9C50414C 45545445   B   313    						db 9ch,"PALETTE"		005A06 0070616C 65747465   B   314    						db 0,"palette"			                           B   315    						
005A0E 9D4D4F55 5345       B   316    						db 9dh,"MOUSE"			005A14 00456E61 626C65     B   317    						db 0,"Enable"			005A1B 004B6579 626F6172   B   318    						db 0,"Keyboard"			005A23 64 
005A24 00446574 65637465   B   319    						db 0,"Detected"			005A2C 64 
005A2D 004D6F75 7365       B   320    						db 0,"Mouse"			005A33 00536563 746F72     B   321    						db 0,"Sector"			005A3A 00496E63 6F727265   B   322    						db 0,"Incorrect"		005A42 6374 
005A44 9E564D4F 4445       B   323    						db 9eh,"VMODE"			005A4A 00566964 656F       B   324    						db 0,"Video"			005A50 004D6F64 65         B   325    						db 0,"Mode"				005A55 9F464F4E 54         B   326    						db 9fh,"FONT"			005A5A 00416E64            B   327    						db 0,"And"				005A5E 00536176 696E67     B   328    						db 0,"Saving"			005A65 00556E73 7570706F   B   329    						db 0,"Unsupported"		005A6D 72746564 
005A71 A0534554            B   330    						db 0a0h,"SET"			005A75 005B7661 723D7374   B   331    						db 0,"[var=string]"		005A7D 72696E67 5D 
                           B   332    
005A82 00456E76 6172       B   333    						db 0,"Envar"			005A88 A1445A              B   334    						db 0a1h,"DZ"			005A8B 0041444C            B   335    						db 0,"ADL"				005A8F 005A3830            B   336    						db 0,"Z80"				005A93 00506C61 79         B   337    						db 0,"Play"				005A98 00417564 696F       B   338    						db 0,"Audio"			                           B   339    						
005A9E 0001                B   340    						db 0,1					                           B   341    
                           B   342    
                           B   343    
                           B   344    
                           B   345    
005AA0 2199696A 5F916F92   B   346    save_append_msg			db 021h,099h,069h,06ah,
005AA8 9700 
005AAA 2F0A9300            B   347    os_loadaddress_msg 		db 02fh,00ah,093h,0		005AAE 21649300            B   348    os_filesize_msg			db 021h,064h,093h,0		005AB2 94219700            B   349    ser_rec_msg				db 094h,021h,097h,0		005AB6 956F9897 00         B   350    ser_rec2_msg			db 095h,06fh,098h,097h,
005ABB 966F9897 00         B   351    ser_send_msg			db 096h,06fh,098h,097h,
005AC0 9521BBBC 989700     B   352    ser_recsave_msg			db 095h,021h,0bbh,0bch,
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 231


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005AC7 A77C9097 00         B   353    hw_err_msg				db 0a7h,07ch,090h,097h,
005ACC 607C00              B   354    disk_err_msg			db 060h,07ch,0			005ACF A1779797 00         B   355    script_aborted_msg		db 0a1h,077h,097h,097h,
005AD4 76B2B397 00         B   356    no_keyboard_msg			db 076h,0b2h,0b3h,097h,
                           B   357    
005AD9 9700                B   358    packed_help1				db 097h,0
005ADB 0100                B   359    							db 001h,0			005ADD 0200                B   360    							db 002h,0			005ADF 3307095F 4F500B00   B   361    							db 033h,007h,009h,0
005AE7 3407515F 4F1400     B   362    							db 034h,007h,051h,0
005AEE 37070707 5F195000   B   363    							db 037h,007h,007h,0
005AF6 3B075FC2 1700       B   364    							db 03bh,007h,05fh,0
005AFC C1075FC3 1700       B   365    							db 0c1h,007h,05fh,0
005B02 3F070754 5F0E5000   B   366    							db 03fh,007h,007h,0
005B0A 42075F0F 0A00       B   367    							db 042h,007h,05fh,0
005B10 3E070709 5F0D5000   B   368    							db 03eh,007h,007h,0
005B18 44075F10 500B00     B   369    							db 044h,007h,05fh,0
005B1F 475F1011 1200       B   370    							db 047h,05fh,010h,0
005B25 4C075F10 50131400   B   371    							db 04ch,007h,05fh,0
                           B   372    	
005B2D 9700                B   373    							db 097h,0
005B2F 0300                B   374    							db 003h,0			005B31 0400                B   375    							db 004h,0			005B33 38231E1D 5F1B601E   B   376    							db 038h,023h,01eh,0
005B3B 1D00 
005B3D 3C1F5F20 2100       B   377    							db 03ch,01fh,05fh,0
005B43 3D5F101D 00         B   378    							db 03dh,05fh,010h,0
005B48 411A995F 551C00     B   379    							db 041h,01ah,099h,0
005B4F 431F075F 2F2100     B   380    							db 043h,01fh,007h,0
005B56 561D5F24 1D00       B   381    							db 056h,01dh,05fh,0
005B5C 455F2557 00         B   382    							db 045h,05fh,025h,0
005B61 481D5F29 1D00       B   383    							db 048h,01dh,05fh,0
005B67 4958595F 2A2100     B   384    							db 049h,058h,059h,0
005B6E 4A1F075F 2C2100     B   385    							db 04ah,01fh,007h,0
005B75 4B1F075A 5F2D2100   B   386    							db 04bh,01fh,007h,0
005B7D 4D1F075A 5F2E2100   B   387    							db 04dh,01fh,007h,0
005B85 235F1860 00         B   388    							db 023h,05fh,018h,0
                           B   389    
005B8A 9700                B   390    							db 097h,0
005B8C 0500                B   391    							db 005h,0			005B8E 0600                B   392    							db 006h,0			005B90 395F1516 00         B   393    							db 039h,05fh,015h,0
005B95 9F1F5FA0 A100       B   394    							db 09fh,01fh,05fh,0
005B9B BA1F5F1B 8200       B   395    							db 0bah,01fh,05fh,0
005BA1 B05FB1B0 A700       B   396    							db 0b0h,05fh,0b1h,0
005BA7 AE095F1B AF00       B   397    							db 0aeh,09h,05fh,01
005BAD 3A325F1B 5B00       B   398    							db 03ah,032h,05fh,0
005BB3 BEBF5FA4 C000       B   399    							db 0beh,0bfh,05fh,0
005BB9 35AD5FC4 5013C500   B   400    							db 035h,0adh,05fh,0
005BC1 4E5F1030 3100       B   401    							db 04eh,05fh,010h,0
005BC7 B7095F1B B8B900     B   402    							db 0b7h,09h,5fh,01b
005BCE 5C5F105D 00         B   403    							db 05ch,05fh,010h,0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 232


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005BD3 9700                B   404    							db 097h,0
005BD5 FF                  B   405    							db 0ffh
                           B   406    
                           B   407    
                           B   408    
                           B   409    
005BD6 7A1D00              B   410    os_cmd_locs					dw24 os_cmd_colon	005BD9 582C00              B   411    							dw24 os_cmd_gtr		005BDC 233600              B   412    							dw24 os_cmd_sound	005BDF 211C00              B   413    							dw24 os_cmd_c		005BE2 8E1C00              B   414    							dw24 os_cmd_cd		005BE5 741D00              B   415    							dw24 os_cmd_cls		005BE8 923400              B   416    							dw24 os_cmd_pen		005BEB 941D00              B   417    							dw24 os_cmd_d		                           B   418    					
005BEE F52800              B   419    							dw24 os_cmd_del		005BF1 0A2900              B   420    							dw24 os_cmd_dir		005BF4 862B00              B   421    							dw24 os_cmd_h		005BF7 062A00              B   422    							dw24 os_cmd_f		005BFA 2E2A00              B   423    							dw24 os_cmd_format	005BFD 8C2C00              B   424    							dw24 os_cmd_lb		005C00 1B2D00              B   425    							dw24 os_cmd_m		005C03 1B3200              B   426    							dw24 os_cmd_remount
                           B   427    
005C06 722D00              B   428    							dw24 os_cmd_r		005C09 A32E00              B   429    							dw24 os_cmd_rd		005C0C B02E00              B   430    							dw24 os_cmd_rn		005C0F 342F00              B   431    							dw24 os_cmd_rx		005C12 CC2E00              B   432    							dw24 os_cmd_sb		005C15 C73100              B   433    							dw24 os_cmd_t		005C18 5B3100              B   434    							dw24 os_cmd_tx		005C1B 273200              B   435    							dw24 os_cmd_vers	                           B   436    							
005C1E 652D00              B   437    							dw24 os_cmd_md		005C21 342C00              B   438    							dw24 os_cmd_help	005C24 583200              B   439    							dw24 os_cmd_exec	005C27 903400              B   440    							dw24 os_cmd_ltn		005C2A AE3400              B   441    							dw24 os_cmd_palette
005C2D DF3400              B   442    							dw24 os_cmd_mouse	005C30 1B3500              B   443    							dw24 os_cmd_vmode	005C33 2B3500              B   444    							dw24 os_cmd_font	                           B   445    							
005C36 BA3500              B   446    							dw24 os_cmd_set		005C39 163600              B   447    							dw24 os_cmd_dz		                           B   448    							
                           B   449    								
005C3C 00                  B   450    packed_msg_list				db 0				                           B   451    		
005C3D 606100              B   452    							db 060h,061h,0		005C40 21626300            B   453    							db 021h,062h,063h,0
005C44 1D6100              B   454    							db 01dh,061h,0		005C47 628C1D00            B   455    							db 062h,08ch,01dh,0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 233


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005C4B 1D8D628E 00         B   456    							db 01dh,08dh,062h,0
005C50 628C2100            B   457    							db 062h,08ch,021h,0
005C54 21648D65 00         B   458    							db 021h,064h,08dh,0
005C59 0A666768 00         B   459    							db 00ah,066h,067h,0
005C5E 2199696A 00         B   460    							db 021h,099h,069h,0
005C63 696B6C00            B   461    							db 069h,06bh,06ch,0
                           B   462    					
005C67 727300              B   463    							db 072h,073h,0		005C6A 877500              B   464    							db 087h,075h,0		005C6D 76219900            B   465    							db 076h,021h,099h,0
                           B   466    					
005C71 87B500              B   467    							db 087h,0b5h,0		005C74 797400              B   468    							db 079h,074h,0		005C77 9A7A00              B   469    bytes_loaded_msg			db 09ah,07ah,0		005C7A 7B7C00              B   470    							db 07bh,07ch,0		005C7D 747D00              B   471    							db 074h,07dh,0		                           B   472    
005C80 627F00              B   473    format_err_msg				db 062h,07fh,0		                           B   474    
005C83 816600              B   475    							db 081h,066h,0		005C86 21998384 00         B   476    							db 021h,099h,083h,0
005C8B 76260A00            B   477    							db 076h,026h,00ah,0
005C8F 76216400            B   478    							db 076h,021h,064h,0
005C93 2D7700              B   479    							db 02dh,077h,0		005C96 2D7C6B85 00         B   480    							db 02dh,07ch,06bh,0
005C9B 628C080C 00         B   481    							db 062h,08ch,08h,0c
005CA0 A9316708 AA00       B   482    							db 0a9h,031h,067h,0
005CA6 768F0A00            B   483    							db 076h,08fh,00ah,0
005CAA 76850A00            B   484    							db 076h,085h,00ah,0
                           B   485    					
005CAE 746800              B   486    							db 074h,068h,0		005CB1 887D00              B   487    							db 088h,07dh,0		005CB4 8900                B   488    ok_msg						db 089h,0			                           B   489    					
005CB6 876000              B   490    							db 087h,060h,0		005CB9 1A627800            B   491    							db 01ah,062h,078h,0
                           B   492    					
005CBD 1D626300            B   493    							db 01dh,062h,063h,0
005CC1 7700                B   494    							db 077h,0			                           B   495    					
005CC3 21996D00            B   496    							db 021h,099h,06dh,0
005CC7 8A508B00            B   497    							db 08ah,050h,08bh,0
005CCB 6F71706E 00         B   498    							db 06fh,071h,070h,0
005CD0 763600              B   499    no_vols_msg					db 076h,036h,0		005CD3 97A66300            B   500    none_found_msg				db 097h,0a6h,063h,0
                           B   501    							
005CD7 B62100              B   502    							db 0b6h,021h,0		005CDA A9316708 AA00       B   503    							db 0a9h,031h,067h,0
005CE0 21AC00              B   504    							db 021h,0ach,0		                           B   505    							
005CE3 766F00              B   506    							db 076h,06fh,0		005CE6 746F00              B   507    							db 074h,06fh,0		Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 234


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005CE9 66676800            B   508    							db 066h,067h,068h,0
005CED BD1A00              B   509    							db 0bdh,01ah,0		005CF0 1A62B300            B   510    							db 01ah,062h,0b3h,0
005CF4 1A7C00              B   511    							db 01ah,07ch,0		005CF7 A17C00              B   512    							db 0a1h,07ch,0		                           B   513    							
005CFA FF                  B   514    							db 0ffh				                           B   515    
                           B   516    ;----------------------------------------------
                           B   517    
005CFB                     B   518    kernal_error_code_translation
                           B   519    
005CFB 242D2E14 08110F2A   B   520    					db 24h,2dh,2eh,14h, 08h,11h
005D03 2F303132 331F 
                           B   521    					
005D09                     B   522    fs_error_code_translation
                           B   523    
005D09 00010203 04050607   B   524    					db 00h,01h,02h,03h,04h,05h,
005D11 08090A0B 0C0D1321 
005D19 22232425 260E0000   B   525    					db 22h,23h,24h,25h,26h,0eh,
                           B   526    
                           B   527    
                           B   528    ;----------------------------------------------
                           B   529    ; Scancode to ASCII keymaps
                           B   530    ;----------------------------------------------
                           B   531    
                           C     0    include	'UK_keymap.asm'
005D21                     C     1    keymap:
005D21 00000000 00000000   C     2                    db 000h,000h,000h,000h,000h,000
005D29 00000000 00006000 
005D31 00000000 00713100   C     3                    db 000h,000h,000h,000h,000h,071
005D39 00007A73 61773200 
005D41 00637864 65343300   C     4                    db 000h,063h,078h,064h,065h,034
005D49 00207666 74723500 
005D51 006E6268 67793600   C     5                    db 000h,06Eh,062h,068h,067h,079
005D59 00006D6A 75373800 
005D61 002C6B69 6F303900   C     6                    db 000h,02Ch,06Bh,069h,06Fh,030
005D69 002E2F6C 3B702D00 
005D71 00002700 5B3D0000   C     7                    db 000h,000h,027h,000h,05Bh,03D
005D79 0000005D 00230000 
005D81 005C0000 00000000   C     8                    db 000h,05Ch,000h,000h,000h,000
005D89 00000000 00000000 
005D91 AC000000 00000051   C     9                    db 0ACh,000h,000h,000h,000h,000
005D99 21000000 5A534157 
005DA1 22000043 58444524   C    10                    db 022h,000h,000h,043h,058h,044
005DA9 A3000020 56465452 
005DB1 2500004E 42484759   C    11                    db 025h,000h,000h,04Eh,042h,048
005DB9 5E000000 4D4A5526 
005DC1 2A00003C 4B494F29   C    12                    db 02Ah,000h,000h,03Ch,04Bh,049
005DC9 2800003E 3F4C3A50 
005DD1 5F000000 40007B2B   C    13                    db 05Fh,000h,000h,000h,040h,000
005DD9 00000000 007D007E 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 235


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\UK_keymap.asm
005DE1 0000007C 00000000   C    14                    db 000h,000h,000h,07Ch,000h,000
005DE9 00000000 00000000 
005DF1 00000000 00000000   C    15                    db 000h,000h,000h,000h,000h,000
005DF9 00000000 00000000 
005E01 00000000 00000000   C    16                    db 000h,000h,000h,000h,000h,000
005E09 00000000 00000000 
005E11 00000000 00000000   C    17                    db 000h,000h,000h,000h,000h,000
005E19 00000000 00000000 
005E21 00000000 00000000   C    18                    db 000h,000h,000h,000h,000h,000
005E29 00000000 00000000 
005E31 00000000 00000000   C    19                    db 000h,000h,000h,000h,000h,000
005E39 00000000 00000000 
005E41 00000000 0000       C    20                    db 000h,000h,000h,000h,000h,000
                           B   533    
       00005D21            B   534    unshifted_keymap equ keymap+00h
       00005D83            B   535    shifted_keymap   equ keymap+62h
       00005DE5            B   536    alted_keymap	 equ keymap+c4h
                           B   537    	
                           B   538    ;----------------------------------------------
                           B   539    
005E47 00                  B   540    ui_index				db 0				; u
005E48 00                  B   541    ui_maxchars				db 0				; "
005E49 000000              B   542    ui_string_addr			dw24 0				; "
                           B   543    
                           B   544    ;----------------------------------------------
                           B   545    ; OS Display parameters
                           B   546    ;----------------------------------------------
                           B   547    
005E4C 00                  B   548    video_mode				db 0
005E4D 0700                B   549    current_pen				dw 07h				; C
005E4F 0000                B   550    background_colour		dw 00h				; F
                           B   551    
005E51 00000F00 000F0F0F   B   552    pen_palette				dw 0000h,000fh,0f00h,0f
005E59 F000FF00 F00FFF0F 
005E61 55059909 CC0C710F   B   553    						dw 0555h,0999h,0ccch,0f
005E69 7F00F80D 40088C03 
                           B   554    
005E71 00                  B   555    plotchar_colour			db 0				; c
                           B   556    
005E72 00                  B   557    char_under_cursor		db 0			
005E73 00                  B   558    cursor_present			db 0				; 1
005E74 00                  B   559    overwrite_mode			db 0
005E75 00                  B   560    cursor_image_char		db 0
                           B   561    
                           B   562    ;----------------------------------------------
                           B   563    
005E76                     B   564    display_parameters
                           B   565    
005E76 00                  B   566    video_doubling			db 0
005E77 000000              B   567    charmap_rows			dw24 0					005E7A 000000              B   568    charmap_columns			dw24 0				
                           B   569    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 236


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   570    ;----------------------------------------------
                           B   571    
005E7D                     B   572    vmode_parameter_list
                           B   573    
005E7D 00503C              B   574    				db 00b, 80,60	; vmode 0 (vide
005E80 01501E              B   575    				db 01b, 80,30	; vmode 1
005E83 02283C              B   576    				db 10b, 40,60	; vmode 2	
005E86 03281E              B   577    				db 11b, 40,30	; vmode 3
                           B   578    				
                           B   579    ;==============================================
                           B   580    ;  Serial Routine Data
                           B   581    ;==============================================
                           B   582    
005E89 000000              B   583    serial_ez80_address		dw24 0
005E8C 000000              B   584    serial_file_length		dw24 0
005E8F 000000              B   585    serial_fn_addr			dw24 0
005E92 00 00 00 00 00 00   B   586    serial_filename			blkb 18,0		
005E98 00 00 00 00 00 00 
005E9E 00 00 00 00 00 00 
005EA4 00                  B   587    serial_fn_length		db 0
005EA5 00                  B   588    serial_timeout			db 0
                           B   589    
005EA6 00 00 00 00 00 00   B   590    serial_fileheader		blkb 20,0
005EAC 00 00 00 00 00 00 
005EB2 00 00 00 00 00 00 
005EB8 00 00 
005EBA 5A383050 2E464845   B   591    serial_header_id		db "Z80P.FHEADER"		005EC2 41444552 
005EC6 00                  B   592    serial_transfer_started	db 0
                           B   593    
005EC7 00                  B   594    anim_wait_count			db 0
                           B   595    
                           B   596    ;==============================================
                           B   597    
005EC8 F3C8                B   598    intellimouse_seq	db 0f3h,200
005ECA F364                B   599    					db 0f3h,100
005ECC F350                B   600    					db 0f3h,80
                           B   601    
005ECE E803                B   602    mouse_settings_seq	db 0e8h,default_resolution
005ED0 E6                  B   603    					db default_scaling
005ED1 F364                B   604    					db 0f3h,default_sample_rate
005ED3 F4                  B   605    					db 0f4h
                           B   606    					
                           B   607    ;----------------------------------------------
                           B   608    ; FILE SYSTEM RELATED VARIABLES
                           B   609    ;----------------------------------------------
                           B   610    
005ED4 00                  B   611    boot_drive			db 0
                           B   612    
005ED5 00                  B   613    current_volume		db 0
                           B   614    	
005ED6 00                  B   615    current_driver		db 0			;normally u
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 237


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   616    
005ED7 00                  B   617    device_count		db 0			;IE: the nu
                           B   618    
005ED8 00                  B   619    volume_count		db 0
                           B   620    				
005ED9 20564F4C 303A00     B   621    vol_txt				db " VOL0:",0	;space pref
005EE0 44455630 3A00       B   622    dev_txt				db "DEV0:",0
                           B   623    
005EE6 000000              B   624    sector_rd_wr_addr	dw24 0
                           B   625    
                           B   626    ;==============================================
                           B   627    
                           B   628    ; Add storage device drivers here, end with 0
                           B   629    
005EE9 753700              B   630    driver_table		dw24 sd_card_driver	;Device
005EEC 000000              B   631    					dw24 0				;last d
                           B   632    
                           B   633    ; Each driver's code should have a header in th
                           B   634    ; ---------------------------------------------
                           B   635    ; $0    = JP to get ID routin
                           B   636    ; $4    = JP to read sector routine
                           B   637    ; $8    = JP to write sector routinee
                           B   638    ; $c    = ASCII name of device type (null termi
                           B   639    ;==============================================
                           B   640    
005EEF                     B   641    volume_dir_clusters
                           B   642    
005EEF 00 00 00 00 00 00   B   643    					blkb max_volumes*3,0
005EF5 00 00 00 00 00 00 
005EFB 00 00 00 00 00 00 
005F01 00 00 00 00 00 00 
                           B   644    	
005F07                     B   645    volume_mount_list
                           B   646    
005F07 00 00 00 00 00 00   B   647    					blkb max_volumes*16,0
005F0D 00 00 00 00 00 00 
005F13 00 00 00 00 00 00 
005F19 00 00 00 00 00 00 
005F1F 00 00 00 00 00 00 
005F25 00 00 00 00 00 00 
005F2B 00 00 00 00 00 00 
005F31 00 00 00 00 00 00 
005F37 00 00 00 00 00 00 
005F3D 00 00 00 00 00 00 
005F43 00 00 00 00 00 00 
005F49 00 00 00 00 00 00 
005F4F 00 00 00 00 00 00 
005F55 00 00 00 00 00 00 
005F5B 00 00 00 00 00 00 
005F61 00 00 00 00 00 00 
005F67 00 00 00 00 00 00 
005F6D 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 238


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005F73 00 00 00 00 00 00 
005F79 00 00 00 00 00 00 
005F7F 00 00 00 00 00 00 
005F85 00 00 
                           B   648    
                           B   649    ; Each entry is 16 bytes in the form:
                           B   650    
                           B   651    ; OFFSETS
                           B   652    ; -------
                           B   653    ; $00 - Volume is present (0/1)
                           B   654    ; $01 - Volume's host driver number (1 byte)	                           B   655    ; $02 - [reserved]
                           B   656    ; $03 - [reserved]
                           B   657    ; $04 - Volume's capacity in sectors (3 bytes)
                           B   658    ; $07 - Partition number on host drive (0/1/2/3
                           B   659    ; $08 - Offset in sectors from MBR to partition
                           B   660    ; $0c - [reserved]
                           B   661    ; $0d - [reserved]	
                           B   662    ; $0e - [reserved]
                           B   663    ; $0f - [reserved]
                           B   664    
                           B   665    ;==============================================
                           B   666    
005F87                     B   667    host_device_hardware_info
                           B   668    
005F87 00 00 00 00 00 00   B   669    					blkb 32*4,0
005F8D 00 00 00 00 00 00 
005F93 00 00 00 00 00 00 
005F99 00 00 00 00 00 00 
005F9F 00 00 00 00 00 00 
005FA5 00 00 00 00 00 00 
005FAB 00 00 00 00 00 00 
005FB1 00 00 00 00 00 00 
005FB7 00 00 00 00 00 00 
005FBD 00 00 00 00 00 00 
005FC3 00 00 00 00 00 00 
005FC9 00 00 00 00 00 00 
005FCF 00 00 00 00 00 00 
005FD5 00 00 00 00 00 00 
005FDB 00 00 00 00 00 00 
005FE1 00 00 00 00 00 00 
005FE7 00 00 00 00 00 00 
005FED 00 00 00 00 00 00 
005FF3 00 00 00 00 00 00 
005FF9 00 00 00 00 00 00 
005FFF 00 00 00 00 00 00 
006005 00 00 
                           B   670    
                           B   671    ; Each entry is 32 bytes..
                           B   672    ;
                           B   673    ; OFFSETS
                           B   674    ; -------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 239


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   675    ; $00 - Device driver number
                           B   676    ; $01 - Device's TOTAL capacity in sectors (4 b
                           B   677    ; $05 - Zero terminated hardware name (22 ASCII
                           B   678    ; (remaining bytes to $1F currently unused)
                           B   679    
                           B   680    ;----------------------------------------------
                           B   681    
006007 000000              B   682    dhwn_temp_pointer		dw24 0
                           B   683    
00600A 00                  B   684    partition_temp			db 0
00600B 00                  B   685    vols_on_device_temp		db 0
00600C 00                  B   686    sys_driver_backup		db 0
00600D 00                  B   687    os_quiet_mode			db 0
                           B   688    
00600E 036900              B   689    default_load_addr		dw24 os_max_addr
                           B   690    
                           B   691    ;----------------------------------------------
                           B   692    
006011 00 00 00 00 00 00   B   693    time_data				blkb	7,0
006017 00 
                           B   694    
006018 00                  B   695    frozen					db 0
006019 01                  B   696    first_run				db 1
00601A 01                  B   697    devices_connected		db 1					                           B   698    
                           B   699    ;----------------------------------------------
                           B   700    
00601B 036900              B   701    sysram_os_highest		dw24 os_max_addr
00601E 000080              B   702    vram_a_os_highest		dw24 vram_a_addr
006021 0000C0              B   703    vram_b_os_highest		dw24 vram_b_addr
                           B   704    
006024 000000              B   705    charmap_size			dw24 0
                           B   706    
                           B   707    ;----------------------------------------------
                           B   708    
006027 00                  B   709    store_a1				db 0		
006028 000000              B   710    store_bc1				dw24 0
00602B 000000              B   711    store_de1				dw24 0
00602E 000000              B   712    store_hl1				dw24 0
006031 00                  B   713    store_a2				db 0
006032 000000              B   714    store_bc2				dw24 0
006035 000000              B   715    store_de2				dw24 0
006038 000000              B   716    store_hl2				dw24 0
00603B 000000              B   717    store_ix				dw24 0
00603E 000000              B   718    store_iy				dw24 0
006041 000000              B   719    store_pc				dw24 0		;only relev
006044 000000              B   720    store_spl				dw24 0
006047 0000                B   721    store_sps				dw 0
006049 00                  B   722    store_mbase				db 0
00604A 00                  B   723    store_f	 				db 0
00604B 00                  B   724    store_adl				db 0
                           B   725    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 240


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   726    ;----------------------------------------------
00604C                     B   727    os_variables
                           B   728    ;----------------------------------------------
                           B   729    
00604C 00                  B   730    store_registers			db 0
00604D 000000              B   731    com_start_addr			dw24 0
                           B   732    
006050 00 00 00 00 00 00   B   733    temp_string				blkb max_buffer_chars+2
006056 00 00 00 00 00 00 
00605C 00 00 00 00 00 00 
006062 00 00 00 00 00 00 
006068 00 00 00 00 00 00 
00606E 00 00 00 00 00 00 
006074 00 00 00 00 00 00 
00607A 00 00 00 00 00 00 
006080 00 00 00 00 00 00 
006086 00 00 00 00 00 00 
00608C 00 00 00 00 00 00 
006092 00 00 00 00 00 00 
006098 00 00 00 00 00 00 
00609E 00 00 00 00 
0060A2 00 00 00 00 00 00   B   734    script_fn				blkb 13,0
0060A8 00 00 00 00 00 00 
0060AE 00 
                           B   735    
0060AF 00                  B   736    sector_lba0				db 0			; keep 
0060B0 00                  B   737    sector_lba1				db 0
0060B1 00                  B   738    sector_lba2				db 0
0060B2 00                  B   739    sector_lba3				db 0
                           B   740    
                           B   741    ;----------------------------------------------
                           B   742    
0060B3 000000              B   743    cursor_pos				dw24 0			; 3rd b
                           B   744    
       000060B3            B   745    cursor_y 				equ cursor_pos
       000060B4            B   746    cursor_x 				equ cursor_pos+1
                           B   747    						
0060B6 00                  B   748    cursorflashtimer		db 0
0060B7 00                  B   749    cursor_status			db 0
0060B8 00                  B   750    os_linecount			db 0
                           B   751    		
0060B9 000000              B   752    mem_mon_addr			dw24 0
0060BC 000000              B   753    cmdop_start_address		dw24 0
0060BF 000000              B   754    cmdop_end_address		dw24 0
0060C2 000000              B   755    copy_dest_address		dw24 0
0060C5 000000              B   756    hex_address				dw24 0
                           B   757    
0060C8 000000              B   758    find_hexstringascii 	dw24 0
0060CB 000000              B   759    xrr_temp				dw24 0
0060CE 00                  B   760    temphex					db 0
0060CF 00                  B   761    fillbyte				db 0 
0060D0 00                  B   762    ui_im_cache				db 0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 241


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   763    
0060D1 00 00 00 00 00 00   B   764    commandstring			blkb max_buffer_chars+2
0060D7 00 00 00 00 00 00 
0060DD 00 00 00 00 00 00 
0060E3 00 00 00 00 00 00 
0060E9 00 00 00 00 00 00 
0060EF 00 00 00 00 00 00 
0060F5 00 00 00 00 00 00 
0060FB 00 00 00 00 00 00 
006101 00 00 00 00 00 00 
006107 00 00 00 00 00 00 
00610D 00 00 00 00 00 00 
006113 00 00 00 00 00 00 
006119 00 00 00 00 00 00 
00611F 00 00 00 00 
006123 00 00 00 00 00 00   B   765    output_line				blkb max_buffer_chars+2
006129 00 00 00 00 00 00 
00612F 00 00 00 00 00 00 
006135 00 00 00 00 00 00 
00613B 00 00 00 00 00 00 
006141 00 00 00 00 00 00 
006147 00 00 00 00 00 00 
00614D 00 00 00 00 00 00 
006153 00 00 00 00 00 00 
006159 00 00 00 00 00 00 
00615F 00 00 00 00 00 00 
006165 00 00 00 00 00 00 
00616B 00 00 00 00 00 00 
006171 00 00 00 00 
                           B   766    				
006175 000000              B   767    os_args_loc				dw24 0
006178 000000              B   768    os_args_pos_cache		dw24 0
                           B   769    
00617B 000000              B   770    os_dir_block_cache  	dw24 0
00617E 000000              B   771    os_extcmd_jmp_addr		dw24 0
                           B   772    
                           B   773    
006181 000000              B   774    script_dir				dw24 0
006184 000000              B   775    script_file_offset		dw24 0
006187 000000              B   776    script_length			dw24 0
                           B   777    
00618A 00                  B   778    script_flags			db 0
                           B   779    
00618B 00 00 00 00 00 00   B   780    if_name_txt				blkb max_if_chars+2,0
006191 00 00 00 00 00 00 
006197 00 00 00 00 00 00 
00619D 00 00 00 00 00 00   B   781    if_value_txt			blkb max_if_chars+2,0
0061A3 00 00 00 00 00 00 
0061A9 00 00 00 00 00 00 
0061AF 00 00 00 00 00 00   B   782    if_label_txt			blkb max_if_chars+2,0
0061B5 00 00 00 00 00 00 
0061BB 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 242


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   783    
                           B   784    
0061C1 0000                B   785    char_to_print			db 0,0	; zero terminat
                           B   786    
                           B   787    ;----------------------------------------------
                           B   788    ; Keyboard buffer and registers
                           B   789    ;----------------------------------------------
                           B   790    
0061C3 00 00 00 00 00 00   B   791    scancode_buffer			blkb 32,0
0061C9 00 00 00 00 00 00 
0061CF 00 00 00 00 00 00 
0061D5 00 00 00 00 00 00 
0061DB 00 00 00 00 00 00 
0061E1 00 00 
                           B   792    
0061E3 00                  B   793    key_buf_wr_idx			db 0
0061E4 00                  B   794    key_buf_rd_idx			db 0
0061E5 00                  B   795    key_release_mode		db 0		
0061E6 00                  B   796    not_currently_used		db 0
0061E7 00                  B   797    key_mod_flags			db 0
0061E8 00                  B   798    current_scancode		db 0
0061E9 00                  B   799    current_asciicode		db 0
                           B   800    
                           B   801    ;----------------------------------------------
                           B   802    ; Mouse related registers
                           B   803    ;----------------------------------------------
                           B   804    
0061EA 00                  B   805    mouse_id				db 0
0061EB 00                  B   806    mouse_packet_size		db 0
                           B   807    
0061EC 00 00 00 00         B   808    mouse_packet			blkb 4,0			; t
0061F0 00                  B   809    mouse_packet_index		db 0				;
0061F1 00                  B   810    mouse_buttons			db 0				;
0061F2 000000              B   811    mouse_disp_x			dw24 0				; c
0061F5 000000              B   812    mouse_disp_y			dw24 0				; c
0061F8 00                  B   813    mouse_wheel				db 0				; m
0061F9 00                  B   814    mouse_updated			db 0
                           B   815    
0061FA 000000              B   816    mouse_window_size_x		dw24 0				; t
0061FD 000000              B   817    mouse_window_size_y		dw24 0
006200 000000              B   818    mouse_abs_x				dw24 0
006203 000000              B   819    mouse_abs_y				dw24 0
006206 000000              B   820    mouse_disp_x_old		dw24 0
006209 000000              B   821    mouse_disp_y_old		dw24 0
00620C 000000              B   822    mouse_disp_x_buffer		dw24 0
00620F 000000              B   823    mouse_disp_y_buffer		dw24 0
006212 00                  B   824    mouse_new_window		db 0
                           B   825    
                           B   826    ;----------------------------------------------
       000060B3            B   827    first_os_var			equ cursor_y
006213 00                  B   828    last_os_var				db 0
                           B   829    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 243


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   830    
                           B   831    ;==============================================
                           B   832    ; Environment variables
                           B   833    ;==============================================
                           B   834    
006214 4552524F 523D3030   B   835    envar_list				db "ERROR=00",0
00621C 00 
00621D FF                  B   836    first_ext_ev_entry		db 0ffh
00621E 00 00 00 00 00 00   B   837    						blkb envar_buffer_size,
006224 00 00 00 00 00 00 
00622A 00 00 00 00 00 00 
006230 00 00 00 00 00 00 
006236 00 00 00 00 00 00 
00623C 00 00 00 00 00 00 
006242 00 00 00 00 00 00 
006248 00 00 00 00 00 00 
00624E 00 00 00 00 00 00 
006254 00 00 00 00 00 00 
00625A 00 00 00 00 00 00 
006260 00 00 00 00 00 00 
006266 00 00 00 00 00 00 
00626C 00 00 00 00 00 00 
006272 00 00 00 00 00 00 
006278 00 00 00 00 00 00 
00627E 00 00 00 00 00 00 
006284 00 00 00 00 00 00 
00628A 00 00 00 00 00 00 
006290 00 00 00 00 00 00 
006296 00 00 00 00 00 00 
00629C 00 00 00 00 00 00 
0062A2 00 00 00 00 00 00 
0062A8 00 00 00 00 00 00 
0062AE 00 00 00 00 00 00 
0062B4 00 00 00 00 00 00 
0062BA 00 00 00 00 00 00 
0062C0 00 00 00 00 00 00 
0062C6 00 00 00 00 00 00 
0062CC 00 00 00 00 00 00 
0062D2 00 00 00 00 00 00 
0062D8 00 00 00 00 00 00 
0062DE 00 00 00 00 00 00 
0062E4 00 00 00 00 00 00 
0062EA 00 00 00 00 00 00 
0062F0 00 00 00 00 00 00 
0062F6 00 00 00 00 00 00 
0062FC 00 00 00 00 00 00 
006302 00 00 00 00 00 00 
006308 00 00 00 00 00 00 
00630E 00 00 00 00 00 00 
006314 00 00 00 00 00 00 
00631A 00 00 00 00 
                           B   838    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 244


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
00631E 1D6200              B   839    envar_top_loc			dw24 first_ext_ev_entry
                           B   840    
                           B   841    ;==============================================
                           B   842    
                           B     0    	include		'phil_font_packed.asm'			006321                     B     1    packed_font_start
006321 010100FF 01000918   B     2    				db 001h,001h,000h,0FFh,001h,000
006329 3C3C1800 181800EE 
006331 EE660100 056C6CFE   B     3                    db 0EEh,066h,001h,000h,005h,06C
006339 6CFE6C6C 00187EE0 
006341 7C0EFC18 00C6CE1C   B     4                    db 07Ch,00Eh,0FCh,018h,000h,0C6
006349 3870E6C6 0078ECEC 
006351 78EDEE7D 000C1C18   B     5                    db 078h,0EDh,0EEh,07Dh,000h,00C
006359 01000518 30016003 
006361 30180030 18010C03   B     6                    db 030h,018h,000h,030h,018h,001
006369 18300010 5438FE38 
006371 54100000 18187E18   B     7                    db 054h,010h,000h,000h,018h,018
006379 18010007 38387001 
006381 00037E01 00091818   B     8                    db 000h,003h,07Eh,001h,000h,009
006389 0000060E 1C3870E0 
006391 007CE6EE FEF6E67C   B     9                    db 000h,07Ch,0E6h,0EEh,0FEh,0F6
006399 00387801 38047C00 
0063A1 7CEE0E7C E0E0FE00   B    10                    db 07Ch,0EEh,00Eh,07Ch,0E0h,0E0
0063A9 FE0C180C 0ECE7C00 
0063B1 1E3E76E6 FF060600   B    11                    db 01Eh,03Eh,076h,0E6h,0FFh,006
0063B9 FEE0FC01 0E03FC00 
0063C1 7EE0FC01 E6037C00   B    12                    db 07Eh,0E0h,0FCh,001h,0E6h,003
0063C9 FE060C18 01380300 
0063D1 7CE6E67C E6E67C00   B    13                    db 07Ch,0E6h,0E6h,07Ch,0E6h,0E6
0063D9 7C01CE03 7E0E7C01 
0063E1 00031818 00181801   B    14                    db 000h,003h,018h,018h,000h,018
0063E9 00033030 00303060 
0063F1 0E1C3870 381C0E01   B    15                    db 00Eh,01Ch,038h,070h,038h,01C
0063F9 00037E00 7E010003 
006401 70381C0E 1C387000   B    16                    db 070h,038h,01Ch,00Eh,01Ch,038
006409 7CEE0E3C 38003800 
006411 7CE601EE 03E07C00   B    17                    db 07Ch,0E6h,001h,0EEh,003h,0E0
006419 7CE6E6FE 01E60300 
006421 FCE6E6FC E6E6FC00   B    18                    db 0FCh,0E6h,0E6h,0FCh,0E6h,0E6
006429 7CE601E0 03E67C00 
006431 FC01E605 FC00FEE0   B    19                    db 0FCh,001h,0E6h,005h,0FCh,000
006439 E0F8E0E0 FE00FEE0 
006441 E0F801E0 03007CE6   B    20                    db 0E0h,0F8h,001h,0E0h,003h,000
006449 E0EEE6E6 7C0001E6 
006451 03FE01E6 03007C01   B    21                    db 003h,0FEh,001h,0E6h,003h,000
006459 38057C00 7E011C04 
006461 DC7800E6 ECF8EC01   B    22                    db 0DCh,078h,000h,0E6h,0ECh,0F8
006469 E6030001 E006FE00 
006471 C6EEFED6 01C60300   B    23                    db 0C6h,0EEh,0FEh,0D6h,001h,0C6
006479 E6F6FEFE EEE6E600 
006481 7C01E605 7C00FC01   B    24                    db 07Ch,001h,0E6h,005h,07Ch,000
006489 E603FCE0 E0007C01 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 245


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\phil_font_packed.asm
006491 E603EAEC 7600FC01   B    25                    db 0E6h,003h,0EAh,0ECh,076h,000
006499 E603FCE6 E6007CEE 
0064A1 E07C0EEE 7C00FE01   B    26                    db 0E0h,07Ch,00Eh,0EEh,07Ch,000
0064A9 38060001 E6067C00 
0064B1 01E60574 380001C6   B    27                    db 001h,0E6h,005h,074h,038h,000
0064B9 04D6FE6C 00E6E66C 
0064C1 3874E6E6 0001E604   B    28                    db 038h,074h,0E6h,0E6h,000h,001
0064C9 7E06FC00 FE0E1C38 
0064D1 70E0FE00 3C013005   B    29                    db 070h,0E0h,0FEh,000h,03Ch,001
0064D9 3C00C0E0 70381C0E 
0064E1 06007801 18057800   B    30                    db 006h,000h,078h,001h,018h,005
0064E9 10386CC6 01000BFE 
0064F1 381C0100 087C067E   B    31                    db 038h,01Ch,001h,000h,008h,07C
0064F9 E67E0000 E0E0FCE6 
006501 E6FC0100 037C01E0   B    32                    db 0E6h,0FCh,001h,000h,003h,07C
006509 037C0000 06067EE6 
006511 E67E0100 037CE6FE   B    33                    db 0E6h,07Eh,001h,000h,003h,07C
006519 E07C0000 3E70FC01 
006521 70030100 037EE6E6   B    34                    db 070h,003h,001h,000h,003h,07E
006529 7E067C00 E0E0FC01 
006531 E6030000 38007838   B    35                    db 0E6h,003h,000h,000h,038h,000
006539 387C0000 1C00011C 
006541 047800E0 EEECF8EC   B    36                    db 004h,078h,000h,0E0h,0EEh,0EC
006549 EE000078 0138047C 
006551 010003EC FED6C6C6   B    37                    db 001h,000h,003h,0ECh,0FEh,0D6
006559 010003FC 01E60401 
006561 00037C01 E6037C01   B    38                    db 000h,003h,07Ch,001h,0E6h,003
006569 0003FCE6 E6FCE0E0 
006571 00007EE6 E67E0606   B    39                    db 000h,000h,07Eh,0E6h,0E6h,07E
006579 0000DCE6 01E00301 
006581 00037EF0 7C1EFC00   B    40                    db 000h,003h,07Eh,0F0h,07Ch,01E
006589 00387E01 38031E01 
006591 000301E6 047E0100   B    41                    db 000h,003h,001h,0E6h,004h,07E
006599 0301E603 6C380100 
0065A1 03E2EAFE 7C340100   B    42                    db 003h,0E2h,0EAh,0FEh,07Ch,034
0065A9 03E67C38 7CE60100 
0065B1 0301E603 7E0CF800   B    43                    db 003h,001h,0E6h,003h,07Eh,00C
0065B9 00FE1C38 70FE003C 
0065C1 30306030 303C0001   B    44                    db 030h,030h,060h,030h,030h,03C
0065C9 18070078 18180C18 
0065D1 18780033 7ECC0100   B    45                    db 018h,078h,000h,033h,07Eh,0CC
0065D9 0501FE07 0100FF01 
0065E1 001A1C3A 70FC70F2   B    46                    db 000h,01Ah,01Ch,03Ah,070h,0FC
0065E9 BC010029 7CC6BAA2 
0065F1 BAC67C01 00147E06   B    47                    db 0BAh,0C6h,07Ch,001h,000h,014
0065F9 060100FF 0100FF01 
006601 009C                B    48                    db 000h,09Ch
006603                     B    49    packed_font_end
                           A  3221    
006603 00 00 00 00 00 00   A  3222    sector_buffer	blkb 512,0
006609 00 00 00 00 00 00 
00660F 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 246


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
006615 00 00 00 00 00 00 
00661B 00 00 00 00 00 00 
006621 00 00 00 00 00 00 
006627 00 00 00 00 00 00 
00662D 00 00 00 00 00 00 
006633 00 00 00 00 00 00 
006639 00 00 00 00 00 00 
00663F 00 00 00 00 00 00 
006645 00 00 00 00 00 00 
00664B 00 00 00 00 00 00 
006651 00 00 00 00 00 00 
006657 00 00 00 00 00 00 
00665D 00 00 00 00 00 00 
006663 00 00 00 00 00 00 
006669 00 00 00 00 00 00 
00666F 00 00 00 00 00 00 
006675 00 00 00 00 00 00 
00667B 00 00 00 00 00 00 
006681 00 00 00 00 00 00 
006687 00 00 00 00 00 00 
00668D 00 00 00 00 00 00 
006693 00 00 00 00 00 00 
006699 00 00 00 00 00 00 
00669F 00 00 00 00 00 00 
0066A5 00 00 00 00 00 00 
0066AB 00 00 00 00 00 00 
0066B1 00 00 00 00 00 00 
0066B7 00 00 00 00 00 00 
0066BD 00 00 00 00 00 00 
0066C3 00 00 00 00 00 00 
0066C9 00 00 00 00 00 00 
0066CF 00 00 00 00 00 00 
0066D5 00 00 00 00 00 00 
0066DB 00 00 00 00 00 00 
0066E1 00 00 00 00 00 00 
0066E7 00 00 00 00 00 00 
0066ED 00 00 00 00 00 00 
0066F3 00 00 00 00 00 00 
0066F9 00 00 00 00 00 00 
0066FF 00 00 00 00 00 00 
006705 00 00 00 00 00 00 
00670B 00 00 00 00 00 00 
006711 00 00 00 00 00 00 
006717 00 00 00 00 00 00 
00671D 00 00 00 00 00 00 
006723 00 00 00 00 00 00 
006729 00 00 00 00 00 00 
00672F 00 00 00 00 00 00 
006735 00 00 00 00 00 00 
00673B 00 00 00 00 00 00 
006741 00 00 00 00 00 00 
006747 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 247


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00674D 00 00 00 00 00 00 
006753 00 00 00 00 00 00 
006759 00 00 00 00 00 00 
00675F 00 00 00 00 00 00 
006765 00 00 00 00 00 00 
00676B 00 00 00 00 00 00 
006771 00 00 00 00 00 00 
006777 00 00 00 00 00 00 
00677D 00 00 00 00 00 00 
006783 00 00 00 00 00 00 
006789 00 00 00 00 00 00 
00678F 00 00 00 00 00 00 
006795 00 00 00 00 00 00 
00679B 00 00 00 00 00 00 
0067A1 00 00 00 00 00 00 
0067A7 00 00 00 00 00 00 
0067AD 00 00 00 00 00 00 
0067B3 00 00 00 00 00 00 
0067B9 00 00 00 00 00 00 
0067BF 00 00 00 00 00 00 
0067C5 00 00 00 00 00 00 
0067CB 00 00 00 00 00 00 
0067D1 00 00 00 00 00 00 
0067D7 00 00 00 00 00 00 
0067DD 00 00 00 00 00 00 
0067E3 00 00 00 00 00 00 
0067E9 00 00 00 00 00 00 
0067EF 00 00 00 00 00 00 
0067F5 00 00 00 00 00 00 
0067FB 00 00 00 00 00 00 
006801 00 00 
                           A  3223    
006803 00 00 00 00 00 00   A  3224    scratch_pad		blkb 256,0
006809 00 00 00 00 00 00 
00680F 00 00 00 00 00 00 
006815 00 00 00 00 00 00 
00681B 00 00 00 00 00 00 
006821 00 00 00 00 00 00 
006827 00 00 00 00 00 00 
00682D 00 00 00 00 00 00 
006833 00 00 00 00 00 00 
006839 00 00 00 00 00 00 
00683F 00 00 00 00 00 00 
006845 00 00 00 00 00 00 
00684B 00 00 00 00 00 00 
006851 00 00 00 00 00 00 
006857 00 00 00 00 00 00 
00685D 00 00 00 00 00 00 
006863 00 00 00 00 00 00 
006869 00 00 00 00 00 00 
00686F 00 00 00 00 00 00 
006875 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-Jul-11     14:20:15     page: 248


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00687B 00 00 00 00 00 00 
006881 00 00 00 00 00 00 
006887 00 00 00 00 00 00 
00688D 00 00 00 00 00 00 
006893 00 00 00 00 00 00 
006899 00 00 00 00 00 00 
00689F 00 00 00 00 00 00 
0068A5 00 00 00 00 00 00 
0068AB 00 00 00 00 00 00 
0068B1 00 00 00 00 00 00 
0068B7 00 00 00 00 00 00 
0068BD 00 00 00 00 00 00 
0068C3 00 00 00 00 00 00 
0068C9 00 00 00 00 00 00 
0068CF 00 00 00 00 00 00 
0068D5 00 00 00 00 00 00 
0068DB 00 00 00 00 00 00 
0068E1 00 00 00 00 00 00 
0068E7 00 00 00 00 00 00 
0068ED 00 00 00 00 00 00 
0068F3 00 00 00 00 00 00 
0068F9 00 00 00 00 00 00 
0068FF 00 00 00 00 
                           A  3225    
                           A  3226    ;==============================================
                           A  3227    	
006903 00                  A  3228    os_max_addr		db 0							                           A  3229    	
                           A  3230    
                           A  3231    ;==============================================
                           A  3232    
                           A  3233    				end	
                           A  3234    				
                           A  3235    ;==============================================
                           A  3236    	


Errors: 0
Warnings: 0
Lines Assembled: 12388
