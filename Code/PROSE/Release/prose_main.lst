Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:   1


PC     Object              I  Line    Source 
                           A     1    
                           A     2    ; PROSE for EZ80P by Phil Ruston 2011
                           A     3    ; Compile with Zilog ZDS II
                           A     4    
                           A     5    ;----------------------------------------------
                           A     6    	.assume ADL = 1
                           A     7    ;----------------------------------------------
                           A     8    
                           B     0    	include	'ez80_cpu_equates.asm'
                           B     1    ;--- EZ80 Internal Ports ----------------------
                           B     2    
       0000009A            B     3    PB_DR			equ 09ah
       0000009B            B     4    PB_DDR			equ 09bh
       0000009C            B     5    PB_ALT1			equ 09ch
       0000009D            B     6    PB_ALT2			equ 09dh
                           B     7    
       0000009E            B     8    PC_DR			equ 09eh
       0000009F            B     9    PC_DDR			equ 09fh
       000000A0            B    10    PC_ALT1			equ 0a0h
       000000A1            B    11    PC_ALT2			equ 0a1h
                           B    12    
       000000A2            B    13    PD_DR			equ 0a2h
       000000A3            B    14    PD_DDR			equ 0a3h
       000000A4            B    15    PD_ALT1			equ 0a4h
       000000A5            B    16    PD_ALT2			equ 0a5h
                           B    17    
       000000C0            B    18    UART0_RBR		equ 0c0h
       000000C0            B    19    UART0_THR		equ 0c0h
       000000C0            B    20    UART0_BRG_L		equ 0c0h
       000000C1            B    21    UART0_BRG_H		equ 0c1h
       000000C1            B    22    UART0_IER		equ 0c1h
       000000C2            B    23    UART0_FCTL		equ 0c2h
       000000C3            B    24    UART0_LCTL		equ 0c3h
       000000C4            B    25    UART0_MCTL		equ 0c4h
       000000C5            B    26    UART0_LSR		equ 0c5h
       000000C6            B    27    UART0_MSR		equ 0c6h
                           B    28    
       000000A8            B    29    CS0_LBR			equ 0a8h			;eZ80 wait 
       000000A9            B    30    CS0_UBR			equ 0a9h
       000000AA            B    31    CS0_CTL			equ 0aah			
       000000AB            B    32    CS1_LBR			equ 0abh			;eZ80 wait 
       000000AC            B    33    CS1_UBR			equ 0ach
       000000AD            B    34    CS1_CTL			equ 0adh
       000000AE            B    35    CS2_LBR			equ 0aeh			;eZ80 wait 
       000000AF            B    36    CS2_UBR			equ 0afh
       000000B0            B    37    CS2_CTL			equ 0b0h
       000000B1            B    38    CS3_LBR			equ 0b1h			;eZ80 wait 
       000000B2            B    39    CS3_UBR			equ 0b2h
       000000B3            B    40    CS3_CTL			equ 0b3h
                           B    41    
       00000080            B    42    TMR0_CTL		equ 080h			;timer 0 eq
       00000081            B    43    TMR0_DR_L		equ 081h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:   2


PC     Object              I  Line    Source ..\..\Includes\ez80_cpu_equates.asm
       00000081            B    44    TMR0_RR_L		equ 081h
       00000082            B    45    TMR0_DR_H		equ 082h
       00000082            B    46    TMR0_RR_H		equ 082h
       00000092            B    47    TMR_ISS			equ 092h
                           B    48    
       00000083            B    49    TMR1_CTL		equ 083h 
       00000084            B    50    TMR1_RR_L		equ 084h
       00000085            B    51    TMR1_RR_H		equ 085h
                           B    52    
       000000ED            B    53    RTC_CTRL		equ 0edh			;RTC equate
       000000EC            B    54    RTC_ACTRL		equ 0ech
       000000E0            B    55    RTC_SEC			equ 0e0h
       000000E1            B    56    RTC_MIN			equ 0e1h
       000000E2            B    57    RTC_HRS			equ 0e2h
       000000E3            B    58    RTC_DOW			equ 0e3h
       000000E4            B    59    RTC_DOM			equ 0e4h
       000000E5            B    60    RTC_MON			equ 0e5h
       000000E6            B    61    RTC_YR			equ 0e6h
       000000E7            B    62    RTC_CEN			equ 0e7h
                           B    63    
                           B    64    ;----------------------------------------------
                           B     0    	include	'amoeba_hardware_equates.asm'
                           B     1    ;-- AMOEBA Hardware equates -------------------
                           B     2    
       00000000            B     3    port_pic_data  			equ 000h
       00000001            B     4    port_pic_ctrl			equ 001h
       00000001            B     5    port_hw_flags			equ 001h
       00000002            B     6    port_sdc_ctrl			equ 002h	; this is a
       00000002            B     7    port_keyboard_data		equ 002h
       00000003            B     8    port_sdc_data		 	equ 003h	
       00000004            B     9    port_memory_paging		equ 004h
       00000005            B    10    port_irq_ctrl			equ 005h
       00000005            B    11    port_irq_flags			equ 005h
       00000006            B    12    port_nmi_ack			equ 006h
       00000007            B    13    port_ps2_ctrl			equ 007h
       00000008            B    14    port_selector			equ 008h
       00000006            B    15    port_mouse_data			equ 006h
       00000009            B    16    port_clear_flags			equ 009h
       0000000A            B    17    port_hw_enable			equ 00ah
                           B    18    
       00000000            B    19    sdc_power				equ 0		;(port_sd_c
       00000001            B    20    sdc_cs					equ 1		;(port_sd_c
       00000002            B    21    sdc_speed				equ 2 		;(port_sd_c
                           B    22    
       00000004            B    23    sdc_serializer_busy		equ 4 		;(port_hw_f
       00000005            B    24    vrt						equ 5		;(port_hw_f
                           B    25    
                           B    26    
                           B    27    ;-- Memory locations --------------------------
                           B    28    
       00000000            B    29    sysram_addr				equ 0000000h
       00800000            B    30    vram_a_addr				equ 0800000h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:   3


PC     Object              I  Line    Source ..\..\Includes\amoeba_hardware_equates.asm
       00C00000            B    31    vram_b_addr				equ 0c00000h
                           B    32    
                           B    33    ;-- Hardware registers ------------------------
                           B    34    
       00FF0000            B    35    hw_palette				equ 0ff0000h
       00FF0800            B    36    hw_sprite_registers		equ 0ff0800h
       00FF1000            B    37    hw_video_parameters		equ 0ff1000h
       00FF1400            B    38    hw_audio_registers		equ 0ff1400h
       00FF1800            B    39    hw_video_settings		equ 0ff1800h
                           B    40    
       00FF1000            B    41    tilemap_parameters		equ hw_video_parameters
       00FF1020            B    42    bitmap_parameters		equ hw_video_parameters
                           B    43    
       00FF1800            B    44    video_control			equ hw_video_settings+0
       00FF1801            B    45    sprite_control			equ hw_video_settings+0
       00FF1802            B    46    bgnd_palette_select		equ hw_video_settings+0
       00FF1803            B    47    sprite_palette_select	equ hw_video_settings+0
       00FF1804            B    48    right_border_position	equ hw_video_settings+0
       00FF1805            B    49    irq_line_lo				equ hw_video_settings+0
       00FF1806            B    50    irq_line_hi				equ hw_video_settings+0
       00FF1807            B    51    sprite_gen_stop_pos		equ hw_video_settings+0
                           B    52    
                           B    53    ;----------------------------------------------
                           B     0    	include 'misc_system_equates.asm'
                           B     1    
                           B     2    ;-- System Equates ----------------------------
                           B     3    
       00000A00            B     4    os_location			equ 0a00h
                           B     5    
       00000A14            B     6    prose_return 		equ os_location + 14h
       00000A18            B     7    prose_relativize_hl	equ os_location + 18h
       00000A1C            B     8    prose_relative_call	equ os_location + 1ch
                           B     9    
       00000A20            B    10    prose_kernal 		equ os_location + 20h
                           B    11    
                           B    12    ;----------------------------------------------
                           B    13    
                           B    14    ; Add to sprite locations to position a 0,0 spr
                           B    15    
       00000100            B    16    x_display_offset	equ 0100h		;for AMOEBA
       00000200            B    17    y_display_offset	equ 0200h		;for AMOEBA
                           B    18    
                           B    19    ;----------------------------------------------
                           A    12    	
       00000800            A    13    	sector_buffer		equ 800h
       00000700            A    14    	serial_buffer		equ 700h
                           A    15    	
       00000100            A    16    	scratch_pad			equ 100h
                           A    17    
       00000200            A    18    	envar_list			equ 200h
       00000200            A    19    	envar_buffer_size	equ 200h
                           A    20    	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:   4


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A    21    ;----------------------------------------------
                           A    22    
       0000003E            A    23    prose_version			equ 3eh
       0000010B            A    24    amoeba_version_required	equ 10bh
                           A    25    
       00080000            A    26    sysram_size				equ 080000h			;as
       00000200            A    27    stack_size				equ 512
                           A    28    
       00080000            A    29    vram_a_size				equ 080000h
       00080000            A    30    vram_b_size				equ 080000h
                           A    31    
                           A    32    ;----------------------------------------------
                           A    33    ; Assembly options
                           A    34    ;----------------------------------------------
                           A    35    
       00000008            A    36    max_volumes				equ 8
                           A    37    
       00000050            A    38    max_buffer_chars		equ 80		; applies t
                           A    39    
                           A    40    ;----------------------------------------------
                           A    41    			
000A00                     A    42    			org os_location
                           A    43    			
000A00 00 00 00 00 00 00   A    44    				blkb 16,0						000A06 00 00 00 00 00 00 
000A0C 00 00 00 00 
                           A    45    			
                           A    46    ;----------------------------------------------
                           A    47    			
000A10 C3 4E 0A 00         A    48    				jp os_first_run					000A14 C3 57 0F 00         A    49    				jp extcmd_return				000A18 C3 63 3B 00         A    50    				jp relativize_hl				000A1C C3 76 3B 00         A    51    				jp relative_call				                           A    52    				
                           A    53    ;----------------------------------------------
                           A    54    
                           A    55    ; External apps can call kernal routines by doi
                           A    56    ; Set A to kernal routine number required (see 
                           A    57    ; (this routine is always located at os_locatio
                           A    58    
000A20 D9                  A    59    				exx
000A21 DD22 B5 6B 00       A    60    				ld (kernal_ix_cache),ix
000A26 DD21 30 5F 00       A    61    				ld ix,kernal_table				000A2B 11030000            A    62    				ld de,3
000A2F 57                  A    63    				ld d,a
000A30 ED5C                A    64    				mlt de
000A32 DD19                A    65    				add ix,de						000A34 DD3700              A    66    				ld ix,(ix)						                           A    67    				
000A37 E3                  A    68    				ex (sp),hl
000A38 7D                  A    69    				ld a,l							000A39 E601                A    70    				and 1							Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:   5


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000A3B E3                  A    71    				ex (sp),hl
000A3C D9                  A    72    				exx
000A3D FDE5                A    73    				push iy
000A3F CD 4C 0A 00         A    74    				call kr_jump					000A43 FDE1                A    75    				pop iy							000A45 DD2A B5 6B 00       A    76    				ld ix,(kernal_ix_cache)
000A4A 5BC9                A    77    				ret.l							                           A    78    				
000A4C DDE9                A    79    kr_jump			jp (ix)							                           A    80    						
                           A    81    ;----------------------------------------------
                           A    82    
                           A    83    ; *******************
                           A    84    ; *   START UP OS   *
                           A    85    ; *******************
                           A    86    
000A4E                     A    87    os_first_run
                           A    88    	
000A4E B7                  A    89    				or a							000A4F 20 05               A    90    				jr nz,os_cold_start		
000A51 78                  A    91    				ld a,b
000A52 32 37 6A 00         A    92    				ld (boot_drive),a				                           A    93    
000A56                     A    94    os_cold_start
000A56 ED7D                A    95    				stmix							000A58 F3                  A    96    				di								000A59 ED5E                A    97    				im 2							000A5B AF                  A    98    				xor a
000A5C ED6D                A    99    				ld MB,a							000A5E 4031FFFF            A   100    				ld.sis sp,0ffffh				000A62 31FFFF07            A   101    				ld sp,sysram_addr+sysram_size-1
000A66 21FFFF07            A   102    				ld hl,sysram_addr+sysram_size-1
000A6A 11000200            A   103    				ld de,stack_size
000A6E AF                  A   104    				xor a
000A6F ED52                A   105    				sbc hl,de
000A71 22 78 6B 00         A   106    				ld (free_sysram_top),hl			000A75 21 3A 71 00         A   107    				ld hl,os_max_addr
000A79 22 75 6B 00         A   108    				ld (free_sysram_base),hl
                           A   109    				
000A7D 21000080            A   110    				ld hl,vram_a_addr
000A81 22 7B 6B 00         A   111    				ld (free_vram_a_base),hl
000A85 01FFFF07            A   112    				ld bc,vram_a_size-1
000A89 09                  A   113    				add hl,bc
000A8A 22 7E 6B 00         A   114    				ld (free_vram_a_top),hl
                           A   115    				
000A8E 210000C0            A   116    				ld hl,vram_b_addr
000A92 22 81 6B 00         A   117    				ld (free_vram_b_base),hl
000A96 01FFFD07            A   118    				ld bc,vram_b_size-1-512			000A9A 09                  A   119    				add hl,bc
000A9B 22 84 6B 00         A   120    				ld (free_vram_b_top),hl
                           A   121    								
000A9F CD EC 43 00         A   122    				call disable_irqs
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:   6


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000AA3 CD 0B 46 00         A   123    				call disable_all_nmis
                           A   124    				
000AA7 3A 73 6B 00         A   125    				ld a,(first_run)				000AAB B7                  A   126    				or a
000AAC 28 11               A   127    				jr z,dont_resetkb
000AAE CD 4F 4A 00         A   128    				call init_keyboard
000AB2 28 06               A   129    				jr z,kb_ok
000AB4 21 74 6B 00         A   130    				ld hl,devices_connected
000AB8 CB86                A   131    				res 0,(hl)
000ABA AF                  A   132    kb_ok			xor a
000ABB 32 73 6B 00         A   133    				ld (first_run),a
000ABF                     A   134    dont_resetkb
                           A   135    				
000ABF 21 A6 6D 00         A   136    				ld hl,packed_font_start
000AC3 11000080            A   137    				ld de,vram_a_addr
000AC7 01 E2 02 00         A   138    				ld bc,packed_font_end-packed_fo
000ACB CD C7 16 00         A   139    				call unpack_rle
000ACF CD 10 36 00         A   140    				call convert_font
                           A   141    
000AD3 CD B9 3A 00         A   142    				call test_amoeba_vers
                           A   143    				
000AD7 21 B5 6B 00         A   144    				ld hl,os_variables				000ADB 01 CF 01 00         A   145    				ld bc,last_os_var-os_variables
000ADF AF                  A   146    				xor a
000AE0 CD 7C 16 00         A   147    				call os_bchl_memfill
                           A   148    				
000AE4 21000200            A   149    				ld hl,envar_list				000AE8 01000200            A   150    				ld bc,envar_buffer_size
000AEC AF                  A   151    				xor a
000AED CD 7C 16 00         A   152    				call os_bchl_memfill
000AF1 21 85 6D 00         A   153    				ld hl,default_envars
000AF5 11000200            A   154    				ld de,envar_list
000AF9 01 1E 00 00         A   155    				ld bc,envar_top_loc-default_env
000AFD EDB0                A   156    				ldir
000AFF 1B                  A   157    				dec de
000B00 ED53 A3 6D 00       A   158    				ld (envar_top_loc),de			                           A   159    	
000B05 CD F2 48 00         A   160    				call hwsc_default_hw_settings
000B09 CD 24 4D 00         A   161    				call hwsc_disable_audio
                           A   162    				
000B0D 3A AF 69 00         A   163    				ld a,(video_mode)
000B11 CD 55 16 00         A   164    				call os_set_vmode				                           A   165    				
000B15 21 32 60 00         A   166    				ld hl,welcome_message			000B19 CD 69 10 00         A   167    				call os_print_string
                           A   168    				
000B1D CD 2B 35 00         A   169    				call os_cmd_vers				                           A   170    				
000B21 AF                  A   171    				xor a
000B22 32 38 6A 00         A   172    				ld (current_volume),a
000B26 CD 1F 35 00         A   173    				call os_cmd_remount				                           A   174    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:   7


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000B2A CD 0F 15 00         A   175    				call os_new_line				                           A   176    
000B2E CD 0D 4B 00         A   177    				call purge_keyboard
                           A   178    				
000B32 CD 71 43 00         A   179    				call set_irq_vectors
000B36 CD C9 43 00         A   180    				call enable_os_irqs
000B3A FB                  A   181    				ei
                           A   182    				
000B3B 21 74 6B 00         A   183    				ld hl,devices_connected			000B3F CB46                A   184    				bit 0,(hl)
000B41 20 08               A   185    				jr nz,kb_present
000B43 21 23 66 00         A   186    				ld hl,no_keyboard_msg
000B47 CD 46 15 00         A   187    				call os_show_packed_text
000B4B                     A   188    kb_present				
                           A   189    
000B4B 21 61 60 00         A   190    				ld hl,startup_script_fn
000B4F CD 51 10 00         A   191    				call set_script_fn
000B53 22 E1 6C 00         A   192    				ld (os_args_loc),hl
000B57 CD 38 3D 00         A   193    				call os_do_script				                           A   194    									
000B5B 3A 72 6B 00         A   195    				ld a,(frozen)					000B5F B7                  A   196    				or a
000B60 28 11               A   197    				jr z,os_main_loop
000B62 AF                  A   198    				xor a
000B63 32 72 6B 00         A   199    				ld (frozen),a
000B67 21 B8 60 00         A   200    				ld hl,nmi_freeze_txt
000B6B CD 69 10 00         A   201    				call os_print_string
000B6F CD 8B 2F 00         A   202    				call os_cmd_r
                           A   203    				
                           A   204    
                           A   205    ;==============================================
                           A   206    
000B73 CD E2 48 00         A   207    os_main_loop	call hwsc_wait_vrt				                           A   208    
000B77 CD BA 10 00         A   209    				call os_cursor_flash
                           A   210    
000B7B CD B3 4D 00         A   211    				call os_get_key_press
000B7F 20 F2               A   212    				jr nz,os_main_loop
                           A   213    	
000B81 32 5E 6D 00         A   214    				ld (current_scancode),a
000B85 78                  A   215    				ld a,b
000B86 32 5F 6D 00         A   216    				ld (current_asciicode),a		                           A   217    	
000B8A CD C1 47 00         A   218    				call hwsc_remove_cursor
000B8E 3E18                A   219    				ld a,24							000B90 32 22 6C 00         A   220    				ld (cursorflashtimer),a			000B94 AF                  A   221    				xor a
000B95 32 23 6C 00         A   222    				ld (cursor_status),a
                           A   223    				
000B99 3A 5E 6D 00         A   224    				ld a,(current_scancode)			000B9D FE70                A   225    				cp 70h
000B9F 20 0C               A   226    				jr nz,os_notins
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:   8


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000BA1 3A D7 69 00         A   227     				ld a,(overwrite_mode)
000BA5 EE01                A   228    				xor 1
000BA7 32 D7 69 00         A   229    				ld (overwrite_mode),a
000BAB 18 C6               A   230    				jr os_main_loop
                           A   231    
000BAD FE6C                A   232    os_notins		cp 6ch
000BAF 20 07               A   233    				jr nz,not_homekey
000BB1 AF                  A   234    				xor a
000BB2 32 20 6C 00         A   235    				ld (cursor_x),a
000BB6 18 BB               A   236    				jr os_main_loop
                           A   237    								
000BB8 FE69                A   238    not_homekey		cp 69h
000BBA 20 24               A   239    				jr nz,not_endkey
000BBC 3A 1F 6C 00         A   240    				ld a,(cursor_y)					000BC0 4F                  A   241    				ld c,a
000BC1 3A DD 69 00         A   242    				ld a,(charmap_columns)
000BC5 47                  A   243    				ld b,a
000BC6 05                  A   244    fendloop		dec b
000BC7 CD 2F 48 00         A   245    				call hwsc_get_charmap_addr_xy
000BCB 7E                  A   246    				ld a,(hl)
000BCC FE20                A   247    				cp 20h
000BCE 28 F6               A   248    				jr z,fendloop
000BD0 04                  A   249    				inc b
000BD1 3A DD 69 00         A   250    				ld a,(charmap_columns)
000BD5 B8                  A   251    				cp b
000BD6 20 01               A   252    				jr nz,endxposok
000BD8 05                  A   253    				dec b
000BD9 78                  A   254    endxposok		ld a,b
000BDA 32 20 6C 00         A   255    				ld (cursor_x),a
000BDE 18 93               A   256    				jr os_main_loop
                           A   257    
000BE0 21 20 6C 00         A   258    not_endkey		ld hl,cursor_x					000BE4 FE6B                A   259    				cp 06bh			
000BE6 20 10               A   260    				jr nz,os_ntlft
000BE8 35                  A   261    				dec (hl)
000BE9 7E                  A   262    				ld a,(hl)
000BEA FEFF                A   263    				cp 0ffh	
000BEC 20 85               A   264    				jr nz,os_main_loop
000BEE 3A DD 69 00         A   265    				ld a,(charmap_columns)
000BF2 3D                  A   266    				dec a
000BF3 77                  A   267    				ld (hl),a						000BF4 C3 73 0B 00         A   268    				jr os_main_loop
                           A   269    
000BF8 FE74                A   270    os_ntlft		cp 074h							000BFA 20 10               A   271    				jr nz,os_ntrig
000BFC 34                  A   272    				inc (hl)
000BFD 3A DD 69 00         A   273    				ld a,(charmap_columns)
000C01 BE                  A   274    				cp (hl)
000C02 C2 73 0B 00         A   275    				jr nz,os_main_loop
000C06 3600                A   276    				ld (hl),0						000C08 C3 73 0B 00         A   277    				jr os_main_loop
                           A   278    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:   9


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000C0C 21 1F 6C 00         A   279    os_ntrig		ld hl,cursor_y
000C10 FE75                A   280    				cp 075h							000C12 20 0D               A   281    				jr nz,os_ntup
000C14 35                  A   282    				dec (hl)
000C15 CB7E                A   283    				bit 7,(hl)
000C17 CA 73 0B 00         A   284    				jr z,os_main_loop
000C1B 3600                A   285    				ld (hl),0						000C1D C3 73 0B 00         A   286    				jr os_main_loop
                           A   287    
000C21 FE72                A   288    os_ntup			cp 072h
000C23 20 14               A   289    				jr nz,os_ntdwn					000C25 34                  A   290    				inc (hl)
000C26 3A DA 69 00         A   291    				ld a,(charmap_rows)
000C2A BE                  A   292    				cp (hl)
000C2B C2 73 0B 00         A   293    				jr nz,os_main_loop
000C2F 3D                  A   294    				dec a
000C30 77                  A   295    				ld (hl),a						000C31 CD 4D 47 00         A   296    				call hwsc_scroll_up
000C35 C3 73 0B 00         A   297    				jr os_main_loop
                           A   298    
000C39 FE71                A   299    os_ntdwn		cp 071h							000C3B 20 08               A   300    				jr nz,os_nodel		
000C3D 3A 20 6C 00         A   301    				ld a,(cursor_x)					000C41 47                  A   302    				ld b,a
000C42 04                  A   303    				inc b
000C43 18 13               A   304    				jr os_chrbk
                           A   305    
000C45 FE66                A   306    os_nodel		cp 066h							000C47 20 17               A   307    				jr nz,os_nbksp
000C49 3A 20 6C 00         A   308    				ld a,(cursor_x)					000C4D B7                  A   309    				or a							000C4E CA 73 0B 00         A   310    				jp z,os_main_loop
000C52 47                  A   311    				ld b,a
000C53 3D                  A   312    				dec a
000C54 32 20 6C 00         A   313    				ld (cursor_x),a					000C58 CD 47 48 00         A   314    os_chrbk		call hwsc_chars_left			000C5C C3 73 0B 00         A   315    				jp os_main_loop
                           A   316    
000C60 FE5A                A   317    os_nbksp		cp 05ah							000C62 CA AA 0C 00         A   318    				jp z,os_enter_pressed
                           A   319    	
000C66 3A 5F 6D 00         A   320    				ld a,(current_asciicode)		000C6A FE20                A   321    				cp 32							000C6C 38 38               A   322    				jr c,os_nvdun					                           A   323    
000C6E FE7B                A   324    				cp 07bh							000C70 30 12               A   325    				jr nc,os_gtcha					000C72 FE61                A   326    				cp 061h
000C74 38 04               A   327    				jr c,os_ntupc
000C76 D620                A   328    				sub 020h
000C78 18 0A               A   329    				jr os_gtcha
000C7A FE5B                A   330    os_ntupc		cp 05bh
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  10


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000C7C 30 06               A   331    				jr nc,os_gtcha
000C7E FE41                A   332    				cp 041h
000C80 38 02               A   333    				jr c,os_gtcha
000C82 C620                A   334    				add a,020h
000C84 57                  A   335    os_gtcha		ld d,a							000C85 3A D7 69 00         A   336    				ld a,(overwrite_mode)			000C89 B7                  A   337    				or a
000C8A CC 80 48 00         A   338    				call z,hwsc_chars_right
                           A   339    				
000C8E ED4B 1F 6C 00       A   340    os_schi			ld bc,(cursor_pos)				000C93 7A                  A   341    				ld a,d							000C94 CD 88 47 00         A   342    				call hwsc_plot_char		
000C98 21 20 6C 00         A   343    				ld hl,cursor_x					000C9C 34                  A   344    				inc (hl)
000C9D 3A DD 69 00         A   345    				ld a,(charmap_columns)
000CA1 BE                  A   346    				cp (hl)							000CA2 20 02               A   347    				jr nz,os_nvdun
000CA4 3600                A   348    				ld (hl),0
                           A   349    
000CA6 C3 73 0B 00         A   350    os_nvdun		jp os_main_loop
                           A   351    	
                           A   352    
                           A   353    ;----------------------------------------------
                           A   354    
000CAA                     A   355    os_enter_pressed
                           A   356    	
000CAA CD C3 48 00         A   357    				call hwsc_charline_to_command_s
                           A   358    
000CAE AF                  A   359    				xor a
000CAF 32 20 6C 00         A   360    				ld (cursor_x),a					000CB3 21 1F 6C 00         A   361    				ld hl,cursor_y					000CB7 34                  A   362    				inc (hl)
000CB8 3A DA 69 00         A   363    				ld a,(charmap_rows)
000CBC BE                  A   364    				cp (hl)
000CBD 20 06               A   365    				jr nz,os_esdok
000CBF 3D                  A   366    				dec a
000CC0 77                  A   367    				ld (hl),a
000CC1 CD 4D 47 00         A   368    				call hwsc_scroll_up
                           A   369    
000CC5 CD CD 0C 00         A   370    os_esdok		call os_parse_cmd_chk_ps		                           A   371    
000CC9 C3 73 0B 00         A   372    post_csb		jp os_main_loop
                           A   373    
                           A   374    	
                           A   375    ;----------------------------------------------
                           A   376    
                           A   377    
000CCD                     A   378    os_parse_cmd_chk_ps
                           A   379    
000CCD CD E0 0C 00         A   380    				call os_parse_command_line
000CD1 FEFE                A   381    				cp 0feh							000CD3 C0                  A   382    				ret nz
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  11


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000CD4 01500000            A   383    				ld bc,max_buffer_chars			000CD8 11 3D 6C 00         A   384    				ld de,commandstring				000CDC EDB0                A   385    				ldir
000CDE 18 ED               A   386    				jr os_parse_cmd_chk_ps
                           A   387    
                           A   388    	
                           A   389    ;----------------------------------------------
                           A   390    	
000CE0                     A   391    os_parse_command_line
                           A   392    
000CE0 3E01                A   393    				ld a,1
000CE2 32 B8 6B 00         A   394    				ld (store_registers),a			                           A   395    
000CE6 21 3D 6C 00         A   396    				ld hl,commandstring				000CEA 0650                A   397    				ld b,max_buffer_chars			000CEC CD 07 11 00         A   398    				call os_scan_for_non_space		000CF0 B7                  A   399    				or a							000CF1 C8                  A   400    				ret z
000CF2 11 3D 61 00         A   401    				ld de,dictionary-1				000CF6 D5                  A   402    				push de
000CF7 D1                  A   403    compcstr		pop de
000CF8 E5                  A   404    				push hl
000CF9 FDE1                A   405    				pop iy
000CFB 13                  A   406    notacmd			inc de
000CFC 1A                  A   407    				ld a,(de)
000CFD FE01                A   408    				cp 1							000CFF CA A7 0D 00         A   409    				jp z,os_no_kernal_command_found
000D03 CB7F                A   410    				bit 7,a
000D05 28 F4               A   411    				jr z,notacmd					000D07 E67F                A   412    				and 07fh
000D09 4F                  A   413    				ld c,a							000D0A D5                  A   414    				push de
000D0B 13                  A   415    cmdnscan		inc de
000D0C FD7E00              A   416    				ld a,(iy)						000D0F CD 70 13 00         A   417    				call os_uppercasify
000D13 47                  A   418    				ld b,a
000D14 1A                  A   419    				ld a,(de)						000D15 B8                  A   420    				cp b
000D16 FD23                A   421    				inc iy
000D18 28 F1               A   422    				jr z,cmdnscan					000D1A 1A                  A   423    nomatch			ld a,(de)						000D1B B7                  A   424    				or a
000D1C 28 04               A   425    				jr z,posmatch					000D1E CB7F                A   426    				bit 7,a			
000D20 28 D5               A   427    				jr z,compcstr					000D22 FD7EFF              A   428    posmatch		ld a,(iy-1)						000D25 FE20                A   429    				cp 32
000D27 20 CE               A   430    				jr nz,compcstr					                           A   431    	
000D29 D1                  A   432    				pop de				
000D2A FDE5                A   433    				push iy							000D2C E1                  A   434    				pop hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  12


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000D2D CD 07 11 00         A   435    				call os_scan_for_non_space
000D31 22 E1 6C 00         A   436    				ld (os_args_loc),hl				                           A   437    	
000D35 21 26 67 00         A   438    				ld hl,os_cmd_locs
000D39 11030000            A   439    				ld de,3
000D3D 51                  A   440    				ld d,c
000D3E ED5C                A   441    				mlt de							000D40 19                  A   442    				add hl,de
000D41 ED37                A   443    				ld ix,(hl)						                           A   444    
000D43 2A E1 6C 00         A   445    				ld hl,(os_args_loc)				000D47 CD 83 0F 00         A   446    go_int_cmd		call os_run_command				                           A   447    
000D4B CD C1 0F 00         A   448    				call error_to_envar
000D4F B7                  A   449    				or a
000D50 C8                  A   450    				ret z							000D51 FE01                A   451    				cp 1
000D53 20 17               A   452    				jr nz,show_erm
000D55 78                  A   453    os_hwe1			ld a,b							000D56 21 42 64 00         A   454    os_hwerr		ld hl,hex_byte_txt		
000D5A CD B2 11 00         A   455    				call hexbyte_to_ascii	
000D5E CD 0F 15 00         A   456    				call os_new_line
000D62 21 16 66 00         A   457    				ld hl,hw_err_msg
000D66 CD 46 15 00         A   458    				call os_show_packed_text
000D6A AF                  A   459    				xor a
000D6B C9                  A   460    				ret
                           A   461    
000D6C 01000000            A   462    show_erm		ld bc,0							000D70 4F                  A   463    				ld c,a
000D71 D680                A   464    				sub 080h						000D73 38 11               A   465    				jr c,no_trans					000D75 21 5D 68 00         A   466    				ld hl,kernal_error_code_transla
000D79 CB77                A   467    				bit 6,a							000D7B 28 06               A   468    				jr z,not_fs_err					000D7D 21 6C 68 00         A   469    				ld hl,fs_error_code_translation
000D81 D640                A   470    				sub 040h
000D83 4F                  A   471    not_fs_err		ld c,a
000D84 09                  A   472    				add hl,bc
000D85 4E                  A   473    				ld c,(hl)
000D86 0600                A   474    no_trans		ld b,0
000D88 21 92 67 00         A   475    				ld hl,packed_msg_list
000D8C 7E                  A   476    findmsg			ld a,(hl)
000D8D FEFF                A   477    				cp 0ffh
000D8F C8                  A   478    				ret z							000D90 23                  A   479    				inc hl
000D91 B7                  A   480    				or a
000D92 20 F8               A   481    				jr nz,findmsg					000D94 04                  A   482    				inc b
000D95 79                  A   483    				ld a,c							000D96 B8                  A   484    				cp b
000D97 20 F3               A   485    				jr nz,findmsg
000D99 CD 0F 15 00         A   486    				call os_new_line
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  13


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000D9D CD 46 15 00         A   487    				call os_show_packed_text
000DA1 CD 0F 15 00         A   488    				call os_new_line
000DA5 AF                  A   489    				xor a
000DA6 C9                  A   490    				ret
                           A   491    	
                           A   492    
000DA7                     A   493    os_no_kernal_command_found
                           A   494    
000DA7 CD 8D 0F 00         A   495    				call test_volx					000DAB 20 0A               A   496    				jr nz,novolcmd					000DAD D630                A   497    gotvolcmd		sub 030h
000DAF CD B2 1B 00         A   498    				call os_change_volume
000DB3 C3 6E 0F 00         A   499    				jp extcmderf					                           A   500    		
000DB7 7E                  A   501    novolcmd		ld a,(hl)						000DB8 FE47                A   502    				cp 'G'							000DBA 20 3A               A   503    				jr nz,not_g_cmd					000DBC 23                  A   504    				inc hl
000DBD 7E                  A   505    				ld a,(hl)
000DBE 2B                  A   506    				dec hl
000DBF FE20                A   507    				cp ' '
000DC1 20 33               A   508    				jr nz,not_g_cmd
000DC3 23                  A   509    				inc hl
000DC4 CD 07 11 00         A   510    				call os_scan_for_non_space
000DC8 22 E1 6C 00         A   511    				ld (os_args_loc),hl				000DCC B7                  A   512    				or a
000DCD 20 04               A   513    				jr nz,gotgargs
000DCF 3E1F                A   514    				ld a,01fh						000DD1 18 99               A   515    				jr show_erm
000DD3 CD F1 11 00         A   516    gotgargs		call ascii_to_hex_no_scan		000DD7 B7                  A   517    				or a
000DD8 20 92               A   518    				jr nz,show_erm
000DDA CD FA 45 00         A   519    				call enable_button_nmi			000DDE CD 17 1D 00         A   520    				call test_de
000DE2 20 03               A   521    				jr nz,not_reset
000DE4 AF                  A   522    				xor a
000DE5 D304                A   523    				out (port_memory_paging),a		000DE7 D5                  A   524    not_reset		push de
000DE8 2A E1 6C 00         A   525    				ld hl,(os_args_loc)
000DEC CD F2 10 00         A   526    				call os_next_arg				000DF0 DDE1                A   527    				pop ix			
000DF2 C3 83 0F 00         A   528    				jp os_run_command				                           A   529    				
                           A   530    				
                           A   531    
                           A   532    
000DF6 22 E1 6C 00         A   533    not_g_cmd		ld (os_args_loc),hl				000DFA 22 E4 6C 00         A   534    				ld (os_args_pos_cache),hl
                           A   535    
000DFE CD 29 52 00         A   536    				call fs_check_disk_format		000E02 38 2A               A   537    				jr c,os_noextcmd				000E04 20 28               A   538    				jr nz,os_noextcmd
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  14


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A   539    	
000E06 CD A9 0F 00         A   540    				call cache_dir_block			                           A   541    
000E0A 01 A3 60 00         A   542    				ld bc,ezp_txt					000E0E CD E2 0F 00         A   543    				call scan_current_and_path_dirs
000E12 DA 56 0D 00         A   544    				jp c,os_hwerr	
000E16 28 4C               A   545    				jr z,os_got_extcmd
                           A   546    				
000E18 CD B5 0F 00         A   547    				call restore_dir_block
                           A   548    				
000E1C 01 A9 60 00         A   549    				ld bc,pbf_txt					000E20 CD E2 0F 00         A   550    				call scan_current_and_path_dirs
000E24 DA 56 0D 00         A   551    				jp c,os_hwerr	
000E28 28 0A               A   552    				jr z,os_got_script
                           A   553    				
000E2A CD B5 0F 00         A   554    				call restore_dir_block			000E2E 3E0B                A   555    os_noextcmd		ld a,0bh						000E30 C3 6C 0D 00         A   556    				jp show_erm
                           A   557    
                           A   558    				
000E34 21 F9 6C 00         A   559    os_got_script	ld hl,script_flags				000E38 CB46                A   560    				bit scr_in_script,(hl)
000E3A C2 EA 3E 00         A   561    				jp nz,script_error
000E3E 21 BC 6B 00         A   562    				ld hl,temp_string				000E42 CD 51 10 00         A   563    				call set_script_fn
000E46 CD 56 1B 00         A   564    				call fs_get_dir_cluster			000E4A ED53 F0 6C 00       A   565    				ld (script_dir),de
000E4F CD B5 0F 00         A   566    				call restore_dir_block			000E53 2A E1 6C 00         A   567    				ld hl,(os_args_loc)		
000E57 CD 07 11 00         A   568    				call os_scan_for_non_space
000E5B DD21 38 3D 00       A   569    				ld ix,os_do_script				000E60 C3 47 0D 00         A   570    				jp go_int_cmd
                           A   571    				
                           A   572    
                           A   573    
                           A   574    
                           A   575    
000E64 2A E1 6C 00         A   576    os_got_extcmd	ld hl,(os_args_loc)				000E68 CD 07 11 00         A   577    				call os_scan_for_non_space		000E6C 22 E1 6C 00         A   578    				ld (os_args_loc),hl
                           A   579    
000E70 11100000            A   580    				ld de,16
000E74 CD 2A 17 00         A   581    				call os_set_load_length			000E78 21000100            A   582    				ld hl,scratch_pad
000E7C 22 FC 5E 00         A   583    				ld (fs_ez80_address),hl
000E80 CD 26 54 00         A   584    				call fs_read_data_command
000E84 DA 56 0D 00         A   585    				jp c,os_hwerr					000E88 C2 6C 0D 00         A   586    				jp nz,show_erm					000E8C 2A020100            A   587    				ld hl,(scratch_pad+2)
000E90 1150524F            A   588    				ld de,04f5250h					000E94 AF                  A   589    				xor a	
000E95 ED52                A   590    				sbc hl,de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  15


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000E97 28 0A               A   591    				jr z,loc_header
000E99 CD B5 0F 00         A   592    				call restore_dir_block			000E9D 3E1A                A   593    				ld a,01ah						000E9F C3 6C 0D 00         A   594    				jp show_erm						                           A   595    				
000EA3 3A0F0100            A   596    loc_header		ld a,(scratch_pad+15)			000EA7 32 B4 6B 00         A   597    				ld (store_adl),a			
000EAB CD D3 53 00         A   598    				call fs_open_file_command		000EAF DA 56 0D 00         A   599    				jp c,os_hwerr
000EB3 C2 2E 0E 00         A   600    				jr nz,os_noextcmd
000EB7 2A050100            A   601    				ld hl,(scratch_pad+5)			000EBB 22 FC 5E 00         A   602    				ld (fs_ez80_address),hl
                           A   603    				
000EBF ED5B0B01 00         A   604    				ld de,(scratch_pad+11)			000EC4 7B                  A   605    				ld a,e
000EC5 B2                  A   606    				or d
000EC6 28 14               A   607    				jr z,noprov_spec				000EC8 213E0000            A   608    				ld hl,prose_version
000ECC AF                  A   609    				xor a
000ECD 40ED52              A   610    				sbc.sis hl,de					000ED0 30 0A               A   611    				jr nc,noprov_spec
000ED2 CD B5 0F 00         A   612    				call restore_dir_block
000ED6 3E1B                A   613    				ld a,01bh						000ED8 C3 6C 0D 00         A   614    				jp show_erm
                           A   615    				
000EDC CD 8F 49 00         A   616    noprov_spec		call hwsc_get_version			000EE0 2A0D0100            A   617    				ld hl,(scratch_pad+13)			000EE4 EB                  A   618    				ex de,hl						000EE5 7B                  A   619    				ld a,e
000EE6 B2                  A   620    				or d
000EE7 28 10               A   621    				jr z,nohwv_spec					000EE9 AF                  A   622    				xor a
000EEA 40ED52              A   623    				sbc.sis hl,de					000EED 30 0A               A   624    				jr nc,nohwv_spec
000EEF CD B5 0F 00         A   625    				call restore_dir_block
000EF3 3E2B                A   626    				ld a,02bh						000EF5 C3 6C 0D 00         A   627    				jp show_erm
                           A   628    
000EF9 ED5B0801 00         A   629    nohwv_spec		ld de,(scratch_pad+8)			000EFE 3A0A0100            A   630    				ld a,(scratch_pad+10)			000F02 B2                  A   631    				or d
000F03 B3                  A   632    				or e
000F04 28 04               A   633    				jr z,readcode					000F06 CD 2A 17 00         A   634    				call os_set_load_length			                           A   635    		
000F0A ED4B FC 5E 00       A   636    readcode		ld bc,(fs_ez80_address)			000F0F C5                  A   637    				push bc
000F10 E1                  A   638    				pop hl
000F11 ED5B F3 5E 00       A   639    				ld de,(fs_file_transfer_length)
000F16 19                  A   640    				add hl,de
000F17 EB                  A   641    				ex de,hl
000F18 CD DF 3B 00         A   642    				call os_protected_ram_test
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  16


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000F1C C4 31 3C 00         A   643    				call nz,os_protected_ram_query
000F20 28 0A               A   644    				jr z,ezp_loadpm_ok
000F22 F5                  A   645    				push af
000F23 CD B5 0F 00         A   646    				call restore_dir_block
000F27 F1                  A   647    				pop af
000F28 C3 6C 0D 00         A   648    				jp show_erm
                           A   649    
000F2C 2A050100            A   650    ezp_loadpm_ok	ld hl,(scratch_pad+5)
000F30 22 EA 6C 00         A   651    				ld (os_extcmd_jmp_addr),hl		000F34 CD 26 54 00         A   652    				call fs_read_data_command
000F38 F5                  A   653    				push af
000F39 CD B5 0F 00         A   654    				call restore_dir_block			000F3D F1                  A   655    				pop af
000F3E DA 56 0D 00         A   656    				jp c,os_hwerr					000F42 C2 6C 0D 00         A   657    				jp nz,show_erm					                           A   658    	
000F46 CD FA 45 00         A   659    				call enable_button_nmi			000F4A DD2A EA 6C 00       A   660    				ld ix,(os_extcmd_jmp_addr)		000F4F 2A E1 6C 00         A   661    				ld hl,(os_args_loc)				000F53 C3 83 0F 00         A   662    				jp os_run_command				                           A   663    
000F57 F5                  A   664    extcmd_return	push af							000F58 CD F2 48 00         A   665    				call hwsc_default_hw_settings	000F5C 3A B8 6B 00         A   666    				ld a,(store_registers)
000F60 B7                  A   667    				or a
000F61 28 06               A   668    				jr z,skp_strg
000F63 F1                  A   669    				pop af
000F64 CD 88 14 00         A   670    				call os_store_CPU_regs			000F68 F5                  A   671    				push af
000F69 F1                  A   672    skp_strg		pop af
                           A   673    
000F6A CD C1 0F 00         A   674    				call error_to_envar
000F6E B7                  A   675    extcmderf		or a							000F6F C8                  A   676    				ret z	
000F70 FE01                A   677    				cp 1							000F72 CA 55 0D 00         A   678    				jp z,os_hwe1					000F76 FEFF                A   679    				cp 0ffh							000F78 CA 56 0A 00         A   680    				jp z,os_cold_start
000F7C FEFE                A   681    				cp 0feh							000F7E C8                  A   682    				ret z
000F7F C3 6C 0D 00         A   683    				jp show_erm						                           A   684    				
                           A   685    ;----------------------------------------------
                           A   686    
000F83                     A   687    os_run_command									000F83 ED3906              A   688    				out0 (port_nmi_ack),a			000F86 DD22 B9 6B 00       A   689    				ld (com_start_addr),ix			000F8B DDE9                A   690    				jp (ix)							                           A   691    
                           A   692    ;----------------------------------------------
                           A   693    
                           A   694    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  17


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000F8D 3E30                A   695    test_volx		ld a,030h						000F8F 32 3A 61 00         A   696    fvolcmd			ld (chvol_txt+3),a				000F93 11 37 61 00         A   697    				ld de,chvol_txt		
000F97 0606                A   698    				ld b,6
000F99 CD 36 13 00         A   699    				call os_compare_strings	
000F9D 3A 3A 61 00         A   700    				ld a,(chvol_txt+3)
000FA1 C8                  A   701    				ret z	
000FA2 3C                  A   702    				inc a			
000FA3 FE38                A   703    				cp 030h+max_volumes		
000FA5 20 E8               A   704    				jr nz,fvolcmd
000FA7 B7                  A   705    				or a
000FA8 C9                  A   706    				ret
                           A   707    				
                           A   708    ;----------------------------------------------
                           A   709    				
                           A   710    				
                           A   711    				
000FA9                     A   712    cache_dir_block
                           A   713    
                           A   714    	
000FA9 D5                  A   715    				push de
000FAA CD 56 1B 00         A   716    				call fs_get_dir_cluster	
000FAE ED53 E7 6C 00       A   717    				ld (os_dir_block_cache),de
000FB3 D1                  A   718    				pop de	
000FB4 C9                  A   719    				ret
                           A   720    		
                           A   721    
000FB5                     A   722    restore_dir_block
                           A   723    
000FB5 D5                  A   724    				push de
000FB6 ED5B E7 6C 00       A   725    				ld de,(os_dir_block_cache)
000FBB CD 62 1B 00         A   726    				call fs_update_dir_cluster
000FBF D1                  A   727    				pop de
000FC0 C9                  A   728    				ret
                           A   729    
                           A   730    ;----------------------------------------------
                           A   731    
000FC1                     A   732    error_to_envar
                           A   733    
000FC1 F5                  A   734    				push af							000FC2 C5                  A   735    				push bc							000FC3 E5                  A   736    				push hl							000FC4 21000100            A   737    				ld hl,scratch_pad				000FC8 CD B2 11 00         A   738    				call hexbyte_to_ascii
000FCC 3600                A   739    				ld (hl),0
000FCE 11000100            A   740    				ld de,scratch_pad
000FD2 21 D0 60 00         A   741    				ld hl,error_txt
000FD6 CD 65 1C 00         A   742    				call os_set_envar
000FDA CD 05 46 00         A   743    				call disable_button_nmi			000FDE E1                  A   744    				pop hl
000FDF C1                  A   745    				pop bc
000FE0 F1                  A   746    				pop af
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  18


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000FE1 C9                  A   747    				ret
                           A   748    
                           A   749    ;----------------------------------------------
                           A   750    
000FE2                     A   751    scan_current_and_path_dirs
                           A   752    
000FE2 ED430001 00         A   753    				ld (scratch_pad),bc				000FE7 2A E4 6C 00         A   754    				ld hl,(os_args_pos_cache)		000FEB 22 E1 6C 00         A   755    				ld (os_args_loc),hl
                           A   756    				
000FEF AF                  A   757    				xor a							000FF0 CD 9F 3C 00         A   758    				call os_parse_path_string		000FF4 20 13               A   759    				jr nz,no_ecmd_here
                           A   760    				
000FF6 22 E1 6C 00         A   761    				ld (os_args_loc),hl				                           A   762    
000FFA ED4B0001 00         A   763    				ld bc,(scratch_pad)				000FFF CD 3B 11 00         A   764    				call os_args_to_fn_append_extn	001003 CD D3 53 00         A   765    				call fs_open_file_command		001007 D8                  A   766    				ret c					 		001008 C8                  A   767    				ret z							                           A   768    
001009 21 32 61 00         A   769    no_ecmd_here	ld hl,path_txt					00100D CD 25 1C 00         A   770    				call os_get_envar
001011 ED53 FA 6C 00       A   771    				ld (path_parse_loc),de
                           A   772    
001016 CD A3 53 00         A   773    path_loop		call fs_goto_root_dir_command	00101A 2A FA 6C 00         A   774    				ld hl,(path_parse_loc)			00101E CD 6E 5C 00         A   775    				call fs_hl_to_filename			001022 CD 7C 53 00         A   776    				call fs_change_dir_command		001026 D8                  A   777    				ret c
001027 20 17               A   778    				jr nz,next_dir_in_path			                           A   779    	
001029 2A E4 6C 00         A   780    				ld hl,(os_args_pos_cache)		00102D 22 E1 6C 00         A   781    				ld (os_args_loc),hl
001031 ED4B0001 00         A   782    				ld bc,(scratch_pad)				001036 CD 3B 11 00         A   783    				call os_args_to_fn_append_extn	                           A   784    				
00103A CD D3 53 00         A   785    				call fs_open_file_command		00103E D8                  A   786    				ret c
00103F C8                  A   787    				ret z							                           A   788    				
001040                     A   789    next_dir_in_path
                           A   790    				
001040 2A FA 6C 00         A   791    				ld hl,(path_parse_loc)			001044 CD F2 10 00         A   792    				call os_next_arg
001048 22 FA 6C 00         A   793    				ld (path_parse_loc),hl
00104C 20 C8               A   794    				jr nz,path_loop					00104E AF                  A   795    				xor a
00104F 3C                  A   796    				inc a
001050 C9                  A   797    				ret								                           A   798    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  19


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A   799    ;----------------------------------------------
                           A   800    				
001051 11 0E 6C 00         A   801    set_script_fn	ld de,script_fn
001055 060D                A   802    				ld b,13
001057 CD 55 13 00         A   803    				call os_copy_ascii_run
00105B AF                  A   804    				xor a
00105C 12                  A   805    				ld (de),a
00105D C9                  A   806    				ret
                           A   807    
                           A   808    ;==============================================
                           A   809    ; Routines called by command line
                           A   810    ;==============================================
                           A   811    
                           A   812    ; Set:-
                           A   813    ; HL to address of string
                           A   814    ; c = y
                           A   815    ; b = x
                           A   816    
00105E                     A   817    ext_print_string
                           A   818    
00105E CC A3 16 00         A   819    				call z,mbase_hl
001062 18 05               A   820    				jr os_print_string
                           A   821    
001064                     A   822    os_print_string_cond
                           A   823    
001064 CD 09 1B 00         A   824    				call test_quiet_mode
001068 C0                  A   825    				ret nz
                           A   826    
001069                     A   827    os_print_string
                           A   828    
001069 D5                  A   829    				push de
00106A C5                  A   830    				push bc
00106B ED4B 1F 6C 00       A   831    				ld bc,(cursor_pos)				001070 7E                  A   832    prstr_lp		ld a,(hl)
001071 23                  A   833    				inc hl
001072 B7                  A   834    				or a
001073 20 09               A   835    				jr nz,prstr_ne
001075 ED43 1F 6C 00       A   836    				ld (cursor_pos),bc
00107A C1                  A   837    				pop bc
00107B D1                  A   838    				pop de
00107C AF                  A   839    				xor a							00107D C9                  A   840    				ret
                           A   841    
00107E FE0D                A   842    prstr_ne		cp 13
001080 20 04               A   843    				jr nz,not_cr
001082 0600                A   844    				ld b,0
001084 18 EA               A   845    				jr prstr_lp
001086 FE0A                A   846    not_cr			cp 10
001088 28 12               A   847    				jr z,line_feed				
00108A FE0B                A   848    				cp 11
00108C 28 0C               A   849    				jr z,next_line
00108E CD 88 47 00         A   850    				call hwsc_plot_char
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  20


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001092 04                  A   851    				inc b
001093 3A DD 69 00         A   852    				ld a,(charmap_columns)
001097 B8                  A   853    				cp b
001098 20 D6               A   854    				jr nz,prstr_lp
00109A 0600                A   855    next_line		ld b,0
00109C 0C                  A   856    line_feed		inc c
00109D 3A DA 69 00         A   857    				ld a,(charmap_rows)
0010A1 B9                  A   858    				cp c
0010A2 20 CC               A   859    				jr nz,prstr_lp
0010A4 0D                  A   860    				dec c
0010A5 CD 4D 47 00         A   861    				call hwsc_scroll_up
0010A9 18 C5               A   862    				jr prstr_lp
                           A   863    
                           A   864    ;----------------------------------------------
                           A   865    
0010AB 21 37 6D 00         A   866    os_print_char	ld hl,char_to_print
0010AF 77                  A   867    				ld (hl),a
0010B0 18 B7               A   868    				jr os_print_string
                           A   869    
                           A   870    ;----------------------------------------------
                           A   871    
0010B2 F5                  A   872    home_cursor		push af
0010B3 AF                  A   873    				xor a
0010B4 32 20 6C 00         A   874    				ld (cursor_x),a
0010B8 F1                  A   875    				pop af
0010B9 C9                  A   876    				ret
                           A   877    				
                           A   878    ;----------------------------------------------
                           A   879    
0010BA                     A   880    os_cursor_flash
                           A   881    
0010BA 21 22 6C 00         A   882    				ld hl,cursorflashtimer
0010BE 34                  A   883    				inc (hl)
0010BF 7E                  A   884    				ld a,(hl)
0010C0 FE19                A   885    				cp 25
0010C2 C0                  A   886    				ret nz
0010C3 3600                A   887    				ld (hl),0
0010C5 3A 23 6C 00         A   888    				ld a,(cursor_status)
0010C9 EE01                A   889    				xor 1
0010CB 32 23 6C 00         A   890    				ld (cursor_status),a
0010CF 28 15               A   891    				jr z,no_cursor
0010D1 3E5F                A   892    				ld a,05fh
0010D3 21 D7 69 00         A   893    				ld hl,overwrite_mode
0010D7 CB46                A   894    				bit 0,(hl)
0010D9 28 02               A   895    				jr z,cursor_selected
0010DB 3E7F                A   896    				ld a,07fh
                           A   897    				
0010DD CD EC 10 00         A   898    cursor_selected	call os_set_cursor_image
0010E1 CD DB 47 00         A   899    				call hwsc_draw_cursor			0010E5 C9                  A   900    				ret
                           A   901    
0010E6 CD C1 47 00         A   902    no_cursor		call hwsc_remove_cursor
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  21


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0010EA C9                  A   903    				ret
                           A   904    
                           A   905    
                           A   906    ;----------------------------------------------
                           A   907    
0010EB                     A   908    ext_set_cursor_image
                           A   909    
0010EB 7B                  A   910    				ld a,e
                           A   911    				
0010EC                     A   912    os_set_cursor_image
                           A   913    			
0010EC 32 D8 69 00         A   914    				ld (cursor_image_char),a
0010F0 BF                  A   915    				cp a
0010F1 C9                  A   916    				ret
                           A   917    
                           A   918    ;----------------------------------------------
                           A   919    
0010F2                     A   920    os_next_arg
                           A   921    
0010F2 CD FE 10 00         A   922    				call os_scan_for_space
0010F6 B7                  A   923    				or a
0010F7 C8                  A   924    				ret z
0010F8 CD 07 11 00         A   925    				call os_scan_for_non_space
0010FC B7                  A   926    				or a
0010FD C9                  A   927    				ret
                           A   928    
                           A   929    
                           A   930    ;----------------------------------------------
                           A   931    	
                           A   932    
0010FE                     A   933    os_scan_for_space
                           A   934    
0010FE 7E                  A   935    os_sfspl 		ld a,(hl)						0010FF B7                  A   936    				or a							001100 C8                  A   937    				ret z
001101 FE20                A   938    				cp ' '
001103 C8                  A   939    				ret z
001104 23                  A   940    				inc hl
001105 18 F7               A   941    				jr os_sfspl
                           A   942    	
                           A   943    
                           A   944    ;----------------------------------------------
                           A   945    	
                           A   946    
001107                     A   947    os_scan_for_non_space
                           A   948    
001107 2B                  A   949    				dec hl							001108 23                  A   950    os_nsplp		inc hl			
001109 7E                  A   951    				ld a,(hl)			
00110A B7                  A   952    				or a			
00110B C8                  A   953    				ret z							00110C FE20                A   954    				cp ' '
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  22


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00110E 28 F8               A   955    				jr z,os_nsplp
001110 C9                  A   956    				ret
                           A   957    	
                           A   958    	
                           A   959    ;----------------------------------------------
                           A   960    
001111                     A   961    os_args_to_alt_filename
                           A   962    
001111 CD 69 11 00         A   963    				call os_atfn_pre				001115 C8                  A   964    				ret z
001116 CD 68 5C 00         A   965    				call fs_hl_to_alt_filename
00111A 18 09               A   966    				jr os_atfrl
                           A   967    	
                           A   968    	
                           A   969    	
                           A   970    		
00111C                     A   971    os_args_to_filename
                           A   972    
00111C CD 69 11 00         A   973    				call os_atfn_pre				001120 C8                  A   974    				ret z
001121 CD 6E 5C 00         A   975    				call fs_hl_to_filename	
                           A   976    
001125 7E                  A   977    os_atfrl		ld a,(hl)						001126 B7                  A   978    				or a							001127 28 0B               A   979    				jr z,os_cfne
001129 FE20                A   980    				cp 32
00112B 28 07               A   981    				jr z,os_cfne
00112D FE2F                A   982    				cp 02fh
00112F 28 03               A   983    				jr z,os_cfne
001131 23                  A   984    				inc hl
001132 18 F1               A   985    				jr os_atfrl	
001134 22 E1 6C 00         A   986    os_cfne			ld (os_args_loc),hl				001138 79                  A   987    				ld a,c			
001139 B7                  A   988    				or a							00113A C9                  A   989    				ret
                           A   990    
                           A   991    
                           A   992    
00113B                     A   993    os_args_to_fn_append_extn
                           A   994    
                           A   995    ; Set BC to location of extension text
                           A   996    
00113B CD 69 11 00         A   997    				call os_atfn_pre				00113F C8                  A   998    				ret z
001140 11 BC 6B 00         A   999    				ld de,temp_string
001144 7E                  A  1000    ccmdtlp			ld a,(hl)						001145 B7                  A  1001    				or a
001146 28 0D               A  1002    				jr z,goteocmd
001148 FE20                A  1003    				cp ' '
00114A 28 09               A  1004    				jr z,goteocmd
00114C FE2E                A  1005    				cp '.'
00114E 28 05               A  1006    				jr z,goteocmd
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  23


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001150 12                  A  1007    				ld (de),a
001151 13                  A  1008    				inc de
001152 23                  A  1009    				inc hl
001153 18 EF               A  1010    				jr ccmdtlp
                           A  1011    	
001155 E5                  A  1012    goteocmd		push hl
001156 C5                  A  1013    				push bc
001157 E1                  A  1014    				pop hl
001158 01060000            A  1015    				ld bc,6
00115C EDB0                A  1016    				ldir 
00115E 21 BC 6B 00         A  1017    				ld hl,temp_string
001162 CD 6E 5C 00         A  1018    				call fs_hl_to_filename
001166 E1                  A  1019    				pop hl
001167 18 BC               A  1020    				jr os_atfrl
                           A  1021    	
                           A  1022    
                           A  1023    
                           A  1024    
001169                     A  1025    os_atfn_pre
                           A  1026    
001169 2A E1 6C 00         A  1027    				ld hl,(os_args_loc)				00116D CD 07 11 00         A  1028    				call os_scan_for_non_space
001171 B7                  A  1029    				or a
001172 C8                  A  1030    				ret z
001173 7E                  A  1031    				ld a,(hl)
001174 FE2F                A  1032    				cp 02fh							001176 20 01               A  1033    				jr nz,notfsl1
001178 23                  A  1034    				inc hl
001179 AF                  A  1035    notfsl1			xor a
00117A 3C                  A  1036    				inc a
00117B C9                  A  1037    				ret
                           A  1038    
                           A  1039    
                           A  1040    ;--------- Number <-> String functions --------
                           A  1041    
                           A  1042    
00117C                     A  1043    os_clear_output_line
                           A  1044    
00117C C5                  A  1045    				push bc
00117D E5                  A  1046    				push hl			
00117E 21 8F 6C 00         A  1047    				ld hl,output_line
001182 01500000            A  1048    				ld bc,max_buffer_chars
001186 3E20                A  1049    				ld a,32
001188 CD 7C 16 00         A  1050    				call os_bchl_memfill
00118C E1                  A  1051    				pop hl
00118D C1                  A  1052    				pop bc
00118E C9                  A  1053    				ret
                           A  1054    	
                           A  1055    	
                           A  1056    	
00118F                     A  1057    os_skip_leading_ascii_zeros
                           A  1058    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  24


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00118F 7E                  A  1059    slazlp			ld a,(hl)						001190 FE30                A  1060    				cp '0'							001192 C0                  A  1061    				ret nz
001193 23                  A  1062    				inc hl
001194 10 F9               A  1063    				djnz slazlp
001196 C9                  A  1064    				ret
                           A  1065    	
                           A  1066    
                           A  1067    
001197                     A  1068    os_leading_ascii_zeros_to_spaces
                           A  1069    
001197 E5                  A  1070    				push hl
001198 7E                  A  1071    clazlp			ld a,(hl)						001199 FE30                A  1072    				cp '0'							00119B 20 05               A  1073    				jr nz,claze	
00119D 3620                A  1074    				ld (hl),' '
00119F 23                  A  1075    				inc hl
0011A0 10 F6               A  1076    				djnz clazlp
0011A2 E1                  A  1077    claze			pop hl
0011A3 C9                  A  1078    				ret
                           A  1079    	
                           A  1080    
                           A  1081    
                           A  1082    		
0011A4                     A  1083    n_hexbytes_to_ascii
                           A  1084    
0011A4 1A                  A  1085    				ld a,(de)						0011A5 CD B2 11 00         A  1086    				call hexbyte_to_ascii			0011A9 1B                  A  1087    				dec de
0011AA 10 F8               A  1088    				djnz n_hexbytes_to_ascii
0011AC C9                  A  1089    				ret
                           A  1090    			
                           A  1091    			
                           A  1092    
0011AD                     A  1093    ext_hexbyte_to_ascii
                           A  1094    
0011AD CC A3 16 00         A  1095    				call z,mbase_hl
0011B1 7B                  A  1096    				ld a,e
                           A  1097    
0011B2                     A  1098    hexbyte_to_ascii
                           A  1099    
0011B2 C5                  A  1100    				push bc
0011B3 47                  A  1101    				ld b,a							0011B4 CB3F                A  1102    				srl a							0011B6 CB3F                A  1103    				srl a
0011B8 CB3F                A  1104    				srl a
0011BA CB3F                A  1105    				srl a
0011BC CD CE 11 00         A  1106    				call hxdigconv
0011C0 77                  A  1107    				ld (hl),a
0011C1 23                  A  1108    				inc hl
0011C2 78                  A  1109    				ld a,b
0011C3 E60F                A  1110    				and 0fh
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  25


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0011C5 CD CE 11 00         A  1111    				call hxdigconv
0011C9 77                  A  1112    				ld (hl),a
0011CA 23                  A  1113    				inc hl
0011CB C1                  A  1114    				pop bc
0011CC AF                  A  1115    				xor a							0011CD C9                  A  1116    				ret
                           A  1117    				
0011CE C630                A  1118    hxdigconv		add a,030h
0011D0 FE3A                A  1119    				cp 03ah
0011D2 38 02               A  1120    				jr c,hxdone
0011D4 C607                A  1121    				add a,7
0011D6 C9                  A  1122    hxdone			ret
                           A  1123    
                           A  1124    
                           A  1125    
                           A  1126    
0011D7                     A  1127    hexword_to_ascii	
                           A  1128    
0011D7 7A                  A  1129    				ld a,d							0011D8 CD B2 11 00         A  1130    				call hexbyte_to_ascii
0011DC 7B                  A  1131    				ld a,e
0011DD CD B2 11 00         A  1132    				call hexbyte_to_ascii
0011E1 C9                  A  1133    				ret
                           A  1134    	
                           A  1135    
                           A  1136    
                           A  1137    
0011E2                     A  1138    ext_ascii_to_hexword
                           A  1139    		
0011E2 CC A3 16 00         A  1140    				call z,mbase_hl
                           A  1141    
0011E6                     A  1142    ascii_to_hexword
                           A  1143    	
0011E6 CD 07 11 00         A  1144    				call os_scan_for_non_space		0011EA B7                  A  1145    				or a
0011EB 20 04               A  1146    				jr nz,ascii_to_hex_no_scan
0011ED 3E81                A  1147    				ld a,081h						0011EF B7                  A  1148    				or a
0011F0 C9                  A  1149    				ret	
                           A  1150    
                           A  1151    	
0011F1                     A  1152    ascii_to_hex_no_scan
                           A  1153    
0011F1 DDE5                A  1154    				push ix
0011F3 C5                  A  1155    				push bc
0011F4 DD210000 00         A  1156    				ld ix,0
0011F9 0606                A  1157    				ld b,6							0011FB CD 27 12 00         A  1158    athlp			call ascii_to_hex_digit
0011FF FEF0                A  1159    				cp 0f0h							001201 28 17               A  1160    				jr z,athend
001203 FED0                A  1161    				cp 0d0h
001205 28 13               A  1162    				jr z,athend						Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  26


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001207 FE10                A  1163    				cp 16
001209 30 17               A  1164    				jr nc,badhex					00120B DD29                A  1165    				add ix,ix						00120D DD29                A  1166    				add ix,ix
00120F DD29                A  1167    				add ix,ix
001211 DD29                A  1168    				add ix,ix
001213 DDB5                A  1169    				or a,ixl
001215 DD6F                A  1170    				ld ixl,a
001217 23                  A  1171    				inc hl
001218 10 E1               A  1172    				djnz athlp
00121A DDE5                A  1173    athend			push ix
00121C D1                  A  1174    				pop de
00121D AF                  A  1175    				xor a
00121E C1                  A  1176    ath_quit		pop bc
00121F DDE1                A  1177    				pop ix							001221 C9                  A  1178    				ret
                           A  1179    		
001222 3E82                A  1180    badhex			ld a,82h						001224 B7                  A  1181    				or a
001225 18 F7               A  1182    				jr ath_quit
                           A  1183    				
                           A  1184    	
                           A  1185    		
001227                     A  1186    ascii_to_hex_digit
                           A  1187    
001227 7E                  A  1188    				ld a,(hl)						001228 FE61                A  1189    				cp 061h
00122A 38 02               A  1190    				jr c,hc_uppercase
00122C D620                A  1191    				sub 020h						00122E D63A                A  1192    hc_uppercase	sub 03ah						001230 38 02               A  1193    				jr c,zeronine
001232 C6F9                A  1194    				add a,0f9h
001234 C60A                A  1195    zeronine		add a,0ah
001236 C9                  A  1196    				ret
                           A  1197    
                           A  1198    
                           A  1199    ;--------- Text Input / Non-numeric string func
                           A  1200    
                           A  1201    ; Waits for user to enter a string of character
                           A  1202    ; Before calling, set:  HL = destination of str
                           A  1203    ;                        E = max number of char
                           A  1204    ; Returns:   A  = number of characters in enter
                           A  1205    
                           A  1206    
001237                     A  1207    ext_user_input
001237 CC A3 16 00         A  1208    				call z,mbase_hl
                           A  1209    				
00123B                     A  1210    os_user_input
00123B AF                  A  1211    				xor a
00123C 32 AA 69 00         A  1212    				ld (ui_index),a
001240 22 AC 69 00         A  1213    				ld (ui_string_addr),hl
001244 7B                  A  1214    				ld a,e
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  27


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001245 32 AB 69 00         A  1215    				ld (ui_maxchars),a
                           A  1216    				
001249 3A D7 69 00         A  1217    				ld a,(overwrite_mode)
00124D 32 3C 6C 00         A  1218    				ld (ui_im_cache),a
001251 AF                  A  1219    				xor a
001252 32 D7 69 00         A  1220    				ld (overwrite_mode),a			                           A  1221    				
001256 CD DB 47 00         A  1222    ui_loop			call hwsc_draw_cursor			00125A CD 58 4D 00         A  1223    				call os_wait_key_press			00125E 32 5E 6D 00         A  1224    				ld (current_scancode),a
001262 78                  A  1225    				ld a,b
001263 32 5F 6D 00         A  1226    				ld (current_asciicode),a		001267 CD C1 47 00         A  1227    				call hwsc_remove_cursor
                           A  1228    	
00126B 3A 5E 6D 00         A  1229    				ld a,(current_scancode)
00126F FE66                A  1230    				cp 066h							001271 20 1F               A  1231    				jr nz,os_nuibs
001273 3A AA 69 00         A  1232    				ld a,(ui_index)
001277 B7                  A  1233    				or a
001278 28 DC               A  1234    				jr z,ui_loop					00127A 21 20 6C 00         A  1235    				ld hl,cursor_x					00127E 35                  A  1236    				dec (hl)						00127F 46                  A  1237    os_uixok		ld b,(hl)		
001280 3A 1F 6C 00         A  1238    				ld a,(cursor_y)
001284 4F                  A  1239    				ld c,a
001285 3E20                A  1240    				ld a,32
001287 CD 88 47 00         A  1241    				call hwsc_plot_char
00128B 21 AA 69 00         A  1242    				ld hl,ui_index
00128F 35                  A  1243    				dec (hl)						001290 18 C4               A  1244    				jr ui_loop
                           A  1245    
001292 FE76                A  1246    os_nuibs		cp 076h							001294 28 6B               A  1247    				jr z,ui_aborted
001296 FE5A                A  1248    				cp 05ah							001298 28 46               A  1249    				jr z,ui_enter_pressed
                           A  1250    	
00129A 3A AA 69 00         A  1251    				ld a,(ui_index)					00129E 21 AB 69 00         A  1252    				ld hl,ui_maxchars
0012A2 BE                  A  1253    				cp (hl)
0012A3 28 B1               A  1254    				jr z,ui_loop	
                           A  1255    
0012A5 3A 5F 6D 00         A  1256    				ld a,(current_asciicode)		0012A9 FE20                A  1257    				cp 32							0012AB 38 A9               A  1258    				jr c,ui_loop					                           A  1259    
0012AD 57                  A  1260    ui_gtcha		ld d,a
0012AE 2A AC 69 00         A  1261    				ld hl,(ui_string_addr)
0012B2 3A AA 69 00         A  1262    				ld a,(ui_index)
0012B6 01000000            A  1263    				ld bc,0
0012BA 4F                  A  1264    				ld c,a
0012BB 09                  A  1265    				add hl,bc
0012BC 72                  A  1266    				ld (hl),d						Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  28


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0012BD 3C                  A  1267    				inc a
0012BE 32 AA 69 00         A  1268    				ld (ui_index),a					                           A  1269    				
0012C2 ED4B 1F 6C 00       A  1270    				ld bc,(cursor_y)				0012C7 7A                  A  1271    				ld a,d
0012C8 CD 88 47 00         A  1272    				call hwsc_plot_char		
0012CC 21 20 6C 00         A  1273    				ld hl,cursor_x					0012D0 34                  A  1274    				inc (hl)
0012D1 3A DD 69 00         A  1275    				ld a,(charmap_columns)			0012D5 BE                  A  1276    				cp (hl)
0012D6 C2 56 12 00         A  1277    				jp nz,ui_loop
0012DA 3600                A  1278    				ld (hl),0
0012DC C3 56 12 00         A  1279    				jp ui_loop
                           A  1280    
0012E0                     A  1281    ui_enter_pressed
                           A  1282    				
0012E0 3A 3C 6C 00         A  1283    				ld a,(ui_im_cache)				0012E4 32 D7 69 00         A  1284    				ld (overwrite_mode),a
0012E8 3A AA 69 00         A  1285    				ld a,(ui_index)					0012EC B7                  A  1286    				or a
0012ED 20 04               A  1287    				jr nz,ui_data
0012EF 3E81                A  1288    				ld a,081h						0012F1 B7                  A  1289    				or a
0012F2 C9                  A  1290    				ret
0012F3 2A AC 69 00         A  1291    ui_data			ld hl,(ui_string_addr)
0012F7 11000000            A  1292    				ld de,0
0012FB 5F                  A  1293    				ld e,a
0012FC 19                  A  1294    				add hl,de
0012FD 3600                A  1295    				ld (hl),0						0012FF BF                  A  1296    				cp a							001300 C9                  A  1297    				ret
                           A  1298    
001301 3A 3C 6C 00         A  1299    ui_aborted		ld a,(ui_im_cache)				001305 32 D7 69 00         A  1300    				ld (overwrite_mode),a
001309 3E80                A  1301    				ld a,080h						00130B B7                  A  1302    				or a							00130C C9                  A  1303    				ret
                           A  1304    		
                           A  1305    ;----------------------------------------------
                           A  1306    	
00130D                     A  1307    os_count_lines
                           A  1308    
00130D E5                  A  1309    				push hl							00130E 0679                A  1310    				ld b,'y'						001310 21 24 6C 00         A  1311    				ld hl,os_linecount			
001314 34                  A  1312    				inc (hl)						001315 3A DA 69 00         A  1313    				ld a,(charmap_rows)
001319 D604                A  1314    				sub 4
00131B BE                  A  1315    				cp (hl)
00131C 20 0E               A  1316    				jr nz,os_nntpo
00131E 3600                A  1317    				ld (hl),0
001320 21 AF 60 00         A  1318    				ld hl,os_more_txt
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  29


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001324 CD 69 10 00         A  1319    				call os_print_string
001328 CD 58 4D 00         A  1320    				call os_wait_key_press	
00132C E1                  A  1321    os_nntpo		pop hl
00132D C9                  A  1322    				ret
                           A  1323    
                           A  1324    ;----------------------------------------------
                           A  1325    
00132E                     A  1326    ext_compare_strings
                           A  1327    	
00132E CC A3 16 00         A  1328    				call z,mbase_hl
001332 CC B4 16 00         A  1329    				call z,mbase_de
                           A  1330    				
001336                     A  1331    os_compare_strings
                           A  1332    
                           A  1333    ; both strings at HL/DE should be zero terminat
                           A  1334    ; compare will fail if string lengths are diffe
                           A  1335    ; unless count (B) is reached first
                           A  1336    ; Case is ignored
                           A  1337    ; Zero flag set on return if same
                           A  1338    
001336 E5                  A  1339    				push hl							001337 D5                  A  1340    				push de							001338 1A                  A  1341    ocslp			ld a,(de)						001339 B7                  A  1342    				or a
00133A 28 0C               A  1343    				jr z,ocsbt
00133C CD 79 13 00         A  1344    				call case_insensitive_compare	001340 20 0E               A  1345    				jr nz,ocs_diff
001342 13                  A  1346    				inc de
001343 23                  A  1347    				inc hl
001344 10 F2               A  1348    				djnz ocslp
001346 18 04               A  1349    				jr ocs_same
001348 1A                  A  1350    ocsbt			ld a,(de)						001349 B6                  A  1351    				or (hl)
00134A 20 04               A  1352    				jr nz,ocs_diff
00134C D1                  A  1353    ocs_same		pop de
00134D E1                  A  1354    				pop hl
00134E AF                  A  1355    				xor a							00134F C9                  A  1356    				ret
001350 D1                  A  1357    ocs_diff		pop de
001351 E1                  A  1358    				pop hl
001352 AF                  A  1359    				xor a							001353 3C                  A  1360    				inc a
001354 C9                  A  1361    				ret
                           A  1362    
                           A  1363    
                           A  1364    ;----------------------------------------------
                           A  1365    
001355                     A  1366    os_copy_ascii_run
                           A  1367    
                           A  1368    ;INPUT HL = source ($00 or $20 terminates)
                           A  1369    ;      DE = dest
                           A  1370    ;       b = max chars
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  30


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1371    
                           A  1372    ;OUTPUT HL/DE = end of runs
                           A  1373    ;           c = char count
                           A  1374    	
001355 0E00                A  1375    				ld c,0
001357 7E                  A  1376    cpyar_lp		ld a,(hl)
001358 B7                  A  1377    				or a
001359 C8                  A  1378    				ret z
00135A FE20                A  1379    				cp 32
00135C C8                  A  1380    				ret z
00135D 12                  A  1381    				ld (de),a
00135E 23                  A  1382    				inc hl
00135F 13                  A  1383    				inc de
001360 0C                  A  1384    				inc c
001361 10 F4               A  1385    				djnz cpyar_lp
001363 C9                  A  1386    				ret
                           A  1387    
                           A  1388    ;----------------------------------------------
                           A  1389    
001364                     A  1390    uppercasify_string
                           A  1391    
                           A  1392    ; Set HL to string location ($00 quits)
                           A  1393    ; Set B to max number of chars
                           A  1394    
001364 7E                  A  1395    				ld a,(hl)
001365 B7                  A  1396    				or a
001366 C8                  A  1397    				ret z
001367 CD 70 13 00         A  1398    				call os_uppercasify
00136B 77                  A  1399    				ld (hl),a
00136C 23                  A  1400    				inc hl
00136D 10 F5               A  1401    				djnz uppercasify_string	
00136F C9                  A  1402    				ret
                           A  1403    	
                           A  1404    
001370                     A  1405    os_uppercasify
                           A  1406    
                           A  1407    ; INPUT/OUTPUT A = ascii char to make uppercase
                           A  1408    
001370 FE61                A  1409    				cp 061h			
001372 D8                  A  1410    				ret c
001373 FE7B                A  1411    				cp 07bh
001375 D0                  A  1412    				ret nc
001376 D620                A  1413    				sub 020h				
001378 C9                  A  1414    				ret
                           A  1415    
                           A  1416    ;----------------------------------------------
                           A  1417    
001379                     A  1418    case_insensitive_compare
                           A  1419    
                           A  1420    ; compares A with (HL) disregarding the case of
                           A  1421    ; Zero flag set if the characters are the same
                           A  1422    ; all registers are preserved.
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  31


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1423    
001379 C5                  A  1424    				push bc					
00137A 4F                  A  1425    				ld c,a
                           A  1426    
00137B CD 70 13 00         A  1427    				call os_uppercasify				00137F 47                  A  1428    				ld b,a
001380 7E                  A  1429    				ld a,(hl)
001381 CD 70 13 00         A  1430    				call os_uppercasify
001385 B8                  A  1431    				cp b
                           A  1432    
001386 79                  A  1433    				ld a,c
001387 C1                  A  1434    				pop bc
001388 C9                  A  1435    				ret
                           A  1436    
                           A  1437    ;----------------------------------------------
                           A  1438    
001389                     A  1439    os_decimal_add
                           A  1440    
                           A  1441    ;INPUT HL = source LSB, DE = dest LSB, b = numb
                           A  1442    
001389 C5                  A  1443    				push bc
00138A 0E00                A  1444    				ld c,0
00138C 1A                  A  1445    decdlp			ld a,(de)
00138D 86                  A  1446    				add a,(hl)
00138E 81                  A  1447    				add a,c
00138F FE0A                A  1448    				cp 10
001391 38 0B               A  1449    				jr c,daddnc
001393 D60A                A  1450    				sub 10
001395 0E01                A  1451    				ld c,1
001397 12                  A  1452    decnclp			ld (de),a
001398 23                  A  1453    				inc hl
001399 13                  A  1454    				inc de
00139A 10 F0               A  1455    				djnz decdlp
00139C C1                  A  1456    				pop bc
00139D C9                  A  1457    				ret
00139E 0E00                A  1458    daddnc			ld c,0
0013A0 18 F5               A  1459    				jr decnclp
                           A  1460    	
                           A  1461    ;----------------------------------------------
                           A  1462    
0013A2                     A  1463    os_hex_to_decimal
                           A  1464    
                           A  1465    ; INPUT xDE hex longword
                           A  1466    ; OUTPUT xHL = decimal LSB address (8 digits) 
                           A  1467    
       00000100            A  1468    hex_to_convert		equ scratch_pad
       00000103            A  1469    decimal_digits		equ scratch_pad+3
       0000010B            A  1470    decimal_add_digits	equ scratch_pad+3+8
                           A  1471    
0013A2 ED530001 00         A  1472    				ld (hex_to_convert),de
                           A  1473    		
0013A7 210B0100            A  1474    				ld hl,decimal_add_digits
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  32


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0013AB E5                  A  1475    				push hl
0013AC 11030100            A  1476    				ld de,decimal_digits
0013B0 AF                  A  1477    				xor a
0013B1 0608                A  1478    				ld b,8
0013B3 12                  A  1479    setupdec		ld (de),a
0013B4 77                  A  1480    				ld (hl),a
0013B5 23                  A  1481    				inc hl
0013B6 13                  A  1482    				inc de
0013B7 10 FA               A  1483    				djnz setupdec
0013B9 E1                  A  1484    				pop hl
0013BA 3601                A  1485    				ld (hl),1
                           A  1486    	
0013BC 21000100            A  1487    				ld hl,hex_to_convert
0013C0 0603                A  1488    				ld b,3
0013C2 C5                  A  1489    decconvlp		push bc
0013C3 7E                  A  1490    				ld a,(hl)
0013C4 CD E2 13 00         A  1491    				call decadder
0013C8 CD FB 13 00         A  1492    				call decaddx16
0013CC 7E                  A  1493    				ld a,(hl)
0013CD 0F                  A  1494    				rrca
0013CE 0F                  A  1495    				rrca
0013CF 0F                  A  1496    				rrca
0013D0 0F                  A  1497    				rrca
0013D1 CD E2 13 00         A  1498    				call decadder
0013D5 CD FB 13 00         A  1499    				call decaddx16
0013D9 C1                  A  1500    				pop bc
0013DA 23                  A  1501    				inc hl
0013DB 10 E5               A  1502    				djnz decconvlp
0013DD 21030100            A  1503    				ld hl,decimal_digits
0013E1 C9                  A  1504    				ret
                           A  1505    
                           A  1506    
                           A  1507    
0013E2 E60F                A  1508    decadder		and 15
0013E4 C8                  A  1509    				ret z
0013E5 47                  A  1510    				ld b,a
0013E6 E5                  A  1511    				push hl
0013E7 C5                  A  1512    daddlp			push bc
0013E8 11030100            A  1513    				ld de,decimal_digits
0013EC 210B0100            A  1514    				ld hl,decimal_add_digits
0013F0 0608                A  1515    				ld b,8
0013F2 CD 89 13 00         A  1516    				call os_decimal_add
0013F6 C1                  A  1517    				pop bc
0013F7 10 EE               A  1518    				djnz daddlp	
0013F9 E1                  A  1519    				pop hl
0013FA C9                  A  1520    				ret
                           A  1521    			
                           A  1522    				
0013FB E5                  A  1523    decaddx16		push hl
0013FC 0604                A  1524    				ld b,4							0013FE C5                  A  1525    x16loop			push bc
0013FF 110B0100            A  1526    				ld de,decimal_add_digits
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  33


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001403 210B0100            A  1527    				ld hl,decimal_add_digits
001407 0608                A  1528    				ld b,8
001409 CD 89 13 00         A  1529    				call os_decimal_add
00140D C1                  A  1530    				pop bc
00140E 10 EE               A  1531    				djnz x16loop	
001410 E1                  A  1532    				pop hl
001411 C9                  A  1533    				ret
                           A  1534    	
                           A  1535    	
                           A  1536    ;----------------------------------------------
                           A  1537    
001412                     A  1538    os_show_decimal
                           A  1539    
001412 11 8F 6C 00         A  1540    				ld de,output_line				001416 01090000            A  1541    				ld bc,9
00141A 09                  A  1542    				add hl,bc
00141B 060A                A  1543    				ld b,10
00141D 7E                  A  1544    shdeclp			ld a,(hl)
00141E B7                  A  1545    				or a
00141F 28 04               A  1546    				jr z,dnodigit
001421 C630                A  1547    				add a,030h
001423 12                  A  1548    				ld (de),a
001424 13                  A  1549    				inc de
001425 2B                  A  1550    dnodigit		dec hl
001426 10 F5               A  1551    				djnz shdeclp
001428 AF                  A  1552    				xor a
001429 12                  A  1553    				ld (de),a
00142A CD 72 14 00         A  1554    				call os_print_output_line
00142E C9                  A  1555    				ret
                           A  1556    				
                           A  1557    ;----------------------------------------------
                           A  1558    		
00142F                     A  1559    os_copy_to_output_line
                           A  1560    	
00142F D5                  A  1561    				push de
001430 C5                  A  1562    				push bc
001431 11 8F 6C 00         A  1563    				ld de,output_line				001435 01510000            A  1564    				ld bc,max_buffer_chars+1		001439 EDA0                A  1565    os_cloll		ldi
00143B 7E                  A  1566    				ld a,(hl)
00143C B7                  A  1567    				or a
00143D 28 04               A  1568    				jr z,os_clold
00143F 78                  A  1569    				ld a,b
001440 B1                  A  1570    				or c
001441 20 F6               A  1571    				jr nz,os_cloll
001443 12                  A  1572    os_clold		ld (de),a
001444 C1                  A  1573    				pop bc
001445 D1                  A  1574    				pop de
001446 C9                  A  1575    				ret
                           A  1576    
                           A  1577    
                           A  1578    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  34


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1579    
001447                     A  1580    os_show_hex_address
                           A  1581    
001447 E5                  A  1582    				push hl							001448 21 8F 6C 00         A  1583    				ld hl,output_line
00144C ED53 31 6C 00       A  1584    				ld (hex_address),de
001451 3A 33 6C 00         A  1585    				ld a,(hex_address+2)
001455 CD B2 11 00         A  1586    				call hexbyte_to_ascii
001459 18 10               A  1587    				jr shw_nt
                           A  1588    				
                           A  1589    
00145B                     A  1590    os_show_hex_byte
                           A  1591    
00145B E5                  A  1592    				push hl							00145C 21 8F 6C 00         A  1593    				ld hl,output_line
001460 CD B2 11 00         A  1594    				call hexbyte_to_ascii
001464 18 09               A  1595    				jr shb_nt
                           A  1596    
                           A  1597    
                           A  1598    
001466                     A  1599    os_show_hex_word
                           A  1600    
001466 E5                  A  1601    				push hl							001467 21 8F 6C 00         A  1602    				ld hl,output_line
00146B CD D7 11 00         A  1603    shw_nt			call hexword_to_ascii
00146F 3600                A  1604    shb_nt			ld (hl),0
001471 E1                  A  1605    				pop hl
                           A  1606    
                           A  1607    	
                           A  1608    
001472                     A  1609    os_print_output_line
                           A  1610    
001472 E5                  A  1611    				push hl
001473 21 8F 6C 00         A  1612    				ld hl,output_line
001477 CD 69 10 00         A  1613    cproline		call os_print_string
00147B E1                  A  1614    				pop hl
00147C C9                  A  1615    				ret
                           A  1616    
                           A  1617    
                           A  1618    
00147D                     A  1619    os_print_output_line_skip_zeroes
                           A  1620    
00147D E5                  A  1621    				push hl
00147E 21 8F 6C 00         A  1622    				ld hl,output_line
001482 CD 8F 11 00         A  1623    				call os_skip_leading_ascii_zero
001486 18 EF               A  1624    				jr cproline
                           A  1625    				
                           A  1626    		
                           A  1627    ;----------------------------------------------
                           A  1628    
001488                     A  1629    os_store_CPU_regs
                           A  1630    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  35


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001488 F3                  A  1631    				di								                           A  1632    
001489 33                  A  1633    				inc sp							00148A 33                  A  1634    				inc sp
00148B 33                  A  1635    				inc sp
00148C ED73 AD 6B 00       A  1636    				ld (store_spl),sp
001491 3B                  A  1637    				dec sp							001492 3B                  A  1638    				dec sp
001493 3B                  A  1639    				dec sp
                           A  1640    				
001494 F5                  A  1641    				push af
001495 32 90 6B 00         A  1642    				ld (store_a1),a					001499 08                  A  1643    				ex af,af'
00149A 32 9A 6B 00         A  1644    				ld (store_a2),a
00149E 08                  A  1645    				ex af,af'
00149F ED43 91 6B 00       A  1646    				ld (store_bc1),bc		
0014A4 ED53 94 6B 00       A  1647    				ld (store_de1),de
0014A9 22 97 6B 00         A  1648    				ld (store_hl1),hl
0014AD D9                  A  1649    				exx
0014AE ED43 9B 6B 00       A  1650    				ld (store_bc2),bc
0014B3 ED53 9E 6B 00       A  1651    				ld (store_de2),de
0014B8 22 A1 6B 00         A  1652    				ld (store_hl2),hl
0014BC D9                  A  1653    				exx
0014BD DD22 A4 6B 00       A  1654    				ld (store_ix),ix
0014C2 FD22 A7 6B 00       A  1655    				ld (store_iy),iy
                           A  1656    				
0014C7 ED6E                A  1657    			    ld a,MB
0014C9 32 B2 6B 00         A  1658    				ld (store_mbase),a
                           A  1659    								
0014CD C5                  A  1660    				push bc
0014CE 0600                A  1661    				ld b,0
0014D0 20 02               A  1662    				jr nz,zfstzero					0014D2 CBF0                A  1663    				set 6,b
                           A  1664    
0014D4 30 02               A  1665    zfstzero		jr nc,cfstzero					0014D6 CBC0                A  1666    				set 0,b
                           A  1667    
0014D8 F2 DE 14 00         A  1668    cfstzero		jp p,sfstzero					0014DC CBF8                A  1669    				set 7,b
                           A  1670    
0014DE EA E4 14 00         A  1671    sfstzero		jp pe,pfstzero					0014E2 CBD0                A  1672    				set 2,b
                           A  1673    
0014E4 ED57                A  1674    pfstzero		ld a,i			
0014E6 EA EC 14 00         A  1675    				jp pe,ifstzero					0014EA CBE0                A  1676    				set 4,b
                           A  1677    
0014EC 78                  A  1678    ifstzero		ld a,b
0014ED 32 B3 6B 00         A  1679    				ld (store_f),a
                           A  1680    				
0014F1 3E00                A  1681    				ld a,os_location/65536			0014F3 ED6D                A  1682    				ld MB,a							Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  36


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0014F5 40ED73 B0 6B        A  1683    				ld.sis (store_sps),sp
0014FA 3A B2 6B 00         A  1684    				ld a,(store_mbase)				0014FE ED6D                A  1685    				ld MB,a
                           A  1686    				
001500 C1                  A  1687    				pop bc
001501 F1                  A  1688    				pop af
001502 FB                  A  1689    				ei
001503 C9                  A  1690    				ret
                           A  1691    
                           A  1692    
                           A  1693    
001504                     A  1694    os_dont_store_registers
                           A  1695    
001504 AF                  A  1696    				xor a
001505 32 B8 6B 00         A  1697    				ld (store_registers),a			001509 C9                  A  1698    				ret
                           A  1699    	
                           A  1700    	
                           A  1701    ;----------------------------------------------
                           A  1702    
00150A                     A  1703    os_new_line_cond
                           A  1704    
00150A CD 09 1B 00         A  1705    				call test_quiet_mode
00150E C0                  A  1706    				ret nz
                           A  1707    
                           A  1708    	
00150F                     A  1709    os_new_line
                           A  1710    
00150F E5                  A  1711    				push hl
001510 21 C7 60 00         A  1712    				ld hl,crlfx2_txt+1
001514 CD 69 10 00         A  1713    				call os_print_string
001518 E1                  A  1714    				pop hl
001519 C9                  A  1715    				ret
                           A  1716    				
                           A  1717    ;----------------------------------------------
                           A  1718    
00151A                     A  1719    os_set_cursor_position
                           A  1720    				
                           A  1721    												00151A 3A DA 69 00         A  1722    				ld a,(charmap_rows)				00151E 3D                  A  1723    				dec a							00151F B9                  A  1724    				cp c
001520 38 14               A  1725    				jr c,badpos
001522 79                  A  1726    				ld a,c
001523 32 1F 6C 00         A  1727    				ld (cursor_y),a
                           A  1728    				
001527 3A DD 69 00         A  1729    				ld a,(charmap_columns)
00152B 3D                  A  1730    				dec a
00152C B8                  A  1731    				cp b
00152D 38 07               A  1732    				jr c,badpos
00152F 78                  A  1733    				ld a,b
001530 32 20 6C 00         A  1734    				ld (cursor_x),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  37


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001534 AF                  A  1735    				xor a
001535 C9                  A  1736    				ret				
                           A  1737    
001536 3E88                A  1738    badpos			ld a,88h						001538 B7                  A  1739    				or a
001539 C9                  A  1740    				ret
                           A  1741    
                           A  1742    
                           A  1743    					
                           A  1744    	
                           A  1745    	
00153A                     A  1746    os_get_cursor_position
                           A  1747    
00153A ED4B 1F 6C 00       A  1748    				ld bc,(cursor_pos)				00153F BF                  A  1749    				cp a							001540 C9                  A  1750    				ret
                           A  1751    
                           A  1752    
                           A  1753    ;----------------------------------------------
                           A  1754    
001541                     A  1755    os_show_packed_text_cond
                           A  1756    
001541 CD 09 1B 00         A  1757    				call test_quiet_mode
001545 C0                  A  1758    				ret nz
                           A  1759    
                           A  1760    	
001546                     A  1761    os_show_packed_text
                           A  1762    
                           A  1763    ; Construct sentence from internal dictionary u
                           A  1764    	
001546 C5                  A  1765    				push bc
001547 D5                  A  1766    				push de
001548 DDE5                A  1767    				push ix
00154A DD21 8F 6C 00       A  1768    				ld ix,output_line
00154F 7E                  A  1769    readpind		ld a,(hl)
001550 B7                  A  1770    				or a
001551 20 10               A  1771    				jr nz,getword					001553 DD2B                A  1772    				dec ix							001555 DD7700              A  1773    				ld (ix),a						                           A  1774    			
001558 E5                  A  1775    				push hl
001559 CD 72 14 00         A  1776    				call os_print_output_line
00155D E1                  A  1777    				pop hl
                           A  1778    			
00155E DDE1                A  1779    				pop ix
001560 D1                  A  1780    				pop de
001561 C1                  A  1781    				pop bc
001562 C9                  A  1782    				ret
                           A  1783    				
001563 11 3D 61 00         A  1784    getword			ld de,dictionary-1
001567 0E00                A  1785    				ld c,0
001569 13                  A  1786    dictloop		inc de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  38


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00156A 1A                  A  1787    				ld a,(de)
00156B B7                  A  1788    				or a							00156C 28 04               A  1789    				jr z,faword
00156E CB7F                A  1790    				bit 7,a							001570 28 F7               A  1791    				jr z,dictloop	
                           A  1792    			
001572 0C                  A  1793    faword			inc c							001573 79                  A  1794    				ld a,c
001574 BE                  A  1795    				cp (hl)
001575 20 F2               A  1796    				jr nz,dictloop
001577 13                  A  1797    copytol			inc de							001578 1A                  A  1798    				ld a,(de)
001579 B7                  A  1799    				or a
00157A 28 0B               A  1800    				jr z,eoword						00157C CB7F                A  1801    				bit 7,a
00157E 20 07               A  1802    				jr nz,eoword
001580 DD7700              A  1803    				ld (ix),a						001583 DD23                A  1804    				inc ix
001585 18 F0               A  1805    				jr copytol
001587 DD360020            A  1806    eoword			ld (ix),32						00158B DD23                A  1807    				inc ix
00158D 23                  A  1808    				inc hl
00158E 18 BF               A  1809    				jr readpind
                           A  1810    
                           A  1811    
                           A  1812    		
                           A  1813    ;--------- Mouse functions --------------------
                           A  1814    
       00000064            A  1815    default_sample_rate 	equ 100			; 100 s
       00000003            A  1816    default_resolution		equ 03h			; 8 cou
       000000E6            A  1817    default_scaling			equ 0e6h		; valid
                           A  1818    
                           A  1819    
001590 21800200            A  1820    os_init_mouse	ld hl,640
001594 11E00100            A  1821    				ld de,480
001598 22 76 6D 00         A  1822    				ld (mouse_window_size_x),hl	 
00159C ED53 79 6D 00       A  1823    				ld (mouse_window_size_y),de
0015A1 21000000            A  1824    				ld hl,0
0015A5 22 6E 6D 00         A  1825    				ld (mouse_abs_x),hl
0015A9 22 71 6D 00         A  1826    				ld (mouse_abs_y),hl
0015AD 22 68 6D 00         A  1827    				ld (mouse_disp_x),hl
0015B1 22 6B 6D 00         A  1828    				ld (mouse_disp_y),hl
                           A  1829    			
0015B5 CD E6 43 00         A  1830    				call disable_ms_irq
                           A  1831    
0015B9 21 74 6B 00         A  1832    				ld hl,devices_connected
0015BD CB8E                A  1833    				res 1,(hl)
                           A  1834    		
0015BF CD 18 4B 00         A  1835    				call init_mouse
0015C3 C0                  A  1836    				ret nz
                           A  1837    			
0015C4 AF                  A  1838    				xor a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  39


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0015C5 32 66 6D 00         A  1839    				ld (mouse_packet_index),a
0015C9 32 67 6D 00         A  1840    				ld (mouse_buttons),a			                           A  1841    
0015CD CD E0 43 00         A  1842    				call enable_ms_irq
                           A  1843    
0015D1 21 74 6B 00         A  1844    				ld hl,devices_connected
0015D5 CBCE                A  1845    				set 1,(hl)
0015D7 AF                  A  1846    				xor a
0015D8 C9                  A  1847    				ret				
                           A  1848    				
                           A  1849    				
                           A  1850    			
0015D9                     A  1851    os_get_mouse_motion
                           A  1852    			
                           A  1853    ; Returns: ZF = Set: Relative X coord in HL, Re
                           A  1854    ;          ZF = Not set: Mouse driver not initi
                           A  1855    			
0015D9 3A 74 6B 00         A  1856    				ld a,(devices_connected)
0015DD E602                A  1857    				and 2
0015DF EE02                A  1858    				xor 2
0015E1 C0                  A  1859    				ret nz
                           A  1860    				
0015E2 AF                  A  1861    ms_reread		xor a
0015E3 32 75 6D 00         A  1862    				ld (mouse_updated),a
0015E7 2A 68 6D 00         A  1863    				ld hl,(mouse_disp_x)			0015EB ED5B 6B 6D 00       A  1864    				ld de,(mouse_disp_y)
0015F0 3A 75 6D 00         A  1865    				ld a,(mouse_updated)			0015F4 B7                  A  1866    				or a
0015F5 20 EB               A  1867    				jr nz,ms_reread
0015F7 AF                  A  1868    mouse_end		xor a
0015F8 3A 74 6D 00         A  1869    				ld a,(mouse_wheel)
0015FC 47                  A  1870    				ld b,a
0015FD 3A 67 6D 00         A  1871    				ld a,(mouse_buttons)
001601 C9                  A  1872    				ret
                           A  1873    			
                           A  1874    			
001602                     A  1875    os_get_mouse_position
                           A  1876    
                           A  1877    ; Returns: ZF = Set: Abolute X coord in HL, Abs
                           A  1878    ;          ZF = Not set: Mouse driver not initi
                           A  1879    
001602 3A 74 6B 00         A  1880    				ld a,(devices_connected)
001606 E602                A  1881    				and 2
001608 EE02                A  1882    				xor 2
00160A C0                  A  1883    				ret nz
                           A  1884    				
00160B AF                  A  1885    ms_reread_abs	xor a
00160C 32 75 6D 00         A  1886    				ld (mouse_updated),a
                           A  1887    
001610 2A 6E 6D 00         A  1888    				ld hl,(mouse_abs_x)
001614 ED5B 71 6D 00       A  1889    				ld de,(mouse_abs_y)
001619 3A 75 6D 00         A  1890    				ld a,(mouse_updated)			Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  40


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00161D B7                  A  1891    				or a
00161E 20 EB               A  1892    				jr nz,ms_reread_abs
                           A  1893    				
001620 18 D5               A  1894    				jr mouse_end
                           A  1895    				
                           A  1896    	
                           A  1897    ;==============================================
                           A  1898    ;----- General Subroutines --------------------
                           A  1899    ;==============================================
                           A  1900    
                           A  1901    ; .--------------.
                           A  1902    ; ! CRC Checksum !
                           A  1903    ; '--------------'
                           A  1904    
                           A  1905    ; makes 16 bit checksum in HL, src addr = DE, l
                           A  1906    
001622                     A  1907    crc_checksum
                           A  1908    
001622 21FFFF00            A  1909    				ld hl,0ffffh		
001626 1A                  A  1910    crcloop			ld a,(de)			
001627 AC                  A  1911    				xor h			
001628 67                  A  1912    				ld h,a			
001629 0608                A  1913    				ld b,8
00162B 4029                A  1914    crcbyte			add.sis hl,hl					00162D 30 08               A  1915    				jr nc,crcnext
00162F 7C                  A  1916    				ld a,h
001630 EE10                A  1917    				xor 10h
001632 67                  A  1918    				ld h,a
001633 7D                  A  1919    				ld a,l
001634 EE21                A  1920    				xor 21h
001636 6F                  A  1921    				ld l,a
001637 10 F2               A  1922    crcnext			djnz crcbyte
001639 13                  A  1923    				inc de
00163A 0D                  A  1924    				dec c
00163B 20 E9               A  1925    				jr nz,crcloop
00163D C9                  A  1926    				ret
                           A  1927    
                           A  1928    
                           A  1929    ;----------------------------------------------
                           A  1930    
00163E                     A  1931    os_get_key_mod_flags
                           A  1932    
00163E 3A 5D 6D 00         A  1933    				ld a,(key_mod_flags)
001642 BF                  A  1934    				cp a							001643 C9                  A  1935    				ret
                           A  1936    
                           A  1937    ;----------------------------------------------
                           A  1938    
001644                     A  1939    os_get_vmode
                           A  1940    			
001644 3A DA 69 00         A  1941    				ld a,(charmap_rows)
001648 4F                  A  1942    				ld c,a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  41


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001649 3A DD 69 00         A  1943    				ld a,(charmap_columns)
00164D 47                  A  1944    				ld b,a
00164E 3A AF 69 00         A  1945    				ld a,(video_mode)
001652 BF                  A  1946    				cp a						; Z
001653 C9                  A  1947    				ret
                           A  1948    
                           A  1949    ;----------------------------------------------
                           A  1950    
001654 7B                  A  1951    ext_set_vmode	ld a,e
                           A  1952    
001655 FE04                A  1953    os_set_vmode	cp 4
001657 38 04               A  1954    				jr c,vm_range_ok
001659 3E88                A  1955    				ld a,88h					;ou
00165B B7                  A  1956    				or a
00165C C9                  A  1957    				ret
                           A  1958    				
00165D 32 AF 69 00         A  1959    vm_range_ok		ld (video_mode),a
001661 21030000            A  1960    				ld hl,3
001665 67                  A  1961    				ld h,a
001666 ED6C                A  1962    				mlt hl
001668 11 E0 69 00         A  1963    				ld de,vmode_parameter_list
00166C 19                  A  1964    				add hl,de
00166D 7E                  A  1965    				ld a,(hl)
00166E 23                  A  1966    				inc hl
00166F 46                  A  1967    				ld b,(hl)
001670 23                  A  1968    				inc hl
001671 4E                  A  1969    				ld c,(hl)
001672 CD 70 46 00         A  1970    				call set_charmap_parameters
                           A  1971    				
001676 CD 12 47 00         A  1972    				call hwsc_clear_screen
                           A  1973    
00167A AF                  A  1974    				xor a				
00167B C9                  A  1975    				ret
                           A  1976    
                           A  1977    
                           A  1978    ;----------------------------------------------
                           A  1979    
00167C                     A  1980    os_bchl_memfill
                           A  1981    
                           A  1982    ; fill memory from xHL with A. Count in xBC.
                           A  1983    		
00167C 77                  A  1984    mf_loop			ld (hl),a
00167D EDA1                A  1985    				cpi								00167F EA 7C 16 00         A  1986    				jp pe,mf_loop
001683 C9                  A  1987    				ret
                           A  1988    	
                           A  1989    ;----------------------------------------------
                           A  1990    
001684 7B                  A  1991    ext_set_pen		ld a,e
                           A  1992    
001685 32 B0 69 00         A  1993    os_set_pen		ld (current_pen),a
001689 BF                  A  1994    				cp a							Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  42


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00168A C9                  A  1995    				ret
                           A  1996    
                           A  1997    ;----------------------------------------------
                           A  1998    	
00168B 3A B0 69 00         A  1999    os_get_pen		ld a,(current_pen)
00168F BF                  A  2000    				cp a							001690 C9                  A  2001    				ret	
                           A  2002    
                           A  2003    ;----------------------------------------------
                           A  2004    
001691                     A  2005    ext_background_colours
                           A  2006    				
001691 CC A3 16 00         A  2007    				call z,mbase_hl
001695 C3 06 47 00         A  2008    				jp hswc_set_ui_colours
                           A  2009    				
                           A  2010    				
                           A  2011    ;----------------------------------------------
                           A  2012    
001699                     A  2013    os_get_xde_msb	
                           A  2014    			
001699 ED53 37 6C 00       A  2015    				ld (xrr_temp),de				00169E 3A 39 6C 00         A  2016    				ld a,(xrr_temp+2)
0016A2 C9                  A  2017    				ret
                           A  2018    
                           A  2019    ;----------------------------------------------
                           A  2020    
0016A3 F5                  A  2021    mbase_hl		push af
0016A4 22 37 6C 00         A  2022    				ld (xrr_temp),hl				0016A8 ED6E                A  2023    				ld a,MB
0016AA 32 39 6C 00         A  2024    				ld (xrr_temp+2),a
0016AE 2A 37 6C 00         A  2025    				ld hl,(xrr_temp)
0016B2 F1                  A  2026    				pop af
0016B3 C9                  A  2027    				ret
                           A  2028    				
0016B4 F5                  A  2029    mbase_de		push af
0016B5 ED53 37 6C 00       A  2030    				ld (xrr_temp),de				0016BA ED6E                A  2031    				ld a,MB
0016BC 32 39 6C 00         A  2032    				ld (xrr_temp+2),a
0016C0 ED5B 37 6C 00       A  2033    				ld de,(xrr_temp)
0016C5 F1                  A  2034    				pop af
0016C6 C9                  A  2035    				ret
                           A  2036    
                           A  2037    
                           A  2038    ;----------------------------------------------
                           A  2039    ; Unpacks Phil's Z80P_RLE packed files - V1.02 
                           A  2040    ;----------------------------------------------
                           A  2041    
0016C7                     A  2042    unpack_rle
                           A  2043    
                           A  2044    ;set xHL = source address of packed file
                           A  2045    ;set xDE = destination address for unpacked dat
                           A  2046    ;set xBC = length of packed file
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  43


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2047    
0016C7 E5                  A  2048    			push hl	
0016C8 DDE1                A  2049    			pop ix
0016CA 0B                  A  2050    			dec bc								0016CB 23                  A  2051    			inc hl
0016CC DD7E00              A  2052    unp_gtok	ld a,(ix)							0016CF BE                  A  2053    unp_next	cp (hl)								0016D0 28 07               A  2054    			jr z,unp_brun						0016D2 EDA0                A  2055    			ldi									0016D4 EA CF 16 00         A  2056    			jp pe,unp_next						0016D8 C9                  A  2057    			ret
                           A  2058    	
0016D9 C5                  A  2059    unp_brun	push bc								0016DA 23                  A  2060    			inc hl		
0016DB 7E                  A  2061    			ld a,(hl)							0016DC 23                  A  2062    			inc hl		
0016DD 46                  A  2063    			ld b,(hl)							0016DE 23                  A  2064    			inc hl
                           A  2065    	
0016DF 12                  A  2066    unp_rllp	ld (de),a							0016E0 13                  A  2067    			inc de			
0016E1 10 FC               A  2068    			djnz unp_rllp
                           A  2069    	
0016E3 C1                  A  2070    			pop bc	
0016E4 0B                  A  2071    			dec bc								0016E5 0B                  A  2072    			dec bc
0016E6 0B                  A  2073    			dec bc
0016E7 E5                  A  2074    			push hl								0016E8 21000000            A  2075    			ld hl,0
0016EC B7                  A  2076    			or a
0016ED ED4A                A  2077    			adc hl,bc
0016EF E1                  A  2078    			pop hl
0016F0 20 DA               A  2079    			jr nz,unp_gtok
0016F2 C9                  A  2080    			ret	
                           A  2081    	
                           A  2082    ;----------------------------------------------
                           A  2083    ; Commonly called error messages - gets message
                           A  2084    ;----------------------------------------------
                           A  2085    
                           A  2086    
0016F3 3E0D                A  2087    os_no_fn_error		ld a,0dh
0016F5 B7                  A  2088    					or a
0016F6 C9                  A  2089    					ret
                           A  2090    			
0016F7 3E15                A  2091    os_fn_too_long		ld a,15h
0016F9 B7                  A  2092    					or a
0016FA C9                  A  2093    					ret
                           A  2094    				
0016FB 3E16                A  2095    os_no_start_addr	ld a,16h
0016FD B7                  A  2096    					or a
0016FE C9                  A  2097    					ret
                           A  2098    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  44


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0016FF 3E17                A  2099    os_no_filesize		ld a,17h
001701 B7                  A  2100    					or a
001702 C9                  A  2101    					ret
                           A  2102    			
001703 3E18                A  2103    os_abort_save		ld a,18h
001705 B7                  A  2104    					or a
001706 C9                  A  2105    					ret
                           A  2106    			
001707 3E1C                A  2107    os_no_e_addr_error	ld a,1ch
001709 B7                  A  2108    					or a
00170A C9                  A  2109    					ret
                           A  2110    			
00170B 3E1D                A  2111    os_no_d_addr_error	ld a,1dh
00170D B7                  A  2112    					or a
00170E C9                  A  2113    					ret
                           A  2114    				
00170F 3E1E                A  2115    os_range_error		ld a,1eh
001711 B7                  A  2116    					or a
001712 C9                  A  2117    					ret
                           A  2118    			
001713 3E1F                A  2119    os_no_args_error	ld a,1fh
001715 B7                  A  2120    					or a
001716 C9                  A  2121    					ret	
                           A  2122    
                           A  2123    ;----------------------------------------------
                           A  2124    
                           A  2125    ; Set xHL to address of zero terminated filenam
                           A  2126    ; RETURNS:	C:xDE  = File length
                           A  2127    ;    		HL     = Start cluster of file
                           A  2128    
001717 CC A3 16 00         A  2129    ext_find_file	call z,mbase_hl
                           A  2130    
00171B CD 6E 5C 00         A  2131    os_find_file	call fs_hl_to_filename
00171F CD D3 53 00         A  2132    				call fs_open_file_command		001723 38 01               A  2133    				jr c,os_fferr					001725 C9                  A  2134    				ret								                           A  2135    					
001726 47                  A  2136    os_fferr		ld b,a							001727 AF                  A  2137    				xor a			
001728 3C                  A  2138    				inc a							001729 C9                  A  2139    				ret	
                           A  2140    
                           A  2141    ;----------------------------------------------
                           A  2142    
00172A                     A  2143    os_set_load_length
                           A  2144    
00172A ED53 F3 5E 00       A  2145    				ld (fs_file_transfer_length),de
00172F BF                  A  2146    				cp a							001730 C9                  A  2147    				ret
                           A  2148    				
                           A  2149    ;----------------------------------------------
                           A  2150    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  45


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001731                     A  2151    ext_set_file_pointer
                           A  2152    
001731 79                  A  2153    				ld a,c
                           A  2154    				
001732                     A  2155    os_set_file_pointer
                           A  2156    
                           A  2157    ; Moves the 'start of file' pointer allowing ra
                           A  2158    ; Note: File pointer is reset by opening a file
                           A  2159    ; by normal read function.
                           A  2160    
001732 ED53 E7 5E 00       A  2161    				ld (fs_file_pointer),de			001737 32 EA 5E 00         A  2162    				ld (fs_file_pointer+3),a
00173B F5                  A  2163    				push af
00173C AF                  A  2164    				xor a
00173D 32 19 5F 00         A  2165    				ld (fs_filepointer_valid),a		001741 F1                  A  2166    				pop af
001742 BF                  A  2167    				cp a							001743 C9                  A  2168    				ret
                           A  2169    				
                           A  2170    ;----------------------------------------------
                           A  2171    
                           A  2172    ; set xHL = load address 
                           A  2173    ; (Before calling this routine, call os_find_fi
                           A  2174    
001744                     A  2175    ext_read_bytes_from_file
                           A  2176    
001744 CC A3 16 00         A  2177    				call z,mbase_hl					                           A  2178    				
001748                     A  2179    os_read_bytes_from_file
                           A  2180    
001748 22 FC 5E 00         A  2181    				ld (fs_ez80_address),hl			00174C CD 26 54 00         A  2182    				call fs_read_data_command
001750 38 D4               A  2183    				jr c,os_fferr
001752 C9                  A  2184    				ret
                           A  2185    
                           A  2186    ;----------------------------------------------
                           A  2187    
                           A  2188    ; Before calling, set xHL = address of zero ter
                           A  2189    
001753 CC A3 16 00         A  2190    ext_create_file	call z,mbase_hl
                           A  2191    
001757 CD 6E 5C 00         A  2192    os_create_file	call fs_hl_to_filename
00175B CD FE 56 00         A  2193    				call fs_create_file_command		00175F DA 26 17 00         A  2194    				jp c,os_fferr					001763 C9                  A  2195    				ret
                           A  2196    
                           A  2197    ;----------------------------------------------
                           A  2198    
001764                     A  2199    ext_write_bytes_to_file
                           A  2200    
001764 CC A3 16 00         A  2201    				call z,mbase_hl
001768 CC B4 16 00         A  2202    				call z,mbase_de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  46


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2203    
00176C                     A  2204    os_write_bytes_to_file
                           A  2205    
                           A  2206    ; Before calling, set..
                           A  2207    
                           A  2208    ; xDE   = address to save data from
                           A  2209    ; xBC   = number of bytes to save
                           A  2210    ; xHL   = address of null-terminated ascii name
                           A  2211    
                           A  2212    ; On return:
                           A  2213    
                           A  2214    ; If zero flag NOT set, there was an error.
                           A  2215    ; If   A = $00, b = hardware error code
                           A  2216    ; Else A = File system error code
                           A  2217    
                           A  2218    ; NOTE:
                           A  2219    ; Will return 'file not found' if the file has 
                           A  2220    				
00176C ED43 F3 5E 00       A  2221    				ld (fs_file_transfer_length),bc
001771 ED53 FC 5E 00       A  2222    				ld (fs_ez80_address),de	 	
001776 CD 6E 5C 00         A  2223    				call fs_hl_to_filename
00177A CD 30 57 00         A  2224    				call fs_write_bytes_to_file_com
00177E DA 26 17 00         A  2225    				jp c,os_fferr
001782 C9                  A  2226    				ret
                           A  2227    		
                           A  2228    		
                           A  2229    ;----------------------------------------------
                           A  2230    	
                           A  2231    
001783                     A  2232    os_check_volume_format
                           A  2233    
001783 E5                  A  2234    				push hl
001784 CD 29 52 00         A  2235    				call fs_check_disk_format
001788 E1                  A  2236    				pop hl
001789 DA 26 17 00         A  2237    os_rffsc		jp c,os_fferr
00178D C9                  A  2238    				ret
                           A  2239    
                           A  2240    ;----------------------------------------------
                           A  2241    
                           A  2242    
00178E 7B                  A  2243    ext_format		ld a,e
00178F CC A3 16 00         A  2244    				call z,mbase_hl					                           A  2245    
001793 DD21 39 6A 00       A  2246    os_format		ld ix,current_driver
001798 DD5E00              A  2247    				ld e,(ix)
00179B D5                  A  2248    				push de
00179C DDE5                A  2249    				push ix
00179E CD 01 2C 00         A  2250    				call setup_dev_format			0017A2 38 05               A  2251    				jr c,osfdok
                           A  2252    				
0017A4 3ED0                A  2253    				ld a,0d0h						0017A6 B7                  A  2254    				or a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  47


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0017A7 18 04               A  2255    				jr osfdbad
                           A  2256    				
0017A9 CD 3B 50 00         A  2257    osfdok			call fs_format_partition
                           A  2258    			
0017AD DDE1                A  2259    osfdbad			pop ix							0017AF D1                  A  2260    				pop de
0017B0 DD7300              A  2261    				ld (ix),e
0017B3 18 D4               A  2262    				jr os_rffsc
                           A  2263    
                           A  2264    
                           A  2265    ;----------------------------------------------
                           A  2266    
                           A  2267    
0017B5 CC A3 16 00         A  2268    ext_make_dir	call z,mbase_hl					                           A  2269    
0017B9 CD 6E 5C 00         A  2270    os_make_dir		call fs_hl_to_filename
0017BD CD 76 55 00         A  2271    				call fs_make_dir_command
0017C1 18 C6               A  2272    				jr os_rffsc
                           A  2273    
                           A  2274    
                           A  2275    ;----------------------------------------------
                           A  2276    
                           A  2277    
0017C3 CC A3 16 00         A  2278    ext_change_dir	call z,mbase_hl					                           A  2279    
0017C7 CD 6E 5C 00         A  2280    os_change_dir	call fs_hl_to_filename
0017CB CD 7C 53 00         A  2281    				call fs_change_dir_command
0017CF 18 B8               A  2282    				jr os_rffsc
                           A  2283    				
                           A  2284    	
                           A  2285    ;----------------------------------------------
                           A  2286    	
                           A  2287    	
0017D1 CD AF 53 00         A  2288    os_parent_dir	call fs_parent_dir_command
0017D5 18 B2               A  2289    				jr os_rffsc
                           A  2290    				
                           A  2291    
                           A  2292    ;----------------------------------------------
                           A  2293    
                           A  2294    	
0017D7 CD A3 53 00         A  2295    os_root_dir		call fs_goto_root_dir_command
0017DB 18 AC               A  2296    				jr os_rffsc
                           A  2297    
                           A  2298    
                           A  2299    ;----------------------------------------------
                           A  2300    
                           A  2301    
0017DD CC A3 16 00         A  2302    ext_erase_file	call z,mbase_hl					                           A  2303    
0017E1 CD 6E 5C 00         A  2304    os_erase_file	call fs_hl_to_filename
0017E5 CD C7 58 00         A  2305    				call fs_erase_file_command
0017E9 18 9E               A  2306    				jr os_rffsc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  48


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2307    	
                           A  2308    
                           A  2309    ;----------------------------------------------
                           A  2310    
                           A  2311    
0017EB                     A  2312    os_goto_first_dir_entry	
                           A  2313    
0017EB CD 22 59 00         A  2314    				call fs_goto_first_dir_entry
0017EF 18 98               A  2315    				jr os_rffsc
                           A  2316    
                           A  2317    
                           A  2318    ;----------------------------------------------
                           A  2319    
                           A  2320    
0017F1                     A  2321    os_get_dir_entry		
                           A  2322    
0017F1 CD 39 59 00         A  2323    				call fs_get_dir_entry	
0017F5 18 92               A  2324    				jr os_rffsc
                           A  2325    
                           A  2326    
                           A  2327    ;----------------------------------------------
                           A  2328    
                           A  2329    
0017F7                     A  2330    os_goto_next_dir_entry	
                           A  2331    	
0017F7 CD C6 59 00         A  2332    				call fs_goto_next_dir_entry	
0017FB 18 8C               A  2333    				jr os_rffsc
                           A  2334    
                           A  2335    
                           A  2336    ;----------------------------------------------
                           A  2337    
                           A  2338    
0017FD                     A  2339    os_get_current_dir_name
                           A  2340    
0017FD CD 34 5D 00         A  2341    				call fs_get_current_dir_name
001801 18 86               A  2342    				jr os_rffsc
                           A  2343    				
                           A  2344    
                           A  2345    ;----------------------------------------------
                           A  2346    
                           A  2347    
001803 CC A3 16 00         A  2348    ext_rename_file	call z,mbase_hl
001807 CC B4 16 00         A  2349    				call z,mbase_de
                           A  2350    
00180B D5                  A  2351    os_rename_file	push de
00180C CD 68 5C 00         A  2352    				call fs_hl_to_alt_filename		001810 E1                  A  2353    				pop hl				
001811 CD 6E 5C 00         A  2354    				call fs_hl_to_filename	
001815 CD DE 58 00         A  2355    				call fs_rename_command
001819 C3 89 17 00         A  2356    				jr os_rffsc
                           A  2357    				
                           A  2358    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  49


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2359    ;----------------------------------------------
                           A  2360    
                           A  2361    
00181D CC A3 16 00         A  2362    ext_delete_dir	call z,mbase_hl					                           A  2363    
001821 CD 6E 5C 00         A  2364    os_delete_dir	call fs_hl_to_filename
001825 CD 4F 56 00         A  2365    				call fs_delete_dir_command
001829 C3 89 17 00         A  2366    				jp os_rffsc
                           A  2367    	
                           A  2368    	
                           A  2369    ;----- LOW LEVEL SECTOR ACCESS ETC FOR EXTERNAL
                           A  2370    
                           A  2371    
00182D                     A  2372    ext_read_sector
00182D CD 78 18 00         A  2373    				call ext_sector_access_preamble
001831 C0                  A  2374    				ret nz
001832 32 39 6A 00         A  2375    				ld (current_driver),a
001836 CD 0B 5E 00         A  2376    				call fs_read_sector
00183A 20 11               A  2377    				jr nz,sect_done
00183C 38 0F               A  2378    				jr c,sect_done
00183E 21000800            A  2379    				ld hl,sector_buffer
001842 ED5B 49 6A 00       A  2380    				ld de,(sector_rd_wr_addr)
001847 01000200            A  2381    				ld bc,512
00184B EDB0                A  2382    				ldir			
00184D F5                  A  2383    sect_done		push af
00184E 3A 69 6B 00         A  2384    				ld a,(sys_driver_backup)		001852 32 39 6A 00         A  2385    				ld (current_driver),a
001856 F1                  A  2386    				pop af
001857 C3 89 17 00         A  2387    				jp os_rffsc
                           A  2388    				
                           A  2389    
00185B                     A  2390    ext_write_sector
                           A  2391    			
00185B CD 78 18 00         A  2392    				call ext_sector_access_preamble
00185F C0                  A  2393    				ret nz
001860 32 39 6A 00         A  2394    				ld (current_driver),a
001864 2A 49 6A 00         A  2395    				ld hl,(sector_rd_wr_addr)
001868 11000800            A  2396    				ld de,sector_buffer
00186C 01000200            A  2397    				ld bc,512
001870 EDB0                A  2398    				ldir			
001872 CD 34 5E 00         A  2399    				call fs_write_sector
001876 18 D5               A  2400    				jr sect_done
                           A  2401    
                           A  2402    
001878                     A  2403    ext_sector_access_preamble
                           A  2404    
001878 CC A3 16 00         A  2405    				call z,mbase_hl
00187C 22 49 6A 00         A  2406    				ld (sector_rd_wr_addr),hl
                           A  2407    				
001880 78                  A  2408    				ld a,b
001881 F5                  A  2409    				push af							001882 DD21 1B 6C 00       A  2410    				ld ix,sector_lba0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  50


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001887 DD1F00              A  2411    				ld (ix),de						00188A DD7103              A  2412    				ld (ix+3),c
00188D CD 9C 1B 00         A  2413    				call dev_to_driver_lookup		001891 E5                  A  2414    				push hl
001892 DDE1                A  2415    				pop ix
001894 2A 1B 6C 00         A  2416    				ld hl,(sector_lba0)				001898 3A 1E 6C 00         A  2417    				ld a,(sector_lba3)				00189C DD0701              A  2418    				ld bc,(ix+1)					00189F B7                  A  2419    				or a							0018A0 ED42                A  2420    				sbc hl,bc
0018A2 DD9E04              A  2421    				sbc a,(ix+4)
0018A5 38 05               A  2422    				jr c,range_ok
0018A7 F1                  A  2423    				pop af
0018A8 3ED5                A  2424    				ld a,0d5h						0018AA B7                  A  2425    				or a							0018AB C9                  A  2426    				ret
                           A  2427    	
0018AC 3A 39 6A 00         A  2428    range_ok		ld a,(current_driver)
0018B0 32 69 6B 00         A  2429    				ld (sys_driver_backup),a
0018B4 F1                  A  2430    				pop af							0018B5 CD 9C 1B 00         A  2431    				call dev_to_driver_lookup
0018B9 30 02               A  2432    				jr nc,bad_dev
0018BB BF                  A  2433    os_null			cp a							0018BC C9                  A  2434    				ret
                           A  2435    					
0018BD 3ED0                A  2436    bad_dev			ld a,0d0h						0018BF B7                  A  2437    				or a							0018C0 C9                  A  2438    				ret	
                           A  2439    			
                           A  2440    
                           A  2441    ;----------------------------------------------
                           A  2442    
                           A  2443    
0018C1                     A  2444    os_get_device_info
                           A  2445    
0018C1 21 E4 6A 00         A  2446    				ld hl,host_device_hardware_info
0018C5 11 62 43 00         A  2447    				ld de,driver_table
0018C9 3A 3A 6A 00         A  2448    				ld a,(device_count)
0018CD 47                  A  2449    				ld b,a
0018CE 3A 39 6A 00         A  2450    				ld a,(current_driver)
0018D2 BF                  A  2451    				cp a
0018D3 C9                  A  2452    				ret
                           A  2453    
                           A  2454    
                           A  2455    
                           A  2456    
0018D4                     A  2457    os_get_volume_info
                           A  2458    
0018D4 21 64 6A 00         A  2459    				ld hl,volume_mount_list	
0018D8 3A 3B 6A 00         A  2460    				ld a,(volume_count)
0018DC 47                  A  2461    				ld b,a
0018DD 3A 38 6A 00         A  2462    				ld a,(current_volume)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  51


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0018E1 C9                  A  2463    				ret
                           A  2464    				
                           A  2465    		
                           A  2466    ;----------------------------------------------
                           A  2467    
                           A  2468    
0018E2                     A  2469    ext_serial_get_header
                           A  2470    
0018E2 CC A3 16 00         A  2471    				call z,mbase_hl
0018E6 7B                  A  2472    				ld a,e
0018E7 CD CE 4D 00         A  2473    				call serial_get_header
0018EB DDE5                A  2474    				push ix
0018ED D1                  A  2475    				pop de
0018EE C9                  A  2476    				ret
                           A  2477    				
                           A  2478    				
0018EF                     A  2479    ext_serial_receive_file
                           A  2480    				
0018EF CC A3 16 00         A  2481    				call z,mbase_hl
0018F3 CD 69 4E 00         A  2482    				call serial_receive_file
0018F7 C9                  A  2483    				ret
                           A  2484    				
                           A  2485    	
0018F8                     A  2486    ext_serial_send_file
                           A  2487    
0018F8 CC A3 16 00         A  2488    				call z,mbase_hl					0018FC CC B4 16 00         A  2489    				call z,mbase_de					001900 D5                  A  2490    				push de	
001901 DDE1                A  2491    				pop ix							001903 C5                  A  2492    				push bc							001904 D1                  A  2493    				pop de							001905 CD 32 4F 00         A  2494    				call serial_send_file
001909 C9                  A  2495    				ret
                           A  2496    
                           A  2497    
00190A                     A  2498    ext_serial_tx
00190A 7B                  A  2499    				ld a,e
00190B CD 4C 46 00         A  2500    				call send_serial_byte
00190F AF                  A  2501    				xor a							001910 C9                  A  2502    				ret
                           A  2503    
                           A  2504    
001911                     A  2505    ext_serial_rx
001911 7B                  A  2506    				ld a,e
001912 32 08 6A 00         A  2507    				ld (serial_timeout),a
001916 CD 11 46 00         A  2508    				call receive_serial_byte
00191A C9                  A  2509    				ret
                           A  2510    				
                           A  2511    
                           A  2512    ;----------------------------------------------
                           A  2513    
00191B                     A  2514    ext_mount_volumes
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  52


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2515    
00191B 7B                  A  2516    				ld a,e
                           A  2517    
00191C                     A  2518    os_mount_volumes
                           A  2519    				
00191C 32 6A 6B 00         A  2520    				ld (os_quiet_mode),a			                           A  2521    				
001920 21 58 60 00         A  2522    				ld hl,storage_txt
001924 CD 64 10 00         A  2523    				call os_print_string_cond
001928 3A 38 6A 00         A  2524    				ld a,(current_volume)
00192C F5                  A  2525    				push af
00192D CD 63 19 00         A  2526    				call mount_go
001931 F1                  A  2527    				pop af	
001932 32 38 6A 00         A  2528    				ld (current_volume),a			001936 CD DD 1B 00         A  2529    				call fs_set_driver_for_volume	00193A CD 29 52 00         A  2530    				call fs_check_disk_format		00193E 38 01               A  2531    				jr c,m_inv_vol	
001940 C8                  A  2532    				ret z
                           A  2533    
001941 AF                  A  2534    m_inv_vol		xor a							001942 F5                  A  2535    m_try_vol_lp	push af							001943 CD B2 1B 00         A  2536    				call os_change_volume			001947 20 03               A  2537    				jr nz,pmvbad					001949 F1                  A  2538    				pop af
00194A AF                  A  2539    				xor a
00194B C9                  A  2540    				ret
00194C F1                  A  2541    pmvbad			pop af
00194D 3C                  A  2542    				inc a							00194E FE08                A  2543    				cp max_volumes
001950 20 F0               A  2544    				jr nz,m_try_vol_lp
                           A  2545    				
001952 3A 3A 6A 00         A  2546    				ld a,(device_count)
001956 B7                  A  2547    				or a
001957 20 08               A  2548    				jr nz,mfsdevs
001959 21 29 68 00         A  2549    				ld hl,none_found_msg
00195D CD 41 15 00         A  2550    				call os_show_packed_text_cond
001961 AF                  A  2551    mfsdevs			xor a
001962 C9                  A  2552    				ret
                           A  2553    
                           A  2554    
                           A  2555    
001963 21 64 6A 00         A  2556    mount_go		ld hl,volume_mount_list			001967 01800000            A  2557    				ld bc,max_volumes*16
00196B AF                  A  2558    clrdl_lp		xor a
00196C CD 7C 16 00         A  2559    				call os_bchl_memfill
                           A  2560    								
001970 21 4C 6A 00         A  2561    				ld hl,volume_dir_clusters		001974 01180000            A  2562    				ld bc,max_volumes*3		
001978 AF                  A  2563    				xor a	
001979 CD 7C 16 00         A  2564    				call os_bchl_memfill	
                           A  2565    			
00197D 11 E4 6A 00         A  2566    				ld de,host_device_hardware_info
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  53


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001981 ED53 64 6B 00       A  2567    				ld (dhwn_temp_pointer),de
                           A  2568    				
001986 FD21 64 6A 00       A  2569    				ld iy,volume_mount_list
00198B AF                  A  2570    				xor a
00198C 32 3B 6A 00         A  2571    				ld (volume_count),a
001990 32 3A 6A 00         A  2572    				ld (device_count),a
001994 32 39 6A 00         A  2573    mnt_loop		ld (current_driver),a			001998 CD 28 1B 00         A  2574    				call locate_driver_base			00199C 21000000            A  2575    				ld hl,0
0019A0 AF                  A  2576    				xor a
0019A1 ED5A                A  2577    				adc hl,de
0019A3 C8                  A  2578    				ret z							0019A4 EB                  A  2579    				ex de,hl						0019A5 FDE5                A  2580    				push iy
0019A7 CD B8 19 00         A  2581    				call find_dev					0019AB FDE1                A  2582    				pop iy							0019AD CC B9 19 00         A  2583    				call z,got_dev		
0019B1 3A 39 6A 00         A  2584    nxt_drv			ld a,(current_driver)			0019B5 3C                  A  2585    				inc a
0019B6 18 DC               A  2586    				jr mnt_loop
                           A  2587    
                           A  2588    				
0019B8 E9                  A  2589    find_dev		jp (hl)
                           A  2590    			
                           A  2591    			
0019B9 E5                  A  2592    got_dev			push hl							0019BA D5                  A  2593    				push de							0019BB C5                  A  2594    				push bc
0019BC CD 0A 15 00         A  2595    				call os_new_line_cond			0019C0 015B0100            A  2596    				ld bc,015bh
0019C4 CD 39 1B 00         A  2597    				call os_print_multiple_chars_co
0019C8 3A 39 6A 00         A  2598    				ld a,(current_driver)
0019CC CD 28 1B 00         A  2599    				call locate_driver_base
0019D0 210C0000            A  2600    				ld hl,0ch
0019D4 19                  A  2601    				add hl,de
0019D5 CD 64 10 00         A  2602    				call os_print_string_cond		0019D9 015D0100            A  2603    				ld bc,015dh
0019DD CD 39 1B 00         A  2604    				call os_print_multiple_chars_co
0019E1 C1                  A  2605    				pop bc
0019E2 D1                  A  2606    				pop de
0019E3 AF                  A  2607    				xor a
0019E4 32 68 6B 00         A  2608    				ld (vols_on_device_temp),a
                           A  2609    				
0019E8 21 3A 6A 00         A  2610    				ld hl,device_count
0019EC 34                  A  2611    				inc (hl)						0019ED 3A 39 6A 00         A  2612    				ld a,(current_driver)
0019F1 2A 64 6B 00         A  2613    				ld hl,(dhwn_temp_pointer)	
0019F5 77                  A  2614    				ld (hl),a
0019F6 23                  A  2615    				inc hl
0019F7 73                  A  2616    				ld (hl),e						0019F8 FD7304              A  2617    				ld (iy+4),e						0019FB 23                  A  2618    				inc hl							Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  54


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0019FC 72                  A  2619    				ld (hl),d
0019FD FD7205              A  2620    				ld (iy+5),d
001A00 23                  A  2621    				inc hl
001A01 71                  A  2622    				ld (hl),c			
001A02 FD7106              A  2623    				ld (iy+6),c
001A05 23                  A  2624    				inc hl
001A06 70                  A  2625    				ld (hl),b						001A07 23                  A  2626    				inc hl
001A08 D1                  A  2627    				pop de
001A09 EB                  A  2628    				ex de,hl
001A0A 01160000            A  2629    				ld bc,22
001A0E EDB0                A  2630    				ldir							001A10 AF                  A  2631    				xor a
001A11 0605                A  2632    				ld b,5		
001A13 12                  A  2633    clrrode			ld (de),a						001A14 13                  A  2634    				inc de
001A15 10 FC               A  2635    				djnz clrrode
001A17 ED53 64 6B 00       A  2636    				ld (dhwn_temp_pointer),de		                           A  2637    					
001A1C AF                  A  2638    				xor a							001A1D 32 67 6B 00         A  2639    fnxtpart		ld (partition_temp),a
001A21 FDE5                A  2640    				push iy
001A23 CD D6 51 00         A  2641    				call fs_get_partition_info
001A27 FDE1                A  2642    				pop iy
001A29 38 36               A  2643    				jr c,nxt_dev					001A2B FECE                A  2644    				cp 0ceh
001A2D 28 32               A  2645    				jr z,nxt_dev					001A2F FECF                A  2646    				cp 0cfh							001A31 28 2E               A  2647    				jr z,nxt_dev					001A33 F5                  A  2648    				push af
001A34 FD360001            A  2649    				ld (iy),1						001A38 3A 39 6A 00         A  2650    				ld a,(current_driver)
001A3C FD7701              A  2651    				ld (iy+1),a						001A3F 3A 67 6B 00         A  2652    				ld a,(partition_temp)	
001A43 FD7707              A  2653    				ld (iy+7),a						001A46 F1                  A  2654    				pop af
001A47 FED3                A  2655    				cp 0d3h
001A49 20 35               A  2656    				jr nz,dev_mbr					001A4B AF                  A  2657    				xor a
001A4C FD7708              A  2658    				ld (iy+8),a						001A4F FD7709              A  2659    				ld (iy+9),a						001A52 FD770A              A  2660    				ld (iy+10),a					001A55 FD770B              A  2661    				ld (iy+11),a
001A58 CD B7 1A 00         A  2662    				call show_vol_info
001A5C CD A8 1A 00         A  2663    				call test_max_vol
001A60 C8                  A  2664    				ret z							                           A  2665    			
001A61 3A 68 6B 00         A  2666    nxt_dev			ld a,(vols_on_device_temp)		001A65 B7                  A  2667    				or a
001A66 C0                  A  2668    				ret nz		
001A67 CD 09 1B 00         A  2669    				call test_quiet_mode
001A6B 20 06               A  2670    				jr nz,skp_cu
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  55


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001A6D 3E0A                A  2671    				ld a,10
001A6F 32 20 6C 00         A  2672    				ld (cursor_x),a
001A73 21 26 68 00         A  2673    skp_cu			ld hl,no_vols_msg				001A77 CD 41 15 00         A  2674    				call os_show_packed_text_cond
001A7B CD 0A 15 00         A  2675    				call os_new_line_cond
001A7F C9                  A  2676    				ret
                           A  2677    				
001A80 DD1708              A  2678    dev_mbr			ld de,(ix+8)					001A83 FD1F08              A  2679    				ld (iy+8),de
001A86 DD7E0B              A  2680    				ld a,(ix+0bh)					001A89 FD770B              A  2681    				ld (iy+0bh),a
001A8C DD170C              A  2682    				ld de,(ix+0ch)				
001A8F FD1F04              A  2683    				ld (iy+4),de					                           A  2684    					
001A92 CD B7 1A 00         A  2685    				call show_vol_info
001A96 CD A8 1A 00         A  2686    				call test_max_vol	
001A9A C8                  A  2687    				ret z							001A9B 3A 67 6B 00         A  2688    				ld a,(partition_temp)
001A9F 3C                  A  2689    				inc a
001AA0 FE04                A  2690    				cp 4							001AA2 C2 1D 1A 00         A  2691    				jr nz,fnxtpart
001AA6 18 B9               A  2692    				jr nxt_dev
                           A  2693    				
                           A  2694    
001AA8 11100000            A  2695    test_max_vol	ld de,16
001AAC FD19                A  2696    				add iy,de			
001AAE 21 3B 6A 00         A  2697    				ld hl,volume_count
001AB2 34                  A  2698    				inc (hl)
001AB3 7E                  A  2699    				ld a,(hl)
001AB4 FE08                A  2700    				cp max_volumes
001AB6 C9                  A  2701    				ret
                           A  2702    			
                           A  2703    			
001AB7 CD 09 1B 00         A  2704    show_vol_info	call test_quiet_mode
001ABB 20 06               A  2705    				jr nz,skp_cm2
001ABD 3E09                A  2706    				ld a,9			
001ABF 32 20 6C 00         A  2707    				ld (cursor_x),a
001AC3 3A 3B 6A 00         A  2708    skp_cm2			ld a,(volume_count)
001AC7 F5                  A  2709    				push af
001AC8 C630                A  2710    				add a,30h		
001ACA 32 40 6A 00         A  2711    				ld (vol_txt+4),a	
001ACE 21 3C 6A 00         A  2712    				ld hl,vol_txt
001AD2 CD 64 10 00         A  2713    				call os_print_string_cond		001AD6 21 68 6B 00         A  2714    				ld hl,vols_on_device_temp
001ADA CBC6                A  2715    				set 0,(hl)						                           A  2716    			
001ADC F1                  A  2717    				pop af
001ADD FDE5                A  2718    				push iy
001ADF CD B2 1B 00         A  2719    				call os_change_volume			001AE3 28 0A               A  2720    				jr z,vform_ok					001AE5 21 D6 67 00         A  2721    svi_fe			ld hl,format_err_msg		
001AE9 CD 41 15 00         A  2722    svi_pem			call os_show_packed_text_cond	Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  56


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001AED 18 0D               A  2723    				jr skpsvl
                           A  2724    			
001AEF CD 1D 5A 00         A  2725    vform_ok		call fs_get_volume_label
001AF3 38 0E               A  2726    				jr c,svi_hwe
001AF5 B7                  A  2727    				or a
001AF6 20 ED               A  2728    				jr nz,svi_fe
001AF8 CD 64 10 00         A  2729    				call os_print_string_cond		                           A  2730    			
001AFC CD 0A 15 00         A  2731    skpsvl			call os_new_line_cond
001B00 FDE1                A  2732    				pop iy
001B02 C9                  A  2733    				ret
                           A  2734    				
001B03 21 1B 66 00         A  2735    svi_hwe			ld hl,disk_err_msg
001B07 18 E0               A  2736    				jr svi_pem
                           A  2737    			
                           A  2738    			
001B09                     A  2739    test_quiet_mode
                           A  2740    			
001B09 3A 6A 6B 00         A  2741    				ld a,(os_quiet_mode)
001B0D B7                  A  2742    				or a
001B0E C9                  A  2743    				ret
                           A  2744    
                           A  2745    ;----------------------------------------------
                           A  2746    
                           A  2747    
001B0F                     A  2748    show_dev_driver_name
                           A  2749    	
                           A  2750    	
001B0F CD 28 1B 00         A  2751    				call locate_driver_base			001B13 EB                  A  2752    				ex de,hl
001B14 110C0000            A  2753    				ld de,0ch
001B18 19                  A  2754    				add hl,de
001B19 CD 69 10 00         A  2755    				call os_print_string			001B1D C5                  A  2756    				push bc
001B1E 01200100            A  2757    				ld bc,0120h
001B22 CD 3E 1B 00         A  2758    				call os_print_multiple_chars	001B26 C1                  A  2759    				pop bc
001B27 C9                  A  2760    				ret
                           A  2761    
                           A  2762    
001B28                     A  2763    locate_driver_base
                           A  2764    
001B28 E5                  A  2765    				push hl							001B29 11030000            A  2766    				ld de,3							001B2D 57                  A  2767    				ld d,a
001B2E ED5C                A  2768    				mlt de
001B30 21 62 43 00         A  2769    				ld hl,driver_table
001B34 19                  A  2770    				add hl,de
001B35 ED17                A  2771    				ld de,(hl)
001B37 E1                  A  2772    				pop hl
001B38 C9                  A  2773    				ret
                           A  2774    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  57


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2775    		
                           A  2776    ;----------------------------------------------
                           A  2777    
001B39                     A  2778    os_print_multiple_chars_cond
                           A  2779    
001B39 CD 09 1B 00         A  2780    				call test_quiet_mode
001B3D C0                  A  2781    				ret nz
                           A  2782    			
001B3E                     A  2783    os_print_multiple_chars
                           A  2784    
                           A  2785    ;c = char
                           A  2786    ;b = count
001B3E C5                  A  2787    				push bc
001B3F E5                  A  2788    				push hl
001B40 79                  A  2789    				ld a,c
001B41 21 C9 60 00         A  2790    				ld hl,rep_char_txt
001B45 77                  A  2791    				ld (hl),a
001B46 E5                  A  2792    pmch_lp			push hl
001B47 CD 69 10 00         A  2793    				call os_print_string
001B4B E1                  A  2794    				pop hl
001B4C 10 F8               A  2795    				djnz pmch_lp
001B4E E1                  A  2796    				pop hl
001B4F C1                  A  2797    				pop bc
001B50 C9                  A  2798    				ret
                           A  2799    
                           A  2800    ;----------------------------------------------
                           A  2801    
                           A  2802    
001B51 7B                  A  2803    ext_plot_char	ld a,e
001B52 C3 88 47 00         A  2804    				jp hwsc_plot_char
                           A  2805    				
                           A  2806    
                           A  2807    ;----------------------------------------------
                           A  2808    ; Some file system related routines 
                           A  2809    ;----------------------------------------------
                           A  2810    
                           A  2811    
001B56                     A  2812    fs_get_dir_cluster
                           A  2813    
                           A  2814    
001B56 F5                  A  2815    				push af							001B57 E5                  A  2816    				push hl			
001B58 CD 6E 1B 00         A  2817    				call fs_get_dir_cluster_address
001B5C ED17                A  2818    				ld de,(hl)
001B5E E1                  A  2819    dclopdone		pop hl
001B5F F1                  A  2820    				pop af
001B60 BF                  A  2821    				cp a							001B61 C9                  A  2822    				ret
                           A  2823    				
                           A  2824    
                           A  2825    
                           A  2826    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  58


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2827    
001B62                     A  2828    fs_update_dir_cluster
                           A  2829    
001B62 F5                  A  2830    				push af							001B63 E5                  A  2831    				push hl			
001B64 D5                  A  2832    				push de			
001B65 CD 6E 1B 00         A  2833    				call fs_get_dir_cluster_address
001B69 D1                  A  2834    				pop de
001B6A ED1F                A  2835    				ld (hl),de
001B6C 18 F0               A  2836    				jr dclopdone
                           A  2837    			
                           A  2838    
                           A  2839    
                           A  2840    
                           A  2841    
001B6E                     A  2842    fs_get_dir_cluster_address
                           A  2843    
001B6E 21 4C 6A 00         A  2844    				ld hl,volume_dir_clusters		001B72 3A 38 6A 00         A  2845    				ld a,(current_volume)	
001B76 11030000            A  2846    				ld de,3
001B7A 57                  A  2847    				ld d,a
001B7B ED5C                A  2848    				mlt de
001B7D 19                  A  2849    				add hl,de
001B7E C9                  A  2850    				ret
                           A  2851    				
                           A  2852    	
                           A  2853    
                           A  2854    	
                           A  2855    	
001B7F                     A  2856    fs_get_total_sectors
                           A  2857    
                           A  2858    
001B7F F5                  A  2859    				push af
001B80 E5                  A  2860    				push hl							001B81 CD 90 1B 00         A  2861    				call fs_calc_volume_offset	
001B85 21 68 6A 00         A  2862    				ld hl,volume_mount_list+4
001B89 19                  A  2863    				add hl,de
001B8A ED17                A  2864    				ld de,(hl)
001B8C E1                  A  2865    				pop hl
001B8D F1                  A  2866    				pop af
001B8E BF                  A  2867    				cp a							001B8F C9                  A  2868    				ret
                           A  2869    
                           A  2870    
                           A  2871    
                           A  2872    
                           A  2873    
001B90                     A  2874    fs_calc_volume_offset
                           A  2875    
001B90 3A 38 6A 00         A  2876    				ld a,(current_volume)			001B94 11100000            A  2877    calc_vol		ld de,16
001B98 57                  A  2878    				ld d,a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  59


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001B99 ED5C                A  2879    				mlt de
001B9B C9                  A  2880    				ret
                           A  2881    
                           A  2882    
                           A  2883    
                           A  2884    
                           A  2885    
001B9C                     A  2886    dev_to_driver_lookup
                           A  2887    
001B9C 21 3A 6A 00         A  2888    				ld hl,device_count				001BA0 BE                  A  2889    				cp (hl)							001BA1 D0                  A  2890    				ret nc
001BA2 11200000            A  2891    				ld de,32						001BA6 57                  A  2892    				ld d,a
001BA7 ED5C                A  2893    				mlt de
001BA9 21 E4 6A 00         A  2894    				ld hl,host_device_hardware_info
001BAD 19                  A  2895    				add hl,de
001BAE 7E                  A  2896    				ld a,(hl)
001BAF 37                  A  2897    				scf
001BB0 C9                  A  2898    				ret
                           A  2899    				
                           A  2900    
                           A  2901    
001BB1                     A  2902    ext_change_volume
                           A  2903    
001BB1 7B                  A  2904    				ld a,e
                           A  2905    
001BB2                     A  2906    os_change_volume
                           A  2907    
001BB2 47                  A  2908    				ld b,a							001BB3 FE08                A  2909    				cp max_volumes		
001BB5 30 22               A  2910    				jr nc,fs_ccv2					                           A  2911    			
001BB7 3A 38 6A 00         A  2912    				ld a,(current_volume)			001BBB F5                  A  2913    				push af
001BBC 78                  A  2914    				ld a,b
001BBD 32 38 6A 00         A  2915    				ld (current_volume),a			001BC1 CD DD 1B 00         A  2916    				call fs_set_driver_for_volume	                           A  2917    				
001BC5 CD 29 52 00         A  2918    				call fs_check_disk_format		001BC9 38 05               A  2919    				jr c,fs_cant_chg_vols	
001BCB 20 03               A  2920    				jr nz,fs_cant_chg_vols
001BCD F1                  A  2921    				pop af							001BCE AF                  A  2922    				xor a							001BCF C9                  A  2923    				ret
                           A  2924    
                           A  2925    
001BD0                     A  2926    fs_cant_chg_vols
                           A  2927    			
001BD0 F1                  A  2928    				pop af
001BD1 32 38 6A 00         A  2929    				ld (current_volume),a			001BD5 CD DD 1B 00         A  2930    				call fs_set_driver_for_volume	Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  60


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2931    				
001BD9 3ECF                A  2932    fs_ccv2			ld a,0cfh						001BDB B7                  A  2933    				or a
001BDC C9                  A  2934    				ret
                           A  2935    					
                           A  2936    	
001BDD                     A  2937    fs_set_driver_for_volume
                           A  2938    
001BDD CD 90 1B 00         A  2939    				call fs_calc_volume_offset		001BE1 21 65 6A 00         A  2940    				ld hl,volume_mount_list+1
001BE5 19                  A  2941    				add hl,de
001BE6 7E                  A  2942    				ld a,(hl)
001BE7 32 39 6A 00         A  2943    				ld (current_driver),a
001BEB C9                  A  2944    				ret
                           A  2945    
                           A  2946    
                           A  2947    ;----------------------------------------------
                           A  2948    
001BEC                     A  2949    ext_file_sector_list
                           A  2950    
                           A  2951    ;Input HL = cluster, E = sector offset
                           A  2952    
                           A  2953    ;Output HL = new cluster, E = new sector number
                           A  2954    ;       IX = address of LBA0 LSB of sector (int
                           A  2955    
                           A  2956    				
001BEC 3A AC 5E 00         A  2957    				ld a,(fs_cluster_size)
001BF0 BB                  A  2958    				cp e
001BF1 20 0A               A  2959    				jr nz,fsl_sc
001BF3 CD B3 5C 00         A  2960    				call get_fat_entry_for_cluster
001BF7 DA 26 17 00         A  2961    				jp c,os_fferr
001BFB 1E00                A  2962    				ld e,0
001BFD CD 8A 5D 00         A  2963    fsl_sc			call cluster_and_offset_to_lba
001C01 1C                  A  2964    				inc e
001C02 01 1B 6C 00         A  2965    fsl_done		ld bc,sector_lba0
001C06 BF                  A  2966    				cp a							001C07 C9                  A  2967    				ret
                           A  2968    
                           A  2969    ;----------------------------------------------
                           A  2970    
001C08                     A  2971    os_get_disk_sector_ptr
                           A  2972     
001C08 21 1B 6C 00         A  2973    				ld hl,sector_lba0
001C0C 11000800            A  2974    				ld de,sector_buffer
001C10 BF                  A  2975    				cp a
001C11 C9                  A  2976    				ret
                           A  2977    				
                           A  2978    ;----------------------------------------------
                           A  2979    
                           A  2980    
001C12 E5                  A  2981    os_count_chars	push hl							001C13 01000000            A  2982    				ld bc,0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  61


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001C17 7E                  A  2983    cch_lp			ld a,(hl)
001C18 B7                  A  2984    				or a
001C19 28 04               A  2985    				jr z,cch_end
001C1B 23                  A  2986    				inc hl
001C1C 03                  A  2987    				inc bc
001C1D 18 F8               A  2988    				jr cch_lp
001C1F E1                  A  2989    cch_end			pop hl
001C20 C9                  A  2990    				ret
                           A  2991    				
                           A  2992    			
                           A  2993    ;----------------------------------------------
                           A  2994    ; Environment variable code V0.01
                           A  2995    ;----------------------------------------------
                           A  2996    
001C21                     A  2997    ext_get_envar
001C21 CC A3 16 00         A  2998    				call z,mbase_hl
                           A  2999    
001C25                     A  3000    os_get_envar
                           A  3001    
                           A  3002    ;Set: 		HL = name of required variable
                           A  3003    ;Returns:	ZF Set: DE = address of variable's 
                           A  3004    ;        	ZF Not Set: Couldn't find variable
                           A  3005    				
001C25 DD21FF01 00         A  3006    				ld ix,envar_list-1
001C2A CD 12 1C 00         A  3007    env_fname		call os_count_chars				001C2E 78                  A  3008    				ld a,b
001C2F B1                  A  3009    				or c
001C30 28 27               A  3010    				jr z,env_bad
                           A  3011    								
001C32 ED1201              A  3012    env_cname		lea de,ix+1
001C35 1A                  A  3013    				ld a,(de)
001C36 FEFF                A  3014    				cp 0ffh
001C38 28 1F               A  3015    				jr z,env_bad
001C3A C5                  A  3016    				push bc
001C3B 41                  A  3017    				ld b,c
001C3C CD 36 13 00         A  3018    				call os_compare_strings
001C40 C1                  A  3019    				pop bc
001C41 20 06               A  3020    				jr nz,env_nomatch
001C43 03                  A  3021    				inc bc							001C44 EB                  A  3022    				ex de,hl
001C45 09                  A  3023    				add hl,bc
001C46 EB                  A  3024    				ex de,hl						001C47 AF                  A  3025    				xor a
001C48 C9                  A  3026    				ret			
                           A  3027    				
001C49 DD23                A  3028    env_nomatch		inc ix							001C4B CD F1 1C 00         A  3029    				call check_envar_bounds
001C4F 20 08               A  3030    				jr nz,env_bad
001C51 DD7E00              A  3031    				ld a,(ix)
001C54 B7                  A  3032    				or a
001C55 28 DB               A  3033    				jr z,env_cname
001C57 18 F0               A  3034    				jr env_nomatch
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  62


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  3035    
001C59 3E82                A  3036    env_bad			ld a,82h						001C5B B7                  A  3037    				or a
001C5C C9                  A  3038    				ret	
                           A  3039    				
                           A  3040    ;----------------------------------------------
                           A  3041    
001C5D                     A  3042    ext_set_envar
                           A  3043    
                           A  3044    ;HL = addr of variable name (zero terminated)
                           A  3045    ;DE = addr of data for variable (zero terminate
                           A  3046    
                           A  3047    ;Returns:
                           A  3048    ;ZF = Set: OK
                           A  3049    ;ZF = Not Set: No enough space for new variable
                           A  3050    		
001C5D CC A3 16 00         A  3051    				call z,mbase_hl
001C61 CC B4 16 00         A  3052    				call z,mbase_de
                           A  3053    
001C65 7E                  A  3054    os_set_envar	ld a,(hl)						001C66 B7                  A  3055    				or a
001C67 28 F0               A  3056    				jr z,env_bad
001C69 1A                  A  3057    				ld a,(de)
001C6A B7                  A  3058    				or a
001C6B 28 EC               A  3059    				jr z,env_bad
                           A  3060    
001C6D E5                  A  3061    				push hl
001C6E D5                  A  3062    				push de
001C6F CD BB 1C 00         A  3063    				call os_delete_envar			001C73 D1                  A  3064    				pop de
001C74 E1                  A  3065    				pop hl
                           A  3066    				
001C75 DD2A A3 6D 00       A  3067    				ld ix,(envar_top_loc)			001C7A CD F1 1C 00         A  3068    env_enlp		call check_envar_bounds
001C7E 20 D9               A  3069    				jr nz,env_bad
001C80 7E                  A  3070    				ld a,(hl)						001C81 DD7700              A  3071    				ld (ix),a
001C84 B7                  A  3072    				or a
001C85 28 05               A  3073    				jr z,env_ndone
001C87 23                  A  3074    				inc hl
001C88 DD23                A  3075    				inc ix
001C8A 18 EE               A  3076    				jr env_enlp
                           A  3077    				
001C8C CD F1 1C 00         A  3078    env_ndone		call check_envar_bounds			001C90 20 C7               A  3079    				jr nz,env_bad
001C92 DD36003D            A  3080    				ld (ix),'='
001C96 DD23                A  3081    				inc ix
                           A  3082    
001C98 CD F1 1C 00         A  3083    env_evlp		call check_envar_bounds			001C9C 20 BB               A  3084    				jr nz,env_bad
001C9E 1A                  A  3085    				ld a,(de)
001C9F DD7700              A  3086    				ld (ix),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  63


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001CA2 B7                  A  3087    				or a
001CA3 28 05               A  3088    				jr z,env_vdone
001CA5 13                  A  3089    				inc de
001CA6 DD23                A  3090    				inc ix
001CA8 18 EE               A  3091    				jr env_evlp
                           A  3092    
001CAA DD23                A  3093    env_vdone		inc ix
001CAC DD3600FF            A  3094    				ld (ix),0ffh
001CB0 DD22 A3 6D 00       A  3095    				ld (envar_top_loc),ix			001CB5 AF                  A  3096    				xor a
001CB6 C9                  A  3097    				ret
                           A  3098    
                           A  3099    	
                           A  3100    ;----------------------------------------------
                           A  3101    
001CB7                     A  3102    ext_delete_envar
                           A  3103    
001CB7 CC A3 16 00         A  3104    				call z,mbase_hl
                           A  3105    
001CBB                     A  3106    os_delete_envar
                           A  3107    
                           A  3108    ;HL = name of required variable (null terminate
                           A  3109    ;ZF = Set: OK
                           A  3110    ;ZF = Not Set: Didnt find named variable
                           A  3111    
                           A  3112    
001CBB CD 25 1C 00         A  3113    				call os_get_envar				001CBF C0                  A  3114    				ret nz
                           A  3115    				
001CC0 D5                  A  3116    				push de
001CC1 E1                  A  3117    				pop hl
001CC2 AF                  A  3118    				xor a
001CC3 ED42                A  3119    				sbc hl,bc						                           A  3120    				
001CC5 13                  A  3121    env_fnxt		inc de							001CC6 D5                  A  3122    				push de
001CC7 DDE1                A  3123    				pop ix
001CC9 CD F1 1C 00         A  3124    				call check_envar_bounds
001CCD 20 8A               A  3125    				jr nz,env_bad
001CCF 1A                  A  3126    				ld a,(de)
001CD0 B7                  A  3127    				or a
001CD1 20 F2               A  3128    				jr nz,env_fnxt
                           A  3129    
001CD3 13                  A  3130    env_gnxt		inc de							001CD4 EB                  A  3131    				ex de,hl
001CD5 7E                  A  3132    env_collp		ld a,(hl)
001CD6 12                  A  3133    				ld (de),a						001CD7 FEFF                A  3134    				cp 0ffh
001CD9 28 0F               A  3135    				jr z,env_clspd					001CDB E5                  A  3136    				push hl
001CDC DDE1                A  3137    				pop ix
001CDE CD F1 1C 00         A  3138    				call check_envar_bounds
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  64


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001CE2 C2 59 1C 00         A  3139    				jr nz,env_bad
001CE6 23                  A  3140    				inc hl
001CE7 13                  A  3141    				inc de
001CE8 18 EB               A  3142    				jr env_collp
                           A  3143    
001CEA ED53 A3 6D 00       A  3144    env_clspd		ld (envar_top_loc),de			001CEF AF                  A  3145    				xor a
001CF0 C9                  A  3146    				ret
                           A  3147    				
                           A  3148    ;----------------------------------------------
                           A  3149    
001CF1                     A  3150    check_envar_bounds
                           A  3151    
001CF1 C5                  A  3152    				push bc
001CF2 E5                  A  3153    				push hl
001CF3 DDE5                A  3154    				push ix
001CF5 E1                  A  3155    				pop hl
001CF6 01010400            A  3156    				ld bc,1+(envar_list+envar_buffe
001CFA AF                  A  3157    				xor a
001CFB ED42                A  3158    				sbc hl,bc
001CFD 38 05               A  3159    				jr c,env_bok
001CFF AF                  A  3160    				xor a
001D00 3C                  A  3161    				inc a
001D01 E1                  A  3162    				pop hl
001D02 C1                  A  3163    				pop bc
001D03 C9                  A  3164    				ret
                           A  3165    
001D04 AF                  A  3166    env_bok			xor a
001D05 E1                  A  3167    				pop hl
001D06 C1                  A  3168    				pop bc
001D07 C9                  A  3169    				ret
                           A  3170    						
                           A  3171    ;----------------------------------------------
                           A  3172    
001D08                     A  3173    os_get_keymap_location
                           A  3174    
001D08 21 84 68 00         A  3175    				ld hl,unshifted_keymap
001D0C BF                  A  3176    				cp a							001D0D C9                  A  3177    				ret
                           A  3178    
                           A  3179    
                           A  3180    ;----------------------------------------------
                           A  3181    
                           A  3182    
001D0E CC A3 16 00         A  3183    ext_play_audio	call z,mbase_hl
                           A  3184    				
001D12 CD 96 4C 00         A  3185    os_play_audio	call hwsc_play_audio
001D16 C9                  A  3186    				ret
                           A  3187    				
                           A  3188    ;----------------------------------------------
                           A  3189    
001D17 E5                  A  3190    test_de			push hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  65


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001D18 21000000            A  3191    				ld hl,0
001D1C ED5A                A  3192    				adc hl,de
001D1E E1                  A  3193    				pop hl
001D1F C9                  A  3194    				ret
                           A  3195    
                           A  3196    ;==============================================
                           A  3197    ; Internal OS command routines
                           A  3198    ;==============================================
                           A  3199    
                           B     0    	include 'commands\c.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"c" - Copy memory command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
001D20                     B     5    os_cmd_c
                           B     6    
001D20 CD 56 1D 00         B     7    				call get_start_and_end			                           B     8    				
001D24 CD 7F 1D 00         B     9    				call hexword_or_bust			001D28 CA 0B 17 00         B    10    				jp z,os_no_d_addr_error
001D2C ED53 2E 6C 00       B    11    				ld (copy_dest_address),de
                           B    12    						
001D31 CD 44 1D 00         B    13    				call test_mem_range				001D35 DA 0F 17 00         B    14    				jp c,os_range_error				001D39 ED5B 2E 6C 00       B    15    				ld de,(copy_dest_address)
001D3E EDB0                B    16    				ldir
                           B    17    
001D40 3E20                B    18    copy_done		ld a,020h						001D42 B7                  B    19    				or a
001D43 C9                  B    20    				ret
                           B    21    			
                           B    22    			
                           B    23    ;----------------------------------------------
                           B    24    			
001D44                     B    25    test_mem_range
                           B    26    			
                           B    27    ; on return:
                           B    28    ;
                           B    29    ; carry flag: Set = bad range
                           B    30    ; xBC = run length on return
                           B    31    ; xHL = start address
                           B    32    			
001D44 2A 2B 6C 00         B    33    				ld hl,(cmdop_end_address)	
001D48 ED4B 28 6C 00       B    34    				ld bc,(cmdop_start_address)
001D4D C5                  B    35    				push bc
001D4E AF                  B    36    				xor a
001D4F ED42                B    37    				sbc hl,bc
001D51 E5                  B    38    				push hl
001D52 C1                  B    39    				pop bc
001D53 03                  B    40    				inc bc
001D54 E1                  B    41    				pop hl
001D55 C9                  B    42    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  66


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\c.asm
                           B    43    				
                           B    44    ;----------------------------------------------
                           B    45    			
001D56                     B    46    get_start_and_end
                           B    47    			
001D56 CD E6 11 00         B    48    				call ascii_to_hexword			001D5A ED53 28 6C 00       B    49    				ld (cmdop_start_address),de
001D5F 23                  B    50    				inc hl
001D60 28 09               B    51    				jr z,st_addrok
001D62 E1                  B    52    				pop hl							001D63 FE82                B    53    				cp 82h							001D65 28 02               B    54    				jr z,c_badhex
001D67 3E16                B    55    				ld a,016h						001D69 B7                  B    56    c_badhex		or a
001D6A C9                  B    57    				ret
                           B    58    				
001D6B CD E6 11 00         B    59    st_addrok		call ascii_to_hexword			001D6F ED53 2B 6C 00       B    60    				ld (cmdop_end_address),de
001D74 23                  B    61    				inc hl
001D75 B7                  B    62    				or a
001D76 C8                  B    63    				ret z
001D77 E1                  B    64    				pop hl							001D78 FE82                B    65    				cp 82h							001D7A 28 ED               B    66    				jr z,c_badhex
001D7C 3E1C                B    67    				ld a,01ch						001D7E C9                  B    68    				ret
                           B    69    				
                           B    70    ;----------------------------------------------
                           B    71    
001D7F                     B    72    hexword_or_bust
                           B    73    
                           B    74    ; Set HL to string address:
                           B    75    ; Returns to parent routine ONLY if the string 
                           B    76    ; DE = hex word. If no hex found, the zero flag
                           B    77    ; If chars are invalid hex, returns to grandpar
                           B    78    
001D7F CD E6 11 00         B    79    				call ascii_to_hexword		
001D83 FE82                B    80    				cp 82h
001D85 20 03               B    81    				jr nz,hex_good
001D87 E1                  B    82    				pop hl						; r
001D88 B7                  B    83    				or a	
001D89 C9                  B    84    				ret			 
001D8A FE81                B    85    hex_good		cp 081h						; n
001D8C C9                  B    86    				ret
                           B    87    	
                           B    88    ;----------------------------------------------
                           B    89    
                           B     0    	include 'commands\cd.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'cd' - Change Dir command. V0.03 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  67


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\cd.asm
001D8D                     B     5    os_cmd_cd	
                           B     6    
001D8D CD 83 17 00         B     7    				call os_check_volume_format	
001D91 C0                  B     8    				ret nz
                           B     9    				
001D92 7E                  B    10    				ld a,(hl)						001D93 B7                  B    11    				or a				
001D94 CA D3 1D 00         B    12    				jp z,cd_show_path		
                           B    13    					
001D98 7E                  B    14    				ld a,(hl)						001D99 23                  B    15    				inc hl
001D9A 46                  B    16    				ld b,(hl)
001D9B 2B                  B    17    				dec hl
001D9C FE2E                B    18    				cp '.'			
001D9E 20 08               B    19    				jr nz,cd_nual
001DA0 B8                  B    20    				cp b
001DA1 20 05               B    21    				jr nz,cd_nual
001DA3 CD D1 17 00         B    22    				call os_parent_dir	
001DA7 C9                  B    23    				ret
                           B    24    			
                           B    25    			
001DA8 FE2F                B    26    cd_nual			cp 02fh			
001DAA 20 05               B    27    				jr nz,cd_nogor					001DAC CD D7 17 00         B    28    				call os_root_dir	
001DB0 C9                  B    29    				ret
                           B    30    				
                           B    31    				
001DB1 CD 8D 0F 00         B    32    cd_nogor		call test_volx					001DB5 20 0C               B    33    				jr nz,notvolx
001DB7 D630                B    34    				sub 30h
001DB9 CD B2 1B 00         B    35    				call os_change_volume
001DBD C0                  B    36    				ret nz
001DBE CD D7 17 00         B    37    				call os_root_dir
001DC2 C9                  B    38    				ret
                           B    39    				
                           B    40    				
001DC3 CD 1E 3D 00         B    41    notvolx			call os_cache_original_vol_dir
001DC7 3E01                B    42    				ld a,1
001DC9 CD 9F 3C 00         B    43    				call os_parse_path_string
001DCD C8                  B    44    				ret z
001DCE CD 09 3D 00         B    45    				call os_restore_original_vol_di
001DD2 C9                  B    46    				ret
                           B    47    				
                           B    48    ;----------------------------------------------
                           B    49    			
001DD3                     B    50    cd_show_path
                           B    51    			
                           B    52    			
       00000010            B    53    max_dirs	equ 16
                           B    54    			
001DD3 0610                B    55    				ld b,max_dirs
001DD5 0E00                B    56    				ld c,0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  68


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\cd.asm
001DD7 C5                  B    57    lp1				push bc
001DD8 CD 56 1B 00         B    58    				call fs_get_dir_cluster
001DDC C1                  B    59    				pop bc
001DDD D5                  B    60    				push de
001DDE 0C                  B    61    				inc c
001DDF C5                  B    62    				push bc
001DE0 CD D1 17 00         B    63    				call os_parent_dir
001DE4 C1                  B    64    				pop bc
001DE5 20 02               B    65    				jr nz,shdir_lp
001DE7 10 EE               B    66    				djnz lp1
                           B    67    				
001DE9 D1                  B    68    shdir_lp		pop de
001DEA C5                  B    69    				push bc
001DEB CD 62 1B 00         B    70    				call fs_update_dir_cluster
001DEF CD FD 17 00         B    71    				call os_get_current_dir_name
001DF3 CD 69 10 00         B    72    				call os_print_string
001DF7 C1                  B    73    				pop bc
001DF8 0D                  B    74    				dec c
001DF9 28 11               B    75    				jr z,cd_sp_done
001DFB 2B                  B    76    				dec hl
001DFC 2B                  B    77    				dec hl
001DFD 7E                  B    78    				ld a,(hl)
001DFE FE3A                B    79    				cp ':'
001E00 28 E7               B    80    				jr z,shdir_lp				;no
001E02 21 12 1E 00         B    81    				ld hl,cd_fwdslash_txt
001E06 CD 69 10 00         B    82    				call os_print_string
001E0A 18 DD               B    83    				jr shdir_lp
                           B    84    			
001E0C CD 0F 15 00         B    85    cd_sp_done		call os_new_line	
001E10 AF                  B    86    				xor a
001E11 C9                  B    87    				ret
                           B    88    			
001E12 2F00                B    89    cd_fwdslash_txt	db '/',0	
                           B    90    			
                           B    91    ;----------------------------------------------
                           B     0    	include 'commands\cls.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"cls" - Clear screen command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
001E14                     B     5    os_cmd_cls
                           B     6    
001E14 CD 12 47 00         B     7    				call hwsc_clear_screen
001E18 AF                  B     8    				xor a
001E19 C9                  B     9    				ret
                           B    10    				
                           B    11    ;----------------------------------------------
                           B    12    	
                           B     0    	include 'commands\colon.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;":" for write hex bytes command. V0.02 - ADL m
                           B     3    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  69


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\colon.asm
                           B     4    
001E1A                     B     5    os_cmd_colon
                           B     6    	
001E1A CD 7F 1D 00         B     7    				call hexword_or_bust			001E1E CA FB 16 00         B     8    				jp z,os_no_start_addr			001E22 D5                  B     9    				push de
001E23 DDE1                B    10    				pop ix							                           B    11    			
001E25 CD 7F 1D 00         B    12    wmblp			call hexword_or_bust			001E29 28 07               B    13    				jr z,os_ccmdn
001E2B DD7300              B    14    				ld (ix),e						001E2E DD23                B    15    				inc ix
001E30 18 F3               B    16    				jr wmblp
                           B    17    
001E32 AF                  B    18    os_ccmdn		xor a
001E33 C9                  B    19    				ret
                           B    20    		
                           B    21    
                           B    22    ;----------------------------------------------
                           B     0    	include 'commands\d.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; OS "D" Command: EZ80 Disassembler V0.02
                           B     3    ; Totally and utterly unoptimized!
                           B     4    ;----------------------------------------------
                           B     5    
001E34 FD21 1B 24 00       B     6    os_cmd_d		ld iy,prefix_bits_loc
001E39 FDCB 07 C6          B     7    				set adl_dis,(iy+var_adl)
                           B     8    
001E3D CD 7F 1D 00         B     9    os_cmd_d_go		call hexword_or_bust			001E41 28 05               B    10    				jr z,d_no_hex					001E43 ED53 92 29 00       B    11    				ld (dis_addr),de
                           B    12    				
001E48 3A DA 69 00         B    13    d_no_hex		ld a,(charmap_rows)				001E4C D602                B    14    				sub a,2
001E4E 47                  B    15    				ld b,a
001E4F C5                  B    16    dis_loop		push bc
                           B    17    				
001E50 DD2A 92 29 00       B    18    				ld ix,(dis_addr)				001E55 CD FD 23 00         B    19    				call show_ix					001E59 3E20                B    20    				ld a,' '
001E5B CD F1 23 00         B    21    				call show_ascii_char
                           B    22    
001E5F FD21 1B 24 00       B    23    				ld iy,prefix_bits_loc
001E64 FD360000            B    24    				ld (iy),0						001E68 CD A4 1E 00         B    25    				call dis_instr					001E6C DD23                B    26    				inc ix							                           B    27    				
001E6E 3E1A                B    28    				ld a,26							001E70 32 20 6C 00         B    29    				ld (cursor_pos+1),a				001E74 ED4B 92 29 00       B    30    				ld bc,(dis_addr)
001E79 DD22 92 29 00       B    31    				ld (dis_addr),ix				001E7E DDE5                B    32    				push ix
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  70


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
001E80 E1                  B    33    				pop hl
001E81 AF                  B    34    				xor a
001E82 ED42                B    35    				sbc hl,bc						001E84 7D                  B    36    				ld a,l
001E85 E607                B    37    				and 7
001E87 6F                  B    38    				ld l,a
001E88 0A                  B    39    shexoplp		ld a,(bc)						001E89 CD E0 23 00         B    40    				call show_hex_byte
001E8D 3E20                B    41    				ld a,' '
001E8F CD F1 23 00         B    42    				call show_ascii_char
001E93 03                  B    43    				inc bc
001E94 2D                  B    44    				dec l
001E95 20 F1               B    45    				jr nz,shexoplp
                           B    46    				
001E97 CD 0F 15 00         B    47    				call os_new_line
001E9B C1                  B    48    				pop bc
001E9C 10 B1               B    49    				djnz dis_loop
                           B    50    
001E9E CD 0F 15 00         B    51    				call os_new_line
001EA2 AF                  B    52    				xor a
001EA3 C9                  B    53    				ret
                           B    54    
                           B    55    
                           B    56    ;- Handle op code prefixes --------------------
                           B    57    			
       00000000            B    58    cb_prefix			equ 0					
       00000001            B    59    ed_prefix			equ 1
       00000002            B    60    sub_ix_prefix		equ 2
       00000003            B    61    sub_iy_prefix		equ 3
       00000004            B    62    ddcb_fdcb_prefix	equ 4					; p
       00000005            B    63    dot_l_prefix		equ 5
       00000006            B    64    il_prefix			equ 6
       00000007            B    65    show_adl_prefix		equ 7
                           B    66    
       00000000            B    67    adl_dis				equ 0					; b
                           B    68    
                           B    69    
001EA4 DD7E00              B    70    dis_instr	ld a,(ix)						; c
                           B    71    			
001EA7 FDCB 07 46          B    72    			bit adl_dis,(iy+var_adl)		; i
001EAB 28 04               B    73    			jr z,z80_list					; T
001EAD FDCB00F6            B    74    			set il_prefix,(iy)				; a
001EB1                     B    75    z80_list			
                           B    76    			
                           B    77    ;----------------------------------------------
                           B    78    
001EB1 FE40                B    79    			cp 40h
001EB3 20 0A               B    80    			jr nz,not_sis
001EB5 FDCB00B6            B    81    			res il_prefix,(iy)
001EB9 FDCB00AE            B    82    			res dot_l_prefix,(iy)
001EBD 18 28               B    83    			jr set_adl_pf
                           B    84    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  71


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
001EBF FE49                B    85    not_sis		cp 49h
001EC1 20 0A               B    86    			jr nz,not_lis
001EC3 FDCB00B6            B    87    			res il_prefix,(iy)
001EC7 FDCB00EE            B    88    			set dot_l_prefix,(iy)
001ECB 18 1A               B    89    			jr set_adl_pf
                           B    90    			
001ECD FE52                B    91    not_lis		cp 52h
001ECF 20 0A               B    92    			jr nz,not_sil
001ED1 FDCB00F6            B    93    			set il_prefix,(iy)
001ED5 FDCB00AE            B    94    			res dot_l_prefix,(iy)
001ED9 18 0C               B    95    			jr set_adl_pf
                           B    96    			
001EDB FE5B                B    97    not_sil		cp 5bh
001EDD 20 11               B    98    			jr nz,not_adl_prefix_byte
001EDF FDCB00F6            B    99    			set il_prefix,(iy)
001EE3 FDCB00EE            B   100    			set dot_l_prefix,(iy)
                           B   101    			
001EE7 FDCB00FE            B   102    set_adl_pf	set show_adl_prefix,(iy)
001EEB DD23                B   103    			inc ix
001EED DD7E00              B   104    			ld a,(ix)	
                           B   105    			
                           B   106    ;----------------------------------------------
                           B   107    
001EF0                     B   108    not_adl_prefix_byte			
                           B   109    			
001EF0 FECB                B   110    			cp 0cbh								001EF2 20 08               B   111    			jr nz,not_cb
001EF4 FDCB00C6            B   112    do_cb		set cb_prefix,(iy)
001EF8 DD23                B   113    			inc ix
001EFA 18 3A               B   114    			jr not_traditional_prefix_byte
                           B   115    
001EFC FEED                B   116    not_cb		cp 0edh
001EFE 20 08               B   117    			jr nz,not_ed
001F00 FDCB00CE            B   118    do_ed		set ed_prefix,(iy)
001F04 DD23                B   119    			inc ix
001F06 18 2E               B   120    			jr not_traditional_prefix_byte
                           B   121    
001F08 FEDD                B   122    not_ed		cp 0ddh
001F0A 20 18               B   123    			jr nz,not_dd
001F0C CD 3F 21 00         B   124    do_dd		call check_nxt_byte_prefix			001F10 28 92               B   125    			jr z,dis_instr						001F12 FDCB00D6            B   126    			set sub_ix_prefix,(iy)
001F16 FECB                B   127    xdcb_query	cp 0cbh								001F18 20 1C               B   128    			jr nz,not_traditional_prefix_byte	001F1A FDCB00E6            B   129    			set ddcb_fdcb_prefix,(iy)
001F1E DD23                B   130    			inc ix								001F20 DD23                B   131    			inc ix								001F22 18 12               B   132    			jr not_traditional_prefix_byte
                           B   133    
001F24 FEFD                B   134    not_dd		cp 0fdh
001F26 20 0E               B   135    			jr nz,not_traditional_prefix_byte
001F28 CD 3F 21 00         B   136    do_fd		call check_nxt_byte_prefix
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  72


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
001F2C CA A4 1E 00         B   137    			jr z,dis_instr	
001F30 FDCB00DE            B   138    			set sub_iy_prefix,(iy)
001F34 18 E0               B   139    			jr xdcb_query
                           B   140    
001F36                     B   141    not_traditional_prefix_byte
                           B   142    
                           B   143    ;----------------------------------------------
                           B   144    
001F36 DD7E00              B   145    			ld a,(ix)	
001F39 E6C0                B   146    			and 11000000b			; seperate 
001F3B 07                  B   147    			rlca
001F3C 07                  B   148    			rlca
001F3D FD77 01             B   149    			ld (iy+var_x),a			;var x= val
                           B   150    			
001F40 DD7E00              B   151    			ld a,(ix)
001F43 E638                B   152    			and 00111000b
001F45 CB3F                B   153    			srl a
001F47 CB3F                B   154    			srl a
001F49 CB3F                B   155    			srl a	
001F4B FD77 02             B   156    			ld (iy+var_y),a			;var x = vl
                           B   157    
001F4E DD7E00              B   158    			ld a,(ix)
001F51 E607                B   159    			and 00000111b
001F53 FD77 03             B   160    			ld (iy+var_z),a			;var z = va
                           B   161    			
001F56 DD7E00              B   162    			ld a,(ix)
001F59 E630                B   163    			and 00110000b
001F5B CB3F                B   164    			srl a
001F5D CB3F                B   165    			srl a
001F5F CB3F                B   166    			srl a
001F61 CB3F                B   167    			srl a
001F63 FD77 04             B   168    			ld (iy+var_p),a			; var p = v
                           B   169    			
001F66 DD7E00              B   170    			ld a,(ix)
001F69 E608                B   171    			and 00001000b
001F6B CB3F                B   172    			srl a
001F6D CB3F                B   173    			srl a
001F6F CB3F                B   174    			srl a
001F71 FD77 05             B   175    			ld (iy+var_q),a				;var q 
                           B   176    
001F74 CD 4D 21 00         B   177    			call find_instruction_ascii		; g
                           B   178    	
                           B   179    ;----------------------------------------------
                           B   180    
001F78 78                  B   181    index_table	ld a,b							; a
001F79 B7                  B   182    			or a
001F7A 28 07               B   183    			jr z,parse_instr				; m
001F7C CB7E                B   184    d_filp		bit 7,(hl)						; w
001F7E 23                  B   185    			inc hl							; o
001F7F 28 FB               B   186    			jr z,d_filp					
001F81 10 F9               B   187    			djnz d_filp
                           B   188    										
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  73


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   189    			
001F83 FD21 1B 24 00       B   190    parse_instr	ld iy,opcode_vars
001F88 01000000            B   191    			ld bc,0
001F8C 7E                  B   192    			ld a,(hl)						;ge
001F8D FE80                B   193    			cp 80h
001F8F C8                  B   194    			ret z
001F90 E67F                B   195    			and 7fh
                           B   196    			
001F92 FE26                B   197    			cp '&'							;sy
001F94 20 28               B   198    			jr nz,not_adlsym
001F96 FDCB007E            B   199    			bit show_adl_prefix,(iy)		;do
001F9A CA 28 21 00         B   200    			jr z,next_opcode_ascii_char
001F9E 0600                B   201    			ld b,0
001FA0 FDCB006E            B   202    			bit dot_l_prefix,(iy)
001FA4 28 02               B   203    			jr z,naplsb
001FA6 CBC0                B   204    			set 0,b
001FA8 FDCB0076            B   205    naplsb		bit il_prefix,(iy)
001FAC 28 02               B   206    			jr z,napmsb
001FAE CBC8                B   207    			set 1,b
001FB0 E5                  B   208    napmsb		push hl
001FB1 21 7A 29 00         B   209    			ld hl,adl_prefix_list
001FB5 CD 78 1F 00         B   210    			call index_table				; r
001FB9 E1                  B   211    			pop hl
001FBA C3 28 21 00         B   212    			jp next_opcode_ascii_char
                           B   213    
001FBE FE5E                B   214    not_adlsym	cp '^'							;sy
001FC0 20 0D               B   215    			jr nz,d_not_imm8
001FC2 DD23                B   216    			inc ix							;th
001FC4 DD7E00              B   217    			ld a,(ix)
001FC7 CD E0 23 00         B   218    			call show_hex_byte
001FCB C3 28 21 00         B   219    			jp next_opcode_ascii_char
                           B   220    					
001FCF FE21                B   221    d_not_imm8	cp '!'							;sy
001FD1 20 26               B   222    			jr nz,d_not_imm16					001FD3 11020000            B   223    			ld de,2
001FD7 FDCB0076            B   224    			bit il_prefix,(iy)				;ad
001FDB 28 08               B   225    			jr z,imm16
001FDD 13                  B   226    			inc de
001FDE DD7E03              B   227    			ld a,(ix+3)
001FE1 CD E0 23 00         B   228    			call show_hex_byte
001FE5 DD7E02              B   229    imm16		ld a,(ix+2)						;sh
001FE8 CD E0 23 00         B   230    			call show_hex_byte			
001FEC DD7E01              B   231    			ld a,(ix+1)						;th
001FEF CD E0 23 00         B   232    			call show_hex_byte
001FF3 DD19                B   233    			add ix,de						;ad
001FF5 C3 28 21 00         B   234    			jp next_opcode_ascii_char
                           B   235    
001FF9 FE2F                B   236    d_not_imm16	cp '/'							;sy
001FFB 20 36               B   237    			jr nz,d_not_sb
001FFD FDCB0066            B   238    			bit ddcb_fdcb_prefix,(iy)
002001 28 05               B   239    			jr z,norm_dbyte
002003 DD7EFF              B   240    			ld a,(ix-1)						;if
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  74


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002006 18 05               B   241    			jr xdcb_dbyte
002008 DD23                B   242    norm_dbyte	inc ix
00200A DD7E00              B   243    			ld a,(ix)						;th
00200D CB7F                B   244    xdcb_dbyte	bit 7,a
00200F 20 10               B   245    			jr nz,d_sbin					;sh
002011 F5                  B   246    			push af
002012 3E2B                B   247    			ld a,'+'
002014 CD F1 23 00         B   248    			call show_ascii_char
002018 F1                  B   249    			pop af
002019 CD E0 23 00         B   250    			call show_hex_byte
00201D C3 28 21 00         B   251    			jp next_opcode_ascii_char
002021 F5                  B   252    d_sbin		push af
002022 3E2D                B   253    			ld a,'-'
002024 CD F1 23 00         B   254    			call show_ascii_char
002028 F1                  B   255    			pop af
002029 ED44                B   256    			neg
00202B CD E0 23 00         B   257    			call show_hex_byte
00202F C3 28 21 00         B   258    			jp next_opcode_ascii_char
                           B   259    			
002033 FE64                B   260    d_not_sb	cp 'd'							;sy
002035 20 1E               B   261    			jr nz,d_not_pcdip
002037 DD23                B   262    			inc ix
002039 01000000            B   263    			ld bc,0
00203D DD7E00              B   264    			ld a,(ix)
002040 CB7F                B   265    			bit 7,a
002042 28 01               B   266    			jr z,d_spcd_pos
002044 0B                  B   267    			dec bc
002045 4F                  B   268    d_spcd_pos	ld c,a
002046 03                  B   269    			inc bc
002047 DDE5                B   270    			push ix
002049 DD09                B   271    			add ix,bc
00204B CD FD 23 00         B   272    			call show_ix
00204F DDE1                B   273    			pop ix
002051 C3 28 21 00         B   274    			jp next_opcode_ascii_char
                           B   275    
002055 FE3E                B   276    d_not_pcdip	cp '>'							;sy
002057 20 16               B   277    			jr nz,d_not_sdig
002059 23                  B   278    			inc hl							;th
00205A 01000000            B   279    			ld bc,0
00205E 4E                  B   280    			ld c,(hl)
00205F FD21 1B 24 00       B   281    			ld iy,opcode_vars
002064 FD09                B   282    			add iy,bc
002066 FD7E00              B   283    			ld a,(iy)						;a 
002069 C630                B   284    			add a,30h						;co
00206B C3 24 21 00         B   285    			jp d_output_char
                           B   286    
00206F FE5F                B   287    d_not_sdig	cp '_'
002071 20 12               B   288    			jr nz,d_nhlsubst				; s
002073 E5                  B   289    			push hl
002074 21 52 29 00         B   290    			ld hl,hl_subs
002078 CD 30 21 00         B   291    hl_subst	call prefix_to_offset
00207C CD 78 1F 00         B   292    			call index_table				; r
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  75


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002080 E1                  B   293    			pop hl
002081 C3 28 21 00         B   294    			jp next_opcode_ascii_char
                           B   295    			
002085 FE7C                B   296    d_nhlsubst	cp '|'
002087 20 07               B   297    			jr nz,d_noinvhls
002089 E5                  B   298    			push hl
00208A 21 58 29 00         B   299    			ld hl,inv_hl_subs
00208E 18 E8               B   300    			jr hl_subst
                           B   301    			
002090 FE68                B   302    d_noinvhls	cp 'h'							;sy
002092 20 07               B   303    			jr nz,d_nhsubst
002094 E5                  B   304    			push hl
002095 21 5E 29 00         B   305    			ld hl,h_subs
002099 18 DD               B   306    			jr hl_subst
                           B   307    			
00209B FE6C                B   308    d_nhsubst	cp 'l'							;sy
00209D 20 07               B   309    			jr nz,d_nlsubst
00209F E5                  B   310    			push hl
0020A0 21 65 29 00         B   311    			ld hl,l_subs
0020A4 18 D2               B   312    			jr hl_subst
                           B   313    			
0020A6 FE24                B   314    d_nlsubst	cp '$'
0020A8 20 07               B   315    			jr nz,d_nihlsubst				; s
0020AA E5                  B   316    			push hl
0020AB 21 6C 29 00         B   317    			ld hl,ind_hl_subs
0020AF 18 C7               B   318    			jr hl_subst
                           B   319    
                           B   320    
0020B1                     B   321    d_nihlsubst	
                           B   322    
0020B1 FE7E                B   323    			cp '~'							; s
0020B3 20 1F               B   324    			jr nz,ntable_r
0020B5 11 A7 28 00         B   325    			ld de,table_r
0020B9 23                  B   326    do_table 	inc hl
0020BA 01000000            B   327    			ld bc,0							; t
0020BE 4E                  B   328    			ld c,(hl)
0020BF FD21 1B 24 00       B   329    			ld iy,opcode_vars
0020C4 FD09                B   330    			add iy,bc
0020C6 FD4600              B   331    			ld b,(iy)						;in
0020C9 E5                  B   332    			push hl
0020CA EB                  B   333    			ex de,hl
0020CB CD 78 1F 00         B   334    			call index_table				; r
0020CF E1                  B   335    			pop hl
0020D0 C3 28 21 00         B   336    			jp next_opcode_ascii_char
                           B   337    			
0020D4 11 B2 28 00         B   338    ntable_r	ld de,table_r2					; s
0020D8 FE3D                B   339    			cp '='
0020DA 28 DD               B   340    			jr z,do_table
                           B   341    			
0020DC 11 BD 28 00         B   342    			ld de,table_rp					; s
0020E0 FE40                B   343    			cp '@'
0020E2 28 D5               B   344    			jr z,do_table 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  76


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   345    			
0020E4 11 C4 28 00         B   346    			ld de,table_rp2					; s
0020E8 FE2A                B   347    			cp '*'
0020EA 28 CD               B   348    			jr z,do_table
                           B   349    			
0020EC 11 2A 29 00         B   350    			ld de,table_rp3					; s
0020F0 FE3C                B   351    			cp '<'
0020F2 28 C5               B   352    			jr z,do_table
                           B   353    			
0020F4 11 32 29 00         B   354    			ld de,table_rp4					; s
0020F8 FE7D                B   355    			cp '}'
0020FA 28 BD               B   356    			jr z,do_table
                           B   357    			
0020FC 11 CC 28 00         B   358    			ld de,table_cc					; s
002100 FE23                B   359    			cp '#'
002102 28 B5               B   360    			jr z,do_table 
                           B   361    			
002104 11 D8 28 00         B   362    			ld de,table_alu					; s
002108 FE3A                B   363    			cp ':'
00210A 28 AD               B   364    			jr z,do_table 
                           B   365    			
00210C 11 04 29 00         B   366    			ld de,table_rot					; s
002110 FE25                B   367    			cp '%'
002112 28 A5               B   368    			jr z,do_table 
                           B   369    			
002114 11 42 29 00         B   370    			ld de,table_rst					; s
002118 FE3B                B   371    			cp ';'
00211A 28 9D               B   372    			jr z,do_table 
                           B   373    
00211C 11 3A 29 00         B   374    			ld de,table_rp5					; s
002120 FE7B                B   375    			cp '{'
002122 28 95               B   376    			jr z,do_table 
                           B   377    
002124                     B   378    ntable_bli
                           B   379    
                           B   380    ;----------------------------------------------
                           B   381    
002124                     B   382    d_output_char
                           B   383    
002124 CD F1 23 00         B   384    			call show_ascii_char
                           B   385    
002128                     B   386    next_opcode_ascii_char
                           B   387    
002128 CB7E                B   388    			bit 7,(hl)						;if
00212A C0                  B   389    			ret nz
00212B 23                  B   390    			inc hl
00212C C3 83 1F 00         B   391    			jp parse_instr
                           B   392    			
                           B   393    			
                           B   394    ;----------------------------------------------
                           B   395    
                           B   396    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  77


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002130                     B   397    prefix_to_offset
                           B   398    
002130 0602                B   399    			ld b,2							;se
002132 FDCB005E            B   400    			bit sub_iy_prefix,(iy)
002136 C0                  B   401    			ret nz
002137 05                  B   402    			dec b
002138 FDCB0056            B   403    			bit sub_ix_prefix,(iy)
00213C C0                  B   404    			ret nz
00213D 05                  B   405    			dec b
00213E C9                  B   406    			ret
                           B   407    			
                           B   408    			
00213F                     B   409    check_nxt_byte_prefix			
                           B   410    
00213F DD23                B   411    			inc ix
002141 DD7E00              B   412    			ld a,(ix)
002144 FEDD                B   413    			cp 0ddh
002146 C8                  B   414    			ret z
002147 FEED                B   415    			cp 0edh
002149 C8                  B   416    			ret z
00214A FEFD                B   417    			cp 0fdh
00214C C9                  B   418    			ret
                           B   419    			
                           B   420    			
                           B   421    ;==============================================
                           B   422    ;- Find instruction ascii ---------------------
                           B   423    ;==============================================
                           B   424    
                           B   425    ; Returns HL = ptr to ascii name
                           B   426    ;          B = group index (number of instructi
                           B   427    
00214D                     B   428    find_instruction_ascii
                           B   429    
00214D 0600                B   430    			ld b,0						; defau
                           B   431    
00214F FDCB0066            B   432    			bit ddcb_fdcb_prefix,(iy)	; Was t
002153 28 12               B   433    			jr z,not_ddcb_fdcb_inst
002155 21 81 28 00         B   434    			ld hl,ddcb_fdcb_z6		
002159 FD46 01             B   435    			ld b,(iy+var_x)				; x is 
00215C FD7E 03             B   436    			ld a,(iy+var_z)
00215F FE06                B   437    			cp 6
002161 C8                  B   438    			ret z
002162 21 49 28 00         B   439    			ld hl,ddcb_fdcb_zn6					002166 C9                  B   440    			ret
                           B   441    			
                           B   442    ;==============================================
                           B   443    
002167                     B   444    not_ddcb_fdcb_inst
                           B   445    
002167 FDCB0046            B   446    			bit cb_prefix,(iy)			;is thi
00216B 28 08               B   447    			jr z,not_cb_inst
00216D 21 D1 25 00         B   448    			ld hl,cb_group		
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  78


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002171 FD46 01             B   449    			ld b,(iy+var_x)				; x is 
002174 C9                  B   450    			ret
                           B   451    
                           B   452    ;==============================================
                           B   453    
002175                     B   454    not_cb_inst
                           B   455    
002175 FDCB004E            B   456    			bit ed_prefix,(iy)			;is thi
002179 CA 9A 22 00         B   457    			jr z,not_ed_inst
                           B   458    
00217D FD7E 01             B   459    			ld a,(iy+var_x)				;x = 0
002180 B7                  B   460    			or a
002181 20 56               B   461    			jr nz,notedx0
                           B   462    		
                           B   463    			
002183 FD7E 03             B   464    			ld a,(iy+var_z)				
002186 B7                  B   465    			or a
002187 20 0D               B   466    			jr nz,notedx0z0
002189 21 F8 25 00         B   467    			ld hl,ed_x0_z0_yn6			;x0 / z
00218D FD7E 02             B   468    			ld a,(iy+var_y)
002190 FE06                B   469    			cp 6
002192 C0                  B   470    			ret nz
002193 0601                B   471    			ld b,1
002195 C9                  B   472    			ret
                           B   473    
002196 FE01                B   474    notedx0z0	cp 1
002198 20 0D               B   475    			jr nz,notedx0z1
00219A 21 09 26 00         B   476    			ld hl,ed_x0_z1				;x0 / z
00219E FD7E 02             B   477    			ld a,(iy+var_y)
0021A1 FE06                B   478    			cp 6
0021A3 C0                  B   479    			ret nz
0021A4 0601                B   480    			ld b,1
0021A6 C9                  B   481    			ret
                           B   482    
0021A7 FE02                B   483    notedx0z1	cp 2
0021A9 20 05               B   484    			jr nz,notedx0z2
0021AB 21 1F 26 00         B   485    			ld hl,ed_x0_z2				;x0 / z
0021AF C9                  B   486    			ret
                           B   487    
0021B0 FE03                B   488    notedx0z2	cp 3
0021B2 20 05               B   489    			jr nz,notedx0z3
0021B4 21 2B 26 00         B   490    			ld hl,ed_x0_z3				;x0 / z
0021B8 C9                  B   491    			ret
                           B   492    			
0021B9 FE04                B   493    notedx0z3	cp 4
0021BB 20 05               B   494    			jr nz,notedx0z4
0021BD 21 37 26 00         B   495    			ld hl,ed_x0_z4				;x0 / z
0021C1 C9                  B   496    			ret
                           B   497    
0021C2 FE06                B   498    notedx0z4	cp 6
0021C4 20 05               B   499    			jr nz,notedx0z6				;x0 / z
0021C6 21 41 26 00         B   500    			ld hl,ed_x0_z6
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  79


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0021CA C9                  B   501    			ret
                           B   502    
0021CB FE07                B   503    notedx0z6	cp 7
0021CD C2 A4 28 00         B   504    			jr nz,bad_opcode			;x0 / z
0021D1 21 4C 26 00         B   505    			ld hl,ed_x0_z7
0021D5 FD46 05             B   506    			ld b,(iy+var_q)
0021D8 C9                  B   507    			ret
                           B   508    			
                           B   509    ;----------------------------------------------
                           B   510    			
0021D9 FE01                B   511    notedx0		cp 1	
0021DB 20 68               B   512    			jr nz,ed_xn1
                           B   513    
0021DD FD7E 03             B   514    			ld a,(iy+var_z)					;x 
0021E0 B7                  B   515    			or a
0021E1 20 0D               B   516    			jr nz,ed_x1_zn0
0021E3 21 61 26 00         B   517    			ld hl,ed_x1_z0_yn6				;z 
0021E7 FD7E 02             B   518    			ld a,(iy+var_y)
0021EA FE06                B   519    			cp 6
0021EC C0                  B   520    			ret nz
0021ED 0601                B   521    			ld b,1
0021EF C9                  B   522    			ret
                           B   523    			
0021F0 FE01                B   524    ed_x1_zn0	cp 1
0021F2 20 0D               B   525    			jr nz,ed_x1_zn1
0021F4 21 71 26 00         B   526    			ld hl,ed_x1_z1_yn6				;z 
0021F8 FD7E 02             B   527    			ld a,(iy+var_y)
0021FB FE06                B   528    			cp 6
0021FD C0                  B   529    			ret nz
0021FE 0601                B   530    			ld b,1
002200 C9                  B   531    			ret
                           B   532    		
002201 FE02                B   533    ed_x1_zn1	cp 2
002203 20 08               B   534    			jr nz,ed_x1_zn2					;z 
002205 21 86 26 00         B   535    			ld hl,ed_x1_z2	
002209 FD46 05             B   536    			ld b,(iy+var_q)
00220C C9                  B   537    			ret
                           B   538    
00220D FE03                B   539    ed_x1_zn2	cp 3
00220F 20 08               B   540    			jr nz,ed_x1_zn3					;z 
002211 21 9C 26 00         B   541    			ld hl,ed_x1_z3	
002215 FD46 05             B   542    			ld b,(iy+var_q)
002218 C9                  B   543    			ret
                           B   544    			
002219 FE04                B   545    ed_x1_zn3	cp 4							;z 
00221B 20 08               B   546    			jr nz,ed_x1_zn4
00221D 21 B1 26 00         B   547    			ld hl,ed_x1_z4
002221 FD46 02             B   548    			ld b,(iy+var_y)
002224 C9                  B   549    			ret
                           B   550    			
002225 FE05                B   551    ed_x1_zn4	cp 5
002227 20 08               B   552    			jr nz,ed_x1_zn5
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  80


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002229 21 E9 26 00         B   553    			ld hl,ed_x1_z5					;z 
00222D FD46 02             B   554    			ld b,(iy+var_y)
002230 C9                  B   555    			ret
                           B   556    			
002231 FE06                B   557    ed_x1_zn5	cp 6
002233 20 08               B   558    			jr nz,ed_x1_zn6					;z=
002235 21 18 27 00         B   559    			ld hl,ed_x1_z6
002239 FD46 02             B   560    			ld b,(iy+var_y)
00223C C9                  B   561    			ret
                           B   562    			
00223D 21 3D 27 00         B   563    ed_x1_zn6	ld hl,ed_x1_z7					;z=
002241 FD46 02             B   564    			ld b,(iy+var_y)
002244 C9                  B   565    			ret
                           B   566    
                           B   567    ;----------------------------------------------
                           B   568    				
002245 FE02                B   569    ed_xn1		cp 2
002247 20 2E               B   570    			jr nz,ed_xn2
                           B   571    			
002249 FD46 02             B   572    			ld b,(iy+var_y)
00224C FD7E 03             B   573    			ld a,(iy+var_z)
00224F B7                  B   574    			or a
002250 20 05               B   575    			jr nz,edx2zn0
002252 21 61 27 00         B   576    			ld hl,ed_x2_z0					;x=
002256 C9                  B   577    			ret
                           B   578    
002257 FE01                B   579    edx2zn0		cp 1
002259 20 05               B   580    			jr nz,edx2zn1
00225B 21 7B 27 00         B   581    			ld hl,ed_x2_z1					;x=
00225F C9                  B   582    			ret
                           B   583    
002260 FE02                B   584    edx2zn1		cp 2
002262 20 05               B   585    			jr nz,edx2zn2
002264 21 95 27 00         B   586    			ld hl,ed_x2_z2					;x=
002268 C9                  B   587    			ret
                           B   588    
002269 FE03                B   589    edx2zn2		cp 3
00226B 20 05               B   590    			jr nz,edx2zn3
00226D 21 C5 27 00         B   591    			ld hl,ed_x2_z3					;x=
002271 C9                  B   592    			ret
                           B   593    
002272 21 F7 27 00         B   594    edx2zn3		ld hl,ed_x2_z4					;x=
002276 C9                  B   595    			ret
                           B   596    
                           B   597    ;----------------------------------------------
                           B   598    
002277 FE03                B   599    ed_xn2		cp 3
002279 20 18               B   600    			jr nz,ed_xn3
                           B   601    			
00227B FD46 02             B   602    			ld b,(iy+var_y)
00227E FD7E 03             B   603    			ld a,(iy+var_z)
002281 FE02                B   604    			cp 2
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  81


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002283 20 05               B   605    			jr nz,edx3zn2
002285 21 2D 28 00         B   606    			ld hl,ed_x3_z2					;x=
002289 C9                  B   607    			ret
00228A FE03                B   608    edx3zn2		cp 3
00228C 20 05               B   609    			jr nz,edx3zn3
00228E 21 3B 28 00         B   610    			ld hl,ed_x3_z3					;x=
002292 C9                  B   611    			ret
                           B   612    
002293                     B   613    edx3zn3
                           B   614    
002293                     B   615    ed_xn3
                           B   616    
                           B   617    ;----------------------------------------------
                           B   618    
002293                     B   619    invalid_op
002293 21 A4 28 00         B   620    			ld hl,bad_opcode				; x
002297 0600                B   621    			ld b,0
002299 C9                  B   622    			ret
                           B   623    			
                           B   624    			
                           B   625    ;========= UNPREFIXED INSTRUCTION =============
                           B   626    
                           B   627    
00229A FD7E 01             B   628    not_ed_inst	ld a,(iy+var_x)				; is X 
00229D B7                  B   629    			or a
00229E C2 36 23 00         B   630    			jr nz,x_not_zero
                           B   631    
                           B   632    ;----------------------------------------------
                           B   633    
                           B   634    
0022A2 FD7E 03             B   635    			ld a,(iy+var_z)				;x = 0
0022A5 B7                  B   636    			or a
0022A6 20 14               B   637    			jr nz,x0_z_not_zero
0022A8 21 23 24 00         B   638    			ld hl,x0_z0
0022AC FD7E 02             B   639    			ld a,(iy+var_y)				;y is t
0022AF 47                  B   640    			ld b,a
0022B0 D604                B   641    			sub 4
0022B2 FD77 06             B   642    			ld (iy+var_calc),a			;var_ca
0022B5 78                  B   643    			ld a,b
0022B6 FE04                B   644    			cp 4
0022B8 D8                  B   645    			ret c
0022B9 0604                B   646    			ld b,4						;if y >
0022BB C9                  B   647    			ret
                           B   648    			
0022BC                     B   649    x0_z_not_zero		
                           B   650    			
0022BC FE01                B   651    			cp 1
0022BE 20 1A               B   652    			jr nz,x0_z_not_one
0022C0 FD7E 02             B   653    			ld a,(iy+var_y)				;x=0/z=
0022C3 FE06                B   654    			cp 6
0022C5 20 0B               B   655    			jr nz,x0z1yn6
0022C7 CD D6 23 00         B   656    			call test_ixiy_prefix		;if y=6
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  82


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0022CB 28 05               B   657    			jr z,x0z1yn6				;altern
0022CD 21 56 24 00         B   658    			ld hl,x0_z1_y6
0022D1 C9                  B   659    			ret
                           B   660    
0022D2 21 43 24 00         B   661    x0z1yn6		ld hl,x0_z1					;x=0, z
0022D6 FD46 05             B   662    			ld b,(iy+var_q)				;q is t
0022D9 C9                  B   663    			ret 
                           B   664    			
0022DA                     B   665    x0_z_not_one
                           B   666    
0022DA FE02                B   667    			cp 2
0022DC 20 08               B   668    			jr nz,x0_z_not_two
0022DE 21 5E 24 00         B   669    			ld hl,x0_z2
0022E2 FD46 02             B   670    			ld b,(iy+var_y)				;y is t
0022E5 C9                  B   671    			ret
                           B   672    			
0022E6                     B   673    x0_z_not_two
                           B   674    
0022E6 FE03                B   675    			cp 3
0022E8 20 08               B   676    			jr nz,x0_z_not_three
0022EA 21 AA 24 00         B   677    			ld hl,x0_z3
0022EE FD46 05             B   678    			ld b,(iy+var_q)				;q is t
0022F1 C9                  B   679    			ret
                           B   680    			
0022F2                     B   681    x0_z_not_three
                           B   682    
0022F2 FE04                B   683    			cp 4
0022F4 20 05               B   684    			jr nz,x0_z_not_four
0022F6 21 BA 24 00         B   685    			ld hl,x0_z4					;no ini
0022FA C9                  B   686    			ret			
                           B   687    			
0022FB                     B   688    x0_z_not_four
                           B   689    
0022FB FE05                B   690    			cp 5
0022FD 20 05               B   691    			jr nz,x0_z_not_five
0022FF 21 C2 24 00         B   692    			ld hl,x0_z5					;no ini
002303 C9                  B   693    			ret				
                           B   694    			
002304                     B   695    x0_z_not_five
                           B   696    
002304 FE06                B   697    			cp 6
002306 20 1A               B   698    			jr nz,x0_z_not_six
002308 21 CA 24 00         B   699    			ld hl,x0_z6					;normal
00230C FD7E 02             B   700    			ld a,(iy+var_y)
00230F FE07                B   701    			cp 7
002311 C0                  B   702    			ret nz
002312 FDCB0056            B   703    			bit sub_ix_prefix,(iy)
002316 20 05               B   704    			jr nz,altx0z6
002318 FDCB005E            B   705    			bit sub_iy_prefix,(iy)
00231C C8                  B   706    			ret z	
00231D 21 D3 24 00         B   707    altx0z6		ld hl,alt_x0_z6				;if dd/
002321 C9                  B   708    			ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  83


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   709    
                           B   710    
002322                     B   711    x0_z_not_six
                           B   712    			
002322 21 DB 24 00         B   713    			ld hl,x0_z7					;x=0, z
002326 FD46 02             B   714    			ld b,(iy+var_y)				;y is n
002329 CD D6 23 00         B   715    			call test_ixiy_prefix
00232D C8                  B   716    			ret z
00232E 21 F5 24 00         B   717    altx0z7		ld hl,alt_x0_z7				;if dd/
002332 FD46 05             B   718    			ld b,(iy+var_q)				;this i
002335 C9                  B   719    			ret
                           B   720    
                           B   721    ;----------------------------------------------
                           B   722    
002336 FE01                B   723    x_not_zero	cp 1						; is x 
002338 20 32               B   724    			jr nz,x_not_one
                           B   725    			
00233A 21 07 25 00         B   726    			ld hl,x1_table				; x=1
00233E CD D6 23 00         B   727    			call test_ixiy_prefix
002342 20 11               B   728    			jr nz,pref_x1
002344 FD7E 02             B   729    			ld a,(iy+var_y)
002347 FE06                B   730    			cp 6
002349 C0                  B   731    			ret nz
00234A FD7E 03             B   732    			ld a,(iy+var_z)
00234D FE06                B   733    			cp 6
00234F C0                  B   734    			ret nz
002350 21 25 25 00         B   735    			ld hl,x1_y6_z6				;if y=6
002354 C9                  B   736    			ret
                           B   737    
002355 FD7E 02             B   738    pref_x1		ld a,(iy+var_y)				
002358 FE06                B   739    			cp 6
00235A 20 05               B   740    			jr nz,x1yn6
00235C 21 11 25 00         B   741    			ld hl,x1_y6
002360 C9                  B   742    			ret
                           B   743    			
002361 FD7E 03             B   744    x1yn6		ld a,(iy+var_z)
002364 FE06                B   745    			cp 6
002366 C0                  B   746    			ret nz
002367 21 1B 25 00         B   747    			ld hl,x1_z6
00236B C9                  B   748    			ret
                           B   749    			
                           B   750    ;----------------------------------------------
                           B   751    			
00236C FE02                B   752    x_not_one	cp 2						; is x 
00236E 20 05               B   753    			jr nz,x_not_two
002370 21 29 25 00         B   754    			ld hl,x2_table				; no in
002374 C9                  B   755    			ret
                           B   756    			
                           B   757    ;----------------------------------------------
                           B   758    
002375 FD7E 03             B   759    x_not_two	ld a,(iy+var_z)				; x mus
002378 B7                  B   760    			or a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  84


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002379 20 05               B   761    			jr nz,x3_z_not_zero
00237B 21 2E 25 00         B   762    			ld hl,x3_z0					; no in
00237F C9                  B   763    			ret
                           B   764    						
002380                     B   765    x3_z_not_zero
                           B   766    
002380 FE01                B   767    			cp 1
002382 20 11               B   768    			jr nz,x3_z_not_one
002384 21 36 25 00         B   769    			ld hl,x3_z1_q0
002388 FD7E 05             B   770    			ld a,(iy+var_q)
00238B B7                  B   771    			or a
00238C C8                  B   772    			ret z						; no in
00238D 21 3E 25 00         B   773    			ld hl,x3_z1_q1
002391 FD46 04             B   774    			ld b,(iy+var_p)				; index
002394 C9                  B   775    			ret
                           B   776    
002395                     B   777    x3_z_not_one
                           B   778    
002395 FE02                B   779    			cp 2
002397 20 05               B   780    			jr nz,x3_z_not_two
002399 21 55 25 00         B   781    			ld hl,x3_z2					;no ini
00239D C9                  B   782    			ret
                           B   783    
00239E                     B   784    x3_z_not_two
                           B   785    
00239E FE03                B   786    			cp 3
0023A0 20 08               B   787    			jr nz,x3_z_not_three
0023A2 21 5E 25 00         B   788    			ld hl,x3_z3
0023A6 FD46 02             B   789    			ld b,(iy+var_y)				;index 
0023A9 C9                  B   790    			ret
                           B   791    
0023AA                     B   792    x3_z_not_three
                           B   793    
0023AA FE04                B   794    			cp 4
0023AC 20 05               B   795    			jr nz,x3_z_not_four
0023AE 21 93 25 00         B   796    			ld hl,x3_z4				;no initial
0023B2 C9                  B   797    			ret						
                           B   798    
                           B   799    
0023B3                     B   800    x3_z_not_four
                           B   801    
0023B3 FE05                B   802    			cp 5
0023B5 20 11               B   803    			jr nz,x3_z_not_five
0023B7 21 9E 25 00         B   804    			ld hl,x3_z5_q0
0023BB FD7E 05             B   805    			ld a,(iy+var_q)
0023BE B7                  B   806    			or a
0023BF C8                  B   807    			ret z						;no ind
0023C0 21 A7 25 00         B   808    			ld hl,x3_z5_q1
0023C4 FD46 04             B   809    			ld b,(iy+var_p)				;else i
0023C7 C9                  B   810    			ret
                           B   811    
0023C8                     B   812    x3_z_not_five
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  85


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   813    
0023C8 FE06                B   814    			cp 6
0023CA 20 05               B   815    			jr nz,x3_z_not_six
0023CC 21 C5 25 00         B   816    			ld hl,x3_z6					;no ind
0023D0 C9                  B   817    			ret
                           B   818    
0023D1                     B   819    x3_z_not_six
                           B   820    
0023D1 21 C9 25 00         B   821    			ld hl,x3_z7					;x=3, z
0023D5 C9                  B   822    			ret
                           B   823    
                           B   824    
                           B   825    ;==============================================
                           B   826    
0023D6                     B   827    test_ixiy_prefix
                           B   828    
0023D6 FDCB0056            B   829    			bit sub_ix_prefix,(iy)
0023DA C0                  B   830    			ret nz
0023DB FDCB005E            B   831    			bit sub_iy_prefix,(iy)
0023DF C9                  B   832    			ret
                           B   833    			
                           B   834    ;==============================================
                           B   835    
                           B   836    
0023E0                     B   837    show_hex_byte
                           B   838    
0023E0 E5                  B   839    			push hl
0023E1 21 8D 29 00         B   840    			ld hl,output_byte_txt
0023E5 E5                  B   841    			push hl
0023E6 CD B2 11 00         B   842    			call hexbyte_to_ascii
0023EA E1                  B   843    			pop hl
0023EB CD 69 10 00         B   844    			call os_print_string
0023EF E1                  B   845    			pop hl
0023F0 C9                  B   846    			ret
                           B   847    			
                           B   848    
0023F1                     B   849    show_ascii_char
                           B   850    
0023F1 E5                  B   851    			push hl
0023F2 21 90 29 00         B   852    			ld hl,output_char_txt
0023F6 77                  B   853    			ld (hl),a
0023F7 CD 69 10 00         B   854    			call os_print_string
0023FB E1                  B   855    			pop hl
0023FC C9                  B   856    			ret
                           B   857    		
                           B   858    		
0023FD DD22 8A 29 00       B   859    show_ix		ld (d_work_address),ix
002402 3A 8C 29 00         B   860    			ld a,(d_work_address+2)
002406 CD E0 23 00         B   861    			call show_hex_byte
00240A 3A 8B 29 00         B   862    			ld a,(d_work_address+1)
00240E CD E0 23 00         B   863    			call show_hex_byte
002412 3A 8A 29 00         B   864    			ld a,(d_work_address)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  86


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002416 CD E0 23 00         B   865    			call show_hex_byte
00241A C9                  B   866    			ret
                           B   867    			
                           B   868    ;----------------------------------------------
                           B   869    
                           B   870    ; SYMBOLS:
                           B   871    
                           B   872    ; #  CC_table
                           B   873    ; ~  r table (registers)
                           B   874    ; =  r2 table (registers 2)
                           B   875    ; @  RP table (register pairs 1)
                           B   876    ; *  RP2 table (registers pairs 2)
                           B   877    ; :  ALU table
                           B   878    ; %  ROT table
                           B   879    ; _  HL,IX/IY substitute selected by prefix
                           B   880    ; |  HL, IY/IX substitute based on prefix (IX/I
                           B   881    ; $  (HL),(IX+d),(IY+d) substitute selected by 
                           B   882    ; h  H,IXH/IYH substitute selected by prefix
                           B   883    ; l  L,IXL,IYL substitute selected by prefix
                           B   884    ; &  ADL prefix 
                           B   885    
                           B   886    ; ^   n (8 bit immediate)
                           B   887    ; !   nn (16 or 24 bit immediate)
                           B   888    ; d   8 bit signed jump displacement from PC
                           B   889    ; /   8 bit signed byte used for IX+d, IY+d ins
                           B   890    ; >   single digit used by BIT,SET,RES instruct
                           B   891    ; <   RP3 table (register pairs 3)
                           B   892    ; }   RP4 table (register pairs 4)
                           B   893    ; ;   RST table
                           B   894    ; {   RP5 table (register pairs 5)
                           B   895    
00241B                     B   896    opcode_vars
                           B   897    
00241B 00                  B   898    prefix_bits_loc	db 0	
00241C 00                  B   899    var_x_loc		db 0	
00241D 00                  B   900    var_y_loc		db 0	
00241E 00                  B   901    var_z_loc		db 0	
00241F 00                  B   902    var_p_loc		db 0	
002420 00                  B   903    var_q_loc		db 0
002421 00                  B   904    var_calc_loc	db 0
002422 01                  B   905    var_adl_loc		db 1
                           B   906    
       00000000            B   907    prefix_bits		equ opcode_vars-prefix_bits_loc
       00000001            B   908    var_x			equ var_x_loc-opcode_vars
       00000002            B   909    var_y			equ var_y_loc-opcode_vars
       00000003            B   910    var_z			equ var_z_loc-opcode_vars
       00000004            B   911    var_p			equ var_p_loc-opcode_vars
       00000005            B   912    var_q			equ var_q_loc-opcode_vars
       00000006            B   913    var_calc		equ var_calc_loc-opcode_vars
       00000007            B   914    var_adl			equ var_adl_loc-opcode_vars
                           B   915    
                           B   916    ;---- Unprefixed opcodes ----------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  87


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   917    
                           B   918    
002423 4E4FD0              B   919    x0_z0		db 'NO','P'+80h				; y0
002426 45582041 462C4146   B   920    			db 'EX AF,AF',27h+80h		; y1 
00242E A7 
00242F 444A4E5A 206480     B   921    			db 'DJNZ ','d',80h			; y2
002436 4A522064 80         B   922    			db 'JR ','d',80h			; y3
00243B 4A522023 06 2C6480   B   923    			db 'JR #',var_calc,',d',80h	; y4-y7
                           B   924    			
002443 4C442620 40 04      B   925    x0_z1		db 'LD& @',var_p,',!',80h	; q=0
002449 2C2180 
00244C 41444426 205F2C40   B   926    			db 'ADD& _,@',var_p,80h		; q=1
002454 04 80 
002456 4C442620 7C2C2480   B   927    x0_z1_y6	db 'LD& |,$',80h
                           B   928    
00245E 4C442620 28424329   B   929    x0_z2		db 'LD& (BC),','A'+80h		;y=0
002466 2CC1 
002468 4C442620 412C2842   B   930    			db 'LD& A,(BC',')'+80h		;y=1
002470 43A9 
002472 4C442620 28444529   B   931    			db 'LD& (DE),','A'+80h		;y=2
00247A 2CC1 
00247C 4C442620 412C2844   B   932    			db 'LD& A,(DE',')'+80h		;y=3
002484 45A9 
002486 4C442620 2821292C   B   933    			db 'LD& (!),','_'+80h		;y=4
00248E DF 
00248F 4C442620 5F2C2821   B   934    			db 'LD& _,(!',')'+80h		;y=5
002497 A9 
002498 4C442620 2821292C   B   935    			db 'LD& (!),','A'+80h		;y=6
0024A0 C1 
0024A1 4C442620 412C2821   B   936    			db 'LD& A,(!',')'+80h		;y=7
0024A9 A9 
                           B   937    
0024AA 494E4326 2040 04    B   938    x0_z3		db 'INC& @',var_p,80h		;q=0
0024B1 80 
0024B2 44454326 2040 04    B   939    			db 'DEC& @',var_p,80h		;q=1
0024B9 80 
                           B   940    			
0024BA 494E4326 207E 02    B   941    x0_z4		db 'INC& ~',var_y,80h		
0024C1 80 
                           B   942    
0024C2 44454326 207E 02    B   943    x0_z5		db 'DEC& ~',var_y,80h		
0024C9 80 
                           B   944    			
0024CA 4C442620 7E 02      B   945    x0_z6		db 'LD& ~',var_y,',^',80h	
0024D0 2C5E80 
0024D3 4C442620 242C7C80   B   946    alt_x0_z6	db 'LD& $,|',80h			; when 
                           B   947    		
0024DB 524C43C1            B   948    x0_z7		db 'RLC','A'+80h		;y=0
0024DF 525243C1            B   949    			db 'RRC','A'+80h		;y=1
0024E3 524CC1              B   950    			db 'RL','A'+80h			;y=2
0024E6 5252C1              B   951    			db 'RR','A'+80h			;y=3
0024E9 4441C1              B   952    			db 'DA','A'+80h			;y=4
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  88


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0024EC 4350CC              B   953    			db 'CP','L'+80h			;y=5
0024EF 5343C6              B   954    			db 'SC','F'+80h			;y=6 (and n
0024F2 4343C6              B   955    			db 'CC','F'+80h			;y=7 (and n
                           B   956    			
0024F5 4C442620 7B 04      B   957    alt_x0_z7	db 'LD& {',var_p,',$',80h	;q=0 (D
0024FB 2C2480 
0024FE 4C442620 242C7B 04   B   958    			db 'LD& $,{',var_p,80h		;q=1 (D
002506 80 
                           B   959    		
                           B   960    
                           B   961    
002507 4C442620 7E 02      B   962    x1_table	db 'LD& ~',var_y,',~',var_z,80h	
00250D 2C7E 03 80 
002511 4C442620 7E 02      B   963    x1_y6	 	db 'LD& ~',var_y,',=',var_z,80h		002517 2C3D 03 80 
00251B 4C442620 3D 02      B   964    x1_z6		db 'LD& =',var_y,',~',var_z,80h		002521 2C7E 03 80 
                           B   965    
002525 48414CD4            B   966    x1_y6_z6	db 'HAL','T'+80h
                           B   967    
                           B   968    
                           B   969    
002529 3A 02 7E 03 80      B   970    x2_table	db ':',var_y,'~',var_z,80h			                           B   971    			
                           B   972    		
                           B   973    		
00252E 52455426 2023 02    B   974    x3_z0		db 'RET& #',var_y,80h
002535 80 
                           B   975    
002536 504F5026 202A 04    B   976    x3_z1_q0	db 'POP& *',var_p,80h			
00253D 80 
00253E 52455426 80         B   977    x3_z1_q1	db 'RET','&',80h		;p=0
002543 4558D8              B   978    			db 'EX','X'+80h			;p=1
002546 4A502620 5F80       B   979    			db 'JP& _',80h			;p=2
00254C 4C442620 53502C5F   B   980    			db 'LD& SP,_',80h		;p=3
002554 80 
                           B   981    
002555 4A502620 23 02      B   982    x3_z2		db 'JP& #',var_y,',!',80h		
00255B 2C2180 
                           B   983    
00255E 4A502620 2180       B   984    x3_z3		db 'JP& !',80h			;y = 0
002564 43422070 667880     B   985    			db 'CB pfx',80h			;y = 1
00256B 4F555420 285E292C   B   986    			db 'OUT (^),','A'+80h	;y = 2
002573 C1 
002574 494E2041 2C285EA9   B   987    			db 'IN A,(^',')'+80h	;y = 3
00257C 45582620 28535029   B   988    			db 'EX& (SP),','_',80h	;y = 4
002584 2C5F80 
002587 45582044 452C48CC   B   989    			db 'EX DE,H','L'+80h	;y = 5
00258F 44C9                B   990    			db 'D','I'+80h			;y = 6
002591 45C9                B   991    			db 'E','I'+80h			;y = 7
                           B   992    
002593 43414C4C 262023 02   B   993    x3_z4		db 'CALL& #',var_y,',!',80h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  89


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
00259B 2C2180 
                           B   994    
00259E 50555348 26202A 04   B   995    x3_z5_q0	db 'PUSH& *',var_p,80h			
0025A6 80 
0025A7 43414C4C 26202180   B   996    x3_z5_q1	db 'CALL& !',80h			;p=0
0025AF 44442070 667880     B   997    			db 'DD pfx',80h			;p=1
0025B6 45442070 667880     B   998    			db 'ED pfx',80h			;p=2
0025BD 20464420 70667880   B   999    			db' FD pfx',80h			;p=3
                           B  1000    
0025C5 3A 02 5E80          B  1001    x3_z6		db ':',var_y,'^',80h	;ALU_table(
                           B  1002    
0025C9 52535426 203B 02    B  1003    x3_z7		db 'RST& ;',var_y,80h		; rst_t
0025D0 80 
                           B  1004    
                           B  1005    
                           B  1006    ;--- CB - Prefixed op-codes--------------------
                           B  1007    
                           B  1008    
0025D1 25 02 207E 03 80    B  1009    cb_group		db '%',var_y,' ~',var_z,80h		0025D7 42495426 203E 02    B  1010    				db 'BIT& >',var_y,',~',var_z,80
0025DE 2C7E 03 80 
0025E2 52455326 203E 02    B  1011    				db 'RES& >',var_y,',~',var_z,80
0025E9 2C7E 03 80 
0025ED 53455426 203E 02    B  1012    				db 'SET& >',var_y,',~',var_z,80
0025F4 2C7E 03 80 
                           B  1013    
                           B  1014    
                           B  1015    ;---- ED - Prefixed op-codes-------------------
                           B  1016    
0025F8 494E3020 7E 02      B  1017    ed_x0_z0_yn6	db 'IN0 ~',var_y,',(^',')'+80h
0025FE 2C285EA9 
002602 494E3020 285EA9     B  1018    ed_x0_z0_y6		db 'IN0 (^',')'+80h	
                           B  1019    
002609 4F555430 20285E29   B  1020    ed_x0_z1		db 'OUT0 (^),~',var_y,80h		002611 2C7E 02 80 
002615 4C442620 49592C28   B  1021    				db 'LD& IY,(_',')'+80h			00261D 5FA9 
                           B  1022    
00261F 4C454126 203C 04    B  1023    ed_x0_z2		db 'LEA& <',var_p,',IX/',80h	002626 2C49582F 80 
00262B 4C454126 207D 04    B  1024    ed_x0_z3		db 'LEA& }',var_p,',IY/',80h
002632 2C49592F 80 
002637 54535426 20412C7E   B  1025    ed_x0_z4		db 'TST& A,~',var_y,80h
00263F 02 80 
                           B  1026    
002641 4C442620 285F292C   B  1027    ed_x0_z6		db 'LD& (_),}',var_p,80h
002649 7D 04 80 
                           B  1028    
00264C 4C442620 3C 04      B  1029    ed_x0_z7		db 'LD& <',var_p,',(_',')'+80h	002652 2C285FA9 
002656 4C442620 285F292C   B  1030    				db 'LD& (_),<',var_p,80h		00265E 3C 04 80 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  90


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B  1031    
002661 494E207E 02         B  1032    ed_x1_z0_yn6	db 'IN ~',var_y,',(BC',')'+80h
002666 2C284243 A9 
00266B 494E2028 43A9       B  1033    ed_x1_z0_y6		db 'IN (C',')'+80h
                           B  1034    
002671 4F555420 28424329   B  1035    ed_x1_z1_yn6	db 'OUT (BC),~',var_y,80h
002679 2C7E 02 80 
00267D 4F555420 2843292C   B  1036    ed_x1_z1_y6		db 'OUT (C),','0'+80h
002685 B0 
                           B  1037    
002686 53424326 20484C2C   B  1038    ed_x1_z2		db 'SBC& HL,@',var_p,80h		00268E 40 04 80 
002691 41444326 20484C2C   B  1039    				db 'ADC& HL,@',var_p,80h		002699 40 04 80 
                           B  1040    
00269C 4C442620 2821292C   B  1041    ed_x1_z3		db 'LD& (!),@',var_p,80h		0026A4 40 04 80 
0026A7 4C442620 40 04      B  1042    				db 'LD& @',var_p,',(!',')'+80h	0026AD 2C2821A9 
                           B  1043    
0026B1 4E45C7              B  1044    ed_x1_z4		db 'NE','G'+80h				;y=
0026B4 4D4C5420 42C3       B  1045    				db 'MLT B','C'+80h			;y=
0026BA 4C454126 2049582C   B  1046    				db 'LEA& IX,IY/',80h			0026C2 49592F80 
0026C6 4D4C5420 44C5       B  1047    				db 'MLT D','E'+80h			;y=
0026CC 54535426 20412C5E   B  1048    				db 'TST& A,^',80h			;y=
0026D4 80 
0026D5 4D4C5420 48CC       B  1049    				db 'MLT H','L'+80h			;y=
0026DB 54535449 4F205E80   B  1050    				db 'TSTIO ^',80h			;y=
0026E3 4D4C5420 53D0       B  1051    				db 'MLT S','P'+80h 			;y=
                           B  1052    
0026E9 5245544E 2680       B  1053    ed_x1_z5		db 'RETN&',80h				;y=
0026EF 52455449 2680       B  1054    				db 'RETI&',80h				;y=
0026F5 4C454126 2049592C   B  1055    				db 'LEA& IY,IX/',80h		;y=
0026FD 49582F80 
002701 BF                  B  1056    				db '?'+80h					;y=
002702 50454126 2049582F   B  1057    				db 'PEA& IX/',80h			;y=
00270A 80 
00270B 4C44204D 422CC1     B  1058    				db 'LD MB,','A'+80h			;y=
002712 BF                  B  1059    				db '?'+80h					;y=
002713 53544D49 D8         B  1060    				db 'STMI','X'+80h			;y=
                           B  1061    				
                           B  1062    	
002718 494D20B0            B  1063    ed_x1_z6		db 'IM ','0'+80h			;y=
00271C BF                  B  1064    				db '?'+80h					;y=
00271D 494D20B1            B  1065    				db 'IM ','1'+80h			;y=
002721 494D20B2            B  1066    				db 'IM ','2'+80h			;y=
002725 50454126 2049592F   B  1067    				db 'PEA& IY/',80h			;y=
00272D 80 
00272E 4C442041 2C4DC2     B  1068    				db 'LD A,','M','B'+80h		;y=
002735 534CD0              B  1069    				db 'SL','P'+80h				;y=
002738 52534D49 D8         B  1070    				db 'RSMI','X'+80h			;y=
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  91


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B  1071    
00273D 4C442049 2CC1       B  1072    ed_x1_z7		db 'LD I,','A'+80h			;y=
002743 4C442052 2CC1       B  1073    				db 'LD R,','A'+80h			;y=
002749 4C442041 2CC9       B  1074    				db 'LD A,','I'+80h			;y=
00274F 4C442041 2CD2       B  1075    				db 'LD A,','R'+80h			;y=
002755 5252C4              B  1076    				db 'RR','D'+80h				;y=
002758 524CC4              B  1077    				db 'RL','D'+80h				;y=
00275B 4E4FD0              B  1078    				db 'NO','P'+80h				;y=
00275E 4E4FD0              B  1079    				db 'NO','P'+80h				;y=
                           B  1080    
                           B  1081    
002761 BFBFBFBF            B  1082    ed_x2_z0		db '?'+80h,'?'+80h,'?'+80h,'?'+
002765 4C444926 80         B  1083    				db 'LDI&',80h					00276A 4C444426 80         B  1084    				db 'LDD&',80h					00276F 4C444952 2680       B  1085    				db 'LDIR&',80h					002775 4C444452 2680       B  1086    				db 'LDDR&',80h					                           B  1087    
00277B BFBFBFBF            B  1088    ed_x2_z1		db '?'+80h,'?'+80h,'?'+80h,'?'+
00277F 43504926 80         B  1089    				db 'CPI&',80h					002784 43504426 80         B  1090    				db 'CPD&',80h					002789 43504952 2680       B  1091    				db 'CPIR&',80h					00278F 43504452 2680       B  1092    				db 'CPDR&',80h					                           B  1093    
002795 494E494D 2680       B  1094    ed_x2_z2		db 'INIM&',80h		; y0	
00279B 494E444D 2680       B  1095    				db 'INDM&',80h		; y1
0027A1 494E494D 522680     B  1096    				db 'INIMR&',80h		; y2
0027A8 494E444D 522680     B  1097    				db 'INDMR&',80h		; y3
0027AF 494E4926 80         B  1098    				db 'INI&',80h		; y4
0027B4 494E4426 80         B  1099    				db 'IND&',80h		; y5
0027B9 494E4952 2680       B  1100    				db 'INIR&',80h		; y6
0027BF 494E4452 2680       B  1101    				db 'INDR&',80h		; y7
                           B  1102    
                           B  1103    
0027C5 4F54494D 2680       B  1104    ed_x2_z3		db 'OTIM&',80h		; y0
0027CB 4F54444D 2680       B  1105    				db 'OTDM&',80h		; y1
0027D1 4F54494D 522680     B  1106    				db 'OTIMR&',80h		; y2
0027D8 4F54444D 522680     B  1107    				db 'OTDMR&',80h		; y3
0027DF 4F555449 2680       B  1108    				db 'OUTI&',80h		; y4
0027E5 4F555444 2680       B  1109    				db 'OUTD&',80h		; y5
0027EB 4F544952 2680       B  1110    				db 'OTIR&',80h		; y6
0027F1 4F544452 2680       B  1111    				db 'OTDR&',80h		; y7
                           B  1112    
0027F7 494E4932 2680       B  1113    ed_x2_z4		db 'INI2&',80h		; y0
0027FD 494E4432 2680       B  1114    				db 'IND2&',80h		; y1
002803 494E4932 522680     B  1115    				db 'INI2R&',80h		; y2
00280A 494E4432 522680     B  1116    				db 'IND2R&',80h		; y3
002811 4F555449 322680     B  1117    				db 'OUTI2&',80h		; y4
002818 4F555444 322680     B  1118    				db 'OUTD2&',80h		; y5
00281F 4F544932 522680     B  1119    				db 'OTI2R&',80h		; y6
002826 4F544432 522680     B  1120    				db 'OTD2R&',80h		; y7
                           B  1121    
                           B  1122    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  92


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
00282D 494E4952 582680     B  1123    ed_x3_z2		db 'INIRX&',80h 	; y0
002834 494E4452 582680     B  1124    				db 'INDRX&',80h		; y1
                           B  1125    
00283B 4F544952 582680     B  1126    ed_x3_z3		db 'OTIRX&',80h		; y0
002842 4F544452 582680     B  1127    				db 'OTDRX&',80h		; y1
                           B  1128    			
                           B  1129    
                           B  1130    ;--- DDCB or FDCB - Prefixed op-codes----------
                           B  1131    
                           B  1132    
002849 4C442620 7E 03      B  1133    ddcb_fdcb_zn6	db 'LD& ~',var_z, ',%',var_y,' 
00284F 2C25 02 202480 
002855 42495426 203E 02    B  1134    				db 'BIT& >',var_y,',$',80h		00285C 2C2480 
00285F 4C442620 7E 03      B  1135    				db 'LD& ~',var_z,',RES& >',var_
002865 2C524553 26203E 02 
00286D 2C2480 
002870 4C442620 7E 03      B  1136    				db 'LD& ~',var_z,',SET& >',var_
002876 2C534554 26203E 02 
00287E 2C2480 
                           B  1137    
002881 25 02 202480        B  1138    ddcb_fdcb_z6	db '%',var_y,' $',80h			002886 42495426 203E 02    B  1139    				db 'BIT& >',var_y,',$',80h		00288D 2C2480 
002890 52455326 203E 02    B  1140    				db 'RES& >',var_y,',$',80h		002897 2C2480 
00289A 53455426 203E 02    B  1141    				db 'SET& >',var_y,',$',80h		0028A1 2C2480 
                           B  1142    
                           B  1143    ;----------------------------------------------
                           B  1144    
0028A4 3F3FBF              B  1145    bad_opcode	db '??','?'+80h
                           B  1146    
                           B  1147    ;----------------------------------------------
                           B  1148    
                           B  1149    
0028A7 C2C3C4C5 68806C80   B  1150    table_r		db 'B'+80h, 'C'+80h, 'D'+80h, 'E'+8
0028AF 2480C1 
                           B  1151    
0028B2 C2C3C4C5 48804C80   B  1152    table_r2	db 'B'+80h, 'C'+80h, 'D'+80h, 'E'+8
0028BA 2480C1 
                           B  1153    
0028BD 42C344C5 DF53D0     B  1154    table_rp	db 'B','C'+80h, 'D','E'+80h, '_'+80
                           B  1155    
0028C4 42C344C5 5F8041C6   B  1156    table_rp2	db 'B','C'+80h, 'D','E'+80h, '_',+8
                           B  1157    	
0028CC 4EDADA4E C3C350CF   B  1158    table_cc	db 'N','Z'+80h, 'Z'+80h, 'N','C'+80
0028D4 50C5D0CD 
                           B  1159    	
0028D8 41444426 2041AC41   B  1160    table_alu	db 'ADD& A',','+80h, 'ADC& A',','+8
0028E0 44432620 41AC5355 
0028E8 4226A053 42432041 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  93


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0028F0 26AC 
0028F2 414E4426 A0584F52   B  1161    			db 'AND&',' '+80h, 'XOR&',' '+80h, 
0028FA 26A04F52 26A04350 
002902 26A0 
                           B  1162    			
002904 524C4326 80525243   B  1163    table_rot	db 'RLC&',80h, 'RRC&',80h, 'RL&',80
00290C 2680524C 26805252 
002914 2680 
002916 534C4126 80535241   B  1164    			db 'SLA&',80h, 'SRA&',80h, 'SLL&',8
00291E 2680534C 4C268053 
002926 524C2680 
                           B  1165    	
00292A 42C344C5 48CC49D8   B  1166    table_rp3	db 'B','C'+80h, 'D','E'+80h, 'H','L
                           B  1167    
002932 42C344C5 48CC49D9   B  1168    table_rp4	db 'B','C'+80h, 'D','E'+80h, 'H','L
                           B  1169    
00293A 42C344C5 48CC5F80   B  1170    table_rp5	db 'B','C'+80h, 'D','E'+80h, 'H','L
                           B  1171    
002942 30B0                B  1172    table_rst	db '0','0'+80h
002944 30B8                B  1173    			db '0','8'+80h
002946 31B0                B  1174    			db '1','0'+80h
002948 31B8                B  1175    			db '1','8'+80h
00294A 32B0                B  1176    			db '2','0'+80h
00294C 32B8                B  1177    			db '2','8'+80h	
00294E 33B0                B  1178    			db '3','0'+80h
002950 33B8                B  1179    			db '3','8'+80h			
                           B  1180    
                           B  1181    ;----------------------------------------------
                           B  1182    
                           B  1183    ; "_" = HL, IX, IY depending on prefix 
                           B  1184    ; "|" = as above with IX/IY switched
                           B  1185    
                           B  1186    ; "h" = H, IXH, IYL depending on prefix
                           B  1187    ; "l" = L, IXL, IYL depending on prefix
                           B  1188    ; "$" = (HL), (IX+d), (IY+d) depending on prefi
                           B  1189    
002952 48CC49D8 49D9       B  1190    hl_subs		db 'H','L'+80h, 'I','X'+80h, 'I','Y
002958 48CC49D9 49D8       B  1191    inv_hl_subs	db 'H','L'+80h, 'I','Y'+80h, 'I','X
00295E C84958C8 4959C8     B  1192    h_subs		db 'H'+80h, 'IX','H'+80h, 'IY','H'+
002965 CC4958CC 4959CC     B  1193    l_subs		db 'L'+80h, 'IX','L'+80h, 'IY','L'+
00296C 28484CA9 2849582F   B  1194    ind_hl_subs	db '(HL',')'+80h, '(IX/',')'+80h, '
002974 A9284959 2FA9 
                           B  1195    
                           B  1196    ;----------------------------------------------
                           B  1197    
00297A                     B  1198    adl_prefix_list
                           B  1199    
00297A 2E5349D3 2E4C49D3   B  1200    			db '.SI','S'+80h, '.LI','S'+80h, '.
002982 2E5349CC 2E4C49CC 
                           B  1201    
                           B  1202    ;----------------------------------------------
                           B  1203    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  94


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
00298A 000000              B  1204    d_work_address	dw24 0
                           B  1205    
00298D 2D2D00              B  1206    output_byte_txt	db "--",0
002990 2D00                B  1207    output_char_txt	db "-",0
                           B  1208    
002992 000001              B  1209    dis_addr		dw24 10000h
                           B  1210    
                           B  1211    ;----------------------------------------------
                           B  1212    
                           B     0    	include 'commands\del.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"del" delete file command. V0.03
                           B     3    ;----------------------------------------------
                           B     4    
                           B     5    
002995 CD 83 17 00         B     6    os_cmd_del		call os_check_volume_format	
002999 C0                  B     7    				ret nz
                           B     8    			
00299A CD 1E 3D 00         B     9    				call os_cache_original_vol_dir
00299E CD A7 29 00         B    10    				call do_del
0029A2 CD 09 3D 00         B    11    				call os_restore_original_vol_di
0029A6 C9                  B    12    				ret
                           B    13    			
0029A7 CD 07 11 00         B    14    do_del			call os_scan_for_non_space		0029AB CA 84 2E 00         B    15    				jp z,missing_args
                           B    16    
0029AF AF                  B    17    				xor a							0029B0 CD 9F 3C 00         B    18    				call os_parse_path_string
0029B4 C0                  B    19    				ret nz
0029B5 C3 E1 17 00         B    20    				jp os_erase_file				                           B    21    				
                           B    22    				
                           B    23    ;----------------------------------------------
                           B     0    	include 'commands\dir.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; FAT16 'dir' - show directory command. v0.04
                           B     3    ;----------------------------------------------
                           B     4    
0029B9 CD 83 17 00         B     5    os_cmd_dir		call os_check_volume_format	
0029BD C0                  B     6    				ret nz
                           B     7    				
0029BE CD 1E 3D 00         B     8    				call os_cache_original_vol_dir
0029C2 CD CB 29 00         B     9    				call do_dir
0029C6 CD 09 3D 00         B    10    				call os_restore_original_vol_di
0029CA C9                  B    11    				ret
                           B    12    				
0029CB CD 07 11 00         B    13    do_dir			call os_scan_for_non_space		0029CF 28 07               B    14    				jr z,dir_no_args
                           B    15    				
0029D1 3E01                B    16    				ld a,1							0029D3 CD 9F 3C 00         B    17    				call os_parse_path_string
0029D7 C0                  B    18    				ret nz
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  95


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\dir.asm
                           B    19    										
0029D8 CD EC 2A 00         B    20    dir_no_args		call div_line
0029DC CD 34 5D 00         B    21    				call fs_get_current_dir_name	0029E0 D8                  B    22    				ret c
0029E1 C0                  B    23    				ret nz
0029E2 CD 69 10 00         B    24    				call os_print_string
0029E6 CD 56 1B 00         B    25    				call fs_get_dir_cluster			0029EA 7A                  B    26    				ld a,d
0029EB B3                  B    27    				or e
0029EC 20 08               B    28    				jr nz,dcmdnr
0029EE CD 1D 5A 00         B    29    				call fs_get_volume_label
0029F2 CD 69 10 00         B    30    				call os_print_string
0029F6 CD 0F 15 00         B    31    dcmdnr			call os_new_line
                           B    32    				
0029FA CD EC 2A 00         B    33    nrootdir		call div_line
0029FE CD 22 59 00         B    34    				call fs_goto_first_dir_entry
002A02 D8                  B    35    				ret c
002A03 20 6F               B    36    				jr nz,os_dlr
002A05 AF                  B    37    				xor a
002A06 32 24 6C 00         B    38    				ld (os_linecount),a
                           B    39    				
002A0A CD 39 59 00         B    40    os_dfllp		call fs_get_dir_entry			002A0E D8                  B    41    				ret c
002A0F 20 63               B    42    				jr nz,os_dlr					002A11 C5                  B    43    				push bc
002A12 CD 69 10 00         B    44    				call os_print_string			002A16 CD 3A 15 00         B    45    				call os_get_cursor_position		002A1A 060E                B    46    				ld b,14
002A1C CD 1A 15 00         B    47    				call os_set_cursor_position	
002A20 C1                  B    48    				pop bc
002A21 CB40                B    49    				bit 0,b							002A23 28 06               B    50    				jr z,os_deif		
002A25 21 F9 2A 00         B    51    				ld hl,dir_txt					002A29 18 32               B    52    				jr os_dpl
                           B    53    				
002A2B 21 6D 60 00         B    54    os_deif			ld hl,os_hex_prefix_txt			002A2F CD 69 10 00         B    55    				call os_print_string
002A33 ED530001 00         B    56    				ld (scratch_pad),de
002A38 79                  B    57    				ld a,c
002A39 32030100            B    58    				ld (scratch_pad+3),a
002A3D 21 8F 6C 00         B    59    				ld hl,output_line
002A41 E5                  B    60    				push hl
002A42 ED5B0201 00         B    61    				ld de,(scratch_pad+2)
002A47 CD D7 11 00         B    62    				call hexword_to_ascii
002A4B ED5B0001 00         B    63    				ld de,(scratch_pad)
002A50 CD D7 11 00         B    64    				call hexword_to_ascii
002A54 3600                B    65    				ld (hl),0
002A56 E1                  B    66    				pop hl
002A57 0607                B    67    				ld b,7							002A59 CD 8F 11 00         B    68    				call os_skip_leading_ascii_zero
002A5D CD 69 10 00         B    69    os_dpl			call os_print_string
002A61 CD 0F 15 00         B    70    				call os_new_line
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  96


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\dir.asm
                           B    71    				
002A65 CD C6 59 00         B    72    				call fs_goto_next_dir_entry
002A69 20 09               B    73    				jr nz,os_dlr					002A6B CD 0D 13 00         B    74    				call os_count_lines
002A6F 3E79                B    75    				ld a,'y'
002A71 B8                  B    76    				cp b
002A72 28 96               B    77    				jr z,os_dfllp
                           B    78    				
002A74 CD EC 2A 00         B    79    os_dlr			call div_line					002A78 CD 20 53 00         B    80    				call fs_calc_free_space
002A7C D8                  B    81    				ret c	
                           B    82    				
002A7D CD 8B 2A 00         B    83    				call show_capacity				002A81 21 09 2B 00         B    84    				ld hl,free_txt
002A85 CD 69 10 00         B    85    				call os_print_string
002A89 AF                  B    86    				xor a
002A8A C9                  B    87    				ret
                           B    88    				
                           B    89    ;----------------------------------------------
                           B    90    
002A8B                     B    91    show_capacity	
                           B    92    
                           B    93    ; set xDE = capacity in KB
                           B    94    ; (trashes all other registers!)
                           B    95    
002A8B DD21 FF 2A 00       B    96    				ld ix,dir_kb_txt
002A90 AF                  B    97    				xor a
002A91 D5                  B    98    				push de
002A92 E1                  B    99    				pop hl
002A93 01241000            B   100    				ld bc,1024h
002A97 ED42                B   101    				sbc hl,bc
002A99 38 0B               B   102    				jr c,showresinkb
002A9B 060A                B   103    				ld b,10
002A9D CD B2 2A 00         B   104    				call shr_de
002AA1 DD21 04 2B 00       B   105    				ld ix,dir_mb_txt
002AA6 CD C5 2A 00         B   106    showresinkb		call show_xde_decimal
002AAA DDE5                B   107    				push ix
002AAC E1                  B   108    				pop hl
002AAD CD 69 10 00         B   109    				call os_print_string
002AB1 C9                  B   110    				ret
                           B   111    				
                           B   112    ;----------------------------------------------
                           B   113    
                           B   114    ; Set xDE = value to shift
                           B   115    ; Set B = number of places to shift right (0-23
                           B   116    	
002AB2 E5                  B   117    shr_de			push hl
002AB3 3E18                B   118    				ld a,24
002AB5 90                  B   119    				sub b
002AB6 47                  B   120    				ld b,a
002AB7 21000000            B   121    				ld hl,0
002ABB EB                  B   122    				ex de,hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  97


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\dir.asm
002ABC 29                  B   123    divde_lp		add hl,hl
002ABD EB                  B   124    				ex de,hl
002ABE ED6A                B   125    				adc hl,hl
002AC0 EB                  B   126    				ex de,hl
002AC1 10 F9               B   127    				djnz divde_lp
002AC3 E1                  B   128    				pop hl
002AC4 C9                  B   129    				ret
                           B   130    				
                           B   131    ;----------------------------------------------
                           B   132    
002AC5                     B   133    show_xde_decimal
                           B   134    
002AC5 CD A2 13 00         B   135    				call os_hex_to_decimal			002AC9 11070000            B   136    				ld de,7
002ACD 19                  B   137    				add hl,de						002ACE 43                  B   138    				ld b,e
002ACF 11 8F 6C 00         B   139    				ld de,output_line
002AD3 D5                  B   140    				push de
002AD4 7E                  B   141    dec2strlp		ld a,(hl)						002AD5 B7                  B   142    				or a
002AD6 20 03               B   143    				jr nz,foundlnz
002AD8 2B                  B   144    				dec hl
002AD9 10 F9               B   145    				djnz dec2strlp
002ADB 04                  B   146    foundlnz		inc b
002ADC 7E                  B   147    ndecchar		ld a,(hl)						002ADD C630                B   148    				add a,030h
002ADF 12                  B   149    				ld (de),a
002AE0 13                  B   150    				inc de
002AE1 2B                  B   151    				dec hl
002AE2 10 F8               B   152    				djnz ndecchar
002AE4 AF                  B   153    				xor a
002AE5 12                  B   154    				ld (de),a
002AE6 E1                  B   155    				pop hl							002AE7 CD 69 10 00         B   156    				call os_print_string
002AEB C9                  B   157    				ret
                           B   158    
                           B   159    ;----------------------------------------------
                           B   160    			
002AEC 0E2D                B   161    div_line		ld c,'-'
002AEE 0613                B   162    				ld b,19
002AF0 CD 3E 1B 00         B   163    				call os_print_multiple_chars
002AF4 CD 0F 15 00         B   164    				call os_new_line
002AF8 C9                  B   165    				ret
                           B   166    
                           B   167    ;----------------------------------------------
                           B   168    
002AF9 5B444952 5D00       B   169    dir_txt			db '[DIR]',0
                           B   170    
002AFF 204B4220 00         B   171    dir_kb_txt		db ' KB ',0
002B04 204D4220 00         B   172    dir_mb_txt		db ' MB ',0
002B09 46726565 0B00       B   173    free_txt		db 'Free',11,0
                           B   174    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  98


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\dir.asm
                           B   175    ;----------------------------------------------
                           B   176    	
                           B     0    	include 'commands\f.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"f" fill memory command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
002B0F                     B     5    os_cmd_f			
                           B     6    
002B0F CD 56 1D 00         B     7    				call get_start_and_end			                           B     8    			
002B13 CD 7F 1D 00         B     9    				call hexword_or_bust			002B17 CA 13 17 00         B    10    				jp z,os_no_args_error			002B1B 7B                  B    11    				ld a,e
002B1C 32 3B 6C 00         B    12    				ld (fillbyte),a
                           B    13    					
002B20 CD 44 1D 00         B    14    				call test_mem_range
002B24 DA 0F 17 00         B    15    				jp c,os_range_error				                           B    16    					
002B28 3A 3B 6C 00         B    17    				ld a,(fillbyte)
002B2C 77                  B    18    f_floop			ld (hl),a
002B2D EDA1                B    19    				cpi								002B2F EA 2C 2B 00         B    20    				jp pe,f_floop
                           B    21    					
002B33 3E20                B    22    				ld a,020h						002B35 B7                  B    23    				or a
002B36 C9                  B    24    				ret
                           B    25    
                           B    26    ;----------------------------------------------
                           B     0    	include 'commands\format.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"format" - format volume / device command. V0.
                           B     3    ;----------------------------------------------
                           B     4    
002B37 7E                  B     5    os_cmd_format	ld a,(hl)						002B38 B7                  B     6    				or a
002B39 20 04               B     7    				jr nz,fgotargs					002B3B 3E1F                B     8    				ld a,01fh						002B3D B7                  B     9    				or a
002B3E C9                  B    10    				ret
                           B    11    			
002B3F E5                  B    12    fgotargs		push hl
002B40 CD F2 10 00         B    13    				call os_next_arg				002B44 20 04               B    14    				jr nz,fgotlab
002B46 21 53 2D 00         B    15    				ld hl,default_label
002B4A 22 34 01 00         B    16    fgotlab			ld (format_label_loc),hl
                           B    17    
002B4E 3E01                B    18    				ld a,1							002B50 CD 1C 19 00         B    19    				call os_mount_volumes			002B54 E1                  B    20    				pop hl
                           B    21    				
                           B    22    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page:  99


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\format.asm
                           B    23    ; Format an entire device?
                           B    24    ;----------------------------------------------
                           B    25    
002B55 3A 3A 6A 00         B    26    				ld a,(device_count)				002B59 B7                  B    27    				or a
002B5A CA FD 2B 00         B    28    				jr z,fno_dev
002B5E 47                  B    29    				ld b,a
002B5F 0E00                B    30    				ld c,0							002B61 DD21 E4 6A 00       B    31    				ld ix,host_device_hardware_info
002B66 DD7E00              B    32    fdev_lp			ld a,(ix)						002B69 CD 28 1B 00         B    33    				call locate_driver_base			002B6D D5                  B    34    				push de
002B6E FDE1                B    35    				pop iy
002B70 ED130C              B    36    				lea de,iy+0ch					002B73 C5                  B    37    				push bc
002B74 0607                B    38    				ld b,7
002B76 CD 36 13 00         B    39    				call os_compare_strings
002B7A C1                  B    40    				pop bc
002B7B 28 0A               B    41    				jr z,format_dev
002B7D ED3220              B    42    				lea ix,ix+20h					002B80 0C                  B    43    				inc c
002B81 10 E3               B    44    				djnz fdev_lp
002B83 C3 24 2C 00         B    45    				jr form_vol_req
                           B    46    				
002B87 C5                  B    47    format_dev		push bc							002B88 CD 0F 15 00         B    48    				call os_new_line
002B8C 21 1F 2D 00         B    49    				ld hl,form_dev_warn1
002B90 CD 46 15 00         B    50    				call os_show_packed_text
002B94 C1                  B    51    				pop bc
                           B    52    				
002B95 79                  B    53    				ld a,c							002B96 C630                B    54    				add a,030h
002B98 32 46 6A 00         B    55    				ld (dev_txt+3),a
002B9C 21 43 6A 00         B    56    				ld hl,dev_txt	
002BA0 CD 69 10 00         B    57    				call os_print_string			                           B    58    				
002BA4 79                  B    59    				ld a,c							002BA5 CD 01 2C 00         B    60    				call setup_dev_format			002BA9 30 52               B    61    				jr nc,fno_dev	
002BAB 3A 39 6A 00         B    62    				ld a,(current_driver)
002BAF CD 0F 1B 00         B    63    				call show_dev_driver_name		                           B    64    								
002BB3 DD7E04              B    65    				ld a,(ix+4)
002BB6 B7                  B    66    				or a
002BB7 28 06               B    67    				jr z,less16gb
002BB9 21 5E 2D 00         B    68    				ld hl,dev16gbplus_txt
002BBD 18 1D               B    69    				jr form_capdone
002BBF 0601                B    70    less16gb		ld b,1
002BC1 CD B2 2A 00         B    71    				call shr_de						002BC5 3E28                B    72    				ld a,'('
002BC7 CD AB 10 00         B    73    				call os_print_char
002BCB DDE5                B    74    				push ix
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 100


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\format.asm
002BCD DD1701              B    75    				ld de,(ix+1)					002BD0 0601                B    76    				ld b,1
002BD2 CD B2 2A 00         B    77    				call shr_de						002BD6 CD 8B 2A 00         B    78    				call show_capacity				002BDA DDE1                B    79    				pop ix
002BDC ED2205              B    80    form_capdone	lea hl,ix+5		
002BDF CD 69 10 00         B    81    				call os_print_string			002BE3 3E29                B    82    				ld a,')'
002BE5 CD AB 10 00         B    83    				call os_print_char
                           B    84    
002BE9 CD 0F 15 00         B    85    				call os_new_line
002BED CD 0F 15 00         B    86    				call os_new_line
002BF1 21 26 2D 00         B    87    				ld hl,form_warn2
002BF5 CD 16 2D 00         B    88    				call show_packed_text_and_cr
                           B    89    				
002BF9 C3 C5 2C 00         B    90    				jp confirm_format
                           B    91    			
                           B    92    
                           B    93    
                           B    94    
002BFD 3ED0                B    95    fno_dev			ld a,0d0h						002BFF B7                  B    96    				or a
002C00 C9                  B    97    				ret
                           B    98    				
                           B    99    	
                           B   100    	
002C01                     B   101    setup_dev_format
                           B   102    
                           B   103    ; set A to device
                           B   104    					
002C01 CD 9C 1B 00         B   105    				call dev_to_driver_lookup		002C05 D0                  B   106    				ret nc							002C06 32 39 6A 00         B   107    				ld (current_driver),a			002C0A E5                  B   108    				push hl
002C0B DDE1                B   109    				pop ix
002C0D DD1701              B   110    				ld de,(ix+1)					002C10 ED53 29 5F 00       B   111    				ld (partition_size),de
002C15 21000000            B   112    				ld hl,0							002C19 22 2C 5F 00         B   113    				ld (partition_base),hl			002C1D AF                  B   114    				xor a
002C1E 32 2F 5F 00         B   115    				ld (partition_base+3),a
002C22 37                  B   116    				scf								002C23 C9                  B   117    				ret
                           B   118    								
                           B   119    
                           B   120    ;----------------------------------------------
                           B   121    ; Format a volume?
                           B   122    ;----------------------------------------------
                           B   123    
002C24 22 30 01 00         B   124    form_vol_req	ld (format_target_name),hl
002C28 CD 8D 0F 00         B   125    				call test_volx					002C2C C2 C1 2C 00         B   126    				jr nz,bad_vol
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 101


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\format.asm
002C30 D630                B   127    				sub a,30h
002C32 32 33 01 00         B   128    				ld (format_target_volume),a		002C36 11100000            B   129    				ld de,16
002C3A 57                  B   130    				ld d,a
002C3B ED5C                B   131    				mlt de
002C3D DD21 64 6A 00       B   132    				ld ix,volume_mount_list	
002C42 DD19                B   133    				add ix,de
002C44 DD7E00              B   134    				ld a,(ix)
002C47 B7                  B   135    				or a
002C48 28 77               B   136    				jr z,bad_vol					                           B   137    				
002C4A DD1704              B   138    				ld de,(ix+4)
002C4D ED53 29 5F 00       B   139    				ld (partition_size),de
002C52 DD1708              B   140    				ld de,(ix+8)
002C55 ED53 2C 5F 00       B   141    				ld (partition_base),de
002C5A DD7E0B              B   142    				ld a,(ix+0bh)
002C5D 32 2F 5F 00         B   143    				ld (partition_base+3),a
002C61 DD7E01              B   144    				ld a,(ix+1)						002C64 32 39 6A 00         B   145    				ld (current_driver),a
                           B   146    				
002C68 CD 0F 15 00         B   147    				call os_new_line
002C6C 21 30 2D 00         B   148    				ld hl,form_vol_warn1
002C70 CD 16 2D 00         B   149    				call show_packed_text_and_cr	002C74 CD 0F 15 00         B   150    				call os_new_line
                           B   151    				
002C78 DD2A 30 01 00       B   152    				ld ix,(format_target_name)		002C7D DD360500            B   153    				ld (ix+5),0
002C81 ED2200              B   154    				lea hl,ix+0
002C84 CD 69 10 00         B   155    				call os_print_string			                           B   156    				
002C88 3A 38 6A 00         B   157    				ld a,(current_volume)
002C8C F5                  B   158    				push af
002C8D 3A 33 01 00         B   159    				ld a,(format_target_volume)
002C91 CD B2 1B 00         B   160    				call os_change_volume
002C95 20 0A               B   161    				jr nz,no_vollab
002C97 CD 1D 5A 00         B   162    				call fs_get_volume_label
002C9B 20 04               B   163    				jr nz,no_vollab
002C9D CD 69 10 00         B   164    				call os_print_string			002CA1 F1                  B   165    no_vollab		pop af
002CA2 32 38 6A 00         B   166    				ld (current_volume),a
                           B   167    				
002CA6 CD 0F 15 00         B   168    				call os_new_line
002CAA CD 0F 15 00         B   169    				call os_new_line
002CAE 21 26 2D 00         B   170    				ld hl,form_warn2
002CB2 CD 16 2D 00         B   171    				call show_packed_text_and_cr	                           B   172    
002CB6 CD C5 2C 00         B   173    				call confirm_format
002CBA F5                  B   174    				push af
002CBB CD DD 1B 00         B   175    				call fs_set_driver_for_volume
002CBF F1                  B   176    				pop af
002CC0 C9                  B   177    				ret
                           B   178    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 102


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\format.asm
002CC1 3ECF                B   179    bad_vol			ld a,0cfh						002CC3 B7                  B   180    				or a
002CC4 C9                  B   181    				ret
                           B   182    		
                           B   183    			
                           B   184    ;----------------------------------------------
                           B   185    
                           B   186    
002CC5                     B   187    confirm_format
                           B   188    
002CC5 CD FE 2C 00         B   189    				call confirm_yes
002CC9 20 2B               B   190    				jr nz,abort_format
                           B   191    				
002CCB 21 35 2D 00         B   192    				ld hl,formatting_txt			002CCF CD 69 10 00         B   193    				call os_print_string
                           B   194    				
002CD3 2A 34 01 00         B   195    				ld hl,(format_label_loc)
002CD7 CD 3B 50 00         B   196    				call fs_format_partition
002CDB 38 0F               B   197    				jr c,form_err
002CDD 20 0D               B   198    				jr nz,form_err
                           B   199    			
002CDF 21 45 2D 00         B   200    				ld hl,ok_txt					002CE3 CD 69 10 00         B   201    				call os_print_string
                           B   202    				
002CE7 CD 1F 35 00         B   203    f_end			call os_cmd_remount				002CEB C9                  B   204    				ret
                           B   205    
                           B   206    
002CEC 21 4A 2D 00         B   207    form_err		ld hl,ferr_txt
002CF0 CD 69 10 00         B   208    				call os_print_string
002CF4 18 F1               B   209    				jr f_end
                           B   210    				
                           B   211    
                           B   212    
002CF6 CD 0F 15 00         B   213    abort_format	call os_new_line
002CFA 3E24                B   214    				ld a,024h						002CFC B7                  B   215    				or a
002CFD C9                  B   216    				ret
                           B   217    
                           B   218    
002CFE 21000100            B   219    confirm_yes		ld hl,scratch_pad
002D02 1E03                B   220    				ld e,3
002D04 E5                  B   221    				push hl
002D05 CD 3B 12 00         B   222    				call os_user_input
002D09 E1                  B   223    				pop hl
002D0A C0                  B   224    				ret nz
002D0B 0603                B   225    				ld b,3
002D0D 11 A0 64 00         B   226    				ld de,yes_txt+1
002D11 CD 36 13 00         B   227    				call os_compare_strings
002D15 C9                  B   228    				ret
                           B   229    			
                           B   230    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 103


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\format.asm
002D16                     B   231    show_packed_text_and_cr
                           B   232    			
002D16 CD 46 15 00         B   233    				call os_show_packed_text
002D1A CD 0F 15 00         B   234    				call os_new_line
002D1E C9                  B   235    				ret
                           B   236    			
                           B   237    ;----------------------------------------------
                           B   238    
002D1F                     B   239    form_dev_warn1
                           B   240    
002D1F 27283640 979700     B   241    				db 027h,028h,036h,040h,097h,097
                           B   242    
002D26                     B   243    form_warn2
                           B   244    
002D26 52467E98 9EA2A3A5   B   245    				db 052h,046h,07eh,098h,09eh,0a2
002D2E 9700 
                           B   246    
002D30                     B   247    form_vol_warn1
                           B   248    	
002D30 27286F40 00         B   249    				db 027h,028h,06fh,040h,0		                           B   250    
                           B   251    
002D35                     B   252    formatting_txt
                           B   253    
002D35 0B0B466F 726D6174   B   254    				db 11,11,'Formatting.. ',0
002D3D 74696E67 2E2E2000 
                           B   255    
002D45 4F4B0B0B 00         B   256    ok_txt			db 'OK',11,11,0
                           B   257    
002D4A 4552524F 52210B0B   B   258    ferr_txt		db 'ERROR!',11,11,0
002D52 00 
                           B   259    
002D53 50524F53 455F4449   B   260    default_label	db 'PROSE_DISK',0
002D5B 534B00 
                           B   261    
002D5E 28313647 422B2000   B   262    dev16gbplus_txt	db '(16GB+ ',0
                           B   263    
                           B   264    ;----------------------------------------------
                           B   265    
       00000130            B   266    format_target_name		equ scratch_pad+30h		       00000133            B   267    format_target_volume	equ scratch_pad+33h		       00000134            B   268    format_label_loc		equ scratch_pad+34h
                           B   269    
                           B   270    ;----------------------------------------------
                           B   271    
                           B     0    	include 'commands\h.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"H" - Hunt in memory command V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
002D66 CD 56 1D 00         B     5    os_cmd_h		call get_start_and_end			002D6A 22 34 6C 00         B     6    				ld (find_hexstringascii),hl		Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 104


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\h.asm
                           B     7    
002D6E CD 44 1D 00         B     8    				call test_mem_range
002D72 DA 0F 17 00         B     9    				jp c,os_range_error				                           B    10    			
002D76 AF                  B    11    				xor a
002D77 32 13 2E 00         B    12    				ld (h_ascii_mode),a
                           B    13    				
002D7B 2A 34 6C 00         B    14    				ld hl,(find_hexstringascii)
002D7F 0600                B    15    				ld b,0
002D81 7E                  B    16    h_lfascii		ld a,(hl)						002D82 B7                  B    17    				or a
002D83 28 28               B    18    				jr z,h_no_text					002D85 FE22                B    19    				cp 022h
002D87 28 03               B    20    				jr z,h_found_quote
002D89 23                  B    21    				inc hl
002D8A 18 F5               B    22    				jr h_lfascii
002D8C 23                  B    23    h_found_quote	inc hl
002D8D 22 34 6C 00         B    24    				ld (find_hexstringascii),hl
002D91 7E                  B    25    h_fasc_len		ld a,(hl)
002D92 B7                  B    26    				or a
002D93 CA 13 17 00         B    27    				jp z,os_no_args_error			002D97 FE22                B    28    				cp 022h
002D99 28 04               B    29    				jr z,h_startas
002D9B 23                  B    30    				inc hl
002D9C 04                  B    31    				inc b
002D9D 18 F2               B    32    				jr h_fasc_len
                           B    33    
002D9F 78                  B    34    h_startas		ld a,b
002DA0 B7                  B    35    				or a
002DA1 CA 13 17 00         B    36    				jp z,os_no_args_error			002DA5 3E01                B    37    				ld a,1
002DA7 32 13 2E 00         B    38    				ld (h_ascii_mode),a
002DAB 18 16               B    39    				jr h_start_search
                           B    40    						
                           B    41    
002DAD 2A 34 6C 00         B    42    h_no_text		ld hl,(find_hexstringascii)
002DB1 0600                B    43    				ld b,0							002DB3 CD 7F 1D 00         B    44    cntfbyts		call hexword_or_bust			002DB7 28 04               B    45    				jr z,gthexstr
002DB9 04                  B    46    				inc b
002DBA 23                  B    47    				inc hl
002DBB 18 F6               B    48    				jr cntfbyts
002DBD 78                  B    49    gthexstr		ld a,b
002DBE B7                  B    50    				or a
002DBF CA 13 17 00         B    51    				jp z,os_no_args_error	
                           B    52    
                           B    53    
002DC3                     B    54    h_start_search
                           B    55    	
002DC3 DD2A 28 6C 00       B    56    				ld ix,(cmdop_start_address)		002DC8 DDE5                B    57    fndloop1		push ix
002DCA FDE1                B    58    				pop iy
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 105


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\h.asm
002DCC 48                  B    59    				ld c,b							002DCD 2A 34 6C 00         B    60    				ld hl,(find_hexstringascii)
002DD1 3A 13 2E 00         B    61    fcmloop			ld a,(h_ascii_mode)
002DD5 B7                  B    62    				or a
002DD6 28 08               B    63    				jr z,h_hex
002DD8 FD7E00              B    64    				ld a,(iy)
002DDB BE                  B    65    				cp (hl)
002DDC 20 23               B    66    				jr nz,nofmatch
002DDE 18 0A               B    67    				jr h_matched
002DE0 CD E6 11 00         B    68    h_hex			call ascii_to_hexword			002DE4 FD7E00              B    69    				ld a,(iy)
002DE7 BB                  B    70    				cp e
002DE8 20 17               B    71    				jr nz,nofmatch
002DEA FD23                B    72    h_matched		inc iy
002DEC 23                  B    73    				inc hl
002DED 0D                  B    74    				dec c
002DEE 20 E1               B    75    				jr nz,fcmloop
                           B    76    			
002DF0 DDE5                B    77    				push ix							002DF2 D1                  B    78    				pop de							002DF3 DDE5                B    79    				push ix
002DF5 C5                  B    80    				push bc
002DF6 CD 47 14 00         B    81    				call os_show_hex_address
002DFA CD 0F 15 00         B    82    				call os_new_line
002DFE C1                  B    83    				pop bc
002DFF DDE1                B    84    				pop ix
                           B    85    				
002E01 DDE5                B    86    nofmatch		push ix
002E03 DD23                B    87    				inc ix
002E05 D1                  B    88    				pop de
002E06 2A 2B 6C 00         B    89    				ld hl,(cmdop_end_address)
002E0A AF                  B    90    				xor a
002E0B ED52                B    91    				sbc hl,de
002E0D 20 B9               B    92    				jr nz,fndloop1
                           B    93    							
002E0F 3E20                B    94    				ld a,020h						002E11 B7                  B    95    				or a
002E12 C9                  B    96    				ret
                           B    97    			
                           B    98    ;----------------------------------------------
                           B    99    
002E13 00                  B   100    h_ascii_mode	db 0
                           B   101    
                           B   102    ;----------------------------------------------
                           B     0    	include 'commands\help.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"?" - List commands. V0.03 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
002E14                     B     5    os_cmd_help		
002E14 AF                  B     6    				xor a
002E15 32 24 6C 00         B     7    				ld (os_linecount),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 106


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\help.asm
                           B     8    				
002E19 21 28 66 00         B     9    				ld hl,packed_help1
002E1D CD 46 15 00         B    10    show_page		call os_show_packed_text
002E21 E5                  B    11    				push hl
002E22 CD 0F 15 00         B    12    				call os_new_line
002E26 E1                  B    13    				pop hl
002E27 23                  B    14    				inc hl						;sk
002E28 7E                  B    15    				ld a,(hl)
002E29 FEFF                B    16    				cp 0ffh						;la
002E2B 28 09               B    17    				jr z,last_help_page
                           B    18    				
002E2D CD 0D 13 00         B    19    				call os_count_lines
002E31 78                  B    20    				ld a,b
002E32 FE79                B    21    				cp 'y'
002E34 28 E7               B    22    				jr z,show_page
                           B    23    
002E36                     B    24    last_help_page
002E36 AF                  B    25    				xor a
002E37 C9                  B    26    				ret	
                           B    27    	
                           B    28    ;----------------------------------------------
                           B    29    	
                           B     0    	include 'commands\gtr.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;">" for write ascii bytes to memory command. V
                           B     3    ;----------------------------------------------
                           B     4    
002E38                     B     5    os_cmd_gtr
                           B     6    
002E38 CD 7F 1D 00         B     7    				call hexword_or_bust			002E3C CA FB 16 00         B     8    				jp z,os_no_start_addr
002E40 23                  B     9    fndquot1		inc hl
002E41 7E                  B    10    				ld a,(hl)
002E42 B7                  B    11    				or a
002E43 CA 13 17 00         B    12    				jp z,os_no_args_error
002E47 FE22                B    13    				cp 022h							002E49 20 F5               B    14    				jr nz,fndquot1
002E4B 23                  B    15    				inc hl
002E4C E5                  B    16    				push hl
002E4D 7E                  B    17    fndquot2		ld a,(hl)
002E4E 23                  B    18    				inc hl
002E4F B7                  B    19    				or a
002E50 28 15               B    20    				jr z,noquot2
002E52 FE22                B    21    				cp 022h							002E54 20 F7               B    22    				jr nz,fndquot2
002E56 E1                  B    23    				pop hl
                           B    24    					
002E57 7E                  B    25    wmbalp			ld a,(hl)						002E58 FE22                B    26    				cp 022h
002E5A 28 09               B    27    				jr z,os_gtrdn					002E5C FE7D                B    28    				cp 07dh
002E5E 28 01               B    29    				jr z,skpnasc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 107


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\gtr.asm
002E60 12                  B    30    				ld (de),a
002E61 13                  B    31    skpnasc			inc de
002E62 23                  B    32    				inc hl
002E63 18 F2               B    33    				jr wmbalp
002E65 AF                  B    34    os_gtrdn		xor a
002E66 C9                  B    35    				ret	
                           B    36    				
002E67 E1                  B    37    noquot2			pop hl							002E68 3E12                B    38    				ld a,012h
002E6A B7                  B    39    				or a
002E6B C9                  B    40    				ret
                           B    41    
                           B    42    ;----------------------------------------------
                           B     0    	include 'commands\lb.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"lb" - Load binary file command. V0.05
                           B     3    ;----------------------------------------------
                           B     4    
002E6C CD 83 17 00         B     5    os_cmd_lb		call os_check_volume_format	
002E70 C0                  B     6    				ret nz
                           B     7    				
002E71 CD 1E 3D 00         B     8    				call os_cache_original_vol_dir
002E75 CD 7E 2E 00         B     9    				call do_lb
002E79 CD 09 3D 00         B    10    				call os_restore_original_vol_di
002E7D C9                  B    11    				ret
                           B    12    				
002E7E CD 07 11 00         B    13    do_lb			call os_scan_for_non_space		002E82 20 04               B    14    				jr nz,lb_got_fn
002E84 3E8D                B    15    missing_args	ld a,8dh
002E86 B7                  B    16    				or a
002E87 C9                  B    17    				ret
                           B    18    				
002E88 AF                  B    19    lb_got_fn		xor a
002E89 CD 9F 3C 00         B    20    				call os_parse_path_string
002E8D C0                  B    21    				ret nz
002E8E CD 1B 17 00         B    22    				call os_find_file				002E92 C0                  B    23    				ret nz
002E93 ED53 03 01 00       B    24    				ld (filesize_cache),de			002E98 2A 75 6B 00         B    25    				ld hl,(free_sysram_base)
002E9C 22 00 01 00         B    26    				ld (data_load_addr),hl			                           B    27    				
002EA0 2A E1 6C 00         B    28    				ld hl,(os_args_loc)
002EA4 CD F2 10 00         B    29    				call os_next_arg
002EA8 CD E6 11 00         B    30    				call ascii_to_hexword			002EAC 28 05               B    31    				jr z,lb_argsok
002EAE FE81                B    32    				cp 81h
002EB0 28 D2               B    33    				jr z,missing_args
002EB2 C9                  B    34    				ret
                           B    35    				
002EB3 ED53 00 01 00       B    36    lb_argsok		ld (data_load_addr),de
002EB8 ED4B 00 01 00       B    37    				ld bc,(data_load_addr)			002EBD C5                  B    38    				push bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 108


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\lb.asm
002EBE E1                  B    39    				pop hl
002EBF ED5B 03 01 00       B    40    				ld de,(filesize_cache)
002EC4 19                  B    41    				add hl,de
002EC5 EB                  B    42    				ex de,hl
002EC6 CD DF 3B 00         B    43    				call os_protected_ram_test
002ECA C4 31 3C 00         B    44    				call nz,os_protected_ram_query
002ECE C0                  B    45    				ret nz
                           B    46    
002ECF 2A 00 01 00         B    47    				ld hl,(data_load_addr)			002ED3 CD 48 17 00         B    48    				call os_read_bytes_from_file
002ED7 C0                  B    49    				ret nz
                           B    50    			
002ED8                     B    51    report_bytes_loaded
                           B    52    
002ED8 21 6D 60 00         B    53    				ld hl,os_hex_prefix_txt			002EDC CD 69 10 00         B    54    				call os_print_string			                           B    55    				
002EE0 11 05 01 00         B    56    				ld de,filesize_cache+2			002EE4 21 8F 6C 00         B    57    				ld hl,output_line
002EE8 0603                B    58    				ld b,3
002EEA CD A4 11 00         B    59    				call n_hexbytes_to_ascii
002EEE 3600                B    60    				ld (hl),0	
002EF0 0605                B    61    				ld b,5							002EF2 CD 7D 14 00         B    62    				call os_print_output_line_skip_
                           B    63    				
002EF6 21 CD 67 00         B    64    				ld hl,bytes_loaded_msg			002EFA CD 46 15 00         B    65    				call os_show_packed_text
                           B    66    				
002EFE 21 CB 60 00         B    67    				ld hl,to_txt					002F02 CD 69 10 00         B    68    				call os_print_string
                           B    69    
002F06 21 6D 60 00         B    70    				ld hl,os_hex_prefix_txt			002F0A CD 69 10 00         B    71    				call os_print_string	
                           B    72    
002F0E ED5B 00 01 00       B    73    				ld de,(data_load_addr)			002F13 CD 47 14 00         B    74    				call os_show_hex_address
                           B    75    
002F17 CD 0F 15 00         B    76    				call os_new_line
002F1B AF                  B    77    				xor a
002F1C C9                  B    78    				ret
                           B    79    				
                           B    80    ;----------------------------------------------
                           B    81    
       00000100            B    82    data_load_addr	equ scratch_pad
       00000103            B    83    filesize_cache	equ scratch_pad+3
                           B    84    
                           B    85    ;----------------------------------------------
                           B     0    	include 'commands\m.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'m' - Show memory as hex bytes command. V0.02 
                           B     3    ;----------------------------------------------
                           B     4    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 109


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\m.asm
       00000010            B     5    bytes_per_line	equ 16
                           B     6    
002F1D CD 7F 1D 00         B     7    os_cmd_m		call hexword_or_bust			002F21 28 05               B     8    				jr z,m_no_hex					002F23 ED53 25 6C 00       B     9    				ld (mem_mon_addr),de
                           B    10    				
002F28 0610                B    11    m_no_hex		ld b,16							002F2A C5                  B    12    smbllp			push bc							                           B    13    				
002F2B 21 64 2F 00         B    14    				ld hl,colon_cmd_prefix			002F2F CD 69 10 00         B    15    				call os_print_string
002F33 ED5B 25 6C 00       B    16    				ld de,(mem_mon_addr)
002F38 CD 47 14 00         B    17    				call os_show_hex_address
                           B    18    
002F3C 21 8F 6C 00         B    19    				ld hl,output_line
002F40 0610                B    20    				ld b,bytes_per_line				002F42 3620                B    21    mmbllp			ld (hl),' '
002F44 23                  B    22    				inc hl
002F45 1A                  B    23    				ld a,(de)	
002F46 CD B2 11 00         B    24    				call hexbyte_to_ascii
002F4A 13                  B    25    				inc de
002F4B 10 F5               B    26    				djnz mmbllp
                           B    27    
002F4D ED53 25 6C 00       B    28    				ld (mem_mon_addr),de
002F52 360B                B    29    				ld (hl),11
002F54 23                  B    30    				inc hl
002F55 3600                B    31    				ld (hl),0
002F57 21 8F 6C 00         B    32    				ld hl,output_line
002F5B CD 69 10 00         B    33    				call os_print_string
002F5F C1                  B    34    				pop bc
002F60 10 C8               B    35    				djnz smbllp
                           B    36    				
002F62 AF                  B    37    				xor a
002F63 C9                  B    38    				ret
                           B    39    
                           B    40    ;----------------------------------------------
                           B    41    
002F64 3A2000              B    42    colon_cmd_prefix	db ': ',0
                           B    43    
                           B    44    ;----------------------------------------------
                           B     0    	include 'commands\md.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"md" - Make dir command. V0.03
                           B     3    ;----------------------------------------------
                           B     4    
002F67 CD 83 17 00         B     5    os_cmd_md		call os_check_volume_format	
002F6B C0                  B     6    				ret nz
                           B     7    			
002F6C CD 1E 3D 00         B     8    				call os_cache_original_vol_dir
002F70 CD 79 2F 00         B     9    				call do_md
002F74 CD 09 3D 00         B    10    				call os_restore_original_vol_di
002F78 C9                  B    11    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 110


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\md.asm
                           B    12    			
002F79 CD 07 11 00         B    13    do_md			call os_scan_for_non_space		002F7D CA 84 2E 00         B    14    				jp z,missing_args
                           B    15    				
002F81 AF                  B    16    				xor a							002F82 CD 9F 3C 00         B    17    				call os_parse_path_string
002F86 C0                  B    18    				ret nz
                           B    19    				
002F87 C3 B9 17 00         B    20    				jp os_make_dir					                           B    21    				
                           B    22    ;----------------------------------------------
                           B     0    	include 'commands\r.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'R' - show CPU register values saved on return
                           B     3    ;----------------------------------------------
                           B     4    
002F8B                     B     5    os_cmd_r	
002F8B DD21 90 6B 00       B     6    				ld ix,store_a1					002F90 21 35 30 00         B     7    				ld hl,register_txt
002F94 CD 69 10 00         B     8    rcmdloop2		call os_print_string
002F98 7E                  B     9    rcmdloop		ld a,(hl)
002F99 FE01                B    10    				cp 1
002F9B 28 0B               B    11    				jr z,showbyte
002F9D FE02                B    12    				cp 2
002F9F 28 15               B    13    				jr z,showword16
002FA1 FE03                B    14    				cp 3
002FA3 28 2E               B    15    				jr z,showaddr
002FA5 23                  B    16    				inc hl
002FA6 18 F0               B    17    				jr rcmdloop
                           B    18    				
002FA8 DD7E00              B    19    showbyte		ld a,(ix)
002FAB DD23                B    20    				inc ix
002FAD DDE5                B    21    				push ix
002FAF E5                  B    22    				push hl
002FB0 CD 5B 14 00         B    23    				call os_show_hex_byte
002FB4 18 2A               B    24    				jr showreg
                           B    25    
002FB6 DD7E01              B    26    showword16		ld a,(ix+1)
002FB9 DDE5                B    27    				push ix
002FBB E5                  B    28    				push hl
002FBC CD 5B 14 00         B    29    				call os_show_hex_byte
002FC0 E1                  B    30    				pop hl
002FC1 DDE1                B    31    				pop ix
002FC3 DD7E00              B    32    				ld a,(ix)
002FC6 DD23                B    33    				inc ix
002FC8 DD23                B    34    				inc ix
002FCA DDE5                B    35    				push ix
002FCC E5                  B    36    				push hl
002FCD CD 5B 14 00         B    37    				call os_show_hex_byte
002FD1 18 0D               B    38    				jr showreg
                           B    39    
002FD3 DD1700              B    40    showaddr		ld de,(ix)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 111


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\r.asm
002FD6 ED3203              B    41    				lea ix,ix+3
002FD9 DDE5                B    42    				push ix
002FDB E5                  B    43    				push hl
002FDC CD 47 14 00         B    44    				call os_show_hex_address
002FE0 E1                  B    45    showreg			pop hl
002FE1 DDE1                B    46    				pop ix
002FE3 23                  B    47    				inc hl
002FE4 7E                  B    48    				ld a,(hl)
002FE5 B7                  B    49    				or a
002FE6 20 AC               B    50    				jr nz,rcmdloop2
                           B    51    			
002FE8 CD 0F 15 00         B    52    				call os_new_line				002FEC 21 99 30 00         B    53    				ld hl,flag_txt
002FF0 CD 2F 14 00         B    54    				call os_copy_to_output_line
002FF4 21 93 6C 00         B    55    				ld hl,output_line+4
002FF8 01050000            B    56    				ld bc,5
002FFC 3A B3 6B 00         B    57    				ld a,(store_f)
003000 CB77                B    58    				bit 6,a							003002 28 02               B    59    				jr z,zfzero
003004 3631                B    60    				ld (hl),'1'
003006 09                  B    61    zfzero			add hl,bc
003007 CB47                B    62    				bit 0,a							003009 28 02               B    63    				jr z,cfzero
00300B 3631                B    64    				ld (hl),'1'
00300D 09                  B    65    cfzero			add hl,bc
00300E CB7F                B    66    				bit 7,a							003010 28 02               B    67    				jr z,sfzero
003012 364D                B    68    				ld (hl),'M'
003014 09                  B    69    sfzero			add hl,bc
003015 CB57                B    70    				bit 2,a							003017 28 02               B    71    				jr z,pfzero
003019 364F                B    72    				ld (hl),'O'
00301B 09                  B    73    pfzero			add hl,bc
00301C 23                  B    74    				inc hl
00301D CB67                B    75    				bit 4,a							00301F 28 02               B    76    				jr z,iffzero
003021 3631                B    77    				ld (hl),'1'
003023                     B    78    iffzero			
003023 01060000            B    79    				ld bc,6
003027 09                  B    80    				add hl,bc
003028 3A B4 6B 00         B    81    				ld a,(store_adl)
00302C C630                B    82    				add a,30h
00302E 77                  B    83    				ld (hl),a
00302F CD 72 14 00         B    84    				call os_print_output_line
003033 AF                  B    85    				xor a
003034 C9                  B    86    				ret
                           B    87    
                           B    88    ;----------------------------------------------
                           B    89    	
                           B    90    
003035 20413D00 01         B    91    register_txt		db ' A=',0,1
00303A 20204243 3D0003     B    92    					db '  BC=',0,3
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 112


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\r.asm
003041 20204445 3D0003     B    93    					db '  DE=',0,3
003048 2020484C 3D0003     B    94    					db '  HL=',0,3
                           B    95    					
00304F 0B                  B    96    					db 11
                           B    97    
003050 27413D00 01         B    98    					db 027h,'A=',0,1
003055 20274243 3D0003     B    99    					db ' ',027h,'BC=',0,3
00305C 20274445 3D0003     B   100    					db ' ',027h,'DE=',0,3
003063 2027484C 3D0003     B   101    					db ' ',027h,'HL=',0,3
                           B   102    					
00306A 0B                  B   103    					db 11
                           B   104    
00306B 2049583D 0003       B   105    					db ' IX=',0,3
003071 2049593D 0003       B   106    					db ' IY=',0,3
                           B   107    					
003077 0B                  B   108    					db 11
                           B   109    					
003078 2050433D 0003       B   110    					db ' PC=',0,3
00307E 204C5350 3D0003     B   111    					db ' LSP=',0,3
003085 20535350 3D0002     B   112    					db ' SSP=',0,2
                           B   113    					
00308C 0B                  B   114    					db 11
                           B   115    					
00308D 204D4241 53453D00   B   116    					db ' MBASE=',0,1,0,0
003095 010000 
                           B   117    					
003098 0B                  B   118    					db 11
                           B   119    
003099 205A463D 30204346   B   120    flag_txt			db ' ZF=0 CF=0 SF=P PV=E IF
0030A1 3D302053 463D5020 
0030A9 50563D45 20494646 
0030B1 3D302041 444C3D30 
0030B9 0B0B00 
                           B   121    		
                           B   122    ;----------------------------------------------
                           B     0    	include 'commands\rd.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"RD" - Remove directory command. V0.03
                           B     3    ;----------------------------------------------
                           B     4    
                           B     5    
0030BC CD 83 17 00         B     6    os_cmd_rd		call os_check_volume_format	
0030C0 C0                  B     7    				ret nz
                           B     8    				
0030C1 CD 1E 3D 00         B     9    				call os_cache_original_vol_dir
0030C5 CD CE 30 00         B    10    				call do_rd
0030C9 CD 09 3D 00         B    11    				call os_restore_original_vol_di
0030CD C9                  B    12    				ret
                           B    13    			
0030CE CD 07 11 00         B    14    do_rd			call os_scan_for_non_space		0030D2 CA 84 2E 00         B    15    				jp z,missing_args
                           B    16    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 113


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rd.asm
0030D6 AF                  B    17    				xor a							0030D7 CD 9F 3C 00         B    18    				call os_parse_path_string
0030DB C0                  B    19    				ret nz
                           B    20    							
0030DC C3 21 18 00         B    21    				jp os_delete_dir				                           B    22    
                           B    23    
                           B    24    ;----------------------------------------------
                           B     0    	include 'commands\rn.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"rn" - Rename command. V0.03
                           B     3    ;----------------------------------------------
                           B     4    
0030E0 CD 83 17 00         B     5    os_cmd_rn		call os_check_volume_format	
0030E4 C0                  B     6    				ret nz
                           B     7    			
0030E5 CD 1E 3D 00         B     8    				call os_cache_original_vol_dir
0030E9 CD F2 30 00         B     9    				call do_rn
0030ED CD 09 3D 00         B    10    				call os_restore_original_vol_di
0030F1 C9                  B    11    				ret
                           B    12    			
0030F2 CD 07 11 00         B    13    do_rn			call os_scan_for_non_space		0030F6 CA 84 2E 00         B    14    				jp z,missing_args
                           B    15    				
0030FA AF                  B    16    				xor a							0030FB CD 9F 3C 00         B    17    				call os_parse_path_string
0030FF C0                  B    18    				ret nz
                           B    19    
003100 E5                  B    20    				push hl
003101 D1                  B    21    				pop de
003102 CD F2 10 00         B    22    				call os_next_arg
003106 7E                  B    23    				ld a,(hl)						003107 B7                  B    24    				or a
003108 CA 84 2E 00         B    25    				jp z,missing_args
                           B    26    				
00310C EB                  B    27    				ex de,hl
00310D C3 0B 18 00         B    28    				jp os_rename_file				                           B    29    		
                           B    30    ;----------------------------------------------
                           B     0    	include 'commands\sb.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'SB' - Save binary file command. V0.03
                           B     3    ;----------------------------------------------
                           B     4    
003111                     B     5    os_cmd_sb
                           B     6    	
003111 CD 83 17 00         B     7    				call os_check_volume_format		003115 C0                  B     8    				ret nz
                           B     9    				
003116 CD 1E 3D 00         B    10    				call os_cache_original_vol_dir
00311A CD 23 31 00         B    11    				call do_sb
00311E CD 09 3D 00         B    12    				call os_restore_original_vol_di
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 114


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\sb.asm
003122 C9                  B    13    				ret
                           B    14    				
003123 CD 07 11 00         B    15    do_sb			call os_scan_for_non_space		003127 CA 84 2E 00         B    16    				jp z,missing_args
00312B 22 06 01 00         B    17    				ld (sb_save_name_addr),hl	
                           B    18    
00312F CD F2 10 00         B    19    				call os_next_arg
003133 CD E6 11 00         B    20    				call ascii_to_hexword			003137 C2 FB 16 00         B    21    				jp nz,os_no_start_addr			00313B ED53 00 01 00       B    22    				ld (sb_save_addr),de
                           B    23    				
003140 CD F2 10 00         B    24    				call os_next_arg
003144 CD E6 11 00         B    25    				call ascii_to_hexword			003148 C2 FF 16 00         B    26    				jp nz,os_no_filesize
00314C ED53 03 01 00       B    27    				ld (sb_save_length),de
                           B    28    				
003151 2A 06 01 00         B    29    				ld hl,(sb_save_name_addr)		003155 AF                  B    30    				xor a
003156 CD 9F 3C 00         B    31    				call os_parse_path_string
00315A 22 06 01 00         B    32    				ld (sb_save_name_addr),hl		00315E C0                  B    33    				ret nz
                           B    34    
00315F CD 1B 17 00         B    35    				call os_find_file				003163 28 06               B    36    				jr z,sb_file_exists
003165 FEC6                B    37    				cp 0c6h							003167 20 17               B    38    				jr nz,sb_makefile
003169 B7                  B    39    				or a
00316A C9                  B    40    				ret
                           B    41    
00316B 21 E6 65 00         B    42    sb_file_exists	ld hl,save_append_msg			00316F CD 46 15 00         B    43    				call os_show_packed_text
003173 CD 58 4D 00         B    44    				call os_wait_key_press
003177 3E79                B    45    				ld a,'y'
003179 B8                  B    46    				cp b
00317A 28 0D               B    47    				jr z,os_sfapp
00317C 3E2C                B    48    				ld a,2ch						00317E B7                  B    49    				or a
00317F C9                  B    50    				ret
                           B    51    
003180 2A 06 01 00         B    52    sb_makefile		ld hl,(sb_save_name_addr)		003184 CD 57 17 00         B    53    				call os_create_file
003188 C0                  B    54    				ret nz
                           B    55    						
003189 2A 06 01 00         B    56    os_sfapp		ld hl,(sb_save_name_addr)		00318D ED5B 00 01 00       B    57    				ld de,(sb_save_addr)			003192 ED4B 03 01 00       B    58    				ld bc,(sb_save_length)			003197 CD 6C 17 00         B    59    				call os_write_bytes_to_file
00319B C0                  B    60    				ret nz	
                           B    61    				
00319C 3E20                B    62    				ld a,020h						00319E B7                  B    63    				or a
00319F C9                  B    64    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 115


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\sb.asm
                           B    65    			
                           B    66    				
                           B    67    ;----------------------------------------------
                           B    68    
       00000100            B    69    sb_save_addr		equ scratch_pad
       00000103            B    70    sb_save_length		equ scratch_pad+3
       00000106            B    71    sb_save_name_addr	equ scratch_pad+6
                           B    72    
                           B    73    ;----------------------------------------------
                           B     0    	include 'commands\rx.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"RX" - Receive binary file via serial port com
                           B     3    ;----------------------------------------------
                           B     4    
       00000040            B     5    buffer_blocks			 equ 64					                           B     6    
       00000100            B     7    rx_buffer_loc			 equ scratch_pad
       00000103            B     8    rx_buffer_ptr			 equ scratch_pad+3
       00000106            B     9    serial_file_length_cache equ scratch_pad+6
       00000109            B    10    rxe_args_location		 equ scratch_pad+9
                           B    11    
                           B    12    
0031A0 7E                  B    13    os_cmd_rx		ld a,(hl)						0031A1 B7                  B    14    				or a
0031A2 CA F3 16 00         B    15    				jp z,os_no_fn_error
                           B    16    				
0031A6 3E3E                B    17    				ld a,'>'						0031A8 BE                  B    18    				cp (hl)
0031A9 C2 C8 32 00         B    19    				jp nz,rx_nrs
0031AD 23                  B    20    				inc hl
0031AE 3E20                B    21    				ld a,' '
0031B0 BE                  B    22    				cp (hl)
0031B1 2B                  B    23    				dec hl
0031B2 C2 C8 32 00         B    24    				jp nz,rx_nrs
                           B    25    				
0031B6 CD 83 17 00         B    26    				call os_check_volume_format		0031BA C0                  B    27    				ret nz		
                           B    28    				
0031BB 01004000            B    29    				ld bc,buffer_blocks*256			0031BF 1E00                B    30    				ld e,0
0031C1 CD 89 3B 00         B    31    				call os_allocate_ram
0031C5 C0                  B    32    				ret nz
0031C6 22000100            B    33    				ld (rx_buffer_loc),hl
                           B    34    				
0031CA 112A0000            B    35    				ld de,02ah						0031CE ED53 F5 69 00       B    36    				ld (serial_filename),de			0031D3 CD 08 34 00         B    37    				call rx_get_header
0031D7 C2 98 32 00         B    38    				jr nz,rxwtd_fail
0031DB CD 2B 4F 00         B    39    				call s_holdack					                           B    40    				
0031DF 21 09 6A 00         B    41    				ld hl,serial_fileheader			0031E3 CD 57 17 00         B    42    				call os_create_file
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 116


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
0031E7 28 3A               B    43    				jr z,rx_ok_ttd
0031E9 FEC9                B    44    				cp 0c9h
0031EB C2 98 32 00         B    45    				jp nz,rxwtd_fail				                           B    46    				
0031EF 21 F0 65 00         B    47    				ld hl,overwrite_msg				0031F3 CD 46 15 00         B    48    				call os_show_packed_text
0031F7 CD 58 4D 00         B    49    				call os_wait_key_press
0031FB 78                  B    50    				ld a,b
0031FC FE59                B    51    				cp 'Y'
0031FE 28 0B               B    52    				jr z,rx_overwrite
003200 FE79                B    53    				cp 'y'
003202 28 07               B    54    				jr z,rx_overwrite
003204 3E2C                B    55    				ld a,2ch
003206 B7                  B    56    				or a
003207 C3 98 32 00         B    57    				jp rxwtd_fail
                           B    58    				
00320B 21 09 6A 00         B    59    rx_overwrite	ld hl,serial_fileheader			00320F CD E1 17 00         B    60    				call os_erase_file
003213 C2 98 32 00         B    61    				jp nz,rxwtd_fail				003217 21 09 6A 00         B    62    				ld hl,serial_fileheader			00321B CD 57 17 00         B    63    				call os_create_file
00321F C2 98 32 00         B    64    				jp nz,rxwtd_fail
                           B    65    				
003223 21 0F 66 00         B    66    rx_ok_ttd		ld hl,ser_recsave_msg
003227 CD 46 15 00         B    67    				call os_show_packed_text
                           B    68    				
00322B 2A 19 6A 00         B    69    rx_rnblk		ld hl,(serial_fileheader+16)	00322F 22060100            B    70    				ld (serial_file_length_cache),h
003233 2A000100            B    71    				ld hl,(rx_buffer_loc)
003237 22030100            B    72    				ld (rx_buffer_ptr),hl
                           B    73    				
00323B 0640                B    74    				ld b,buffer_blocks				                           B    75    				
00323D CD 13 4F 00         B    76    rx_lnb			call s_goodack
003241 CD BD 4E 00         B    77    				call s_getblock
003245 28 0F               B    78    				jr z,rxtd_blok
003247 F5                  B    79    				push af							003248 CD 24 4F 00         B    80    				call s_badack					00324C 21 09 6A 00         B    81    				ld hl,serial_fileheader			003250 CD E1 17 00         B    82    				call os_erase_file
003254 18 47               B    83    				jr rx_dealloc
                           B    84    
003256 CD 2B 4F 00         B    85    rxtd_blok		call s_holdack					                           B    86    				
00325A 21000700            B    87    				ld hl,serial_buffer				00325E ED5B0301 00         B    88    				ld de,(rx_buffer_ptr)
003263 C5                  B    89    				push bc
003264 01000100            B    90    				ld bc,256
003268 EDB0                B    91    				ldir
00326A C1                  B    92    				pop bc
00326B ED530301 00         B    93    				ld (rx_buffer_ptr),de
                           B    94    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 117


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
003270 2A 19 6A 00         B    95    				ld hl,(serial_fileheader+16)	003274 11000100            B    96    				ld de,256
003278 AF                  B    97    				xor a
003279 ED52                B    98    				sbc hl,de
00327B 22 19 6A 00         B    99    				ld (serial_fileheader+16),hl
00327F 28 28               B   100    				jr z,rx_lbr						003281 38 26               B   101    				jr c,rx_lbr						003283 10 B8               B   102    				djnz rx_lnb						                           B   103    
003285 01004000            B   104    				ld bc,buffer_blocks*256			003289 ED5B0001 00         B   105    				ld de,(rx_buffer_loc)
00328E 21 09 6A 00         B   106    				ld hl,serial_fileheader
003292 CD 6C 17 00         B   107    				call os_write_bytes_to_file
003296 28 93               B   108    				jr z,rx_rnblk					003298 F5                  B   109    rxwtd_fail		push af
003299 CD 24 4F 00         B   110    				call s_badack
00329D 01004000            B   111    rx_dealloc		ld bc,buffer_blocks*256
0032A1 1E00                B   112    				ld e,0
0032A3 CD B4 3B 00         B   113    				call os_deallocate_ram
0032A7 F1                  B   114    				pop af
0032A8 C9                  B   115    				ret
                           B   116    				
0032A9 CD 13 4F 00         B   117    rx_lbr			call s_goodack					0032AD ED4B0601 00         B   118    				ld bc,(serial_file_length_cache
0032B2 ED5B0001 00         B   119    				ld de,(rx_buffer_loc)
0032B7 21 09 6A 00         B   120    				ld hl,serial_fileheader
0032BB CD 6C 17 00         B   121    				call os_write_bytes_to_file
0032BF 28 03               B   122    				jr z,rxtd_done
0032C1 F5                  B   123    				push af
0032C2 18 D9               B   124    				jr rx_dealloc
                           B   125    				
0032C4 3E20                B   126    rxtd_done		ld a,020h						0032C6 B7                  B   127    				or a
0032C7 C9                  B   128    				ret
                           B   129    
                           B   130    				
                           B   131    
                           B   132    				
0032C8 3E21                B   133    rx_nrs			ld a,'!'						0032CA BE                  B   134    				cp (hl)							0032CB C2 A9 33 00         B   135    				jr nz,notrxe
0032CF 23                  B   136    				inc hl
0032D0 3E20                B   137    				ld a,' '
0032D2 BE                  B   138    				cp (hl)
0032D3 2B                  B   139    				dec hl
0032D4 C2 A9 33 00         B   140    				jr nz,notrxe
0032D8 CD F2 10 00         B   141    				call os_next_arg
0032DC 22090100            B   142    				ld (rxe_args_location),hl
                           B   143    							
0032E0 112A0000            B   144    				ld de,02ah						0032E4 ED53 F5 69 00       B   145    				ld (serial_filename),de			0032E9 CD 08 34 00         B   146    				call rx_get_header
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 118


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
0032ED C0                  B   147    				ret nz
0032EE 21 05 66 00         B   148    				ld hl,ser_rec2_msg
0032F2 CD 46 15 00         B   149    				call os_show_packed_text
0032F6 CD 13 4F 00         B   150    				call s_goodack
0032FA 3E01                B   151    				ld a,1							0032FC 32 08 6A 00         B   152    				ld (serial_timeout),a
003300 CD BD 4E 00         B   153    				call s_getblock					003304 28 07               B   154    				jr z,rxe_fblok
003306 F5                  B   155    rxe_badblock	push af							003307 CD 24 4F 00         B   156    				call s_badack					00330B F1                  B   157    				pop af
00330C C9                  B   158    				ret
                           B   159    	
00330D ED4B0507 00         B   160    rxe_fblok		ld bc,(serial_buffer+5)			003312 C5                  B   161    				push bc
003313 E1                  B   162    				pop hl
003314 ED5B 19 6A 00       B   163    				ld de,(serial_fileheader+16)
003319 19                  B   164    				add hl,de
00331A EB                  B   165    				ex de,hl
00331B CD DF 3B 00         B   166    				call os_protected_ram_test		00331F 28 11               B   167    				jr z,rxe_norampro
003321 CD 2B 4F 00         B   168    				call s_holdack					003325 CD 31 3C 00         B   169    				call os_protected_ram_query
003329 28 07               B   170    				jr z,rxe_norampro
00332B F5                  B   171    				push af
00332C CD 24 4F 00         B   172    				call s_badack
003330 F1                  B   173    				pop af
003331 C9                  B   174    				ret
                           B   175    	
003332 2A020700            B   176    rxe_norampro	ld hl,(serial_buffer+2)
003336 1150524F            B   177    				ld de,04f5250h					00333A AF                  B   178    				xor a
00333B 28 04               B   179    				jr z,rxe_ok
00333D 3E1A                B   180    				ld a,1ah						00333F B7                  B   181    				or a
003340 C9                  B   182    				ret
003341 2A050700            B   183    rxe_ok			ld hl,(serial_buffer+5)			003345 22 EC 69 00         B   184    				ld (serial_ez80_address),hl
003349 01000100            B   185    				ld bc,256						00334D DD21 09 6A 00       B   186    				ld ix,serial_fileheader
003352 AF                  B   187    				xor a
003353 DDB612              B   188    				or (ix+18)						003356 20 0A               B   189    				jr nz,mtones
003358 DDB611              B   190    				or a,(ix+17)					00335B 20 05               B   191    				jr nz,mtones
00335D 0600                B   192    				ld b,0
00335F DD4E10              B   193    				ld c,(ix+16)					003362 21000700            B   194    mtones			ld hl,serial_buffer				003366 ED5B EC 69 00       B   195    				ld de,(serial_ez80_address)		00336B EDB0                B   196    				ldir
                           B   197    				
00336D D5                  B   198    				push de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 119


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
00336E CD 13 4F 00         B   199    				call s_goodack		
003372 DDE1                B   200    				pop ix							003374 2A 19 6A 00         B   201    				ld hl,(serial_fileheader+16)	003378 11000100            B   202    				ld de,256
00337C AF                  B   203    				xor a
00337D ED52                B   204    				sbc hl,de						00337F 28 18               B   205    				jr z,rxe_done
003381 38 16               B   206    				jr c,rxe_done
003383 EB                  B   207    				ex de,hl
003384 ED53 19 6A 00       B   208    				ld (serial_fileheader+16),de	003389 DD2A EC 69 00       B   209    				ld ix,(serial_ez80_address)
00338E 01000100            B   210    				ld bc,256
003392 DD09                B   211    				add ix,bc
003394 CD 7B 4E 00         B   212    				call s_gbloop					003398 C0                  B   213    				ret nz
003399 E1                  B   214    rxe_done		pop hl							00339A CD FA 45 00         B   215    				call enable_button_nmi			00339E 2A090100            B   216    				ld hl,(rxe_args_location)
0033A2 DD2A EC 69 00       B   217    				ld ix,(serial_ez80_address)
0033A7 DDE9                B   218    				jp (ix)							                           B   219    				
                           B   220    				
                           B   221    
0033A9 CD 4F 34 00         B   222    notrxe			call clear_serial_filename
                           B   223    				
0033AD 0610                B   224    				ld b,16							0033AF 11 F5 69 00         B   225    				ld de,serial_filename
0033B3 CD 55 13 00         B   226    				call os_copy_ascii_run			0033B7 79                  B   227    				ld a,c
0033B8 32 07 6A 00         B   228    				ld (serial_fn_length),a
0033BC CD FE 10 00         B   229    				call os_scan_for_space
                           B   230    				
0033C0 CD 7F 1D 00         B   231    				call hexword_or_bust			0033C4 CA FB 16 00         B   232    				jp z,os_no_start_addr			0033C8 ED530001 00         B   233    				ld (data_load_addr),de			0033CD CD 08 34 00         B   234    				call rx_get_header
0033D1 C0                  B   235    				ret nz
                           B   236    
0033D2 ED4B0001 00         B   237    				ld bc,(data_load_addr)			0033D7 C5                  B   238    				push bc
0033D8 E1                  B   239    				pop hl
0033D9 ED5B 19 6A 00       B   240    				ld de,(serial_fileheader+16)
0033DE 19                  B   241    				add hl,de
0033DF EB                  B   242    				ex de,hl
0033E0 CD DF 3B 00         B   243    				call os_protected_ram_test
0033E4 C4 31 3C 00         B   244    				call nz,os_protected_ram_query
0033E8 C0                  B   245    				ret nz
                           B   246    				
0033E9 21 05 66 00         B   247    				ld hl,ser_rec2_msg
0033ED CD 46 15 00         B   248    				call os_show_packed_text
                           B   249    	
0033F1 2A000100            B   250    				ld hl,(data_load_addr)			Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 120


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
0033F5 CD 69 4E 00         B   251    				call serial_receive_file
0033F9 C0                  B   252    				ret nz							                           B   253    
0033FA ED5B 19 6A 00       B   254    				ld de,(serial_fileheader+16)	0033FF ED530301 00         B   255    				ld (filesize_cache),de
003404 C3 D8 2E 00         B   256    				jp report_bytes_loaded			                           B   257    				
                           B   258    ;----------------------------------------------
                           B   259    
003408                     B   260    rx_get_header
003408 21 01 66 00         B   261    				ld hl,ser_rec_msg
00340C CD 46 15 00         B   262    				call os_show_packed_text
                           B   263    				
003410 3E00                B   264    				ld a,0
003412 32 2A 6A 00         B   265    				ld (anim_wait_count),a			003416 3A 2A 6A 00         B   266    get_hdr_loop	ld a,(anim_wait_count)
00341A 3C                  B   267    				inc a
00341B 47                  B   268    				ld b,a
00341C FE06                B   269    				cp 6
00341E 20 07               B   270    				jr nz,notsix
003420 0E20                B   271    				ld c,' '
003422 0605                B   272    				ld b,5
003424 AF                  B   273    				xor a
003425 18 02               B   274    				jr mcharset
003427 0E2E                B   275    notsix			ld c,'.'
003429 32 2A 6A 00         B   276    mcharset		ld (anim_wait_count),a
00342D CD 3E 1B 00         B   277    				call os_print_multiple_chars
003431 CD B2 10 00         B   278    				call home_cursor
                           B   279    				
003435 21 F5 69 00         B   280    				ld hl,serial_filename			003439 3E01                B   281    				ld a,1							00343B CD CE 4D 00         B   282    				call serial_get_header
00343F C8                  B   283    				ret z
003440 FE83                B   284    				cp 083h							003442 C0                  B   285    				ret nz
003443 CD B3 4D 00         B   286    				call os_get_key_press
003447 FE76                B   287    				cp 076h
003449 20 CB               B   288    				jr nz,get_hdr_loop
00344B 3E80                B   289    				ld a,080h						00344D B7                  B   290    notsto			or a
00344E C9                  B   291    				ret								                           B   292    							
                           B   293    
                           B   294    ;----------------------------------------------
                           B   295    
00344F                     B   296    clear_serial_filename
                           B   297    
00344F E5                  B   298    				push hl							003450 21 F5 69 00         B   299    				ld hl,serial_filename
003454 01100000            B   300    				ld bc,16
003458 AF                  B   301    				xor a
003459 CD 7C 16 00         B   302    				call os_bchl_memfill
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 121


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
00345D E1                  B   303    				pop hl
00345E C9                  B   304    				ret
                           B   305    
                           B   306    ;----------------------------------------------
                           B   307    
                           B     0    	include 'commands\tx.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'TX' - Transmit binary file via serial port co
                           B     3    ;----------------------------------------------
                           B     4    
00345F 7E                  B     5    os_cmd_tx		ld a,(hl)						003460 B7                  B     6    				or a
003461 CA F3 16 00         B     7    				jp z,os_no_fn_error
                           B     8    			
003465 E5                  B     9    				push hl							003466 21 F5 69 00         B    10    				ld hl,serial_filename
00346A 01100000            B    11    				ld bc,16
00346E AF                  B    12    				xor a
00346F CD 7C 16 00         B    13    				call os_bchl_memfill
003473 E1                  B    14    				pop hl
                           B    15    			
003474 0610                B    16    				ld b,16							003476 11 F5 69 00         B    17    				ld de,serial_filename
00347A CD 55 13 00         B    18    				call os_copy_ascii_run			00347E 79                  B    19    				ld a,c
00347F 32 07 6A 00         B    20    				ld (serial_fn_length),a
003483 CD FE 10 00         B    21    				call os_scan_for_space
                           B    22    							
003487 CD 7F 1D 00         B    23    				call hexword_or_bust			00348B CA FB 16 00         B    24    				jp z,os_no_start_addr			00348F ED53 EC 69 00       B    25    				ld (serial_ez80_address),de
                           B    26    			
003494 CD 7F 1D 00         B    27    				call hexword_or_bust			003498 CA FF 16 00         B    28    				jp z,os_no_filesize
00349C ED53 EF 69 00       B    29    				ld (serial_file_length),de
0034A1 21000000            B    30    				ld hl,0
0034A5 3E07                B    31    				ld a,07h						0034A7 B7                  B    32    				or a
0034A8 ED5A                B    33    				adc hl,de
0034AA 28 1D               B    34    				jr z,s_error
                           B    35    				
0034AC 21 0A 66 00         B    36    				ld hl,ser_send_msg
0034B0 CD 46 15 00         B    37    				call os_show_packed_text
                           B    38    			
0034B4 ED5B EF 69 00       B    39    				ld de,(serial_file_length)
0034B9 21 F5 69 00         B    40    				ld hl,serial_filename			0034BD DD2A EC 69 00       B    41    				ld ix,(serial_ez80_address)
0034C2 CD 32 4F 00         B    42    				call serial_send_file
0034C6 C0                  B    43    				ret nz			
                           B    44    			
0034C7 3E20                B    45    				ld a,020h						0034C9 B7                  B    46    s_error			or a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 122


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\tx.asm
0034CA C9                  B    47    				ret
                           B    48    				
                           B    49    			
                           B    50    ;----------------------------------------------
                           B     0    	include 'commands\t.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'T' - Show memory as ascii text command. V0.02
                           B     3    ;----------------------------------------------
                           B     4    
0034CB CD 7F 1D 00         B     5    os_cmd_t		call hexword_or_bust			0034CF 28 05               B     6    				jr z,t_no_hex					0034D1 ED53 25 6C 00       B     7    				ld (mem_mon_addr),de
                           B     8    							
0034D6 0610                B     9    t_no_hex		ld b,16
0034D8 C5                  B    10    smaalp			push bc
                           B    11    				
0034D9 21 1C 35 00         B    12    				ld hl,gtr_cmd_prefix			0034DD CD 69 10 00         B    13    				call os_print_string
0034E1 ED5B 25 6C 00       B    14    				ld de,(mem_mon_addr)
0034E6 CD 47 14 00         B    15    				call os_show_hex_address
                           B    16    
0034EA 21 8F 6C 00         B    17    				ld hl,output_line
0034EE 3620                B    18    				ld (hl),' '
0034F0 23                  B    19    				inc hl
0034F1 3622                B    20    				ld (hl),022h
0034F3 0610                B    21    				ld b,16
0034F5 23                  B    22    mabllp			inc hl
0034F6 1A                  B    23    				ld a,(de)	
0034F7 FE20                B    24    				cp 020h
0034F9 38 04               B    25    				jr c,chchar
0034FB FE7F                B    26    				cp 07fh
0034FD 38 02               B    27    				jr c,nchchar
0034FF 3E7C                B    28    chchar			ld a,07ch
003501 77                  B    29    nchchar			ld (hl),a
003502 13                  B    30    				inc de
003503 10 F0               B    31    				djnz mabllp
                           B    32    
003505 ED53 25 6C 00       B    33    				ld (mem_mon_addr),de
00350A 23                  B    34    				inc hl
00350B 3622                B    35    				ld (hl),022h
00350D 23                  B    36    				inc hl
00350E 360B                B    37    				ld (hl),11
003510 23                  B    38    				inc hl
003511 3600                B    39    				ld (hl),0
003513 CD 72 14 00         B    40    				call os_print_output_line
003517 C1                  B    41    				pop bc
003518 10 BE               B    42    				djnz smaalp
00351A AF                  B    43    				xor a
00351B C9                  B    44    				ret
                           B    45    	
                           B    46    ;----------------------------------------------
                           B    47    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 123


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\t.asm
00351C 3E2000              B    48    gtr_cmd_prefix	db '> ',0
                           B    49    
                           B    50    ;----------------------------------------------
                           B     0    	include 'commands\mount.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; "MOUNT" = Re-mount and show drives v0.02 - AD
                           B     3    ;----------------------------------------------
                           B     4    
00351F                     B     5    os_cmd_remount
                           B     6    
00351F 3E00                B     7    				ld a,0							003521 CD 1C 19 00         B     8    				call os_mount_volumes
003525 CD 0F 15 00         B     9    				call os_new_line
003529 AF                  B    10    				xor a
00352A C9                  B    11    				ret
                           B    12    
                           B    13    ;----------------------------------------------
                           B    14    	
                           B     0    	include 'commands\vers.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; "Vers" = Show OS / Hardware version v0.04
                           B     3    ;----------------------------------------------
                           B     4    
                           B     5    
00352B E5                  B     6    os_cmd_vers		push hl
00352C CD 8F 49 00         B     7    				call hwsc_get_version
003530 22100100            B     8    				ld (scratch_pad+10h),hl
003534 ED531301 00         B     9    				ld (scratch_pad+13h),de
003539 E1                  B    10    				pop hl
00353A 7E                  B    11    				ld a,(hl)
00353B FE23                B    12    				cp '#'
00353D 20 13               B    13    				jr nz,vers_not_quiet
                           B    14    				
00353F CD 7F 3C 00         B    15    				call clear_output_envars
003543 DD211001 00         B    16    				ld ix,scratch_pad+10h
003548 0602                B    17    				ld b,2
00354A 0E00                B    18    				ld c,0
00354C CD 4C 3C 00         B    19    				call os_output_to_envars
003550 AF                  B    20    				xor a
003551 C9                  B    21    				ret
                           B    22    								
                           B    23    				
003552 21 6F 60 00         B    24    vers_not_quiet	ld hl,os_version_txt
003556 CD 69 10 00         B    25    				call os_print_string
                           B    26    			
00355A CD 8F 49 00         B    27    				call hwsc_get_version
00355E D5                  B    28    				push de
00355F EB                  B    29    				ex de,hl
003560 CD 66 14 00         B    30    				call os_show_hex_word
                           B    31    				
003564 21 8A 60 00         B    32    				ld hl,fwd_slash_txt
003568 CD 69 10 00         B    33    				call os_print_string
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 124


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\vers.asm
                           B    34    				
00356C 21 7C 60 00         B    35    				ld hl,hw_version_txt
003570 CD 69 10 00         B    36    				call os_print_string
003574 D1                  B    37    				pop de
003575 CD 66 14 00         B    38    				call os_show_hex_word
                           B    39    				
003579 CD 0F 15 00         B    40    				call os_new_line
00357D CD 0F 15 00         B    41    				call os_new_line	
003581 AF                  B    42    				xor a
003582 C9                  B    43    				ret
                           B    44    				
                           B    45    	
                           B    46    ;----------------------------------------------
                           B    47    	
                           B     0    	include 'commands\ltn.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; OS "<" Command: Update mem hex bytes and re-d
                           B     3    ;
                           B     4    ; Not currently enabled in PROSE
                           B     5    ;----------------------------------------------
                           B     6    
003583                     B     7    os_cmd_ltn
                           B     8    
003583 AF                  B     9    				xor a
003584 C9                  B    10    				ret
                           B    11    
                           B    12    
                           B    13    ;----------------------------------------------
                           B    14    	
                           B     0    	include 'commands\pen.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"Pen" - Change attribute v0.03 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
003585                     B     5    os_cmd_pen
                           B     6    	
003585 0612                B     7    				ld b,18							003587 DD21 B0 69 00       B     8    				ld ix,current_pen
                           B     9    				
00358C CD 7F 1D 00         B    10    chpenlp			call hexword_or_bust			003590 28 0D               B    11    				jr z,pendone					003592 23                  B    12    				inc hl
003593 DD7300              B    13    				ld (ix),e
003596 DD7201              B    14    				ld (ix+1),d
003599 DD23                B    15    				inc ix
00359B DD23                B    16    				inc ix
00359D 10 ED               B    17    				djnz chpenlp	
                           B    18    				
00359F 21 B4 69 00         B    19    pendone			ld hl,pen_palette				0035A3 CD 06 47 00         B    20    				call hswc_set_ui_colours
0035A7 AF                  B    21    				xor a
0035A8 C9                  B    22    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 125


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\pen.asm
                           B    23    
                           B    24    ;----------------------------------------------
                           B     0    	include 'commands\vmode.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"vmode" - Change video mode - ADL mode 0.3
                           B     3    ;----------------------------------------------
                           B     4    
0035A9                     B     5    os_cmd_vmode
                           B     6    	
0035A9 CD 7F 1D 00         B     7    				call hexword_or_bust			0035AD 20 04               B     8    				jr nz,vm_data					0035AF 3E81                B     9    				ld a,81h						0035B1 B7                  B    10    				or a
0035B2 C9                  B    11    				ret
                           B    12    
0035B3 7B                  B    13    vm_data			ld a,e
0035B4 CD 55 16 00         B    14    				call os_set_vmode
0035B8 C9                  B    15    				ret
                           B    16    				
                           B    17    ;----------------------------------------------
                           B     0    	include 'commands\font.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"font" - replace font. V0.02
                           B     3    ;----------------------------------------------
                           B     4    
0035B9 CD 83 17 00         B     5    os_cmd_font		call os_check_volume_format	
0035BD C0                  B     6    				ret nz
                           B     7    				
0035BE CD 1E 3D 00         B     8    				call os_cache_original_vol_dir
0035C2 CD CB 35 00         B     9    				call do_font
0035C6 CD 09 3D 00         B    10    				call os_restore_original_vol_di
0035CA C9                  B    11    				ret
                           B    12    
0035CB CD 07 11 00         B    13    do_font			call os_scan_for_non_space		0035CF CA 84 2E 00         B    14    				jp z,missing_args
                           B    15    
0035D3 AF                  B    16    				xor a							0035D4 CD 9F 3C 00         B    17    				call os_parse_path_string
0035D8 C0                  B    18    				ret nz
0035D9 22000100            B    19    				ld (scratch_pad),hl				                           B    20    
0035DD CD 1B 17 00         B    21    				call os_find_file				0035E1 28 17               B    22    				jr z,got_font
                           B    23    
0035E3 CD D7 17 00         B    24    				call os_root_dir				0035E7 C0                  B    25    				ret nz
0035E8 21 4A 36 00         B    26    				ld hl,fonts_fn
0035EC CD C7 17 00         B    27    				call os_change_dir
0035F0 C0                  B    28    				ret nz
0035F1 2A000100            B    29    				ld hl,(scratch_pad)
0035F5 CD 1B 17 00         B    30    				call os_find_file				0035F9 C0                  B    31    				ret nz
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 126


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\font.asm
                           B    32    				
0035FA 11000800            B    33    got_font		ld de,800h
0035FE CD 2A 17 00         B    34    				call os_set_load_length			003602 21000080            B    35    				ld hl,vram_a_addr				003606 CD 48 17 00         B    36    				call os_read_bytes_from_file
00360A CD 10 36 00         B    37    				call convert_font
00360E AF                  B    38    				xor a
00360F C9                  B    39    				ret
                           B    40    				
                           B    41    ;----------------------------------------------
                           B    42    				
003610 1EFF                B    43    convert_font	ld e,255						003612 01080000            B    44    				ld bc,8
003616 21F80780            B    45    				ld hl,vram_a_addr+07f8h	
00361A CD 25 36 00         B    46    conv_allch		call char_to_font
00361E AF                  B    47    				xor a
00361F ED42                B    48    				sbc hl,bc
003621 1D                  B    49    				dec e
003622 20 F6               B    50    				jr nz,conv_allch
003624 C9                  B    51    				ret
                           B    52    
                           B    53    ;----------------------------------------------
                           B    54    
                           B    55    ; set E = character number
                           B    56    ;     HL = character source def address
                           B    57    
003625 E5                  B    58    char_to_font	push hl
003626 C5                  B    59    				push bc
003627 01400000            B    60    				ld bc,64
00362B 43                  B    61    				ld b,e
00362C ED4C                B    62    				mlt bc
00362E DD210000 80         B    63    				ld ix,vram_a_addr
003633 DD09                B    64    				add ix,bc
003635 CD 3D 36 00         B    65    				call conv_char
003639 C1                  B    66    				pop bc
00363A E1                  B    67    				pop hl
00363B AF                  B    68    				xor a
00363C C9                  B    69    				ret
                           B    70    	
                           B    71    ;----------------------------------------------
                           B    72    
00363D 0608                B    73    conv_char		ld b,8
00363F 7E                  B    74    bfontlp1		ld a,(hl)
003640 DD7700              B    75    				ld (ix),a
003643 23                  B    76    				inc hl
003644 ED3208              B    77    				lea ix,ix+8
003647 10 F6               B    78    				djnz bfontlp1
003649 C9                  B    79    				ret	
                           B    80    				
                           B    81    ;----------------------------------------------
                           B    82    
00364A 666F6E74 7300       B    83    fonts_fn		db "fonts",0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 127


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\font.asm
                           B    84    
                           B    85    ;----------------------------------------------
                           B     0    	include 'commands\set.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"set" - set an environment variable v0.02
                           B     3    ;
                           B     4    ; Command should be in format: SET BLAH = SOMET
                           B     5    ;
                           B     6    ;----------------------------------------------
                           B     7    
003650 7E                  B     8    os_cmd_set		ld a,(hl)					; i
003651 B7                  B     9    				or a
003652 28 61               B    10    				jr z,show_envars
                           B    11    		
003654 11030100            B    12    				ld de,scratch_pad+3			; p
003658 7E                  B    13    evsalp1			ld a,(hl)
003659 12                  B    14    				ld (de),a
00365A B7                  B    15    				or a
00365B 28 54               B    16    				jr z,set_bad_args
00365D FE3D                B    17    				cp '='
00365F 28 11               B    18    				jr z,ev_goteq
003661 FE20                B    19    				cp ' '
003663 28 04               B    20    				jr z,set_fequ
003665 23                  B    21    				inc hl
003666 13                  B    22    				inc de
003667 18 EF               B    23    				jr evsalp1
                           B    24    
003669 23                  B    25    set_fequ		inc hl						; f
00366A 7E                  B    26    				ld a,(hl)
00366B B7                  B    27    				or a
00366C 28 43               B    28    				jr z,set_bad_args
00366E FE3D                B    29    				cp '='
003670 20 F7               B    30    				jr nz,set_fequ
                           B    31    				
003672 23                  B    32    ev_goteq		inc hl
003673 CD 07 11 00         B    33    				call os_scan_for_non_space		003677 28 38               B    34    				jr z,set_bad_args
                           B    35    				
003679 AF                  B    36    				xor a
00367A 12                  B    37    				ld (de),a
00367B 13                  B    38    				inc de
00367C ED530001 00         B    39    				ld (scratch_pad),de				                           B    40    				
003681 7E                  B    41    				ld a,(hl)
003682 0E00                B    42    				ld c,0
003684 FE22                B    43    				cp 022h						
003686 20 02               B    44    				jr nz,set_noquotes
003688 0C                  B    45    				inc c
003689 23                  B    46    				inc hl
                           B    47    
00368A 7E                  B    48    set_noquotes	ld a,(hl)
00368B 12                  B    49    				ld (de),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 128


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\set.asm
00368C CB41                B    50    				bit 0,c
00368E 28 06               B    51    				jr z,set_fcs
003690 FE22                B    52    				cp 022h
003692 28 0D               B    53    				jr z,evsadone2
003694 18 04               B    54    				jr set_igsp
003696 FE20                B    55    set_fcs			cp ' '
003698 28 07               B    56    				jr z,evsadone2
00369A B7                  B    57    set_igsp		or a
00369B 28 14               B    58    				jr z,set_bad_args
00369D 23                  B    59    				inc hl
00369E 13                  B    60    				inc de
00369F 18 E9               B    61    				jr set_noquotes
0036A1 AF                  B    62    evsadone2		xor a
0036A2 12                  B    63    				ld (de),a
                           B    64    				
0036A3 21030100            B    65    				ld hl,scratch_pad+3
0036A7 ED5B0001 00         B    66    				ld de,(scratch_pad)
0036AC CD 65 1C 00         B    67    				call os_set_envar
0036B0 C9                  B    68    				ret
                           B    69    
0036B1 3E82                B    70    set_bad_args	ld a,82h
0036B3 B7                  B    71    				or a
0036B4 C9                  B    72    				ret
                           B    73    				
                           B    74    
0036B5 21000200            B    75    show_envars		ld hl,envar_list
                           B    76    				
0036B9 7E                  B    77    show_envlp		ld a,(hl)
0036BA FEFF                B    78    				cp 0ffh
0036BC 28 12               B    79    				jr z,set_done
0036BE E5                  B    80    				push hl
0036BF CD 69 10 00         B    81    				call os_print_string
0036C3 CD 0F 15 00         B    82    				call os_new_line
0036C7 E1                  B    83    				pop hl
                           B    84    				
0036C8 23                  B    85    set_fnl			inc hl
0036C9 7E                  B    86    				ld a,(hl)
0036CA B7                  B    87    				or a
0036CB 20 FB               B    88    				jr nz,set_fnl
0036CD 23                  B    89    				inc hl
0036CE 18 E9               B    90    				jr show_envlp
                           B    91    				
0036D0 AF                  B    92    set_done		xor a
0036D1 C9                  B    93    				ret
                           B    94    								
                           B    95    ;----------------------------------------------
                           B     0    	include 'commands\dz.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; OS "DZ" Command: Z80-mode Disassemble V0.01
                           B     3    ;----------------------------------------------
                           B     4    
0036D2 FD21 1B 24 00       B     5    os_cmd_dz		ld iy,prefix_bits_loc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 129


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\dz.asm
0036D7 FDCB 07 86          B     6    				res adl_dis,(iy+var_adl)
0036DB C3 3D 1E 00         B     7    				jp os_cmd_d_go
                           B     8    				
                           B     9    ;----------------------------------------------
                           B     0    	include 'commands\sound.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"Sound" - Play a section of Audio RAM v1.00
                           B     3    ;----------------------------------------------
                           B     4    
0036DF 11FFFF00            B     5    os_cmd_sound	ld de,0ffffh					0036E3 ED53 72 37 00       B     6    				ld (aud_per),de
0036E8 3E40                B     7    				ld a,64
0036EA 32 74 37 00         B     8    				ld (aud_vol),a
0036EE 3E11                B     9    				ld a,11h
0036F0 32 75 37 00         B    10    				ld (aud_chans),a
                           B    11    				
0036F4 CD 7F 1D 00         B    12    				call hexword_or_bust			0036F8 20 06               B    13    				jr nz,alocok					0036FA CD 24 4D 00         B    14    				call hwsc_disable_audio			0036FE AF                  B    15    				xor a
0036FF C9                  B    16    				ret
003700 ED53 66 37 00       B    17    alocok			ld (aud_loc),de
003705 ED53 6C 37 00       B    18    				ld (aud_loc_loop),de
                           B    19    				
00370A CD 7F 1D 00         B    20    				call hexword_or_bust
00370E 20 04               B    21    				jr nz,gotaudlen
003710 3E8D                B    22    missaudpar		ld a,8dh						003712 B7                  B    23    				or a
003713 C9                  B    24    				ret				
003714 ED53 69 37 00       B    25    gotaudlen		ld (aud_len),de
003719 ED53 6F 37 00       B    26    				ld (aud_len_loop),de
                           B    27    				
00371E CD 7F 1D 00         B    28    				call hexword_or_bust
003722 28 33               B    29    				jr z,play_sound
003724 7B                  B    30    				ld a,e
003725 32 72 37 00         B    31    				ld (aud_per),a
003729 7A                  B    32    				ld a,d
00372A 32 73 37 00         B    33    				ld (aud_per+1),a
                           B    34    				
00372E CD 7F 1D 00         B    35    				call hexword_or_bust
003732 28 23               B    36    				jr z,play_sound
003734 7B                  B    37    				ld a,e
003735 32 74 37 00         B    38    				ld (aud_vol),a
                           B    39    				
003739 CD 7F 1D 00         B    40    				call hexword_or_bust
00373D 28 18               B    41    				jr z,play_sound
00373F 7B                  B    42    				ld a,e
003740 32 75 37 00         B    43    				ld (aud_chans),a
                           B    44    				
003744 CD 7F 1D 00         B    45    				call hexword_or_bust
003748 28 0D               B    46    				jr z,play_sound
00374A 7B                  B    47    				ld a,e
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 130


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\sound.asm
00374B B7                  B    48    				or a
00374C 20 09               B    49    				jr nz,play_sound
00374E 11010000            B    50    				ld de,1
003752 ED53 6F 37 00       B    51    				ld (aud_len_loop),de
                           B    52    				
003757 21 66 37 00         B    53    play_sound		ld hl,audio_structure
00375B 3A 75 37 00         B    54    				ld a,(aud_chans)
00375F 4F                  B    55    				ld c,a
003760 CD 96 4C 00         B    56    				call hwsc_play_audio
003764 AF                  B    57    				xor a
003765 C9                  B    58    				ret
                           B    59    				
                           B    60    
                           B    61    ;----------------------------------------------
                           B    62    
003766                     B    63    audio_structure
                           B    64    
003766 000000              B    65    aud_loc			dw24 0			;loc
003769 000000              B    66    aud_len			dw24 0			;len
00376C 000000              B    67    aud_loc_loop	dw24 0	  	    ;loop loc
00376F 000000              B    68    aud_len_loop	dw24 0		    ;loop len
                           B    69    
003772 FFFF                B    70    aud_per			dw 0ffffh		;per
003774 40                  B    71    aud_vol			db 64			;vol
                           B    72    
003775 11                  B    73    aud_chans		db 11h			;channels to pl
                           B    74    
                           B    75    ;----------------------------------------------
                           B    76    		
                           B     0    	include 'commands\avail.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; "Avail" = Show OS / Hardware version v0.03
                           B     3    ;----------------------------------------------
                           B     4    
003776 7E                  B     5    os_cmd_avail	ld a,(hl)
003777 FE23                B     6    				cp '#'
003779 20 13               B     7    				jr nz,avnoenv
                           B     8    				
00377B CD 7F 3C 00         B     9    				call clear_output_envars		00377F DD21 75 6B 00       B    10    				ld ix,free_sysram_base
003784 0606                B    11    				ld b,6
003786 0E00                B    12    				ld c,0
003788 CD 4C 3C 00         B    13    				call os_output_to_envars
00378C AF                  B    14    				xor a
00378D C9                  B    15    				ret
                           B    16    				
                           B    17    								
00378E DD21 75 6B 00       B    18    avnoenv			ld ix,free_sysram_base
003793 21 DD 37 00         B    19    				ld hl,sysram_txt
003797 CD 69 10 00         B    20    				call os_print_string
00379B CD C1 37 00         B    21    				call show_range
                           B    22    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 131


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\avail.asm
00379F 21 EC 37 00         B    23    				ld hl,vram_a_txt
0037A3 CD 69 10 00         B    24    				call os_print_string
0037A7 CD C1 37 00         B    25    				call show_range
                           B    26    				
0037AB 21 FA 37 00         B    27    				ld hl,vram_b_txt
0037AF CD 69 10 00         B    28    				call os_print_string
0037B3 CD C1 37 00         B    29    				call show_range
                           B    30    				
0037B7 CD 0F 15 00         B    31    				call os_new_line
0037BB CD 0F 15 00         B    32    				call os_new_line	
0037BF AF                  B    33    				xor a
0037C0 C9                  B    34    				ret
                           B    35    				
                           B    36    				
0037C1 DD1700              B    37    show_range		ld de,(ix)
0037C4 CD 47 14 00         B    38    				call os_show_hex_address
0037C8 3E2D                B    39    				ld a,'-'
0037CA CD AB 10 00         B    40    				call os_print_char
0037CE DD1703              B    41    				ld de,(ix+3)
0037D1 CD 47 14 00         B    42    				call os_show_hex_address
0037D5 CD 0F 15 00         B    43    				call os_new_line
0037D9 ED3206              B    44    				lea ix,ix+6
0037DC C9                  B    45    				ret
                           B    46    
                           B    47    			
                           B    48    
0037DD 0B537973 74656D20   B    49    sysram_txt		db 11,'System  RAM: ',0
0037E5 2052414D 3A2000 
0037EC 56696465 6F202020   B    50    vram_a_txt		db    'Video   RAM: ',0
0037F4 52414D3A 2000 
0037FA 5370722F 41756420   B    51    vram_b_txt		db    'Spr/Aud RAM: ',0
003802 52414D3A 2000 
                           B    52    
                           B    53    
                           B    54    ;----------------------------------------------
                           B    55    	
                           B     0    	include 'commands\fi.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; "FI" = Show file info.  v0.02
                           B     3    ;----------------------------------------------
                           B     4    
003808 CD 07 11 00         B     5    os_cmd_fi		call os_scan_for_non_space		00380C CA 84 2E 00         B     6    				jp z,missing_args
                           B     7    								
003810 CD 83 17 00         B     8    				call os_check_volume_format	
003814 C0                  B     9    				ret nz
                           B    10    
003815 CD 1E 3D 00         B    11    				call os_cache_original_vol_dir
003819 CD 22 38 00         B    12    				call do_fi
00381D CD 09 3D 00         B    13    				call os_restore_original_vol_di
003821 C9                  B    14    				ret
                           B    15    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 132


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\fi.asm
003822 E5                  B    16    do_fi			push hl
003823 CD F2 10 00         B    17    				call os_next_arg
003827 7E                  B    18    				ld a,(hl)	
003828 32220100            B    19    				ld (scratch_pad+34),a			00382C E1                  B    20    				pop hl
                           B    21    
00382D AF                  B    22    				xor a							00382E CD 9F 3C 00         B    23    				call os_parse_path_string
003832 C0                  B    24    				ret nz
                           B    25    
003833 CD 1B 17 00         B    26    				call os_find_file				003837 28 12               B    27    				jr z,fi_filexists
003839 F5                  B    28    				push af							00383A 3A220100            B    29    				ld a,(scratch_pad+34)			00383E FE23                B    30    				cp '#'
003840 28 02               B    31    				jr z,fi_remove
003842 F1                  B    32    				pop af
003843 C9                  B    33    				ret
                           B    34    				
003844 CD 7F 3C 00         B    35    fi_remove		call clear_output_envars
003848 F1                  B    36    				pop af
003849 AF                  B    37    				xor a							00384A C9                  B    38    				ret
                           B    39    				
                           B    40    				
                           B    41    				
00384B 21260100            B    42    fi_filexists	ld hl,scratch_pad+38
00384F 71                  B    43    				ld (hl),c
003850 ED532301 00         B    44    				ld (scratch_pad+35),de			                           B    45    				
003855 11100000            B    46    				ld de,16
003859 CD 2A 17 00         B    47    				call os_set_load_length			                           B    48    				
00385D 21100100            B    49    				ld hl,scratch_pad+16			003861 CD 48 17 00         B    50    				call os_read_bytes_from_file
003865 C0                  B    51    				ret nz
                           B    52    
003866 FD211501 00         B    53    				ld iy,scratch_pad+16+5			00386B DD213001 00         B    54    				ld ix,scratch_pad+48			003870 CD 24 39 00         B    55    				call fi_conv_w24				003874 CD 24 39 00         B    56    				call fi_conv_w24				003878 CD 31 39 00         B    57    				call fi_conv_w16				00387C CD 31 39 00         B    58    				call fi_conv_w16				003880 11000000            B    59    				ld de,0
003884 FD5E00              B    60    				ld e,(iy)
003887 DD1F00              B    61    				ld (ix),de						                           B    62    
00388A 3A220100            B    63    				ld a,(scratch_pad+34)
00388E FE23                B    64    				cp '#'
003890 28 31               B    65    				jr z,fi_quiet
                           B    66    				
003892 CD 06 39 00         B    67    				call fi_show_length				Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 133


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\fi.asm
                           B    68    				
003896 CD 45 39 00         B    69    				call test_ezp
00389A 20 21               B    70    				jr nz,not_ezp_file
                           B    71    				
00389C 21 62 39 00         B    72    				ld hl,fi_txt2					0038A0 0605                B    73    				ld b,5
0038A2 DD213001 00         B    74    				ld ix,scratch_pad+48	
0038A7 CD 69 10 00         B    75    fi_sptlp		call os_print_string
0038AB E5                  B    76    				push hl
0038AC DD1700              B    77    				ld de,(ix+0)
0038AF CD 47 14 00         B    78    				call os_show_hex_address
0038B3 CD 0F 15 00         B    79    				call os_new_line
0038B7 E1                  B    80    				pop hl
0038B8 ED3203              B    81    				lea ix,ix+3
0038BB 10 EA               B    82    				djnz fi_sptlp
                           B    83    				
0038BD CD 0F 15 00         B    84    not_ezp_file	call os_new_line
0038C1 AF                  B    85    				xor a
0038C2 C9                  B    86    				ret
                           B    87    				
                           B    88    
                           B    89    
0038C3 E5                  B    90    fi_quiet		push hl
0038C4 CD 7F 3C 00         B    91    				call clear_output_envars
0038C8 E1                  B    92    				pop hl	
                           B    93    
0038C9 11260100            B    94    				ld de,scratch_pad+38			0038CD 21280100            B    95    				ld hl,scratch_pad+40
0038D1 E5                  B    96    				push hl
0038D2 0604                B    97    				ld b,4
0038D4 CD A4 11 00         B    98    				call n_hexbytes_to_ascii
0038D8 3600                B    99    				ld (hl),0
0038DA D1                  B   100    				pop de
0038DB DD21 2C 61 00       B   101    				ld ix,envar_out_n_txt
0038E0 DD360330            B   102    				ld (ix+3),'0'
0038E4 DD360430            B   103    				ld (ix+4),'0'
0038E8 DDE5                B   104    				push ix
0038EA E1                  B   105    				pop hl
0038EB CD 65 1C 00         B   106    				call os_set_envar
                           B   107    				
0038EF CD 45 39 00         B   108    				call test_ezp
0038F3 28 02               B   109    				jr z,q_ezp_file
0038F5 AF                  B   110    				xor a
0038F6 C9                  B   111    				ret
                           B   112    				
0038F7 DD213001 00         B   113    q_ezp_file		ld ix,scratch_pad+48			0038FC 0605                B   114    				ld b,5
0038FE 0E01                B   115    				ld c,1
003900 CD 4C 3C 00         B   116    				call os_output_to_envars		003904 AF                  B   117    				xor a
003905 C9                  B   118    				ret
                           B   119    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 134


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\fi.asm
                           B   120    
                           B   121    
003906 21 51 39 00         B   122    fi_show_length	ld hl,fi_txt
00390A CD 69 10 00         B   123    				call os_print_string
00390E 3A260100            B   124    				ld a,(scratch_pad+38)
003912 CD 5B 14 00         B   125    				call os_show_hex_byte
003916 ED5B2301 00         B   126    				ld de,(scratch_pad+35)
00391B CD 47 14 00         B   127    				call os_show_hex_address
00391F CD 0F 15 00         B   128    				call os_new_line
003923 C9                  B   129    				ret
                           B   130    
                           B   131    
                           B   132    ;----------------------------------------------
                           B   133    
003924 FD1700              B   134    fi_conv_w24		ld de,(iy)
003927 DD1F00              B   135    				ld (ix),de
00392A ED3203              B   136    				lea ix,ix+3
00392D ED3303              B   137    				lea iy,iy+3
003930 C9                  B   138    				ret
                           B   139    				
003931 11000000            B   140    fi_conv_w16		ld de,0
003935 FD5E00              B   141    				ld e,(iy)
003938 FD5601              B   142    				ld d,(iy+1)
00393B DD1F00              B   143    				ld (ix),de
00393E ED3203              B   144    				lea ix,ix+3
003941 ED3302              B   145    				lea iy,iy+2
003944 C9                  B   146    				ret
                           B   147    
                           B   148    ;----------------------------------------------
                           B   149    
                           B   150    
003945 2A120100            B   151    test_ezp		ld hl,(scratch_pad+16+2)		003949 AF                  B   152    				xor a
00394A 1150524F            B   153    				ld de,04f5250h	
00394E ED52                B   154    				sbc hl,de
003950 C9                  B   155    				ret
                           B   156    					
                           B   157    ;----------------------------------------------
                           B   158    				
003951 546F7461 6C204C65   B   159    fi_txt			db "Total Length  : ",0
003959 6E677468 20203A20 
003961 00 
003962 4C6F6164 204C6F63   B   160    fi_txt2			db "Load Location : ",0
00396A 6174696F 6E203A20 
003972 00 
003973 5472756E 63617465   B   161    				db "Truncate to   : ",0
00397B 20746F20 20203A20 
003983 00 
003984 50524F53 45205265   B   162    				db "PROSE Reqd    : ",0
00398C 71642020 20203A20 
003994 00 
003995 414D4F45 42412052   B   163    				db "AMOEBA Reqd   : ",0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 135


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\fi.asm
00399D 65716420 20203A20 
0039A5 00 
0039A6 41444C20 6D6F6465   B   164    				db "ADL mode      : ",0
0039AE 20202020 20203A20 
0039B6 00 
                           B   165    
                           B   166    ;----------------------------------------------
                           B   167    
                           B     0    	include 'commands\echo.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; echo v0.01
                           B     3    ;----------------------------------------------
                           B     4    
0039B7                     B     5    os_cmd_echo
                           B     6    
0039B7 7E                  B     7    			ld a,(hl)					;if no 
0039B8 B7                  B     8    			or a
0039B9 20 04               B     9    			jr nz,got_args
0039BB 3E81                B    10    			ld a,81h					;no dat
0039BD B7                  B    11    			or a
0039BE C9                  B    12    			ret
                           B    13    
                           B    14    
0039BF 11000100            B    15    got_args	ld de,scratch_pad
0039C3 7E                  B    16    			ld a,(hl)					;is cha
0039C4 FE22                B    17    			cp 22h
0039C6 20 0C               B    18    			jr nz,got_string
                           B    19    						
0039C8 0650                B    20    			ld b,80
0039CA 23                  B    21    echolp1		inc hl
0039CB 7E                  B    22    			ld a,(hl)
0039CC FE22                B    23    			cp 22h
0039CE 28 04               B    24    			jr z,got_string
0039D0 12                  B    25    			ld (de),a
0039D1 13                  B    26    			inc de
0039D2 10 F6               B    27    			djnz echolp1
                           B    28    
0039D4 3E0B                B    29    got_string	ld a,11
0039D6 12                  B    30    			ld (de),a					;add a 
0039D7 13                  B    31    			inc de
0039D8 AF                  B    32    			xor a
0039D9 12                  B    33    			ld (de),a
                           B    34    			
0039DA 21000100            B    35    			ld hl,scratch_pad
0039DE CD 69 10 00         B    36    			call os_print_string
0039E2 AF                  B    37    			xor a
0039E3 C9                  B    38    			ret
                           B    39    			
                           B    40    ;----------------------------------------------
                           B    41    
                           A  3234    	
0039E4 C9                  A  3235    os_cmd_unused	ret		; <- dummy command, sho
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 136


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  3236    
                           A  3237    ;----------------------------------------------
                           A  3238    
0039E5                     A  3239    os_get_mem_base
                           A  3240    
0039E5 2A 75 6B 00         A  3241    		ld hl,(free_sysram_base)
0039E9 ED5B 7B 6B 00       A  3242    		ld de,(free_vram_a_base)
0039EE ED4B 81 6B 00       A  3243    		ld bc,(free_vram_b_base)
0039F3 BF                  A  3244    		cp a
0039F4 C9                  A  3245    		ret
                           A  3246    
                           A  3247    
0039F5                     A  3248    os_get_mem_top
                           A  3249    
0039F5 2A 78 6B 00         A  3250    		ld hl,(free_sysram_top)
0039F9 ED5B 7E 6B 00       A  3251    		ld de,(free_vram_a_top)
0039FE ED4B 84 6B 00       A  3252    		ld bc,(free_vram_b_top)
003A03 BF                  A  3253    		cp a
003A04 C9                  A  3254    		ret
                           A  3255    
                           A  3256    ;----------------------------------------------
                           A  3257    
003A05                     A  3258    ext_set_pointer
                           A  3259    
                           A  3260    ; Set D = 1: use default pointer, otherwise:
                           A  3261    
                           A  3262    ;  Set HL to location of sprite data in memory 
                           A  3263    ;  followed by:
                           A  3264    ;   $00 - palette offset
                           A  3265    ;   $00 - colour count
                           A  3266    ;  then.. palette data (starting from colour 1)
                           A  3267    
                           A  3268    ;   Set C to pointer height (max 32)
                           A  3269    ;   Set B to palette 0-3
                           A  3270    ;   Set E to enable/disable pointer sprite
                           A  3271    
                           A  3272    ;   Returns with Zero Flag set if mouse driver 
                           A  3273    				
003A05 CC A3 16 00         A  3274    				call z,mbase_hl
                           A  3275    
003A09                     A  3276    os_set_pointer
                           A  3277    
003A09 7B                  A  3278    				ld a,e
003A0A B7                  A  3279    				or a
003A0B CA AF 3A 00         A  3280    				jr z,disable_pointer
                           A  3281    				
003A0F 3A 74 6B 00         A  3282    				ld a,(devices_connected)		003A13 E602                A  3283    				and 2
003A15 20 07               A  3284    				jr nz,ok_md_enabled
003A17 CD AF 3A 00         A  3285    				call disable_pointer
003A1B AF                  A  3286    				xor a
003A1C 3C                  A  3287    				inc a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 137


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
003A1D C9                  A  3288    				ret
                           A  3289    				
                           A  3290    				
003A1E 7A                  A  3291    ok_md_enabled	ld a,d
003A1F E601                A  3292    				and 1
003A21 28 27               A  3293    				jr z,user_def_pointer
                           A  3294    					
003A23 21 88 70 00         A  3295    				ld hl,default_pointer
003A27 1100FEC7            A  3296    				ld de,vram_b_addr+vram_b_size-5
003A2B 01 AC 00 00         A  3297    				ld bc,default_pointer_colours-d
003A2F CD C7 16 00         A  3298    				call unpack_rle
                           A  3299    					
003A33 01000000            A  3300    				ld bc,0
003A37 0E 14               A  3301    				ld c,default_pointer_height
003A39 ED43 80 6D 00       A  3302    				ld (os_pointer_height),bc
003A3E 21 34 71 00         A  3303    				ld hl,default_pointer_colours
003A42 3E03                A  3304    				ld a,3
003A44 32 83 6D 00         A  3305    				ld (os_pointer_palette),a		003A48 18 1F               A  3306    				jr copy_spr_pal
                           A  3307    				
003A4A                     A  3308    user_def_pointer
003A4A 78                  A  3309    				ld a,b
003A4B E603                A  3310    				and 3
003A4D 32 83 6D 00         A  3311    				ld (os_pointer_palette),a	
003A51 79                  A  3312    				ld a,c
003A52 FE20                A  3313    				cp 020h
003A54 38 02               A  3314    				jr c,pointhok
003A56 3E20                A  3315    				ld a,020h
003A58 32 80 6D 00         A  3316    pointhok		ld (os_pointer_height),a
003A5C 01100000            A  3317    				ld bc,16
003A60 47                  A  3318    				ld b,a
003A61 ED4C                A  3319    				mlt bc							003A63 1100FEC7            A  3320    				ld de,vram_b_addr+vram_b_size-5
003A67 EDB0                A  3321    				ldir							                           A  3322    							
003A69 E5                  A  3323    copy_spr_pal	push hl							003A6A 01000000            A  3324    				ld bc,0
003A6E 4E                  A  3325    				ld c,(hl)
003A6F CB21                A  3326    				sla c
003A71 CB10                A  3327    				rl b							003A73 210000FF            A  3328    				ld hl,hw_palette			
003A77 09                  A  3329    				add hl,bc
003A78 3A 83 6D 00         A  3330    				ld a,(os_pointer_palette)		003A7C CB27                A  3331    				sla a
003A7E 47                  A  3332    				ld b,a
003A7F 0E00                A  3333    				ld c,0
003A81 09                  A  3334    				add hl,bc				
003A82 EB                  A  3335    				ex de,hl						003A83 E1                  A  3336    				pop hl							003A84 23                  A  3337    				inc hl							003A85 0600                A  3338    				ld b,0
003A87 4E                  A  3339    				ld c,(hl)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 138


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
003A88 CB21                A  3340    				sla c
003A8A CB10                A  3341    				rl b							003A8C 23                  A  3342    				inc hl
003A8D EDB0                A  3343    				ldir							                           A  3344    				
003A8F 21E07F00            A  3345    				ld hl,07fe0h
003A93 22 7D 6D 00         A  3346    				ld (os_pointer_definition),hl	003A97 3E01                A  3347    				ld a,1
003A99 32 7C 6D 00         A  3348    				ld (os_pointer_enable),a
003A9D 320118FF            A  3349    				ld (sprite_control),a			003AA1 3A 83 6D 00         A  3350    				ld a,(os_pointer_palette)
003AA5 320318FF            A  3351    				ld (sprite_palette_select),a	003AA9 CD 4A 49 00         A  3352    				call hwsc_update_pointer_sprite
003AAD AF                  A  3353    				xor a
003AAE C9                  A  3354    				ret
                           A  3355    
                           A  3356    
003AAF                     A  3357    disable_pointer
                           A  3358    
003AAF AF                  A  3359    				xor a
003AB0 32 7C 6D 00         A  3360    				ld (os_pointer_enable),a
003AB4 320118FF            A  3361    				ld (sprite_control),a			003AB8 C9                  A  3362    				ret
                           A  3363    				
                           A  3364    ;----------------------------------------------
                           A  3365    
003AB9                     A  3366    test_amoeba_vers
                           A  3367    
003AB9 CD 8F 49 00         A  3368    				call hwsc_get_version			003ABD 210A0100            A  3369    				ld hl,amoeba_version_required-1
003AC1 AF                  A  3370    				xor a
003AC2 ED52                A  3371    				sbc hl,de
003AC4 D8                  A  3372    				ret c
                           A  3373    				
003AC5 21 F2 60 00         A  3374    				ld hl,hw_warn_txt2
003AC9 110B0100            A  3375    				ld de,amoeba_version_required
003ACD CD D7 11 00         A  3376    				call hexword_to_ascii
                           A  3377    				
003AD1 21004080            A  3378    				ld hl,vram_a_addr+16384			003AD5 222010FF            A  3379    				ld (bitmap_parameters),hl		003AD9 3600                A  3380    				ld (hl),0
003ADB E5                  A  3381    				push hl
003ADC D1                  A  3382    				pop de
003ADD 13                  A  3383    				inc de
003ADE 01002C01            A  3384    				ld bc,320*240
003AE2 EDB0                A  3385    				ldir
                           A  3386    					
003AE4 DD2138D1 80         A  3387    				ld ix,vram_a_addr+16384+(320*11
003AE9 FD21 DD 60 00       A  3388    				ld iy,hw_warn_txt1				003AEE FD7E00              A  3389    nextwchar		ld a,(iy)
003AF1 B7                  A  3390    				or a
003AF2 28 3B               A  3391    				jr z,wmsg_done
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 139


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
003AF4 21400000            A  3392    				ld hl,64
003AF8 67                  A  3393    				ld h,a
003AF9 ED6C                A  3394    				mlt hl
003AFB 11000080            A  3395    				ld de,vram_a_addr
003AFF 19                  A  3396    				add hl,de						003B00 0E08                A  3397    				ld c,8
003B02 7E                  A  3398    wpixlp2			ld a,(hl)
003B03 0608                A  3399    				ld b,8
003B05 CB17                A  3400    wpixlp1			rl a
003B07 30 06               A  3401    				jr nc,nowpix
003B09 DD360001            A  3402    				ld (ix),1
003B0D 18 04               A  3403    				jr wpixd
003B0F DD360000            A  3404    nowpix			ld (ix),0
003B13 DD23                A  3405    wpixd			inc ix
003B15 10 EE               A  3406    				djnz wpixlp1
003B17 11380100            A  3407    				ld de,320-8
003B1B DD19                A  3408    				add ix,de
003B1D 11080000            A  3409    				ld de,8
003B21 19                  A  3410    				add hl,de
003B22 0D                  A  3411    				dec c
003B23 20 DD               A  3412    				jr nz,wpixlp2
                           A  3413    				
003B25 1108F6FF            A  3414    				ld de,8-(320*8)
003B29 DD19                A  3415    				add ix,de
003B2B FD23                A  3416    				inc iy
003B2D 18 BF               A  3417    				jr nextwchar
                           A  3418    
                           A  3419    
003B2F CD 0D 4B 00         A  3420    wmsg_done		call purge_keyboard
003B33 CD 71 43 00         A  3421    				call set_irq_vectors
003B37 CD C9 43 00         A  3422    				call enable_os_irqs
003B3B FB                  A  3423    				ei
                           A  3424    
003B3C CD E2 48 00         A  3425    wmsg_loop		call hwsc_wait_vrt			;	                           A  3426    				
003B40 11CC0C00            A  3427    				ld de,ccch
003B44 21 22 6C 00         A  3428    				ld hl,cursorflashtimer
003B48 34                  A  3429    				inc (hl)
003B49 7E                  A  3430    				ld a,(hl)
003B4A E640                A  3431    				and 64
003B4C 28 04               A  3432    				jr z,got_wcolour
003B4E 11000000            A  3433    				ld de,000h
003B52 ED530200 FF         A  3434    got_wcolour		ld (hw_palette+2),de
                           A  3435    								
003B57 CD B3 4D 00         A  3436    				call os_get_key_press
003B5B FE76                A  3437    				cp 76h
003B5D 20 DD               A  3438    				jr nz,wmsg_loop
003B5F C3000000            A  3439    				jp 0
                           A  3440    
                           A  3441    ;----------------------------------------------
                           A  3442    
                           A  3443    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 140


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
003B63 D5                  A  3444    relativize_hl	push de						
                           A  3445    
003B64 D1                  A  3446    				pop de
003B65 D1                  A  3447    				pop de						; P
003B66 19                  A  3448    				add hl,de
003B67 11080000            A  3449    				ld de,8
003B6B B7                  A  3450    				or a
003B6C ED52                A  3451    				sbc hl,de
003B6E 3B                  A  3452    				dec sp
003B6F 3B                  A  3453    				dec sp
003B70 3B                  A  3454    				dec sp
003B71 3B                  A  3455    				dec sp
003B72 3B                  A  3456    				dec sp
003B73 3B                  A  3457    				dec sp
003B74 D1                  A  3458    				pop de						; o
003B75 C9                  A  3459    				ret
                           A  3460    
                           A  3461    
003B76 D5                  A  3462    relative_call	push de						
                           A  3463    
003B77 D1                  A  3464    				pop de
003B78 D1                  A  3465    				pop de						; P
003B79 19                  A  3466    				add hl,de
003B7A 11080000            A  3467    				ld de,8
003B7E B7                  A  3468    				or a
003B7F ED52                A  3469    				sbc hl,de
003B81 3B                  A  3470    				dec sp
003B82 3B                  A  3471    				dec sp
003B83 3B                  A  3472    				dec sp
003B84 3B                  A  3473    				dec sp
003B85 3B                  A  3474    				dec sp
003B86 3B                  A  3475    				dec sp
003B87 D1                  A  3476    				pop de						; o
003B88 E9                  A  3477    				jp (hl)
                           A  3478    
                           A  3479    
                           A  3480    ;----------------------------------------------
                           A  3481    
003B89                     A  3482    os_allocate_ram
                           A  3483    
                           A  3484    ; set BC = number of bytes to allocate
                           A  3485    ; set E = 0 sysram, E = 1 vram_a, E = 2 vram_b
                           A  3486    ; returns HL = address of allocated RAM
                           A  3487    ; ZF set if all OK
                           A  3488    
003B89 7B                  A  3489    				ld a,e
003B8A 11060000            A  3490    				ld de,6
003B8E 57                  A  3491    				ld d,a
003B8F ED5C                A  3492    				mlt de
003B91 DD21 75 6B 00       A  3493    				ld ix,free_sysram_base
003B96 DD19                A  3494    				add ix,de
                           A  3495    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 141


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
003B98 DD2703              A  3496    				ld hl,(ix+3)
003B9B AF                  A  3497    				xor a
003B9C ED42                A  3498    				sbc hl,bc
003B9E 38 0E               A  3499    				jr c,alloc_err
003BA0 DD2F03              A  3500    				ld (ix+3),hl
                           A  3501    				
003BA3 DD1700              A  3502    				ld de,(ix)
003BA6 AF                  A  3503    				xor a
003BA7 E5                  A  3504    				push hl
003BA8 ED52                A  3505    				sbc hl,de
003BAA E1                  A  3506    				pop hl
003BAB 23                  A  3507    				inc hl
003BAC 30 04               A  3508    				jr nc,alloc_ok
003BAE 3E8E                A  3509    alloc_err		ld a,8eh						003BB0 B7                  A  3510    				or a
003BB1 C9                  A  3511    				ret
                           A  3512    				
003BB2 AF                  A  3513    alloc_ok		xor a
003BB3 C9                  A  3514    				ret
                           A  3515    			
                           A  3516    
                           A  3517    
003BB4                     A  3518    os_deallocate_ram
                           A  3519    
                           A  3520    ; set BC = number of bytes to de-allocate
                           A  3521    ; set E = 0 sysram, E = 1 vram_a, E = 2 vram_b
                           A  3522    ; returns HL = address of allocated RAM
                           A  3523    ; ZF set if all OK		
                           A  3524    
003BB4 D5                  A  3525    				push de
                           A  3526    				
003BB5 7B                  A  3527    				ld a,e
003BB6 11060000            A  3528    				ld de,6
003BBA 57                  A  3529    				ld d,a
003BBB ED5C                A  3530    				mlt de
003BBD DD21 75 6B 00       A  3531    				ld ix,free_sysram_base
003BC2 DD19                A  3532    				add ix,de
                           A  3533    				
003BC4 DD2703              A  3534    				ld hl,(ix+3)
003BC7 09                  A  3535    				add hl,bc
003BC8 DD2F03              A  3536    				ld (ix+3),hl
                           A  3537    				
003BCB D1                  A  3538    				pop de							003BCC 7B                  A  3539    				ld a,e
003BCD B7                  A  3540    				or a
003BCE 20 0D               A  3541    				jr nz,dealloc_ok				                           A  3542    				
003BD0 1100FE07            A  3543    				ld de,sysram_addr+sysram_size-s
003BD4 AF                  A  3544    				xor a
003BD5 ED52                A  3545    				sbc hl,de
003BD7 38 04               A  3546    				jr c,dealloc_ok
003BD9 1B                  A  3547    				dec de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 142


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
003BDA DD1F03              A  3548    				ld (ix+3),de
003BDD AF                  A  3549    dealloc_ok		xor a
003BDE C9                  A  3550    				ret
                           A  3551    				
                           A  3552    				
                           A  3553    ;----------------------------------------------
                           A  3554    
003BDF                     A  3555    os_protected_ram_test
                           A  3556    
                           A  3557    ; set bc = start of range
                           A  3558    ; set de = end of range
                           A  3559    
                           A  3560    ; Returns ZF set if no collision
                           A  3561    
                           A  3562    
003BDF DD21 75 6B 00       A  3563    				ld ix,free_sysram_base			003BE4 DD2700              A  3564    				ld hl,(ix)
003BE7 AF                  A  3565    				xor a
003BE8 ED42                A  3566    				sbc hl,bc
003BEA 38 04               A  3567    				jr c,no_prose_hit
003BEC 3E26                A  3568    				ld a,26h						003BEE B7                  A  3569    				or a
003BEF C9                  A  3570    				ret
                           A  3571    				
003BF0 DD2706              A  3572    no_prose_hit	ld hl,(ix+6)					003BF3 AF                  A  3573    				xor a
003BF4 ED42                A  3574    				sbc hl,bc
003BF6 38 0D               A  3575    				jr c,no_vram_a_low_hit
003BF8 21000080            A  3576    				ld hl,800000h
003BFC AF                  A  3577    				xor a
003BFD ED52                A  3578    				sbc hl,de
003BFF 30 04               A  3579    				jr nc,no_vram_a_low_hit
003C01 3E36                A  3580    				ld a,36h						003C03 B7                  A  3581    				or a
003C04 C9                  A  3582    				ret
                           A  3583    
003C05                     A  3584    no_vram_a_low_hit
                           A  3585    				
003C05 CD 1A 3C 00         A  3586    				call test_alloc
003C09 C0                  A  3587    				ret nz
003C0A ED3206              A  3588    				lea ix,ix+6
003C0D CD 1A 3C 00         A  3589    				call test_alloc
003C11 C0                  A  3590    				ret nz
003C12 ED3206              A  3591    				lea ix,ix+6
003C15 CD 1A 3C 00         A  3592    				call test_alloc
003C19 C9                  A  3593    				ret 
                           A  3594    				
003C1A DD2703              A  3595    test_alloc		ld hl,(ix+3)					003C1D AF                  A  3596    				xor a
003C1E ED52                A  3597    				sbc hl,de
003C20 30 0D               A  3598    				jr nc,no_colis
003C22 21000008            A  3599    				ld hl,sysram_addr+sysram_size	Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 143


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
003C26 AF                  A  3600    				xor a
003C27 ED42                A  3601    				sbc hl,bc
003C29 38 04               A  3602    				jr c,no_colis
003C2B 3E35                A  3603    				ld a,35h						003C2D B7                  A  3604    				or a
003C2E C9                  A  3605    				ret
                           A  3606    				
003C2F AF                  A  3607    no_colis		xor a
003C30 C9                  A  3608    				ret
                           A  3609    				
                           A  3610    ;----------------------------------------------
                           A  3611    
003C31                     A  3612    os_protected_ram_query
                           A  3613    
003C31 F5                  A  3614    				push af
003C32 21 F7 60 00         A  3615    				ld hl,pmq_txt
003C36 CD 69 10 00         A  3616    				call os_print_string
003C3A CD 58 4D 00         A  3617    				call os_wait_key_press
003C3E 78                  A  3618    				ld a,b
003C3F FE79                A  3619    				cp 'y'
003C41 28 06               A  3620    				jr z,ok_pmwrite
003C43 FE59                A  3621    				cp 'Y'
003C45 28 02               A  3622    				jr z,ok_pmwrite
003C47 F1                  A  3623    				pop af
003C48 C9                  A  3624    				ret
                           A  3625    				
003C49 F1                  A  3626    ok_pmwrite		pop af
003C4A AF                  A  3627    				xor a
003C4B C9                  A  3628    				ret
                           A  3629    
                           A  3630    ;----------------------------------------------
                           A  3631    					
003C4C                     A  3632    os_output_to_envars
                           A  3633    
                           A  3634    ; Set IX to location of first 24bit value to ou
                           A  3635    ; B = number of envars to make 
                           A  3636    ; C = Start envar number
                           A  3637    				
003C4C C5                  A  3638    out_to_envlp	push bc
003C4D 79                  A  3639    				ld a,c
003C4E 21 2F 61 00         A  3640    				ld hl,envar_out_n_txt+3
003C52 CD B2 11 00         A  3641    				call hexbyte_to_ascii
                           A  3642    						
003C56 21000100            A  3643    				ld hl,scratch_pad
003C5A ED1202              A  3644    				lea de,ix+2
003C5D 0603                A  3645    				ld b,3
003C5F CD A4 11 00         A  3646    				call n_hexbytes_to_ascii
003C63 3600                A  3647    				ld (hl),0
                           A  3648    				
003C65 21 2C 61 00         A  3649    				ld hl,envar_out_n_txt
003C69 11000100            A  3650    				ld de,scratch_pad
003C6D DDE5                A  3651    				push ix
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 144


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
003C6F CD 65 1C 00         A  3652    				call os_set_envar
003C73 DDE1                A  3653    				pop ix
003C75 C1                  A  3654    				pop bc
003C76 C0                  A  3655    				ret nz
                           A  3656    				
003C77 ED3203              A  3657    				lea ix,ix+3
003C7A 0C                  A  3658    				inc c
003C7B 10 CF               A  3659    				djnz out_to_envlp
003C7D AF                  A  3660    				xor a
003C7E C9                  A  3661    				ret			
                           A  3662    
                           A  3663    
003C7F                     A  3664    clear_output_envars
                           A  3665    
003C7F 0E00                A  3666    				ld c,0
003C81 C5                  A  3667    del_out_envlp	push bc
003C82 79                  A  3668    				ld a,c
003C83 21 2F 61 00         A  3669    				ld hl,envar_out_n_txt+3
003C87 CD B2 11 00         A  3670    				call hexbyte_to_ascii
003C8B 21 2C 61 00         A  3671    				ld hl,envar_out_n_txt
003C8F CD BB 1C 00         A  3672    				call os_delete_envar
003C93 C1                  A  3673    				pop bc
003C94 C0                  A  3674    				ret nz
003C95 0C                  A  3675    				inc c
003C96 10 E9               A  3676    				djnz del_out_envlp
003C98 AF                  A  3677    				xor a
003C99 C9                  A  3678    				ret			
                           A  3679    
                           A  3680    
                           A  3681    ;----------------------------------------------
                           A  3682    
003C9A                     A  3683    ext_parse_path
                           A  3684    
003C9A CC A3 16 00         A  3685    				call z,mbase_hl
003C9E 7B                  A  3686    				ld a,e
                           A  3687    									
003C9F                     A  3688    os_parse_path_string
                           A  3689    
                           A  3690    ; Set HL = string address in format "locomotion
                           A  3691    ; A: 1 = change to all names in string, 0 = sto
                           A  3692    				
003C9F 32060100            A  3693    				ld (scratch_pad+6),a
                           A  3694    	
003CA3 E5                  A  3695    				push hl
003CA4 DDE1                A  3696    				pop ix
003CA6 DD7E04              A  3697    				ld a,(ix+4)
003CA9 FE3A                A  3698    				cp ':'							003CAB 20 27               A  3699    				jr nz,pp_nchvol
003CAD 11 3D 6A 00         A  3700    				ld de,vol_txt+1
003CB1 0603                A  3701    				ld b,3
003CB3 CD 36 13 00         A  3702    				call os_compare_strings
003CB7 20 1B               A  3703    				jr nz,pp_nchvol
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 145


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
003CB9 11050000            A  3704    				ld de,5
003CBD 19                  A  3705    				add hl,de
003CBE 22 E1 6C 00         A  3706    				ld (os_args_loc),hl				003CC2 DD7E03              A  3707    				ld a,(ix+3)						003CC5 D630                A  3708    				sub 030h
003CC7 CD B2 1B 00         A  3709    				call os_change_volume
003CCB C0                  A  3710    				ret nz							003CCC CD D7 17 00         A  3711    				call os_root_dir				003CD0 2A E1 6C 00         A  3712    				ld hl,(os_args_loc)	
                           A  3713    			
003CD4 E5                  A  3714    pp_nchvol		push hl
003CD5 D1                  A  3715    				pop de
                           A  3716    				
003CD6 1B                  A  3717    				dec de
003CD7 13                  A  3718    pp_chkstring	inc de
003CD8 1A                  A  3719    				ld a,(de)						003CD9 B7                  A  3720    				or a
003CDA 28 1D               A  3721    				jr z,pp_end
003CDC FE20                A  3722    				cp ' '
003CDE 28 19               A  3723    				jr z,pp_end
003CE0 FE2F                A  3724    				cp '/'
003CE2 20 F3               A  3725    				jr nz,pp_chkstring
                           A  3726    
003CE4 13                  A  3727    				inc de
003CE5 ED530701 00         A  3728    				ld (scratch_pad+7),de
003CEA CD C7 17 00         A  3729    				call os_change_dir				003CEE C0                  A  3730    				ret nz
                           A  3731    				
003CEF 2A070100            A  3732    				ld hl,(scratch_pad+7)			003CF3 22 E1 6C 00         A  3733    				ld (os_args_loc),hl
003CF7 18 DB               A  3734    				jr pp_nchvol
                           A  3735    					
003CF9 3A060100            A  3736    pp_end			ld a,(scratch_pad+6)			003CFD B7                  A  3737    				or a
003CFE C8                  A  3738    				ret z
003CFF ED53 E1 6C 00       A  3739    				ld (os_args_loc),de	
003D04 CD C7 17 00         A  3740    				call os_change_dir
003D08 C9                  A  3741    				ret
                           A  3742    
                           A  3743    ;----------------------------------------------
                           A  3744    
003D09                     A  3745    os_restore_original_vol_dir
                           A  3746    
003D09 F5                  A  3747    				push af							003D0A 3A 00 6D 00         A  3748    				ld a,(original_vol)
003D0E CD B2 1B 00         A  3749    				call os_change_volume	
003D12 ED5B FD 6C 00       A  3750    				ld de,(original_dir)
003D17 CD 62 1B 00         A  3751    				call fs_update_dir_cluster
003D1B F1                  A  3752    				pop af
003D1C B7                  A  3753    				or a
003D1D C9                  A  3754    				ret
                           A  3755    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 146


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  3756    				
003D1E                     A  3757    os_cache_original_vol_dir
                           A  3758    
003D1E F5                  A  3759    				push af
003D1F C5                  A  3760    				push bc
003D20 D5                  A  3761    				push de
003D21 E5                  A  3762    				push hl
003D22 3A 38 6A 00         A  3763    				ld a,(current_volume)
003D26 32 00 6D 00         A  3764    				ld (original_vol),a
003D2A CD 56 1B 00         A  3765    				call fs_get_dir_cluster
003D2E ED53 FD 6C 00       A  3766    				ld (original_dir),de
003D33 E1                  A  3767    				pop hl
003D34 D1                  A  3768    				pop de
003D35 C1                  A  3769    				pop bc
003D36 F1                  A  3770    				pop af
003D37 C9                  A  3771    				ret
                           A  3772    				
                           A  3773    ;----------------------------------------------
                           A  3774    
                           B     0    	include 'script_routines.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"PROSE script routines V0.04 
                           B     3    ;
                           B     4    ; Notes: Changing drives within a script not su
                           B     5    ;        Scripts cannot launch scripts as this 
                           B     6    ;		 Abort with CRTL + C
                           B     7    ;
                           B     8    ;        Supports: IF [CONDITION] jumps. Syntax
                           B     9    ;        
                           B    10    ;          "IF ENVAR = STRING LABEL" (or IF ENV
                           B    11    ;          (goto LABEL must be declared as [LAB
                           B    12    ;----------------------------------------------
                           B    13    
       00000010            B    14    max_if_chars		equ 16 ;(string size for en
                           B    15    
       00000000            B    16    scr_in_script		equ 0
       00000001            B    17    scr_find_new_line	equ 1
       00000002            B    18    scr_if_condition	equ 2
       00000003            B    19    scr_end				equ 3
                           B    20    
                           B    21    
003D38 CD 43 3D 00         B    22    os_do_script	call run_script
003D3C 21 F9 6C 00         B    23    				ld hl,script_flags
003D40 CB86                B    24    				res scr_in_script,(hl)
003D42 C9                  B    25    				ret
                           B    26    				
003D43 21 F9 6C 00         B    27    run_script		ld hl,script_flags	
003D47 CBC6                B    28    				set scr_in_script,(hl)
                           B    29    
003D49 CD 83 17 00         B    30    				call os_check_volume_format		003D4D C0                  B    31    				ret nz
                           B    32    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 147


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\script_routines.asm
003D4E CD 9E 3E 00         B    33    				call new_script
                           B    34    
                           B    35    ;----------------------------------------------
                           B    36    
                           B    37    
003D52 3A 5D 6D 00         B    38    scrp_loop		ld a,(key_mod_flags)			003D56 E602                B    39    				and 2
003D58 28 12               B    40    				jr z,no_quit_script	
003D5A CD B3 4D 00         B    41    				call os_get_key_press
003D5E FE21                B    42    				cp 021h							003D60 20 0A               B    43    				jr nz,no_quit_script
                           B    44    
003D62 21 1E 66 00         B    45    				ld hl,script_aborted_msg
003D66 CD 46 15 00         B    46    				call os_show_packed_text
003D6A AF                  B    47    				xor a							003D6B C9                  B    48    				ret
                           B    49    					
                           B    50    
003D6C CD B1 3E 00         B    51    no_quit_script	call get_script_line	
003D70 C0                  B    52    				ret nz
003D71 21 F9 6C 00         B    53    				ld hl,script_flags				003D75 CB5E                B    54    				bit scr_end,(hl)
003D77 28 02               B    55    				jr z,scr_to_do
003D79 AF                  B    56    scr_done		xor a
003D7A C9                  B    57    				ret
                           B    58    				
003D7B 21 3D 6C 00         B    59    scr_to_do		ld hl,commandstring				003D7F 7E                  B    60    				ld a,(hl)
003D80 FE5B                B    61    				cp '['
003D82 28 1C               B    62    				jr z,exec_scr_next
                           B    63    
003D84 11 D6 60 00         B    64    				ld de,if_command_txt			003D88 0603                B    65    				ld b,3
003D8A CD 36 13 00         B    66    				call os_compare_strings
003D8E 28 18               B    67    				jr z,do_exec_if
                           B    68    				
003D90 11 D9 60 00         B    69    				ld de,end_command_txt			003D94 0604                B    70    				ld b,4
003D96 CD 36 13 00         B    71    				call os_compare_strings
003D9A 28 DD               B    72    				jr z,scr_done
                           B    73    			
003D9C CD CD 0C 00         B    74    				call os_parse_cmd_chk_ps		                           B    75    				
003DA0 21 F9 6C 00         B    76    exec_scr_next	ld hl,script_flags
003DA4 CBCE                B    77    				set scr_find_new_line,(hl)
003DA6 18 AA               B    78    				jr scrp_loop
                           B    79    
                           B    80    		
                           B    81    ;----------------------------------------------
                           B    82    
                           B    83    ; Handle "IF" instructions in the format:
                           B    84    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 148


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\script_routines.asm
                           B    85    ; "IF ENVAR = VALUE LABLE"
                           B    86    ; "IF ENVAR <> VALUE LABLE"
                           B    87    ;  (LABEL must be declared at start of a script
                           B    88    ;  square brackets ([label]) with no other data
                           B    89    
003DA8 21 3F 6C 00         B    90    do_exec_if		ld hl,commandstring+2			003DAC CD 07 11 00         B    91    				call os_scan_for_non_space
003DB0 CA EA 3E 00         B    92    				jr z,script_error				003DB4 11 01 6D 00         B    93    				ld de,if_name_txt
003DB8 0610                B    94    				ld b,max_if_chars
003DBA CD 55 13 00         B    95    				call os_copy_ascii_run			003DBE AF                  B    96    				xor a
003DBF 12                  B    97    				ld (de),a
                           B    98    				
003DC0 CD 07 11 00         B    99    				call os_scan_for_non_space		003DC4 CA EA 3E 00         B   100    				jr z,script_error
003DC8 DD21 F9 6C 00       B   101    				ld ix,script_flags
003DCD DDCB0096            B   102    				res scr_if_condition,(ix)
003DD1 7E                  B   103    				ld a,(hl)
003DD2 FE3D                B   104    				cp '='
003DD4 28 04               B   105    				jr z,if_equals
003DD6 DDCB00D6            B   106    				set scr_if_condition,(ix)		                           B   107    
003DDA CD FE 10 00         B   108    if_equals		call os_scan_for_space			003DDE CD 07 11 00         B   109    				call os_scan_for_non_space		003DE2 CA EA 3E 00         B   110    				jr z,script_error
003DE6 11 13 6D 00         B   111    				ld de,if_value_txt				003DEA 0610                B   112    				ld b,max_if_chars
003DEC CD 55 13 00         B   113    				call os_copy_ascii_run
003DF0 AF                  B   114    				xor a
003DF1 12                  B   115    				ld (de),a
                           B   116    				
003DF2 CD 07 11 00         B   117    				call os_scan_for_non_space
003DF6 CA EA 3E 00         B   118    				jr z,script_error
003DFA 11 25 6D 00         B   119    				ld de,if_label_txt				003DFE 0610                B   120    				ld b,max_if_chars
003E00 CD 55 13 00         B   121    				call os_copy_ascii_run			003E04 AF                  B   122    				xor a
003E05 12                  B   123    				ld (de),a						                           B   124    								
003E06 21 01 6D 00         B   125    				ld hl,if_name_txt				003E0A CD 25 1C 00         B   126    				call os_get_envar				003E0E 28 17               B   127    				jr z,scr_env_exists				                           B   128    				
003E10 3A 13 6D 00         B   129    				ld a,(if_value_txt)				003E14 FE2A                B   130    				cp '*'
003E16 20 0B               B   131    				jr nz,if_cond_failed
003E18 DD21 F9 6C 00       B   132    				ld ix,script_flags				003E1D DDCB0056            B   133    				bit scr_if_condition,(ix)
003E21 20 3A               B   134    				jr nz,if_cond_met
003E23 C3 A0 3D 00         B   135    if_cond_failed	jp exec_scr_next
                           B   136    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 149


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\script_routines.asm
003E27 3A 13 6D 00         B   137    scr_env_exists	ld a,(if_value_txt)				003E2B FE2A                B   138    				cp '*'
003E2D 20 0D               B   139    				jr nz,if_test_cond
003E2F DD21 F9 6C 00       B   140    				ld ix,script_flags				003E34 DDCB0056            B   141    				bit scr_if_condition,(ix)
003E38 20 E9               B   142    				jr nz,if_cond_failed
003E3A 18 21               B   143    				jr if_cond_met
                           B   144    
003E3C 21 13 6D 00         B   145    if_test_cond	ld hl,if_value_txt
003E40 DD21 F9 6C 00       B   146    				ld ix,script_flags
003E45 DDCB0056            B   147    				bit scr_if_condition,(ix)
003E49 20 0A               B   148    				jr nz,if_cond_diff
003E4B CD 36 13 00         B   149    				call os_compare_strings			003E4F C2 A0 3D 00         B   150    				jp nz,exec_scr_next				003E53 18 08               B   151    				jr if_cond_met
003E55 CD 36 13 00         B   152    if_cond_diff	call os_compare_strings			003E59 CA A0 3D 00         B   153    				jp z,exec_scr_next				                           B   154    
003E5D CD 9E 3E 00         B   155    if_cond_met		call new_script					                           B   156    
003E61 CD B1 3E 00         B   157    find_if_label	call get_script_line			003E65 C0                  B   158    				ret nz
003E66 21 F9 6C 00         B   159    				ld hl,script_flags
003E6A CB5E                B   160    				bit scr_end,(hl)
003E6C C2 79 3D 00         B   161    				jp nz,scr_done
                           B   162    				
003E70 21 3D 6C 00         B   163    				ld hl,commandstring				003E74 7E                  B   164    				ld a,(hl)
003E75 FE5B                B   165    				cp '['
003E77 20 1D               B   166    				jr nz,not_a_label				                           B   167    				
003E79 23                  B   168    if_find_csb		inc hl
003E7A 7E                  B   169    				ld a,(hl)
003E7B B7                  B   170    				or a
003E7C 28 18               B   171    				jr z,not_a_label				003E7E FE5D                B   172    				cp ']'							003E80 20 F7               B   173    				jr nz,if_find_csb
003E82 3600                B   174    				ld (hl),0						003E84 21 3E 6C 00         B   175    				ld hl,commandstring+1
003E88 11 25 6D 00         B   176    				ld de,if_label_txt				003E8C 0610                B   177    				ld b,max_if_chars
003E8E CD 36 13 00         B   178    				call os_compare_strings
003E92 CA A0 3D 00         B   179    				jp z,exec_scr_next				                           B   180    
003E96 21 F9 6C 00         B   181    not_a_label		ld hl,script_flags
003E9A CBCE                B   182    				set scr_find_new_line,(hl)		003E9C 18 C3               B   183    				jr find_if_label
                           B   184    											
                           B   185    ;----------------------------------------------
                           B   186    
                           B   187    
003E9E E5                  B   188    new_script		push hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 150


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\script_routines.asm
003E9F 21000000            B   189    				ld hl,0
003EA3 22 F3 6C 00         B   190    				ld (script_file_offset),hl		003EA7 21 F9 6C 00         B   191    				ld hl,script_flags
003EAB CB8E                B   192    				res scr_find_new_line,(hl)		003EAD CB9E                B   193    				res scr_end,(hl)
003EAF E1                  B   194    				pop hl
003EB0 C9                  B   195    				ret
                           B   196    
                           B   197    
                           B   198    ;----------------------------------------------
                           B   199    	
                           B   200    	
003EB1                     B   201    get_script_line
                           B   202    				
003EB1 CD 56 1B 00         B   203    				call fs_get_dir_cluster			003EB5 ED53 ED 6C 00       B   204    				ld (script_orig_dir),de			003EBA ED5B F0 6C 00       B   205    				ld de,(script_dir)				003EBF CD 62 1B 00         B   206    				call fs_update_dir_cluster
                           B   207    
003EC3 CD D9 3E 00         B   208    				call open_script				003EC7 20 04               B   209    				jr nz,scr_error
003EC9 CD EE 3E 00         B   210    				call read_script				                           B   211    								
003ECD F5                  B   212    scr_error		push af
003ECE ED5B ED 6C 00       B   213    				ld de,(script_orig_dir)			003ED3 CD 62 1B 00         B   214    				call fs_update_dir_cluster
003ED7 F1                  B   215    				pop af
003ED8 C9                  B   216    				ret
                           B   217    
                           B   218    
                           B   219    ;----------------------------------------------
                           B   220    
                           B   221    
003ED9 21 0E 6C 00         B   222    open_script		ld hl,script_fn					003EDD CD 1B 17 00         B   223    				call os_find_file				003EE1 C0                  B   224    				ret nz
                           B   225    				
003EE2 ED53 F6 6C 00       B   226    				ld (script_length),de			003EE7 79                  B   227    				ld a,c							003EE8 B7                  B   228    				or a
003EE9 C8                  B   229    				ret z
                           B   230    				
003EEA 3E8C                B   231    script_error	ld a,08ch						003EEC B7                  B   232    				or a
003EED C9                  B   233    				ret
                           B   234    				
                           B   235    
                           B   236    ;----------------------------------------------
                           B   237    
                           B   238    
003EEE 21 3D 6C 00         B   239    read_script		ld hl,commandstring				003EF2 01500000            B   240    				ld bc,max_buffer_chars			Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 151


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\script_routines.asm
003EF6 3E20                B   241    				ld a,32
003EF8 CD 7C 16 00         B   242    				call os_bchl_memfill
                           B   243    				
003EFC 11500000            B   244    				ld de,max_buffer_chars			003F00 CD 2A 17 00         B   245    				call os_set_load_length
                           B   246    				
003F04 AF                  B   247    				xor a
003F05 2A F6 6C 00         B   248    				ld hl,(script_length)
003F09 ED5B F3 6C 00       B   249    				ld de,(script_file_offset)		003F0E 37                  B   250    				scf
003F0F ED52                B   251    				sbc hl,de						003F11 30 08               B   252    				jr nc,not_eoscr					003F13 21 F9 6C 00         B   253    				ld hl,script_flags
003F17 CBDE                B   254    				set scr_end,(hl)				003F19 AF                  B   255    				xor a
003F1A C9                  B   256    				ret
003F1B CD 32 17 00         B   257    not_eoscr		call os_set_file_pointer
                           B   258    
003F1F 21 3D 6C 00         B   259    				ld hl,commandstring				003F23 CD 48 17 00         B   260    				call os_read_bytes_from_file
003F27 B7                  B   261    				or a			
003F28 28 03               B   262    				jr z,scr_load_ok
003F2A FECC                B   263    				cp 0cch							003F2C C0                  B   264    				ret nz							                           B   265    
003F2D 21 F9 6C 00         B   266    scr_load_ok		ld hl,script_flags
003F31 CB4E                B   267    				bit scr_find_new_line,(hl)		003F33 20 17               B   268    				jr nz,scr_fnl					                           B   269    
003F35 21 3D 6C 00         B   270    				ld hl,commandstring				003F39 0650                B   271    				ld b,max_buffer_chars
003F3B 7E                  B   272    scr_fcr			ld a,(hl)
003F3C FE20                B   273    				cp 32
003F3E 38 05               B   274    				jr c,scr_gotclcr
003F40 23                  B   275    				inc hl
003F41 10 F8               B   276    				djnz scr_fcr
003F43 AF                  B   277    				xor a
003F44 C9                  B   278    				ret
003F45 3620                B   279    scr_gotclcr		ld (hl),32						003F47 23                  B   280    				inc hl
003F48 10 FB               B   281    				djnz scr_gotclcr
003F4A AF                  B   282    				xor a
003F4B C9                  B   283    				ret
                           B   284    
003F4C FD2A F3 6C 00       B   285    scr_fnl			ld iy,(script_file_offset)
003F51 21 3D 6C 00         B   286    				ld hl,commandstring	
003F55 7E                  B   287    scr_find_cr		ld a,(hl)						003F56 B7                  B   288    				or a
003F57 20 07               B   289    				jr nz,scr_neocl					003F59 FD22 F3 6C 00       B   290    scr_eocl		ld (script_file_offset),iy
003F5E 18 8E               B   291    				jr read_script				
003F60 FE20                B   292    scr_neocl		cp 20h							Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 152


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\script_routines.asm
003F62 38 05               B   293    				jr c,scr_got_cr
003F64 23                  B   294    				inc hl
003F65 FD23                B   295    				inc iy
003F67 18 EC               B   296    				jr scr_find_cr
                           B   297    				
003F69 7E                  B   298    scr_got_cr		ld a,(hl)
003F6A B7                  B   299    				or a							003F6B 28 EC               B   300    				jr z,scr_eocl					003F6D FE20                B   301    				cp 20h
003F6F 30 05               B   302    				jr nc,scr_got_ch				003F71 23                  B   303    				inc hl
003F72 FD23                B   304    				inc iy
003F74 18 F3               B   305    				jr scr_got_cr
                           B   306    
003F76 FD22 F3 6C 00       B   307    scr_got_ch		ld (script_file_offset),iy
003F7B 21 F9 6C 00         B   308    				ld hl,script_flags				003F7F CB8E                B   309    				res scr_find_new_line,(hl)
003F81 C3 EE 3E 00         B   310    				jr read_script
                           B   311    
                           B   312    
                           B   313    ;----------------------------------------------
                           B   314    
                           B   315    		
                           B   316    				
                           B   317    				
                           B   318    				
                           B   319    				
                           B   320    				
                           A  3776    	
                           A  3777    ;----------------------------------------------
                           A  3778    ; Storage Device Drivers
                           A  3779    ;----------------------------------------------
                           A  3780    
                           B     0    	include		'prose_sdcard_driver_v110.asm'	                           B     1    ;----------------------------------------------
                           B     2    ; Low level Z80 MMC/SDC/SDHC card access routin
                           B     3    ;----------------------------------------------
                           B     4    ;
                           B     5    ; V1.10 - SDHC support added
                           B     6    ;
                           B     7    ; Limitations:
                           B     8    ; ------------
                           B     9    ; Does not check for block size
                           B    10    ;
                           B    11    ; Somewhat arbitrary timimg due to quirks of my
                           B    12    ; which means the data from the card following 
                           B    13    ; byte is skipped by the send_command routine.)
                           B    14    
                           B    15    
                           B    16    ;----------------------------------------------
                           B    17    ;
                           B    18    ; Key Routines:      Input Parameters          
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 153


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
                           B    19    ; -------------      ----------------          
                           B    20    ; sd_initialize		no arguments required      
                           B    21    ; sd_read_sector	[sector_lba0-3]				                           B    22    ; sd_write_sector	[sector_lba0-3]    			                           B    23    ;
                           B    24    ; (Assume all other registers are trashed.)
                           B    25    ;
                           B    26    ;----------------------------------------------
                           B    27    
                           B    28    ; Routines respond with Zero Flag set if operat
                           B    29    
                           B    30    ; $01 - SPI mode failed	 
                           B    31    ; $10 - MMC init failed	
                           B    32    ; $11 - SD init failed	
                           B    33    ; $12 - SDHC init failed	
                           B    34    ; $13 - voltage range bad	
                           B    35    ; $14 - check pattern bad
                           B    36    ; $20 - illegal command
                           B    37    ; $21 - bad command response
                           B    38    ; $22 - data token timeout
                           B    39    ; $23 - write timeout
                           B    40    ; $24 - write failed
                           B    41    ;
                           B    42    ;----------------------------------------------
                           B    43    
                           B    44    ; Define "sector_buffer" in main code (512 byte
                           B    45    
                           B    46    ;----------------------------------------------
                           B    47    
       00000041            B    48    CMD1	equ 40h + 1
       00000049            B    49    CMD9	equ 40h + 9
       0000004A            B    50    CMD10	equ 40h + 10
       0000004D            B    51    CMD13	equ 40h + 13
       00000051            B    52    CMD17	equ 40h + 17
       00000058            B    53    CMD24	equ 40h + 24
       00000069            B    54    ACMD41	equ 40h + 41
       00000077            B    55    CMD55	equ 40h + 55
       0000007A            B    56    CMD58	equ 40h + 58
                           B    57    
       00000001            B    58    sd_error_spi_mode_failed		equ 01h
                           B    59    
       00000010            B    60    sd_error_mmc_init_failed		equ 10h
       00000011            B    61    sd_error_sd_init_failed			equ 11h
       00000012            B    62    sd_error_sdhc_init_failed		equ 12h
       00000013            B    63    sd_error_vrange_bad				equ 13h
       00000014            B    64    sd_error_check_pattern_bad		equ 14h
                           B    65    
       00000020            B    66    sd_error_illegal_command		equ 20h
       00000021            B    67    sd_error_bad_command_response	equ 21h
       00000022            B    68    sd_error_data_token_timeout		equ 22h
       00000023            B    69    sd_error_write_timeout			equ 23h
       00000024            B    70    sd_error_write_failed			equ 24h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 154


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
                           B    71    
                           B    72    ;----------------------------------------------
                           B    73    ; PROSE STANDARD DRIVER HEADER
                           B    74    ;----------------------------------------------
                           B    75    
003F85 C3 99 3F 00         B    76    sd_card_driver	jp sd_initialize			; $
003F89 C3 BB 3F 00         B    77    				jp sd_read_sector			; $
003F8D C3 C1 3F 00         B    78    				jp sd_write_sector			; $
003F91 53445F43 41524400   B    79    				db "SD_CARD",0				; $
                           B    80    
                           B    81    ;----------------------------------------------
                           B    82    ; SD Card INITIALIZE code begins...
                           B    83    ;----------------------------------------------
                           B    84    
003F99 CD C7 3F 00         B    85    sd_initialize	call sd_init_main
003F9D B7                  B    86    				or a						; i
003F9E 28 05               B    87    				jr z,sd_inok
003FA0 CD 58 43 00         B    88    				call sd_power_off			; i
003FA4 C9                  B    89    				ret
                           B    90    
003FA5 CD 5D 43 00         B    91    sd_inok			call sd_spi_port_fast		; o
                           B    92    
003FA9 CD 29 41 00         B    93    				call sd_read_cid			; a
003FAD 20 06               B    94    				jr nz,sd_done
003FAF E5                  B    95    				push hl						; c
003FB0 CD 92 40 00         B    96    				call sd_read_csd
003FB4 E1                  B    97    				pop hl
                           B    98    
003FB5 CD 40 43 00         B    99    sd_done			call sd_deselect_card		; R
003FB9 B7                  B   100    				or a						; I
003FBA C9                  B   101    				ret				 
                           B   102    
                           B   103    ;----------------------------------------------
                           B   104    		
003FBB CD AD 41 00         B   105    sd_read_sector	call sd_read_sector_main
003FBF 18 F4               B   106    				jr sd_done
                           B   107    
                           B   108    ;----------------------------------------------
                           B   109    	
003FC1 CD D3 41 00         B   110    sd_write_sector	call sd_write_sector_main
003FC5 18 EE               B   111    				jr sd_done
                           B   112    	
                           B   113    ;----------------------------------------------
                           B   114    	
003FC7 AF                  B   115    sd_init_main	xor a							003FC8 32 D7 42 00         B   116    				ld (sd_card_info),a			
                           B   117    
003FCC CD 58 43 00         B   118    				call sd_power_off				                           B   119    				
003FD0 11004000            B   120    				ld de,16384						003FD4 CD AA 49 00         B   121    				call hwsc_time_delay
                           B   122    							
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 155


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
003FD8 CD 4C 43 00         B   123    				call sd_power_on				                           B   124    
003FDC 11830000            B   125    				ld de,131						003FE0 CD AA 49 00         B   126    				call hwsc_time_delay
                           B   127    				
003FE4 060A                B   128    				ld b,10							003FE6 CD 5C 42 00         B   129    sd_ecilp		call sd_send_eight_clocks
003FEA 10 FA               B   130    				djnz sd_ecilp
                           B   131    				
003FEC 21 AB 42 00         B   132    				ld hl,CMD0_string				003FF0 CD 74 42 00         B   133    				call sd_send_command_string		003FF4 FE01                B   134    				cp 01h							003FF6 28 03               B   135    				jr z,sd_spi_mode_ok
                           B   136    				
003FF8 3E01                B   137    				ld a,sd_error_spi_mode_failed
003FFA C9                  B   138    				ret		
                           B   139    
                           B   140    ; ---- CARD IS IN IDLE MODE -------------------
                           B   141    
003FFB 21 B1 42 00         B   142    sd_spi_mode_ok	ld hl,CMD8_string				003FFF CD 74 42 00         B   143    				call sd_send_command_string
004003 FE01                B   144    				cp 01h
004005 20 52               B   145    				jr nz,sd_sdc_init				                           B   146    
004007 0604                B   147    				ld b,4
004009 CD 9C 42 00         B   148    				call sd_read_bytes_to_sector_bu
00400D 3E01                B   149    				ld a,1
00400F 23                  B   150    				inc hl
004010 23                  B   151    				inc hl
004011 BE                  B   152    				cp (hl)							004012 28 03               B   153    				jr z,sd_vrok
004014 3E13                B   154    				ld a,sd_error_vrange_bad
004016 C9                  B   155    				ret				
                           B   156    
004017 3EAA                B   157    sd_vrok			ld a,0aah
004019 23                  B   158    				inc hl
00401A BE                  B   159    				cp (hl)
00401B 28 03               B   160    				jr z,sd_check_pattern_ok
00401D 3E14                B   161    				ld a,sd_error_check_pattern_bad
00401F C9                  B   162    				ret
                           B   163    				
004020                     B   164    sd_check_pattern_ok
                           B   165    
                           B   166    ;------ SDHC CARD CAN WORK AT 2.7v - 3.6v -----
                           B   167    	
004020 01401F00            B   168    				ld bc,8000						                           B   169    
004024 3E77                B   170    sdhc_iwl		ld a,CMD55						004026 CD 63 42 00         B   171    				call sd_send_command_null_args
                           B   172    				
00402A 21 B7 42 00         B   173    				ld hl,ACMD41HCS_string			00402E CD 74 42 00         B   174    				call sd_send_command_string
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 156


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
004032 28 0C               B   175    				jr z,sdhc_init_ok				004034 CB57                B   176    				bit 2,a
004036 20 05               B   177    				jr nz,sdhc_if					                           B   178    				
004038 0B                  B   179    				dec bc
004039 78                  B   180    				ld a,b
00403A B1                  B   181    				or c
00403B 20 E7               B   182    				jr nz,sdhc_iwl
                           B   183    				
00403D 3E12                B   184    sdhc_if			ld a,sd_error_sdhc_init_failed	00403F C9                  B   185    				ret
                           B   186    				
004040                     B   187    sdhc_init_ok
                           B   188    
                           B   189    ;------ SDHC CARD IS INITIALIZED --------------
                           B   190    
004040 3E7A                B   191    				ld a,CMD58						004042 CD 63 42 00         B   192    				call sd_send_command_null_args
                           B   193    					
004046 0604                B   194    				ld b,4							004048 CD 9C 42 00         B   195    				call sd_read_bytes_to_sector_bu
00404C 7E                  B   196    				ld a,(hl)
00404D E640                B   197    				and 040h						00404F 0F                  B   198    				rrca
004050 0F                  B   199    				rrca 
004051 F602                B   200    				or 00000010b				
004053 32 D7 42 00         B   201    				ld (sd_card_info),a				004057 AF                  B   202    				xor a							004058 C9                  B   203    				ret
                           B   204    
                           B   205    	
                           B   206    ;-------- NOT AN SDHC CARD, TRY SD INIT -------
                           B   207    
004059 01401F00            B   208    sd_sdc_init		ld bc,8000						                           B   209    
00405D 3E77                B   210    sd_iwl			ld a,CMD55						00405F CD 63 42 00         B   211    				call sd_send_command_null_args
                           B   212    
004063 3E69                B   213    				ld a,ACMD41						004065 CD 63 42 00         B   214    				call sd_send_command_null_args
004069 28 0C               B   215    				jr z,sd_rdy						                           B   216    				
00406B CB57                B   217    				bit 2,a				
00406D 20 10               B   218    				jr nz,sd_mmc_init				                           B   219    							
00406F 0B                  B   220    				dec bc
004070 78                  B   221    				ld a,b
004071 B1                  B   222    				or c
004072 20 E9               B   223    				jr nz,sd_iwl
                           B   224    				
004074 3E11                B   225    				ld a,sd_error_sd_init_failed	004076 C9                  B   226    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 157


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
                           B   227    				
004077 3E01                B   228    sd_rdy			ld a,1
004079 32 D7 42 00         B   229    				ld (sd_card_info),a				00407D AF                  B   230    				xor a							00407E C9                  B   231    				ret	
                           B   232    
                           B   233    ;-------- NOT AN SDHC OR SD CARD, TRY MMC INIT 
                           B   234    
00407F 01401F00            B   235    sd_mmc_init		ld bc,8000						                           B   236    
004083 3E41                B   237    sdmmc_iwl		ld a,CMD1
004085 CD 63 42 00         B   238    				call sd_send_command_null_args	004089 C8                  B   239    				ret z							                           B   240    				
00408A 0B                  B   241    sd_mnrdy		dec bc
00408B 78                  B   242    				ld a,b
00408C B1                  B   243    				or c
00408D 20 F4               B   244    				jr nz,sdmmc_iwl
                           B   245    				
00408F 3E10                B   246    				ld a,sd_error_mmc_init_failed	004091 C9                  B   247    				ret
                           B   248    	
                           B   249    ;----------------------------------------------
                           B   250    
                           B   251    ; Returns BC:DE = Total capacity of card (in se
                           B   252    
004092                     B   253    sd_read_csd
                           B   254    				
004092 3E49                B   255    				ld a,CMD9						004094 CD 63 42 00         B   256    				call sd_send_command_null_args	004098 C2 B9 41 00         B   257    				jp nz,sd_bcr_error				                           B   258    
00409C CD 47 42 00         B   259    				call sd_wait_data_token			0040A0 C2 C2 41 00         B   260    				jp nz,sd_dt_timeout	
                           B   261    
0040A4 0612                B   262    sd_id_ok		ld b,18							0040A6 CD 9C 42 00         B   263    				call sd_read_bytes_to_sector_bu
                           B   264    
0040AA DD210008 00         B   265    				ld ix,sector_buffer				0040AF DDCB0076            B   266    				bit 6,(ix)
0040B3 28 19               B   267    				jr z,sd_csd_v1
                           B   268    
0040B5 DD6E09              B   269    sd_csd_v2		ld l,(ix+9)						0040B8 DD6608              B   270    				ld h,(ix+8)
0040BB 23                  B   271    				inc hl
0040BC 3E0A                B   272    				ld a,10
0040BE 01000000            B   273    				ld bc,0
0040C2 4029                B   274    sd_csd2lp		add.sis hl,hl
0040C4 CB11                B   275    				rl c
0040C6 CB10                B   276    				rl b
0040C8 3D                  B   277    				dec a
0040C9 20 F7               B   278    				jr nz,sd_csd2lp
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 158


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
0040CB EB                  B   279    				ex de,hl						0040CC AF                  B   280    				xor a
0040CD C9                  B   281    				ret
                           B   282    				
0040CE DD7E06              B   283    sd_csd_v1		ld a,(ix+6)						0040D1 E603                B   284    				and 00000011b
0040D3 57                  B   285    				ld d,a
0040D4 DD5E07              B   286    				ld e,(ix+7)
0040D7 DD7E08              B   287    				ld a,(ix+8)
0040DA E6C0                B   288    				and 11000000b
0040DC CB27                B   289    				sla a
0040DE CB13                B   290    				rl e
0040E0 CB12                B   291    				rl d
0040E2 CB27                B   292    				sla a
0040E4 CB13                B   293    				rl e
0040E6 CB12                B   294    				rl d							                           B   295    				
0040E8 DD7E09              B   296    				ld a,(ix+9)
0040EB E603                B   297    				and 00000011b
0040ED 47                  B   298    				ld b,a
0040EE DD7E0A              B   299    				ld a,(ix+10)
0040F1 E680                B   300    				and 10000000b
0040F3 CB27                B   301    				sla a
0040F5 CB10                B   302    				rl b							                           B   303    				
0040F7 04                  B   304    				inc b
0040F8 04                  B   305    				inc b
0040F9 21000000            B   306    				ld hl,0
0040FD CB23                B   307    sd_cmsh			sla e
0040FF CB12                B   308    				rl d
004101 CB15                B   309    				rl l
004103 CB14                B   310    				rl h
004105 10 F6               B   311    				djnz sd_cmsh					                           B   312    				
004107 DD7E05              B   313    				ld a,(ix+5)
00410A E60F                B   314    				and 00001111b					00410C 28 17               B   315    				jr z,sd_nbls
00410E 47                  B   316    				ld b,a
00410F CB23                B   317    sd_blsh			sla e
004111 CB12                B   318    				rl d
004113 CB15                B   319    				rl l
004115 CB14                B   320    				rl h
004117 10 F6               B   321    				djnz sd_blsh					                           B   322    				
004119 0609                B   323    				ld b,9							00411B CB3C                B   324    sd_cbsec		srl h
00411D CB1D                B   325    				rr l
00411F CB1A                B   326    				rr d
004121 CB1B                B   327    				rr e
004123 10 F6               B   328    				djnz sd_cbsec
                           B   329    
004125 E5                  B   330    sd_nbls			push hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 159


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
004126 C1                  B   331    				pop bc							004127 AF                  B   332    				xor a
004128 C9                  B   333    				ret
                           B   334    
                           B   335    ;----------------------------------------------
                           B   336    
004129                     B   337    sd_read_cid
                           B   338    	
                           B   339    ; Returns HL = Pointer to device ID string
                           B   340    
004129 3E4A                B   341    				ld a,CMD10						00412B CD 63 42 00         B   342    				call sd_send_command_null_args
00412F C2 B9 41 00         B   343    				jp nz,sd_bcr_error				                           B   344    
004133 CD 47 42 00         B   345    				call sd_wait_data_token			004137 C2 C2 41 00         B   346    				jp nz,sd_dt_timeout
                           B   347    					
00413B 0612                B   348    				ld b,18
00413D CD 9C 42 00         B   349    				call sd_read_bytes_to_sector_bu
                           B   350    				
004141 21030800            B   351    				ld hl,sector_buffer+03h			004145 11200800            B   352    				ld de,sector_buffer+20h
004149 01050000            B   353    				ld bc,5
00414D 3A D7 42 00         B   354    				ld a,(sd_card_info)
004151 E60F                B   355    				and 0fh
004153 20 01               B   356    				jr nz,sd_cn5
004155 03                  B   357    				inc bc
004156 EDB0                B   358    sd_cn5			ldir
004158 E5                  B   359    				push hl
004159 D5                  B   360    				push de
00415A 21 BD 42 00         B   361    				ld hl,sd_vnchars
00415E 01140000            B   362    				ld bc,20
004162 EDB0                B   363    				ldir
004164 D1                  B   364    				pop de
004165 E1                  B   365    				pop hl
004166 13                  B   366    				inc de
004167 13                  B   367    				inc de
004168 7E                  B   368    				ld a,(hl)
004169 CB3F                B   369    				srl a
00416B CB3F                B   370    				srl a
00416D CB3F                B   371    				srl a
00416F CB3F                B   372    				srl a
004171 C630                B   373    				add a,30h						004173 12                  B   374    				ld (de),a
004174 13                  B   375    				inc de
004175 13                  B   376    				inc de
004176 7E                  B   377    				ld a,(hl)
004177 E60F                B   378    				and 0fh
004179 C630                B   379    				add a,30h
00417B 12                  B   380    				ld (de),a						00417C 13                  B   381    				inc de
00417D 13                  B   382    				inc de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 160


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
00417E 13                  B   383    				inc de
00417F 13                  B   384    				inc de
004180 13                  B   385    				inc de
004181 23                  B   386    				inc hl
004182 0604                B   387    				ld b,4
004184 7E                  B   388    sd_snulp		ld a,(hl)						004185 CB3F                B   389    				srl a
004187 CB3F                B   390    				srl a
004189 CB3F                B   391    				srl a
00418B CB3F                B   392    				srl a
00418D C630                B   393    				add a,30h
00418F FE3A                B   394    				cp 3ah
004191 38 02               B   395    				jr c,sd_hvl1
004193 C607                B   396    				add a,07h
004195 12                  B   397    sd_hvl1			ld (de),a
004196 13                  B   398    				inc de
004197 7E                  B   399    				ld a,(hl)
004198 E60F                B   400    				and 0fh
00419A C630                B   401    				add a,30h
00419C FE3A                B   402    				cp 3ah
00419E 38 02               B   403    				jr c,sd_hvl2
0041A0 C607                B   404    				add a,07h
0041A2 12                  B   405    sd_hvl2			ld (de),a
0041A3 13                  B   406    				inc de
0041A4 23                  B   407    				inc hl
0041A5 10 DD               B   408    				djnz sd_snulp
                           B   409    				
0041A7 21200800            B   410    				ld hl,sector_buffer+20h			0041AB AF                  B   411    				xor a
0041AC C9                  B   412    				ret
                           B   413    
                           B   414    ;----------------------------------------------
                           B   415    ; SD Card READ SECTOR code begins...
                           B   416    ;----------------------------------------------
                           B   417    	
0041AD                     B   418    sd_read_sector_main
                           B   419    
                           B   420    ; 512 bytes are returned in sector buffer
                           B   421    
0041AD CD 1E 42 00         B   422    				call sd_set_sector_addr
                           B   423    
0041B1 3E51                B   424    				ld a,CMD17						0041B3 CD 6F 42 00         B   425    				call sd_send_command_current_ar
0041B7 28 03               B   426    				jr z,sd_rscr_ok					0041B9 3E21                B   427    sd_bcr_error	ld a,sd_error_bad_command_respo
0041BB C9                  B   428    				ret
                           B   429    
0041BC CD 47 42 00         B   430    sd_rscr_ok		call sd_wait_data_token			0041C0 28 03               B   431    				jr z,sd_dt_ok					0041C2 3E22                B   432    sd_dt_timeout	ld a,sd_error_data_token_timeou
0041C4 C9                  B   433    				ret
                           B   434    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 161


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
0041C5 21000800            B   435    sd_dt_ok		ld hl,sector_buffer
0041C9 CD ED 42 00         B   436    				call sd_read_513_bytes			0041CD CD E5 42 00         B   437    				call sd_get_byte
                           B   438    				
0041D1 AF                  B   439    				xor a							0041D2 C9                  B   440    				ret
                           B   441    
                           B   442    ;----------------------------------------------
                           B   443    ; SD Card WRITE SECTOR code begins...
                           B   444    ;----------------------------------------------
                           B   445    
0041D3                     B   446    sd_write_sector_main
                           B   447    	
0041D3 CD 1E 42 00         B   448    				call sd_set_sector_addr
                           B   449    
0041D7 3E58                B   450    				ld a,CMD24						0041D9 CD 6F 42 00         B   451    				call sd_send_command_current_ar
0041DD 20 DA               B   452    				jr nz,sd_bcr_error				                           B   453    				
0041DF CD 5C 42 00         B   454    				call sd_send_eight_clocks		                           B   455    
0041E3 3EFE                B   456    				ld a,0feh
0041E5 CD D8 42 00         B   457    				call sd_send_byte				                           B   458    
0041E9 21000800            B   459    				ld hl,sector_buffer
0041ED CD 1C 43 00         B   460    				call sd_write_512_bytes			0041F1 CD 5C 42 00         B   461    				call sd_send_eight_clocks		0041F5 CD 5C 42 00         B   462    				call sd_send_eight_clocks		                           B   463    		
0041F9 CD E5 42 00         B   464    				call sd_get_byte				0041FD E61F                B   465    				and 1fh
0041FF CB3F                B   466    				srl a
004201 FE02                B   467    				cp 02h
004203 28 03               B   468    				jr z,sd_wr_ok
                           B   469    
004205 3E24                B   470    sd_write_fail	ld a,sd_error_write_failed
004207 C9                  B   471    				ret
                           B   472    
004208 01FFFF00            B   473    sd_wr_ok		ld bc,65535						00420C CD E5 42 00         B   474    sd_wcbsy		call sd_get_byte				004210 FEFF                B   475    				cp 0ffh
004212 20 02               B   476    				jr nz,sd_busy
004214 AF                  B   477    				xor a							004215 C9                  B   478    				ret
                           B   479    				
004216 0B                  B   480    sd_busy			dec bc
004217 78                  B   481    				ld a,b
004218 B1                  B   482    				or c
004219 20 F1               B   483    				jr nz,sd_wcbsy
                           B   484    
00421B                     B   485    sd_card_busy_timeout
                           B   486    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 162


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
00421B 3E23                B   487    				ld a,sd_error_write_timeout
00421D C9                  B   488    				ret	
                           B   489    
                           B   490    ;----------------------------------------------
                           B   491    
00421E                     B   492    sd_set_sector_addr
                           B   493    				
00421E 21 1B 6C 00         B   494    				ld hl,sector_lba0
004222 4E                  B   495    				ld c,(hl)
004223 23                  B   496    				inc hl
004224 5E                  B   497    				ld e,(hl)
004225 23                  B   498    				inc hl
004226 56                  B   499    				ld d,(hl)
004227 23                  B   500    				inc hl
004228 46                  B   501    				ld b,(hl)					; s
                           B   502    
004229 3A D7 42 00         B   503    				ld a,(sd_card_info)
00422D E610                B   504    				and 10h
00422F 20 0A               B   505    				jr nz,lbatoargs				; i
004231 69                  B   506    				ld l,c
004232 63                  B   507    				ld h,e
004233 7A                  B   508    				ld a,d						; o
004234 4029                B   509    				add.sis hl,hl
004236 8F                  B   510    				adc a,a	
004237 EB                  B   511    				ex de,hl
004238 47                  B   512    				ld b,a
004239 0E00                B   513    				ld c,0
00423B 21 D2 42 00         B   514    lbatoargs		ld hl,cmd_generic_args
00423F 70                  B   515    				ld (hl),b
004240 23                  B   516    				inc hl
004241 72                  B   517    				ld (hl),d
004242 23                  B   518    				inc hl
004243 73                  B   519    				ld (hl),e
004244 23                  B   520    				inc hl
004245 71                  B   521    				ld (hl),c
004246 C9                  B   522    				ret
                           B   523    	
                           B   524    	
                           B   525    ;----------------------------------------------
                           B   526    
004247                     B   527    sd_wait_data_token
                           B   528    
004247 C5                  B   529    				push bc
004248 01401F00            B   530    				ld bc,8000				
00424C CD E5 42 00         B   531    sd_wdt			call sd_get_byte			; r
004250 FEFE                B   532    				cp 0feh
004252 28 06               B   533    				jr z,sd_gdt
004254 0B                  B   534    				dec bc
004255 78                  B   535    				ld a,b
004256 B1                  B   536    				or c
004257 20 F3               B   537    				jr nz,sd_wdt
004259 0C                  B   538    				inc c						; d
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 163


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
00425A C1                  B   539    sd_gdt			pop bc
00425B C9                  B   540    				ret
                           B   541    
                           B   542    ;----------------------------------------------
                           B   543    
00425C                     B   544    sd_send_eight_clocks
                           B   545    
00425C 3EFF                B   546    				ld a,0ffh
00425E CD D8 42 00         B   547    				call sd_send_byte
004262 C9                  B   548    				ret
                           B   549    
                           B   550    ;----------------------------------------------
                           B   551    
                           B   552    
004263                     B   553    sd_send_command_null_args
                           B   554    
004263 21000000            B   555    				ld hl,0
004267 22 D2 42 00         B   556    				ld (cmd_generic_args),hl	; c
00426B 22 D3 42 00         B   557    				ld (cmd_generic_args+1),hl	
                           B   558    				
                           B   559    				
                           B   560    	
00426F                     B   561    sd_send_command_current_args
                           B   562    	
00426F 21 D1 42 00         B   563    				ld hl,cmd_generic
004273 77                  B   564    				ld (hl),a
                           B   565    
                           B   566    
                           B   567    
004274                     B   568    sd_send_command_string
                           B   569    
                           B   570    ; set HL = location of 6 byte command string
                           B   571    ; returns command response in A (ZF set if $00)
                           B   572    
                           B   573    
004274 CD 38 43 00         B   574    				call sd_select_card				                           B   575    						
004278 CD 5C 42 00         B   576    				call sd_send_eight_clocks		                           B   577    				
00427C C5                  B   578    				push bc
00427D 0606                B   579    				ld b,6
00427F 7E                  B   580    sd_sclp			ld a,(hl)
004280 CD D8 42 00         B   581    				call sd_send_byte				004284 23                  B   582    				inc hl
004285 10 F8               B   583    				djnz sd_sclp
004287 C1                  B   584    				pop bc
                           B   585    				
004288 CD E5 42 00         B   586    				call sd_get_byte				                           B   587    					
                           B   588    
00428C                     B   589    sd_wait_valid_response
                           B   590    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 164


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
00428C C5                  B   591    				push bc
00428D 0600                B   592    				ld b,0
00428F CD E5 42 00         B   593    sd_wncrl		call sd_get_byte				004293 CB7F                B   594    				bit 7,a							004295 28 02               B   595    				jr z,sd_gcr
004297 10 F6               B   596    				djnz sd_wncrl
                           B   597    								
004299 B7                  B   598    sd_gcr			or a							00429A C1                  B   599    				pop bc
00429B C9                  B   600    				ret
                           B   601    				
                           B   602    	
                           B   603    ;----------------------------------------------
                           B   604    
00429C                     B   605    sd_read_bytes_to_sector_buffer
                           B   606    
00429C 21000800            B   607    				ld hl,sector_buffer
                           B   608    	
0042A0                     B   609    sd_read_bytes
                           B   610    
                           B   611    ; set HL to dest address for data
                           B   612    ; set B to number of bytes required  
                           B   613    
0042A0 E5                  B   614    				push hl
0042A1 CD E5 42 00         B   615    sd_rblp			call sd_get_byte
0042A5 77                  B   616    				ld (hl),a
0042A6 23                  B   617    				inc hl
0042A7 10 F8               B   618    				djnz sd_rblp
0042A9 E1                  B   619    				pop hl
0042AA C9                  B   620    				ret
                           B   621    	
                           B   622    ;----------------------------------------------
                           B   623    
                           B   624    ; This data can be placed in ROM:
                           B   625    
0042AB 40000000 0095       B   626    CMD0_string			db 40h,00h,00h,00h,00h,95h
0042B1 48000001 AA87       B   627    CMD8_string			db 48h,00h,00h,01h,aah,87h
0042B7 69400000 0001       B   628    ACMD41HCS_string	db 69h,40h,00h,00h,00h,01h
0042BD 2076782E 7820534E   B   629    sd_vnchars			db " vx.x SN:00000000 ",0,0
0042C5 3A303030 30303030 
0042CD 30200000 
                           B   630    
                           B   631    
                           B   632    ; The following variables need to be placed in 
                           B   633    
0042D1 00                  B   634    cmd_generic			db 00h
0042D2 00000000            B   635    cmd_generic_args	db 00h,00h,00h,00h
0042D6 01                  B   636    cmd_generic_crc		db 01h
                           B   637    
0042D7 00                  B   638    sd_card_info		db 0	; Bit [4] = CCS (bl
                           B   639    
                           B   640    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 165


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
                           B   641    ;==============================================
                           B   642    
                           B   643    ;----------------------------------------------
                           B   644    
                           C     0    include "ez80p_sdcard_code.asm"				;EZ
                           C     1    ;----------------------------------------------
                           C     2    ; eZ80P Specific SD card low-level routines v1.
                           C     3    ;----------------------------------------------
                           C     4    
0042D8                     C     5    sd_send_byte
                           C     6    
                           C     7    ;Put byte to send to card in A
                           C     8    
0042D8 ED3903              C     9    					out0 (port_sdc_data),a
0042DB C5                  C    10    					push bc
0042DC 0E01                C    11    					ld c,port_hw_flags
0042DE ED7410              C    12    sd_wb_loop			tstio 1<<sdc_serializer_bus
0042E1 20 FB               C    13    					jr nz,sd_wb_loop			0042E3 C1                  C    14    					pop bc
0042E4 C9                  C    15    					ret
                           C    16    
                           C    17    ;----------------------------------------------
                           C    18    
0042E5                     C    19    sd_get_byte
                           C    20    
                           C    21    ; Returns byte read from card in A
                           C    22    
0042E5 CD 5C 42 00         C    23    					call sd_send_eight_clocks
0042E9 ED3803              C    24    					in0 a,(port_sdc_data)
0042EC C9                  C    25    					ret
                           C    26    
                           C    27    ;----------------------------------------------
                           C    28    
0042ED                     C    29    sd_read_513_bytes
                           C    30    
                           C    31    ; optimized sector read
                           C    32    ; set hl = dest location for bytes
                           C    33    ; note: The last byte read (CRC) is not put int
                           C    34    
0042ED C5                  C    35    					push bc
0042EE D5                  C    36    					push de
0042EF 1EFF                C    37    					ld e,0ffh
0042F1 ED1903              C    38    					out0 (port_sdc_data),e		0042F4 0E01                C    39    					ld c,port_hw_flags			0042F6 0600                C    40    					ld b,0						                           C    41    
0042F8 ED7410              C    42    sd_wser_loop1		tstio 1<<sdc_serializer_bus
0042FB 20 FB               C    43    					jr nz,sd_wser_loop1			0042FD DB03                C    44    					in a,(port_sdc_data)		                           C    45    					
0042FF ED1903              C    46    sd_512_loop			out0 (port_sdc_data),e		004302 77                  C    47    					ld (hl),a					Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 166


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_sdcard_code.asm
004303 23                  C    48    					inc hl						                           C    49    					
004304 ED7410              C    50    sd_wser_loop2		tstio 1<<sdc_serializer_bus
004307 20 FB               C    51    					jr nz,sd_wser_loop2			004309 DB03                C    52    					in a,(port_sdc_data)		                           C    53    												00430B ED1903              C    54    					out0 (port_sdc_data),e		00430E 77                  C    55    					ld (hl),a					00430F 23                  C    56    					inc hl						                           C    57    					
004310 ED7410              C    58    sd_wser_loop3		tstio 1<<sdc_serializer_bus
004313 20 FB               C    59    					jr nz,sd_wser_loop3			004315 DB03                C    60    					in a,(port_sdc_data)		                           C    61    					
004317 10 E6               C    62    					djnz sd_512_loop
004319 D1                  C    63    					pop de
00431A C1                  C    64    					pop bc
00431B C9                  C    65    					ret
                           C    66    					
                           C    67    ;----------------------------------------------
                           C    68    					
00431C                     C    69    sd_write_512_bytes
                           C    70    
                           C    71    ;optimized sector write
                           C    72    ;set hl = source location for bytes
                           C    73    
00431C 0E01                C    74    					ld c,port_hw_flags			00431E 0600                C    75    					ld b,0						004320 7E                  C    76    					ld a,(hl)
004321 ED3903              C    77    sd_wr512_loop		out0 (port_sdc_data),a
004324 23                  C    78    					inc hl
004325 7E                  C    79    					ld a,(hl)
004326 ED7410              C    80    sd_wser_loop4		tstio 1<<sdc_serializer_bus
004329 20 FB               C    81    					jr nz,sd_wser_loop4			00432B ED3903              C    82    					out0 (port_sdc_data),a
00432E 23                  C    83    					inc hl
00432F 7E                  C    84    					ld a,(hl)
004330 ED7410              C    85    sd_wser_loop5		tstio 1<<sdc_serializer_bus
004333 20 FB               C    86    					jr nz,sd_wser_loop5
004335 10 EA               C    87    					djnz sd_wr512_loop
004337 C9                  C    88    					ret
                           C    89    
                           C    90    			
                           C    91    ;----------------------------------------------
                           C    92    ; SD Card control
                           C    93    ;----------------------------------------------
                           C    94    
004338 F5                  C    95    sd_select_card		push af
004339 3E02                C    96    					ld a,00h+(1<<sdc_cs)		00433B ED3902              C    97    sd_wr_sdc_ctrl		out0 (port_sdc_ctrl),a
00433E F1                  C    98    					pop af
00433F C9                  C    99    					ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 167


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_sdcard_code.asm
                           C   100    
                           C   101    
004340 F5                  C   102    sd_deselect_card	push af
004341 3E82                C   103    					ld a,080h+(1<<sdc_cs)		004343 ED3902              C   104    					out0 (port_sdc_ctrl),a
004346 CD 5C 42 00         C   105    					call sd_send_eight_clocks	00434A F1                  C   106    					pop af
00434B C9                  C   107    					ret
                           C   108    
                           C   109    
00434C F5                  C   110    sd_power_on			push af
00434D 3A040000            C   111    					ld a,(1<<sdc_speed)			004351 ED3902              C   112    					out0 (port_sdc_ctrl),a		004354 3E83                C   113    					ld a,80h+(1<<sdc_power)+(1<
004356 18 E3               C   114    					jr sd_wr_sdc_ctrl			                           C   115    
                           C   116    
004358 F5                  C   117    sd_power_off		push af
004359 3E01                C   118    					ld a,00h+(1<<sdc_power)		00435B 18 DE               C   119    					jr sd_wr_sdc_ctrl			                           C   120    
                           C   121    
00435D F5                  C   122    sd_spi_port_fast	push af
00435E 3E84                C   123    					ld a,80h+(1<<sdc_speed)		004360 18 D9               C   124    					jr sd_wr_sdc_ctrl
                           C   125    
                           C   126    
                           C   127    ;----------------------------------------------
                           B   646    
                           B   647    ;----------------------------------------------
                           A  3782    	
                           A  3783    ; Additional storage device driver source can b
                           A  3784    ; Also add the driver's PROSE header address la
                           A  3785    
004362 853F00              A  3786    driver_table		dw24 sd_card_driver	; Stora
004365 000000              A  3787    					dw24 0 				; Stora
004368 000000              A  3788    					dw24 0				; Stora
00436B 000000              A  3789    					dw24 0				; Stora
                           A  3790    					
00436E 000000              A  3791    					dw24 0				; Essen
                           A  3792    					
                           A  3793    ;----------------------------------------------
                           A  3794    ; IO routines
                           A  3795    ;----------------------------------------------
                           A  3796    
                           B     0    	include		'ez80p_interrupt_code.asm'		                           B     1    ;----------------------------------------------
                           B     2    ; ez80p interrupt code v0.06 (MADL mode)
                           B     3    ;----------------------------------------------
                           B     4    
004371                     B     5    set_irq_vectors
                           B     6    		
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 168


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
004371 AF                  B     7    				xor a
004372 ED47                B     8    				ld i,a
                           B     9    						
004374 DD216F00 00         B    10    				ld ix,06fh						004379 0623                B    11    				ld b,35
00437B DD3600C3            B    12    init_ivect_lp1	ld (ix),0c3h					00437F ED3204              B    13    				lea ix,ix+4
004382 10 F7               B    14    				djnz init_ivect_lp1
                           B    15    				
004384 216F0000            B    16    				ld hl,6fh						004388 DD210A00 00         B    17    				ld ix,0ah
00438D 11040000            B    18    				ld de,4
004391 060B                B    19    				ld b,11							004393 DD7500              B    20    init_ivect_lp2	ld (ix),l
004396 DD7401              B    21    				ld (ix+1),h
004399 19                  B    22    				add hl,de
00439A ED3202              B    23    				lea ix,ix+2
00439D 10 F4               B    24    				djnz init_ivect_lp2
00439F DD213000 00         B    25    				ld ix,30h						0043A4 0619                B    26    				ld b,25
0043A6 DD7500              B    27    init_ivect_lp3	ld (ix),l
0043A9 DD7401              B    28    				ld (ix+1),h
0043AC 19                  B    29    				add hl,de
0043AD ED3202              B    30    				lea ix,ix+2
0043B0 10 F4               B    31    				djnz init_ivect_lp3
                           B    32    				
0043B2 21 F2 43 00         B    33    				ld hl,int_routine				0043B6 229C0000            B    34    				ld (09ch),hl					                           B    35    
0043BA 3EC3                B    36    				ld a,0c3h						0043BC 32660000            B    37    				ld (066h),a
0043C0 21 B2 45 00         B    38    				ld hl,nmi_routine				0043C4 22670000            B    39    				ld (067h),hl
0043C8 C9                  B    40    				ret
                           B    41    
                           B    42    
                           B    43    ;----------------------------------------------
                           B    44    
                           B    45    
0043C9 21 74 6B 00         B    46    enable_os_irqs	ld hl,devices_connected			0043CD CB46                B    47    				bit 0,(hl)
0043CF C4 DA 43 00         B    48    				call nz,enable_kb_irq
0043D3 CB4E                B    49    				bit 1,(hl)
0043D5 C4 E0 43 00         B    50    				call nz,enable_ms_irq
0043D9 C9                  B    51    				ret
                           B    52    
                           B    53    
0043DA 3E81                B    54    enable_kb_irq	ld a,10000001b
0043DC ED3905              B    55    				out0 (port_irq_ctrl),a			0043DF C9                  B    56    				ret
                           B    57    
0043E0 3E82                B    58    enable_ms_irq	ld a,10000010b
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 169


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
0043E2 ED3905              B    59    				out0 (port_irq_ctrl),a			0043E5 C9                  B    60    				ret
                           B    61    
0043E6 3E02                B    62    disable_ms_irq	ld a,00000010b
0043E8 ED3905              B    63    				out0 (port_irq_ctrl),a			0043EB C9                  B    64    				ret
                           B    65    
0043EC 3E3F                B    66    disable_irqs	ld a,00111111b
0043EE ED3905              B    67    				out0 (port_irq_ctrl),a			0043F1 C9                  B    68    				ret
                           B    69    			
                           B    70    ;----------------------------------------------
                           B    71    
                           B    72    
0043F2                     B    73    int_routine
0043F2 F5                  B    74    				push af							0043F3 ED3807              B    75    				in0 a,(port_ps2_ctrl)			0043F6 CB67                B    76    				bit 4,a
0043F8 C4 36 44 00         B    77    				call nz,kb_interrupt_handler
0043FC ED3807              B    78    				in0 a,(port_ps2_ctrl)			0043FF CB6F                B    79    				bit 5,a
004401 C4 D8 44 00         B    80    				call nz,ms_interrupt_handler
004405 F1                  B    81    				pop af
004406 FB                  B    82    				ei								004407 5BED4D              B    83    				reti.l							                           B    84    
                           B    85    
                           B    86    
00440A                     B    87    prt1_irq_handler
                           B    88    
00440A F5                  B    89    				push af
00440B D5                  B    90    				push de
00440C E5                  B    91    				push hl
00440D ED3883              B    92    				in0 a,(TMR1_CTL)				                           B    93    				
004410 2A 8A 6B 00         B    94    				ld hl,(milliseconds_counter)
004414 23                  B    95    				inc hl
004415 22 8A 6B 00         B    96    				ld (milliseconds_counter),hl
004419 11E80300            B    97    				ld de,1000
00441D AF                  B    98    				xor a
00441E ED52                B    99    				sbc hl,de
004420 20 0D               B   100    				jr nz,sec_count_ok
004422 22 8A 6B 00         B   101    				ld (milliseconds_counter),hl
004426 2A 8D 6B 00         B   102    				ld hl,(seconds_counter)
00442A 23                  B   103    				inc hl
00442B 22 8D 6B 00         B   104    				ld (seconds_counter),hl
00442F E1                  B   105    sec_count_ok	pop hl
004430 D1                  B   106    				pop de
004431 F1                  B   107    				pop af
004432 FB                  B   108    				ei
004433 5BED4D              B   109    				reti.l
                           B   110    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 170


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
                           B   111    ;----------------------------------------------
                           B   112    ; Keyboard IRQ routine v0.03
                           B   113    ;----------------------------------------------
                           B   114    
004436                     B   115    kb_interrupt_handler
                           B   116    
                           B   117    ;--- irq test ---------------------------------
                           B   118    
                           B   119    ;				push bc
                           B   120    ;				ld a,0ffh
                           B   121    ;				ld (hw_palette),a
                           B   122    ;				ld b,0
                           B   123    ;testlp1		djnz testlp1
                           B   124    ;				ld a,0
                           B   125    ;				ld (hw_palette),a
                           B   126    ;				pop bc
                           B   127    				
                           B   128    ;--- end of test ------------------------------
                           B   129    
                           B   130    
004436 E5                  B   131    				push hl							004437 C5                  B   132    				push bc
                           B   133    				
004438 ED3802              B   134    key_loop		in0 a,(port_keyboard_data)		00443B 47                  B   135    				ld b,a
                           B   136    
00443C 3A 5B 6D 00         B   137    				ld a,(key_release_mode)
004440 B7                  B   138    				or a
004441 28 20               B   139    				jr z,key_pressed
                           B   140    			
004443 78                  B   141    				ld a,b							004444 FEE0                B   142    				cp 0e0h							004446 28 61               B   143    				jr z,kirq_done	
004448 FEE1                B   144    				cp 0e1h
00444A 28 5D               B   145    				jr z,kirq_done	
                           B   146    				
00444C CD B3 44 00         B   147    				call qualifiers					004450 7D                  B   148    				ld a,l
004451 2F                  B   149    				cpl
004452 6F                  B   150    				ld l,a
004453 3A 5D 6D 00         B   151    				ld a,(key_mod_flags)
004457 A5                  B   152    				and l							004458 32 5D 6D 00         B   153    				ld (key_mod_flags),a
00445C AF                  B   154    				xor a
00445D 32 5B 6D 00         B   155    				ld (key_release_mode),a
004461 18 46               B   156    				jr kirq_done
                           B   157    	
                           B   158    
004463 78                  B   159    key_pressed		ld a,b							004464 FEE0                B   160    				cp 0e0h							004466 28 41               B   161    				jr z,kirq_done	
004468 FEE1                B   162    				cp 0e1h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 171


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
00446A 28 3D               B   163    				jr z,kirq_done	
                           B   164    			
00446C FEF0                B   165    				cp 0f0h							00446E 20 08               B   166    				jr nz,not_krel
004470 3E01                B   167    				ld a,1							004472 32 5B 6D 00         B   168    				ld (key_release_mode),a			004476 18 31               B   169    				jr kirq_done
                           B   170    	
                           B   171    	
004478 CD B3 44 00         B   172    not_krel		call qualifiers					00447C 3A 5D 6D 00         B   173    				ld a,(key_mod_flags)			004480 B5                  B   174    				or l
004481 32 5D 6D 00         B   175    				ld (key_mod_flags),a			004485 68                  B   176    				ld l,b
004486 01000000            B   177    				ld bc,0
00448A 3A 59 6D 00         B   178    				ld a,(key_buf_wr_idx)
00448E 4F                  B   179    				ld c,a
00448F 7D                  B   180    				ld a,l
004490 21 39 6D 00         B   181    				ld hl,scancode_buffer
004494 09                  B   182    				add hl,bc
004495 77                  B   183    				ld (hl),a						004496 0E10                B   184    				ld c,16
004498 09                  B   185    				add hl,bc
004499 3A 5D 6D 00         B   186    				ld a,(key_mod_flags)			00449D 77                  B   187    				ld (hl),a	
00449E 3A 59 6D 00         B   188    				ld a,(key_buf_wr_idx)
0044A2 3C                  B   189    				inc a
0044A3 E60F                B   190    				and 15
0044A5 32 59 6D 00         B   191    				ld (key_buf_wr_idx),a			                           B   192    				
0044A9 ED3807              B   193    kirq_done		in0 a,(port_ps2_ctrl)			0044AC CB67                B   194    				bit 4,a	
0044AE 20 88               B   195    				jr nz,key_loop
                           B   196    
0044B0 C1                  B   197    				pop bc
0044B1 E1                  B   198    				pop hl
0044B2 C9                  B   199    				ret
                           B   200    
                           B   201    
0044B3 2E40                B   202    qualifiers		ld l,040h		;apps
0044B5 FE2F                B   203    				cp 02fh
0044B7 C8                  B   204    				ret z
                           B   205    			
0044B8 2E20                B   206    				ld l,020h		;r gui
0044BA FE27                B   207    				cp 027h
0044BC C8                  B   208    				ret z
                           B   209    			
0044BD 2E10                B   210    				ld l,010h		;r shift
0044BF FE59                B   211    				cp 059h
0044C1 C8                  B   212    				ret z
                           B   213    			
0044C2 2E08                B   214    				ld l,08h		; alt
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 172


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
0044C4 FE11                B   215    				cp 011h
0044C6 C8                  B   216    				ret z
                           B   217    			
0044C7 2E04                B   218    				ld l,04h		; l gui
0044C9 FE1F                B   219    				cp 01fh
                           B   220    			
0044CB 2E02                B   221    				ld l,02h		;l ctrl / r ctr
0044CD FE14                B   222    				cp 14h
0044CF C8                  B   223    				ret z
                           B   224    			
0044D0 2E01                B   225    				ld l,01h		;l shift
0044D2 FE12                B   226    				cp 12h
0044D4 C8                  B   227    				ret z
                           B   228    				
0044D5 2E00                B   229    				ld l,0
0044D7 C9                  B   230    				ret
                           B   231    
                           B   232    ;----------------------------------------------
                           B   233    ; Mouse IRQ routine v0.03
                           B   234    ;----------------------------------------------
                           B   235    
0044D8                     B   236    ms_interrupt_handler
                           B   237    
                           B   238    ;--- irq test ---------------------------------
                           B   239    
                           B   240    ;				push bc
                           B   241    ;				ld a,0ffh
                           B   242    ;				ld (hw_palette),a
                           B   243    ;				ld b,0
                           B   244    ;testlp1		djnz testlp1
                           B   245    ;				ld a,0
                           B   246    ;				ld (hw_palette),a
                           B   247    ;				pop bc
                           B   248    				
                           B   249    ;--- end of test ------------------------------
                           B   250    
                           B   251    
0044D8 C5                  B   252    				push bc							0044D9 D5                  B   253    				push de							0044DA E5                  B   254    				push hl							                           B   255    							
0044DB 11000000            B   256    ms_loop			ld de,0		
0044DF 3A 66 6D 00         B   257    				ld a,(mouse_packet_index)		0044E3 5F                  B   258    				ld e,a
0044E4 21 62 6D 00         B   259    				ld hl,mouse_packet	
0044E8 19                  B   260    				add hl,de
0044E9 ED3806              B   261    				in0 a,(port_mouse_data)
0044EC 77                  B   262    				ld (hl),a
                           B   263    								
0044ED 21 61 6D 00         B   264    				ld hl,mouse_packet_size
0044F1 1C                  B   265    				inc e							0044F2 7B                  B   266    				ld a,e
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 173


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
0044F3 BE                  B   267    				cp (hl)
0044F4 C2 9D 45 00         B   268    				jr nz,msubpkt
                           B   269    
0044F8 3A 62 6D 00         B   270    				ld a,(mouse_packet)				0044FC 4F                  B   271    				ld c,a	
0044FD E607                B   272    				and 0111b
0044FF 32 67 6D 00         B   273    				ld (mouse_buttons),a
                           B   274    				
004503 11000000            B   275    				ld de,0							004507 CB61                B   276    				bit 4,c
004509 28 01               B   277    				jr z,mxsignpos
00450B 1B                  B   278    				dec de
00450C 3A 63 6D 00         B   279    mxsignpos		ld a,(mouse_packet+1)
004510 5F                  B   280    				ld e,a
004511 2A 68 6D 00         B   281    				ld hl,(mouse_disp_x)
004515 19                  B   282    				add hl,de
004516 22 68 6D 00         B   283    				ld (mouse_disp_x),hl
                           B   284    				
00451A 2A 6E 6D 00         B   285    				ld hl,(mouse_abs_x)				00451E 19                  B   286    				add hl,de
00451F 22 6E 6D 00         B   287    				ld (mouse_abs_x),hl
004523 CB61                B   288    				bit 4,c
004525 20 12               B   289    				jr nz,m_abs_neg_x
004527 ED5B 76 6D 00       B   290    				ld de,(mouse_window_size_x)
00452C AF                  B   291    				xor a
00452D ED52                B   292    				sbc hl,de
00452F 38 13               B   293    				jr c,m_abs_x_ok
004531 1B                  B   294    				dec de
004532 ED53 6E 6D 00       B   295    				ld (mouse_abs_x),de
004537 18 0B               B   296    				jr m_abs_x_ok
004539 29                  B   297    m_abs_neg_x		add hl,hl
00453A 30 08               B   298    				jr nc,m_abs_x_ok
00453C 21000000            B   299    				ld hl,0
004540 22 6E 6D 00         B   300    				ld (mouse_abs_x),hl
                           B   301    				
                           B   302    				
004544 11000000            B   303    m_abs_x_ok		ld de,0							004548 CB69                B   304    				bit 5,c
00454A 28 01               B   305    				jr z,mysignpos
00454C 1B                  B   306    				dec de
00454D 3A 64 6D 00         B   307    mysignpos		ld a,(mouse_packet+2)
004551 5F                  B   308    				ld e,a
004552 2A 6B 6D 00         B   309    				ld hl,(mouse_disp_y)			004556 AF                  B   310    				xor a							004557 ED52                B   311    				sbc hl,de
004559 22 6B 6D 00         B   312    				ld (mouse_disp_y),hl
                           B   313    				
00455D 2A 71 6D 00         B   314    				ld hl,(mouse_abs_y)				004561 AF                  B   315    				xor a
004562 ED52                B   316    				sbc hl,de
004564 22 71 6D 00         B   317    				ld (mouse_abs_y),hl
004568 CB69                B   318    				bit 5,c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 174


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
00456A 28 12               B   319    				jr z,m_abs_neg_y
00456C ED5B 79 6D 00       B   320    				ld de,(mouse_window_size_y)
004571 AF                  B   321    				xor a
004572 ED52                B   322    				sbc hl,de
004574 38 13               B   323    				jr c,m_abs_y_ok
004576 1B                  B   324    				dec de
004577 ED53 71 6D 00       B   325    				ld (mouse_abs_y),de
00457C 18 0B               B   326    				jr m_abs_y_ok
00457E 29                  B   327    m_abs_neg_y		add hl,hl
00457F 30 08               B   328    				jr nc,m_abs_y_ok
004581 21000000            B   329    				ld hl,0
004585 22 71 6D 00         B   330    				ld (mouse_abs_y),hl
004589                     B   331    m_abs_y_ok			
                           B   332    
004589 21 65 6D 00         B   333    				ld hl,mouse_packet+3			00458D 3A 74 6D 00         B   334    				ld a,(mouse_wheel)
004591 86                  B   335    				add a,(hl)
004592 32 74 6D 00         B   336    				ld (mouse_wheel),a
                           B   337    				
004596 3E01                B   338    				ld a,1
004598 32 75 6D 00         B   339    				ld (mouse_updated),a			                           B   340    				
00459C AF                  B   341    				xor a
00459D 32 66 6D 00         B   342    msubpkt			ld (mouse_packet_index),a
                           B   343    				
0045A1 ED3807              B   344    				in0 a,(port_ps2_ctrl)			0045A4 CB6F                B   345    				bit 5,a
0045A6 C2 DB 44 00         B   346    				jr nz,ms_loop				
                           B   347    				
0045AA CD 4A 49 00         B   348    				call hwsc_update_pointer_sprite
                           B   349    
0045AE E1                  B   350    				pop hl
0045AF D1                  B   351    				pop de
0045B0 C1                  B   352    				pop bc
0045B1 C9                  B   353    				ret
                           B   354    				
                           B   355    				
                           B   356    ;----------------------------------------------
                           B   357    ; ez80p NMI code v0.03
                           B   358    ;----------------------------------------------
                           B   359    
0045B2 F5                  B   360    nmi_routine		push af							0045B3 ED3805              B   361    				in0 a,(port_irq_flags)			0045B6 CB77                B   362    				bit 6,a							0045B8 20 09               B   363    				jr nz,freeze
0045BA 3E20                B   364    				ld a,00100000b					0045BC ED3909              B   365    				out0 (port_clear_flags),a		0045BF F1                  B   366    				pop af
0045C0 5BED45              B   367    				retn.l
                           B   368    				
0045C3 F1                  B   369    freeze			pop af
0045C4 CD 88 14 00         B   370    				call os_store_CPU_regs
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 175


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
                           B   371    				
0045C8 21000000            B   372    				ld hl,0
0045CC 39                  B   373    				add hl,sp
0045CD 7E                  B   374    				ld a,(hl)						0045CE E601                B   375    				and 1
0045D0 32 B4 6B 00         B   376    				ld (store_adl),a
0045D4 20 0A               B   377    				jr nz,adl_freeze
0045D6 23                  B   378    				inc hl
0045D7 5E                  B   379    				ld e,(hl)						0045D8 23                  B   380    				inc hl
0045D9 56                  B   381    				ld d,(hl)
0045DA CD B4 16 00         B   382    				call mbase_de
0045DE 18 02               B   383    				jr got_pc
                           B   384    				
0045E0 33                  B   385    adl_freeze		inc sp
0045E1 D1                  B   386    				pop de							0045E2 ED53 AA 6B 00       B   387    got_pc			ld (store_pc),de				                           B   388    				
0045E7 CD 05 46 00         B   389    				call disable_button_nmi
0045EB 3E40                B   390    				ld a,01000000b
0045ED ED3909              B   391    				out0 (port_clear_flags),a		0045F0 3E01                B   392    				ld a,1
0045F2 32 72 6B 00         B   393    				ld (frozen),a
0045F6 C3 56 0A 00         B   394    				jp os_cold_start				                           B   395    
                           B   396    ;----------------------------------------------
                           B   397    
                           B   398    ;nmi_routine
                           B   399    ;
                           B   400    ;				push af							                           B   401    ;				push bc
                           B   402    ;				ld a,0ffh
                           B   403    ;				ld (hw_palette),a
                           B   404    ;				ld b,0
                           B   405    ;nmi_testlp2		djnz nmi_testlp2
                           B   406    ;				ld a,0
                           B   407    ;				ld (hw_palette),a
                           B   408    ;				pop bc
                           B   409    ;				ld a,01100000b
                           B   410    ;				out0 (port_clear_flags)
                           B   411    ;				pop af
                           B   412    ;				retn.l							                           B   413    
                           B   414    
                           B   415    ;----------------------------------------------
                           B   416    
0045FA                     B   417    enable_button_nmi
                           B   418    
0045FA 3E40                B   419    				ld a,01000000b
0045FC ED3909              B   420    				out0 (port_clear_flags),a		0045FF 3EC0                B   421    				ld a,11000000b					004601 ED3905              B   422    				out0 (port_irq_ctrl),a			Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 176


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
004604 C9                  B   423    				ret
                           B   424    
                           B   425    
004605                     B   426    disable_button_nmi
                           B   427    
004605 3E40                B   428    				ld a,01000000b					004607 ED3905              B   429    				out0 (port_irq_ctrl),a
00460A C9                  B   430    				ret
                           B   431    
                           B   432    
00460B                     B   433    disable_all_nmis
                           B   434    
00460B 3E60                B   435    				ld a,01100000b					00460D ED3905              B   436    				out0 (port_irq_ctrl),a
004610 C9                  B   437    				ret
                           B   438    				
                           B   439    ;----------------------------------------------
                           B   440    
                           B     0    	include		'ez80p_rs232_code.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; ez80p low level RS232 code v0.03 (ADL mode)
                           B     3    ;----------------------------------------------
                           B     4    		
004611                     B     5    receive_serial_byte
                           B     6    
                           B     7    ; If zero flag set on return OK, A = received b
                           B     8    ; Else timed out (and also A = error $83: time 
                           B     9    
004611 C5                  B    10    				push bc
004612 3A 08 6A 00         B    11    				ld a,(serial_timeout)
004616 47                  B    12    				ld b,a
004617 3ECC                B    13    rx_set_timer	ld a,cch
004619 ED3981              B    14    				out0 (TMR0_RR_L),a				00461C 3E0C                B    15    				ld a,0ch
00461E ED3982              B    16    				out0 (TMR0_RR_H),a				004621 3E03                B    17    				ld a,00000011b					004623 ED3980              B    18    				out0 (TMR0_CTL),a				004626 ED3880              B    19    				in0 a,(TMR0_CTL)				                           B    20    				
004629 0EC5                B    21    rx_byte_lp		ld c,UART0_LSR					00462B ED7401              B    22    				tstio 1							00462E 20 0E               B    23    				jr nz,rx_in_buffer
004630 AF                  B    24    				xor a
004631 B0                  B    25    				or b
004632 28 13               B    26    				jr z,rx_time_out
004634 0E80                B    27    				ld c,TMR0_CTL	
004636 ED7480              B    28    				tstio 128						004639 28 EE               B    29    				jr z,rx_byte_lp		
00463B 05                  B    30    				dec b
00463C 18 D9               B    31    				jr rx_set_timer
                           B    32    
00463E 01C00000            B    33    rx_in_buffer	ld bc,UART0_RBR
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 177


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_rs232_code.asm
004642 ED78                B    34    				in a,(bc)						004644 C1                  B    35    				pop bc
004645 BF                  B    36    				cp a							004646 C9                  B    37    				ret
                           B    38    
004647 C1                  B    39    rx_time_out		pop bc
004648 3E83                B    40    				ld a,083h						00464A B7                  B    41    				or a							00464B C9                  B    42    				ret
                           B    43    
                           B    44    
                           B    45    
                           B    46    ;----------------------------------------------
                           B    47    
00464C                     B    48    send_serial_byte
                           B    49    
                           B    50    ; set A to the byte to send
                           B    51    
00464C C5                  B    52    				push bc
00464D 0EC5                B    53    				ld c,UART0_LSR					00464F ED7420              B    54    rs232_swait		tstio 020h						004652 28 FB               B    55    				jr z,rs232_swait
004654 01C00000            B    56    				ld bc,UART0_THR
004658 ED79                B    57    				out (c),a						00465A C1                  B    58    				pop bc
00465B C9                  B    59    				ret
                           B    60    
                           B    61    ;----------------------------------------------
                           B    62    
00465C                     B    63    send_serial_bytes
                           B    64    
                           B    65    ; set D to the first byte to send
                           B    66    ; and E to the second byte to send
                           B    67    
00465C 7A                  B    68    				ld a,d
00465D CD 4C 46 00         B    69    				call send_serial_byte
004661 7B                  B    70    				ld a,e
004662 CD 4C 46 00         B    71    				call send_serial_byte
004666 C9                  B    72    				ret
                           B    73    
                           B    74    ;----------------------------------------------
                           B    75    
004667                     B    76    hwsc_flush_serial_buffer
                           B    77    
004667 C5                  B    78    				push bc
004668 01C00000            B    79    				ld bc,UART0_RBR
00466C ED78                B    80    				in a,(bc)						00466E C1                  B    81    				pop bc
00466F C9                  B    82    				ret
                           B    83    
                           B    84    ;----------------------------------------------
                           B    85    		
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 178


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
                           B     0    	include		'ez80p_video_code.asm'
                           B     1    ;---------------------------------
                           B     2    ; ez80p-specific video code v0.10
                           B     3    ; Character Mode Routines
                           B     4    ;---------------------------------
                           B     5    
       00804000            B     6    charmap_addr	equ vram_a_addr+04000h			                           B     7    
004670                     B     8    set_charmap_parameters
                           B     9    
                           B    10    ;set
                           B    11    ; a = line/pixel doubling (bit 0 = line double,
                           B    12    ; b = columns
                           B    13    ; c = rows
                           B    14    
004670 E603                B    15    				and 3
004672 32 D9 69 00         B    16    				ld (video_doubling),a
004676 79                  B    17    				ld a,c
004677 32 DA 69 00         B    18    				ld (charmap_rows),a
00467B 78                  B    19    				ld a,b
00467C 32 DD 69 00         B    20    				ld (charmap_columns),a
004680 21000000            B    21    				ld hl,0
004684 69                  B    22    				ld l,c
004685 60                  B    23    				ld h,b
004686 ED6C                B    24    				mlt hl
004688 29                  B    25    				add hl,hl
004689 22 87 6B 00         B    26    				ld (charmap_size),hl
00468D 11004080            B    27    				ld de,charmap_addr
004691 19                  B    28    				add hl,de
004692 22 7B 6B 00         B    29    				ld (free_vram_a_base),hl		                           B    30    				
004696 CD 9C 46 00         B    31    				call os_set_video_hw_regs
00469A AF                  B    32    				xor a
00469B C9                  B    33    				ret
                           B    34    				
                           B    35    
00469C                     B    36    os_set_video_hw_regs
                           B    37    
00469C 3A D9 69 00         B    38    				ld a,(video_doubling)
0046A0 CB27                B    39    				sla a
0046A2 F618                B    40    				or 00011000b
0046A4 320018FF            B    41    				ld (video_control),a			0046A8 AF                  B    42    				xor a
0046A9 320218FF            B    43    				ld (bgnd_palette_select),a
0046AD 3E63                B    44    				ld a,99
0046AF 320418FF            B    45    				ld (right_border_position),a
                           B    46    
0046B3 DD210010 FF         B    47    				ld ix,tilemap_parameters		0046B8 21004080            B    48    				ld hl,charmap_addr
0046BC DD2F00              B    49    				ld (ix),hl			   			                           B    50    
0046BF 21020000            B    51    				ld hl,2
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 179


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
0046C3 DD2F04              B    52    				ld (ix+04h),hl					                           B    53    				
0046C6 21000008            B    54    				ld hl,80000h
0046CA 11000000            B    55    				ld de,0
0046CE 3A DD 69 00         B    56    				ld a,(charmap_columns)
0046D2 5F                  B    57    				ld e,a
0046D3 AF                  B    58    				xor a
0046D4 ED52                B    59    				sbc hl,de
0046D6 AF                  B    60    				xor a
0046D7 ED52                B    61    				sbc hl,de
0046D9 DD2F08              B    62    				ld (ix+08h),hl					                           B    63    				
0046DC 21000000            B    64    				ld hl,0
0046E0 DD2F0C              B    65    				ld (ix+0ch),hl					                           B    66    				
0046E3 3A DD 69 00         B    67    				ld a,(charmap_columns)
0046E7 3D                  B    68    				dec a
0046E8 DD7710              B    69    				ld (ix+10h),a					                           B    70    				
0046EB 3E00                B    71    				ld a,0
0046ED DD7711              B    72    				ld (ix+11h),a					0046F0 DD7712              B    73    				ld (ix+12h),a					                           B    74    
0046F3 21 B4 69 00         B    75    				ld hl,pen_palette
0046F7 CD 06 47 00         B    76    				call hswc_set_ui_colours
                           B    77    				
0046FB CD 31 49 00         B    78    				call hwsc_reset_sprites
                           B    79    				
0046FF AF                  B    80    				xor a
004700 32 7C 6D 00         B    81    				ld (os_pointer_enable),a		                           B    82    				
004704 AF                  B    83    				xor a							004705 C9                  B    84    				ret
                           B    85    
                           B    86    ;----------------------------------------------
                           B    87    				
004706                     B    88    hswc_set_ui_colours
                           B    89    
004706 110000FF            B    90    				ld de,hw_palette
00470A 01200000            B    91    				ld bc,16*2
00470E EDB0                B    92    				ldir
004710 AF                  B    93    				xor a							004711 C9                  B    94    				ret
                           B    95    
                           B    96    
                           B    97    ;----------------------------------------------
                           B    98    
004712                     B    99    hwsc_clear_screen
                           B   100    
004712 21004080            B   101    				ld hl,charmap_addr				004716 3620                B   102    				ld (hl),32						004718 23                  B   103    				inc hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 180


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
004719 CD 38 47 00         B   104    				call get_fill_attr
00471D 77                  B   105    				ld (hl),a
00471E 23                  B   106    				inc hl
00471F EB                  B   107    				ex de,hl
004720 21004080            B   108    				ld hl,charmap_addr
004724 ED4B 87 6B 00       B   109    				ld bc,(charmap_size)
004729 0B                  B   110    				dec bc
00472A 0B                  B   111    				dec bc
00472B EDB0                B   112    				ldir
                           B   113    				
00472D 01000000            B   114    				ld bc,0
004731 ED43 1F 6C 00       B   115    				ld (cursor_y),bc
004736 AF                  B   116    				xor a							004737 C9                  B   117    				ret
                           B   118    				
                           B   119    				
004738 D5                  B   120    get_fill_attr	push de
004739 3A B0 69 00         B   121    				ld a,(current_pen)
00473D E60F                B   122    				and 0fh
00473F 5F                  B   123    				ld e,a
004740 3A B2 69 00         B   124    				ld a,(background_colour)
004744 0F                  B   125    				rrca
004745 0F                  B   126    				rrca
004746 0F                  B   127    				rrca
004747 0F                  B   128    				rrca
004748 E6F0                B   129    				and 0f0h
00474A B3                  B   130    				or e
00474B D1                  B   131    				pop de
00474C C9                  B   132    				ret
                           B   133    				
                           B   134    
                           B   135    ;----------------------------------------------
                           B   136    
00474D                     B   137    hwsc_scroll_up	
                           B   138    				
00474D C5                  B   139    				push bc
00474E D5                  B   140    				push de
00474F E5                  B   141    				push hl
                           B   142    
004750 2A 87 6B 00         B   143    				ld hl,(charmap_size)
004754 ED5B DD 69 00       B   144    				ld de,(charmap_columns)
004759 AF                  B   145    				xor a
00475A ED52                B   146    				sbc hl,de
00475C ED52                B   147    				sbc hl,de						00475E E5                  B   148    				push hl
00475F C1                  B   149    				pop bc							004760 21004080            B   150    				ld hl,charmap_addr
004764 E5                  B   151    				push hl
004765 19                  B   152    				add hl,de
004766 19                  B   153    				add hl,de
004767 D1                  B   154    				pop de
004768 EDB0                B   155    				ldir
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 181


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
                           B   156    				
00476A EB                  B   157    				ex de,hl						00476B E5                  B   158    				push hl
00476C 3620                B   159    				ld (hl),32
00476E 23                  B   160    				inc hl
00476F CD 38 47 00         B   161    				call get_fill_attr
004773 77                  B   162    				ld (hl),a
004774 2A DD 69 00         B   163    				ld hl,(charmap_columns)
004778 2B                  B   164    				dec hl
004779 29                  B   165    				add hl,hl
00477A E5                  B   166    				push hl
00477B C1                  B   167    				pop bc
00477C E1                  B   168    				pop hl
00477D E5                  B   169    				push hl
00477E D1                  B   170    				pop de
00477F 13                  B   171    				inc de
004780 13                  B   172    				inc de
004781 EDB0                B   173    				ldir
                           B   174    				
004783 E1                  B   175    				pop hl
004784 D1                  B   176    				pop de
004785 C1                  B   177    				pop bc
004786 AF                  B   178    				xor a							004787 C9                  B   179    				ret
                           B   180    
                           B   181    
                           B   182    ;----------------------------------------------
                           B   183    
004788                     B   184    hwsc_plot_char
                           B   185    
                           B   186    ; Set:
                           B   187    ; ----
                           B   188    ; A = ascii char
                           B   189    ; B = x character coordinate 
                           B   190    ; C = y character coordinate
                           B   191    
004788 E5                  B   192    				push hl							004789 D5                  B   193    				push de
00478A F5                  B   194    				push af
                           B   195    
00478B 3A DA 69 00         B   196    				ld a,(charmap_rows)				00478F 3D                  B   197    				dec a
004790 B9                  B   198    				cp c							004791 38 08               B   199    				jr c,win_err
004793 3A DD 69 00         B   200    				ld a,(charmap_columns)
004797 3D                  B   201    				dec a
004798 B8                  B   202    				cp b
004799 30 07               B   203    				jr nc,win_ok
00479B F1                  B   204    win_err			pop af
00479C D1                  B   205    				pop de
00479D E1                  B   206    				pop hl
00479E 3E88                B   207    				ld a,88h						Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 182


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
0047A0 B7                  B   208    				or a
0047A1 C9                  B   209    				ret
                           B   210    				
0047A2 2A DD 69 00         B   211    win_ok			ld hl,(charmap_columns)			0047A6 61                  B   212    				ld h,c
0047A7 ED6C                B   213    				mlt hl
0047A9 11000000            B   214    				ld de,0
0047AD 58                  B   215    				ld e,b
0047AE 19                  B   216    				add hl,de
0047AF 29                  B   217    				add hl,hl
0047B0 11004080            B   218    				ld de,charmap_addr
0047B4 19                  B   219    				add hl,de
0047B5 F1                  B   220    				pop af
0047B6 77                  B   221    				ld (hl),a
0047B7 23                  B   222    				inc hl
0047B8 3A B0 69 00         B   223    				ld a,(current_pen)
0047BC 77                  B   224    				ld (hl),a
0047BD D1                  B   225    				pop de
0047BE E1                  B   226    				pop hl
0047BF AF                  B   227    				xor a
0047C0 C9                  B   228    				ret
                           B   229    				
                           B   230    				
                           B   231    ;----------------------------------------------
                           B   232    
0047C1                     B   233    hwsc_remove_cursor
                           B   234    
0047C1 3A D6 69 00         B   235    				ld a,(cursor_present)			0047C5 B7                  B   236    				or a
0047C6 C8                  B   237    				ret z
0047C7 ED4B 1F 6C 00       B   238    				ld bc,(cursor_y)
0047CC CD 2F 48 00         B   239    				call hwsc_get_charmap_addr_xy
0047D0 3A D5 69 00         B   240    				ld a,(char_under_cursor)
0047D4 77                  B   241    				ld (hl),a
0047D5 AF                  B   242    				xor a
0047D6 32 D6 69 00         B   243    				ld (cursor_present),a
0047DA C9                  B   244    				ret
                           B   245    
                           B   246    
0047DB                     B   247    hwsc_draw_cursor
                           B   248    								
0047DB 3A D6 69 00         B   249    				ld a,(cursor_present)			0047DF B7                  B   250    				or a
0047E0 C0                  B   251    				ret nz
0047E1 3C                  B   252    				inc a
0047E2 32 D6 69 00         B   253    				ld (cursor_present),a
                           B   254    				
0047E6 ED4B 1F 6C 00       B   255    				ld bc,(cursor_y)
0047EB CD 2F 48 00         B   256    				call hwsc_get_charmap_addr_xy
0047EF 7E                  B   257    				ld a,(hl)						0047F0 32 D5 69 00         B   258    				ld (char_under_cursor),a		0047F4 36FF                B   259    				ld (hl),ffh						Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 183


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
                           B   260    				
0047F6 11400000            B   261    				ld de,64						0047FA 57                  B   262    				ld d,a
0047FB ED5C                B   263    				mlt de
0047FD FD210000 80         B   264    				ld iy,vram_a_addr				004802 FD19                B   265    				add iy,de						                           B   266    				
004804 21400000            B   267    				ld hl,64
004808 3A D8 69 00         B   268    				ld a,(cursor_image_char)
00480C 67                  B   269    				ld h,a
00480D ED6C                B   270    				mlt hl
00480F 11000080            B   271    				ld de,vram_a_addr
004813 19                  B   272    				add hl,de
                           B   273    				
004814 DD21C03F 80         B   274    				ld ix,vram_a_addr+03fc0h
004819 11080000            B   275    				ld de,8
00481D 0608                B   276    				ld b,8
00481F FD7E00              B   277    cur_loop		ld a,(iy)						004822 AE                  B   278    				xor (hl)						004823 DD7700              B   279    				ld (ix),a						004826 FD19                B   280    				add iy,de
004828 DD19                B   281    				add ix,de
00482A 19                  B   282    				add hl,de
00482B 10 F2               B   283    				djnz cur_loop
                           B   284    				
00482D AF                  B   285    				xor a
00482E C9                  B   286    				ret
                           B   287    				
                           B   288    
                           B   289    ;----------------------------------------------
                           B   290    
00482F                     B   291    hwsc_get_charmap_addr_xy
                           B   292    
                           B   293    ; returns address of charmap in xHL for charact
                           B   294    ; and attrmap in xDE
                           B   295    				
00482F 2A DD 69 00         B   296    				ld hl,(charmap_columns)			004833 61                  B   297    				ld h,c
004834 ED6C                B   298    				mlt hl
004836 11000000            B   299    				ld de,0
00483A 58                  B   300    				ld e,b
00483B 19                  B   301    				add hl,de
00483C 29                  B   302    				add hl,hl
00483D 11004080            B   303    				ld de,charmap_addr
004841 19                  B   304    				add hl,de
004842 E5                  B   305    				push hl
004843 D1                  B   306    				pop de
004844 13                  B   307    				inc de
004845 AF                  B   308    				xor a
004846 C9                  B   309    				ret
                           B   310    								
                           B   311    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 184


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
                           B   312    
004847                     B   313    hwsc_chars_left
                           B   314    
                           B   315    ; moves characters (in character map) on the cu
                           B   316    
004847 E5                  B   317    				push hl
004848 D5                  B   318    				push de
004849 C5                  B   319    				push bc
                           B   320    				
00484A 2A DD 69 00         B   321    				ld hl,(charmap_columns)
00484E 3A 1F 6C 00         B   322    				ld a,(cursor_y)
004852 67                  B   323    				ld h,a
004853 ED6C                B   324    				mlt hl
004855 11000000            B   325    				ld de,0
004859 58                  B   326    				ld e,b
00485A 19                  B   327    				add hl,de
00485B 29                  B   328    				add hl,hl
00485C 11004080            B   329    				ld de,charmap_addr
004860 19                  B   330    				add hl,de
                           B   331    				
004861 3A DD 69 00         B   332    				ld a,(charmap_columns)
004865 90                  B   333    				sub b
004866 CB27                B   334    				sla a
004868 01000000            B   335    				ld bc,0
00486C 4F                  B   336    				ld c,a
00486D E5                  B   337    				push hl
00486E D1                  B   338    				pop de
00486F 1B                  B   339    				dec de
004870 1B                  B   340    				dec de
004871 EDB0                B   341    				ldir
                           B   342    				
004873 3E20                B   343    				ld a,32						;pu
004875 12                  B   344    				ld (de),a
004876 13                  B   345    				inc de
004877 CD 38 47 00         B   346    				call get_fill_attr
00487B 12                  B   347    				ld (de),a
                           B   348    				
00487C C1                  B   349    				pop bc
00487D D1                  B   350    				pop de
00487E E1                  B   351    				pop hl
00487F C9                  B   352    				ret
                           B   353    
                           B   354    
                           B   355    ;----------------------------------------------
                           B   356    
                           B   357    
004880                     B   358    hwsc_chars_right
                           B   359    
                           B   360    ; moves characters on current line right from c
                           B   361    
004880 C5                  B   362    				push bc
004881 D5                  B   363    				push de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 185


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
004882 E5                  B   364    				push hl
                           B   365    	
004883 21 20 6C 00         B   366    				ld hl,cursor_x				
004887 3A DD 69 00         B   367    				ld a,(charmap_columns)
00488B 3D                  B   368    				dec a
00488C BE                  B   369    				cp (hl)			
00488D 28 30               B   370    				jr z,chright_end
00488F 46                  B   371    				ld b,(hl)
                           B   372    				
004890 2A DD 69 00         B   373    				ld hl,(charmap_columns)
004894 3A 1F 6C 00         B   374    				ld a,(cursor_y)
004898 3C                  B   375    				inc a							004899 67                  B   376    				ld h,a
00489A ED6C                B   377    				mlt hl
00489C 29                  B   378    				add hl,hl
00489D 11004080            B   379    				ld de,charmap_addr
0048A1 19                  B   380    				add hl,de					
0048A2 2B                  B   381    				dec hl							0048A3 E5                  B   382    				push hl
0048A4 D1                  B   383    				pop de							0048A5 2B                  B   384    				dec hl
0048A6 2B                  B   385    				dec hl							0048A7 3A DD 69 00         B   386    				ld a,(charmap_columns)
0048AB 90                  B   387    				sub b
0048AC 3D                  B   388    				dec a
0048AD CB27                B   389    				sla a
0048AF 01000000            B   390    				ld bc,0
0048B3 4F                  B   391    				ld c,a							0048B4 EDB8                B   392    				lddr
0048B6 23                  B   393    				inc hl							0048B7 3620                B   394    				ld (hl),32
0048B9 23                  B   395    				inc hl
0048BA CD 38 47 00         B   396    				call get_fill_attr
0048BE 77                  B   397    				ld (hl),a
                           B   398    							
0048BF E1                  B   399    chright_end		pop hl	
0048C0 D1                  B   400    				pop de
0048C1 C1                  B   401    				pop bc
0048C2 C9                  B   402    				ret
                           B   403    
                           B   404    ;----------------------------------------------
                           B   405    
                           B   406    
0048C3                     B   407    hwsc_charline_to_command_string	
                           B   408    				
                           B   409    				
0048C3 2A DD 69 00         B   410    				ld hl,(charmap_columns)			0048C7 3A 1F 6C 00         B   411    				ld a,(cursor_y)
0048CB 67                  B   412    				ld h,a
0048CC ED6C                B   413    				mlt hl
0048CE 29                  B   414    				add hl,hl
0048CF 11004080            B   415    				ld de,charmap_addr
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 186


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
0048D3 19                  B   416    				add hl,de
0048D4 11 3D 6C 00         B   417    				ld de,commandstring
0048D8 0650                B   418    				ld b,max_buffer_chars			0048DA 7E                  B   419    copy_to_cmdline	ld a,(hl)
0048DB 12                  B   420    				ld (de),a
0048DC 13                  B   421    				inc de
0048DD 23                  B   422    				inc hl
0048DE 23                  B   423    				inc hl
0048DF 10 F9               B   424    				djnz copy_to_cmdline
0048E1 C9                  B   425    				ret
                           B   426    
                           B   427    ;----------------------------------------------
                           B   428    
                           B   429    
0048E2 C5                  B   430    hwsc_wait_vrt	push bc
                           B   431    
0048E3 0E01                B   432    				ld c,1
0048E5 ED0909              B   433    				out0 (port_clear_flags),c
                           B   434    
0048E8 0E01                B   435    				ld c,port_hw_flags
0048EA ED7420              B   436    ewaitvrtlp1		tstio 1<<vrt
0048ED 28 FB               B   437    				jr z,ewaitvrtlp1
                           B   438    				
0048EF C1                  B   439    				pop bc
0048F0 BF                  B   440    				cp a							0048F1 C9                  B   441    				ret
                           B   442    
                           B   443    
                           B   444    ;----------------------------------------------
                           B   445    
                           B     0    	include		'ez80p_misc_code.asm'
                           B     1    ;----------------------------------
                           B     2    ;Misc eZ80p specific routines v0.06
                           B     3    ;----------------------------------
                           B     4    
0048F2                     B     5    hwsc_default_hw_settings
                           B     6    
                           B     7    ; Set up eZ80 Wait states
                           B     8    
0048F2 3E48                B     9    					ld a,01001000b				0048F4 ED39AA              B    10    					out0 (CS0_CTL),a
0048F7 3E00                B    11    					ld a,000h					0048F9 ED39A8              B    12    					out0 (CS0_LBR),a
0048FC 3EFF                B    13    					ld a,0ffh	
0048FE ED39A9              B    14    					out0 (CS0_UBR),a			                           B    15    
004901 3E58                B    16    					ld a,01011000b
004903 ED39AD              B    17    					out0 (CS1_CTL),a			004906 3E00                B    18    					ld a,0
004908 ED39AB              B    19    					out0 (CS1_LBR),a			                           B    20    
                           B    21    ;set up eZ80 GPIO ports
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 187


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B    22    
00490B 3EFF                B    23    					ld a,0ffh
00490D ED399F              B    24    					out0 (PC_DDR),a				004910 AF                  B    25    					xor a
004911 ED39A0              B    26    					out0 (PC_ALT1),a
004914 ED39A1              B    27    					out0 (PC_ALT2),a
                           B    28    					
004917 3EFF                B    29    					ld a,0ffh					004919 ED39A3              B    30    					out0 (PD_DDR),a				00491C AF                  B    31    					xor a	
00491D ED39A4              B    32    					out0 (PD_ALT1),a			004920 3E0F                B    33    					ld a,00fh				
004922 ED39A5              B    34    					out0 (PD_ALT2),a			                           B    35    
                           B    36    ;set up eZ80 timer
                           B    37    
004925 ED3892              B    38    					in0 a,(TMR_ISS)
004928 E6FC                B    39    					and 11111100b
00492A F601                B    40    					or  00000001b
00492C ED3992              B    41    					out0 (TMR_ISS),a			                           B    42    					
00492F AF                  B    43    					xor a
004930 C9                  B    44    					ret
                           B    45    
                           B    46    
                           B    47    ;----------------------------------------------
                           B    48    
004931 AF                  B    49    hwsc_reset_sprites	xor a
004932 320118FF            B    50    					ld (sprite_control),a		004936 3E04                B    51    					ld a,4
004938 320718FF            B    52    					ld (sprite_gen_stop_pos),a	                           B    53    					
00493C 210008FF            B    54    					ld hl,hw_sprite_registers	004940 01000800            B    55    					ld bc,2048
004944 AF                  B    56    					xor a
004945 CD 7C 16 00         B    57    					call os_bchl_memfill
004949 C9                  B    58    					ret
                           B    59    					
                           B    60    ;----------------------------------------------
                           B    61    
                           B    62    
00494A                     B    63    hwsc_update_pointer_sprite
                           B    64    					
00494A 3A 7C 6D 00         B    65    					ld a,(os_pointer_enable)	00494E E601                B    66    					and 1
004950 C8                  B    67    					ret z
                           B    68    
004951 DDE5                B    69    					push ix
004953 DD21F808 FF         B    70    					ld ix,hw_sprite_registers+(
004958 2A 6E 6D 00         B    71    					ld hl,(mouse_abs_x)
00495C 01000100            B    72    					ld bc,x_display_offset
004960 09                  B    73    					add hl,bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 188


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
004961 DD7500              B    74    					ld (ix),l
004964 DD7401              B    75    					ld (ix+1),h
004967 2A 71 6D 00         B    76    					ld hl,(mouse_abs_y)
00496B 01000200            B    77    					ld bc,y_display_offset
00496F 09                  B    78    					add hl,bc
004970 DD7502              B    79    					ld (ix+2),l
004973 DD7403              B    80    					ld (ix+3),h
004976 ED4B 80 6D 00       B    81    					ld bc,(os_pointer_height)
00497B DD7104              B    82    					ld (ix+4),c
00497E DD7005              B    83    					ld (ix+5),b
004981 ED4B 7D 6D 00       B    84    					ld bc,(os_pointer_definitio
004986 DD7106              B    85    					ld (ix+6),c
004989 DD7007              B    86    					ld (ix+7),b
00498C DDE1                B    87    					pop ix
00498E C9                  B    88    					ret
                           B    89    
                           B    90    
                           B    91    ;----------------------------------------------
                           B    92    				
                           B    93    
00498F 11000000            B    94    hwsc_get_version	ld de,0
004993 0610                B    95    					ld b,16
004995 78                  B    96    gethwvlp			ld a,b
004996 3D                  B    97    					dec a
004997 ED3908              B    98    					out0 (port_selector),a		00499A DB01                B    99    					in a,(port_hw_flags)		00499C CB27                B   100    					sla a
00499E CB13                B   101    					rl e
0049A0 CB12                B   102    					rl d
0049A2 10 F1               B   103    					djnz gethwvlp				                           B   104    									
0049A4 213E0000            B   105    					ld hl,prose_version
0049A8 BF                  B   106    					cp a						0049A9 C9                  B   107    					ret
                           B   108    
                           B   109    
                           B   110    
                           B   111    ;----------------------------------------------
                           B   112    ; Timer0 related 
                           B   113    ;----------------------------------------------
                           B   114    
0049AA                     B   115    hwsc_time_delay
                           B   116    
                           B   117    ; set DE to 32768Hz ticks to wait
                           B   118    
0049AA CD B6 49 00         B   119    					call hwsc_set_timeout
0049AE CD C7 49 00         B   120    twaitlp				call hwsc_test_timeout
0049B2 28 FA               B   121    					jr z,twaitlp
0049B4 AF                  B   122    					xor a						0049B5 C9                  B   123    					ret			
                           B   124    
                           B   125    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 189


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B   126    
                           B   127    ; Set DE to 32768 Hz ticks to allow before time
                           B   128    
0049B6 7B                  B   129    hwsc_set_timeout	ld a,e						0049B7 ED3981              B   130    					out0 (TMR0_RR_L),a			0049BA 7A                  B   131    					ld a,d
0049BB ED3982              B   132    					out0 (TMR0_RR_H),a			0049BE 3E03                B   133    					ld a,00000011b				0049C0 ED3980              B   134    					out0 (TMR0_CTL),a			0049C3 ED3880              B   135    					in0 a,(TMR0_CTL)			0049C6 C9                  B   136    					ret
                           B   137    			
0049C7 ED3880              B   138    hwsc_test_timeout	in0 a,(TMR0_CTL)			0049CA CB7F                B   139    					bit 7,a
0049CC C9                  B   140    					ret
                           B   141    			
                           B   142    ;----------------------------------------------
                           B   143    
0049CD                     B   144    hwsc_read_rtc
0049CD D5                  B   145    					push de
0049CE C5                  B   146    					push bc
0049CF 0EE0                B   147    hwsc_rtc_rlp		ld c,RTC_SEC
0049D1 0608                B   148    					ld b,8
0049D3 21 6B 6B 00         B   149    					ld hl,time_data
0049D7 ED92                B   150    					inimr						0049D9 0EE0                B   151    					ld c,RTC_SEC
0049DB 0600                B   152    					ld b,0
0049DD 1E08                B   153    					ld e,8
0049DF 21 6B 6B 00         B   154    					ld hl,time_data
0049E3 ED78                B   155    timevloop			in a,(bc)					0049E5 BE                  B   156    					cp (hl)						0049E6 20 E7               B   157    					jr nz,hwsc_rtc_rlp			0049E8 23                  B   158    					inc hl
0049E9 0C                  B   159    					inc c
0049EA 1D                  B   160    					dec e
0049EB 20 F6               B   161    					jr nz,timevloop
0049ED 21 6B 6B 00         B   162    					ld hl,time_data
0049F1 C1                  B   163    					pop bc
0049F2 D1                  B   164    					pop de
0049F3 BF                  B   165    					cp a						0049F4 C9                  B   166    					ret
                           B   167    
                           B   168    
0049F5                     B   169    hwsc_write_rtc	
                           B   170    
                           B   171    ; set HL to location of BCD data for RTC: sec/m
                           B   172    
0049F5 E5                  B   173    					push hl
0049F6 C5                  B   174    					push bc
0049F7 3E21                B   175    					ld a,00100001b				0049F9 ED39ED              B   176    					out0 (RTC_CTRL),a
0049FC 0EE0                B   177    					ld c,RTC_SEC
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 190


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
0049FE 0608                B   178    					ld b,8
004A00 ED93                B   179    					otimr
004A02 3E20                B   180    					ld a,00100000b				004A04 ED39ED              B   181    					out0 (RTC_CTRL),a
004A07 C1                  B   182    					pop bc
004A08 E1                  B   183    					pop hl
004A09 BF                  B   184    					cp a						004A0A C9                  B   185    					ret	
                           B   186    
                           B   187    ;----------------------------------------------
                           B   188    ; Timer1 related 
                           B   189    ;----------------------------------------------
                           B   190    
004A0B                     B   191    os_init_msec_counter
                           B   192    
                           B   193    ; set E = 1 enable, E = 0 disable
                           B   194    
                           B   195    ; 1 tick = 50MHz/4, EG:  Reload value = 12500, 
                           B   196    			
004A0B E5                  B   197    				push hl
                           B   198    
004A0C AF                  B   199    				xor a
004A0D ED3983              B   200    				out0 (TMR1_CTL),a				                           B   201    				
004A10 CB43                B   202    				bit 0,e
004A12 28 2B               B   203    				jr z,disable_tmr1
                           B   204    				
004A14 21 0A 44 00         B   205    				ld hl,prt1_irq_handler
004A18 22740000            B   206    				ld (074h),hl
                           B   207    				
004A1C ED3892              B   208    				in0 a,(TMR_ISS)
004A1F E6F3                B   209    				and 11110011b
004A21 ED3992              B   210    				out0 (TMR_ISS),a
                           B   211    				
004A24 21D43000            B   212    				ld hl,30d4h
004A28 ED2185              B   213    				out0 (TMR1_RR_H),h
004A2B ED2984              B   214    				out0 (TMR1_RR_L),l
                           B   215    
004A2E 21000000            B   216    				ld hl,0
004A32 22 8D 6B 00         B   217    				ld (seconds_counter),hl
004A36 22 8A 6B 00         B   218    				ld (milliseconds_counter),hl
                           B   219    
004A3A 3E53                B   220    				ld a,01010011b
004A3C ED3983              B   221    				out0 (TMR1_CTL),a				                           B   222    			
004A3F E1                  B   223    disable_tmr1	pop hl
004A40 AF                  B   224    				xor a
004A41 C9                  B   225    				ret
                           B   226    
                           B   227    
                           B   228    
004A42                     B   229    os_read_msec_counter
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 191


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B   230    			
004A42 F3                  B   231    			di
004A43 ED5B 8A 6B 00       B   232    			ld de,(milliseconds_counter)
004A48 2A 8D 6B 00         B   233    			ld hl,(seconds_counter)
004A4C FB                  B   234    			ei
004A4D AF                  B   235    			xor a
004A4E C9                  B   236    			ret
                           B   237    			
                           B   238    
                           B   239    ;----------------------------------------------
                           B   240    ; INIT KEYBOARD ROUTINE 
                           B   241    ;----------------------------------------------
                           B   242    
                           B   243    ; ZF set and A = 0 if all OK, else error code i
                           B   244    
004A4F                     B   245    init_keyboard
                           B   246    
004A4F 11004000            B   247    			ld de,16384							004A53 CD AA 49 00         B   248    			call hwsc_time_delay
004A57 F3                  B   249    			di
004A58 CD 0D 4B 00         B   250    			call purge_keyboard
004A5C CD 66 4A 00         B   251    			call rs_keyboard
004A60 FB                  B   252    			ei
004A61 D0                  B   253    			ret nc
004A62 3E8B                B   254    			ld a,08bh							004A64 B7                  B   255    			or a
004A65 C9                  B   256    			ret
                           B   257    			
                           B   258    			
004A66                     B   259    rs_keyboard
                           B   260    
004A66 3EFF                B   261    			ld a,0ffh
004A68 CD 85 4A 00         B   262    			call write_to_keyboard
004A6C 30 04               B   263    			jr nc,kb_connected
004A6E 3E8A                B   264    			ld a,08ah							004A70 B7                  B   265    			or a
004A71 C9                  B   266    			ret
                           B   267    
004A72                     B   268    kb_connected
                           B   269    			
004A72 0605                B   270    			ld b,5
004A74 C5                  B   271    kb_initlp	push bc
004A75 CD F1 4A 00         B   272    			call wait_kb_byte					004A79 C1                  B   273    			pop bc
004A7A D8                  B   274    			ret c
004A7B FEAA                B   275    			cp 0aah
004A7D 28 04               B   276    			jr z,kb_postok
004A7F 10 F3               B   277    			djnz kb_initlp						004A81 37                  B   278    			scf									004A82 C9                  B   279    			ret
                           B   280    			
                           B   281    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 192


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
004A83 AF                  B   282    kb_postok	xor a
004A84 C9                  B   283    			ret
                           B   284    	
                           B   285    	
                           B   286    ;----------------------------------------------
                           B   287    				
004A85                     B   288    write_to_keyboard
                           B   289    
                           B   290    ; Put byte to send to keyboard in A
                           B   291    
004A85 4F                  B   292    			ld c,a								004A86 3E01                B   293    			ld a,01b							004A88 ED3907              B   294    			out0 (port_ps2_ctrl),a
                           B   295    
004A8B 110A0000            B   296    			ld de,10
004A8F CD AA 49 00         B   297    			call hwsc_time_delay				                           B   298    
004A93 3E03                B   299    			ld a,11b
004A95 ED3907              B   300    			out0 (port_ps2_ctrl),a				                           B   301    			
004A98 3E02                B   302    			ld a,10b
004A9A ED3907              B   303    			out0 (port_ps2_ctrl),a				                           B   304    			
004A9D CD 6D 4C 00         B   305    			call wait_kb_clk_high
                           B   306    			
004AA1 1601                B   307    			ld d,1								004AA3 0608                B   308    			ld b,8								004AA5 CD 40 4C 00         B   309    kdoloop		call wait_kb_clk_low	
004AA9 D8                  B   310    			ret c
004AAA AF                  B   311    			xor a
004AAB CBCF                B   312    			set 1,a
004AAD CB41                B   313    			bit 0,c
004AAF 28 03               B   314    			jr z,kdbzero
004AB1 CB8F                B   315    			res 1,a
004AB3 14                  B   316    			inc d
004AB4 ED3907              B   317    kdbzero		out0 (port_ps2_ctrl),a				004AB7 CD 6D 4C 00         B   318    			call wait_kb_clk_high
004ABB D8                  B   319    			ret c
004ABC CB19                B   320    			rr c
004ABE 10 E5               B   321    			djnz kdoloop
                           B   322    
004AC0 CD 40 4C 00         B   323    			call wait_kb_clk_low
004AC4 D8                  B   324    			ret c
004AC5 AF                  B   325    			xor a
004AC6 CB42                B   326    			bit 0,d
004AC8 20 02               B   327    			jr nz,kparone
004ACA CBCF                B   328    			set 1,a
004ACC ED3907              B   329    kparone		out0 (port_ps2_ctrl),a				004ACF CD 6D 4C 00         B   330    			call wait_kb_clk_high
004AD3 D8                  B   331    			ret c
                           B   332    			
004AD4 CD 40 4C 00         B   333    			call wait_kb_clk_low
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 193


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
004AD8 D8                  B   334    			ret c
004AD9 AF                  B   335    			xor a
004ADA ED3907              B   336    			out0 (port_ps2_ctrl),a				                           B   337    
004ADD CD 3C 4C 00         B   338    			call wait_kb_data_low				004AE1 D8                  B   339    			ret c
004AE2 CD 40 4C 00         B   340    			call wait_kb_clk_low				004AE6 D8                  B   341    			ret c
                           B   342    				
004AE7 CD 69 4C 00         B   343    			call wait_kb_data_high				004AEB D8                  B   344    			ret c
004AEC CD 6D 4C 00         B   345    			call wait_kb_clk_high				004AF0 C9                  B   346    			ret 
                           B   347    
                           B   348    
                           B   349    ;----------------------------------------------
                           B   350    
                           B   351    
004AF1                     B   352    wait_kb_byte
                           B   353    
004AF1 11008000            B   354    			ld de,8000h
004AF5 CD B6 49 00         B   355    			call hwsc_set_timeout				                           B   356    
004AF9 ED3807              B   357    wait_kloop	in0 a,(port_ps2_ctrl)
004AFC CB67                B   358    			bit 4,a
004AFE 20 08               B   359    			jr nz,rec_kbyte
                           B   360    			
004B00 CD C7 49 00         B   361    			call hwsc_test_timeout
004B04 28 F3               B   362    			jr z,wait_kloop
004B06 37                  B   363    			scf									004B07 C9                  B   364    			ret
                           B   365    			
004B08 ED3802              B   366    rec_kbyte	in0 a,(port_keyboard_data)			004B0B B7                  B   367    			or a
004B0C C9                  B   368    			ret
                           B   369    
                           B   370    
                           B   371    ;----------------------------------------------
                           B   372    
004B0D                     B   373    purge_keyboard
                           B   374    			
004B0D ED3807              B   375    			in0 a,(port_ps2_ctrl)
004B10 CB67                B   376    			bit 4,a
004B12 C8                  B   377    			ret z
004B13 ED3802              B   378    			in0 a,(port_keyboard_data)			004B16 18 F5               B   379    			jr purge_keyboard
                           B   380    
                           B   381    
                           B   382    
                           B   383    ;----------------------------------------------
                           B   384    ; INIT MOUSE ROUTINE 
                           B   385    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 194


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B   386    
                           B   387    ; ZF set and A = 0 if all OK, else error code i
                           B   388    
004B18                     B   389    init_mouse		
004B18 F3                  B   390    			di
004B19 CD 31 4C 00         B   391    			call purge_mouse
004B1D CD 27 4B 00         B   392    			call rs_mouse
004B21 FB                  B   393    			ei
004B22 D0                  B   394    			ret nc
004B23 3E8B                B   395    			ld a,08bh							004B25 B7                  B   396    			or a
004B26 C9                  B   397    			ret
                           B   398    
                           B   399    
004B27                     B   400    rs_mouse
004B27 3EFF                B   401    			ld a,0ffh							004B29 CD A9 4B 00         B   402    			call write_to_mouse		
004B2D 30 04               B   403    			jr nc,mouse_connected
004B2F 3E8A                B   404    			ld a,08ah							004B31 B7                  B   405    			or a
004B32 C9                  B   406    			ret
                           B   407    
                           B   408    
004B33                     B   409    mouse_connected
                           B   410    
004B33 0605                B   411    			ld b,5
004B35 C5                  B   412    ms_initlp	push bc
004B36 CD 15 4C 00         B   413    			call wait_mouse_byte				004B3A C1                  B   414    			pop bc
004B3B D8                  B   415    			ret c
004B3C FEAA                B   416    			cp 0aah
004B3E 28 04               B   417    			jr z,ms_postok
004B40 10 F3               B   418    			djnz ms_initlp
004B42 18 43               B   419    			jr bad_mouse
                           B   420    			
004B44 CD 15 4C 00         B   421    ms_postok	call wait_mouse_byte				004B48 D8                  B   422    			ret c
004B49 B7                  B   423    			or a
004B4A 20 3B               B   424    			jr nz,bad_mouse						                           B   425    			
004B4C 3E03                B   426    			ld a,3
004B4E 32 61 6D 00         B   427    			ld (mouse_packet_size),a
                           B   428    
004B52 21 2B 6A 00         B   429    			ld hl,intellimouse_seq
004B56 0606                B   430    			ld b,6
004B58 CD 8B 4B 00         B   431    			call mouse_sequence
004B5C D8                  B   432    			ret c
                           B   433    			
004B5D 3EF2                B   434    			ld a,0f2h
004B5F CD 9A 4B 00         B   435    			call write_mouse_wait_ack			004B63 D8                  B   436    			ret c
004B64 CD 15 4C 00         B   437    			call wait_mouse_byte				Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 195


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
004B68 D8                  B   438    			ret c
004B69 32 60 6D 00         B   439    			ld (mouse_id),a
004B6D B7                  B   440    			or a								004B6E 28 0A               B   441    			jr z,standard_mouse
004B70 FE03                B   442    			cp 3
004B72 20 13               B   443    			jr nz,bad_mouse						004B74 3E04                B   444    			ld a,4
004B76 32 61 6D 00         B   445    			ld (mouse_packet_size),a
                           B   446    
004B7A                     B   447    standard_mouse
                           B   448    		
004B7A 21 31 6A 00         B   449    			ld hl,mouse_settings_seq
004B7E 0606                B   450    			ld b,6
004B80 CD 8B 4B 00         B   451    			call mouse_sequence
004B84 D8                  B   452    			ret c
004B85 AF                  B   453    			xor a								004B86 C9                  B   454    			ret
                           B   455    
                           B   456    
004B87 3E89                B   457    bad_mouse	ld a,089h							004B89 B7                  B   458    			or a
004B8A C9                  B   459    			ret
                           B   460    
                           B   461    
004B8B                     B   462    mouse_sequence
                           B   463    
004B8B 7E                  B   464    mseqlp		ld a,(hl)
004B8C E5                  B   465    			push hl
004B8D C5                  B   466    			push bc
004B8E CD 9A 4B 00         B   467    			call write_mouse_wait_ack
004B92 C1                  B   468    			pop bc
004B93 E1                  B   469    			pop hl
004B94 D8                  B   470    			ret c
004B95 23                  B   471    			inc hl
004B96 10 F3               B   472    			djnz mseqlp
004B98 AF                  B   473    			xor a
004B99 C9                  B   474    			ret
                           B   475    
                           B   476    
004B9A                     B   477    write_mouse_wait_ack
                           B   478    			
004B9A CD A9 4B 00         B   479    			call write_to_mouse
004B9E D8                  B   480    			ret c
004B9F CD 15 4C 00         B   481    			call wait_mouse_byte				004BA3 D8                  B   482    			ret c
004BA4 FEFA                B   483    			cp 0fah								004BA6 C8                  B   484    			ret z
004BA7 37                  B   485    			scf
004BA8 C9                  B   486    			ret
                           B   487    			
                           B   488    ;----------------------------------------------
                           B   489    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 196


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
004BA9                     B   490    write_to_mouse
                           B   491    
                           B   492    ; Put byte to send to mouse in A
                           B   493    
004BA9 4F                  B   494    			ld c,a								004BAA 3E04                B   495    			ld a,0100b							004BAC ED3907              B   496    			out0 (port_ps2_ctrl),a
                           B   497    
004BAF 110A0000            B   498    			ld de,10
004BB3 CD AA 49 00         B   499    			call hwsc_time_delay				                           B   500    
004BB7 3E0C                B   501    			ld a,1100b
004BB9 ED3907              B   502    			out0 (port_ps2_ctrl),a				                           B   503    			
004BBC 3E08                B   504    			ld a,1000b
004BBE ED3907              B   505    			out0 (port_ps2_ctrl),a				                           B   506    			
004BC1 CD 75 4C 00         B   507    			call wait_mouse_clk_high
                           B   508    			
004BC5 1601                B   509    			ld d,1								004BC7 0608                B   510    			ld b,8								004BC9 CD 48 4C 00         B   511    mdoloop		call wait_mouse_clk_low	
004BCD D8                  B   512    			ret c
004BCE AF                  B   513    			xor a
004BCF CBDF                B   514    			set 3,a
004BD1 CB41                B   515    			bit 0,c
004BD3 28 03               B   516    			jr z,mdbzero
004BD5 CB9F                B   517    			res 3,a
004BD7 14                  B   518    			inc d
004BD8 ED3907              B   519    mdbzero		out0 (port_ps2_ctrl),a				004BDB CD 75 4C 00         B   520    			call wait_mouse_clk_high
004BDF D8                  B   521    			ret c
004BE0 CB19                B   522    			rr c
004BE2 10 E5               B   523    			djnz mdoloop
                           B   524    
004BE4 CD 48 4C 00         B   525    			call wait_mouse_clk_low
004BE8 D8                  B   526    			ret c
004BE9 AF                  B   527    			xor a
004BEA CB42                B   528    			bit 0,d
004BEC 20 02               B   529    			jr nz,parone
004BEE CBDF                B   530    			set 3,a
004BF0 ED3907              B   531    parone		out0 (port_ps2_ctrl),a				004BF3 CD 75 4C 00         B   532    			call wait_mouse_clk_high
004BF7 D8                  B   533    			ret c
                           B   534    			
004BF8 CD 48 4C 00         B   535    			call wait_mouse_clk_low
004BFC D8                  B   536    			ret c
004BFD AF                  B   537    			xor a
004BFE ED3907              B   538    			out0 (port_ps2_ctrl),a				                           B   539    
004C01 CD 44 4C 00         B   540    			call wait_mouse_data_low			004C05 D8                  B   541    			ret c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 197


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
004C06 CD 48 4C 00         B   542    			call wait_mouse_clk_low				004C0A D8                  B   543    			ret c
                           B   544    				
004C0B CD 71 4C 00         B   545    			call wait_mouse_data_high			004C0F D8                  B   546    			ret c
004C10 CD 75 4C 00         B   547    			call wait_mouse_clk_high			004C14 C9                  B   548    			ret 
                           B   549    
                           B   550    ;----------------------------------------------
                           B   551    
                           B   552    
004C15                     B   553    wait_mouse_byte
                           B   554    
004C15 11008000            B   555    			ld de,8000h
004C19 CD B6 49 00         B   556    			call hwsc_set_timeout				                           B   557    
004C1D ED3807              B   558    wait_mloop	in0 a,(port_ps2_ctrl)
004C20 CB6F                B   559    			bit 5,a
004C22 20 08               B   560    			jr nz,rec_mbyte
                           B   561    			
004C24 CD C7 49 00         B   562    			call hwsc_test_timeout
004C28 28 F3               B   563    			jr z,wait_mloop
004C2A 37                  B   564    			scf									004C2B C9                  B   565    			ret
                           B   566    			
004C2C ED3806              B   567    rec_mbyte	in0 a,(port_mouse_data)				004C2F B7                  B   568    			or a
004C30 C9                  B   569    			ret
                           B   570    
                           B   571    ;----------------------------------------------
                           B   572    
004C31                     B   573    purge_mouse
                           B   574    			
004C31 ED3807              B   575    			in0 a,(port_ps2_ctrl)
004C34 CB6F                B   576    			bit 5,a
004C36 C8                  B   577    			ret z
004C37 ED3806              B   578    			in0 a,(port_mouse_data)			; r
004C3A 18 F5               B   579    			jr purge_mouse
                           B   580    
                           B   581    
                           B   582    ;----------------------------------------------
                           B   583    
                           B   584    
004C3C                     B   585    wait_kb_data_low
                           B   586    
004C3C 3E02                B   587    			ld a,2
004C3E 18 0A               B   588    			jr test_lo_ps2
                           B   589    			
004C40                     B   590    wait_kb_clk_low
                           B   591    
004C40 3E01                B   592    			ld a,1
004C42 18 06               B   593    			jr test_lo_ps2			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 198


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B   594    
004C44                     B   595    wait_mouse_data_low
                           B   596    
004C44 3E08                B   597    			ld a,8
004C46 18 02               B   598    			jr test_lo_ps2
                           B   599    
004C48                     B   600    wait_mouse_clk_low
                           B   601    
004C48 3E04                B   602    			ld a,4
                           B   603    
004C4A C5                  B   604    test_lo_ps2	push bc
004C4B D5                  B   605    			push de
004C4C 4F                  B   606    			ld c,a
004C4D 11004000            B   607    			ld de,04000h					; a
004C51 CD B6 49 00         B   608    			call hwsc_set_timeout
                           B   609    
004C55 CD C7 49 00         B   610    nkb_lw		call hwsc_test_timeout			; t
004C59 28 04               B   611    			jr z,nkb_lnto
004C5B D1                  B   612    			pop de
004C5C C1                  B   613    			pop bc
004C5D 37                  B   614    			scf								; c
004C5E C9                  B   615    			ret
004C5F ED3807              B   616    nkb_lnto	in0 a,(port_ps2_ctrl)
004C62 A1                  B   617    			and c
004C63 20 F0               B   618    			jr nz,nkb_lw
                           B   619    					
004C65 D1                  B   620    			pop de
004C66 C1                  B   621    			pop bc
004C67 AF                  B   622    			xor a
004C68 C9                  B   623    			ret					
                           B   624    
                           B   625    
                           B   626    
                           B   627    
004C69                     B   628    wait_kb_data_high
                           B   629    
004C69 3E02                B   630    			ld a,2
004C6B 18 0A               B   631    			jr test_hi_ps2
                           B   632    			
004C6D                     B   633    wait_kb_clk_high
                           B   634    
004C6D 3E01                B   635    			ld a,1
004C6F 18 06               B   636    			jr test_hi_ps2
                           B   637    
                           B   638    
004C71                     B   639    wait_mouse_data_high
                           B   640    			
004C71 3E08                B   641    			ld a,8
004C73 18 02               B   642    			jr test_hi_ps2
                           B   643    			 
004C75                     B   644    wait_mouse_clk_high
                           B   645    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 199


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
004C75 3E04                B   646    			ld a,4
                           B   647    
004C77 C5                  B   648    test_hi_ps2	push bc
004C78 D5                  B   649    			push de
004C79 4F                  B   650    			ld c,a
004C7A 11004000            B   651    			ld de,04000h					; a
004C7E CD B6 49 00         B   652    			call hwsc_set_timeout
                           B   653    
004C82 CD C7 49 00         B   654    nkb_hw		call hwsc_test_timeout			; t
004C86 28 04               B   655    			jr z,nkb_hnto
004C88 D1                  B   656    			pop de
004C89 C1                  B   657    			pop bc
004C8A 37                  B   658    			scf								; c
004C8B C9                  B   659    			ret
004C8C ED3807              B   660    nkb_hnto	in0 a,(port_ps2_ctrl)
004C8F A1                  B   661    			and c
004C90 28 F0               B   662    			jr z,nkb_hw
                           B   663    					
004C92 D1                  B   664    			pop de
004C93 C1                  B   665    			pop bc
004C94 AF                  B   666    			xor a							; c
004C95 C9                  B   667    			ret
                           B   668    
                           B   669    
                           B   670    ;==============================================
                           B   671    
004C96                     B   672    hwsc_play_audio
                           B   673    
                           B   674    ; set HL register to location of an audio data 
                           B   675    
                           B   676    ; 0 - start 
                           B   677    ; 3 - length
                           B   678    ; 6 - loop start
                           B   679    ; 9 - loop length
                           B   680    ; c - frequency constant
                           B   681    ; e - volume
                           B   682    
                           B   683    ; set C register to set channels wave is to pla
                           B   684    
004C96 3E81                B   685    				ld a,81h
004C98 ED390A              B   686    				out0 (port_hw_enable),a			                           B   687    				
004C9B E5                  B   688    				push hl
004C9C E5                  B   689    				push hl
004C9D FDE1                B   690    				pop iy
                           B   691    
004C9F 79                  B   692    				ld a,c
004CA0 69                  B   693    				ld l,c
004CA1 328014FF            B   694    				ld (hw_audio_registers+80h),a	                           B   695    				
004CA5 DD210014 FF         B   696    				ld ix,hw_audio_registers
004CAA 0608                B   697    				ld b,8
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 200


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
004CAC CB39                B   698    audchanloop		srl c
004CAE 30 21               B   699    				jr nc,not_this_chan
                           B   700    				
004CB0 FD1700              B   701    				ld de,(iy)
004CB3 DD1F00              B   702    				ld (ix),de						                           B   703    
004CB6 FD1703              B   704    				ld de,(iy+3)
004CB9 DD1F04              B   705    				ld (ix+04h),de					                           B   706    				
004CBC FD170C              B   707    				ld de,(iy+0ch)
004CBF DD1F08              B   708    				ld (ix+08h),de					                           B   709    				
004CC2 FD7E0E              B   710    				ld a,(iy+0eh)
004CC5 DD770C              B   711    				ld (ix+0ch),a					                           B   712    				
004CC8 AF                  B   713    				xor a
004CC9 DD770E              B   714    				ld (ix+0eh),a
                           B   715    				
004CCC 3E03                B   716    				ld a,011b
004CCE DD770F              B   717    				ld (ix+0fh),a					                           B   718    				
004CD1 ED3210              B   719    not_this_chan	lea ix,ix+10h			
004CD4 10 D6               B   720    				djnz audchanloop
                           B   721    						
004CD6 AF                  B   722    				xor a
004CD7 328014FF            B   723    				ld (hw_audio_registers+80h),a	                           B   724    				
004CDB 11050000            B   725    				ld de,5
004CDF CD AA 49 00         B   726    				call hwsc_time_delay
                           B   727    				
004CE3 7D                  B   728    				ld a,l
004CE4 328014FF            B   729    				ld (hw_audio_registers+80h),a	                           B   730    				
004CE8 DD210014 FF         B   731    				ld ix,hw_audio_registers
004CED 0608                B   732    				ld b,8
004CEF CB3D                B   733    audchanloop2	srl l
004CF1 30 15               B   734    				jr nc,not_this_chan2
                           B   735    						
004CF3 FD1706              B   736    				ld de,(iy+6)
004CF6 DD1F00              B   737    				ld (ix+0h),de					                           B   738    				
004CF9 FD1709              B   739    				ld de,(iy+9)
004CFC DD1F04              B   740    				ld (ix+4h),de					                           B   741    								
004CFF AF                  B   742    				xor a
004D00 DD770E              B   743    				ld (ix+0eh),a
                           B   744    				
004D03 3E00                B   745    				ld a,000b
004D05 DD770F              B   746    				ld (ix+0fh),a					                           B   747    				
004D08 ED3210              B   748    not_this_chan2	lea ix,ix+10h			
004D0B 10 E2               B   749    				djnz audchanloop2
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 201


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B   750    						
004D0D AF                  B   751    				xor a
004D0E 328014FF            B   752    				ld (hw_audio_registers+80h),a
                           B   753    				
004D12 E1                  B   754    				pop hl
004D13 C9                  B   755    				ret
                           B   756    
                           B   757    
                           B   758    ;----------------------------------------------
                           B   759    
004D14                     B   760    audio_reg_wait	
                           B   761    
004D14 3E01                B   762    				ld a,1
004D16 320314FF            B   763    				ld (hw_audio_registers+3),a		                           B   764    				
004D1A ED3801              B   765    wait_audreg		in0 a,(port_hw_flags)			004D1D E640                B   766    				and 040h
004D1F 28 F9               B   767    				jr z,wait_audreg				004D21 AF                  B   768    				xor a
004D22 C9                  B   769    				ret
004D23 C9                  B   770    				ret
                           B   771    
                           B   772    
                           B   773    ;----------------------------------------------
                           B   774    				
004D24                     B   775    hwsc_disable_audio
                           B   776    
004D24 3E01                B   777    				ld a,01h
004D26 ED390A              B   778    				out0 (port_hw_enable),a			004D29 AF                  B   779    				xor a
004D2A C9                  B   780    				ret
                           B   781    				
                           B   782    ;----------------------------------------------
                           B   783    
004D2B                     B   784    hwsc_get_joysticks
                           B   785    
004D2B ED389E              B   786    				in0 a,(PC_DR)				
004D2E 2F                  B   787    				cpl
004D2F 47                  B   788    				ld b,a
004D30 E60F                B   789    				and 0fh
004D32 5F                  B   790    				ld e,a
004D33 78                  B   791    				ld a,b
004D34 0F                  B   792    				rrca
004D35 0F                  B   793    				rrca
004D36 0F                  B   794    				rrca
004D37 0F                  B   795    				rrca
004D38 E60F                B   796    				and 0fh
004D3A 57                  B   797    				ld d,a
                           B   798    				
004D3B ED38A2              B   799    				in0 a,(PD_DR)	
004D3E CB67                B   800    				bit 4,a						; f
004D40 20 02               B   801    				jr nz,noj1b1
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 202


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
004D42 CBEA                B   802    				set 5,d
                           B   803    
004D44 CB6F                B   804    noj1b1			bit 5,a						; f
004D46 20 02               B   805    				jr nz,noj1b0
004D48 CBE2                B   806    				set 4,d
                           B   807    				
004D4A CB77                B   808    noj1b0			bit 6,a						; f
004D4C 20 02               B   809    				jr nz,noj0b1
004D4E CBEB                B   810    				set 5,e
                           B   811    
004D50 CB7F                B   812    noj0b1			bit 7,a						; f
004D52 20 02               B   813    				jr nz,noj0b0
004D54 CBE3                B   814    				set 4,e
                           B   815    
004D56 AF                  B   816    noj0b0			xor a
004D57 C9                  B   817    				ret
                           B   818    				
                           B   819    				
                           B   820    ;----------------------------------------------
                           B   821    			
                           B   822    				
                           B   823    				
                           A  3801    
                           B     0    	include		'prose_keyboard_routines.asm'	                           B     1    ;----------------------------------------------
                           B     2    ;PROSE KEYBOARD/MOUSE ROUTINES V0.04 (ADL mode)
                           B     3    ;----------------------------------------------
                           B     4    
004D58                     B     5    os_wait_key_press
                           B     6    
                           B     7    ; Busy waits for a keypress.
                           B     8    ; Handles the following modifier keys (key_mod_
                           B     9    ; Returns scancode in A and ASCII code in B (B=
                           B    10    ; (ASCII code is modifed by shift / alt key sta
                           B    11    
                           B    12    
004D58 D5                  B    13    				push de
004D59 51                  B    14    				ld d,c
004D5A E5                  B    15    				push hl
                           B    16    				
004D5B CD C5 4D 00         B    17    wait_kbuf		call get_kb_buffer_indexes		004D5F BE                  B    18    				cp (hl)							004D60 28 F9               B    19    				jr z,wait_kbuf		
                           B    20    			
004D62 01000000            B    21    new_key			ld bc,0							004D66 4F                  B    22    				ld c,a
004D67 21 39 6D 00         B    23    				ld hl,scancode_buffer	
004D6B 09                  B    24    				add hl,bc
004D6C 7E                  B    25    				ld a,(hl)						                           B    26    
004D6D 0E10                B    27    				ld c,16
004D6F 09                  B    28    				add hl,bc						Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 203


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_keyboard_routines.asm
004D70 4F                  B    29    				ld c,a							004D71 7E                  B    30    				ld a,(hl)						                           B    31    
004D72 1E00                B    32    				ld e,0							004D74 21 84 68 00         B    33    				ld hl,unshifted_keymap			                           B    34    
004D78 CB4F                B    35    				bit 1,a
004D7A 28 04               B    36    				jr z,not_ctrl					004D7C 1E60                B    37    				ld e,96							004D7E 18 16               B    38    				jr got_keymap					                           B    39    							
004D80 CB47                B    40    not_ctrl		bit 0,a
004D82 20 04               B    41    				jr nz,shifted
004D84 CB67                B    42    				bit 4,a
004D86 28 06               B    43    				jr z,not_shifted
004D88 21 E6 68 00         B    44    shifted			ld hl,shifted_keymap			004D8C 18 08               B    45    				jr got_keymap
                           B    46    				
004D8E CB5F                B    47    not_shifted		bit 3,a
004D90 28 04               B    48    				jr z,got_keymap	
004D92 21 48 69 00         B    49    				ld hl,alted_keymap				                           B    50    
004D96 79                  B    51    got_keymap		ld a,c							004D97 FE62                B    52    				cp 062h
004D99 30 07               B    53    				jr nc,gotkdone
004D9B 09                  B    54    				add hl,bc						004D9C 7E                  B    55    				ld a,(hl)						004D9D 93                  B    56    				sub a,e							004D9E 30 01               B    57    				jr nc,subkey_ok	
004DA0 AF                  B    58    				xor a							004DA1 47                  B    59    subkey_ok		ld b,a
                           B    60    				
004DA2 3A 5A 6D 00         B    61    gotkdone		ld a,(key_buf_rd_idx)			004DA6 3C                  B    62    				inc a							004DA7 E60F                B    63    				and 15
004DA9 32 5A 6D 00         B    64    				ld (key_buf_rd_idx),a			004DAD 79                  B    65    				ld a,c							004DAE E1                  B    66    				pop hl
004DAF 4A                  B    67    				ld c,d
004DB0 D1                  B    68    				pop de
004DB1 BF                  B    69    				cp a							004DB2 C9                  B    70    				ret
                           B    71    			
                           B    72    		
                           B    73    ;----------------------------------------------
                           B    74    			
004DB3                     B    75    os_get_key_press
                           B    76    				
                           B    77    ; Gets a keycode on-the-fly - If one is availab
                           B    78    ; On return, ZF is set if there is a new scanco
                           B    79    ; (ASCII code is modifed by shift key status), 
                           B    80    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 204


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_keyboard_routines.asm
                           B    81    			
004DB3 D5                  B    82    				push de
004DB4 51                  B    83    				ld d,c
004DB5 E5                  B    84    				push hl
004DB6 CD C5 4D 00         B    85    				call get_kb_buffer_indexes		004DBA BE                  B    86    				cp (hl)							004DBB 20 A5               B    87    				jr nz,new_key					004DBD 3E81                B    88    				ld a,81h			
004DBF 47                  B    89    				ld b,a
004DC0 B7                  B    90    				or a
004DC1 E1                  B    91    				pop hl
004DC2 4A                  B    92    				ld c,d
004DC3 D1                  B    93    				pop de
004DC4 C9                  B    94    				ret
                           B    95    			
                           B    96    ;----------------------------------------------
                           B    97    			
004DC5                     B    98    get_kb_buffer_indexes
                           B    99    			
                           B   100    			
004DC5 21 59 6D 00         B   101    				ld hl,key_buf_wr_idx			004DC9 3A 5A 6D 00         B   102    				ld a,(key_buf_rd_idx)			004DCD C9                  B   103    				ret
                           B   104    			
                           B   105    		
                           B   106    ;----------------------------------------------
                           B     0    	include		'prose_serial_routines.asm'
                           B     1    ;**********************************************
                           B     2    ; PROSE Serial File Transfer Routines V0.05 (AD
                           B     3    ;**********************************************
                           B     4    
                           B     5    ;----------------------------------------------
                           B     6    ; .---------------------.
                           B     7    ; ! Receive file header !
                           B     8    ; '---------------------'
                           B     9    ;
                           B    10    ; Before calling set:-
                           B    11    ;
                           B    12    ; HL = Filename ("*" if dont care)
                           B    13    ;  A = Time out in seconds
                           B    14    ;
                           B    15    ; If zero flag set, all OK. IX returns location
                           B    16    ;    Else A=$84 = memory address out of range, 
                           B    17    ;           $87 = Filename mismatch, $86 = chec
                           B    18    ;----------------------------------------------
                           B    19    	
                           B    20    
004DCE                     B    21    serial_get_header
                           B    22    
004DCE 32 08 6A 00         B    23    				ld (serial_timeout),a			004DD2 22 F2 69 00         B    24    				ld (serial_fn_addr),hl
004DD6 CD 67 46 00         B    25    				call hwsc_flush_serial_buffer	Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 205


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
                           B    26    
004DDA CD BD 4E 00         B    27    				call s_getblock					004DDE 28 0C               B    28    				jr z,s_gbfhok					004DE0 F5                  B    29    				push af							004DE1 3A 29 6A 00         B    30    				ld a,(serial_transfer_started)
004DE5 B7                  B    31    				or a							004DE6 C4 24 4F 00         B    32    				call nz,s_badack				004DEA F1                  B    33    				pop af
004DEB C9                  B    34    				ret
                           B    35    	
004DEC 21 1D 6A 00         B    36    s_gbfhok		ld hl,serial_header_id			004DF0 11140700            B    37    				ld de,serial_buffer+20			004DF4 060C                B    38    				ld b,12
004DF6 CD 36 13 00         B    39    				call os_compare_strings
004DFA 20 0F               B    40    				jr nz,s_nfhdr
004DFC 06E0                B    41    				ld b,256-32						004DFE 21200700            B    42    				ld hl,serial_buffer+32
004E02 7E                  B    43    s_chdr			ld a,(hl)
004E03 23                  B    44    				inc hl
004E04 B7                  B    45    				or a
004E05 20 04               B    46    				jr nz,s_nfhdr
004E07 10 F9               B    47    				djnz s_chdr
004E09 18 08               B    48    				jr s_fhcsok
                           B    49    				
004E0B CD 24 4F 00         B    50    s_nfhdr			call s_badack					004E0F 3E85                B    51    				ld a,085h						004E11 B7                  B    52    				or a
004E12 C9                  B    53    				ret
                           B    54    		
004E13 21100700            B    55    s_fhcsok		ld hl,serial_buffer+16			004E17 11 19 6A 00         B    56    				ld de,serial_fileheader+16
004E1B 01040000            B    57    				ld bc,4
004E1F EDB0                B    58    				ldir
                           B    59    				
004E21 21000700            B    60    				ld hl,serial_buffer
004E25 11 09 6A 00         B    61    				ld de,serial_fileheader			004E29 0610                B    62    				ld b,16							004E2B 7E                  B    63    s_tuclp			ld a,(hl)						004E2C B7                  B    64    				or a
004E2D 28 0B               B    65    				jr z,s_ffhswz	
004E2F CD 70 13 00         B    66    				call os_uppercasify
004E33 12                  B    67    				ld (de),a
004E34 23                  B    68    				inc hl
004E35 13                  B    69    				inc de
004E36 10 F3               B    70    				djnz s_tuclp
004E38 18 04               B    71    				jr s_tucdone
004E3A 12                  B    72    s_ffhswz		ld (de),a
004E3B 13                  B    73    				inc de
004E3C 10 FC               B    74    				djnz s_ffhswz		
                           B    75    	
004E3E 2A F2 69 00         B    76    s_tucdone		ld hl,(serial_fn_addr)			004E42 7E                  B    77    				ld a,(hl)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 206


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
004E43 FE2A                B    78    				cp '*'
004E45 28 14               B    79    				jr z,s_rffns					004E47 11 09 6A 00         B    80    				ld de,serial_fileheader
004E4B 0610                B    81    				ld b,16
004E4D CD 36 13 00         B    82    				call os_compare_strings
004E51 28 08               B    83    				jr z,s_rffns
004E53 CD 24 4F 00         B    84    s_rfnbad		call s_badack
004E57 3E87                B    85    				ld a,087h						004E59 B7                  B    86    				or a
004E5A C9                  B    87    				ret
                           B    88    				
004E5B DD21 09 6A 00       B    89    s_rffns			ld ix,serial_fileheader			004E60 AF                  B    90    				xor a
004E61 C9                  B    91    				ret
                           B    92    
004E62 F5                  B    93    s_fail			push af				
004E63 CD 24 4F 00         B    94    				call s_badack		 
004E67 F1                  B    95    				pop af
004E68 C9                  B    96    				ret
                           B    97    	
                           B    98    ;----------------------------------------------
                           B    99    ; .-------------------.
                           B   100    ; ! Receive file data !
                           B   101    ; '-------------------'
                           B   102    ;
                           B   103    ; Serial_get_header must be called first!
                           B   104    ;
                           B   105    ; Set:
                           B   106    ;
                           B   107    ; xHL = Address to load to [23:0]
                           B   108    ;
                           B   109    ; On return, if Zero flag is set, all OK (IX = 
                           B   110    ; Else A =  $84 = memory address out of range
                           B   111    ;           $85 = comms error
                           B   112    ;----------------------------------------------
                           B   113    
004E69                     B   114    serial_receive_file
                           B   115    
004E69 3E0A                B   116    				ld a,10							004E6B 32 08 6A 00         B   117    				ld (serial_timeout),a
004E6F E5                  B   118    				push hl
004E70 CD 13 4F 00         B   119    				call s_goodack					004E74 DDE1                B   120    				pop ix							004E76 ED5B 19 6A 00       B   121    				ld de,(serial_fileheader+16)	                           B   122    
004E7B CD BD 4E 00         B   123    s_gbloop		call s_getblock
004E7F 20 E1               B   124    				jr nz,s_fail
004E81 0E00                B   125    				ld c,0							004E83 FD210007 00         B   126    				ld iy,serial_buffer
004E88 FD7E00              B   127    s_rfloop		ld a,(iy)
004E8B DD7700              B   128    				ld (ix),a						004E8E 1B                  B   129    				dec de							Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 207


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
004E8F 21000000            B   130    				ld hl,0
004E93 AF                  B   131    				xor a
004E94 ED5A                B   132    				adc hl,de						004E96 28 1A               B   133    				jr z,s_rfabr					004E98 C5                  B   134    				push bc
004E99 01010000            B   135    				ld bc,1
004E9D DD09                B   136    				add ix,bc						004E9F C1                  B   137    				pop bc
004EA0 30 05               B   138    				jr nc,s_nbt
004EA2 3E84                B   139    				ld a,84h						004EA4 B7                  B   140    				or a
004EA5 18 BB               B   141    				jr s_fail
004EA7 FD23                B   142    s_nbt			inc iy
004EA9 0D                  B   143    				dec c
004EAA 20 DC               B   144    				jr nz,s_rfloop
004EAC CD 13 4F 00         B   145    				call s_goodack					004EB0 18 C9               B   146    				jr s_gbloop
                           B   147    			
004EB2 CD 13 4F 00         B   148    s_rfabr			call s_goodack					004EB6 DD21 09 6A 00       B   149    				ld ix,serial_fileheader			004EBB AF                  B   150    				xor a							004EBC C9                  B   151    				ret
                           B   152    			
                           B   153    ;----------------------------------------------
                           B   154    
004EBD                     B   155    s_getblock
                           B   156    
                           B   157    ; carry set on return if timed out
                           B   158    
004EBD AF                  B   159    				xor a
004EBE 32 29 6A 00         B   160    				ld (serial_transfer_started),a	004EC2 E5                  B   161    				push hl							004EC3 D5                  B   162    				push de
004EC4 C5                  B   163    				push bc
004EC5 21000700            B   164    				ld hl,serial_buffer				004EC9 0600                B   165    				ld b,0
004ECB D9                  B   166    				exx
004ECC 21FFFF00            B   167    				ld hl,0ffffh					004ED0 D9                  B   168    				exx
004ED1 CD 11 46 00         B   169    s_lgb			call receive_serial_byte
004ED5 20 38               B   170    				jr nz,s_gberr					004ED7 F5                  B   171    				push af
004ED8 3E01                B   172    				ld a,1
004EDA 32 29 6A 00         B   173    				ld (serial_transfer_started),a
004EDE F1                  B   174    				pop af
004EDF 77                  B   175    				ld (hl),a
004EE0 D9                  B   176    				exx
004EE1 AC                  B   177    				xor h							004EE2 67                  B   178    				ld h,a			
004EE3 0608                B   179    				ld b,8
004EE5 4029                B   180    rxcrcbyte		add.sis hl,hl					004EE7 30 08               B   181    				jr nc,rxcrcnext
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 208


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
004EE9 7C                  B   182    				ld a,h
004EEA EE10                B   183    				xor 10h
004EEC 67                  B   184    				ld h,a
004EED 7D                  B   185    				ld a,l
004EEE EE21                B   186    				xor 21h
004EF0 6F                  B   187    				ld l,a
004EF1 10 F2               B   188    rxcrcnext		djnz rxcrcbyte
004EF3 D9                  B   189    				exx
004EF4 23                  B   190    				inc hl
004EF5 10 DA               B   191    				djnz s_lgb
004EF7 D9                  B   192    				exx								                           B   193    			
004EF8 CD 11 46 00         B   194    				call receive_serial_byte		004EFC 20 11               B   195    				jr nz,s_gberr
004EFE 4F                  B   196    				ld c,a
004EFF CD 11 46 00         B   197    				call receive_serial_byte
004F03 20 0A               B   198    				jr nz,s_gberr		
004F05 47                  B   199    				ld b,a
                           B   200    				
004F06 AF                  B   201    				xor a							004F07 52ED42              B   202    				sbc.s hl,bc						004F0A 28 03               B   203    				jr z,s_gberr
                           B   204    			
004F0C 3E86                B   205    				ld a,86h						004F0E B7                  B   206    				or a							004F0F C1                  B   207    s_gberr			pop bc
004F10 D1                  B   208    				pop de
004F11 E1                  B   209    				pop hl
004F12 C9                  B   210    				ret
                           B   211    				
                           B   212    ;----------------------------------------------
                           B   213    
004F13 C5                  B   214    s_goodack		push bc
004F14 014F4B00            B   215    				ld bc,04b4fh					004F18 79                  B   216    ackbytes		ld a,c
004F19 CD 4C 46 00         B   217    				call send_serial_byte
004F1D 78                  B   218    				ld a,b
004F1E CD 4C 46 00         B   219    				call send_serial_byte
004F22 C1                  B   220    				pop bc
004F23 C9                  B   221    				ret
                           B   222    
004F24 C5                  B   223    s_badack		push bc
004F25 01585800            B   224    				ld bc,05858h					004F29 18 ED               B   225    				jr ackbytes
                           B   226    
004F2B C5                  B   227    s_holdack		push bc
004F2C 01575700            B   228    				ld bc,05757h					004F30 18 E6               B   229    				jr ackbytes
                           B   230    				
                           B   231    ;==============================================
                           B   232    
                           B   233    ; .-----------.
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 209


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
                           B   234    ; ! Send file !
                           B   235    ; '-----------'
                           B   236    
                           B   237    ; Before calling set:-
                           B   238    
                           B   239    ;  xHL   = filename
                           B   240    ;  xDE   = length of file
                           B   241    ;  xIX   = Start address [23:0]
                           B   242    
                           B   243    ; On return, if zero flag is set, all OK. Else:
                           B   244    ; $81 = Save length is zero
                           B   245    ; $84 = memory address out of range
                           B   246    ; $85 = comms error
                           B   247    
                           B   248    
004F32                     B   249    serial_send_file
                           B   250    			
004F32 3E01                B   251    				ld a,1							004F34 32 08 6A 00         B   252    				ld (serial_timeout),a
                           B   253    			
004F38 DD22 EC 69 00       B   254    				ld (serial_ez80_address),ix
004F3D ED53 19 6A 00       B   255    				ld (serial_fileheader+10h),de	004F42 E5                  B   256    				push hl
004F43 21000000            B   257    				ld hl,0
004F47 AF                  B   258    				xor a
004F48 ED5A                B   259    				adc hl,de
004F4A 20 05               B   260    				jr nz,s_flok
004F4C E1                  B   261    				pop hl
004F4D 3E81                B   262    				ld a,081h						004F4F B7                  B   263    				or a							004F50 C9                  B   264    				ret
                           B   265    			
004F51 21 09 6A 00         B   266    s_flok			ld hl,serial_fileheader			004F55 01100000            B   267    				ld bc,16
004F59 AF                  B   268    				xor a
004F5A CD 7C 16 00         B   269    				call os_bchl_memfill
004F5E E1                  B   270    				pop hl							004F5F 11 09 6A 00         B   271    				ld de,serial_fileheader
004F63 0610                B   272    				ld b,16
004F65 CD 55 13 00         B   273    				call os_copy_ascii_run
                           B   274    				
004F69 21 1D 6A 00         B   275    				ld hl,serial_header_id			004F6D 11 1D 6A 00         B   276    				ld de,serial_fileheader+014h
004F71 010C0000            B   277    				ld bc,12		
004F75 EDB0                B   278    				ldir
                           B   279    			
004F77 DD21 09 6A 00       B   280    				ld ix,serial_fileheader			004F7C 11200000            B   281    				ld de,32
004F80 CD B6 4F 00         B   282    				call s_makeblock			
004F84 C0                  B   283    				ret nz
004F85 CD EE 4F 00         B   284    				call s_sendblock
004F89 C0                  B   285    				ret nz
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 210


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
004F8A CD 1B 50 00         B   286    				call s_waitack					004F8E C0                  B   287    				ret nz							                           B   288    				
004F8F DD2A EC 69 00       B   289    				ld ix,(serial_ez80_address)
004F94 ED5B 19 6A 00       B   290    				ld de,(serial_fileheader+16)	004F99 CD B6 4F 00         B   291    s_sbloop		call s_makeblock				004F9D 38 16               B   292    				jr c,s_rerr
004F9F CD EE 4F 00         B   293    				call s_sendblock				004FA3 38 10               B   294    				jr c,s_rerr	
004FA5 CD 1B 50 00         B   295    				call s_waitack					004FA9 38 0A               B   296    				jr c,s_rerr
004FAB 21000000            B   297    				ld hl,0
004FAF AF                  B   298    				xor a
004FB0 ED5A                B   299    				adc hl,de
004FB2 20 E5               B   300    				jr nz,s_sbloop					004FB4 AF                  B   301    				xor a							004FB5 C9                  B   302    s_rerr			ret
                           B   303    
                           B   304    ;----------------------------------------------
                           B   305    
004FB6                     B   306    s_makeblock
                           B   307    
                           B   308    ; set xIX = src addr
                           B   309    ; xDE = byte count
                           B   310    ; a=0 on return if all ok	
                           B   311    
004FB6 21000700            B   312    				ld hl,serial_buffer				004FBA 01000100            B   313    				ld bc,256						004FBE AF                  B   314    				xor a							004FBF CD 7C 16 00         B   315    				call os_bchl_memfill			                           B   316    				
004FC3 0600                B   317    				ld b,0							004FC5 FD210007 00         B   318    				ld iy,serial_buffer	
004FCA DD7E00              B   319    s_sloop			ld a,(ix)
004FCD FD7700              B   320    				ld (iy),a
004FD0 1B                  B   321    				dec de							004FD1 21000000            B   322    				ld hl,0
004FD5 AF                  B   323    				xor a
004FD6 ED5A                B   324    				adc hl,de
004FD8 28 12               B   325    				jr z,s_mbend	
004FDA FD23                B   326    				inc iy							004FDC C5                  B   327    				push bc
004FDD 01010000            B   328    				ld bc,1
004FE1 DD09                B   329    				add ix,bc						004FE3 C1                  B   330    				pop bc							004FE4 20 04               B   331    				jr nz,s_sbok
004FE6 3E84                B   332    				ld a,84h						004FE8 B7                  B   333    				or a
004FE9 C9                  B   334    				ret
004FEA 10 DE               B   335    s_sbok			djnz s_sloop
004FEC AF                  B   336    s_mbend			xor a
004FED C9                  B   337    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 211


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
                           B   338    
                           B   339    
                           B   340    
004FEE                     B   341    s_sendblock
                           B   342    
004FEE E5                  B   343    				push hl
004FEF D5                  B   344    				push de							004FF0 C5                  B   345    				push bc				
004FF1 21000700            B   346    				ld hl,serial_buffer			
004FF5 1E00                B   347    				ld e,0
004FF7 7E                  B   348    s_sblklp		ld a,(hl)
004FF8 CD 4C 46 00         B   349    				call send_serial_byte
004FFC 23                  B   350    				inc hl
004FFD 1D                  B   351    				dec e
004FFE 20 F7               B   352    				jr nz,s_sblklp
005000 11000700            B   353    				ld de,serial_buffer
005004 01000000            B   354    				ld bc,0
005008 CD 22 16 00         B   355    				call crc_checksum
00500C 7D                  B   356    				ld a,l
00500D CD 4C 46 00         B   357    				call send_serial_byte
005011 7C                  B   358    				ld a,h
005012 CD 4C 46 00         B   359    				call send_serial_byte
005016 AF                  B   360    				xor a
005017 C1                  B   361    s_popall		pop bc
005018 D1                  B   362    				pop de
005019 E1                  B   363    				pop hl
00501A C9                  B   364    				ret
                           B   365    	
                           B   366    
00501B                     B   367    s_waitack
00501B E5                  B   368    				push hl
00501C D5                  B   369    				push de
00501D C5                  B   370    				push bc
00501E CD 11 46 00         B   371    				call receive_serial_byte		005022 20 F3               B   372    				jr nz,s_popall
005024 47                  B   373    				ld b,a
005025 CD 11 46 00         B   374    				call receive_serial_byte
005029 20 EC               B   375    				jr nz,s_popall
00502B 4F                  B   376    				ld c,a
00502C 264F                B   377    				ld h,'O'
00502E 2E4B                B   378    				ld l,'K'
005030 AF                  B   379    				xor a
005031 52ED42              B   380    				sbc.s hl,bc						005034 28 E1               B   381    				jr z,s_popall					                           B   382    			
005036 3E85                B   383    				ld a,085h						005038 B7                  B   384    				or a
005039 18 DC               B   385    				jr s_popall
                           B   386    
                           B   387    	
                           B   388    ;----------------------------------------------
                           B     0    	include		'prose_fat16_code_v0A.asm'
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 212


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0A.asm
                           B     1    ;----------------------------------------------
                           B     2    ; eZ80 FAT16 File System code for PROSE by Phil
                           B     3    ;----------------------------------------------
                           B     4    ;
                           B     5    ; Changes:
                           B     6    ;
                           B     7    ; 0.0A - 
                           B     8    ; 0.09 - Format command now formats based solel
                           B     9    ;		 and "current driver"
                           B    10    ;        If the paritition is an MBR type, the 
                           B    11    ;      - "Get partition info" looks at each par
                           B    12    ;
                           B    13    ; 0.08 - Speeded up reading of files (pre-calc 
                           B    14    ;        All routines return with ZF not set if
                           B    15    ; 0.07 - Made compatible with v1.10 drivers (ZF
                           B    16    ; 0.06 - Fixed "fs_get_volume_label"
                           B    17    ; 0.05 - Fixed format command
                           B    18    ; 0.04 - File system error codes are now in the
                           B    19    ; 0.03 - ADL mode
                           B    20    ; 0.02 - removed references to banks, added 24 
                           B    21    ; 0.01 - first version based on FLOS routines v
                           B    22    ;
                           B    23    ; Known limitations:
                           B    24    ; ------------------
                           B    25    ; If a disk full error is returned during a fil
                           B    26    ; Allows a file to be created in root even if t
                           B    27    ;        
                           B    28    ;----------------------------------------------
                           B    29    ;
                           B    30    ; All routines return carry clear / zero flag s
                           B    31    ;
                           B    32    ; If carry set there was a driver error, A = Er
                           B    33    ; Check for "carry set" first!
                           B    34    ; If carry clear, check zero flag. If not set: 
                           B    35    ;
                           B    36    ;					$c1  - Disk full
                           B    37    ;					$c2  - file not found
                           B    38    ;             	    $c3  - (root) dir table is 
                           B    39    ;					$c4  - directory requested 
                           B    40    ;             	    $c5  - cant delete dir, it 
                           B    41    ;					$c6  - not a file
                           B    42    ;					$c7  - file length is zero
                           B    43    ;              	    $c8  - out of memory
                           B    44    ;					$c9  - filename already exi
                           B    45    ;					$ca  - already at root dire
                           B    46    ;                  	$cb  - directory not found
                           B    47    ;					$cc  - requested bytes beyo
                           B    48    ;					$cd  - invalid filename
                           B    49    ;					$ce  - unknown/incorrect di
                           B    50    ;					$cf  - invalid volume
                           B    51    ;                 	$d0  - device not present	                           B    52    ;					$d1  - directory not found	Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 213


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0A.asm
                           B    53    ;                 	$d2  - end of directory lis
                           B    54    ;                 	$d3  - device does not use 
                           B    55    ;                  	$d4  - cant find volume lab
                           B    56    ;                   $d5  - sector out of range
                           B    57    
                           B    58    ;----------------------------------------------
                           B    59    ; Main routines called by external programs
                           B    60    ;----------------------------------------------
                           B    61    
00503B                     B    62    fs_format_partition
                           B    63    
                           B    64    ; Formats a FAT16 partition based on:
                           B    65    
                           B    66    ; "partition_base" LBA (32bit, absolute: all fo
                           B    67    ; "partition_size" in sectors (24bit - will be 
                           B    68    ; Set HL to label location
                           B    69    
00503B 11 C3 5E 00         B    70    				ld de,fs_sought_filename		00503F CD 7D 5D 00         B    71    				call fs_clear_filename
005043 060B                B    72    				ld b,11
005045 CD 55 13 00         B    73    				call os_copy_ascii_run
                           B    74    
005049 CD 8F 5B 00         B    75    				call fs_clear_sector_buffer		00504D 11000000            B    76    				ld de,0							005051 CD A5 51 00         B    77    form_ws			call set_lba_and_write_sector
005055 D8                  B    78    				ret c
005056 13                  B    79    				inc de
005057 7A                  B    80    				ld a,d
005058 FE03                B    81    				cp 3
00505A 20 F5               B    82    				jr nz,form_ws
                           B    83    	
00505C 21 6D 5E 00         B    84    				ld hl,bootsector_stub			005060 11000800            B    85    				ld de,sector_buffer				005064 013F0000            B    86    				ld bc,03fh
005068 EDB0                B    87    				ldir
                           B    88    	
00506A 2A 29 5F 00         B    89    				ld hl,(partition_size)
00506E 1100003F            B    90    				ld de,3f0000h
005072 AF                  B    91    				xor a
005073 ED52                B    92    				sbc hl,de				
005075 38 05               B    93    				jr c,fs_fssok					005077 ED53 29 5F 00       B    94    fs_truncs		ld (partition_size),de
                           B    95    				
00507C 3A 2B 5F 00         B    96    fs_fssok		ld a,(partition_size+2)
005080 21800000            B    97    				ld hl,080h						005084 29                  B    98    fs_fcls			add hl,hl
005085 BC                  B    99    				cp h
005086 30 FC               B   100    				jr nc,fs_fcls
                           B   101    
005088 DD210008 00         B   102    				ld ix,sector_buffer
00508D DD740D              B   103    				ld (ix+0dh),h					                           B   104    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 214


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0A.asm
005090 ED5B 29 5F 00       B   105    				ld de,(partition_size)
005095 3A 2B 5F 00         B   106    				ld a,(partition_size+2)
005099 4F                  B   107    				ld c,a							00509A B7                  B   108    				or a							00509B 20 08               B   109    				jr nz,ts_dword					00509D DD7313              B   110    				ld (ix+13h),e					0050A0 DD7214              B   111    				ld (ix+14h),d
0050A3 18 07               B   112    				jr ts_done
0050A5 DD1F20              B   113    ts_dword		ld (ix+20h),de					0050A8 DD362300            B   114    				ld (ix+23h),0
                           B   115    
0050AC 7C                  B   116    ts_done			ld a,h							0050AD 21000000            B   117    				ld hl,0				
0050B1 CB3F                B   118    ffatslp1		srl a	
0050B3 28 0C               B   119    				jr z,fatsc1						0050B5 CB39                B   120    				srl c				
0050B7 CB1A                B   121    				rr d
0050B9 CB1B                B   122    				rr e
0050BB CB1C                B   123    				rr h
0050BD CB1D                B   124    				rr l
0050BF 18 F0               B   125    				jr ffatslp1
0050C1 0608                B   126    fatsc1			ld b,8
0050C3 CB39                B   127    ffatslp2		srl c							0050C5 CB1A                B   128    				rr d
0050C7 CB1B                B   129    				rr e
0050C9 CB1C                B   130    				rr h
0050CB CB1D                B   131    				rr l
0050CD 10 F4               B   132    				djnz ffatslp2
0050CF 7C                  B   133    				ld a,h
0050D0 B5                  B   134    				or l
0050D1 28 01               B   135    				jr z,gotfatsize					0050D3 13                  B   136    				inc de
                           B   137    	
0050D4 DD7316              B   138    gotfatsize		ld (ix+16h),e					0050D7 DD7217              B   139    				ld (ix+17h),d
0050DA 21000000            B   140    				ld hl,0
0050DE 6B                  B   141    				ld l,e
0050DF 62                  B   142    				ld h,d
0050E0 22 BD 5E 00         B   143    				ld (fs_sectors_per_fat),hl
                           B   144    				
0050E4 010055AA            B   145    				ld bc,0aa5500h
0050E8 ED43FD09 00         B   146    				ld (sector_buffer+1fdh),bc		0050ED 11000000            B   147    				ld de,0
0050F1 CD A5 51 00         B   148    				call set_lba_and_write_sector	0050F5 D8                  B   149    				ret c
                           B   150    				
0050F6 11000000            B   151    				ld de,0
0050FA DD5E0E              B   152    				ld e,(ix+0eh)					0050FD DD560F              B   153    				ld d,(ix+0fh)					                           B   154    				
005100 CD 8F 5B 00         B   155    				call fs_clear_sector_buffer		005104 DD3600FF            B   156    				ld (ix+0),0ffh
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 215


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0A.asm
005108 DD3601F8            B   157    				ld (ix+1),0f8h
00510C DD3602FF            B   158    				ld (ix+2),0ffh
005110 DD3603FF            B   159    				ld (ix+3),0ffh
005114 CD A5 51 00         B   160    				call set_lba_and_write_sector	005118 D8                  B   161    				ret c
                           B   162    
005119 EB                  B   163    				ex de,hl
00511A ED5B BD 5E 00       B   164    				ld de,(fs_sectors_per_fat)	
00511F 19                  B   165    				add hl,de
005120 EB                  B   166    				ex de,hl
005121 CD A5 51 00         B   167    				call set_lba_and_write_sector 	005125 D8                  B   168    				ret c	
                           B   169    
005126 CD 8F 5B 00         B   170    				call fs_clear_sector_buffer		00512A D5                  B   171    				push de	
00512B 21 C3 5E 00         B   172    				ld hl,fs_sought_filename
00512F 11000800            B   173    				ld de,sector_buffer
005133 010B0000            B   174    				ld bc,11
005137 EDB0                B   175    				ldir							005139 D1                  B   176    				pop de							00513A DD360B08            B   177    				ld (ix+0bh),8					00513E DD361821            B   178    				ld (ix+018h),021h				                           B   179    				
005142 EB                  B   180    				ex de,hl
005143 ED5B BD 5E 00       B   181    				ld de,(fs_sectors_per_fat)		005148 19                  B   182    				add hl,de
005149 EB                  B   183    				ex de,hl
00514A CD A5 51 00         B   184    				call set_lba_and_write_sector	00514E D8                  B   185    				ret c	
                           B   186    						
                           B   187    
00514F 21 2C 5F 00         B   188    				ld hl,partition_base			005153 7E                  B   189    				ld a,(hl)
005154 23                  B   190    				inc hl
005155 B6                  B   191    				or (hl)
005156 23                  B   192    				inc hl
005157 B6                  B   193    				or (hl)
005158 23                  B   194    				inc hl
005159 B6                  B   195    				or (hl)
00515A 28 47               B   196    				jr z,format_done				                           B   197    
00515C CD C4 51 00         B   198    				call fs_read_mbr				005160 D8                  B   199    				ret c
005161 DD21BE09 00         B   200    				ld ix,sector_buffer+1beh
005166 0E00                B   201    				ld c,0
005168 0604                B   202    fs_lanp			ld b,4
00516A ED1208              B   203    				lea de,ix+8
00516D 21 2C 5F 00         B   204    				ld hl,partition_base
005171 1A                  B   205    fs_fpart		ld a,(de)
005172 BE                  B   206    				cp (hl)
005173 28 0D               B   207    				jr z,fs_chkpaddrlp
005175 ED3210              B   208    				lea ix,ix+16					Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 216


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0A.asm
005178 0C                  B   209    				inc c
005179 79                  B   210    				ld a,c
00517A FE04                B   211    				cp 4
00517C 20 EA               B   212    				jr nz,fs_lanp				
00517E 3ECE                B   213    				ld a,0ceh						005180 B7                  B   214    				or a
005181 C9                  B   215    				ret
005182 13                  B   216    fs_chkpaddrlp	inc de
005183 23                  B   217    				inc hl
005184 10 EB               B   218    				djnz fs_fpart					                           B   219    				
005186 DD7E04              B   220    				ld a,(ix+4)						005189 FE0E                B   221    				cp 0eh
00518B 28 16               B   222    				jr z,format_done				00518D DD36040E            B   223    				ld (ix+4),0eh
005191 21000000            B   224    				ld hl,0							005195 AF                  B   225    				xor a
005196 22 1B 6C 00         B   226    				ld (sector_lba0),hl				00519A 32 1E 6C 00         B   227    				ld (sector_lba0+3),a			00519E CD 34 5E 00         B   228    				call fs_write_sector
0051A2 D8                  B   229    				ret c
                           B   230    
0051A3 AF                  B   231    format_done		xor a							0051A4 C9                  B   232    				ret				
                           B   233    				
                           B   234    
                           B   235    				
                           B   236    
                           B   237    
0051A5                     B   238    set_lba_and_write_sector
                           B   239    
0051A5 E5                  B   240    				push hl
0051A6 D5                  B   241    				push de
0051A7 C5                  B   242    				push bc
0051A8 2A 2C 5F 00         B   243    				ld hl,(partition_base)
0051AC 3A 2F 5F 00         B   244    				ld a,(partition_base+3)
0051B0 0600                B   245    				ld b,0
0051B2 19                  B   246    				add hl,de
0051B3 88                  B   247    				adc a,b
0051B4 22 1B 6C 00         B   248    				ld (sector_lba0),hl				0051B8 32 1E 6C 00         B   249    				ld (sector_lba0+3),a			0051BC CD 34 5E 00         B   250    				call fs_write_sector
0051C0 C1                  B   251    				pop bc
0051C1 D1                  B   252    				pop de
0051C2 E1                  B   253    				pop hl
0051C3 C9                  B   254    				ret
                           B   255    
                           B   256    
                           B   257    
0051C4 21000000            B   258    fs_read_mbr		ld hl,0
0051C8 AF                  B   259    				xor a
0051C9 22 1B 6C 00         B   260    				ld (sector_lba0),hl				Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 217


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0A.asm
0051CD 32 1E 6C 00         B   261    				ld (sector_lba0+3),a			0051D1 CD 0B 5E 00         B   262    				call fs_read_sector
0051D5 C9                  B   263    				ret
                           B   264    				
                           B   265    
                           B   266    
                           B   267    ;----------------------------------------------
                           B   268    
0051D6                     B   269    fs_get_partition_info
                           B   270    
                           B   271    ; Set A to partition: $00 to $03
                           B   272    ; On return: If A = $00, IX = Address of reques
                           B   273    ;            If A = $d3, no partition table is 
                           B   274    ;            If A = $ce, Disk format is bad 
                           B   275    ;            If A = $cf, No (or unknown,non-FAT
                           B   276    ;            If carry flag set, there was a har
                           B   277    
                           B   278    				
0051D6 CD C4 51 00         B   279    				call fs_read_mbr				0051DA D8                  B   280    				ret c
                           B   281    			
0051DB CD 18 52 00         B   282    				call fs_check_fat_sig			0051DF 20 44               B   283    				jr nz,formbad
                           B   284    			
0051E1 CD 09 52 00         B   285    				call check_fat16_id				0051E5 20 04               B   286    				jr nz,mbr_at_zero				0051E7 3ED3                B   287    				ld a,0d3h						0051E9 B7                  B   288    				or a
0051EA C9                  B   289    				ret
                           B   290    
0051EB 11100000            B   291    mbr_at_zero		ld de,16
0051EF 3A 67 6B 00         B   292    				ld a,(partition_temp)
0051F3 57                  B   293    				ld d,a
0051F4 ED5C                B   294    				mlt de
0051F6 DD21BE09 00         B   295    				ld ix,sector_buffer+01beh
0051FB DD19                B   296    				add ix,de
0051FD DDCB0456            B   297    				bit 2,(ix+4)					005201 20 04               B   298    				jr nz,formok					005203 3ECF                B   299    				ld a,0cfh						005205 B7                  B   300    				or a
005206 C9                  B   301    				ret
                           B   302    				
005207 AF                  B   303    formok			xor a							005208 C9                  B   304    				ret
                           B   305    					
                           B   306    
                           B   307    
                           B   308    
005209                     B   309    check_fat16_id
                           B   310    		
005209 21360800            B   311    				ld hl,sector_buffer+036h		00520D 11 DD 63 00         B   312    				ld de,fat16_txt			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 218


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0A.asm
005211 0605                B   313    				ld b,5
005213 CD 36 13 00         B   314    				call os_compare_strings
005217 C9                  B   315    				ret
                           B   316    				
                           B   317    ;----------------------------------------------
                           B   318    
                           B   319    
005218                     B   320    fs_check_fat_sig
                           B   321    
005218 2AFE0900            B   322    				ld hl,(sector_buffer+01feh)		00521C 1155AA00            B   323    				ld de,0aa55h
005220 AF                  B   324    				xor a
005221 52ED52              B   325    				sbc.s hl,de						005224 C9                  B   326    				ret
                           B   327    			
                           B   328    			
                           B   329    			
005225 3ECE                B   330    formbad			ld a,0ceh						005227 B7                  B   331    				or a
005228 C9                  B   332    				ret
                           B   333    
                           B   334    ;----------------------------------------------
                           B   335    
                           B   336    
005229                     B   337    fs_check_disk_format
                           B   338    
                           B   339    ; ensures disk is FAT16, sets up constants..
                           B   340    	
005229 C5                  B   341    				push bc
00522A D5                  B   342    				push de
00522B E5                  B   343    				push hl
00522C CD 34 52 00         B   344    				call go_checkf
005230 E1                  B   345    				pop hl
005231 D1                  B   346    				pop de
005232 C1                  B   347    				pop bc
005233 C9                  B   348    				ret
                           B   349    				
005234 CD FB 52 00         B   350    go_checkf		call fs_read_partition_bootsect
005238 D8                  B   351    				ret c
005239 B7                  B   352    				or a
00523A C0                  B   353    				ret nz
                           B   354    				
00523B CD 18 52 00         B   355    				call fs_check_fat_sig			00523F 20 E4               B   356    				jr nz,formbad		
                           B   357    			
005241 CD 09 52 00         B   358    				call check_fat16_id				005245 20 DE               B   359    				jr nz,formbad
                           B   360    			
005247 DD210008 00         B   361    				ld ix,sector_buffer
00524C DD270B              B   362    				ld hl,(ix+0bh)					00524F 11000200            B   363    				ld de,512						005253 AF                  B   364    				xor a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 219


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0A.asm
005254 52ED52              B   365    				sbc.s hl,de						005257 20 CC               B   366    				jr nz,formbad
                           B   367    			
005259 DD7E0D              B   368    				ld a,(ix+0dh)					00525C 32 AC 5E 00         B   369    				ld (fs_cluster_size),a
005260 CB27                B   370    				sla a
005262 32 AE 5E 00         B   371    				ld (fs_bytes_per_cluster+1),a
                           B   372    							
005266 21000000            B   373    				ld hl,0
00526A DD6E0E              B   374    				ld l,(ix+0eh)					00526D DD660F              B   375    				ld h,(ix+0fh)
005270 22 B0 5E 00         B   376    				ld (fs_fat1_position),hl		005274 11000000            B   377    				ld de,0
005278 DD5E16              B   378    				ld e,(ix+16h)					00527B DD5617              B   379    				ld d,(ix+17h)
00527E ED53 BD 5E 00       B   380    				ld (fs_sectors_per_fat),de
005283 19                  B   381    				add hl,de
005284 22 B3 5E 00         B   382    				ld (fs_fat2_position),hl		005288 19                  B   383    				add hl,de
005289 22 B6 5E 00         B   384    				ld (fs_root_dir_position),hl 	00528D EB                  B   385    				ex de,hl
00528E DD6E11              B   386    				ld l,(ix+11h)					005291 DD6612              B   387    				ld h,(ix+12h)					005294 7C                  B   388    				ld a,h
005295 B5                  B   389    				or l
005296 28 8D               B   390    				jr z,formbad					005298 29                  B   391    				add hl,hl						005299 29                  B   392    				add hl,hl						00529A 29                  B   393    				add hl,hl
00529B 29                  B   394    				add hl,hl
00529C EB                  B   395    				ex de,hl
00529D 7A                  B   396    				ld a,d
00529E 32 BC 5E 00         B   397    				ld (fs_root_dir_sectors),a		0052A2 01000000            B   398    				ld bc,0
0052A6 4A                  B   399    				ld c,d
0052A7 09                  B   400    				add hl,bc				
0052A8 22 B9 5E 00         B   401    				ld (fs_data_area),hl			                           B   402    												0052AC 21000000            B   403    				ld hl,0
0052B0 01000000            B   404    				ld bc,0
0052B4 DD4E22              B   405    				ld c,(ix+022h)					0052B7 DD4623              B   406    				ld b,(ix+023h)
0052BA DD6E13              B   407    				ld l,(ix+013h)					0052BD DD6614              B   408    				ld h,(ix+014h)
0052C0 7C                  B   409    				ld a,h							0052C1 B5                  B   410    				or l
0052C2 20 06               B   411    				jr nz,got_tsfbs
0052C4 DD6E20              B   412    				ld l,(ix+020h)					0052C7 DD6621              B   413    				ld h,(ix+021h)
0052CA ED5B B9 5E 00       B   414    got_tsfbs 		ld de,(fs_data_area)
0052CF AF                  B   415    				xor a							0052D0 52ED52              B   416    				sbc.s hl,de						Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 220


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0A.asm
0052D3 30 02               B   417    				jr nc,nomxcb
0052D5 520B                B   418    				dec.s bc
0052D7 3A AC 5E 00         B   419    nomxcb			ld a,(fs_cluster_size)
0052DB CB3F                B   420    fmaxcl			srl a
0052DD 28 08               B   421    				jr z,got_cmaxc					0052DF CB39                B   422    				srl c				
0052E1 CB1C                B   423    				rr h
0052E3 CB1D                B   424    				rr l
0052E5 18 F4               B   425    				jr fmaxcl
0052E7 E5                  B   426    got_cmaxc		push hl							0052E8 11F0FF00            B   427    				ld de,0fff0h
0052EC AF                  B   428    				xor a
0052ED 52ED52              B   429    				sbc.s hl,de						0052F0 38 02               B   430    				jr c,cmaxok
0052F2 E1                  B   431    				pop hl
0052F3 D5                  B   432    				push de
0052F4 E1                  B   433    cmaxok			pop hl
0052F5 22 C0 5E 00         B   434    				ld (fs_max_data_clusters),hl
0052F9 AF                  B   435    				xor a
0052FA C9                  B   436    				ret				
                           B   437    
                           B   438    ;----------------------------------------------
                           B   439    
0052FB                     B   440    fs_read_partition_bootsector
                           B   441    
0052FB CD 90 1B 00         B   442    				call fs_calc_volume_offset		0052FF 21 64 6A 00         B   443    				ld hl,volume_mount_list
005303 19                  B   444    				add hl,de
005304 7E                  B   445    				ld a,(hl)
005305 B7                  B   446    				or a							005306 20 04               B   447    				jr nz,fs_volpre
005308 3ECF                B   448    				ld a,0cfh						00530A B7                  B   449    				or a
00530B C9                  B   450    				ret
                           B   451    			
00530C 11080000            B   452    fs_volpre		ld de,8							005310 19                  B   453    				add hl,de
005311 11 1B 6C 00         B   454    				ld de,sector_lba0
005315 01040000            B   455    				ld bc,4
005319 EDB0                B   456    				ldir
00531B CD 0B 5E 00         B   457    				call fs_read_sector
00531F C9                  B   458    				ret	
                           B   459    
                           B   460    ;----------------------------------------------
                           B   461    
005320                     B   462    fs_calc_free_space
                           B   463    
                           B   464    ;returns free space in KB in HL:DE
                           B   465    
005320 ED5B C0 5E 00       B   466    				ld de,(fs_max_data_clusters)
005325 13                  B   467    				inc de
005326 13                  B   468    				inc de							Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 221


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0A.asm
005327 D5                  B   469    				push de
005328 DDE1                B   470    				pop ix
                           B   471    			
00532A AF                  B   472    				xor a
00532B 32 05 5F 00         B   473    cfs_lp2			ld (fs_working_sector),a
00532F 2A B0 5E 00         B   474    				ld hl,(fs_fat1_position)
005333 CD E1 5D 00         B   475    				call set_abs_lba_and_read_secto
005337 D8                  B   476    				ret c
                           B   477    				
005338 21000800            B   478    				ld hl,sector_buffer
00533C 0600                B   479    				ld b,0
00533E AF                  B   480    cfs_lp1			xor a
00533F B6                  B   481    				or a,(hl)						005340 23                  B   482    				inc hl							005341 20 03               B   483    				jr nz,cfs_ciu					005343 B6                  B   484    				or a,(hl)
005344 28 02               B   485    				jr z,cfs_ddcc
005346 DD2B                B   486    cfs_ciu			dec ix							005348 23                  B   487    cfs_ddcc		inc hl
005349 1B                  B   488    				dec de
00534A 7A                  B   489    				ld a,d
00534B B3                  B   490    				or e
00534C 28 09               B   491    				jr z,cfs_ok						00534E 10 EE               B   492    				djnz cfs_lp1
005350 3A 05 5F 00         B   493    				ld a,(fs_working_sector)
005354 3C                  B   494    				inc a
005355 18 D4               B   495    				jr cfs_lp2
                           B   496    				
005357 3A AC 5E 00         B   497    cfs_ok			ld a,(fs_cluster_size)			00535B CB3F                B   498    cltoslp			srl a
00535D 28 04               B   499    				jr z,powdone
00535F DD29                B   500    				add ix,ix
005361 18 F8               B   501    				jr cltoslp	
005363 FD21 37 6C 00       B   502    powdone			ld iy,xrr_temp
005368 FD3E00              B   503    				ld (iy),ix						00536B FDCB023E            B   504    				srl (iy+2)
00536F FDCB011E            B   505    				rr (iy+1)
005373 FDCB001E            B   506    				rr (iy+0)						005377 FD1700              B   507    				ld de,(iy)						00537A AF                  B   508    				xor a
00537B C9                  B   509    				ret
                           B   510    
                           B   511    ;----------------------------------------------
                           B   512    
00537C                     B   513    fs_change_dir_command
                           B   514    
                           B   515    ; INPUT: HL = directory name ascii (zero/space 
                           B   516    			
                           B   517    			
00537C CD A3 5B 00         B   518    				call fs_find_filename			005380 D8                  B   519    				ret c							005381 FEC2                B   520    				cp 0c2h							Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 222


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0A.asm
005383 20 04               B   521    				jr nz,founddir
005385 3ED1                B   522    				ld a,0d1h						005387 B7                  B   523    				or a
005388 C9                  B   524    				ret
                           B   525    
005389 DDCB0B66            B   526    founddir		bit 4,(ix+0bh)
00538D 20 04               B   527    				jr nz,fs_isadir
00538F 3EC4                B   528    				ld a,0c4h
005391 B7                  B   529    				or a
005392 C9                  B   530    				ret
                           B   531    				
005393 11000000            B   532    fs_isadir		ld de,0
005397 DD5E1A              B   533    				ld e,(ix+01ah)
00539A DD561B              B   534    				ld d,(ix+01bh)					00539D CD 62 1B 00         B   535    				call fs_update_dir_cluster
0053A1 AF                  B   536    				xor a
0053A2 C9                  B   537    				ret
                           B   538    
                           B   539    
                           B   540    ;----------------------------------------------
                           B   541    	
                           B   542    	
0053A3                     B   543    fs_goto_root_dir_command
                           B   544    
0053A3 D5                  B   545    				push de
0053A4 11000000            B   546    				ld de,0
0053A8 CD 62 1B 00         B   547    				call fs_update_dir_cluster
0053AC D1                  B   548    				pop de
0053AD AF                  B   549    				xor a
0053AE C9                  B   550    				ret
                           B   551    
                           B   552    ;----------------------------------------------
                           B   553    	
                           B   554    	
0053AF                     B   555    fs_parent_dir_command
                           B   556    
0053AF CD 56 1B 00         B   557    				call fs_get_dir_cluster
0053B3 7A                  B   558    				ld a,d
0053B4 B3                  B   559    				or e
0053B5 20 04               B   560    				jr nz,pdnaroot
0053B7 3ECA                B   561    				ld a,0cah						0053B9 B7                  B   562    				or a
0053BA C9                  B   563    				ret
0053BB 212E2E20            B   564    pdnaroot		ld hl,0202e2eh					0053BF 22 C3 5E 00         B   565    				ld (fs_sought_filename),hl		0053C3 21 C6 5E 00         B   566    				ld hl,fs_sought_filename+3		0053C7 3E20                B   567    				ld a,32
0053C9 01080000            B   568    				ld bc,8
0053CD CD 7C 16 00         B   569    				call os_bchl_memfill
0053D1 18 A9               B   570    				jr fs_change_dir_command
                           B   571    				
                           B   572    		
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 223


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0A.asm
                           B   573    ;----------------------------------------------
                           B   574    		
0053D3                     B   575    fs_open_file_command
                           B   576    
                           B   577    ; INPUT: xHL = filename ascii (zero/space termi
                           B   578    ; OUTPUT: C:xDE  = File length
                           B   579    ;            HL  = Start cluster of file
                           B   580    ;            Internal vars (file pointer reset 
                           B   581    
                           B   582    			
0053D3 CD A3 5B 00         B   583    				call fs_find_filename			0053D7 D8                  B   584    				ret c							0053D8 C0                  B   585    				ret nz							                           B   586    								
0053D9 3EC6                B   587    				ld a,0c6h						0053DB DDCB0B66            B   588    				bit 4,(ix+0bh)
0053DF C0                  B   589    				ret nz
                           B   590    
0053E0 AF                  B   591    				xor a
0053E1 32 19 5F 00         B   592    				ld (fs_filepointer_valid),a		0053E5 21000000            B   593    				ld hl,0
0053E9 22 E7 5E 00         B   594    				ld (fs_file_pointer),hl			0053ED 32 EA 5E 00         B   595    				ld (fs_file_pointer+3),a		0053F1 22 25 5F 00         B   596    				ld (fs_sector_last_read_lba0),h
0053F5 32 28 5F 00         B   597    				ld (fs_sector_last_read_lba0+3)
                           B   598    
0053F9 DD171C              B   599    				ld de,(ix+01ch)
0053FC D5                  B   600    				push de
0053FD E1                  B   601    				pop hl
0053FE DD4E1F              B   602    				ld c,(ix+01fh)					005401 ED53 EB 5E 00       B   603    				ld (fs_file_length),de			005406 79                  B   604    				ld a,c
005407 32 EE 5E 00         B   605    				ld (fs_file_length+3),a			00540B B7                  B   606    				or a							00540C 28 04               B   607    				jr z,fs_dflsm					00540E 21FFFFFF            B   608    				ld hl,0ffffffh
005412 22 F3 5E 00         B   609    fs_dflsm		ld (fs_file_transfer_length),hl
                           B   610    				
005416 21000000            B   611    				ld hl,0
00541A DD6E1A              B   612    				ld l,(ix+01ah)		
00541D DD661B              B   613    				ld h,(ix+01bh)
005420 22 F6 5E 00         B   614    				ld (fs_file_start_cluster),hl	                           B   615    				
005424 AF                  B   616    				xor a
005425 C9                  B   617    				ret
                           B   618    
                           B   619    
                           B   620    ;----------------------------------------------
                           B   621    
005426                     B   622    fs_read_data_command		
                           B   623    
                           B   624    ;*******************************************
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 224


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0A.asm
                           B   625    ;*** 'fs_open_file' must be called first ***
                           B   626    ;*******************************************
                           B   627    		
005426 CD 65 55 00         B   628    fs_load			call fs_test_transfer_length	00542A 20 04               B   629    				jr nz,fs_btrok
                           B   630    
00542C 3EC7                B   631    fs_fliz			ld a,0c7h						00542E B7                  B   632    				or a
00542F C9                  B   633    				ret
                           B   634    			 
005430 2A FC 5E 00         B   635    fs_btrok		ld hl,(fs_ez80_address)			005434 22 FF 5E 00         B   636    				ld (fs_ez80_working_address),hl
                           B   637    			
005438 2A E7 5E 00         B   638    				ld hl,(fs_file_pointer)			00543C 3A EA 5E 00         B   639    				ld a,(fs_file_pointer+3)		005440 11010000            B   640    				ld de,1							005444 19                  B   641    				add hl,de
005445 CE00                B   642    				adc a,0
005447 4F                  B   643    				ld c,a
005448 EB                  B   644    				ex de,hl						005449 2A EB 5E 00         B   645    				ld hl,(fs_file_length)			00544D 3A EE 5E 00         B   646    				ld a,(fs_file_length+3)			005451 B7                  B   647    				or a							005452 ED52                B   648    				sbc hl,de						005454 99                  B   649    				sbc a,c
005455 DA B6 54 00         B   650    				jp c,fs_rd_eof
                           B   651    					
005459 3A 19 5F 00         B   652    fs_fpok			ld a,(fs_filepointer_valid)		00545D B7                  B   653    				or a							00545E 20 46               B   654    				jr nz,fs_get_sector_if_necessar
                           B   655    			
005460 3E01                B   656    seek_strt		ld a,1
005462 32 19 5F 00         B   657    				ld (fs_filepointer_valid),a
005466 2A F6 5E 00         B   658    				ld hl,(fs_file_start_cluster)	00546A 22 F9 5E 00         B   659    				ld (fs_file_working_cluster),hl
                           B   660    			
00546E 3A EA 5E 00         B   661    				ld a,(fs_file_pointer+3)		005472 2A E7 5E 00         B   662    				ld hl,(fs_file_pointer)			005476 ED4B AD 5E 00       B   663    fs_fpblp		ld bc,(fs_bytes_per_cluster)
00547B AF                  B   664    				xor a
00547C ED42                B   665    				sbc hl,bc						00547E DE00                B   666    				sbc a,0
005480 38 14               B   667    				jr c,fs_fpgbo
005482 E5                  B   668    				push hl				
005483 2A F9 5E 00         B   669    				ld hl,(fs_file_working_cluster)
005487 CD B3 5C 00         B   670    				call get_fat_entry_for_cluster
00548B 30 02               B   671    				jr nc,fs_ghok					00548D E1                  B   672    				pop hl
00548E C9                  B   673    				ret
00548F 22 F9 5E 00         B   674    fs_ghok			ld (fs_file_working_cluster),hl
005493 E1                  B   675    				pop hl
005494 18 E0               B   676    				jr fs_fpblp
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 225


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0A.asm
                           B   677    			
005496 09                  B   678    fs_fpgbo		add hl,bc						005497 7C                  B   679    				ld a,h
005498 CB3F                B   680    				srl a							00549A 32 1A 5F 00         B   681    				ld (fs_sector_pos_cnt),a
00549E 7C                  B   682    				ld a,h
00549F E601                B   683    				and 01h
0054A1 67                  B   684    				ld h,a
0054A2 22 02 5F 00         B   685    				ld (fs_in_sector_offset),hl		                           B   686    
                           B   687    				
                           B   688    
0054A6                     B   689    fs_get_sector_if_necessary
                           B   690    				
0054A6 CD 65 55 00         B   691    				call fs_test_transfer_length	0054AA 28 64               B   692    				jr z,fs_read_done	
                           B   693    				
0054AC 2A F9 5E 00         B   694    				ld hl,(fs_file_working_cluster)
0054B0 CD 5A 5A 00         B   695    				call fs_compare_hl_fff8			0054B4 38 04               B   696    				jr c,fs_rd_noteof		
0054B6 3ECC                B   697    fs_rd_eof		ld a,0cch						0054B8 B7                  B   698    				or a
0054B9 C9                  B   699    				ret
                           B   700    				
0054BA 2A F9 5E 00         B   701    fs_rd_noteof	ld hl,(fs_file_working_cluster)
0054BE 3A 1A 5F 00         B   702    				ld a,(fs_sector_pos_cnt)		0054C2 CD 8A 5D 00         B   703    				call cluster_and_offset_to_lba
0054C6 CD 50 5E 00         B   704    				call fs_is_same_sector_in_buffe
0054CA 28 05               B   705    				jr z,fs_same_sector
0054CC CD 0B 5E 00         B   706    				call fs_read_sector				0054D0 D8                  B   707    				ret c							                           B   708    			
0054D1 21000200            B   709    fs_same_sector	ld hl,512
0054D5 ED5B 02 5F 00       B   710    				ld de,(fs_in_sector_offset)
0054DA AF                  B   711    				xor a
0054DB ED52                B   712    				sbc hl,de						0054DD E5                  B   713    				push hl
0054DE C1                  B   714    				pop bc							                           B   715    				
0054DF ED5B F3 5E 00       B   716    				ld de,(fs_file_transfer_length)
0054E4 AF                  B   717    				xor a
0054E5 ED52                B   718    				sbc hl,de
0054E7 38 02               B   719    				jr c,fs_got_bc					0054E9 D5                  B   720    				push de							0054EA C1                  B   721    				pop bc
                           B   722    
0054EB 21000800            B   723    fs_got_bc		ld hl,sector_buffer
0054EF ED5B 02 5F 00       B   724    				ld de,(fs_in_sector_offset)		0054F4 19                  B   725    				add hl,de
0054F5 ED5B FF 5E 00       B   726    				ld de,(fs_ez80_working_address)
0054FA C5                  B   727    				push bc
0054FB EDB0                B   728    				ldir							Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 226


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0A.asm
0054FD ED53 FF 5E 00       B   729    				ld (fs_ez80_working_address),de
005502 C1                  B   730    				pop bc
005503 CD 39 55 00         B   731    				call fs_adjust_fp_tl_so
005507 2A 02 5F 00         B   732    				ld hl,(fs_in_sector_offset)
00550B 7C                  B   733    				ld a,h
00550C FE02                B   734    				cp 02h							00550E 28 02               B   735    				jr z,fs_new_sec
005510 AF                  B   736    fs_read_done	xor a
005511 C9                  B   737    				ret
                           B   738    
005512 21000000            B   739    fs_new_sec		ld hl,0
005516 22 02 5F 00         B   740    				ld (fs_in_sector_offset),hl		00551A 21 1A 5F 00         B   741    				ld hl,fs_sector_pos_cnt			00551E 34                  B   742    				inc (hl)
00551F 3A AC 5E 00         B   743    				ld a,(fs_cluster_size)
005523 BE                  B   744    				cp (hl)
005524 20 80               B   745    				jr nz,fs_get_sector_if_necessar
                           B   746    				
005526 3600                B   747    				ld (hl),0						005528 2A F9 5E 00         B   748    				ld hl,(fs_file_working_cluster)
00552C CD B3 5C 00         B   749    				call get_fat_entry_for_cluster	005530 D8                  B   750    				ret c							005531 22 F9 5E 00         B   751    				ld (fs_file_working_cluster),hl
005535 C3 A6 54 00         B   752    				jr fs_get_sector_if_necessary
                           B   753    
                           B   754    ;----------------------------------------------
                           B   755    
005539                     B   756    fs_adjust_fp_tl_so
                           B   757    
                           B   758    ; advance / reduce by BC
                           B   759    
005539 C5                  B   760    				push bc
00553A E5                  B   761    				push hl
00553B 2A E7 5E 00         B   762    				ld hl,(fs_file_pointer)			00553F 09                  B   763    				add hl,bc
005540 22 E7 5E 00         B   764    				ld (fs_file_pointer),hl			005544 3A EA 5E 00         B   765    				ld a,(fs_file_pointer+3)		005548 CE00                B   766    				adc a,0
00554A 32 E7 5E 00         B   767    				ld (fs_file_pointer),a		
                           B   768    				
00554E 2A F3 5E 00         B   769    				ld hl,(fs_file_transfer_length)
005552 AF                  B   770    				xor a
005553 ED42                B   771    				sbc hl,bc
005555 22 F3 5E 00         B   772    				ld (fs_file_transfer_length),hl
                           B   773    				
005559 2A 02 5F 00         B   774    				ld hl,(fs_in_sector_offset)
00555D 09                  B   775    				add hl,bc
00555E 22 02 5F 00         B   776    				ld (fs_in_sector_offset),hl
                           B   777    				
005562 E1                  B   778    				pop hl
005563 C1                  B   779    				pop bc
005564 C9                  B   780    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 227


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0A.asm
                           B   781    				
                           B   782    				
005565                     B   783    fs_test_transfer_length
                           B   784    				
005565 C5                  B   785    				push bc
005566 E5                  B   786    				push hl
005567 21000000            B   787    				ld hl,0
00556B ED4B F3 5E 00       B   788    				ld bc,(fs_file_transfer_length)
005570 AF                  B   789    				xor a
005571 ED4A                B   790    				adc hl,bc
005573 E1                  B   791    				pop hl
005574 C1                  B   792    				pop bc
005575 C9                  B   793    				ret
                           B   794    				
                           B   795    ;----------------------------------------------
                           B   796    
005576                     B   797    fs_make_dir_command		
                           B   798    				
005576 CD A3 5B 00         B   799    				call fs_find_filename			00557A D8                  B   800    				ret c
00557B FEC2                B   801    				cp 0c2h							00557D 28 04               B   802    				jr z,mdirfnde
00557F 3EC9                B   803    				ld a,0c9h						005581 B7                  B   804    				or a
005582 C9                  B   805    				ret
                           B   806    			
005583 CD 67 5A 00         B   807    mdirfnde		call fs_find_free_cluster		005587 D8                  B   808    				ret c							005588 C0                  B   809    				ret nz							                           B   810    							
005589 2A 09 5F 00         B   811    				ld hl,(fs_free_cluster)
00558D 22 0C 5F 00         B   812    				ld (fs_new_file_cluster),hl
                           B   813    			
005591 CD B8 5A 00         B   814    				call fs_find_free_dir_entry		005595 D8                  B   815    				ret c							005596 C0                  B   816    				ret nz							                           B   817    			
005597 DDE5                B   818    				push ix							005599 D1                  B   819    				pop de
00559A 21 C3 5E 00         B   820    				ld hl,fs_sought_filename
00559E 010B0000            B   821    				ld bc,11
0055A2 EDB0                B   822    				ldir
0055A4 AF                  B   823    				xor a							0055A5 0615                B   824    				ld b,21
0055A7 12                  B   825    clrdiren		ld (de),a
0055A8 13                  B   826    				inc de
0055A9 10 FC               B   827    				djnz clrdiren
0055AB DD360B10            B   828    				ld (ix+0bh),010h				0055AF DD361821            B   829    				ld (ix+018h),021h				0055B3 ED5B 0C 5F 00       B   830    				ld de,(fs_new_file_cluster)
0055B8 DD731A              B   831    				ld (ix+01ah),e					0055BB DD721B              B   832    				ld (ix+01bh),d
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 228


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0A.asm
0055BE CD 34 5E 00         B   833    				call fs_write_sector			0055C2 D8                  B   834    				ret c							                           B   835    				
0055C3 CD 8F 5B 00         B   836    				call fs_clear_sector_buffer
0055C7 DD210008 00         B   837    				ld ix,sector_buffer				0055CC DD36002E            B   838    				ld (ix+00h),02eh				0055D0 DD360120            B   839    				ld (ix+01h),020h
0055D4 DD36202E            B   840    				ld (ix+020h),02eh
0055D8 DD36212E            B   841    				ld (ix+021h),02eh
0055DC DD360B10            B   842    				ld (ix+0bh),010h
0055E0 DD362B10            B   843    				ld (ix+02bh),010h
0055E4 ED5B 0C 5F 00       B   844    				ld de,(fs_new_file_cluster)		0055E9 DD731A              B   845    				ld (ix+01ah),e
0055EC DD721B              B   846    				ld (ix+01bh),d
0055EF CD 56 1B 00         B   847    				call fs_get_dir_cluster			0055F3 DD733A              B   848    				ld (ix+03ah),e
0055F6 DD723B              B   849    				ld (ix+03bh),d
0055F9 DD361821            B   850    				ld (ix+018h),021h				0055FD DD363821            B   851    				ld (ix+038h),021h				005601 0609                B   852    				ld b,9
005603 DD360220            B   853    mndelp			ld (ix+002h),32
005607 DD362220            B   854    				ld (ix+022h),32
00560B DD23                B   855    				inc ix
00560D 10 F4               B   856    				djnz mndelp
00560F 2A 0C 5F 00         B   857    				ld hl,(fs_new_file_cluster)		005613 AF                  B   858    				xor a
005614 CD 8A 5D 00         B   859    				call cluster_and_offset_to_lba
005618 CD 34 5E 00         B   860    				call fs_write_sector
00561C D8                  B   861    				ret c							                           B   862    			
00561D CD 8F 5B 00         B   863    				call fs_clear_sector_buffer		005621 AF                  B   864    				xor a
005622 3C                  B   865    wroslp			inc a
005623 32 05 5F 00         B   866    				ld (fs_working_sector),a
005627 21 AC 5E 00         B   867    				ld hl,fs_cluster_size
00562B BE                  B   868    				cp (hl)
00562C 28 13               B   869    				jr z,allsclr
00562E 2A 0C 5F 00         B   870    				ld hl,(fs_new_file_cluster)
005632 CD 8A 5D 00         B   871    				call cluster_and_offset_to_lba
005636 CD 34 5E 00         B   872    				call fs_write_sector
00563A D8                  B   873    				ret c
00563B 3A 05 5F 00         B   874    				ld a,(fs_working_sector)
00563F 18 E1               B   875    				jr wroslp
                           B   876    			
005641 2A 0C 5F 00         B   877    allsclr			ld hl,(fs_new_file_cluster)		005645 11FFFF00            B   878    				ld de,0ffffh
005649 CD DF 5C 00         B   879    				call update_fat_entry_for_clust
00564D AF                  B   880    				xor a
00564E C9                  B   881    				ret
                           B   882    
                           B   883    
                           B   884    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 229


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0A.asm
                           B   885    ;----------------------------------------------
                           B   886    
00564F                     B   887    fs_delete_dir_command
                           B   888    
00564F CD A3 5B 00         B   889    				call fs_find_filename			005653 D8                  B   890    				ret c
005654 28 04               B   891    				jr z,ddc_gotd
005656 3ED1                B   892    				ld a,0d1h						005658 B7                  B   893    				or a
005659 C9                  B   894    				ret
                           B   895    				
00565A DDCB0B66            B   896    ddc_gotd		bit 4,(ix+0bh)					00565E 20 04               B   897    				jr nz,okdeldir
005660 3EC4                B   898    				ld a,0c4h						005662 B7                  B   899    				or a
005663 C9                  B   900    				ret
                           B   901    				
005664 DD22 0F 5F 00       B   902    okdeldir		ld (fs_fname_in_sector_addr),ix
005669 CD E9 5D 00         B   903    				call backup_sector_lba
00566D DD6E1A              B   904    				ld l,(ix+01ah)					005670 DD661B              B   905    				ld h,(ix+01bh)
                           B   906    				
005673 3A AC 5E 00         B   907    fs_ddecl		ld a,(fs_cluster_size)
005677 47                  B   908    				ld b,a							005678 0E00                B   909    				ld c,0			
00567A 79                  B   910    fs_cne2 		ld a,c
00567B CD 8A 5D 00         B   911    				call cluster_and_offset_to_lba
00567F CD 0B 5E 00         B   912    				call fs_read_sector
005683 D8                  B   913    				ret c							                           B   914    				
005684 C5                  B   915    				push bc
005685 0610                B   916    				ld b,16							005687 DD210008 00         B   917    				ld ix,sector_buffer
00568C 11200000            B   918    				ld de,020h
005690 DD7E00              B   919    fs_cne1			ld a,(ix)
005693 B7                  B   920    				or a
005694 28 0D               B   921    				jr z,fs_chnde
005696 FEE5                B   922    				cp 0e5h
005698 28 09               B   923    				jr z,fs_chnde
00569A FE2E                B   924    				cp '.'
00569C 28 05               B   925    				jr z,fs_chnde
00569E C1                  B   926    				pop bc
00569F 3EC5                B   927    				ld a,0c5h						0056A1 B7                  B   928    				or a
0056A2 C9                  B   929    				ret
                           B   930    			
0056A3 DD19                B   931    fs_chnde		add ix,de
0056A5 10 E9               B   932    				djnz fs_cne1
0056A7 C1                  B   933    				pop bc
0056A8 0C                  B   934    				inc c
0056A9 10 CF               B   935    				djnz fs_cne2
                           B   936    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 230


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0A.asm
0056AB CD B3 5C 00         B   937    				call get_fat_entry_for_cluster	0056AF D8                  B   938    				ret c
0056B0 CD 5A 5A 00         B   939    				call fs_compare_hl_fff8
0056B4 38 BD               B   940    				jr c,fs_ddecl
                           B   941    			
0056B6 CD FE 5D 00         B   942    dir_empty		call restore_sector_lba			0056BA CD 0B 5E 00         B   943    				call fs_read_sector
0056BE D8                  B   944    				ret c							0056BF 2A 0F 5F 00         B   945    				ld hl,(fs_fname_in_sector_addr)
0056C3 36E5                B   946    fs_delco		ld (hl),0e5h					0056C5 CD 34 5E 00         B   947    				call fs_write_sector
0056C9 D8                  B   948    				ret c
                           B   949    			
0056CA E5                  B   950    				push hl
0056CB DDE1                B   951    				pop ix
0056CD DD6E1A              B   952    				ld l,(ix+01ah)
0056D0 DD661B              B   953    				ld h,(ix+01bh)
0056D3 22 06 5F 00         B   954    				ld (fs_working_cluster),hl
0056D7 7C                  B   955    				ld a,h							0056D8 B5                  B   956    				or l							0056D9 C8                  B   957    				ret z							                           B   958    				
0056DA 2A 06 5F 00         B   959    clrfatlp		ld hl,(fs_working_cluster)
0056DE CD B3 5C 00         B   960    				call get_fat_entry_for_cluster
0056E2 D8                  B   961    				ret c
0056E3 EB                  B   962    				ex de,hl
                           B   963    				
0056E4 2A 06 5F 00         B   964    				ld hl,(fs_working_cluster)
0056E8 ED53 06 5F 00       B   965    				ld (fs_working_cluster),de
0056ED 11000000            B   966    				ld de,0
0056F1 CD DF 5C 00         B   967    				call update_fat_entry_for_clust
0056F5 D8                  B   968    				ret c
                           B   969    				
0056F6 CD 5A 5A 00         B   970    				call fs_compare_hl_fff8			0056FA 38 DE               B   971    				jr c,clrfatlp
0056FC AF                  B   972    				xor a
0056FD C9                  B   973    				ret
                           B   974    
                           B   975    
                           B   976    ;----------------------------------------------
                           B   977    
0056FE                     B   978    fs_create_file_command
                           B   979    
                           B   980    ; Note: As per FAT standard, creating a file (0
                           B   981    ; only a directory entry (FAT is only updated w
                           B   982    
0056FE CD A3 5B 00         B   983    				call fs_find_filename			005702 D8                  B   984    				ret c
005703 FEC2                B   985    				cp 0c2h							005705 28 04               B   986    				jr z,mfilefnde
                           B   987    				
005707 3EC9                B   988    				ld a,0c9h						Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 231


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0A.asm
005709 B7                  B   989    				or a
00570A C9                  B   990    				ret
                           B   991    			
00570B CD B8 5A 00         B   992    mfilefnde		call fs_find_free_dir_entry		00570F D8                  B   993    				ret c							005710 C0                  B   994    				ret nz							                           B   995    			
005711 DDE5                B   996    				push ix							005713 D1                  B   997    				pop de
005714 21 C3 5E 00         B   998    				ld hl,fs_sought_filename
005718 010B0000            B   999    				ld bc,11
00571C EDB0                B  1000    				ldir
00571E AF                  B  1001    				xor a							00571F 0615                B  1002    				ld b,21
005721 12                  B  1003    clrfnen			ld (de),a
005722 13                  B  1004    				inc de
005723 10 FC               B  1005    				djnz clrfnen
005725 DD361821            B  1006    				ld (ix+018h),021h				005729 CD 34 5E 00         B  1007    				call fs_write_sector			00572D D8                  B  1008    				ret c							00572E AF                  B  1009    				xor a
00572F C9                  B  1010    				ret								                           B  1011    
                           B  1012    
                           B  1013    ;----------------------------------------------
                           B  1014    
005730                     B  1015    fs_write_bytes_to_file_command
                           B  1016    	
                           B  1017    ; *********************************************
                           B  1018    ; * set up: fs_file_transfer_length (new data),
                           B  1019    ; * before calling                             
                           B  1020    ; *********************************************
                           B  1021    
                           B  1022    				
005730 ED5B F3 5E 00       B  1023    				ld de,(fs_file_transfer_length)
005735 21000000            B  1024    				ld hl,0
005739 AF                  B  1025    				xor a
00573A ED5A                B  1026    				adc hl,de
00573C CA 2C 54 00         B  1027    				jp z,fs_fliz					                           B  1028    				 
005740 CD A3 5B 00         B  1029    				call fs_find_filename			005744 D8                  B  1030    				ret c							005745 FEC2                B  1031    				cp 0c2h				
005747 20 02               B  1032    				jr nz,fs_fetwt					005749 B7                  B  1033    				or a
00574A C9                  B  1034    				ret
00574B DDCB0B66            B  1035    fs_fetwt		bit 4,(ix+0bh)					00574F 28 04               B  1036    				jr z,fs_oknad					005751 3EC6                B  1037    				ld a,0c6h						005753 B7                  B  1038    				or a
005754 C9                  B  1039    				ret
                           B  1040    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 232


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0A.asm
005755 CD E9 5D 00         B  1041    fs_oknad		call backup_sector_lba
005759 DD22 0F 5F 00       B  1042    				ld (fs_fname_in_sector_addr),ix
                           B  1043    
00575E DD311C              B  1044    				ld iy,(ix+01ch)					005761 DD7E1F              B  1045    				ld a,(ix+01fh)
005764 FD22 EF 5E 00       B  1046    				ld (fs_existing_file_length),iy
005769 32 F2 5E 00         B  1047    				ld (fs_existing_file_length+3),
00576D ED5B F3 5E 00       B  1048    				ld de,(fs_file_transfer_length)
005772 FD19                B  1049    				add iy,de						005774 CE00                B  1050    				adc a,0
005776 DD3E1C              B  1051    				ld (ix+01ch),iy					005779 DD771F              B  1052    				ld (ix+01fh),a					00577C 30 04               B  1053    				jr nc,nfsizeok
00577E 3EC7                B  1054    				ld a,0c7h						005780 B7                  B  1055    				or a
005781 C9                  B  1056    				ret
                           B  1057    
005782 11000000            B  1058    nfsizeok		ld de,0
005786 DD5E1A              B  1059    				ld e,(ix+01ah)					005789 DD561B              B  1060    				ld d,(ix+01bh)					00578C ED53 F9 5E 00       B  1061    				ld (fs_file_working_cluster),de
005791 CD 34 5E 00         B  1062    				call fs_write_sector			005795 D8                  B  1063    				ret c
005796 7A                  B  1064    				ld a,d
005797 B3                  B  1065    				or e
005798 20 35               B  1066    				jr nz,apenclch					                           B  1067    				
00579A CD 67 5A 00         B  1068    				call fs_find_free_cluster		00579E D8                  B  1069    				ret c
00579F C0                  B  1070    				ret nz
0057A0 2A 09 5F 00         B  1071    				ld hl,(fs_free_cluster)
0057A4 22 F9 5E 00         B  1072    				ld (fs_file_working_cluster),hl
0057A8 11FFFF00            B  1073    				ld de,0ffffh
0057AC CD DF 5C 00         B  1074    				call update_fat_entry_for_clust
0057B0 D8                  B  1075    				ret c
                           B  1076    			
0057B1 CD FE 5D 00         B  1077    				call restore_sector_lba			0057B5 CD 0B 5E 00         B  1078    				call fs_read_sector
0057B9 D8                  B  1079    				ret c
0057BA DD2A 0F 5F 00       B  1080    				ld ix,(fs_fname_in_sector_addr)
0057BF ED5B F9 5E 00       B  1081    				ld de,(fs_file_working_cluster)
0057C4 DD731A              B  1082    				ld (ix+01ah),e
0057C7 DD721B              B  1083    				ld (ix+01bh),d
0057CA CD 34 5E 00         B  1084    				call fs_write_sector			0057CE D8                  B  1085    				ret c
                           B  1086    				
                           B  1087    					
0057CF 2A F9 5E 00         B  1088    apenclch		ld hl,(fs_file_working_cluster)
0057D3 CD B3 5C 00         B  1089    				call get_fat_entry_for_cluster
0057D7 D8                  B  1090    				ret c
0057D8 CD 5A 5A 00         B  1091    				call fs_compare_hl_fff8
0057DC 30 1C               B  1092    				jr nc,atlclif
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 233


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0A.asm
0057DE 22 F9 5E 00         B  1093    				ld (fs_file_working_cluster),hl
0057E2 01000000            B  1094    				ld bc,0
0057E6 3A AC 5E 00         B  1095    				ld a,(fs_cluster_size)
0057EA CB27                B  1096    				sla a
0057EC 47                  B  1097    				ld b,a
0057ED 2A EF 5E 00         B  1098    				ld hl,(fs_existing_file_length)
0057F1 AF                  B  1099    				xor a							0057F2 ED42                B  1100    				sbc hl,bc						0057F4 22 EF 5E 00         B  1101    				ld (fs_existing_file_length),hl
0057F8 18 D5               B  1102    				jr apenclch
                           B  1103    				
0057FA ED4B EF 5E 00       B  1104    atlclif			ld bc,(fs_existing_file_length)
0057FF CB38                B  1105    				srl b				
005801 48                  B  1106    				ld c,b							005802 3A AC 5E 00         B  1107    				ld a,(fs_cluster_size)
005806 91                  B  1108    				sub c
005807 47                  B  1109    				ld b,a							005808 28 79               B  1110    				jr z,fs_sfncl					                           B  1111    				
00580A 2A F9 5E 00         B  1112    				ld hl,(fs_file_working_cluster)
00580E 79                  B  1113    				ld a,c
00580F CD 8A 5D 00         B  1114    				call cluster_and_offset_to_lba
005813 CD 0B 5E 00         B  1115    				call fs_read_sector
005817 D8                  B  1116    				ret c
005818 C5                  B  1117    				push bc							                           B  1118    				
005819 11000000            B  1119    				ld de,0
00581D 3A EF 5E 00         B  1120    				ld a,(fs_existing_file_length)
005821 5F                  B  1121    				ld e,a
005822 3A F0 5E 00         B  1122    				ld a,(fs_existing_file_length+1
005826 E601                B  1123    				and 1
005828 57                  B  1124    				ld d,a							005829 21000200            B  1125    				ld hl,512	
00582D AF                  B  1126    				xor a
00582E ED52                B  1127    				sbc hl,de						005830 E5                  B  1128    				push hl
005831 C1                  B  1129    				pop bc							005832 21000800            B  1130    				ld hl,sector_buffer
005836 19                  B  1131    				add hl,de
005837 EB                  B  1132    				ex de,hl						005838 7C                  B  1133    				ld a,h			
005839 B5                  B  1134    				or l
00583A 20 04               B  1135    				jr nz,fs_dcsb					00583C CD 8F 5B 00         B  1136    fs_dbfil		call fs_clear_sector_buffer
005840 2A FC 5E 00         B  1137    fs_dcsb			ld hl,(fs_ez80_address)			005844 EDA0                B  1138    fs_cbsb			ldi								005846 7C                  B  1139    				ld a,h							005847 B5                  B  1140    				or l
005848 20 0D               B  1141    				jr nz,fs_srcadok
00584A 22 FC 5E 00         B  1142    				ld (fs_ez80_address),hl
00584E 3A FE 5E 00         B  1143    				ld a,(fs_ez80_address+2)
005852 B7                  B  1144    				or a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 234


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0A.asm
005853 CA C2 58 00         B  1145    				jp z,fs_mem_error
005857 CD 13 5D 00         B  1146    fs_srcadok		call transfer_length_countdown
00585B 28 54               B  1147    				jr z,fs_lbof					00585D 78                  B  1148    fs_sadok		ld a,b							00585E B1                  B  1149    				or c
00585F 20 E3               B  1150    				jr nz,fs_cbsb					                           B  1151    
005861 22 FC 5E 00         B  1152    				ld (fs_ez80_address),hl			005865 C1                  B  1153    				pop bc							005866 79                  B  1154    				ld a,c
005867 2A F9 5E 00         B  1155    				ld hl,(fs_file_working_cluster)
00586B CD 8A 5D 00         B  1156    				call cluster_and_offset_to_lba
00586F CD 34 5E 00         B  1157    				call fs_write_sector			005873 D8                  B  1158    				ret c							005874 0C                  B  1159    				inc c							005875 05                  B  1160    				dec b
005876 28 0B               B  1161    				jr z,fs_sfncl					005878 C5                  B  1162    fs_sfns			push bc				
005879 01000200            B  1163    				ld bc,512						00587D 11000800            B  1164    				ld de,sector_buffer				005881 18 B9               B  1165    				jr fs_dbfil						                           B  1166    				
005883 CD 67 5A 00         B  1167    fs_sfncl		call fs_find_free_cluster		005887 D8                  B  1168    				ret c							005888 C0                  B  1169    				ret nz							005889 2A F9 5E 00         B  1170    				ld hl,(fs_file_working_cluster)
00588D ED5B 09 5F 00       B  1171    				ld de,(fs_free_cluster)
005892 CD DF 5C 00         B  1172    				call update_fat_entry_for_clust
005896 D8                  B  1173    				ret c
005897 2A 09 5F 00         B  1174    				ld hl,(fs_free_cluster)
00589B 22 F9 5E 00         B  1175    				ld (fs_file_working_cluster),hl
00589F 11FFFF00            B  1176    				ld de,0ffffh
0058A3 CD DF 5C 00         B  1177    				call update_fat_entry_for_clust
0058A7 D8                  B  1178    				ret c
0058A8 3A AC 5E 00         B  1179    				ld a,(fs_cluster_size)
0058AC 47                  B  1180    				ld b,a							0058AD 0E00                B  1181    				ld c,0							0058AF 18 C7               B  1182    				jr fs_sfns						                           B  1183    				
0058B1 C1                  B  1184    fs_lbof			pop bc
0058B2 79                  B  1185    				ld a,c							0058B3 2A F9 5E 00         B  1186    				ld hl,(fs_file_working_cluster)
0058B7 CD 8A 5D 00         B  1187    				call cluster_and_offset_to_lba
0058BB CD 34 5E 00         B  1188    				call fs_write_sector	
0058BF D8                  B  1189    				ret c
0058C0 AF                  B  1190    				xor a							0058C1 C9                  B  1191    				ret
                           B  1192    
                           B  1193    
0058C2 3EC8                B  1194    fs_mem_error	ld a,0c8h						0058C4 C1                  B  1195    fs_flerr		pop bc
0058C5 B7                  B  1196    				or a							Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 235


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0A.asm
0058C6 C9                  B  1197    				ret			
                           B  1198    
                           B  1199    ;----------------------------------------------
                           B  1200    
0058C7                     B  1201    fs_erase_file_command
                           B  1202    
                           B  1203    
0058C7 CD A3 5B 00         B  1204    				call fs_find_filename			0058CB D8                  B  1205    				ret c
0058CC C0                  B  1206    				ret nz
                           B  1207    				
0058CD DDCB0B66            B  1208    				bit 4,(ix+0bh)					0058D1 28 04               B  1209    				jr z,okdelf
0058D3 3EC6                B  1210    				ld a,0c6h						0058D5 B7                  B  1211    				or a
0058D6 C9                  B  1212    				ret
                           B  1213    				
0058D7 DDE5                B  1214    okdelf			push ix
0058D9 E1                  B  1215    				pop hl
0058DA C3 C3 56 00         B  1216    				jp fs_delco						                           B  1217    					
                           B  1218    
                           B  1219    ;----------------------------------------------
                           B  1220    
                           B  1221    
0058DE                     B  1222    fs_rename_command
                           B  1223    
0058DE CD A3 5B 00         B  1224    				call fs_find_filename			0058E2 D8                  B  1225    				ret c							0058E3 FEC2                B  1226    				cp 0c2h							0058E5 28 04               B  1227    				jr z,fs_nfnok					0058E7 3EC9                B  1228    				ld a,0c9h						0058E9 B7                  B  1229    				or a
0058EA C9                  B  1230    				ret
                           B  1231    			
0058EB 21 C3 5E 00         B  1232    fs_nfnok		ld hl,fs_sought_filename		0058EF 11 DB 5E 00         B  1233    				ld de,fs_filename_buffer
0058F3 010B0000            B  1234    				ld bc,11
0058F7 EDB0                B  1235    				ldir
0058F9 21 CF 5E 00         B  1236    				ld hl,fs_alt_filename			0058FD 11 C3 5E 00         B  1237    				ld de,fs_sought_filename
005901 010B0000            B  1238    				ld bc,11
005905 EDB0                B  1239    				ldir
005907 CD A3 5B 00         B  1240    				call fs_find_filename			00590B D8                  B  1241    				ret c
00590C FEC2                B  1242    				cp 0c2h
00590E C8                  B  1243    				ret z							                           B  1244    				
00590F DDE5                B  1245    				push ix
005911 D1                  B  1246    				pop de
005912 21 DB 5E 00         B  1247    				ld hl,fs_filename_buffer	 	005916 010B0000            B  1248    				ld bc,11
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 236


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0A.asm
00591A EDB0                B  1249    				ldir							00591C CD 34 5E 00         B  1250    				call fs_write_sector			                           B  1251    				
005920 AF                  B  1252    fs_rndone		xor a
005921 C9                  B  1253    				ret
                           B  1254    				
                           B  1255    
                           B  1256    ;----------------------------------------------
                           B  1257    
                           B  1258    
005922                     B  1259    fs_goto_first_dir_entry
                           B  1260    
005922 CD 56 1B 00         B  1261    				call fs_get_dir_cluster
005926 ED53 12 5F 00       B  1262    				ld (fs_dir_entry_cluster),de
00592B AF                  B  1263    				xor a
00592C 32 18 5F 00         B  1264    				ld (fs_dir_entry_sector),a		005930 11000000            B  1265    				ld de,0
005934 ED53 15 5F 00       B  1266    				ld (fs_dir_entry_line_offset),d
                           B  1267    				
                           B  1268    
                           B  1269    
005939                     B  1270    fs_get_dir_entry
                           B  1271    
                           B  1272    ; No input parameters.
                           B  1273    ;
                           B  1274    ; Returns HL    = Location of null terminated f
                           B  1275    ;         IX:IY = Length of file (if applicable
                           B  1276    ;         B     = File flag (1 = directory, 0 =
                           B  1277    ;         A     = Error code
                           B  1278    ;         Carry = Set if hardware error encount
                           B  1279    
                           B  1280    
005939 3A 18 5F 00         B  1281    				ld a,(fs_dir_entry_sector)		00593D 4F                  B  1282    				ld c,a
00593E 2A 12 5F 00         B  1283    				ld hl,(fs_dir_entry_cluster)	005942 CD 8A 5D 00         B  1284    				call cluster_and_offset_to_lba
                           B  1285    			
005946 7C                  B  1286    				ld a,h							005947 B5                  B  1287    				or l							005948 20 09               B  1288    				jr nz,nr_read					00594A 2A B6 5E 00         B  1289    				ld hl,(fs_root_dir_position)	00594E 79                  B  1290    				ld a,c
00594F CD D0 5D 00         B  1291    				call set_absolute_lba
                           B  1292    				
005953 CD 0B 5E 00         B  1293    nr_read			call fs_read_sector				005957 D8                  B  1294    				ret c							                           B  1295    				
005958 ED5B 15 5F 00       B  1296    				ld de,(fs_dir_entry_line_offset
00595D DD210008 00         B  1297    dscan_int_loop	ld ix,sector_buffer
005962 DD19                B  1298    				add ix,de
005964 DD7E00              B  1299    ds_int_loop		ld a,(ix)
005967 B7                  B  1300    				or a							Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 237


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0A.asm
005968 28 0E               B  1301    				jr z,fs_dir_entry_free		
00596A FEE5                B  1302    				cp 0e5h							00596C 28 0A               B  1303    				jr z,fs_dir_entry_free	
00596E FE05                B  1304    				cp 05h							005970 28 06               B  1305    				jr z,fs_dir_entry_free	
005972 DDCB0B5E            B  1306    				bit 3,(ix+0bh)					005976 28 0D               B  1307    				jr z,fs_dir_entry_in_use		                           B  1308    
005978                     B  1309    fs_dir_entry_free
                           B  1310    
005978 EB                  B  1311    				ex de,hl
005979 11200000            B  1312    				ld de,32
00597D 19                  B  1313    				add hl,de
00597E EB                  B  1314    				ex de,hl
00597F CB4A                B  1315    				bit 1,d
005981 28 DA               B  1316    				jr z,dscan_int_loop
005983 18 54               B  1317    				jr dscan_new_sect
                           B  1318    
005985                     B  1319    fs_dir_entry_in_use
                           B  1320    				
005985 ED53 15 5F 00       B  1321    				ld (fs_dir_entry_line_offset),d
00598A DDE5                B  1322    				push ix
00598C E1                  B  1323    				pop hl
00598D CD 7C 11 00         B  1324    				call os_clear_output_line
005991 0608                B  1325    				ld b,8							005993 11 8F 6C 00         B  1326    				ld de,output_line
005997 7E                  B  1327    dcopyn			ld a,(hl)
005998 FE20                B  1328    				cp ' '							00599A 28 02               B  1329    				jr z,digchar
00599C 12                  B  1330    				ld (de),a
00599D 13                  B  1331    				inc de
00599E 23                  B  1332    digchar			inc hl
00599F 10 F6               B  1333    				djnz dcopyn
0059A1 7E                  B  1334    				ld a,(hl)						0059A2 FE20                B  1335    				cp ' '							0059A4 28 0A               B  1336    				jr z,dirnoex
0059A6 3E2E                B  1337    				ld a,'.'						0059A8 12                  B  1338    				ld (de),a
0059A9 13                  B  1339    				inc de	
0059AA 01030000            B  1340    				ld bc,3							0059AE EDB0                B  1341    				ldir
0059B0 AF                  B  1342    dirnoex			xor a 
0059B1 12                  B  1343    				ld (de),a						                           B  1344    				
0059B2 47                  B  1345    				ld b,a
0059B3 DDCB0B66            B  1346    				bit 4,(ix+0bh)					0059B7 28 01               B  1347    				jr z,fs_fniaf		
0059B9 04                  B  1348    				inc b							0059BA DD171C              B  1349    fs_fniaf		ld de,(ix+01ch)					0059BD DD4E1F              B  1350    				ld c,(ix+01fh)
0059C0 21 8F 6C 00         B  1351    				ld hl,output_line				0059C4 AF                  B  1352    				xor a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 238


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0A.asm
0059C5 C9                  B  1353    				ret
                           B  1354    
                           B  1355    
                           B  1356    
                           B  1357    
0059C6                     B  1358    fs_goto_next_dir_entry
                           B  1359    
0059C6 11200000            B  1360    				ld de,32
0059CA 2A 15 5F 00         B  1361    				ld hl,(fs_dir_entry_line_offset
0059CE 19                  B  1362    				add hl,de
0059CF 22 15 5F 00         B  1363    				ld (fs_dir_entry_line_offset),h
0059D3 CB4C                B  1364    				bit 1,h
0059D5 CA 39 59 00         B  1365    				jp z,fs_get_dir_entry
                           B  1366    
0059D9 21000000            B  1367    dscan_new_sect	ld hl,0				
0059DD 22 15 5F 00         B  1368    				ld (fs_dir_entry_line_offset),h
                           B  1369    			
0059E1 21 18 5F 00         B  1370    				ld hl,fs_dir_entry_sector
0059E5 34                  B  1371    				inc (hl)						                           B  1372    			
0059E6 ED5B 12 5F 00       B  1373    				ld de,(fs_dir_entry_cluster)
0059EB 7A                  B  1374    				ld a,d
0059EC B3                  B  1375    				or e							0059ED 20 0B               B  1376    				jr nz,nonroot2
0059EF 3A BC 5E 00         B  1377    				ld a,(fs_root_dir_sectors)
0059F3 BE                  B  1378    				cp (hl)
0059F4 28 23               B  1379    				jr z,endofdir			
0059F6 C3 39 59 00         B  1380    				jp fs_get_dir_entry
                           B  1381    												0059FA 3A AC 5E 00         B  1382    nonroot2		ld a,(fs_cluster_size)		
0059FE BE                  B  1383    				cp (hl)							0059FF C2 39 59 00         B  1384    				jp nz,fs_get_dir_entry
005A03 3600                B  1385    				ld (hl),0						005A05 2A 12 5F 00         B  1386    				ld hl,(fs_dir_entry_cluster)
005A09 CD B3 5C 00         B  1387    				call get_fat_entry_for_cluster
005A0D 22 12 5F 00         B  1388    				ld (fs_dir_entry_cluster),hl
005A11 CD 5A 5A 00         B  1389    				call fs_compare_hl_fff8			005A15 DA 39 59 00         B  1390    				jp c,fs_get_dir_entry
                           B  1391    	
005A19 3ED2                B  1392    endofdir		ld a,0d2h
005A1B B7                  B  1393    				or a							005A1C C9                  B  1394    				ret	
                           B  1395    				
                           B  1396    ;----------------------------------------------
                           B  1397    
005A1D                     B  1398    fs_get_volume_label
                           B  1399    
                           B  1400    
                           B  1401    ; On return HL = volume label
                           B  1402    
                           B  1403    
005A1D 2A B6 5E 00         B  1404    				ld hl,(fs_root_dir_position)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 239


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0A.asm
005A21 0E00                B  1405    				ld c,0
005A23 AF                  B  1406    gvl_nrsec		xor a
005A24 CD E1 5D 00         B  1407    				call set_abs_lba_and_read_secto
005A28 D8                  B  1408    				ret c
005A29 0610                B  1409    				ld b,16							005A2B DD210008 00         B  1410    				ld ix,sector_buffer
005A30 DD7E0B              B  1411    find_vl			ld a,(ix+0bh)
005A33 FE08                B  1412    				cp 08h
005A35 28 1A               B  1413    				jr z,got_label
005A37 ED3220              B  1414    				lea ix,ix+32					005A3A 10 F4               B  1415    				djnz find_vl					005A3C 23                  B  1416    				inc hl
005A3D 0C                  B  1417    				inc c
005A3E 3A BC 5E 00         B  1418    				ld a,(fs_root_dir_sectors)		005A42 B9                  B  1419    				cp c							005A43 20 DE               B  1420    				jr nz,gvl_nrsec
                           B  1421    			
005A45 CD FB 52 00         B  1422    				call fs_read_partition_bootsect
005A49 D8                  B  1423    				ret c
005A4A B7                  B  1424    				or a
005A4B C0                  B  1425    				ret nz
005A4C DD212B08 00         B  1426    				ld ix,sector_buffer+02bh
                           B  1427    				
005A51 DD360B00            B  1428    got_label		ld (ix+0bh),0					005A55 DDE5                B  1429    				push ix
005A57 E1                  B  1430    				pop hl
005A58 AF                  B  1431    				xor a
005A59 C9                  B  1432    				ret
                           B  1433    				
                           B  1434    				
                           B  1435    ;----------------------------------------------
                           B  1436    ; Internal subroutines
                           B  1437    ;----------------------------------------------
                           B  1438    
005A5A                     B  1439    fs_compare_hl_fff8
                           B  1440    
                           B  1441    ;INPUT HL = value to compare with fff8
                           B  1442    ;OUTPUT CARRY set if < $fff8, ZERO FLAG set if 
                           B  1443    	
                           B  1444    	
005A5A E5                  B  1445    				push hl
005A5B D5                  B  1446    				push de
005A5C 11F8FF00            B  1447    				ld de,0fff8h			
005A60 B7                  B  1448    				or a							005A61 52ED52              B  1449    				sbc.s hl,de						005A64 D1                  B  1450    				pop de
005A65 E1                  B  1451    				pop hl
005A66 C9                  B  1452    				ret
                           B  1453    
                           B  1454    ;----------------------------------------------
                           B  1455    
                           B  1456    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 240


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0A.asm
005A67                     B  1457    fs_find_free_cluster
                           B  1458    	
005A67 DD210000 00         B  1459    				ld ix,0							005A6C ED5B B0 5E 00       B  1460    				ld de,(fs_fat1_position)		005A71 AF                  B  1461    				xor a				
005A72 32 05 5F 00         B  1462    fs_ffcl2		ld (fs_working_sector),a	
005A76 D5                  B  1463    				push de
005A77 E1                  B  1464    				pop hl
005A78 3A 05 5F 00         B  1465    				ld a,(fs_working_sector)
005A7C CD E1 5D 00         B  1466    				call set_abs_lba_and_read_secto
005A80 D8                  B  1467    				ret c
005A81 21000800            B  1468    				ld hl,sector_buffer
005A85 0600                B  1469    				ld b,0
005A87 7E                  B  1470    fs_ffcl1		ld a,(hl)						005A88 23                  B  1471    				inc hl
005A89 B6                  B  1472    				or (hl)
005A8A 23                  B  1473    				inc hl
005A8B 28 14               B  1474    				jr z,fs_gotfc
005A8D DD23                B  1475    				inc ix
005A8F 10 F6               B  1476    				djnz fs_ffcl1
                           B  1477    				
005A91 2A BD 5E 00         B  1478    				ld hl,(fs_sectors_per_fat)
005A95 3A 05 5F 00         B  1479    				ld a,(fs_working_sector)		005A99 3C                  B  1480    				inc a				
005A9A BD                  B  1481    				cp l		
005A9B 20 D5               B  1482    				jr nz,fs_ffcl2					005A9D 3EC1                B  1483    fs_dfull		ld a,c1h						005A9F B7                  B  1484    				or a							005AA0 C9                  B  1485    				ret
                           B  1486    			
005AA1 DDE5                B  1487    fs_gotfc		push ix							005AA3 E1                  B  1488    				pop hl							005AA4 2B                  B  1489    				dec hl							005AA5 2B                  B  1490    				dec hl							005AA6 ED5B C0 5E 00       B  1491    				ld de,(fs_max_data_clusters)
005AAB AF                  B  1492    				xor a
005AAC 52ED52              B  1493    				sbc.s hl,de						005AAF 30 EC               B  1494    				jr nc,fs_dfull
                           B  1495    			
005AB1 DD22 09 5F 00       B  1496    				ld (fs_free_cluster),ix
005AB6 AF                  B  1497    				xor a
005AB7 C9                  B  1498    				ret
                           B  1499    	
                           B  1500    	
                           B  1501    ;----------------------------------------------
                           B  1502    	
                           B  1503    	
005AB8                     B  1504    fs_find_free_dir_entry
                           B  1505    
                           B  1506    
                           B  1507    ; OUTPUT IX start of 32 byte dir entry in secto
                           B  1508    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 241


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0A.asm
                           B  1509    			
005AB8 CD 56 1B 00         B  1510    				call fs_get_dir_cluster			005ABC EB                  B  1511    				ex de,hl
005ABD 22 F9 5E 00         B  1512    ffenxtclu		ld (fs_file_working_cluster),hl
005AC1 AF                  B  1513    				xor a
005AC2 32 05 5F 00         B  1514    				ld (fs_working_sector),a
                           B  1515    			
005AC6 2A B6 5E 00         B  1516    ffenxtsec		ld hl,(fs_root_dir_position)	005ACA 3A 05 5F 00         B  1517    				ld a,(fs_working_sector)
005ACE CD D0 5D 00         B  1518    				call set_absolute_lba
                           B  1519    				
005AD2 CD 56 1B 00         B  1520    				call fs_get_dir_cluster			005AD6 7A                  B  1521    				ld a,d
005AD7 B3                  B  1522    				or e
005AD8 28 0C               B  1523    				jr z,at_rootd
005ADA 2A F9 5E 00         B  1524    				ld hl,(fs_file_working_cluster)
005ADE 3A 05 5F 00         B  1525    				ld a,(fs_working_sector)
005AE2 CD 8A 5D 00         B  1526    				call cluster_and_offset_to_lba
                           B  1527    				
005AE6 CD 0B 5E 00         B  1528    at_rootd		call fs_read_sector
005AEA D8                  B  1529    				ret c
005AEB 0610                B  1530    				ld b,16							005AED 11200000            B  1531    				ld de,32
005AF1 DD210008 00         B  1532    				ld ix,sector_buffer
005AF6 DD7E00              B  1533    scdirfe			ld a,(ix)						005AF9 B7                  B  1534    				or a
005AFA 28 65               B  1535    				jr z,got_fde
005AFC FEE5                B  1536    				cp 0e5h
005AFE 28 61               B  1537    				jr z,got_fde
005B00 DD19                B  1538    				add ix,de						005B02 10 F2               B  1539    				djnz scdirfe					                           B  1540    				
005B04 21 05 5F 00         B  1541    				ld hl,fs_working_sector			005B08 34                  B  1542    				inc (hl)
                           B  1543    				
005B09 CD 56 1B 00         B  1544    				call fs_get_dir_cluster			005B0D 7A                  B  1545    				ld a,d
005B0E B3                  B  1546    				or e
005B0F 20 0B               B  1547    				jr nz,ffenotroo
005B11 3A BC 5E 00         B  1548    				ld a,(fs_root_dir_sectors)		005B15 BE                  B  1549    				cp (hl)							005B16 20 AE               B  1550    				jr nz,ffenxtsec
005B18 3EC3                B  1551    fenotfnd		ld a,0c3h						005B1A B7                  B  1552    				or a
005B1B C9                  B  1553    				ret
                           B  1554    			
005B1C 3A AC 5E 00         B  1555    ffenotroo		ld a,(fs_cluster_size)			005B20 BE                  B  1556    				cp (hl)
005B21 20 A3               B  1557    				jr nz,ffenxtsec
005B23 2A F9 5E 00         B  1558    				ld hl,(fs_file_working_cluster)
005B27 CD B3 5C 00         B  1559    				call get_fat_entry_for_cluster	005B2B D8                  B  1560    				ret c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 242


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0A.asm
005B2C CD 5A 5A 00         B  1561    				call fs_compare_hl_fff8			005B30 38 8B               B  1562    				jr c,ffenxtclu
                           B  1563    			
005B32 CD 67 5A 00         B  1564    				call fs_find_free_cluster		005B36 D8                  B  1565    				ret c							005B37 C0                  B  1566    				ret nz							005B38 ED5B 09 5F 00       B  1567    				ld de,(fs_free_cluster)
005B3D 2A F9 5E 00         B  1568    				ld hl,(fs_file_working_cluster)
005B41 CD DF 5C 00         B  1569    				call update_fat_entry_for_clust
005B45 D8                  B  1570    				ret c
005B46 EB                  B  1571    				ex de,hl						005B47 11FFFF00            B  1572    				ld de,0ffffh
005B4B CD DF 5C 00         B  1573    				call update_fat_entry_for_clust
005B4F D8                  B  1574    				ret c
                           B  1575    			
005B50 2A 09 5F 00         B  1576    				ld hl,(fs_free_cluster)			005B54 CD 63 5B 00         B  1577    				call fs_clear_cluster			005B58 D8                  B  1578    				ret c
005B59 2A 09 5F 00         B  1579    				ld hl,(fs_free_cluster)			005B5D C3 BD 5A 00         B  1580    				jp ffenxtclu					                           B  1581    			
005B61 AF                  B  1582    got_fde			xor a
005B62 C9                  B  1583    				ret
                           B  1584    					
                           B  1585    
                           B  1586    ;----------------------------------------------
                           B  1587    
005B63                     B  1588    fs_clear_cluster
                           B  1589    
                           B  1590    ;INPUT HL = cluster to clear
                           B  1591    
005B63 22 06 5F 00         B  1592    				ld (fs_working_cluster),hl
                           B  1593    			
005B67 CD 8F 5B 00         B  1594    				call fs_clear_sector_buffer
                           B  1595    					
005B6B AF                  B  1596    				xor a				
005B6C 32 05 5F 00         B  1597    				ld (fs_working_sector),a		005B70 3A 05 5F 00         B  1598    wipeclulp		ld a,(fs_working_sector)		005B74 2A 06 5F 00         B  1599    				ld hl,(fs_working_cluster)		005B78 CD 8A 5D 00         B  1600    				call cluster_and_offset_to_lba	005B7C CD 34 5E 00         B  1601    				call fs_write_sector
005B80 D8                  B  1602    				ret c
005B81 21 05 5F 00         B  1603    				ld hl,fs_working_sector
005B85 34                  B  1604    				inc (hl)
005B86 3A AC 5E 00         B  1605    				ld a,(fs_cluster_size)
005B8A BE                  B  1606    				cp (hl)
005B8B 20 E3               B  1607    				jr nz,wipeclulp
005B8D AF                  B  1608    				xor a
005B8E C9                  B  1609    				ret
                           B  1610    			
                           B  1611    			
005B8F                     B  1612    fs_clear_sector_buffer
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 243


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0A.asm
                           B  1613    			
005B8F E5                  B  1614    				push hl
005B90 D5                  B  1615    				push de
005B91 C5                  B  1616    				push bc
005B92 21000800            B  1617    				ld hl,sector_buffer			
005B96 01000200            B  1618    				ld bc,512				
005B9A AF                  B  1619    				xor a				
005B9B CD 7C 16 00         B  1620    				call os_bchl_memfill	
005B9F C1                  B  1621    				pop bc
005BA0 D1                  B  1622    				pop de
005BA1 E1                  B  1623    				pop hl
005BA2 C9                  B  1624    				ret
                           B  1625    				
                           B  1626    
                           B  1627    	
                           B  1628    ;----------------------------------------------
                           B  1629    	
005BA3                     B  1630    fs_find_filename
                           B  1631    
005BA3 AF                  B  1632    				xor a
                           B  1633    
005BA4                     B  1634    fs_search	
                           B  1635    				
005BA4 32 20 5F 00         B  1636    				ld (fs_search_type),a
                           B  1637    			
                           B  1638    ; OUTPUT IX start of 32 byte dir entry
                           B  1639    			
005BA8 CD 56 1B 00         B  1640    				call fs_get_dir_cluster
005BAC ED53 F9 5E 00       B  1641    ffnnxtclu		ld (fs_file_working_cluster),de
005BB1 AF                  B  1642    				xor a
005BB2 32 05 5F 00         B  1643    				ld (fs_working_sector),a
                           B  1644    			
005BB6 2A B6 5E 00         B  1645    ffnnxtsec		ld hl,(fs_root_dir_position)	005BBA 3A 05 5F 00         B  1646    				ld a,(fs_working_sector)
005BBE CD D0 5D 00         B  1647    				call set_absolute_lba
                           B  1648    				
005BC2 CD 56 1B 00         B  1649    				call fs_get_dir_cluster			005BC6 7A                  B  1650    				ld a,d
005BC7 B3                  B  1651    				or e
005BC8 28 0C               B  1652    				jr z,at_rootd2
005BCA 2A F9 5E 00         B  1653    				ld hl,(fs_file_working_cluster)
005BCE 3A 05 5F 00         B  1654    				ld a,(fs_working_sector)
005BD2 CD 8A 5D 00         B  1655    				call cluster_and_offset_to_lba	                           B  1656    				
005BD6 CD 0B 5E 00         B  1657    at_rootd2		call fs_read_sector
005BDA D8                  B  1658    				ret c
005BDB 0E10                B  1659    				ld c,16							005BDD DD210008 00         B  1660    				ld ix,sector_buffer
005BE2 DDE5                B  1661    ndirentr		push ix
005BE4 D1                  B  1662    				pop de
005BE5 3A 20 5F 00         B  1663    				ld a,(fs_search_type)
005BE9 B7                  B  1664    				or a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 244


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0A.asm
005BEA 28 1E               B  1665    				jr z,fs_ststr
                           B  1666    			
005BEC DD7E00              B  1667    				ld a,(ix)						005BEF FE80                B  1668    				cp 080h							005BF1 30 35               B  1669    				jr nc,fnnotsame
005BF3 FE20                B  1670    				cp 020h
005BF5 38 31               B  1671    				jr c,fnnotsame
005BF7 ED5B 1D 5F 00       B  1672    				ld de,(fs_stash_dir_block)		005BFC DD7E1A              B  1673    				ld a,(ix+01ah)
005BFF BB                  B  1674    				cp e
005C00 20 26               B  1675    				jr nz,fnnotsame
005C02 DD7E1B              B  1676    				ld a,(ix+01bh)
005C05 BA                  B  1677    				cp d
005C06 28 1E               B  1678    				jr z,fs_found
005C08 18 1E               B  1679    				jr fnnotsame
                           B  1680    				
005C0A FD21 C3 5E 00       B  1681    fs_ststr		ld iy,fs_sought_filename		005C0F 060B                B  1682    				ld b,11							005C11 1A                  B  1683    cmpfnlp			ld a,(de)						005C12 CD 70 13 00         B  1684    				call os_uppercasify				005C16 6F                  B  1685    				ld l,a
005C17 FD7E00              B  1686    				ld a,(iy)
005C1A CD 70 13 00         B  1687    				call os_uppercasify
005C1E BD                  B  1688    				cp l				
005C1F 20 07               B  1689    				jr nz,fnnotsame
005C21 FD23                B  1690    				inc iy
005C23 13                  B  1691    				inc de
005C24 10 EB               B  1692    				djnz cmpfnlp
005C26 AF                  B  1693    fs_found		xor a							005C27 C9                  B  1694    				ret
                           B  1695    			
005C28 11200000            B  1696    fnnotsame		ld de,32						005C2C DD19                B  1697    				add ix,de
005C2E 0D                  B  1698    				dec c
005C2F 20 B1               B  1699    				jr nz,ndirentr					                           B  1700    				
005C31 21 05 5F 00         B  1701    				ld hl,fs_working_sector			005C35 34                  B  1702    				inc (hl)
                           B  1703    				
005C36 CD 56 1B 00         B  1704    				call fs_get_dir_cluster			005C3A 7A                  B  1705    				ld a,d
005C3B B3                  B  1706    				or e
005C3C 20 0D               B  1707    				jr nz,notrootdir
005C3E 3A BC 5E 00         B  1708    				ld a,(fs_root_dir_sectors)		005C42 BE                  B  1709    				cp (hl)							005C43 C2 B6 5B 00         B  1710    				jp nz,ffnnxtsec
005C47 3EC2                B  1711    fnnotfnd		ld a,0c2h						005C49 B7                  B  1712    				or a
005C4A C9                  B  1713    				ret
                           B  1714    			
005C4B                     B  1715    notrootdir
                           B  1716    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 245


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0A.asm
005C4B 3A AC 5E 00         B  1717    				ld a,(fs_cluster_size)			005C4F BE                  B  1718    				cp (hl)
005C50 C2 B6 5B 00         B  1719    				jp nz,ffnnxtsec
                           B  1720    				
005C54 2A F9 5E 00         B  1721    				ld hl,(fs_file_working_cluster)
005C58 CD B3 5C 00         B  1722    				call get_fat_entry_for_cluster
005C5C D8                  B  1723    				ret c
005C5D CD 5A 5A 00         B  1724    				call fs_compare_hl_fff8			005C61 30 E4               B  1725    				jr nc,fnnotfnd					005C63 EB                  B  1726    				ex de,hl						005C64 C3 AC 5B 00         B  1727    				jp ffnnxtclu					                           B  1728    				
                           B  1729    
                           B  1730    ;----------------------------------------------
                           B  1731    
005C68                     B  1732    fs_hl_to_alt_filename
                           B  1733    
005C68 11 CF 5E 00         B  1734    				ld de,fs_alt_filename
005C6C 18 04               B  1735    				jr hltofngo
                           B  1736    
                           B  1737    
005C6E                     B  1738    fs_hl_to_filename
                           B  1739    
                           B  1740    ;INPUT: HL = address of filename (null / space 
                           B  1741    ;OUTPUT HL = address of first character after f
                           B  1742    ;        C = number of characters in filename
                           B  1743    
005C6E 11 C3 5E 00         B  1744    				ld de,fs_sought_filename
005C72 CD 7D 5D 00         B  1745    hltofngo		call fs_clear_filename			005C76 D5                  B  1746    				push de			
005C77 DDE1                B  1747    				pop ix							                           B  1748    				
005C79 0E00                B  1749    				ld c,0
005C7B 0608                B  1750    				ld b,8
005C7D 7E                  B  1751    csfnlp2			ld a,(hl)						005C7E B7                  B  1752    				or a
005C7F C8                  B  1753    				ret z							005C80 FE20                B  1754    				cp 32
005C82 C8                  B  1755    				ret z							005C83 FE2F                B  1756    				cp 02fh
005C85 C8                  B  1757    				ret z							005C86 FE2E                B  1758    				cp '.'
005C88 28 16               B  1759    				jr z,dofn_ext					005C8A 12                  B  1760    				ld (de),a
005C8B 13                  B  1761    				inc de
005C8C 23                  B  1762    				inc hl
005C8D 0C                  B  1763    				inc c							005C8E 10 ED               B  1764    				djnz csfnlp2					005C90 7E                  B  1765    find_ext		ld a,(hl)
005C91 FE2E                B  1766    				cp '.'							005C93 28 0B               B  1767    				jr z,dofn_ext	
005C95 FE20                B  1768    				cp ' '							Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 246


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0A.asm
005C97 C8                  B  1769    				ret z
005C98 FE2F                B  1770    				cp 02fh
005C9A C8                  B  1771    				ret z
005C9B B7                  B  1772    				or a
005C9C C8                  B  1773    				ret z
005C9D 23                  B  1774    				inc hl
005C9E 18 F0               B  1775    				jr find_ext
                           B  1776    				
005CA0 23                  B  1777    dofn_ext		inc hl							005CA1 0603                B  1778    				ld b,3				
005CA3 7E                  B  1779    fnextlp			ld a,(hl)						005CA4 B7                  B  1780    				or a
005CA5 C8                  B  1781    				ret z							005CA6 FE20                B  1782    				cp 32
005CA8 C8                  B  1783    				ret z
005CA9 DD7708              B  1784    				ld (ix+8),a
005CAC DD23                B  1785    				inc ix
005CAE 23                  B  1786    				inc hl
005CAF 0C                  B  1787    				inc c
005CB0 10 F1               B  1788    				djnz fnextlp
005CB2 C9                  B  1789    				ret
                           B  1790    				
                           B  1791    ;----------------------------------------------
                           B  1792    
                           B  1793    
005CB3                     B  1794    get_fat_entry_for_cluster
                           B  1795    
                           B  1796    ; INPUT: HL = cluster in question, OUTPUT: HL =
                           B  1797    
005CB3 C5                  B  1798    				push bc
005CB4 D5                  B  1799    				push de
005CB5 01000000            B  1800    				ld bc,0
005CB9 4D                  B  1801    				ld c,l
005CBA 7C                  B  1802    				ld a,h
005CBB 2A B0 5E 00         B  1803    				ld hl,(fs_fat1_position)
005CBF CD E1 5D 00         B  1804    				call set_abs_lba_and_read_secto
005CC3 38 17               B  1805    				jr c,hwerr
005CC5 DDE5                B  1806    				push ix
005CC7 DD210008 00         B  1807    				ld ix,sector_buffer
005CCC DD09                B  1808    				add ix,bc
005CCE DD09                B  1809    				add ix,bc
005CD0 21000000            B  1810    				ld hl,0
005CD4 DD6E00              B  1811    				ld l,(ix)
005CD7 DD6601              B  1812    				ld h,(ix+1)
005CDA DDE1                B  1813    				pop ix
005CDC D1                  B  1814    hwerr			pop de
005CDD C1                  B  1815    				pop bc
005CDE C9                  B  1816    				ret
                           B  1817    
                           B  1818    
                           B  1819    ;----------------------------------------------
                           B  1820    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 247


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0A.asm
                           B  1821    
005CDF                     B  1822    update_fat_entry_for_cluster
                           B  1823    
                           B  1824    ; INPUT: HL = cluster in question
                           B  1825    ;        DE = new value to put in FAT tables
                           B  1826    			
005CDF C5                  B  1827    				push bc
005CE0 E5                  B  1828    				push hl
005CE1 01000000            B  1829    				ld bc,0
005CE5 4D                  B  1830    				ld c,l
005CE6 7C                  B  1831    				ld a,h
005CE7 2A B0 5E 00         B  1832    				ld hl,(fs_fat1_position)		005CEB CD FF 5C 00         B  1833    				call fat_upd
005CEF 38 0B               B  1834    				jr c,fup_end
                           B  1835    			
005CF1 E1                  B  1836    				pop hl
005CF2 E5                  B  1837    				push hl
005CF3 7C                  B  1838    				ld a,h
005CF4 2A B3 5E 00         B  1839    				ld hl,(fs_fat2_position)		005CF8 CD FF 5C 00         B  1840    				call fat_upd
005CFC E1                  B  1841    fup_end			pop hl
005CFD C1                  B  1842    				pop bc
005CFE C9                  B  1843    				ret
                           B  1844    			
                           B  1845    			
005CFF CD E1 5D 00         B  1846    fat_upd			call set_abs_lba_and_read_secto
005D03 38 0D               B  1847    				jr c,ufehwerr
005D05 21000800            B  1848    				ld hl,sector_buffer
005D09 09                  B  1849    				add hl,bc
005D0A 09                  B  1850    				add hl,bc
005D0B 73                  B  1851    				ld (hl),e
005D0C 23                  B  1852    				inc hl
005D0D 72                  B  1853    				ld (hl),d
005D0E CD 34 5E 00         B  1854    				call fs_write_sector
005D12 C9                  B  1855    ufehwerr		ret
                           B  1856    				
                           B  1857    	
                           B  1858    ;----------------------------------------------
                           B  1859    
005D13                     B  1860    transfer_length_countdown
                           B  1861    
005D13 E5                  B  1862    				push hl							005D14 C5                  B  1863    				push bc
                           B  1864    			
005D15 0604                B  1865    				ld b,4
005D17 21 E7 5E 00         B  1866    				ld hl,fs_file_pointer			005D1B 34                  B  1867    fpinclp			inc (hl)
005D1C 20 03               B  1868    				jr nz,fs_fpino
005D1E 23                  B  1869    				inc hl
005D1F 10 FA               B  1870    				djnz fpinclp
                           B  1871    				
005D21 2A F3 5E 00         B  1872    fs_fpino		ld hl,(fs_file_transfer_length)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 248


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0A.asm
005D25 2B                  B  1873    				dec hl
005D26 22 F3 5E 00         B  1874    				ld (fs_file_transfer_length),hl
005D2A 01000000            B  1875    				ld bc,0
005D2E B7                  B  1876    				or a
005D2F ED4A                B  1877    				adc hl,bc						                           B  1878    				
005D31 C1                  B  1879    				pop bc
005D32 E1                  B  1880    				pop hl
005D33 C9                  B  1881    				ret
                           B  1882    
                           B  1883    ;----------------------------------------------
                           B  1884    
005D34                     B  1885    fs_get_current_dir_name
                           B  1886    
                           B  1887    ;returns current dir name - location at HL
                           B  1888    
005D34 CD 56 1B 00         B  1889    				call fs_get_dir_cluster			005D38 7A                  B  1890    				ld a,d
005D39 B3                  B  1891    				or e
005D3A 20 10               B  1892    				jr nz,fs_dnnr
005D3C 21 3D 6A 00         B  1893    				ld hl,vol_txt+1					005D40 3A 38 6A 00         B  1894    				ld a,(current_volume)
005D44 C630                B  1895    				add a,030h
005D46 32 40 6A 00         B  1896    				ld (vol_txt+4),a
005D4A AF                  B  1897    				xor a
005D4B C9                  B  1898    				ret
                           B  1899    					
005D4C ED53 1D 5F 00       B  1900    fs_dnnr			ld (fs_stash_dir_block),de
005D51 CD AF 53 00         B  1901    				call fs_parent_dir_command		005D55 D8                  B  1902    				ret c
005D56 B7                  B  1903    				or a
005D57 C0                  B  1904    				ret nz
005D58 3E01                B  1905    				ld a,1
005D5A CD A4 5B 00         B  1906    				call fs_search					005D5E D8                  B  1907    				ret c
005D5F C0                  B  1908    				ret nz
                           B  1909    					
005D60 DDE5                B  1910    fs_gdbn			push ix
005D62 E1                  B  1911    				pop hl
005D63 060B                B  1912    				ld b,11							005D65 7E                  B  1913    ntdirn			ld a,(hl)
005D66 FE20                B  1914    				cp ' '
005D68 28 03               B  1915    				jr z,rdirfsp
005D6A 23                  B  1916    				inc hl
005D6B 10 F8               B  1917    rdirnsp			djnz ntdirn
                           B  1918    				
005D6D 3600                B  1919    rdirfsp			ld (hl),0
005D6F DDE5                B  1920    				push ix
005D71 ED5B 1D 5F 00       B  1921    				ld de,(fs_stash_dir_block)
005D76 CD 62 1B 00         B  1922    				call fs_update_dir_cluster		005D7A E1                  B  1923    				pop hl	
005D7B AF                  B  1924    				xor a							Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 249


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0A.asm
005D7C C9                  B  1925    				ret
                           B  1926    
                           B  1927    			
                           B  1928    ;----------------------------------------------
                           B  1929    
005D7D                     B  1930    fs_clear_filename
                           B  1931    
005D7D D5                  B  1932    				push de							005D7E C5                  B  1933    				push bc
005D7F 060C                B  1934    				ld b,12
005D81 3E20                B  1935    				ld a,' '
005D83 12                  B  1936    clrfnlp			ld (de),a
005D84 13                  B  1937    				inc de
005D85 10 FC               B  1938    				djnz clrfnlp
005D87 C1                  B  1939    				pop bc
005D88 D1                  B  1940    				pop de
005D89 C9                  B  1941    				ret
                           B  1942    				
                           B  1943    ;----------------------------------------------
                           B  1944    
                           B  1945    
005D8A                     B  1946    cluster_and_offset_to_lba
                           B  1947    
                           B  1948    ; INPUT: HL = cluster, A = sector offset, OUTPU
                           B  1949    
005D8A C5                  B  1950    				push bc
005D8B D5                  B  1951    				push de
005D8C E5                  B  1952    				push hl
005D8D DDE5                B  1953    				push ix
                           B  1954    
005D8F 2B                  B  1955    				dec hl							005D90 2B                  B  1956    				dec hl							005D91 11000000            B  1957    				ld de,0							005D95 01000000            B  1958    				ld bc,0
005D99 5F                  B  1959    				ld e,a
005D9A 3A AC 5E 00         B  1960    				ld a,(fs_cluster_size)			005D9E CB3F                B  1961    caotllp			srl a
005DA0 28 03               B  1962    				jr z,clusdone
005DA2 29                  B  1963    				add hl,hl						005DA3 18 F9               B  1964    				jr caotllp
                           B  1965    			
005DA5 ED4B B9 5E 00       B  1966    clusdone		ld bc,(fs_data_area)			005DAA 09                  B  1967    				add hl,bc						005DAB 19                  B  1968    				add hl,de						                           B  1969    				
005DAC E5                  B  1970    add_ptn_offset	push hl							005DAD CD 90 1B 00         B  1971    				call fs_calc_volume_offset
005DB1 DD21 64 6A 00       B  1972    				ld ix,volume_mount_list
005DB6 DD19                B  1973    				add ix,de
005DB8 E1                  B  1974    				pop hl
005DB9 DD0708              B  1975    				ld bc,(ix+08h)					005DBC DD7E0B              B  1976    				ld a,(ix+0bh)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 250


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0A.asm
005DBF 09                  B  1977    				add hl,bc
005DC0 CE00                B  1978    				adc a,0
005DC2 22 1B 6C 00         B  1979    				ld (sector_lba0),hl				005DC6 32 1E 6C 00         B  1980    				ld (sector_lba3),a				                           B  1981    				
005DCA DDE1                B  1982    				pop ix
005DCC E1                  B  1983    				pop hl
005DCD D1                  B  1984    				pop de
005DCE C1                  B  1985    				pop bc
005DCF C9                  B  1986    				ret
                           B  1987    				
                           B  1988    
                           B  1989    ;----------------------------------------------
                           B  1990    
005DD0                     B  1991    set_absolute_lba
                           B  1992    
                           B  1993    ; set A to sector offset, HL to sectors from st
                           B  1994    
005DD0 C5                  B  1995    				push bc							005DD1 D5                  B  1996    				push de							005DD2 E5                  B  1997    				push hl							005DD3 DDE5                B  1998    				push ix							005DD5 01000000            B  1999    				ld bc,0
005DD9 11000000            B  2000    				ld de,0
005DDD 5F                  B  2001    				ld e,a
005DDE 19                  B  2002    				add hl,de
005DDF 18 CB               B  2003    				jr add_ptn_offset		
                           B  2004    				
                           B  2005    
005DE1                     B  2006    set_abs_lba_and_read_sector
                           B  2007    
005DE1 CD D0 5D 00         B  2008    				call set_absolute_lba
005DE5 C3 0B 5E 00         B  2009    				jp fs_read_sector
                           B  2010    				
                           B  2011    ;----------------------------------------------
                           B  2012    
                           B  2013    
005DE9                     B  2014    backup_sector_lba
                           B  2015    
005DE9 C5                  B  2016    				push bc
005DEA D5                  B  2017    				push de
005DEB E5                  B  2018    				push hl
005DEC 21 1B 6C 00         B  2019    				ld hl,sector_lba0
005DF0 11 21 5F 00         B  2020    				ld de,fs_backed_up_sector_lba0
005DF4 01040000            B  2021    lbabur			ld bc,4
005DF8 EDB0                B  2022    				ldir
005DFA E1                  B  2023    				pop hl
005DFB D1                  B  2024    				pop de
005DFC C1                  B  2025    				pop bc
005DFD C9                  B  2026    				ret
                           B  2027    
                           B  2028    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 251


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0A.asm
005DFE                     B  2029    restore_sector_lba
                           B  2030    
005DFE C5                  B  2031    				push bc
005DFF D5                  B  2032    				push de
005E00 E5                  B  2033    				push hl
005E01 21 21 5F 00         B  2034    				ld hl,fs_backed_up_sector_lba0
005E05 11 1B 6C 00         B  2035    				ld de,sector_lba0
005E09 18 E9               B  2036    				jr lbabur	
                           B  2037    					
                           B  2038    ;----------------------------------------------
                           B  2039    
005E0B                     B  2040    fs_read_sector
                           B  2041    			
005E0B C5                  B  2042    				push bc
005E0C D5                  B  2043    				push de
005E0D E5                  B  2044    				push hl
005E0E DDE5                B  2045    				push ix
005E10 FDE5                B  2046    				push iy
005E12 01040000            B  2047    				ld bc,04h						005E16 CD 45 5E 00         B  2048    				call sector_access_redirect
005E1A 2A 1B 6C 00         B  2049    secaccend		ld hl,(sector_lba0)
005E1E 22 25 5F 00         B  2050    				ld (fs_sector_last_read_lba0),h
005E22 3A 1E 6C 00         B  2051    				ld a,(sector_lba0+3)
005E26 32 28 5F 00         B  2052    				ld (fs_sector_last_read_lba0+3)
005E2A FDE1                B  2053    				pop iy
005E2C DDE1                B  2054    				pop ix
005E2E E1                  B  2055    				pop hl
005E2F D1                  B  2056    				pop de
005E30 C1                  B  2057    				pop bc
005E31 C8                  B  2058    				ret z							005E32 37                  B  2059    				scf								005E33 C9                  B  2060    				ret								                           B  2061    
                           B  2062    
005E34                     B  2063    fs_write_sector	
                           B  2064    				
005E34 C5                  B  2065    				push bc
005E35 D5                  B  2066    				push de
005E36 E5                  B  2067    				push hl
005E37 DDE5                B  2068    				push ix
005E39 FDE5                B  2069    				push iy
005E3B 01080000            B  2070    				ld bc,08h						005E3F CD 45 5E 00         B  2071    				call sector_access_redirect
005E43 18 D5               B  2072    				jr secaccend
                           B  2073    
                           B  2074    
                           B  2075    
005E45                     B  2076    sector_access_redirect
                           B  2077    
                           B  2078    	
005E45 3A 39 6A 00         B  2079    				ld a,(current_driver)			005E49 CD 28 1B 00         B  2080    				call locate_driver_base			Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 252


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0A.asm
005E4D EB                  B  2081    				ex de,hl
005E4E 09                  B  2082    				add hl,bc						005E4F E9                  B  2083    				jp (hl)
                           B  2084    
                           B  2085    ;----------------------------------------------
                           B  2086    
005E50                     B  2087    fs_is_same_sector_in_buffer
                           B  2088    				
005E50 E5                  B  2089    				push hl
005E51 D5                  B  2090    				push de
005E52 2A 1B 6C 00         B  2091    				ld hl,(sector_lba0)
005E56 ED5B 25 5F 00       B  2092    				ld de,(fs_sector_last_read_lba0
005E5B AF                  B  2093    				xor a
005E5C ED52                B  2094    				sbc hl,de
005E5E 20 0A               B  2095    				jr nz,fs_notsamsec
005E60 3A 1E 6C 00         B  2096    				ld a,(sector_lba0+3)
005E64 6F                  B  2097    				ld l,a
005E65 3A 28 5F 00         B  2098    				ld a,(fs_sector_last_read_lba0+
005E69 BD                  B  2099    				cp l
005E6A D1                  B  2100    fs_notsamsec	pop de
005E6B E1                  B  2101    				pop hl
005E6C C9                  B  2102    				ret
                           B  2103    
                           B  2104    ;----------------------------------------------
                           B  2105    	
005E6D                     B  2106    bootsector_stub
                           B  2107    
005E6D EB3C904D 53444F53   B  2108    				db  0EBh,03Ch,090h,04Dh,053h,04
005E75 352E3000 02004000 
005E7D 02000200 00F8F200   B  2109    				db  002h,000h,002h,000h,000h,0F
005E85 3F00FF00 00000000 
005E8D 00000000 000029C4   B  2110    				db  000h,000h,000h,000h,000h,00
005E95 E636984E 4F204E41 
005E9D 4D452020 20204641   B  2111    				db  04Dh,045h,020h,020h,020h,02
005EA5 54313620 2020C3 
                           B  2112    
                           B  2113    ;----------------------------------------------
                           B  2114    
005EAC 00                  B  2115    fs_cluster_size				db 0
005EAD 000000              B  2116    fs_bytes_per_cluster		dw24 0
005EB0 000000              B  2117    fs_fat1_position			dw24 0		; offse
005EB3 000000              B  2118    fs_fat2_position			dw24 0		; offse
005EB6 000000              B  2119    fs_root_dir_position		dw24 0		; offse
005EB9 000000              B  2120    fs_data_area				dw24 0		; offse
005EBC 00                  B  2121    fs_root_dir_sectors			db 0
                           B  2122    
005EBD 000000              B  2123    fs_sectors_per_fat			dw24 0
005EC0 000000              B  2124    fs_max_data_clusters		dw24 0
                           B  2125    
005EC3 00 00 00 00 00 00   B  2126    fs_sought_filename			blkb 12,0
005EC9 00 00 00 00 00 00 
005ECF 00 00 00 00 00 00   B  2127    fs_alt_filename				blkb 12,0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 253


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v0A.asm
005ED5 00 00 00 00 00 00 
005EDB 00 00 00 00 00 00   B  2128    fs_filename_buffer			blkb 12,0
005EE1 00 00 00 00 00 00 
                           B  2129    
005EE7 00000000            B  2130    fs_file_pointer				dw 0,0		; 32 bi
005EEB 00000000            B  2131    fs_file_length				dw 0,0		; 32 bi
005EEF 00000000            B  2132    fs_existing_file_length 	dw 0,0		; 32 bi
                           B  2133    
005EF3 000000              B  2134    fs_file_transfer_length		dw24 0		; 24 bi
                           B  2135    
005EF6 000000              B  2136    fs_file_start_cluster		dw24 0
005EF9 000000              B  2137    fs_file_working_cluster		dw24 0
                           B  2138    
005EFC 000000              B  2139    fs_ez80_address				dw24 0
005EFF 000000              B  2140    fs_ez80_working_address		dw24 0
                           B  2141    
005F02 000000              B  2142    fs_in_sector_offset			dw24 0
005F05 00                  B  2143    fs_working_sector			db 0
                           B  2144    
005F06 000000              B  2145    fs_working_cluster			dw24 0
005F09 000000              B  2146    fs_free_cluster				dw24 0
005F0C 000000              B  2147    fs_new_file_cluster			dw24 0
                           B  2148    
005F0F 000000              B  2149    fs_fname_in_sector_addr		dw24 0
                           B  2150    
005F12 000000              B  2151    fs_dir_entry_cluster		dw24 0
005F15 000000              B  2152    fs_dir_entry_line_offset	dw24 0
005F18 00                  B  2153    fs_dir_entry_sector			db 0
                           B  2154    
005F19 00                  B  2155    fs_filepointer_valid		db 0
005F1A 000000              B  2156    fs_sector_pos_cnt			dw24 0
                           B  2157    
005F1D 000000              B  2158    fs_stash_dir_block	 		dw24 0
                           B  2159    
005F20 00                  B  2160    fs_search_type				db 0
                           B  2161    
005F21 00000000            B  2162    fs_backed_up_sector_lba0	db 0,0,0,0
                           B  2163    
005F25 00000000            B  2164    fs_sector_last_read_lba0	db 0,0,0,0
                           B  2165    
005F29 000000              B  2166    partition_size				dw24 0			;24
005F2C 00000000            B  2167    partition_base				db 0,0,0,0		;32
                           B  2168    
                           B  2169    ;----------------------------------------------
                           B  2170    
                           A  3805    
                           A  3806    ;----------------------------------------------
                           A  3807    ; OS Data 
                           A  3808    ;----------------------------------------------
                           A  3809    
                           A  3810    
                           B     0    	include		'prose_data.asm'				Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 254


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B     1    ;**************
                           B     2    ;* PROSE DATA *
                           B     3    ;**************
                           B     4    
                           B     5    ;----------------------------------------------
                           B     6    ; kernal routine locations
                           B     7    ;----------------------------------------------
                           B     8    
005F30                     B     9    kernal_table
                           B    10    
005F30 1B1900              B    11    	dw24 ext_mount_volumes			;00		
005F33 C11800              B    12    	dw24 os_get_device_info			;01		
005F36 831700              B    13    	dw24 os_check_volume_format		;02		
005F39 B11B00              B    14    	dw24 ext_change_volume			;03		
005F3C D41800              B    15    	dw24 os_get_volume_info			;04		
005F3F 8E1700              B    16    	dw24 ext_format					;05		
005F42 B51700              B    17    	dw24 ext_make_dir				;06		
005F45 C31700              B    18    	dw24 ext_change_dir				;07		
005F48 D11700              B    19    	dw24 os_parent_dir				;08		
005F4B D71700              B    20    	dw24 os_root_dir				;09		
005F4E 1D1800              B    21    	dw24 ext_delete_dir				;0a		
005F51 171700              B    22    	dw24 ext_find_file				;0b		
005F54 311700              B    23    	dw24 ext_set_file_pointer		;0c		
005F57 2A1700              B    24    	dw24 os_set_load_length			;0d		
005F5A 441700              B    25    	dw24 ext_read_bytes_from_file	;0e		
005F5D DD1700              B    26    	dw24 ext_erase_file				;0f		
005F60 031800              B    27    	dw24 ext_rename_file			;10		
005F63 531700              B    28    	dw24 ext_create_file			;11		
005F66 641700              B    29    	dw24 ext_write_bytes_to_file	;12		
005F69 7F1B00              B    30    	dw24 fs_get_total_sectors		;13		
005F6C EB1700              B    31    	dw24 os_goto_first_dir_entry	;14		 
005F6F F11700              B    32    	dw24 os_get_dir_entry			;15		
005F72 F71700              B    33    	dw24 os_goto_next_dir_entry		;16		
005F75 2D1800              B    34    	dw24 ext_read_sector			;17		
005F78 5B1800              B    35    	dw24 ext_write_sector			;18		
005F7B EC1B00              B    36    	dw24 ext_file_sector_list		;19		
005F7E 561B00              B    37    	dw24 fs_get_dir_cluster			;1a		
005F81 621B00              B    38    	dw24 fs_update_dir_cluster		;1b		
005F84 FD1700              B    39    	dw24 os_get_current_dir_name	;1c		
                           B    40    
005F87 584D00              B    41    	dw24 os_wait_key_press			;1d		
005F8A B34D00              B    42    	dw24 os_get_key_press			;1e		
005F8D 3E1600              B    43    	dw24 os_get_key_mod_flags		;1f		
                           B    44    
005F90 E21800              B    45    	dw24 ext_serial_get_header		;20		
005F93 EF1800              B    46    	dw24 ext_serial_receive_file	;21		 
005F96 F81800              B    47    	dw24 ext_serial_send_file		;22		 
005F99 0A1900              B    48    	dw24 ext_serial_tx				;23		
005F9C 111900              B    49    	dw24 ext_serial_rx				;24		
                           B    50    
005F9F 5E1000              B    51    	dw24 ext_print_string			;25		
005FA2 124700              B    52    	dw24 hwsc_clear_screen			;26		
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 255


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005FA5 E24800              B    53    	dw24 hwsc_wait_vrt				;27		
005FA8 1A1500              B    54    	dw24 os_set_cursor_position		;28		
005FAB 511B00              B    55    	dw24 ext_plot_char				;29		
005FAE 841600              B    56    	dw24 ext_set_pen				;2a		
005FB1 911600              B    57    	dw24 ext_background_colours		;2b		
005FB4 DB4700              B    58    	dw24 hwsc_draw_cursor			;2c		
005FB7 8B1600              B    59    	dw24 os_get_pen					;2d		
005FBA 4D4700              B    60    	dw24 hwsc_scroll_up				;2e		
005FBD 9C4600              B    61    	dw24 os_set_video_hw_regs		;2f		
005FC0 441600              B    62    	dw24 os_get_vmode				;30			005FC3 2F4800              B    63    	dw24 hwsc_get_charmap_addr_xy	;31		
005FC6 3A1500              B    64    	dw24 os_get_cursor_position		;32		 
                           B    65    
005FC9 5D1C00              B    66    	dw24 ext_set_envar				;33		
005FCC 211C00              B    67    	dw24 ext_get_envar				;34		
005FCF B71C00              B    68    	dw24 ext_delete_envar			;35		
                           B    69    
005FD2 901500              B    70    	dw24 os_init_mouse				;36			005FD5 021600              B    71    	dw24 os_get_mouse_position		;37		
005FD8 D91500              B    72    	dw24 os_get_mouse_motion		;38		
                           B    73    
005FDB AA4900              B    74    	dw24 hwsc_time_delay			;39		
005FDE 2E1300              B    75    	dw24 ext_compare_strings		;3a		
005FE1 AD1100              B    76    	dw24 ext_hexbyte_to_ascii		;3b		
005FE4 E21100              B    77    	dw24 ext_ascii_to_hexword		;3c		
005FE7 371200              B    78    	dw24 ext_user_input				;3d		
                           B    79    
005FEA 8F4900              B    80    	dw24 hwsc_get_version			;3e		
005FED 041500              B    81    	dw24 os_dont_store_registers	;3f		
005FF0 E43900              B    82    	dw24 os_cmd_unused				;40 		005FF3 CD4900              B    83    	dw24 hwsc_read_rtc				;41     
005FF6 F54900              B    84    	dw24 hwsc_write_rtc				;42		 
005FF9 081D00              B    85    	dw24 os_get_keymap_location		;43		 
005FFC E53900              B    86    	dw24 os_get_mem_base			;44
005FFF 0E1D00              B    87    	dw24 ext_play_audio				;45
006002 244D00              B    88    	dw24 hwsc_disable_audio			;46
006005 2B4D00              B    89    	dw24 hwsc_get_joysticks			;47
006008 541600              B    90    	dw24 ext_set_vmode				;48
00600B EB1000              B    91    	dw24 ext_set_cursor_image		;49
00600E C14700              B    92    	dw24 hwsc_remove_cursor			;4a
006011 253600              B    93    	dw24 char_to_font				;4b
006014 081C00              B    94    	dw24 os_get_disk_sector_ptr		;4c
006017 B64900              B    95    	dw24 hwsc_set_timeout			;4d
00601A C74900              B    96    	dw24 hwsc_test_timeout			;4e
                           B    97    	
00601D 053A00              B    98    	dw24 ext_set_pointer			;4f
006020 893B00              B    99    	dw24 os_allocate_ram			;50
006023 B43B00              B   100    	dw24 os_deallocate_ram			;51
006026 F53900              B   101    	dw24 os_get_mem_top				;52
006029 0B4A00              B   102    	dw24 os_init_msec_counter		;53
00602C 424A00              B   103    	dw24 os_read_msec_counter		;54
00602F 9A3C00              B   104    	dw24 ext_parse_path				;55
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 256


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   105    	
                           B   106    ;----------------------------------------------
                           B   107    ; Non-packed Text Strings
                           B   108    ;----------------------------------------------
                           B   109    
006032 50524F53 4520666F   B   110    welcome_message			db "PROSE for EZ80P by 
00603A 7220455A 38305020 
006042 62792050 68696C20 
00604A 52757374 6F6E2032 
006052 3031310B 0B00 
006058 44726976 65733A0B   B   111    storage_txt				db "Drives:",11,0
006060 00 
006061 53544152 5455502E   B   112    startup_script_fn		db "STARTUP.PBF",0
006069 50424600 
00606D 2400                B   113    os_hex_prefix_txt		db "$",0
00606F 50524F53 45205665   B   114    os_version_txt			db "PROSE Ver: $",0		006077 723A2024 00 
00607C 414D4F45 42412056   B   115    hw_version_txt			db "AMOEBA Ver: $",0
006084 65723A20 2400 
00608A 202F2000            B   116    fwd_slash_txt			db " / ",0
00608E 4C6F6164 696E672E   B   117    loading_txt				db "Loading..",11,0
006096 2E0B00 
006099 53617669 6E672E2E   B   118    saving_txt				db "Saving..",11,0
0060A1 0B00 
0060A3 2E657A70 2000       B   119    ezp_txt					db ".ezp",32,0
0060A9 2E706266 2000       B   120    pbf_txt					db ".pbf",32,0
0060AF 0B4D6F72 653F0B0B   B   121    os_more_txt				db 11,"More?",11,11,0
0060B7 00 
0060B8 52656769 73746572   B   122    nmi_freeze_txt			db "Register Dump:"
0060C0 2044756D 703A 
0060C6 0B0B00              B   123    crlfx2_txt				db 11,11,0
0060C9 7800                B   124    rep_char_txt			db "x",0
0060CB 20746F20 00         B   125    to_txt					db " to ",0
0060D0 4552524F 5200       B   126    error_txt				db "ERROR",0
0060D6 494620              B   127    if_command_txt			db "IF "
0060D9 454E4420            B   128    end_command_txt			db "END "
0060DD 4F532052 45515549   B   129    hw_warn_txt1			db "OS REQUIRES AMOEBA 
0060E5 52455320 414D4F45 
0060ED 42412056 3A 
0060F2 2D2D2D2D 00         B   130    hw_warn_txt2			db "----",0
0060F7 54686973 2077696C   B   131    pmq_txt					db "This will overwrite
0060FF 6C206F76 65727772 
006107 69746520 70726F74 
00610F 65637465 64205241 
006117 4D2E2043 6F6E7469 
00611F 6E756520 28792F6E 
006127 293F200B 00 
00612C 4F555478 7800       B   132    envar_out_n_txt			db "OUTxx",0
006132 50415448 00         B   133    path_txt				db "PATH",0
006137 564F4C78 3A2000     B   134    chvol_txt				db "VOLx: ",0
                           B   135    
                           B   136    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 257


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   137    ; Packed text section
                           B   138    ;----------------------------------------------
                           B   139    
00613E 00444542 5547       B   140    dictionary				db 0,"DEBUG"			006144 002D2D2D 2D2D       B   141    						db 0,"-----"			00614A 00494F              B   142    						db 0,"IO"				00614D 002D2D              B   143    						db 0,"--"				006150 004D4953 43         B   144    						db 0,"MISC"				006155 002D2D2D 2D         B   145    						db 0,"----"				00615A 00616464 72         B   146    						db 0,"addr"				00615F 0050524F 5345       B   147    						db 0,"PROSE"			006165 00612062 2063       B   148    						db 0,"a b c"			00616B 00416464 72657373   B   149    						db 0,"Address"			006173 00427974 6573       B   150    						db 0,"Bytes"			006179 00457865 63757461   B   151    						db 0,"Executable"		006181 626C65 
006184 0048756E 74         B   152    						db 0,"Hunt"				006189 0046696C 6C         B   153    						db 0,"Fill"				00618E 00476F74 6F         B   154    						db 0,"Goto"				                           B   155    						
006193 0053686F 77         B   156    						db 0,"Show"				006198 00435055            B   157    						db 0,"CPU"				00619C 00526567 69737465   B   158    						db 0,"Registers"		0061A4 7273 
0061A6 004173              B   159    						db 0,"As"				0061A9 00415343 4949       B   160    						db 0,"ASCII"			0061AF 00436C65 6172       B   161    						db 0,"Clear"			0061B5 00536372 65656E     B   162    						db 0,"Screen"			0061BC 00446973 61737365   B   163    						db 0,"Disassemble"		0061C4 6D626C65 
0061C8 00537769 746368     B   164    						db 0,"Switch"			0061CF 00436F70 79         B   165    						db 0,"Copy"				0061D4 00446576 696365     B   166    						db 0,"Device"			0061DB 00436861 6E6765     B   167    						db 0,"Change"			0061E2 00447269 7665       B   168    						db 0,"Drive"			0061E8 00446972            B   169    						db 0,"Dir"				0061EC 002F                B   170    						db 0,"/"				0061EE 00666E              B   171    						db 0,"fn"				                           B   172    						
0061F1 0044656C 657465     B   173    						db 0,"Delete"			0061F8 0046696C 65         B   174    						db 0,"File"				0061FD 00496E66 6F         B   175    						db 0,"Info"				006202 00564F4C 783A       B   176    						db 0,"VOLx:"			006208 004D616B 65         B   177    						db 0,"Make"				00620D 0052656D 6F756E74   B   178    						db 0,"Remount"			006215 00537461 7274       B   179    						db 0,"Start"			00621B 00576172 6E696E67   B   180    						db 0,"Warning!"			006223 21 
006224 00416C6C            B   181    						db 0,"All"				006228 0052656D 6F7665     B   182    						db 0,"Remove"			00622F 0052656E 616D65     B   183    						db 0,"Rename"			006236 004F72              B   184    						db 0,"Or"				Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 258


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
006239 00526563 65697665   B   185    						db 0,"Receive"			006241 00536176 65         B   186    						db 0,"Save"				006246 00547261 6E736D69   B   187    						db 0,"Transmit"			00624E 74 
00624F 004C6F61 64         B   188    						db 0,"Load"				                           B   189    						
006254 004F532F 4857       B   190    						db 0,"OS/HW"			00625A 00566572 73696F6E   B   191    						db 0,"Version"			006262 0070656E 20706170   B   192    						db 0,"pen paper"		00626A 6572 
00626C 803A                B   193    						db 80h,":"				00626E 813E                B   194    						db 81h,">"				006270 82534F55 4E44       B   195    						db 82h,"SOUND"			006276 00566F6C 756D6573   B   196    						db 0,"Volumes"			00627E 8343                B   197    						db 83h,"C"				006280 844344              B   198    						db 84h,"CD"				006283 85434C53            B   199    						db 85h,"CLS"			006287 8650454E            B   200    						db 86h,"PEN"			00628B 8744                B   201    						db 87h,"D"				00628D 8844454C            B   202    						db 88h,"DEL"			006291 89444952            B   203    						db 89h,"DIR"			006295 8A48                B   204    						db 8ah,"H"				006297 8B46                B   205    						db 8bh,"F"				                           B   206    						
006299 004F6E              B   207    						db 0,"On"				00629C 8C464F52 4D4154     B   208    						db 8ch,"FORMAT"			0062A3 0047                B   209    						db 0,"G"				0062A5 8D4C42              B   210    						db 8dh,"LB"				0062A8 8E4D                B   211    						db 8eh,"M"				0062AA 8F4D4F55 4E54       B   212    						db 8fh,"MOUNT"			0062B0 004265              B   213    						db 0,"Be"				0062B3 9052                B   214    						db 90h,"R"				0062B5 915244              B   215    						db 91h,"RD"				0062B8 92524E              B   216    						db 92h,"RN"				0062BB 935258              B   217    						db 93h,"RX"				0062BE 945342              B   218    						db 94h,"SB"				0062C1 9554                B   219    						db 95h,"T"				0062C3 965458              B   220    						db 96h,"TX"				0062C6 97564552 53         B   221    						db 97h,"VERS"			0062CB 00577269 7465       B   222    						db 0,"Write"			                           B   223    						
0062D1 004D656D 6F7279     B   224    						db 0,"Memory"			0062D8 00227478 7422       B   225    						db 0,22h,"txt",22h		0062DE 0057696C 6C         B   226    						db 0,"Will"				0062E3 00526174 65         B   227    						db 0,"Rate"				0062E8 0061                B   228    						db 0,"a"				0062EA 00507265 70         B   229    						db 0,"Prep"				0062EF 984D44              B   230    						db 98h,"MD"				0062F2 00447269 766573     B   231    						db 0,"Drives"			0062F9 006F6C64 666E       B   232    						db 0,"oldfn"			0062FF 006E6577 666E       B   233    						db 0,"newfn"			006305 006C656E            B   234    						db 0,"len"				Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 259


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
006309 00436F6C 6F757273   B   235    						db 0,"Colours"			006311 993F                B   236    						db 99h,"?"				006313 00436F6D 6D616E64   B   237    						db 0,"Commands"			00631B 73 
00631C 0020                B   238    						db 0," "				00631E 002D                B   239    						db 0,"-"				                           B   240    						
006320 00566F6C 756D65     B   241    						db 0,"Volume"			006327 0046756C 6C         B   242    						db 0,"Full"				00632C 004E6F74            B   243    						db 0,"Not"				006330 00466F75 6E64       B   244    						db 0,"Found"			006336 004C656E 677468     B   245    						db 0,"Length"			00633D 005A6572 6F         B   246    						db 0,"Zero"				006342 004F7574            B   247    						db 0,"Out"				006346 004F66              B   248    						db 0,"Of"				006349 0052616E 6765       B   249    						db 0,"Range"			00634F 00416C72 65616479   B   250    						db 0,"Already"			006357 00457869 737473     B   251    						db 0,"Exists"			00635E 004174              B   252    						db 0,"At"				006361 00526F6F 74         B   253    						db 0,"Root"				006366 004D6973 6D617463   B   254    						db 0,"Mismatch"			00636E 68 
00636F 00526571 75657374   B   255    						db 0,"Request"			006377 00446174 61         B   256    						db 0,"Data"				                           B   257    				
00637C 00454F46            B   258    						db 0,"EOF"				006380 00416674 6572       B   259    						db 0,"After"			006386 00556E6B 6E6F776E   B   260    						db 0,"Unknown"			00638E 00436F6D 6D616E64   B   261    						db 0,"Command"			006396 00426164            B   262    						db 0,"Bad"				00639A 00486578            B   263    						db 0,"Hex"				00639E 004E6F              B   264    						db 0,"No"				0063A1 0041626F 72746564   B   265    						db 0,"Aborted"			0063A9 00507265 73656E74   B   266    						db 0,"Present"			0063B1 00436865 636B7375   B   267    						db 0,"Checksum"			0063B9 6D 
0063BA 004C6F61 646564     B   268    						db 0,"Loaded"			0063C1 00436F6D 6D73       B   269    						db 0,"Comms"			0063C7 00457272 6F72       B   270    						db 0,"Error"			0063CD 00417267 756D656E   B   271    						db 0,"Arguments"		0063D5 7473 
0063D7 004C6F73 74         B   272    						db 0,"Lost"				                           B   273    						
0063DC 00                  B   274    						db 0
0063DD 46415431 36         B   275    fat16_txt				db "FAT16"				                           B   276    
0063E2 00536572 69616C     B   277    						db 0,"Serial"			0063E9 0054696D 65         B   278    						db 0,"Time"				0063EE 00466F6E 74         B   279    						db 0,"Font"				0063F3 00546F6F            B   280    						db 0,"Too"				0063F7 004C6F6E 67         B   281    						db 0,"Long"				0063FC 00446573 74696E61   B   282    						db 0,"Destination"		Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 260


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
006404 74696F6E 
006408 0053656C 65637465   B   283    						db 0,"Selected"			006410 64 
006411 00496E76 616C6964   B   284    						db 0,"Invalid"			006419 004D6973 73696E67   B   285    						db 0,"Missing"			006421 004F4B              B   286    						db 0,"OK"				006424 004F53              B   287    						db 0,"OS"				006427 0050726F 74656374   B   288    						db 0,"Protected"		00642F 6564 
006431 0041                B   289    						db 0,"A"				006433 004973              B   290    						db 0,"Is"				006436 00456D70 7479       B   291    						db 0,"Empty"			00643C 00456E64            B   292    						db 0,"End"				                           B   293    						
006440 0024                B   294    						db 0,"$"
006442 7878                B   295    hex_byte_txt			db "xx"					                           B   296    						
006444 00417070 656E64     B   297    						db 0,"Append"			00644B 003F                B   298    						db 0,"?"				00644D 0024                B   299    						db 0,"$"				00644F 00417761 6974696E   B   300    						db 0,"Awaiting"			006457 67 
006458 00526563 65697669   B   301    						db 0,"Receiving"		006460 6E67 
006462 0053656E 64696E67   B   302    						db 0,"Sending"			00646A 000B                B   303    						db 0,11					00646C 002E2E              B   304    						db 0,".."				00646F 004E616D 65         B   305    						db 0,"Name"				006474 00204279 746573     B   306    						db 0," Bytes"			00647B 00507265 7373       B   307    						db 0,"Press"			006481 00416E79            B   308    						db 0,"Any"				006485 004B6579            B   309    						db 0,"Key"				006489 00456E74 6572       B   310    						db 0,"Enter"			00648F 9A454348 4F         B   311    						db 9ah,"ECHO"			                           B   312    				
006494 0052756E            B   313    						db 0,"Run"				006498 00536372 697074     B   314    						db 0,"Script"			00649F 00594553            B   315    yes_txt					db 0,"YES" 				0064A3 00546F              B   316    						db 0,"To"				0064A6 00536574            B   317    						db 0,"Set"				0064AA 00436F6E 74696E75   B   318    						db 0,"Continue"			0064B2 65 
0064B3 004E6F6E 65         B   319    						db 0,"None"				0064B8 00447269 766572     B   320    						db 0,"Driver"			0064BF 9B3C                B   321    						db 9bh,"<"				0064C1 004E6577 6572       B   322    						db 0,"Newer"			0064C7 00526571 75697265   B   323    						db 0,"Required"			0064CF 64 
0064D0 00465047 4120636F   B   324    						db 0,"FPGA config"		0064D8 6E666967 
0064DC 00556E63 68616E67   B   325    						db 0,"Unchanged"		0064E4 6564 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 261


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
0064E6 006C6F63 206C656E   B   326    						db 0,"loc len [per vol 
0064EE 205B7065 7220766F 
0064F6 6C206368 616E7320 
0064FE 6C6F6F70 3F5D20 
006505 003E3E55 6E757365   B   327    						db 0,">>Unused<<"		00650D 643C3C 
006510 0070616C 65747465   B   328    						db 0,"palette"			                           B   329    						
006518 003F3F3F            B   330    						db 0,"???"				00651C 00456E61 626C65     B   331    						db 0,"Enable"			006523 004B6579 626F6172   B   332    						db 0,"Keyboard"			00652B 64 
00652C 00446574 65637465   B   333    						db 0,"Detected"			006534 64 
006535 004D6F75 7365       B   334    						db 0,"Mouse"			00653B 00536563 746F72     B   335    						db 0,"Sector"			006542 00496E63 6F727265   B   336    						db 0,"Incorrect"		00654A 6374 
00654C 9E564D4F 4445       B   337    						db 9eh,"VMODE"			006552 00566964 656F       B   338    						db 0,"Video"			006558 004D6F64 65         B   339    						db 0,"Mode"				00655D 9F464F4E 54         B   340    						db 9fh,"FONT"			006562 00416E64            B   341    						db 0,"And"				006566 00536176 696E67     B   342    						db 0,"Saving"			00656D 00556E73 7570706F   B   343    						db 0,"Unsupported"		006575 72746564 
006579 A0534554            B   344    						db 0a0h,"SET"			00657D 005B7661 723D7374   B   345    						db 0,"[var=string]"		006585 72696E67 5D 
                           B   346    
00658A 00456E76 6172       B   347    						db 0,"Envar"			006590 A1445A              B   348    						db 0a1h,"DZ"			006593 0041444C            B   349    						db 0,"ADL"				006597 005A3830            B   350    						db 0,"Z80"				00659B 00506C61 79         B   351    						db 0,"Play"				0065A0 00417564 696F       B   352    						db 0,"Audio"			0065A6 A2415641 494C       B   353    						db 0a2h,"AVAIL"			0065AC 00467265 65         B   354    						db 0,"Free"				0065B1 0043616E 6E6F74     B   355    						db 0,"Cannot"			0065B8 00416C6C 6F636174   B   356    						db 0,"Allocate"			0065C0 65 
0065C1 00416C6C 6F636174   B   357    						db 0,"Allocated"		0065C9 6564 
0065CB A34649              B   358    						db 0a3h,"FI"			0065CE 00546578 74         B   359    						db 0,"Text"				0065D3 00466F72 6D6174     B   360    						db 0,"Format"			0065DA 004F7665 72777269   B   361    						db 0,"Overwrite"		0065E2 7465 
                           B   362    						
0065E4 0001                B   363    						db 0,1					                           B   364    
                           B   365    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 262


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   366    
                           B   367    
                           B   368    
0065E6 2199696A 5F916F92   B   369    save_append_msg			db 021h,099h,069h,06ah,
0065EE 9700 
0065F0 2199696A 5FCE9297   B   370    overwrite_msg			db 021h,099h,069h,06ah,
0065F8 00 
0065F9 2F0A9300            B   371    os_loadaddress_msg 		db 02fh,00ah,093h,0		0065FD 21649300            B   372    os_filesize_msg			db 021h,064h,093h,0		006601 94219700            B   373    ser_rec_msg				db 094h,021h,097h,0		006605 956F9897 00         B   374    ser_rec2_msg			db 095h,06fh,098h,097h,
00660A 966F9897 00         B   375    ser_send_msg			db 096h,06fh,098h,097h,
00660F 9521BBBC 989700     B   376    ser_recsave_msg			db 095h,021h,0bbh,0bch,
006616 A77C9097 00         B   377    hw_err_msg				db 0a7h,07ch,090h,097h,
00661B 607C00              B   378    disk_err_msg			db 060h,07ch,0			00661E A1779797 00         B   379    script_aborted_msg		db 0a1h,077h,097h,097h,
006623 76B2B397 00         B   380    no_keyboard_msg			db 076h,0b2h,0b3h,097h,
                           B   381    
006628 9700                B   382    packed_help1				db 097h,0
00662A 0100                B   383    							db 001h,0			00662C 0200                B   384    							db 002h,0			00662E 3307095F 4F500B00   B   385    							db 033h,007h,009h,0
006636 3407515F 4F1400     B   386    							db 034h,007h,051h,0
00663D 37070707 5F195000   B   387    							db 037h,007h,007h,0
006645 3B075FC2 1700       B   388    							db 03bh,007h,05fh,0
00664B C1075FC3 1700       B   389    							db 0c1h,007h,05fh,0
006651 3F070754 5F0E5000   B   390    							db 03fh,007h,007h,0
006659 42075F0F 0A00       B   391    							db 042h,007h,05fh,0
00665F 3E070709 5F0D5000   B   392    							db 03eh,007h,007h,0
006667 44075F10 500B00     B   393    							db 044h,007h,05fh,0
00666E 475F1011 1200       B   394    							db 047h,05fh,010h,0
006674 4C075F10 50131400   B   395    							db 04ch,007h,05fh,0
                           B   396    	
00667C 9700                B   397    							db 097h,0
00667E 0300                B   398    							db 003h,0			006680 0400                B   399    							db 004h,0			006682 38231E1D 5F1B601E   B   400    							db 038h,023h,01eh,0
00668A 1D00 
00668C 3C1F5F20 2100       B   401    							db 03ch,01fh,05fh,0
006692 3D5F101D 00         B   402    							db 03dh,05fh,010h,0
006697 CB1F5F21 2200       B   403    							db 0cbh,01fh,05fh,0
00669D 411A995F 551C00     B   404    							db 041h,01ah,099h,0
0066A4 431F075F 2F2100     B   405    							db 043h,01fh,007h,0
0066AB 561D5F24 1D00       B   406    							db 056h,01dh,05fh,0
0066B1 455F2557 00         B   407    							db 045h,05fh,025h,0
0066B6 481D5F29 1D00       B   408    							db 048h,01dh,05fh,0
0066BC 4958595F 2A2100     B   409    							db 049h,058h,059h,0
0066C3 4A1F075F 2C2100     B   410    							db 04ah,01fh,007h,0
0066CA 4B1F075A 5F2D2100   B   411    							db 04bh,01fh,007h,0
0066D2 4D1F075A 5F2E2100   B   412    							db 04dh,01fh,007h,0
0066DA 235F1860 00         B   413    							db 023h,05fh,018h,0
                           B   414    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 263


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
0066DF 9700                B   415    							db 097h,0
0066E1 0500                B   416    							db 005h,0			0066E3 0600                B   417    							db 006h,0			0066E5 C65F10C7 5000       B   418    							db 0c6h,05fh,010h,0
0066EB 395F1516 00         B   419    							db 039h,05fh,015h,0
0066F0 9F515F10 CC00       B   420    							db 09fh,051h,05fh,0
0066F6 BA1F5F1B 8200       B   421    							db 0bah,01fh,05fh,0
0066FC 3A325F09 1B5B00     B   422    							db 03ah,032h,05fh,0
006703 BEBF5FA4 C000       B   423    							db 0beh,0bfh,05fh,0
006709 35AD5FC4 5013C500   B   424    							db 035h,0adh,05fh,0
006711 4E5F1030 3100       B   425    							db 04eh,05fh,010h,0
006717 B7095F1B B8B900     B   426    							db 0b7h,09h,5fh,01b
00671E 5C5F105D 00         B   427    							db 05ch,05fh,010h,0
006723 9700                B   428    							db 097h,0
006725 FF                  B   429    							db 0ffh
                           B   430    
                           B   431    
                           B   432    
                           B   433    
006726 1A1E00              B   434    os_cmd_locs					dw24 os_cmd_colon	006729 382E00              B   435    							dw24 os_cmd_gtr		00672C DF3600              B   436    							dw24 os_cmd_sound	00672F 201D00              B   437    							dw24 os_cmd_c		006732 8D1D00              B   438    							dw24 os_cmd_cd		006735 141E00              B   439    							dw24 os_cmd_cls		006738 853500              B   440    							dw24 os_cmd_pen		00673B 341E00              B   441    							dw24 os_cmd_d		                           B   442    					
00673E 952900              B   443    							dw24 os_cmd_del		006741 B92900              B   444    							dw24 os_cmd_dir		006744 662D00              B   445    							dw24 os_cmd_h		006747 0F2B00              B   446    							dw24 os_cmd_f		00674A 372B00              B   447    							dw24 os_cmd_format	00674D 6C2E00              B   448    							dw24 os_cmd_lb		006750 1D2F00              B   449    							dw24 os_cmd_m		006753 1F3500              B   450    							dw24 os_cmd_remount
                           B   451    
006756 8B2F00              B   452    							dw24 os_cmd_r		006759 BC3000              B   453    							dw24 os_cmd_rd		00675C E03000              B   454    							dw24 os_cmd_rn		00675F A03100              B   455    							dw24 os_cmd_rx		006762 113100              B   456    							dw24 os_cmd_sb		006765 CB3400              B   457    							dw24 os_cmd_t		006768 5F3400              B   458    							dw24 os_cmd_tx		00676B 2B3500              B   459    							dw24 os_cmd_vers	                           B   460    							
00676E 672F00              B   461    							dw24 os_cmd_md		006771 142E00              B   462    							dw24 os_cmd_help	006774 B73900              B   463    							dw24 os_cmd_echo	006777 833500              B   464    							dw24 os_cmd_ltn		00677A E43900              B   465    							dw24 os_cmd_unused	00677D E43900              B   466    							dw24 os_cmd_unused	Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 264


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
006780 A93500              B   467    							dw24 os_cmd_vmode	006783 B93500              B   468    							dw24 os_cmd_font	                           B   469    							
006786 503600              B   470    							dw24 os_cmd_set		006789 D23600              B   471    							dw24 os_cmd_dz		00678C 763700              B   472    							dw24 os_cmd_avail	00678F 083800              B   473    							dw24 os_cmd_fi		                           B   474    							
                           B   475    								
006792 00                  B   476    packed_msg_list				db 0				                           B   477    		
006793 606100              B   478    							db 060h,061h,0		006796 21626300            B   479    							db 021h,062h,063h,0
00679A 1D6100              B   480    							db 01dh,061h,0		00679D 628C1D00            B   481    							db 062h,08ch,01dh,0
0067A1 1D8D628E 00         B   482    							db 01dh,08dh,062h,0
0067A6 628C2100            B   483    							db 062h,08ch,021h,0
0067AA 21648D65 00         B   484    							db 021h,064h,08dh,0
0067AF 0A666768 00         B   485    							db 00ah,066h,067h,0
0067B4 2199696A 00         B   486    							db 021h,099h,069h,0
0067B9 696B6C00            B   487    							db 069h,06bh,06ch,0
                           B   488    					
0067BD 727300              B   489    							db 072h,073h,0		0067C0 877500              B   490    							db 087h,075h,0		0067C3 76219900            B   491    							db 076h,021h,099h,0
                           B   492    					
0067C7 87B500              B   493    							db 087h,0b5h,0		0067CA 797400              B   494    							db 079h,074h,0		0067CD 9A7A00              B   495    bytes_loaded_msg			db 09ah,07ah,0		0067D0 7B7C00              B   496    							db 07bh,07ch,0		0067D3 747D00              B   497    							db 074h,07dh,0		                           B   498    
0067D6 72CD00              B   499    format_err_msg				db 072h,0cdh,0		                           B   500    
0067D9 816600              B   501    							db 081h,066h,0		0067DC 21998384 00         B   502    							db 021h,099h,083h,0
0067E1 76260A00            B   503    							db 076h,026h,00ah,0
0067E5 76216400            B   504    							db 076h,021h,064h,0
0067E9 2D7700              B   505    							db 02dh,077h,0		0067EC 2D7C6B85 00         B   506    							db 02dh,07ch,06bh,0
0067F1 628C080C 00         B   507    							db 062h,08ch,08h,0c
0067F6 A9316708 AA00       B   508    							db 0a9h,031h,067h,0
0067FC 768F0A00            B   509    							db 076h,08fh,00ah,0
006800 76850A00            B   510    							db 076h,085h,00ah,0
                           B   511    					
006804 746800              B   512    							db 074h,068h,0		006807 887D00              B   513    							db 088h,07dh,0		00680A 8900                B   514    ok_msg						db 089h,0			                           B   515    					
00680C 876000              B   516    							db 087h,060h,0		00680F 1A627800            B   517    							db 01ah,062h,078h,0
                           B   518    					
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 265


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
006813 1D626300            B   519    							db 01dh,062h,063h,0
006817 7700                B   520    							db 077h,0			                           B   521    					
006819 21996D00            B   522    							db 021h,099h,06dh,0
00681D 8A508B00            B   523    							db 08ah,050h,08bh,0
006821 6F71706E 00         B   524    							db 06fh,071h,070h,0
006826 763600              B   525    no_vols_msg					db 076h,036h,0		006829 97A66300            B   526    none_found_msg				db 097h,0a6h,063h,0
                           B   527    							
00682D B62100              B   528    							db 0b6h,021h,0		006830 A9316708 AA00       B   529    							db 0a9h,031h,067h,0
006836 21AC00              B   530    							db 021h,0ach,0		                           B   531    							
006839 766F00              B   532    							db 076h,06fh,0		00683C 746F00              B   533    							db 074h,06fh,0		00683F 66676800            B   534    							db 066h,067h,068h,0
006843 BD1A00              B   535    							db 0bdh,01ah,0		006846 1A62B300            B   536    							db 01ah,062h,0b3h,0
00684A 1A7C00              B   537    							db 01ah,07ch,0		00684D 817C00              B   538    							db 081h,07ch,0		006850 C8C95000            B   539    							db 0c8h,0c9h,050h,0
006854 CA508B00            B   540    							db 0cah,050h,08bh,0
006858 B8508B00            B   541    							db 0b8h,050h,08bh,0
                           B   542    							
00685C FF                  B   543    							db 0ffh				                           B   544    
                           B   545    ;----------------------------------------------
                           B   546    
00685D                     B   547    kernal_error_code_translation
                           B   548    
00685D 242D2E14 08110F2A   B   549    					db 24h,2dh,2eh,14h, 08h,11h
006865 2F303132 331F34 
                           B   550    					
00686C                     B   551    fs_error_code_translation
                           B   552    
00686C 00010203 04050607   B   553    					db 00h,01h,02h,03h, 04h,05h
006874 08090A23 270D1321 
00687C 22232425 260E0000   B   554    					db 22h,23h,24h,25h, 26h,0eh
                           B   555    
                           B   556    
                           B   557    ;----------------------------------------------
                           B   558    ; Scancode to ASCII keymaps
                           B   559    ;----------------------------------------------
                           B   560    
                           C     0    include	'UK_keymap.asm'
006884                     C     1    keymap:
006884 00000000 00000000   C     2                    db 000h,000h,000h,000h,000h,000
00688C 00000000 00006000 
006894 00000000 00713100   C     3                    db 000h,000h,000h,000h,000h,071
00689C 00007A73 61773200 
0068A4 00637864 65343300   C     4                    db 000h,063h,078h,064h,065h,034
0068AC 00207666 74723500 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 266


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\UK_keymap.asm
0068B4 006E6268 67793600   C     5                    db 000h,06Eh,062h,068h,067h,079
0068BC 00006D6A 75373800 
0068C4 002C6B69 6F303900   C     6                    db 000h,02Ch,06Bh,069h,06Fh,030
0068CC 002E2F6C 3B702D00 
0068D4 00002700 5B3D0000   C     7                    db 000h,000h,027h,000h,05Bh,03D
0068DC 0000005D 00230000 
0068E4 005C0000 00000000   C     8                    db 000h,05Ch,000h,000h,000h,000
0068EC 00000000 00000000 
0068F4 AC000000 00000051   C     9                    db 0ACh,000h,000h,000h,000h,000
0068FC 21000000 5A534157 
006904 22000043 58444524   C    10                    db 022h,000h,000h,043h,058h,044
00690C A3000020 56465452 
006914 2500004E 42484759   C    11                    db 025h,000h,000h,04Eh,042h,048
00691C 5E000000 4D4A5526 
006924 2A00003C 4B494F29   C    12                    db 02Ah,000h,000h,03Ch,04Bh,049
00692C 2800003E 3F4C3A50 
006934 5F000000 40007B2B   C    13                    db 05Fh,000h,000h,000h,040h,000
00693C 00000000 007D007E 
006944 0000007C 00000000   C    14                    db 000h,000h,000h,07Ch,000h,000
00694C 00000000 00000000 
006954 00000000 00000000   C    15                    db 000h,000h,000h,000h,000h,000
00695C 00000000 00000000 
006964 00000000 00000000   C    16                    db 000h,000h,000h,000h,000h,000
00696C 00000000 00000000 
006974 00000000 00000000   C    17                    db 000h,000h,000h,000h,000h,000
00697C 00000000 00000000 
006984 00000000 00000000   C    18                    db 000h,000h,000h,000h,000h,000
00698C 00000000 00000000 
006994 00000000 00000000   C    19                    db 000h,000h,000h,000h,000h,000
00699C 00000000 00000000 
0069A4 00000000 0000       C    20                    db 000h,000h,000h,000h,000h,000
                           B   562    
       00006884            B   563    unshifted_keymap equ keymap+00h
       000068E6            B   564    shifted_keymap   equ keymap+62h
       00006948            B   565    alted_keymap	 equ keymap+c4h
                           B   566    	
                           B   567    ;----------------------------------------------
                           B   568    
0069AA 00                  B   569    ui_index				db 0				; u
0069AB 00                  B   570    ui_maxchars				db 0				; "
0069AC 000000              B   571    ui_string_addr			dw24 0				; "
                           B   572    
                           B   573    ;----------------------------------------------
                           B   574    ; OS Display parameters
                           B   575    ;----------------------------------------------
                           B   576    
0069AF 00                  B   577    video_mode				db 0
0069B0 0700                B   578    current_pen				dw 07h				; C
0069B2 0000                B   579    background_colour		dw 00h				; F
                           B   580    
0069B4 00000F00 000F0F0F   B   581    pen_palette				dw 0000h,000fh,0f00h,0f
0069BC F000FF00 F00FFF0F 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 267


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
0069C4 55059909 CC0C710F   B   582    						dw 0555h,0999h,0ccch,0f
0069CC 7F00F80D 4008880F 
                           B   583    
0069D4 00                  B   584    plotchar_colour			db 0				; c
                           B   585    
0069D5 00                  B   586    char_under_cursor		db 0			
0069D6 00                  B   587    cursor_present			db 0				; 1
0069D7 00                  B   588    overwrite_mode			db 0
0069D8 00                  B   589    cursor_image_char		db 0
                           B   590    
                           B   591    ;----------------------------------------------
                           B   592    
0069D9                     B   593    display_parameters
                           B   594    
0069D9 00                  B   595    video_doubling			db 0
0069DA 000000              B   596    charmap_rows			dw24 0					0069DD 000000              B   597    charmap_columns			dw24 0				
                           B   598    
                           B   599    ;----------------------------------------------
                           B   600    
0069E0                     B   601    vmode_parameter_list
                           B   602    
0069E0 00503C              B   603    				db 00b, 80,60	; vmode 0 (vide
0069E3 01501E              B   604    				db 01b, 80,30	; vmode 1
0069E6 02283C              B   605    				db 10b, 40,60	; vmode 2	
0069E9 03281E              B   606    				db 11b, 40,30	; vmode 3
                           B   607    				
                           B   608    ;==============================================
                           B   609    ;  Serial Routine Data
                           B   610    ;==============================================
                           B   611    
0069EC 000000              B   612    serial_ez80_address		dw24 0
0069EF 000000              B   613    serial_file_length		dw24 0
0069F2 000000              B   614    serial_fn_addr			dw24 0
0069F5 00 00 00 00 00 00   B   615    serial_filename			blkb 18,0		
0069FB 00 00 00 00 00 00 
006A01 00 00 00 00 00 00 
006A07 00                  B   616    serial_fn_length		db 0
006A08 00                  B   617    serial_timeout			db 0
                           B   618    
006A09 00 00 00 00 00 00   B   619    serial_fileheader		blkb 20,0
006A0F 00 00 00 00 00 00 
006A15 00 00 00 00 00 00 
006A1B 00 00 
006A1D 5A383050 2E464845   B   620    serial_header_id		db "Z80P.FHEADER"		006A25 41444552 
006A29 00                  B   621    serial_transfer_started	db 0
                           B   622    
006A2A 00                  B   623    anim_wait_count			db 0
                           B   624    
                           B   625    ;==============================================
                           B   626    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 268


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
006A2B F3C8                B   627    intellimouse_seq	db 0f3h,200
006A2D F364                B   628    					db 0f3h,100
006A2F F350                B   629    					db 0f3h,80
                           B   630    
006A31 E803                B   631    mouse_settings_seq	db 0e8h,default_resolution
006A33 E6                  B   632    					db default_scaling
006A34 F364                B   633    					db 0f3h,default_sample_rate
006A36 F4                  B   634    					db 0f4h
                           B   635    					
                           B   636    ;----------------------------------------------
                           B   637    ; FILE SYSTEM RELATED VARIABLES
                           B   638    ;----------------------------------------------
                           B   639    
006A37 00                  B   640    boot_drive			db 0
                           B   641    
006A38 00                  B   642    current_volume		db 0
                           B   643    	
006A39 00                  B   644    current_driver		db 0			;normally u
                           B   645    
006A3A 00                  B   646    device_count		db 0			;IE: the nu
                           B   647    
006A3B 00                  B   648    volume_count		db 0
                           B   649    				
006A3C 20564F4C 303A00     B   650    vol_txt				db " VOL0:",0	;space pref
006A43 44455630 3A00       B   651    dev_txt				db "DEV0:",0
                           B   652    
006A49 000000              B   653    sector_rd_wr_addr	dw24 0
                           B   654    
                           B   655    
                           B   656    ;==============================================
                           B   657    
006A4C                     B   658    volume_dir_clusters
                           B   659    
006A4C 00 00 00 00 00 00   B   660    					blkb max_volumes*3,0
006A52 00 00 00 00 00 00 
006A58 00 00 00 00 00 00 
006A5E 00 00 00 00 00 00 
                           B   661    	
006A64                     B   662    volume_mount_list
                           B   663    
006A64 00 00 00 00 00 00   B   664    					blkb max_volumes*16,0
006A6A 00 00 00 00 00 00 
006A70 00 00 00 00 00 00 
006A76 00 00 00 00 00 00 
006A7C 00 00 00 00 00 00 
006A82 00 00 00 00 00 00 
006A88 00 00 00 00 00 00 
006A8E 00 00 00 00 00 00 
006A94 00 00 00 00 00 00 
006A9A 00 00 00 00 00 00 
006AA0 00 00 00 00 00 00 
006AA6 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 269


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
006AAC 00 00 00 00 00 00 
006AB2 00 00 00 00 00 00 
006AB8 00 00 00 00 00 00 
006ABE 00 00 00 00 00 00 
006AC4 00 00 00 00 00 00 
006ACA 00 00 00 00 00 00 
006AD0 00 00 00 00 00 00 
006AD6 00 00 00 00 00 00 
006ADC 00 00 00 00 00 00 
006AE2 00 00 
                           B   665    
                           B   666    ; Each entry is 16 bytes in the form:
                           B   667    
                           B   668    ; OFFSETS
                           B   669    ; -------
                           B   670    ; $00 - Volume is present (0/1)
                           B   671    ; $01 - Volume's host driver number (1 byte)	                           B   672    ; $02 - [reserved]
                           B   673    ; $03 - [reserved]
                           B   674    ; $04 - Volume's capacity in sectors (3 bytes)
                           B   675    ; $07 - Partition number on host drive (0/1/2/3
                           B   676    ; $08 - Offset in sectors from MBR to partition
                           B   677    ; $0c - [reserved]
                           B   678    ; $0d - [reserved]	
                           B   679    ; $0e - [reserved]
                           B   680    ; $0f - [reserved]
                           B   681    
                           B   682    ;==============================================
                           B   683    
006AE4                     B   684    host_device_hardware_info
                           B   685    
006AE4 00 00 00 00 00 00   B   686    					blkb 32*4,0
006AEA 00 00 00 00 00 00 
006AF0 00 00 00 00 00 00 
006AF6 00 00 00 00 00 00 
006AFC 00 00 00 00 00 00 
006B02 00 00 00 00 00 00 
006B08 00 00 00 00 00 00 
006B0E 00 00 00 00 00 00 
006B14 00 00 00 00 00 00 
006B1A 00 00 00 00 00 00 
006B20 00 00 00 00 00 00 
006B26 00 00 00 00 00 00 
006B2C 00 00 00 00 00 00 
006B32 00 00 00 00 00 00 
006B38 00 00 00 00 00 00 
006B3E 00 00 00 00 00 00 
006B44 00 00 00 00 00 00 
006B4A 00 00 00 00 00 00 
006B50 00 00 00 00 00 00 
006B56 00 00 00 00 00 00 
006B5C 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 270


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
006B62 00 00 
                           B   687    
                           B   688    ; Each entry is 32 bytes..
                           B   689    ;
                           B   690    ; OFFSETS
                           B   691    ; -------
                           B   692    ; $00 - Device driver number
                           B   693    ; $01 - Device's TOTAL capacity in sectors (4 b
                           B   694    ; $05 - Zero terminated hardware name (22 ASCII
                           B   695    ; (remaining bytes to $1F currently unused)
                           B   696    
                           B   697    ;----------------------------------------------
                           B   698    
006B64 000000              B   699    dhwn_temp_pointer		dw24 0
                           B   700    
006B67 00                  B   701    partition_temp			db 0
006B68 00                  B   702    vols_on_device_temp		db 0
006B69 00                  B   703    sys_driver_backup		db 0
006B6A 00                  B   704    os_quiet_mode			db 0
                           B   705    
                           B   706    ;----------------------------------------------
                           B   707    
006B6B 00 00 00 00 00 00   B   708    time_data				blkb	7,0
006B71 00 
                           B   709    
006B72 00                  B   710    frozen					db 0
006B73 01                  B   711    first_run				db 1
006B74 01                  B   712    devices_connected		db 1					                           B   713    
                           B   714    ;----------------------------------------------
                           B   715    
006B75 3A7100              B   716    free_sysram_base		dw24 os_max_addr
006B78 FFFF07              B   717    free_sysram_top			dw24 sysram_addr+sysram
                           B   718    
006B7B 000080              B   719    free_vram_a_base		dw24 vram_a_addr
006B7E FFFF87              B   720    free_vram_a_top			dw24 vram_a_addr+7ffffh
                           B   721    
006B81 0000C0              B   722    free_vram_b_base		dw24 vram_b_addr
006B84 FFFFC7              B   723    free_vram_b_top			dw24 vram_b_addr+7ffffh
                           B   724    
006B87 000000              B   725    charmap_size			dw24 0
                           B   726    
                           B   727    ;----------------------------------------------
                           B   728    
006B8A 000000              B   729    milliseconds_counter	dw24 0
006B8D 000000              B   730    seconds_counter			dw24 0
                           B   731    
                           B   732    ;----------------------------------------------
                           B   733    
006B90 00                  B   734    store_a1				db 0		
006B91 000000              B   735    store_bc1				dw24 0
006B94 000000              B   736    store_de1				dw24 0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 271


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
006B97 000000              B   737    store_hl1				dw24 0
006B9A 00                  B   738    store_a2				db 0
006B9B 000000              B   739    store_bc2				dw24 0
006B9E 000000              B   740    store_de2				dw24 0
006BA1 000000              B   741    store_hl2				dw24 0
006BA4 000000              B   742    store_ix				dw24 0
006BA7 000000              B   743    store_iy				dw24 0
006BAA 000000              B   744    store_pc				dw24 0		;only relev
006BAD 000000              B   745    store_spl				dw24 0
006BB0 0000                B   746    store_sps				dw 0
006BB2 00                  B   747    store_mbase				db 0
006BB3 00                  B   748    store_f	 				db 0
006BB4 00                  B   749    store_adl				db 0
                           B   750    
                           B   751    ;----------------------------------------------
006BB5                     B   752    os_variables
                           B   753    ;----------------------------------------------
                           B   754    
006BB5 000000              B   755    kernal_ix_cache			dw24 0
                           B   756    
006BB8 00                  B   757    store_registers			db 0
006BB9 000000              B   758    com_start_addr			dw24 0
                           B   759    
006BBC 00 00 00 00 00 00   B   760    temp_string				blkb max_buffer_chars+2
006BC2 00 00 00 00 00 00 
006BC8 00 00 00 00 00 00 
006BCE 00 00 00 00 00 00 
006BD4 00 00 00 00 00 00 
006BDA 00 00 00 00 00 00 
006BE0 00 00 00 00 00 00 
006BE6 00 00 00 00 00 00 
006BEC 00 00 00 00 00 00 
006BF2 00 00 00 00 00 00 
006BF8 00 00 00 00 00 00 
006BFE 00 00 00 00 00 00 
006C04 00 00 00 00 00 00 
006C0A 00 00 00 00 
006C0E 00 00 00 00 00 00   B   761    script_fn				blkb 13,0
006C14 00 00 00 00 00 00 
006C1A 00 
                           B   762    
006C1B 00                  B   763    sector_lba0				db 0			; keep 
006C1C 00                  B   764    sector_lba1				db 0
006C1D 00                  B   765    sector_lba2				db 0
006C1E 00                  B   766    sector_lba3				db 0
                           B   767    
                           B   768    ;----------------------------------------------
                           B   769    
006C1F 000000              B   770    cursor_pos				dw24 0			; 3rd b
                           B   771    
       00006C1F            B   772    cursor_y 				equ cursor_pos
       00006C20            B   773    cursor_x 				equ cursor_pos+1
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 272


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   774    						
006C22 00                  B   775    cursorflashtimer		db 0
006C23 00                  B   776    cursor_status			db 0
006C24 00                  B   777    os_linecount			db 0
                           B   778    		
006C25 000000              B   779    mem_mon_addr			dw24 0
006C28 000000              B   780    cmdop_start_address		dw24 0
006C2B 000000              B   781    cmdop_end_address		dw24 0
006C2E 000000              B   782    copy_dest_address		dw24 0
006C31 000000              B   783    hex_address				dw24 0
                           B   784    
006C34 000000              B   785    find_hexstringascii 	dw24 0
006C37 000000              B   786    xrr_temp				dw24 0
006C3A 00                  B   787    temphex					db 0
006C3B 00                  B   788    fillbyte				db 0 
006C3C 00                  B   789    ui_im_cache				db 0
                           B   790    
006C3D 00 00 00 00 00 00   B   791    commandstring			blkb max_buffer_chars+2
006C43 00 00 00 00 00 00 
006C49 00 00 00 00 00 00 
006C4F 00 00 00 00 00 00 
006C55 00 00 00 00 00 00 
006C5B 00 00 00 00 00 00 
006C61 00 00 00 00 00 00 
006C67 00 00 00 00 00 00 
006C6D 00 00 00 00 00 00 
006C73 00 00 00 00 00 00 
006C79 00 00 00 00 00 00 
006C7F 00 00 00 00 00 00 
006C85 00 00 00 00 00 00 
006C8B 00 00 00 00 
006C8F 00 00 00 00 00 00   B   792    output_line				blkb max_buffer_chars+2
006C95 00 00 00 00 00 00 
006C9B 00 00 00 00 00 00 
006CA1 00 00 00 00 00 00 
006CA7 00 00 00 00 00 00 
006CAD 00 00 00 00 00 00 
006CB3 00 00 00 00 00 00 
006CB9 00 00 00 00 00 00 
006CBF 00 00 00 00 00 00 
006CC5 00 00 00 00 00 00 
006CCB 00 00 00 00 00 00 
006CD1 00 00 00 00 00 00 
006CD7 00 00 00 00 00 00 
006CDD 00 00 00 00 
                           B   793    				
006CE1 000000              B   794    os_args_loc				dw24 0
006CE4 000000              B   795    os_args_pos_cache		dw24 0
                           B   796    
006CE7 000000              B   797    os_dir_block_cache  	dw24 0
006CEA 000000              B   798    os_extcmd_jmp_addr		dw24 0
                           B   799    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 273


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
006CED 000000              B   800    script_orig_dir			dw24 0
006CF0 000000              B   801    script_dir				dw24 0
006CF3 000000              B   802    script_file_offset		dw24 0
006CF6 000000              B   803    script_length			dw24 0
                           B   804    
006CF9 00                  B   805    script_flags			db 0
                           B   806    
006CFA 000000              B   807    path_parse_loc			dw24 0
                           B   808    
006CFD 000000              B   809    original_dir			dw24 0 
006D00 00                  B   810    original_vol		 	db 0
                           B   811    		
006D01 00 00 00 00 00 00   B   812    if_name_txt				blkb max_if_chars+2,0
006D07 00 00 00 00 00 00 
006D0D 00 00 00 00 00 00 
006D13 00 00 00 00 00 00   B   813    if_value_txt			blkb max_if_chars+2,0
006D19 00 00 00 00 00 00 
006D1F 00 00 00 00 00 00 
006D25 00 00 00 00 00 00   B   814    if_label_txt			blkb max_if_chars+2,0
006D2B 00 00 00 00 00 00 
006D31 00 00 00 00 00 00 
                           B   815    
                           B   816    
006D37 0000                B   817    char_to_print			db 0,0	; zero terminat
                           B   818    
                           B   819    ;----------------------------------------------
                           B   820    ; Keyboard buffer and registers
                           B   821    ;----------------------------------------------
                           B   822    
006D39 00 00 00 00 00 00   B   823    scancode_buffer			blkb 32,0
006D3F 00 00 00 00 00 00 
006D45 00 00 00 00 00 00 
006D4B 00 00 00 00 00 00 
006D51 00 00 00 00 00 00 
006D57 00 00 
                           B   824    
006D59 00                  B   825    key_buf_wr_idx			db 0
006D5A 00                  B   826    key_buf_rd_idx			db 0
006D5B 00                  B   827    key_release_mode		db 0		
006D5C 00                  B   828    not_currently_used		db 0
006D5D 00                  B   829    key_mod_flags			db 0
006D5E 00                  B   830    current_scancode		db 0
006D5F 00                  B   831    current_asciicode		db 0
                           B   832    
                           B   833    ;----------------------------------------------
                           B   834    ; Mouse related registers
                           B   835    ;----------------------------------------------
                           B   836    
006D60 00                  B   837    mouse_id				db 0
006D61 00                  B   838    mouse_packet_size		db 0
                           B   839    
006D62 00 00 00 00         B   840    mouse_packet			blkb 4,0			; t
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 274


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
006D66 00                  B   841    mouse_packet_index		db 0				;
006D67 00                  B   842    mouse_buttons			db 0				;
006D68 000000              B   843    mouse_disp_x			dw24 0				; c
006D6B 000000              B   844    mouse_disp_y			dw24 0				; c
006D6E 000000              B   845    mouse_abs_x				dw24 0
006D71 000000              B   846    mouse_abs_y				dw24 0
006D74 00                  B   847    mouse_wheel				db 0				; m
006D75 00                  B   848    mouse_updated			db 0
                           B   849    
006D76 800200              B   850    mouse_window_size_x		dw24 640			; n
006D79 E00100              B   851    mouse_window_size_y		dw24 480			; i
                           B   852    
006D7C 00                  B   853    os_pointer_enable		db 0
006D7D 000000              B   854    os_pointer_definition	dw24 0				
006D80 000000              B   855    os_pointer_height		dw24 0
006D83 00                  B   856    os_pointer_palette		db 0
                           B   857    
                           B   858    ;----------------------------------------------
       00006C1F            B   859    first_os_var			equ cursor_y
006D84 00                  B   860    last_os_var				db 0
                           B   861    ;----------------------------------------------
                           B   862    
                           B   863    ;==============================================
                           B   864    ; Default environment variables
                           B   865    ;==============================================
                           B   866    
006D85 4552524F 523D3030   B   867    default_envars			db "ERROR=00",0
006D8D 00 
006D8E 50415448 3D434F4D   B   868    						db "PATH=COMMANDS UTILS
006D96 4D414E44 53205554 
006D9E 494C5300 
006DA2 FF                  B   869    						db 0ffh
006DA3 000000              B   870    envar_top_loc			dw24 0 					                           B   871    
                           B   872    ;==============================================
                           B   873    
                           B     0    	include		'phil_font_packed.asm'			006DA6                     B     1    packed_font_start
006DA6 010100FF 01000918   B     2    				db 001h,001h,000h,0FFh,001h,000
006DAE 3C3C1800 181800EE 
006DB6 EE660100 056C6CFE   B     3                    db 0EEh,066h,001h,000h,005h,06C
006DBE 6CFE6C6C 00187EE0 
006DC6 7C0EFC18 00C6CE1C   B     4                    db 07Ch,00Eh,0FCh,018h,000h,0C6
006DCE 3870E6C6 0078ECEC 
006DD6 78EDEE7D 000C1C18   B     5                    db 078h,0EDh,0EEh,07Dh,000h,00C
006DDE 01000518 30016003 
006DE6 30180030 18010C03   B     6                    db 030h,018h,000h,030h,018h,001
006DEE 18300010 5438FE38 
006DF6 54100000 18187E18   B     7                    db 054h,010h,000h,000h,018h,018
006DFE 18010007 38387001 
006E06 00037E01 00091818   B     8                    db 000h,003h,07Eh,001h,000h,009
006E0E 0000060E 1C3870E0 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 275


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\phil_font_packed.asm
006E16 007CE6EE FEF6E67C   B     9                    db 000h,07Ch,0E6h,0EEh,0FEh,0F6
006E1E 00387801 38047C00 
006E26 7CEE0E7C E0E0FE00   B    10                    db 07Ch,0EEh,00Eh,07Ch,0E0h,0E0
006E2E FE0C180C 0ECE7C00 
006E36 1E3E76E6 FF060600   B    11                    db 01Eh,03Eh,076h,0E6h,0FFh,006
006E3E FEE0FC01 0E03FC00 
006E46 7EE0FC01 E6037C00   B    12                    db 07Eh,0E0h,0FCh,001h,0E6h,003
006E4E FE060C18 01380300 
006E56 7CE6E67C E6E67C00   B    13                    db 07Ch,0E6h,0E6h,07Ch,0E6h,0E6
006E5E 7C01CE03 7E0E7C01 
006E66 00031818 00181801   B    14                    db 000h,003h,018h,018h,000h,018
006E6E 00033030 00303060 
006E76 0E1C3870 381C0E01   B    15                    db 00Eh,01Ch,038h,070h,038h,01C
006E7E 00037E00 7E010003 
006E86 70381C0E 1C387000   B    16                    db 070h,038h,01Ch,00Eh,01Ch,038
006E8E 7CEE0E3C 38003800 
006E96 7CE601EE 03E07C00   B    17                    db 07Ch,0E6h,001h,0EEh,003h,0E0
006E9E 7CE6E6FE 01E60300 
006EA6 FCE6E6FC E6E6FC00   B    18                    db 0FCh,0E6h,0E6h,0FCh,0E6h,0E6
006EAE 7CE601E0 03E67C00 
006EB6 FC01E605 FC00FEE0   B    19                    db 0FCh,001h,0E6h,005h,0FCh,000
006EBE E0F8E0E0 FE00FEE0 
006EC6 E0F801E0 03007CE6   B    20                    db 0E0h,0F8h,001h,0E0h,003h,000
006ECE E0EEE6E6 7C0001E6 
006ED6 03FE01E6 03007C01   B    21                    db 003h,0FEh,001h,0E6h,003h,000
006EDE 38057C00 7E011C04 
006EE6 DC7800E6 ECF8EC01   B    22                    db 0DCh,078h,000h,0E6h,0ECh,0F8
006EEE E6030001 E006FE00 
006EF6 C6EEFED6 01C60300   B    23                    db 0C6h,0EEh,0FEh,0D6h,001h,0C6
006EFE E6F6FEFE EEE6E600 
006F06 7C01E605 7C00FC01   B    24                    db 07Ch,001h,0E6h,005h,07Ch,000
006F0E E603FCE0 E0007C01 
006F16 E603EAEC 7600FC01   B    25                    db 0E6h,003h,0EAh,0ECh,076h,000
006F1E E603FCE6 E6007CEE 
006F26 E07C0EEE 7C00FE01   B    26                    db 0E0h,07Ch,00Eh,0EEh,07Ch,000
006F2E 38060001 E6067C00 
006F36 01E60574 380001C6   B    27                    db 001h,0E6h,005h,074h,038h,000
006F3E 04D6FE6C 00E6E66C 
006F46 3874E6E6 0001E604   B    28                    db 038h,074h,0E6h,0E6h,000h,001
006F4E 7E06FC00 FE0E1C38 
006F56 70E0FE00 3C013005   B    29                    db 070h,0E0h,0FEh,000h,03Ch,001
006F5E 3C00C0E0 70381C0E 
006F66 06007801 18057800   B    30                    db 006h,000h,078h,001h,018h,005
006F6E 10386CC6 01000BFE 
006F76 381C0100 087C067E   B    31                    db 038h,01Ch,001h,000h,008h,07C
006F7E E67E0000 E0E0FCE6 
006F86 E6FC0100 037C01E0   B    32                    db 0E6h,0FCh,001h,000h,003h,07C
006F8E 037C0000 06067EE6 
006F96 E67E0100 037CE6FE   B    33                    db 0E6h,07Eh,001h,000h,003h,07C
006F9E E07C0000 3E70FC01 
006FA6 70030100 037EE6E6   B    34                    db 070h,003h,001h,000h,003h,07E
006FAE 7E067C00 E0E0FC01 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 276


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\phil_font_packed.asm
006FB6 E6030000 38007838   B    35                    db 0E6h,003h,000h,000h,038h,000
006FBE 387C0000 1C00011C 
006FC6 047800E0 EEECF8EC   B    36                    db 004h,078h,000h,0E0h,0EEh,0EC
006FCE EE000078 0138047C 
006FD6 010003EC FED6C6C6   B    37                    db 001h,000h,003h,0ECh,0FEh,0D6
006FDE 010003FC 01E60401 
006FE6 00037C01 E6037C01   B    38                    db 000h,003h,07Ch,001h,0E6h,003
006FEE 0003FCE6 E6FCE0E0 
006FF6 00007EE6 E67E0606   B    39                    db 000h,000h,07Eh,0E6h,0E6h,07E
006FFE 0000DCE6 01E00301 
007006 00037EF0 7C1EFC00   B    40                    db 000h,003h,07Eh,0F0h,07Ch,01E
00700E 00387E01 38031E01 
007016 000301E6 047E0100   B    41                    db 000h,003h,001h,0E6h,004h,07E
00701E 0301E603 6C380100 
007026 03E2EAFE 7C340100   B    42                    db 003h,0E2h,0EAh,0FEh,07Ch,034
00702E 03E67C38 7CE60100 
007036 0301E603 7E0CF800   B    43                    db 003h,001h,0E6h,003h,07Eh,00C
00703E 00FE1C38 70FE003C 
007046 30306030 303C0001   B    44                    db 030h,030h,060h,030h,030h,03C
00704E 18070078 18180C18 
007056 18780033 7ECC0100   B    45                    db 018h,078h,000h,033h,07Eh,0CC
00705E 0501FE07 0100FF01 
007066 001A1C3A 70FC70F2   B    46                    db 000h,01Ah,01Ch,03Ah,070h,0FC
00706E BC010029 7CC6BAA2 
007076 BAC67C01 00147E06   B    47                    db 0BAh,0C6h,07Ch,001h,000h,014
00707E 060100FF 0100FF01 
007086 009C                B    48                    db 000h,09Ch
007088                     B    49    packed_font_end
                           A  3813    
                           A  3814    
       00000014            A  3815    default_pointer_height equ 20
                           A  3816    
                           B     0    	include		'default_pointer_packed.asm'	007088                     B     1    default_pointer:
007088 03010103 000E0301   B     2                    db 003h,001h,001h,003h,000h,00E
007090 0303000D 01020101 
007098 03000C01 02020101   B     3                    db 003h,000h,00Ch,001h,002h,002
0070A0 03000B01 03020301 
0070A8 0103000A 01030204   B     4                    db 001h,003h,000h,00Ah,001h,003
0070B0 01010300 09010302 
0070B8 05010103 00080103   B     5                    db 005h,001h,001h,003h,000h,008
0070C0 02060101 03000701 
0070C8 03020701 01030006   B     6                    db 003h,002h,007h,001h,001h,003
0070D0 01030208 01010300 
0070D8 05010302 09010103   B     7                    db 005h,001h,003h,002h,009h,001
0070E0 00040103 020A0101 
0070E8 03000301 03020603   B     8                    db 003h,000h,003h,001h,003h,002
0070F0 01060300 03010302 
0070F8 03010202 01010300   B     9                    db 003h,001h,002h,002h,001h,001
007100 07010202 01000102 
007108 02010300 07010201   B    10                    db 002h,001h,003h,000h,007h,001
007110 00000102 02010103 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-Oct-11     12:28:40     page: 277


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\default_pointer_packed.asm
007118 00060101 03000401   B    11                    db 000h,006h,001h,001h,003h,000
007120 02020103 000C0102 
007128 02010103 000C0301   B    12                    db 002h,001h,001h,003h,000h,00C
007130 04030015 
                           A  3818    
007134 0102                A  3819    default_pointer_colours	db 1,2					007136 0000FF0F            A  3820    						dw 000h,0fffh
                           A  3821    
                           A  3822    ;==============================================
                           A  3823    	
00713A 00                  A  3824    os_max_addr		db 0							                           A  3825    	
                           A  3826    
                           A  3827    ;==============================================
                           A  3828    
                           A  3829    				end	
                           A  3830    				
                           A  3831    ;==============================================
                           A  3832    	


Errors: 0
Warnings: 0
Lines Assembled: 14017
