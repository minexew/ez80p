Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:   1


PC     Object              I  Line    Source 
                           A     1    
                           A     2    ; PROSE for EZ80P by Phil Ruston 2011
                           A     3    ; Compile with Zilog ZDS II
                           A     4    
                           A     5    ;----------------------------------------------
                           A     6    	.assume ADL = 1
                           A     7    ;----------------------------------------------
                           A     8    
                           B     0    	include	'ez80_cpu_equates.asm'
                           B     1    ;--- EZ80 Internal Ports ----------------------
                           B     2    
       0000009A            B     3    PB_DR			equ 09ah
       0000009B            B     4    PB_DDR			equ 09bh
       0000009C            B     5    PB_ALT1			equ 09ch
       0000009D            B     6    PB_ALT2			equ 09dh
                           B     7    
       0000009E            B     8    PC_DR			equ 09eh
       0000009F            B     9    PC_DDR			equ 09fh
       000000A0            B    10    PC_ALT1			equ 0a0h
       000000A1            B    11    PC_ALT2			equ 0a1h
                           B    12    
       000000A2            B    13    PD_DR			equ 0a2h
       000000A3            B    14    PD_DDR			equ 0a3h
       000000A4            B    15    PD_ALT1			equ 0a4h
       000000A5            B    16    PD_ALT2			equ 0a5h
                           B    17    
       000000C0            B    18    UART0_RBR		equ 0c0h
       000000C0            B    19    UART0_THR		equ 0c0h
       000000C0            B    20    UART0_BRG_L		equ 0c0h
       000000C1            B    21    UART0_BRG_H		equ 0c1h
       000000C1            B    22    UART0_IER		equ 0c1h
       000000C2            B    23    UART0_FCTL		equ 0c2h
       000000C3            B    24    UART0_LCTL		equ 0c3h
       000000C4            B    25    UART0_MCTL		equ 0c4h
       000000C5            B    26    UART0_LSR		equ 0c5h
       000000C6            B    27    UART0_MSR		equ 0c6h
                           B    28    
       000000A8            B    29    CS0_LBR			equ 0a8h			;eZ80 wait 
       000000A9            B    30    CS0_UBR			equ 0a9h
       000000AA            B    31    CS0_CTL			equ 0aah			
       000000AB            B    32    CS1_LBR			equ 0abh			;eZ80 wait 
       000000AC            B    33    CS1_UBR			equ 0ach
       000000AD            B    34    CS1_CTL			equ 0adh
       000000AE            B    35    CS2_LBR			equ 0aeh			;eZ80 wait 
       000000AF            B    36    CS2_UBR			equ 0afh
       000000B0            B    37    CS2_CTL			equ 0b0h
       000000B1            B    38    CS3_LBR			equ 0b1h			;eZ80 wait 
       000000B2            B    39    CS3_UBR			equ 0b2h
       000000B3            B    40    CS3_CTL			equ 0b3h
                           B    41    
       00000080            B    42    TMR0_CTL		equ 080h			;timer 0 eq
       00000081            B    43    TMR0_DR_L		equ 081h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:   2


PC     Object              I  Line    Source ..\..\Includes\ez80_cpu_equates.asm
       00000081            B    44    TMR0_RR_L		equ 081h
       00000082            B    45    TMR0_DR_H		equ 082h
       00000082            B    46    TMR0_RR_H		equ 082h
       00000092            B    47    TMR_ISS			equ 092h
                           B    48    
       00000083            B    49    TMR1_CTL		equ 083h 
       00000084            B    50    TMR1_RR_L		equ 084h
       00000085            B    51    TMR1_RR_H		equ 085h
                           B    52    
       000000ED            B    53    RTC_CTRL		equ 0edh			;RTC equate
       000000EC            B    54    RTC_ACTRL		equ 0ech
       000000E0            B    55    RTC_SEC			equ 0e0h
       000000E1            B    56    RTC_MIN			equ 0e1h
       000000E2            B    57    RTC_HRS			equ 0e2h
       000000E3            B    58    RTC_DOW			equ 0e3h
       000000E4            B    59    RTC_DOM			equ 0e4h
       000000E5            B    60    RTC_MON			equ 0e5h
       000000E6            B    61    RTC_YR			equ 0e6h
       000000E7            B    62    RTC_CEN			equ 0e7h
                           B    63    
                           B    64    ;----------------------------------------------
                           B     0    	include	'amoeba_hardware_equates.asm'
                           B     1    ;-- AMOEBA Hardware equates -------------------
                           B     2    
       00000000            B     3    port_pic_data  			equ 000h
       00000001            B     4    port_pic_ctrl			equ 001h
       00000001            B     5    port_hw_flags			equ 001h
       00000002            B     6    port_sdc_ctrl			equ 002h	; this is a
       00000002            B     7    port_keyboard_data		equ 002h
       00000003            B     8    port_sdc_data		 	equ 003h	
       00000004            B     9    port_memory_paging		equ 004h
       00000005            B    10    port_irq_ctrl			equ 005h
       00000005            B    11    port_irq_flags			equ 005h
       00000006            B    12    port_nmi_ack			equ 006h
       00000007            B    13    port_ps2_ctrl			equ 007h
       00000008            B    14    port_selector			equ 008h
       00000006            B    15    port_mouse_data			equ 006h
       00000009            B    16    port_clear_flags		equ 009h
                           B    17    
       00000000            B    18    sdc_power				equ 0		;(port_sd_c
       00000001            B    19    sdc_cs					equ 1		;(port_sd_c
       00000002            B    20    sdc_speed				equ 2 		;(port_sd_c
                           B    21    
       00000004            B    22    sdc_serializer_busy		equ 4 		;(port_hw_f
       00000005            B    23    vrt						equ 5		;(port_hw_f
                           B    24    
                           B    25    
                           B    26    ;-- Memory locations --------------------------
                           B    27    
       00000000            B    28    sysram_addr				equ 0000000h
       00800000            B    29    vram_a_addr				equ 0800000h
       00C00000            B    30    vram_b_addr				equ 0c00000h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:   3


PC     Object              I  Line    Source ..\..\Includes\amoeba_hardware_equates.asm
                           B    31    
                           B    32    ;-- Hardware registers ------------------------
                           B    33    
       00FF0000            B    34    hw_palette				equ 0ff0000h
       00FF0800            B    35    hw_sprite_registers		equ 0ff0800h
       00FF1000            B    36    hw_video_parameters		equ 0ff1000h
       00FF1400            B    37    hw_audio_registers		equ 0ff1400h
       00FF1800            B    38    hw_video_settings		equ 0ff1800h
                           B    39    
       00FF1000            B    40    tilemap_parameters		equ hw_video_parameters
       00FF1020            B    41    bitmap_parameters		equ hw_video_parameters
                           B    42    
       00FF1800            B    43    video_control			equ hw_video_settings+0
       00FF1801            B    44    sprite_control			equ hw_video_settings+0
       00FF1802            B    45    bgnd_palette_select		equ hw_video_settings+0
       00FF1803            B    46    sprite_palette_select	equ hw_video_settings+0
       00FF1804            B    47    right_border_position	equ hw_video_settings+0
       00FF1805            B    48    irq_line_lo				equ hw_video_settings+0
       00FF1806            B    49    irq_line_hi				equ hw_video_settings+0
                           B    50    
                           B    51    ;----------------------------------------------
                           B     0    	include 'misc_system_equates.asm'
                           B     1    
                           B     2    ;-- System Equates ----------------------------
                           B     3    
       00000A00            B     4    os_location			equ 0a00h
                           B     5    
       00000A14            B     6    prose_return 		equ os_location + 14h
       00000A18            B     7    prose_relativize_hl	equ os_location + 18h
       00000A1C            B     8    prose_relative_call	equ os_location + 1ch
                           B     9    
       00000A20            B    10    prose_kernal 		equ os_location + 20h
                           B    11    
                           B    12    ;----------------------------------------------
                           B    13    
                           B    14    ; Add to sprite locations to position a 0,0 spr
                           B    15    
       0000009A            B    16    x_display_offset	equ 09ah
       00000025            B    17    y_display_offset	equ 025h
                           B    18    
                           B    19    ;----------------------------------------------
                           A    12    	
       00000800            A    13    	sector_buffer	equ 800h
       00000700            A    14    	serial_buffer	equ 700h
                           A    15    	
       00000100            A    16    	scratch_pad		equ 100h
                           A    17    
                           A    18    ;----------------------------------------------
                           A    19    
       00000039            A    20    prose_version			equ 39h
       00000107            A    21    amoeba_version_required	equ 107h
                           A    22    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:   4


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
       00080000            A    23    sysram_size				equ 080000h			;as
       00000200            A    24    stack_size				equ 512
                           A    25    
       00080000            A    26    vram_a_size				equ 080000h
       00080000            A    27    vram_b_size				equ 080000h
                           A    28    
                           A    29    ;----------------------------------------------
                           A    30    ; Assembly options
                           A    31    ;----------------------------------------------
                           A    32    
       00000008            A    33    max_volumes				equ 8
                           A    34    
       00000050            A    35    max_buffer_chars		equ 80		; applies t
                           A    36    
                           A    37    ;----------------------------------------------
                           A    38    			
000A00                     A    39    			org os_location
                           A    40    			
000A00 00 00 00 00 00 00   A    41    				blkb 16,0						000A06 00 00 00 00 00 00 
000A0C 00 00 00 00 
                           A    42    			
                           A    43    ;----------------------------------------------
                           A    44    			
000A10 C3 4E 0A 00         A    45    				jp os_first_run					000A14 C3 36 0F 00         A    46    				jp extcmd_return				000A18 C3 66 39 00         A    47    				jp relativize_hl				000A1C C3 79 39 00         A    48    				jp relative_call				                           A    49    				
                           A    50    ;----------------------------------------------
                           A    51    
                           A    52    ; External apps can call kernal routines by doi
                           A    53    ; Set A to kernal routine number required (see 
                           A    54    ; (this routine is always located at os_locatio
                           A    55    
000A20 D9                  A    56    				exx
000A21 DD22 CB 68 00       A    57    				ld (kernal_ix_cache),ix
000A26 DD21 64 5C 00       A    58    				ld ix,kernal_table				000A2B 11030000            A    59    				ld de,3
000A2F 57                  A    60    				ld d,a
000A30 ED5C                A    61    				mlt de
000A32 DD19                A    62    				add ix,de						000A34 DD3700              A    63    				ld ix,(ix)						                           A    64    				
000A37 E3                  A    65    				ex (sp),hl
000A38 7D                  A    66    				ld a,l							000A39 E601                A    67    				and 1							000A3B E3                  A    68    				ex (sp),hl
000A3C D9                  A    69    				exx
000A3D FDE5                A    70    				push iy
000A3F CD 4C 0A 00         A    71    				call kr_jump					000A43 FDE1                A    72    				pop iy							Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:   5


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000A45 DD2A CB 68 00       A    73    				ld ix,(kernal_ix_cache)
000A4A 5BC9                A    74    				ret.l							                           A    75    				
000A4C DDE9                A    76    kr_jump			jp (ix)							                           A    77    						
                           A    78    ;----------------------------------------------
                           A    79    
                           A    80    ; *******************
                           A    81    ; *   START UP OS   *
                           A    82    ; *******************
                           A    83    
000A4E                     A    84    os_first_run
                           A    85    	
000A4E B7                  A    86    				or a							000A4F 20 05               A    87    				jr nz,os_cold_start		
000A51 78                  A    88    				ld a,b
000A52 32 4D 67 00         A    89    				ld (boot_drive),a				                           A    90    
000A56                     A    91    os_cold_start
000A56 ED7D                A    92    				stmix							000A58 F3                  A    93    				di								000A59 ED5E                A    94    				im 2							000A5B AF                  A    95    				xor a
000A5C ED6D                A    96    				ld MB,a							000A5E 4031FFFF            A    97    				ld.sis sp,0ffffh				000A62 31FFFF07            A    98    				ld sp,sysram_addr+sysram_size-1
000A66 21FFFF07            A    99    				ld hl,sysram_addr+sysram_size-1
000A6A 11000200            A   100    				ld de,stack_size
000A6E AF                  A   101    				xor a
000A6F ED52                A   102    				sbc hl,de
000A71 22 8E 68 00         A   103    				ld (free_sysram_top),hl			000A75 21 54 6F 00         A   104    				ld hl,os_max_addr
000A79 22 8B 68 00         A   105    				ld (free_sysram_base),hl
                           A   106    				
000A7D 21000080            A   107    				ld hl,vram_a_addr
000A81 22 91 68 00         A   108    				ld (free_vram_a_base),hl
000A85 01FFFF07            A   109    				ld bc,vram_a_size-1
000A89 09                  A   110    				add hl,bc
000A8A 22 94 68 00         A   111    				ld (free_vram_a_top),hl
                           A   112    				
000A8E 210000C0            A   113    				ld hl,vram_b_addr
000A92 22 97 68 00         A   114    				ld (free_vram_b_base),hl
000A96 01FFFD07            A   115    				ld bc,vram_b_size-1-512			000A9A 09                  A   116    				add hl,bc
000A9B 22 9A 68 00         A   117    				ld (free_vram_b_top),hl
                           A   118    								
000A9F CD C1 41 00         A   119    				call disable_irqs
000AA3 CD E0 43 00         A   120    				call disable_all_nmis
                           A   121    				
000AA7 3A 89 68 00         A   122    				ld a,(first_run)				000AAB B7                  A   123    				or a
000AAC 28 11               A   124    				jr z,dont_resetkb
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:   6


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000AAE CD 1E 48 00         A   125    				call init_keyboard
000AB2 28 06               A   126    				jr z,kb_ok
000AB4 21 8A 68 00         A   127    				ld hl,devices_connected
000AB8 CB86                A   128    				res 0,(hl)
000ABA AF                  A   129    kb_ok			xor a
000ABB 32 89 68 00         A   130    				ld (first_run),a
000ABF                     A   131    dont_resetkb
                           A   132    				
000ABF 21 C0 6B 00         A   133    				ld hl,packed_font_start
000AC3 11000080            A   134    				ld de,vram_a_addr
000AC7 01 E2 02 00         A   135    				ld bc,packed_font_end-packed_fo
000ACB CD 47 16 00         A   136    				call unpack_rle
000ACF CD 2C 34 00         A   137    				call convert_font
                           A   138    
000AD3 CD BC 38 00         A   139    				call test_amoeba_vers
                           A   140    				
000AD7 21 CB 68 00         A   141    				ld hl,os_variables				000ADB 01 D9 01 00         A   142    				ld bc,last_os_var-os_variables
000ADF AF                  A   143    				xor a
000AE0 CD FC 15 00         A   144    				call os_bchl_memfill
                           A   145    	
000AE4 CD C7 46 00         A   146    				call hwsc_default_hw_settings
000AE8 CD B2 4A 00         A   147    				call hwsc_disable_audio
                           A   148    				
000AEC 3A C5 66 00         A   149    				ld a,(video_mode)
000AF0 CD D5 15 00         A   150    				call os_set_vmode				                           A   151    				
000AF4 21 63 5D 00         A   152    				ld hl,welcome_message			000AF8 CD 15 10 00         A   153    				call os_print_string
                           A   154    				
000AFC CD 18 33 00         A   155    				call os_cmd_vers				                           A   156    				
000B00 CD 0C 33 00         A   157    				call os_cmd_remount				                           A   158    
000B04 CD BB 14 00         A   159    				call os_new_line				                           A   160    
000B08 CD DC 48 00         A   161    				call purge_keyboard
                           A   162    				
000B0C CD 46 41 00         A   163    				call set_irq_vectors
000B10 CD 9E 41 00         A   164    				call enable_os_irqs
000B14 FB                  A   165    				ei
                           A   166    				
000B15 21 8A 68 00         A   167    				ld hl,devices_connected			000B19 CB46                A   168    				bit 0,(hl)
000B1B 20 08               A   169    				jr nz,kb_present
000B1D 21 33 63 00         A   170    				ld hl,no_keyboard_msg
000B21 CD F2 14 00         A   171    				call os_show_packed_text
000B25                     A   172    kb_present				
                           A   173    
000B25 21 92 5D 00         A   174    				ld hl,startup_script_fn
000B29 CD FD 0F 00         A   175    				call set_script_fn
000B2D 22 F7 69 00         A   176    				ld (os_args_loc),hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:   7


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000B31 CD 36 3B 00         A   177    				call os_cmd_exec				                           A   178    									
000B35 3A 88 68 00         A   179    				ld a,(frozen)					000B39 B7                  A   180    				or a
000B3A 28 11               A   181    				jr z,os_main_loop
000B3C AF                  A   182    				xor a
000B3D 32 88 68 00         A   183    				ld (frozen),a
000B41 21 E7 5D 00         A   184    				ld hl,nmi_freeze_txt
000B45 CD 15 10 00         A   185    				call os_print_string
000B49 CD EA 2D 00         A   186    				call os_cmd_r
                           A   187    				
                           A   188    
                           A   189    ;==============================================
                           A   190    
000B4D CD B7 46 00         A   191    os_main_loop	call hwsc_wait_vrt				                           A   192    
000B51 CD 66 10 00         A   193    				call os_cursor_flash
                           A   194    
000B55 CD 53 4B 00         A   195    				call os_get_key_press
000B59 20 F2               A   196    				jr nz,os_main_loop
                           A   197    	
000B5B 32 71 6A 00         A   198    				ld (current_scancode),a
000B5F 78                  A   199    				ld a,b
000B60 32 72 6A 00         A   200    				ld (current_asciicode),a		                           A   201    	
000B64 CD 96 45 00         A   202    				call hwsc_remove_cursor
000B68 3E18                A   203    				ld a,24							000B6A 32 38 69 00         A   204    				ld (cursorflashtimer),a			000B6E AF                  A   205    				xor a
000B6F 32 39 69 00         A   206    				ld (cursor_status),a
                           A   207    				
000B73 3A 71 6A 00         A   208    				ld a,(current_scancode)			000B77 FE70                A   209    				cp 70h
000B79 20 0C               A   210    				jr nz,os_notins
000B7B 3A ED 66 00         A   211     				ld a,(overwrite_mode)
000B7F EE01                A   212    				xor 1
000B81 32 ED 66 00         A   213    				ld (overwrite_mode),a
000B85 18 C6               A   214    				jr os_main_loop
                           A   215    
000B87 FE6C                A   216    os_notins		cp 6ch
000B89 20 07               A   217    				jr nz,not_homekey
000B8B AF                  A   218    				xor a
000B8C 32 36 69 00         A   219    				ld (cursor_x),a
000B90 18 BB               A   220    				jr os_main_loop
                           A   221    								
000B92 FE69                A   222    not_homekey		cp 69h
000B94 20 24               A   223    				jr nz,not_endkey
000B96 3A 35 69 00         A   224    				ld a,(cursor_y)					000B9A 4F                  A   225    				ld c,a
000B9B 3A F3 66 00         A   226    				ld a,(charmap_columns)
000B9F 47                  A   227    				ld b,a
000BA0 05                  A   228    fendloop		dec b
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:   8


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000BA1 CD 04 46 00         A   229    				call hwsc_get_charmap_addr_xy
000BA5 7E                  A   230    				ld a,(hl)
000BA6 FE20                A   231    				cp 20h
000BA8 28 F6               A   232    				jr z,fendloop
000BAA 04                  A   233    				inc b
000BAB 3A F3 66 00         A   234    				ld a,(charmap_columns)
000BAF B8                  A   235    				cp b
000BB0 20 01               A   236    				jr nz,endxposok
000BB2 05                  A   237    				dec b
000BB3 78                  A   238    endxposok		ld a,b
000BB4 32 36 69 00         A   239    				ld (cursor_x),a
000BB8 18 93               A   240    				jr os_main_loop
                           A   241    
000BBA 21 36 69 00         A   242    not_endkey		ld hl,cursor_x					000BBE FE6B                A   243    				cp 06bh			
000BC0 20 10               A   244    				jr nz,os_ntlft
000BC2 35                  A   245    				dec (hl)
000BC3 7E                  A   246    				ld a,(hl)
000BC4 FEFF                A   247    				cp 0ffh	
000BC6 20 85               A   248    				jr nz,os_main_loop
000BC8 3A F3 66 00         A   249    				ld a,(charmap_columns)
000BCC 3D                  A   250    				dec a
000BCD 77                  A   251    				ld (hl),a						000BCE C3 4D 0B 00         A   252    				jr os_main_loop
                           A   253    
000BD2 FE74                A   254    os_ntlft		cp 074h							000BD4 20 10               A   255    				jr nz,os_ntrig
000BD6 34                  A   256    				inc (hl)
000BD7 3A F3 66 00         A   257    				ld a,(charmap_columns)
000BDB BE                  A   258    				cp (hl)
000BDC C2 4D 0B 00         A   259    				jr nz,os_main_loop
000BE0 3600                A   260    				ld (hl),0						000BE2 C3 4D 0B 00         A   261    				jr os_main_loop
                           A   262    
000BE6 21 35 69 00         A   263    os_ntrig		ld hl,cursor_y
000BEA FE75                A   264    				cp 075h							000BEC 20 0D               A   265    				jr nz,os_ntup
000BEE 35                  A   266    				dec (hl)
000BEF CB7E                A   267    				bit 7,(hl)
000BF1 CA 4D 0B 00         A   268    				jr z,os_main_loop
000BF5 3600                A   269    				ld (hl),0						000BF7 C3 4D 0B 00         A   270    				jr os_main_loop
                           A   271    
000BFB FE72                A   272    os_ntup			cp 072h
000BFD 20 14               A   273    				jr nz,os_ntdwn					000BFF 34                  A   274    				inc (hl)
000C00 3A F0 66 00         A   275    				ld a,(charmap_rows)
000C04 BE                  A   276    				cp (hl)
000C05 C2 4D 0B 00         A   277    				jr nz,os_main_loop
000C09 3D                  A   278    				dec a
000C0A 77                  A   279    				ld (hl),a						000C0B CD 22 45 00         A   280    				call hwsc_scroll_up
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:   9


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000C0F C3 4D 0B 00         A   281    				jr os_main_loop
                           A   282    
000C13 FE71                A   283    os_ntdwn		cp 071h							000C15 20 08               A   284    				jr nz,os_nodel		
000C17 3A 36 69 00         A   285    				ld a,(cursor_x)					000C1B 47                  A   286    				ld b,a
000C1C 04                  A   287    				inc b
000C1D 18 13               A   288    				jr os_chrbk
                           A   289    
000C1F FE66                A   290    os_nodel		cp 066h							000C21 20 17               A   291    				jr nz,os_nbksp
000C23 3A 36 69 00         A   292    				ld a,(cursor_x)					000C27 B7                  A   293    				or a							000C28 CA 4D 0B 00         A   294    				jp z,os_main_loop
000C2C 47                  A   295    				ld b,a
000C2D 3D                  A   296    				dec a
000C2E 32 36 69 00         A   297    				ld (cursor_x),a					000C32 CD 1C 46 00         A   298    os_chrbk		call hwsc_chars_left			000C36 C3 4D 0B 00         A   299    				jp os_main_loop
                           A   300    
000C3A FE5A                A   301    os_nbksp		cp 05ah							000C3C CA 84 0C 00         A   302    				jp z,os_enter_pressed
                           A   303    	
000C40 3A 72 6A 00         A   304    				ld a,(current_asciicode)		000C44 FE20                A   305    				cp 32							000C46 38 38               A   306    				jr c,os_nvdun					                           A   307    
000C48 FE7B                A   308    				cp 07bh							000C4A 30 12               A   309    				jr nc,os_gtcha					000C4C FE61                A   310    				cp 061h
000C4E 38 04               A   311    				jr c,os_ntupc
000C50 D620                A   312    				sub 020h
000C52 18 0A               A   313    				jr os_gtcha
000C54 FE5B                A   314    os_ntupc		cp 05bh
000C56 30 06               A   315    				jr nc,os_gtcha
000C58 FE41                A   316    				cp 041h
000C5A 38 02               A   317    				jr c,os_gtcha
000C5C C620                A   318    				add a,020h
000C5E 57                  A   319    os_gtcha		ld d,a							000C5F 3A ED 66 00         A   320    				ld a,(overwrite_mode)			000C63 B7                  A   321    				or a
000C64 CC 55 46 00         A   322    				call z,hwsc_chars_right
                           A   323    				
000C68 ED4B 35 69 00       A   324    os_schi			ld bc,(cursor_pos)				000C6D 7A                  A   325    				ld a,d							000C6E CD 5D 45 00         A   326    				call hwsc_plot_char		
000C72 21 36 69 00         A   327    				ld hl,cursor_x					000C76 34                  A   328    				inc (hl)
000C77 3A F3 66 00         A   329    				ld a,(charmap_columns)
000C7B BE                  A   330    				cp (hl)							000C7C 20 02               A   331    				jr nz,os_nvdun
000C7E 3600                A   332    				ld (hl),0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  10


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A   333    
000C80 C3 4D 0B 00         A   334    os_nvdun		jp os_main_loop
                           A   335    	
                           A   336    
                           A   337    ;----------------------------------------------
                           A   338    
000C84                     A   339    os_enter_pressed
                           A   340    	
000C84 CD 98 46 00         A   341    				call hwsc_charline_to_command_s
                           A   342    
000C88 AF                  A   343    				xor a
000C89 32 36 69 00         A   344    				ld (cursor_x),a					000C8D 21 35 69 00         A   345    				ld hl,cursor_y					000C91 34                  A   346    				inc (hl)
000C92 3A F0 66 00         A   347    				ld a,(charmap_rows)
000C96 BE                  A   348    				cp (hl)
000C97 20 06               A   349    				jr nz,os_esdok
000C99 3D                  A   350    				dec a
000C9A 77                  A   351    				ld (hl),a
000C9B CD 22 45 00         A   352    				call hwsc_scroll_up
                           A   353    
000C9F CD A7 0C 00         A   354    os_esdok		call os_parse_cmd_chk_ps		                           A   355    
000CA3 C3 4D 0B 00         A   356    post_csb		jp os_main_loop
                           A   357    
                           A   358    	
                           A   359    ;----------------------------------------------
                           A   360    
                           A   361    
000CA7                     A   362    os_parse_cmd_chk_ps
                           A   363    
000CA7 CD BA 0C 00         A   364    				call os_parse_command_line
000CAB FEFE                A   365    				cp 0feh							000CAD C0                  A   366    				ret nz
000CAE 01500000            A   367    				ld bc,max_buffer_chars			000CB2 11 53 69 00         A   368    				ld de,commandstring				000CB6 EDB0                A   369    				ldir
000CB8 18 ED               A   370    				jr os_parse_cmd_chk_ps
                           A   371    
                           A   372    	
                           A   373    ;----------------------------------------------
                           A   374    	
000CBA                     A   375    os_parse_command_line
                           A   376    
000CBA 3E01                A   377    				ld a,1
000CBC 32 CE 68 00         A   378    				ld (store_registers),a			                           A   379    
000CC0 21 53 69 00         A   380    				ld hl,commandstring				000CC4 0650                A   381    				ld b,max_buffer_chars			000CC6 CD B3 10 00         A   382    				call os_scan_for_non_space		000CCA B7                  A   383    				or a							000CCB C8                  A   384    				ret z
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  11


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000CCC 11 65 5E 00         A   385    				ld de,dictionary-1				000CD0 D5                  A   386    				push de
000CD1 D1                  A   387    compcstr		pop de
000CD2 E5                  A   388    				push hl
000CD3 FDE1                A   389    				pop iy
000CD5 13                  A   390    notacmd			inc de
000CD6 1A                  A   391    				ld a,(de)
000CD7 FE01                A   392    				cp 1							000CD9 CA 7D 0D 00         A   393    				jp z,os_no_kernal_command_found
000CDD CB7F                A   394    				bit 7,a
000CDF 28 F4               A   395    				jr z,notacmd					000CE1 E67F                A   396    				and 07fh
000CE3 4F                  A   397    				ld c,a							000CE4 D5                  A   398    				push de
000CE5 13                  A   399    cmdnscan		inc de
000CE6 FD7E00              A   400    				ld a,(iy)						000CE9 CD 1C 13 00         A   401    				call os_uppercasify
000CED 47                  A   402    				ld b,a
000CEE 1A                  A   403    				ld a,(de)						000CEF B8                  A   404    				cp b
000CF0 FD23                A   405    				inc iy
000CF2 28 F1               A   406    				jr z,cmdnscan					000CF4 1A                  A   407    nomatch			ld a,(de)						000CF5 B7                  A   408    				or a
000CF6 28 04               A   409    				jr z,posmatch					000CF8 CB7F                A   410    				bit 7,a			
000CFA 28 D5               A   411    				jr z,compcstr					000CFC FD7EFF              A   412    posmatch		ld a,(iy-1)						000CFF FE20                A   413    				cp 32
000D01 20 CE               A   414    				jr nz,compcstr					                           A   415    	
000D03 D1                  A   416    				pop de				
000D04 FDE5                A   417    				push iy							000D06 E1                  A   418    				pop hl
000D07 CD B3 10 00         A   419    				call os_scan_for_non_space
000D0B 22 F7 69 00         A   420    				ld (os_args_loc),hl				                           A   421    	
000D0F 21 3C 64 00         A   422    				ld hl,os_cmd_locs
000D13 11030000            A   423    				ld de,3
000D17 51                  A   424    				ld d,c
000D18 ED5C                A   425    				mlt de							000D1A 19                  A   426    				add hl,de
000D1B ED37                A   427    				ld ix,(hl)						                           A   428    
000D1D 2A F7 69 00         A   429    				ld hl,(os_args_loc)				000D21 CD 7C 0F 00         A   430    go_int_cmd		call os_run_command				                           A   431    
000D25 B7                  A   432    				or a
000D26 C8                  A   433    				ret z							000D27 FE01                A   434    				cp 1
000D29 20 17               A   435    				jr nz,show_erm
000D2B 78                  A   436    os_hwe1			ld a,b							Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  12


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000D2C 21 6A 61 00         A   437    os_hwerr		ld hl,hex_byte_txt		
000D30 CD 5E 11 00         A   438    				call hexbyte_to_ascii	
000D34 CD BB 14 00         A   439    				call os_new_line
000D38 21 26 63 00         A   440    				ld hl,hw_err_msg
000D3C CD F2 14 00         A   441    				call os_show_packed_text
000D40 AF                  A   442    				xor a
000D41 C9                  A   443    				ret
                           A   444    
000D42 01000000            A   445    show_erm		ld bc,0							000D46 4F                  A   446    				ld c,a
000D47 D680                A   447    				sub 080h						000D49 38 11               A   448    				jr c,no_trans					000D4B 21 73 65 00         A   449    				ld hl,kernal_error_code_transla
000D4F CB77                A   450    				bit 6,a							000D51 28 06               A   451    				jr z,not_fs_err					000D53 21 82 65 00         A   452    				ld hl,fs_error_code_translation
000D57 D640                A   453    				sub 040h
000D59 4F                  A   454    not_fs_err		ld c,a
000D5A 09                  A   455    				add hl,bc
000D5B 4E                  A   456    				ld c,(hl)
000D5C 0600                A   457    no_trans		ld b,0
000D5E 21 A8 64 00         A   458    				ld hl,packed_msg_list
000D62 7E                  A   459    findmsg			ld a,(hl)
000D63 FEFF                A   460    				cp 0ffh
000D65 C8                  A   461    				ret z							000D66 23                  A   462    				inc hl
000D67 B7                  A   463    				or a
000D68 20 F8               A   464    				jr nz,findmsg					000D6A 04                  A   465    				inc b
000D6B 79                  A   466    				ld a,c							000D6C B8                  A   467    				cp b
000D6D 20 F3               A   468    				jr nz,findmsg
000D6F CD BB 14 00         A   469    				call os_new_line
000D73 CD F2 14 00         A   470    				call os_show_packed_text
000D77 CD BB 14 00         A   471    				call os_new_line
000D7B AF                  A   472    				xor a
000D7C C9                  A   473    				ret
                           A   474    	
                           A   475    
000D7D                     A   476    os_no_kernal_command_found
                           A   477    
000D7D 3E30                A   478    				ld a,030h						000D7F 32 56 67 00         A   479    fvolcmd			ld (vol_txt+4),a				000D83 F5                  A   480    				push af			
000D84 11 53 67 00         A   481    				ld de,vol_txt+1		
000D88 0605                A   482    				ld b,5			
000D8A CD E2 12 00         A   483    				call os_compare_strings	
000D8E 28 08               A   484    				jr z,gotvolcmd		
000D90 F1                  A   485    				pop af				
000D91 3C                  A   486    				inc a			
000D92 FE38                A   487    				cp 030h+max_volumes		
000D94 20 E9               A   488    				jr nz,fvolcmd		
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  13


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000D96 18 0B               A   489    				jr novolcmd		
000D98 F1                  A   490    gotvolcmd		pop af
000D99 D630                A   491    				sub 030h
000D9B CD 36 1B 00         A   492    				call os_change_volume
000D9F C3 67 0F 00         A   493    				jp extcmderf					                           A   494    		
                           A   495    
                           A   496    
000DA3 7E                  A   497    novolcmd		ld a,(hl)						000DA4 FE47                A   498    				cp 'G'							000DA6 20 3C               A   499    				jr nz,not_g_cmd					000DA8 23                  A   500    				inc hl
000DA9 7E                  A   501    				ld a,(hl)
000DAA 2B                  A   502    				dec hl
000DAB FE20                A   503    				cp ' '
000DAD 20 35               A   504    				jr nz,not_g_cmd
000DAF 23                  A   505    				inc hl
000DB0 CD B3 10 00         A   506    				call os_scan_for_non_space
000DB4 22 F7 69 00         A   507    				ld (os_args_loc),hl				000DB8 B7                  A   508    				or a
000DB9 20 04               A   509    				jr nz,gotgargs
000DBB 3E1F                A   510    				ld a,01fh						000DBD 18 83               A   511    				jr show_erm
000DBF CD 9D 11 00         A   512    gotgargs		call ascii_to_hex_no_scan		000DC3 B7                  A   513    				or a
000DC4 C2 42 0D 00         A   514    				jr nz,show_erm
000DC8 CD CF 43 00         A   515    				call enable_button_nmi			000DCC CD 9B 1C 00         A   516    				call test_de
000DD0 20 03               A   517    				jr nz,not_reset
000DD2 AF                  A   518    				xor a
000DD3 D304                A   519    				out (port_memory_paging),a		000DD5 D5                  A   520    not_reset		push de
000DD6 2A F7 69 00         A   521    				ld hl,(os_args_loc)
000DDA CD 9E 10 00         A   522    				call os_next_arg				000DDE DDE1                A   523    				pop ix			
000DE0 C3 7C 0F 00         A   524    				jp os_run_command				                           A   525    				
                           A   526    				
                           A   527    
                           A   528    
000DE4 22 F7 69 00         A   529    not_g_cmd		ld (os_args_loc),hl				000DE8 22 FA 69 00         A   530    				ld (os_args_pos_cache),hl
                           A   531    
000DEC CD 66 4F 00         A   532    				call fs_check_disk_format		000DF0 38 2A               A   533    				jr c,os_noextcmd				000DF2 20 28               A   534    				jr nz,os_noextcmd
                           A   535    	
000DF4 CD 86 0F 00         A   536    				call cache_dir_block			                           A   537    
000DF8 01 D4 5D 00         A   538    				ld bc,ezp_txt					000DFC CD 9E 0F 00         A   539    				call scan_current_and_path_dirs
000E00 DA 2C 0D 00         A   540    				jp c,os_hwerr	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  14


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000E04 28 3F               A   541    				jr z,os_got_extcmd
                           A   542    				
000E06 CD 92 0F 00         A   543    				call restore_dir_block
                           A   544    				
000E0A 01 D9 5D 00         A   545    				ld bc,pbf_txt					000E0E CD 9E 0F 00         A   546    				call scan_current_and_path_dirs
000E12 DA 2C 0D 00         A   547    				jp c,os_hwerr	
000E16 28 0A               A   548    				jr z,os_got_script
                           A   549    				
000E18 CD 92 0F 00         A   550    				call restore_dir_block			000E1C 3E0B                A   551    os_noextcmd		ld a,0bh						000E1E C3 42 0D 00         A   552    				jp show_erm
                           A   553    
                           A   554    				
000E22 21 0C 6A 00         A   555    os_got_script	ld hl,script_flags				000E26 CB46                A   556    				bit scr_in_script,(hl)
000E28 C2 B9 3C 00         A   557    				jp nz,script_error
000E2C 21 D2 68 00         A   558    				ld hl,temp_string				000E30 CD FD 0F 00         A   559    				call set_script_fn
000E34 2A F7 69 00         A   560    				ld hl,(os_args_loc)		
000E38 CD B3 10 00         A   561    				call os_scan_for_non_space
000E3C DD21 36 3B 00       A   562    				ld ix,os_cmd_exec				000E41 C3 21 0D 00         A   563    				jp go_int_cmd
                           A   564    				
                           A   565    
                           A   566    
                           A   567    
                           A   568    
000E45 2A F7 69 00         A   569    os_got_extcmd	ld hl,(os_args_loc)				000E49 CD B3 10 00         A   570    				call os_scan_for_non_space		000E4D 22 F7 69 00         A   571    				ld (os_args_loc),hl
                           A   572    
000E51 11100000            A   573    				ld de,16
000E55 CD AA 16 00         A   574    				call os_set_load_length			000E59 21000100            A   575    				ld hl,scratch_pad
000E5D 22 37 5C 00         A   576    				ld (fs_ez80_address),hl
000E61 CD 63 51 00         A   577    				call fs_read_data_command
000E65 DA 2C 0D 00         A   578    				jp c,os_hwerr					000E69 C2 42 0D 00         A   579    				jp nz,show_erm					000E6D 2A020100            A   580    				ld hl,(scratch_pad+2)
000E71 1150524F            A   581    				ld de,04f5250h					000E75 AF                  A   582    				xor a	
000E76 ED52                A   583    				sbc hl,de
000E78 28 0A               A   584    				jr z,loc_header
000E7A CD 92 0F 00         A   585    				call restore_dir_block			000E7E 3E1A                A   586    				ld a,01ah						000E80 C3 42 0D 00         A   587    				jp show_erm						                           A   588    				
000E84 3A0F0100            A   589    loc_header		ld a,(scratch_pad+15)			000E88 32 CA 68 00         A   590    				ld (store_adl),a			
000E8C CD 10 51 00         A   591    				call fs_open_file_command		000E90 DA 2C 0D 00         A   592    				jp c,os_hwerr
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  15


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000E94 20 86               A   593    				jr nz,os_noextcmd
000E96 2A050100            A   594    				ld hl,(scratch_pad+5)			000E9A 22 37 5C 00         A   595    				ld (fs_ez80_address),hl
                           A   596    				
000E9E ED5B0B01 00         A   597    				ld de,(scratch_pad+11)			000EA3 7B                  A   598    				ld a,e
000EA4 B2                  A   599    				or d
000EA5 28 14               A   600    				jr z,noprov_spec				000EA7 21390000            A   601    				ld hl,prose_version
000EAB AF                  A   602    				xor a
000EAC 40ED52              A   603    				sbc.sis hl,de					000EAF 30 0A               A   604    				jr nc,noprov_spec
000EB1 CD 92 0F 00         A   605    				call restore_dir_block
000EB5 3E1B                A   606    				ld a,01bh						000EB7 C3 42 0D 00         A   607    				jp show_erm
                           A   608    				
000EBB CD 5E 47 00         A   609    noprov_spec		call hwsc_get_version			000EBF 2A0D0100            A   610    				ld hl,(scratch_pad+13)			000EC3 EB                  A   611    				ex de,hl						000EC4 7B                  A   612    				ld a,e
000EC5 B2                  A   613    				or d
000EC6 28 10               A   614    				jr z,nohwv_spec					000EC8 AF                  A   615    				xor a
000EC9 40ED52              A   616    				sbc.sis hl,de					000ECC 30 0A               A   617    				jr nc,nohwv_spec
000ECE CD 92 0F 00         A   618    				call restore_dir_block
000ED2 3E2B                A   619    				ld a,02bh						000ED4 C3 42 0D 00         A   620    				jp show_erm
                           A   621    
000ED8 ED5B0801 00         A   622    nohwv_spec		ld de,(scratch_pad+8)			000EDD 3A0A0100            A   623    				ld a,(scratch_pad+10)			000EE1 B2                  A   624    				or d
000EE2 B3                  A   625    				or e
000EE3 28 04               A   626    				jr z,readcode					000EE5 CD AA 16 00         A   627    				call os_set_load_length			                           A   628    		
000EE9 ED4B 37 5C 00       A   629    readcode		ld bc,(fs_ez80_address)			000EEE C5                  A   630    				push bc
000EEF E1                  A   631    				pop hl
000EF0 ED5B 2E 5C 00       A   632    				ld de,(fs_file_transfer_length)
000EF5 19                  A   633    				add hl,de
000EF6 EB                  A   634    				ex de,hl
000EF7 CD E2 39 00         A   635    				call os_protected_ram_test
000EFB C4 34 3A 00         A   636    				call nz,os_protected_ram_query
000EFF 28 0A               A   637    				jr z,ezp_loadpm_ok
000F01 F5                  A   638    				push af
000F02 CD 92 0F 00         A   639    				call restore_dir_block
000F06 F1                  A   640    				pop af
000F07 C3 42 0D 00         A   641    				jp show_erm
                           A   642    
000F0B 2A050100            A   643    ezp_loadpm_ok	ld hl,(scratch_pad+5)
000F0F 22 00 6A 00         A   644    				ld (os_extcmd_jmp_addr),hl		Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  16


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000F13 CD 63 51 00         A   645    				call fs_read_data_command
000F17 F5                  A   646    				push af
000F18 CD 92 0F 00         A   647    				call restore_dir_block			000F1C F1                  A   648    				pop af
000F1D DA 2C 0D 00         A   649    				jp c,os_hwerr					000F21 C2 42 0D 00         A   650    				jp nz,show_erm					                           A   651    	
000F25 CD CF 43 00         A   652    				call enable_button_nmi			000F29 DD2A 00 6A 00       A   653    				ld ix,(os_extcmd_jmp_addr)		000F2E 2A F7 69 00         A   654    				ld hl,(os_args_loc)				000F32 C3 7C 0F 00         A   655    				jp os_run_command				                           A   656    
000F36 F5                  A   657    extcmd_return	push af							000F37 CD C7 46 00         A   658    				call hwsc_default_hw_settings	000F3B 3A CE 68 00         A   659    				ld a,(store_registers)
000F3F B7                  A   660    				or a
000F40 28 06               A   661    				jr z,skp_strg
000F42 F1                  A   662    				pop af
000F43 CD 34 14 00         A   663    				call os_store_CPU_regs			000F47 F5                  A   664    				push af
000F48 F1                  A   665    skp_strg		pop af
                           A   666    
000F49 F5                  A   667    cntuasr			push af
000F4A C5                  A   668    				push bc							000F4B 21000100            A   669    				ld hl,scratch_pad				000F4F CD 5E 11 00         A   670    				call hexbyte_to_ascii
000F53 3600                A   671    				ld (hl),0
000F55 11000100            A   672    				ld de,scratch_pad
000F59 21 FF 5D 00         A   673    				ld hl,error_txt
000F5D CD E9 1B 00         A   674    				call os_set_envar
000F61 CD DA 43 00         A   675    				call disable_button_nmi			000F65 C1                  A   676    				pop bc
000F66 F1                  A   677    				pop af
000F67 B7                  A   678    extcmderf		or a							000F68 C8                  A   679    				ret z	
000F69 FE01                A   680    				cp 1							000F6B CA 2B 0D 00         A   681    				jp z,os_hwe1					000F6F FEFF                A   682    				cp 0ffh							000F71 CA 56 0A 00         A   683    				jp z,os_cold_start
000F75 FEFE                A   684    				cp 0feh							000F77 C8                  A   685    				ret z
000F78 C3 42 0D 00         A   686    				jp show_erm						                           A   687    				
                           A   688    ;----------------------------------------------
                           A   689    
000F7C                     A   690    os_run_command									000F7C ED3906              A   691    				out0 (port_nmi_ack),a			000F7F DD22 CF 68 00       A   692    				ld (com_start_addr),ix			000F84 DDE9                A   693    				jp (ix)							                           A   694    
                           A   695    ;----------------------------------------------
                           A   696    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  17


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000F86                     A   697    cache_dir_block
                           A   698    
                           A   699    	
000F86 D5                  A   700    				push de
000F87 CD DA 1A 00         A   701    				call fs_get_dir_cluster	
000F8B ED53 FD 69 00       A   702    				ld (os_dir_block_cache),de
000F90 D1                  A   703    				pop de	
000F91 C9                  A   704    				ret
                           A   705    		
                           A   706    
000F92                     A   707    restore_dir_block
                           A   708    
000F92 D5                  A   709    				push de
000F93 ED5B FD 69 00       A   710    				ld de,(os_dir_block_cache)
000F98 CD E6 1A 00         A   711    				call fs_update_dir_cluster
000F9C D1                  A   712    				pop de
000F9D C9                  A   713    				ret
                           A   714    
                           A   715    ;----------------------------------------------
                           A   716    
                           A   717    
000F9E                     A   718    scan_current_and_path_dirs
                           A   719    
000F9E ED430001 00         A   720    				ld (scratch_pad),bc				000FA3 2A FA 69 00         A   721    				ld hl,(os_args_pos_cache)		000FA7 22 F7 69 00         A   722    				ld (os_args_loc),hl
000FAB CD E7 10 00         A   723    				call os_args_to_fn_append_extn	                           A   724    
000FAF CD 10 51 00         A   725    				call fs_open_file_command		000FB3 D8                  A   726    				ret c					 		000FB4 C8                  A   727    				ret z							                           A   728    
000FB5 21 61 5E 00         A   729    				ld hl,path_txt					000FB9 CD A9 1B 00         A   730    				call os_get_envar
000FBD ED53 0D 6A 00       A   731    				ld (path_parse_loc),de
                           A   732    
000FC2 CD E0 50 00         A   733    path_loop		call fs_goto_root_dir_command	000FC6 2A 0D 6A 00         A   734    				ld hl,(path_parse_loc)			000FCA CD A9 59 00         A   735    				call fs_hl_to_filename			000FCE CD B9 50 00         A   736    				call fs_change_dir_command		000FD2 D8                  A   737    				ret c
000FD3 20 17               A   738    				jr nz,next_dir_in_path			                           A   739    	
000FD5 2A FA 69 00         A   740    				ld hl,(os_args_pos_cache)		000FD9 22 F7 69 00         A   741    				ld (os_args_loc),hl
000FDD ED4B0001 00         A   742    				ld bc,(scratch_pad)				000FE2 CD E7 10 00         A   743    				call os_args_to_fn_append_extn	                           A   744    				
000FE6 CD 10 51 00         A   745    				call fs_open_file_command		000FEA D8                  A   746    				ret c
000FEB C8                  A   747    				ret z							                           A   748    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  18


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000FEC                     A   749    next_dir_in_path
                           A   750    				
000FEC 2A 0D 6A 00         A   751    				ld hl,(path_parse_loc)			000FF0 CD 9E 10 00         A   752    				call os_next_arg
000FF4 22 0D 6A 00         A   753    				ld (path_parse_loc),hl
000FF8 20 C8               A   754    				jr nz,path_loop					000FFA AF                  A   755    				xor a
000FFB 3C                  A   756    				inc a
000FFC C9                  A   757    				ret								                           A   758    				
                           A   759    ;----------------------------------------------
                           A   760    				
000FFD 11 24 69 00         A   761    set_script_fn	ld de,script_fn
001001 060D                A   762    				ld b,13
001003 CD 01 13 00         A   763    				call os_copy_ascii_run
001007 AF                  A   764    				xor a
001008 12                  A   765    				ld (de),a
001009 C9                  A   766    				ret
                           A   767    
                           A   768    ;==============================================
                           A   769    ; Routines called by command line
                           A   770    ;==============================================
                           A   771    
                           A   772    ; Set:-
                           A   773    ; HL to address of string
                           A   774    ; c = y
                           A   775    ; b = x
                           A   776    
00100A                     A   777    ext_print_string
                           A   778    
00100A CC 23 16 00         A   779    				call z,mbase_hl
00100E 18 05               A   780    				jr os_print_string
                           A   781    
001010                     A   782    os_print_string_cond
                           A   783    
001010 CD 8D 1A 00         A   784    				call test_quiet_mode
001014 C0                  A   785    				ret nz
                           A   786    
001015                     A   787    os_print_string
                           A   788    
001015 D5                  A   789    				push de
001016 C5                  A   790    				push bc
001017 ED4B 35 69 00       A   791    				ld bc,(cursor_pos)				00101C 7E                  A   792    prstr_lp		ld a,(hl)
00101D 23                  A   793    				inc hl
00101E B7                  A   794    				or a
00101F 20 09               A   795    				jr nz,prstr_ne
001021 ED43 35 69 00       A   796    				ld (cursor_pos),bc
001026 C1                  A   797    				pop bc
001027 D1                  A   798    				pop de
001028 AF                  A   799    				xor a							001029 C9                  A   800    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  19


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A   801    
00102A FE0D                A   802    prstr_ne		cp 13
00102C 20 04               A   803    				jr nz,not_cr
00102E 0600                A   804    				ld b,0
001030 18 EA               A   805    				jr prstr_lp
001032 FE0A                A   806    not_cr			cp 10
001034 28 12               A   807    				jr z,line_feed				
001036 FE0B                A   808    				cp 11
001038 28 0C               A   809    				jr z,next_line
00103A CD 5D 45 00         A   810    				call hwsc_plot_char
00103E 04                  A   811    				inc b
00103F 3A F3 66 00         A   812    				ld a,(charmap_columns)
001043 B8                  A   813    				cp b
001044 20 D6               A   814    				jr nz,prstr_lp
001046 0600                A   815    next_line		ld b,0
001048 0C                  A   816    line_feed		inc c
001049 3A F0 66 00         A   817    				ld a,(charmap_rows)
00104D B9                  A   818    				cp c
00104E 20 CC               A   819    				jr nz,prstr_lp
001050 0D                  A   820    				dec c
001051 CD 22 45 00         A   821    				call hwsc_scroll_up
001055 18 C5               A   822    				jr prstr_lp
                           A   823    
                           A   824    ;----------------------------------------------
                           A   825    
001057 21 4A 6A 00         A   826    os_print_char	ld hl,char_to_print
00105B 77                  A   827    				ld (hl),a
00105C 18 B7               A   828    				jr os_print_string
                           A   829    
                           A   830    ;----------------------------------------------
                           A   831    
00105E F5                  A   832    home_cursor		push af
00105F AF                  A   833    				xor a
001060 32 36 69 00         A   834    				ld (cursor_x),a
001064 F1                  A   835    				pop af
001065 C9                  A   836    				ret
                           A   837    				
                           A   838    ;----------------------------------------------
                           A   839    
001066                     A   840    os_cursor_flash
                           A   841    
001066 21 38 69 00         A   842    				ld hl,cursorflashtimer
00106A 34                  A   843    				inc (hl)
00106B 7E                  A   844    				ld a,(hl)
00106C FE19                A   845    				cp 25
00106E C0                  A   846    				ret nz
00106F 3600                A   847    				ld (hl),0
001071 3A 39 69 00         A   848    				ld a,(cursor_status)
001075 EE01                A   849    				xor 1
001077 32 39 69 00         A   850    				ld (cursor_status),a
00107B 28 15               A   851    				jr z,no_cursor
00107D 3E5F                A   852    				ld a,05fh
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  20


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00107F 21 ED 66 00         A   853    				ld hl,overwrite_mode
001083 CB46                A   854    				bit 0,(hl)
001085 28 02               A   855    				jr z,cursor_selected
001087 3E7F                A   856    				ld a,07fh
                           A   857    				
001089 CD 98 10 00         A   858    cursor_selected	call os_set_cursor_image
00108D CD B0 45 00         A   859    				call hwsc_draw_cursor			001091 C9                  A   860    				ret
                           A   861    
001092 CD 96 45 00         A   862    no_cursor		call hwsc_remove_cursor
001096 C9                  A   863    				ret
                           A   864    
                           A   865    
                           A   866    ;----------------------------------------------
                           A   867    
001097                     A   868    ext_set_cursor_image
                           A   869    
001097 7B                  A   870    				ld a,e
                           A   871    				
001098                     A   872    os_set_cursor_image
                           A   873    			
001098 32 EE 66 00         A   874    				ld (cursor_image_char),a
00109C BF                  A   875    				cp a
00109D C9                  A   876    				ret
                           A   877    
                           A   878    ;----------------------------------------------
                           A   879    
00109E                     A   880    os_next_arg
                           A   881    
00109E CD AA 10 00         A   882    				call os_scan_for_space
0010A2 B7                  A   883    				or a
0010A3 C8                  A   884    				ret z
0010A4 CD B3 10 00         A   885    				call os_scan_for_non_space
0010A8 B7                  A   886    				or a
0010A9 C9                  A   887    				ret
                           A   888    
                           A   889    
                           A   890    ;----------------------------------------------
                           A   891    	
                           A   892    
0010AA                     A   893    os_scan_for_space
                           A   894    
0010AA 7E                  A   895    os_sfspl 		ld a,(hl)						0010AB B7                  A   896    				or a							0010AC C8                  A   897    				ret z
0010AD FE20                A   898    				cp ' '
0010AF C8                  A   899    				ret z
0010B0 23                  A   900    				inc hl
0010B1 18 F7               A   901    				jr os_sfspl
                           A   902    	
                           A   903    
                           A   904    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  21


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A   905    	
                           A   906    
0010B3                     A   907    os_scan_for_non_space
                           A   908    
0010B3 2B                  A   909    				dec hl							0010B4 23                  A   910    os_nsplp		inc hl			
0010B5 7E                  A   911    				ld a,(hl)			
0010B6 B7                  A   912    				or a			
0010B7 C8                  A   913    				ret z							0010B8 FE20                A   914    				cp ' '
0010BA 28 F8               A   915    				jr z,os_nsplp
0010BC C9                  A   916    				ret
                           A   917    	
                           A   918    	
                           A   919    ;----------------------------------------------
                           A   920    
0010BD                     A   921    os_args_to_alt_filename
                           A   922    
0010BD CD 15 11 00         A   923    				call os_atfn_pre				0010C1 C8                  A   924    				ret z
0010C2 CD A3 59 00         A   925    				call fs_hl_to_alt_filename
0010C6 18 09               A   926    				jr os_atfrl
                           A   927    	
                           A   928    	
                           A   929    	
                           A   930    		
0010C8                     A   931    os_args_to_filename
                           A   932    
0010C8 CD 15 11 00         A   933    				call os_atfn_pre				0010CC C8                  A   934    				ret z
0010CD CD A9 59 00         A   935    				call fs_hl_to_filename	
                           A   936    
0010D1 7E                  A   937    os_atfrl		ld a,(hl)						0010D2 B7                  A   938    				or a							0010D3 28 0B               A   939    				jr z,os_cfne
0010D5 FE20                A   940    				cp 32
0010D7 28 07               A   941    				jr z,os_cfne
0010D9 FE2F                A   942    				cp 02fh
0010DB 28 03               A   943    				jr z,os_cfne
0010DD 23                  A   944    				inc hl
0010DE 18 F1               A   945    				jr os_atfrl	
0010E0 22 F7 69 00         A   946    os_cfne			ld (os_args_loc),hl				0010E4 79                  A   947    				ld a,c			
0010E5 B7                  A   948    				or a							0010E6 C9                  A   949    				ret
                           A   950    
                           A   951    
                           A   952    
0010E7                     A   953    os_args_to_fn_append_extn
                           A   954    
                           A   955    ; Set BC to location of extension text
                           A   956    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  22


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0010E7 CD 15 11 00         A   957    				call os_atfn_pre				0010EB C8                  A   958    				ret z
0010EC 11 D2 68 00         A   959    				ld de,temp_string
0010F0 7E                  A   960    ccmdtlp			ld a,(hl)						0010F1 B7                  A   961    				or a
0010F2 28 0D               A   962    				jr z,goteocmd
0010F4 FE20                A   963    				cp ' '
0010F6 28 09               A   964    				jr z,goteocmd
0010F8 FE2E                A   965    				cp '.'
0010FA 28 05               A   966    				jr z,goteocmd
0010FC 12                  A   967    				ld (de),a
0010FD 13                  A   968    				inc de
0010FE 23                  A   969    				inc hl
0010FF 18 EF               A   970    				jr ccmdtlp
                           A   971    	
001101 E5                  A   972    goteocmd		push hl
001102 C5                  A   973    				push bc
001103 E1                  A   974    				pop hl
001104 01050000            A   975    				ld bc,5
001108 EDB0                A   976    				ldir 
00110A 21 D2 68 00         A   977    				ld hl,temp_string
00110E CD A9 59 00         A   978    				call fs_hl_to_filename
001112 E1                  A   979    				pop hl
001113 18 BC               A   980    				jr os_atfrl
                           A   981    	
                           A   982    
                           A   983    
                           A   984    
001115                     A   985    os_atfn_pre
                           A   986    
001115 2A F7 69 00         A   987    				ld hl,(os_args_loc)				001119 CD B3 10 00         A   988    				call os_scan_for_non_space
00111D B7                  A   989    				or a
00111E C8                  A   990    				ret z
00111F 7E                  A   991    				ld a,(hl)
001120 FE2F                A   992    				cp 02fh							001122 20 01               A   993    				jr nz,notfsl1
001124 23                  A   994    				inc hl
001125 AF                  A   995    notfsl1			xor a
001126 3C                  A   996    				inc a
001127 C9                  A   997    				ret
                           A   998    
                           A   999    
                           A  1000    ;--------- Number <-> String functions --------
                           A  1001    
                           A  1002    
001128                     A  1003    os_clear_output_line
                           A  1004    
001128 C5                  A  1005    				push bc
001129 E5                  A  1006    				push hl			
00112A 21 A5 69 00         A  1007    				ld hl,output_line
00112E 01500000            A  1008    				ld bc,max_buffer_chars
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  23


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001132 3E20                A  1009    				ld a,32
001134 CD FC 15 00         A  1010    				call os_bchl_memfill
001138 E1                  A  1011    				pop hl
001139 C1                  A  1012    				pop bc
00113A C9                  A  1013    				ret
                           A  1014    	
                           A  1015    	
                           A  1016    	
00113B                     A  1017    os_skip_leading_ascii_zeros
                           A  1018    
00113B 7E                  A  1019    slazlp			ld a,(hl)						00113C FE30                A  1020    				cp '0'							00113E C0                  A  1021    				ret nz
00113F 23                  A  1022    				inc hl
001140 10 F9               A  1023    				djnz slazlp
001142 C9                  A  1024    				ret
                           A  1025    	
                           A  1026    
                           A  1027    
001143                     A  1028    os_leading_ascii_zeros_to_spaces
                           A  1029    
001143 E5                  A  1030    				push hl
001144 7E                  A  1031    clazlp			ld a,(hl)						001145 FE30                A  1032    				cp '0'							001147 20 05               A  1033    				jr nz,claze	
001149 3620                A  1034    				ld (hl),' '
00114B 23                  A  1035    				inc hl
00114C 10 F6               A  1036    				djnz clazlp
00114E E1                  A  1037    claze			pop hl
00114F C9                  A  1038    				ret
                           A  1039    	
                           A  1040    
                           A  1041    
                           A  1042    		
001150                     A  1043    n_hexbytes_to_ascii
                           A  1044    
001150 1A                  A  1045    				ld a,(de)						001151 CD 5E 11 00         A  1046    				call hexbyte_to_ascii			001155 1B                  A  1047    				dec de
001156 10 F8               A  1048    				djnz n_hexbytes_to_ascii
001158 C9                  A  1049    				ret
                           A  1050    			
                           A  1051    			
                           A  1052    
001159                     A  1053    ext_hexbyte_to_ascii
                           A  1054    
001159 CC 23 16 00         A  1055    				call z,mbase_hl
00115D 7B                  A  1056    				ld a,e
                           A  1057    
00115E                     A  1058    hexbyte_to_ascii
                           A  1059    
00115E C5                  A  1060    				push bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  24


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00115F 47                  A  1061    				ld b,a							001160 CB3F                A  1062    				srl a							001162 CB3F                A  1063    				srl a
001164 CB3F                A  1064    				srl a
001166 CB3F                A  1065    				srl a
001168 CD 7A 11 00         A  1066    				call hxdigconv
00116C 77                  A  1067    				ld (hl),a
00116D 23                  A  1068    				inc hl
00116E 78                  A  1069    				ld a,b
00116F E60F                A  1070    				and 0fh
001171 CD 7A 11 00         A  1071    				call hxdigconv
001175 77                  A  1072    				ld (hl),a
001176 23                  A  1073    				inc hl
001177 C1                  A  1074    				pop bc
001178 AF                  A  1075    				xor a							001179 C9                  A  1076    				ret
                           A  1077    				
00117A C630                A  1078    hxdigconv		add a,030h
00117C FE3A                A  1079    				cp 03ah
00117E 38 02               A  1080    				jr c,hxdone
001180 C607                A  1081    				add a,7
001182 C9                  A  1082    hxdone			ret
                           A  1083    
                           A  1084    
                           A  1085    
                           A  1086    
001183                     A  1087    hexword_to_ascii	
                           A  1088    
001183 7A                  A  1089    				ld a,d							001184 CD 5E 11 00         A  1090    				call hexbyte_to_ascii
001188 7B                  A  1091    				ld a,e
001189 CD 5E 11 00         A  1092    				call hexbyte_to_ascii
00118D C9                  A  1093    				ret
                           A  1094    	
                           A  1095    
                           A  1096    
                           A  1097    
00118E                     A  1098    ext_ascii_to_hexword
                           A  1099    		
00118E CC 23 16 00         A  1100    				call z,mbase_hl
                           A  1101    
001192                     A  1102    ascii_to_hexword
                           A  1103    	
001192 CD B3 10 00         A  1104    				call os_scan_for_non_space		001196 B7                  A  1105    				or a
001197 20 04               A  1106    				jr nz,ascii_to_hex_no_scan
001199 3E81                A  1107    				ld a,081h						00119B B7                  A  1108    				or a
00119C C9                  A  1109    				ret	
                           A  1110    
                           A  1111    	
00119D                     A  1112    ascii_to_hex_no_scan
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  25


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1113    
00119D DDE5                A  1114    				push ix
00119F C5                  A  1115    				push bc
0011A0 DD210000 00         A  1116    				ld ix,0
0011A5 0606                A  1117    				ld b,6							0011A7 CD D3 11 00         A  1118    athlp			call ascii_to_hex_digit
0011AB FEF0                A  1119    				cp 0f0h							0011AD 28 17               A  1120    				jr z,athend
0011AF FED0                A  1121    				cp 0d0h
0011B1 28 13               A  1122    				jr z,athend						0011B3 FE10                A  1123    				cp 16
0011B5 30 17               A  1124    				jr nc,badhex					0011B7 DD29                A  1125    				add ix,ix						0011B9 DD29                A  1126    				add ix,ix
0011BB DD29                A  1127    				add ix,ix
0011BD DD29                A  1128    				add ix,ix
0011BF DDB5                A  1129    				or a,ixl
0011C1 DD6F                A  1130    				ld ixl,a
0011C3 23                  A  1131    				inc hl
0011C4 10 E1               A  1132    				djnz athlp
0011C6 DDE5                A  1133    athend			push ix
0011C8 D1                  A  1134    				pop de
0011C9 AF                  A  1135    				xor a
0011CA C1                  A  1136    ath_quit		pop bc
0011CB DDE1                A  1137    				pop ix							0011CD C9                  A  1138    				ret
                           A  1139    		
0011CE 3E82                A  1140    badhex			ld a,82h						0011D0 B7                  A  1141    				or a
0011D1 18 F7               A  1142    				jr ath_quit
                           A  1143    				
                           A  1144    	
                           A  1145    		
0011D3                     A  1146    ascii_to_hex_digit
                           A  1147    
0011D3 7E                  A  1148    				ld a,(hl)						0011D4 FE61                A  1149    				cp 061h
0011D6 38 02               A  1150    				jr c,hc_uppercase
0011D8 D620                A  1151    				sub 020h						0011DA D63A                A  1152    hc_uppercase	sub 03ah						0011DC 38 02               A  1153    				jr c,zeronine
0011DE C6F9                A  1154    				add a,0f9h
0011E0 C60A                A  1155    zeronine		add a,0ah
0011E2 C9                  A  1156    				ret
                           A  1157    
                           A  1158    
                           A  1159    ;--------- Text Input / Non-numeric string func
                           A  1160    
                           A  1161    ; Waits for user to enter a string of character
                           A  1162    ; Before calling, set:  HL = destination of str
                           A  1163    ;                        E = max number of char
                           A  1164    ; Returns:   A  = number of characters in enter
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  26


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1165    
                           A  1166    
0011E3                     A  1167    ext_user_input
0011E3 CC 23 16 00         A  1168    				call z,mbase_hl
                           A  1169    				
0011E7                     A  1170    os_user_input
0011E7 AF                  A  1171    				xor a
0011E8 32 C0 66 00         A  1172    				ld (ui_index),a
0011EC 22 C2 66 00         A  1173    				ld (ui_string_addr),hl
0011F0 7B                  A  1174    				ld a,e
0011F1 32 C1 66 00         A  1175    				ld (ui_maxchars),a
                           A  1176    				
0011F5 3A ED 66 00         A  1177    				ld a,(overwrite_mode)
0011F9 32 52 69 00         A  1178    				ld (ui_im_cache),a
0011FD AF                  A  1179    				xor a
0011FE 32 ED 66 00         A  1180    				ld (overwrite_mode),a			                           A  1181    				
001202 CD B0 45 00         A  1182    ui_loop			call hwsc_draw_cursor			001206 CD F8 4A 00         A  1183    				call os_wait_key_press			00120A 32 71 6A 00         A  1184    				ld (current_scancode),a
00120E 78                  A  1185    				ld a,b
00120F 32 72 6A 00         A  1186    				ld (current_asciicode),a		001213 CD 96 45 00         A  1187    				call hwsc_remove_cursor
                           A  1188    	
001217 3A 71 6A 00         A  1189    				ld a,(current_scancode)
00121B FE66                A  1190    				cp 066h							00121D 20 1F               A  1191    				jr nz,os_nuibs
00121F 3A C0 66 00         A  1192    				ld a,(ui_index)
001223 B7                  A  1193    				or a
001224 28 DC               A  1194    				jr z,ui_loop					001226 21 36 69 00         A  1195    				ld hl,cursor_x					00122A 35                  A  1196    				dec (hl)						00122B 46                  A  1197    os_uixok		ld b,(hl)		
00122C 3A 35 69 00         A  1198    				ld a,(cursor_y)
001230 4F                  A  1199    				ld c,a
001231 3E20                A  1200    				ld a,32
001233 CD 5D 45 00         A  1201    				call hwsc_plot_char
001237 21 C0 66 00         A  1202    				ld hl,ui_index
00123B 35                  A  1203    				dec (hl)						00123C 18 C4               A  1204    				jr ui_loop
                           A  1205    
00123E FE76                A  1206    os_nuibs		cp 076h							001240 28 6B               A  1207    				jr z,ui_aborted
001242 FE5A                A  1208    				cp 05ah							001244 28 46               A  1209    				jr z,ui_enter_pressed
                           A  1210    	
001246 3A C0 66 00         A  1211    				ld a,(ui_index)					00124A 21 C1 66 00         A  1212    				ld hl,ui_maxchars
00124E BE                  A  1213    				cp (hl)
00124F 28 B1               A  1214    				jr z,ui_loop	
                           A  1215    
001251 3A 72 6A 00         A  1216    				ld a,(current_asciicode)		Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  27


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001255 FE20                A  1217    				cp 32							001257 38 A9               A  1218    				jr c,ui_loop					                           A  1219    
001259 57                  A  1220    ui_gtcha		ld d,a
00125A 2A C2 66 00         A  1221    				ld hl,(ui_string_addr)
00125E 3A C0 66 00         A  1222    				ld a,(ui_index)
001262 01000000            A  1223    				ld bc,0
001266 4F                  A  1224    				ld c,a
001267 09                  A  1225    				add hl,bc
001268 72                  A  1226    				ld (hl),d						001269 3C                  A  1227    				inc a
00126A 32 C0 66 00         A  1228    				ld (ui_index),a					                           A  1229    				
00126E ED4B 35 69 00       A  1230    				ld bc,(cursor_y)				001273 7A                  A  1231    				ld a,d
001274 CD 5D 45 00         A  1232    				call hwsc_plot_char		
001278 21 36 69 00         A  1233    				ld hl,cursor_x					00127C 34                  A  1234    				inc (hl)
00127D 3A F3 66 00         A  1235    				ld a,(charmap_columns)			001281 BE                  A  1236    				cp (hl)
001282 C2 02 12 00         A  1237    				jp nz,ui_loop
001286 3600                A  1238    				ld (hl),0
001288 C3 02 12 00         A  1239    				jp ui_loop
                           A  1240    
00128C                     A  1241    ui_enter_pressed
                           A  1242    				
00128C 3A 52 69 00         A  1243    				ld a,(ui_im_cache)				001290 32 ED 66 00         A  1244    				ld (overwrite_mode),a
001294 3A C0 66 00         A  1245    				ld a,(ui_index)					001298 B7                  A  1246    				or a
001299 20 04               A  1247    				jr nz,ui_data
00129B 3E81                A  1248    				ld a,081h						00129D B7                  A  1249    				or a
00129E C9                  A  1250    				ret
00129F 2A C2 66 00         A  1251    ui_data			ld hl,(ui_string_addr)
0012A3 11000000            A  1252    				ld de,0
0012A7 5F                  A  1253    				ld e,a
0012A8 19                  A  1254    				add hl,de
0012A9 3600                A  1255    				ld (hl),0						0012AB BF                  A  1256    				cp a							0012AC C9                  A  1257    				ret
                           A  1258    
0012AD 3A 52 69 00         A  1259    ui_aborted		ld a,(ui_im_cache)				0012B1 32 ED 66 00         A  1260    				ld (overwrite_mode),a
0012B5 3E80                A  1261    				ld a,080h						0012B7 B7                  A  1262    				or a							0012B8 C9                  A  1263    				ret
                           A  1264    		
                           A  1265    ;----------------------------------------------
                           A  1266    	
0012B9                     A  1267    os_count_lines
                           A  1268    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  28


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0012B9 E5                  A  1269    				push hl							0012BA 0679                A  1270    				ld b,'y'						0012BC 21 3A 69 00         A  1271    				ld hl,os_linecount			
0012C0 34                  A  1272    				inc (hl)						0012C1 3A F0 66 00         A  1273    				ld a,(charmap_rows)
0012C5 D604                A  1274    				sub 4
0012C7 BE                  A  1275    				cp (hl)
0012C8 20 0E               A  1276    				jr nz,os_nntpo
0012CA 3600                A  1277    				ld (hl),0
0012CC 21 DE 5D 00         A  1278    				ld hl,os_more_txt
0012D0 CD 15 10 00         A  1279    				call os_print_string
0012D4 CD F8 4A 00         A  1280    				call os_wait_key_press	
0012D8 E1                  A  1281    os_nntpo		pop hl
0012D9 C9                  A  1282    				ret
                           A  1283    
                           A  1284    ;----------------------------------------------
                           A  1285    
0012DA                     A  1286    ext_compare_strings
                           A  1287    	
0012DA CC 23 16 00         A  1288    				call z,mbase_hl
0012DE CC 34 16 00         A  1289    				call z,mbase_de
                           A  1290    				
0012E2                     A  1291    os_compare_strings
                           A  1292    
                           A  1293    ; both strings at HL/DE should be zero terminat
                           A  1294    ; compare will fail if string lengths are diffe
                           A  1295    ; unless count (B) is reached first
                           A  1296    ; Case is ignored
                           A  1297    ; Zero flag set on return if same
                           A  1298    
0012E2 E5                  A  1299    				push hl							0012E3 D5                  A  1300    				push de							0012E4 1A                  A  1301    ocslp			ld a,(de)						0012E5 B7                  A  1302    				or a
0012E6 28 0C               A  1303    				jr z,ocsbt
0012E8 CD 25 13 00         A  1304    				call case_insensitive_compare	0012EC 20 0E               A  1305    				jr nz,ocs_diff
0012EE 13                  A  1306    				inc de
0012EF 23                  A  1307    				inc hl
0012F0 10 F2               A  1308    				djnz ocslp
0012F2 18 04               A  1309    				jr ocs_same
0012F4 1A                  A  1310    ocsbt			ld a,(de)						0012F5 B6                  A  1311    				or (hl)
0012F6 20 04               A  1312    				jr nz,ocs_diff
0012F8 D1                  A  1313    ocs_same		pop de
0012F9 E1                  A  1314    				pop hl
0012FA AF                  A  1315    				xor a							0012FB C9                  A  1316    				ret
0012FC D1                  A  1317    ocs_diff		pop de
0012FD E1                  A  1318    				pop hl
0012FE AF                  A  1319    				xor a							0012FF 3C                  A  1320    				inc a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  29


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001300 C9                  A  1321    				ret
                           A  1322    
                           A  1323    
                           A  1324    ;----------------------------------------------
                           A  1325    
001301                     A  1326    os_copy_ascii_run
                           A  1327    
                           A  1328    ;INPUT HL = source ($00 or $20 terminates)
                           A  1329    ;      DE = dest
                           A  1330    ;       b = max chars
                           A  1331    
                           A  1332    ;OUTPUT HL/DE = end of runs
                           A  1333    ;           c = char count
                           A  1334    	
001301 0E00                A  1335    				ld c,0
001303 7E                  A  1336    cpyar_lp		ld a,(hl)
001304 B7                  A  1337    				or a
001305 C8                  A  1338    				ret z
001306 FE20                A  1339    				cp 32
001308 C8                  A  1340    				ret z
001309 12                  A  1341    				ld (de),a
00130A 23                  A  1342    				inc hl
00130B 13                  A  1343    				inc de
00130C 0C                  A  1344    				inc c
00130D 10 F4               A  1345    				djnz cpyar_lp
00130F C9                  A  1346    				ret
                           A  1347    
                           A  1348    ;----------------------------------------------
                           A  1349    
001310                     A  1350    uppercasify_string
                           A  1351    
                           A  1352    ; Set HL to string location ($00 quits)
                           A  1353    ; Set B to max number of chars
                           A  1354    
001310 7E                  A  1355    				ld a,(hl)
001311 B7                  A  1356    				or a
001312 C8                  A  1357    				ret z
001313 CD 1C 13 00         A  1358    				call os_uppercasify
001317 77                  A  1359    				ld (hl),a
001318 23                  A  1360    				inc hl
001319 10 F5               A  1361    				djnz uppercasify_string	
00131B C9                  A  1362    				ret
                           A  1363    	
                           A  1364    
00131C                     A  1365    os_uppercasify
                           A  1366    
                           A  1367    ; INPUT/OUTPUT A = ascii char to make uppercase
                           A  1368    
00131C FE61                A  1369    				cp 061h			
00131E D8                  A  1370    				ret c
00131F FE7B                A  1371    				cp 07bh
001321 D0                  A  1372    				ret nc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  30


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001322 D620                A  1373    				sub 020h				
001324 C9                  A  1374    				ret
                           A  1375    
                           A  1376    ;----------------------------------------------
                           A  1377    
001325                     A  1378    case_insensitive_compare
                           A  1379    
                           A  1380    ; compares A with (HL) disregarding the case of
                           A  1381    ; Zero flag set if the characters are the same
                           A  1382    ; all registers are preserved.
                           A  1383    
001325 C5                  A  1384    				push bc					
001326 4F                  A  1385    				ld c,a
                           A  1386    
001327 CD 1C 13 00         A  1387    				call os_uppercasify				00132B 47                  A  1388    				ld b,a
00132C 7E                  A  1389    				ld a,(hl)
00132D CD 1C 13 00         A  1390    				call os_uppercasify
001331 B8                  A  1391    				cp b
                           A  1392    
001332 79                  A  1393    				ld a,c
001333 C1                  A  1394    				pop bc
001334 C9                  A  1395    				ret
                           A  1396    
                           A  1397    ;----------------------------------------------
                           A  1398    
001335                     A  1399    os_decimal_add
                           A  1400    
                           A  1401    ;INPUT HL = source LSB, DE = dest LSB, b = numb
                           A  1402    
001335 C5                  A  1403    				push bc
001336 0E00                A  1404    				ld c,0
001338 1A                  A  1405    decdlp			ld a,(de)
001339 86                  A  1406    				add a,(hl)
00133A 81                  A  1407    				add a,c
00133B FE0A                A  1408    				cp 10
00133D 38 0B               A  1409    				jr c,daddnc
00133F D60A                A  1410    				sub 10
001341 0E01                A  1411    				ld c,1
001343 12                  A  1412    decnclp			ld (de),a
001344 23                  A  1413    				inc hl
001345 13                  A  1414    				inc de
001346 10 F0               A  1415    				djnz decdlp
001348 C1                  A  1416    				pop bc
001349 C9                  A  1417    				ret
00134A 0E00                A  1418    daddnc			ld c,0
00134C 18 F5               A  1419    				jr decnclp
                           A  1420    	
                           A  1421    ;----------------------------------------------
                           A  1422    
00134E                     A  1423    os_hex_to_decimal
                           A  1424    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  31


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1425    ; INPUT xDE hex longword
                           A  1426    ; OUTPUT xHL = decimal LSB address (8 digits) 
                           A  1427    
       00000100            A  1428    hex_to_convert		equ scratch_pad
       00000103            A  1429    decimal_digits		equ scratch_pad+3
       0000010B            A  1430    decimal_add_digits	equ scratch_pad+3+8
                           A  1431    
00134E ED530001 00         A  1432    				ld (hex_to_convert),de
                           A  1433    		
001353 210B0100            A  1434    				ld hl,decimal_add_digits
001357 E5                  A  1435    				push hl
001358 11030100            A  1436    				ld de,decimal_digits
00135C AF                  A  1437    				xor a
00135D 0608                A  1438    				ld b,8
00135F 12                  A  1439    setupdec		ld (de),a
001360 77                  A  1440    				ld (hl),a
001361 23                  A  1441    				inc hl
001362 13                  A  1442    				inc de
001363 10 FA               A  1443    				djnz setupdec
001365 E1                  A  1444    				pop hl
001366 3601                A  1445    				ld (hl),1
                           A  1446    	
001368 21000100            A  1447    				ld hl,hex_to_convert
00136C 0603                A  1448    				ld b,3
00136E C5                  A  1449    decconvlp		push bc
00136F 7E                  A  1450    				ld a,(hl)
001370 CD 8E 13 00         A  1451    				call decadder
001374 CD A7 13 00         A  1452    				call decaddx16
001378 7E                  A  1453    				ld a,(hl)
001379 0F                  A  1454    				rrca
00137A 0F                  A  1455    				rrca
00137B 0F                  A  1456    				rrca
00137C 0F                  A  1457    				rrca
00137D CD 8E 13 00         A  1458    				call decadder
001381 CD A7 13 00         A  1459    				call decaddx16
001385 C1                  A  1460    				pop bc
001386 23                  A  1461    				inc hl
001387 10 E5               A  1462    				djnz decconvlp
001389 21030100            A  1463    				ld hl,decimal_digits
00138D C9                  A  1464    				ret
                           A  1465    
                           A  1466    
                           A  1467    
00138E E60F                A  1468    decadder		and 15
001390 C8                  A  1469    				ret z
001391 47                  A  1470    				ld b,a
001392 E5                  A  1471    				push hl
001393 C5                  A  1472    daddlp			push bc
001394 11030100            A  1473    				ld de,decimal_digits
001398 210B0100            A  1474    				ld hl,decimal_add_digits
00139C 0608                A  1475    				ld b,8
00139E CD 35 13 00         A  1476    				call os_decimal_add
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  32


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0013A2 C1                  A  1477    				pop bc
0013A3 10 EE               A  1478    				djnz daddlp	
0013A5 E1                  A  1479    				pop hl
0013A6 C9                  A  1480    				ret
                           A  1481    			
                           A  1482    				
0013A7 E5                  A  1483    decaddx16		push hl
0013A8 0604                A  1484    				ld b,4							0013AA C5                  A  1485    x16loop			push bc
0013AB 110B0100            A  1486    				ld de,decimal_add_digits
0013AF 210B0100            A  1487    				ld hl,decimal_add_digits
0013B3 0608                A  1488    				ld b,8
0013B5 CD 35 13 00         A  1489    				call os_decimal_add
0013B9 C1                  A  1490    				pop bc
0013BA 10 EE               A  1491    				djnz x16loop	
0013BC E1                  A  1492    				pop hl
0013BD C9                  A  1493    				ret
                           A  1494    	
                           A  1495    	
                           A  1496    ;----------------------------------------------
                           A  1497    
0013BE                     A  1498    os_show_decimal
                           A  1499    
0013BE 11 A5 69 00         A  1500    				ld de,output_line				0013C2 01090000            A  1501    				ld bc,9
0013C6 09                  A  1502    				add hl,bc
0013C7 060A                A  1503    				ld b,10
0013C9 7E                  A  1504    shdeclp			ld a,(hl)
0013CA B7                  A  1505    				or a
0013CB 28 04               A  1506    				jr z,dnodigit
0013CD C630                A  1507    				add a,030h
0013CF 12                  A  1508    				ld (de),a
0013D0 13                  A  1509    				inc de
0013D1 2B                  A  1510    dnodigit		dec hl
0013D2 10 F5               A  1511    				djnz shdeclp
0013D4 AF                  A  1512    				xor a
0013D5 12                  A  1513    				ld (de),a
0013D6 CD 1E 14 00         A  1514    				call os_print_output_line
0013DA C9                  A  1515    				ret
                           A  1516    				
                           A  1517    ;----------------------------------------------
                           A  1518    		
0013DB                     A  1519    os_copy_to_output_line
                           A  1520    	
0013DB D5                  A  1521    				push de
0013DC C5                  A  1522    				push bc
0013DD 11 A5 69 00         A  1523    				ld de,output_line				0013E1 01510000            A  1524    				ld bc,max_buffer_chars+1		0013E5 EDA0                A  1525    os_cloll		ldi
0013E7 7E                  A  1526    				ld a,(hl)
0013E8 B7                  A  1527    				or a
0013E9 28 04               A  1528    				jr z,os_clold
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  33


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0013EB 78                  A  1529    				ld a,b
0013EC B1                  A  1530    				or c
0013ED 20 F6               A  1531    				jr nz,os_cloll
0013EF 12                  A  1532    os_clold		ld (de),a
0013F0 C1                  A  1533    				pop bc
0013F1 D1                  A  1534    				pop de
0013F2 C9                  A  1535    				ret
                           A  1536    
                           A  1537    
                           A  1538    ;----------------------------------------------
                           A  1539    
0013F3                     A  1540    os_show_hex_address
                           A  1541    
0013F3 E5                  A  1542    				push hl							0013F4 21 A5 69 00         A  1543    				ld hl,output_line
0013F8 ED53 47 69 00       A  1544    				ld (hex_address),de
0013FD 3A 49 69 00         A  1545    				ld a,(hex_address+2)
001401 CD 5E 11 00         A  1546    				call hexbyte_to_ascii
001405 18 10               A  1547    				jr shw_nt
                           A  1548    				
                           A  1549    
001407                     A  1550    os_show_hex_byte
                           A  1551    
001407 E5                  A  1552    				push hl							001408 21 A5 69 00         A  1553    				ld hl,output_line
00140C CD 5E 11 00         A  1554    				call hexbyte_to_ascii
001410 18 09               A  1555    				jr shb_nt
                           A  1556    
                           A  1557    
                           A  1558    
001412                     A  1559    os_show_hex_word
                           A  1560    
001412 E5                  A  1561    				push hl							001413 21 A5 69 00         A  1562    				ld hl,output_line
001417 CD 83 11 00         A  1563    shw_nt			call hexword_to_ascii
00141B 3600                A  1564    shb_nt			ld (hl),0
00141D E1                  A  1565    				pop hl
                           A  1566    
                           A  1567    	
                           A  1568    
00141E                     A  1569    os_print_output_line
                           A  1570    
00141E E5                  A  1571    				push hl
00141F 21 A5 69 00         A  1572    				ld hl,output_line
001423 CD 15 10 00         A  1573    cproline		call os_print_string
001427 E1                  A  1574    				pop hl
001428 C9                  A  1575    				ret
                           A  1576    
                           A  1577    
                           A  1578    
001429                     A  1579    os_print_output_line_skip_zeroes
                           A  1580    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  34


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001429 E5                  A  1581    				push hl
00142A 21 A5 69 00         A  1582    				ld hl,output_line
00142E CD 3B 11 00         A  1583    				call os_skip_leading_ascii_zero
001432 18 EF               A  1584    				jr cproline
                           A  1585    				
                           A  1586    		
                           A  1587    ;----------------------------------------------
                           A  1588    
001434                     A  1589    os_store_CPU_regs
                           A  1590    
001434 F3                  A  1591    				di								                           A  1592    
001435 33                  A  1593    				inc sp							001436 33                  A  1594    				inc sp
001437 33                  A  1595    				inc sp
001438 ED73 C3 68 00       A  1596    				ld (store_spl),sp
00143D 3B                  A  1597    				dec sp							00143E 3B                  A  1598    				dec sp
00143F 3B                  A  1599    				dec sp
                           A  1600    				
001440 F5                  A  1601    				push af
001441 32 A6 68 00         A  1602    				ld (store_a1),a					001445 08                  A  1603    				ex af,af'
001446 32 B0 68 00         A  1604    				ld (store_a2),a
00144A 08                  A  1605    				ex af,af'
00144B ED43 A7 68 00       A  1606    				ld (store_bc1),bc		
001450 ED53 AA 68 00       A  1607    				ld (store_de1),de
001455 22 AD 68 00         A  1608    				ld (store_hl1),hl
001459 D9                  A  1609    				exx
00145A ED43 B1 68 00       A  1610    				ld (store_bc2),bc
00145F ED53 B4 68 00       A  1611    				ld (store_de2),de
001464 22 B7 68 00         A  1612    				ld (store_hl2),hl
001468 D9                  A  1613    				exx
001469 DD22 BA 68 00       A  1614    				ld (store_ix),ix
00146E FD22 BD 68 00       A  1615    				ld (store_iy),iy
                           A  1616    				
001473 ED6E                A  1617    			    ld a,MB
001475 32 C8 68 00         A  1618    				ld (store_mbase),a
                           A  1619    								
001479 C5                  A  1620    				push bc
00147A 0600                A  1621    				ld b,0
00147C 20 02               A  1622    				jr nz,zfstzero					00147E CBF0                A  1623    				set 6,b
                           A  1624    
001480 30 02               A  1625    zfstzero		jr nc,cfstzero					001482 CBC0                A  1626    				set 0,b
                           A  1627    
001484 F2 8A 14 00         A  1628    cfstzero		jp p,sfstzero					001488 CBF8                A  1629    				set 7,b
                           A  1630    
00148A EA 90 14 00         A  1631    sfstzero		jp pe,pfstzero					00148E CBD0                A  1632    				set 2,b
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  35


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1633    
001490 ED57                A  1634    pfstzero		ld a,i			
001492 EA 98 14 00         A  1635    				jp pe,ifstzero					001496 CBE0                A  1636    				set 4,b
                           A  1637    
001498 78                  A  1638    ifstzero		ld a,b
001499 32 C9 68 00         A  1639    				ld (store_f),a
                           A  1640    				
00149D 3E00                A  1641    				ld a,os_location/65536			00149F ED6D                A  1642    				ld MB,a							0014A1 40ED73 C6 68        A  1643    				ld.sis (store_sps),sp
0014A6 3A C8 68 00         A  1644    				ld a,(store_mbase)				0014AA ED6D                A  1645    				ld MB,a
                           A  1646    				
0014AC C1                  A  1647    				pop bc
0014AD F1                  A  1648    				pop af
0014AE FB                  A  1649    				ei
0014AF C9                  A  1650    				ret
                           A  1651    
                           A  1652    
                           A  1653    
0014B0                     A  1654    os_dont_store_registers
                           A  1655    
0014B0 AF                  A  1656    				xor a
0014B1 32 CE 68 00         A  1657    				ld (store_registers),a			0014B5 C9                  A  1658    				ret
                           A  1659    	
                           A  1660    	
                           A  1661    ;----------------------------------------------
                           A  1662    
0014B6                     A  1663    os_new_line_cond
                           A  1664    
0014B6 CD 8D 1A 00         A  1665    				call test_quiet_mode
0014BA C0                  A  1666    				ret nz
                           A  1667    
                           A  1668    	
0014BB                     A  1669    os_new_line
                           A  1670    
0014BB E5                  A  1671    				push hl
0014BC 21 F6 5D 00         A  1672    				ld hl,crlfx2_txt+1
0014C0 CD 15 10 00         A  1673    				call os_print_string
0014C4 E1                  A  1674    				pop hl
0014C5 C9                  A  1675    				ret
                           A  1676    				
                           A  1677    ;----------------------------------------------
                           A  1678    
0014C6                     A  1679    os_set_cursor_position
                           A  1680    				
                           A  1681    												0014C6 3A F0 66 00         A  1682    				ld a,(charmap_rows)				0014CA 3D                  A  1683    				dec a							0014CB B9                  A  1684    				cp c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  36


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0014CC 38 14               A  1685    				jr c,badpos
0014CE 79                  A  1686    				ld a,c
0014CF 32 35 69 00         A  1687    				ld (cursor_y),a
                           A  1688    				
0014D3 3A F3 66 00         A  1689    				ld a,(charmap_columns)
0014D7 3D                  A  1690    				dec a
0014D8 B8                  A  1691    				cp b
0014D9 38 07               A  1692    				jr c,badpos
0014DB 78                  A  1693    				ld a,b
0014DC 32 36 69 00         A  1694    				ld (cursor_x),a
0014E0 AF                  A  1695    				xor a
0014E1 C9                  A  1696    				ret				
                           A  1697    
0014E2 3E88                A  1698    badpos			ld a,88h						0014E4 B7                  A  1699    				or a
0014E5 C9                  A  1700    				ret
                           A  1701    
                           A  1702    
                           A  1703    					
                           A  1704    	
                           A  1705    	
0014E6                     A  1706    os_get_cursor_position
                           A  1707    
0014E6 ED4B 35 69 00       A  1708    				ld bc,(cursor_pos)				0014EB BF                  A  1709    				cp a							0014EC C9                  A  1710    				ret
                           A  1711    
                           A  1712    
                           A  1713    ;----------------------------------------------
                           A  1714    
0014ED                     A  1715    os_show_packed_text_cond
                           A  1716    
0014ED CD 8D 1A 00         A  1717    				call test_quiet_mode
0014F1 C0                  A  1718    				ret nz
                           A  1719    
                           A  1720    	
0014F2                     A  1721    os_show_packed_text
                           A  1722    
                           A  1723    ; Construct sentence from internal dictionary u
                           A  1724    	
0014F2 C5                  A  1725    				push bc
0014F3 D5                  A  1726    				push de
0014F4 DDE5                A  1727    				push ix
0014F6 DD21 A5 69 00       A  1728    				ld ix,output_line
0014FB 7E                  A  1729    readpind		ld a,(hl)
0014FC B7                  A  1730    				or a
0014FD 20 10               A  1731    				jr nz,getword					0014FF DD2B                A  1732    				dec ix							001501 DD7700              A  1733    				ld (ix),a						                           A  1734    			
001504 E5                  A  1735    				push hl
001505 CD 1E 14 00         A  1736    				call os_print_output_line
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  37


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001509 E1                  A  1737    				pop hl
                           A  1738    			
00150A DDE1                A  1739    				pop ix
00150C D1                  A  1740    				pop de
00150D C1                  A  1741    				pop bc
00150E C9                  A  1742    				ret
                           A  1743    				
00150F 11 65 5E 00         A  1744    getword			ld de,dictionary-1
001513 0E00                A  1745    				ld c,0
001515 13                  A  1746    dictloop		inc de
001516 1A                  A  1747    				ld a,(de)
001517 B7                  A  1748    				or a							001518 28 04               A  1749    				jr z,faword
00151A CB7F                A  1750    				bit 7,a							00151C 28 F7               A  1751    				jr z,dictloop	
                           A  1752    			
00151E 0C                  A  1753    faword			inc c							00151F 79                  A  1754    				ld a,c
001520 BE                  A  1755    				cp (hl)
001521 20 F2               A  1756    				jr nz,dictloop
001523 13                  A  1757    copytol			inc de							001524 1A                  A  1758    				ld a,(de)
001525 B7                  A  1759    				or a
001526 28 0B               A  1760    				jr z,eoword						001528 CB7F                A  1761    				bit 7,a
00152A 20 07               A  1762    				jr nz,eoword
00152C DD7700              A  1763    				ld (ix),a						00152F DD23                A  1764    				inc ix
001531 18 F0               A  1765    				jr copytol
001533 DD360020            A  1766    eoword			ld (ix),32						001537 DD23                A  1767    				inc ix
001539 23                  A  1768    				inc hl
00153A 18 BF               A  1769    				jr readpind
                           A  1770    
                           A  1771    
                           A  1772    		
                           A  1773    ;--------- Mouse functions --------------------
                           A  1774    
00153C                     A  1775    os_set_mouse_window
                           A  1776    
                           A  1777    ; Set: HL/DE = window size mouse pointer is to 
                           A  1778    	
00153C 22 83 6A 00         A  1779    				ld (mouse_window_size_x),hl	 
001540 ED53 86 6A 00       A  1780    				ld (mouse_window_size_y),de
001545 21000000            A  1781    				ld hl,0
001549 22 89 6A 00         A  1782    				ld (mouse_abs_x),hl
00154D 22 8C 6A 00         A  1783    				ld (mouse_abs_y),hl
001551 3E01                A  1784    				ld a,1
001553 32 9B 6A 00         A  1785    				ld (mouse_new_window),a
001557 AF                  A  1786    				xor a
001558 C9                  A  1787    				ret
                           A  1788    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  38


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1789    			
001559                     A  1790    os_get_mouse_motion
                           A  1791    			
                           A  1792    ; Returns: ZF = Set: Relative X coord in HL, Re
                           A  1793    ;          ZF = Not set: Mouse driver not initi
                           A  1794    			
001559 3A 8A 68 00         A  1795    				ld a,(devices_connected)
00155D E602                A  1796    				and 2
00155F EE02                A  1797    				xor 2
001561 C0                  A  1798    				ret nz
                           A  1799    				
001562 AF                  A  1800    ms_reread		xor a
001563 32 82 6A 00         A  1801    				ld (mouse_updated),a
001567 2A 7B 6A 00         A  1802    				ld hl,(mouse_disp_x)			00156B ED5B 7E 6A 00       A  1803    				ld de,(mouse_disp_y)
001570 3A 82 6A 00         A  1804    				ld a,(mouse_updated)			001574 B7                  A  1805    				or a
001575 20 EB               A  1806    				jr nz,ms_reread
001577 AF                  A  1807    mouse_end		xor a
001578 3A 81 6A 00         A  1808    				ld a,(mouse_wheel)
00157C 47                  A  1809    				ld b,a
00157D 3A 7A 6A 00         A  1810    				ld a,(mouse_buttons)
001581 C9                  A  1811    				ret
                           A  1812    			
                           A  1813    			
001582                     A  1814    os_get_mouse_position
                           A  1815    
                           A  1816    ; Returns: ZF = Set: Abolute X coord in HL, Abs
                           A  1817    ;          ZF = Not set: Mouse driver not initi
                           A  1818    
001582 3A 8A 68 00         A  1819    				ld a,(devices_connected)
001586 E602                A  1820    				and 2
001588 EE02                A  1821    				xor 2
00158A C0                  A  1822    				ret nz
                           A  1823    				
00158B AF                  A  1824    ms_reread_abs	xor a
00158C 32 82 6A 00         A  1825    				ld (mouse_updated),a
                           A  1826    
001590 2A 89 6A 00         A  1827    				ld hl,(mouse_abs_x)
001594 ED5B 8C 6A 00       A  1828    				ld de,(mouse_abs_y)
001599 3A 82 6A 00         A  1829    				ld a,(mouse_updated)			00159D B7                  A  1830    				or a
00159E 20 EB               A  1831    				jr nz,ms_reread_abs
                           A  1832    				
0015A0 18 D5               A  1833    				jr mouse_end
                           A  1834    				
                           A  1835    	
                           A  1836    ;==============================================
                           A  1837    ;----- General Subroutines --------------------
                           A  1838    ;==============================================
                           A  1839    
                           A  1840    ; .--------------.
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  39


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1841    ; ! CRC Checksum !
                           A  1842    ; '--------------'
                           A  1843    
                           A  1844    ; makes 16 bit checksum in HL, src addr = DE, l
                           A  1845    
0015A2                     A  1846    crc_checksum
                           A  1847    
0015A2 21FFFF00            A  1848    				ld hl,0ffffh		
0015A6 1A                  A  1849    crcloop			ld a,(de)			
0015A7 AC                  A  1850    				xor h			
0015A8 67                  A  1851    				ld h,a			
0015A9 0608                A  1852    				ld b,8
0015AB 4029                A  1853    crcbyte			add.sis hl,hl					0015AD 30 08               A  1854    				jr nc,crcnext
0015AF 7C                  A  1855    				ld a,h
0015B0 EE10                A  1856    				xor 10h
0015B2 67                  A  1857    				ld h,a
0015B3 7D                  A  1858    				ld a,l
0015B4 EE21                A  1859    				xor 21h
0015B6 6F                  A  1860    				ld l,a
0015B7 10 F2               A  1861    crcnext			djnz crcbyte
0015B9 13                  A  1862    				inc de
0015BA 0D                  A  1863    				dec c
0015BB 20 E9               A  1864    				jr nz,crcloop
0015BD C9                  A  1865    				ret
                           A  1866    
                           A  1867    
                           A  1868    ;----------------------------------------------
                           A  1869    
0015BE                     A  1870    os_get_key_mod_flags
                           A  1871    
0015BE 3A 70 6A 00         A  1872    				ld a,(key_mod_flags)
0015C2 BF                  A  1873    				cp a							0015C3 C9                  A  1874    				ret
                           A  1875    
                           A  1876    ;----------------------------------------------
                           A  1877    
0015C4                     A  1878    os_get_vmode
                           A  1879    			
0015C4 3A F0 66 00         A  1880    				ld a,(charmap_rows)
0015C8 4F                  A  1881    				ld c,a
0015C9 3A F3 66 00         A  1882    				ld a,(charmap_columns)
0015CD 47                  A  1883    				ld b,a
0015CE 3A C5 66 00         A  1884    				ld a,(video_mode)
0015D2 BF                  A  1885    				cp a						; Z
0015D3 C9                  A  1886    				ret
                           A  1887    
                           A  1888    ;----------------------------------------------
                           A  1889    
0015D4 7B                  A  1890    ext_set_vmode	ld a,e
                           A  1891    
0015D5 FE04                A  1892    os_set_vmode	cp 4
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  40


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0015D7 38 04               A  1893    				jr c,vm_range_ok
0015D9 3E88                A  1894    				ld a,88h					;ou
0015DB B7                  A  1895    				or a
0015DC C9                  A  1896    				ret
                           A  1897    				
0015DD 32 C5 66 00         A  1898    vm_range_ok		ld (video_mode),a
0015E1 21030000            A  1899    				ld hl,3
0015E5 67                  A  1900    				ld h,a
0015E6 ED6C                A  1901    				mlt hl
0015E8 11 F6 66 00         A  1902    				ld de,vmode_parameter_list
0015EC 19                  A  1903    				add hl,de
0015ED 7E                  A  1904    				ld a,(hl)
0015EE 23                  A  1905    				inc hl
0015EF 46                  A  1906    				ld b,(hl)
0015F0 23                  A  1907    				inc hl
0015F1 4E                  A  1908    				ld c,(hl)
0015F2 CD 45 44 00         A  1909    				call set_charmap_parameters
                           A  1910    				
0015F6 CD E7 44 00         A  1911    				call hwsc_clear_screen
                           A  1912    
0015FA AF                  A  1913    				xor a				
0015FB C9                  A  1914    				ret
                           A  1915    
                           A  1916    
                           A  1917    ;----------------------------------------------
                           A  1918    
0015FC                     A  1919    os_bchl_memfill
                           A  1920    
                           A  1921    ; fill memory from xHL with A. Count in xBC.
                           A  1922    		
0015FC 77                  A  1923    mf_loop			ld (hl),a
0015FD EDA1                A  1924    				cpi								0015FF EA FC 15 00         A  1925    				jp pe,mf_loop
001603 C9                  A  1926    				ret
                           A  1927    	
                           A  1928    ;----------------------------------------------
                           A  1929    
001604 7B                  A  1930    ext_set_pen		ld a,e
                           A  1931    
001605 32 C6 66 00         A  1932    os_set_pen		ld (current_pen),a
001609 BF                  A  1933    				cp a							00160A C9                  A  1934    				ret
                           A  1935    
                           A  1936    ;----------------------------------------------
                           A  1937    	
00160B 3A C6 66 00         A  1938    os_get_pen		ld a,(current_pen)
00160F BF                  A  1939    				cp a							001610 C9                  A  1940    				ret	
                           A  1941    
                           A  1942    ;----------------------------------------------
                           A  1943    
001611                     A  1944    ext_background_colours
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  41


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1945    				
001611 CC 23 16 00         A  1946    				call z,mbase_hl
001615 C3 DB 44 00         A  1947    				jp hswc_set_ui_colours
                           A  1948    				
                           A  1949    				
                           A  1950    ;----------------------------------------------
                           A  1951    
001619                     A  1952    os_get_xde_msb	
                           A  1953    			
001619 ED53 4D 69 00       A  1954    				ld (xrr_temp),de				00161E 3A 4F 69 00         A  1955    				ld a,(xrr_temp+2)
001622 C9                  A  1956    				ret
                           A  1957    
                           A  1958    ;----------------------------------------------
                           A  1959    
001623 F5                  A  1960    mbase_hl		push af
001624 22 4D 69 00         A  1961    				ld (xrr_temp),hl				001628 ED6E                A  1962    				ld a,MB
00162A 32 4F 69 00         A  1963    				ld (xrr_temp+2),a
00162E 2A 4D 69 00         A  1964    				ld hl,(xrr_temp)
001632 F1                  A  1965    				pop af
001633 C9                  A  1966    				ret
                           A  1967    				
001634 F5                  A  1968    mbase_de		push af
001635 ED53 4D 69 00       A  1969    				ld (xrr_temp),de				00163A ED6E                A  1970    				ld a,MB
00163C 32 4F 69 00         A  1971    				ld (xrr_temp+2),a
001640 ED5B 4D 69 00       A  1972    				ld de,(xrr_temp)
001645 F1                  A  1973    				pop af
001646 C9                  A  1974    				ret
                           A  1975    
                           A  1976    
                           A  1977    ;----------------------------------------------
                           A  1978    ; Unpacks Phil's Z80P_RLE packed files - V1.02 
                           A  1979    ;----------------------------------------------
                           A  1980    
001647                     A  1981    unpack_rle
                           A  1982    
                           A  1983    ;set xHL = source address of packed file
                           A  1984    ;set xDE = destination address for unpacked dat
                           A  1985    ;set xBC = length of packed file
                           A  1986    
001647 E5                  A  1987    			push hl	
001648 DDE1                A  1988    			pop ix
00164A 0B                  A  1989    			dec bc								00164B 23                  A  1990    			inc hl
00164C DD7E00              A  1991    unp_gtok	ld a,(ix)							00164F BE                  A  1992    unp_next	cp (hl)								001650 28 07               A  1993    			jr z,unp_brun						001652 EDA0                A  1994    			ldi									001654 EA 4F 16 00         A  1995    			jp pe,unp_next						001658 C9                  A  1996    			ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  42


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1997    	
001659 C5                  A  1998    unp_brun	push bc								00165A 23                  A  1999    			inc hl		
00165B 7E                  A  2000    			ld a,(hl)							00165C 23                  A  2001    			inc hl		
00165D 46                  A  2002    			ld b,(hl)							00165E 23                  A  2003    			inc hl
                           A  2004    	
00165F 12                  A  2005    unp_rllp	ld (de),a							001660 13                  A  2006    			inc de			
001661 10 FC               A  2007    			djnz unp_rllp
                           A  2008    	
001663 C1                  A  2009    			pop bc	
001664 0B                  A  2010    			dec bc								001665 0B                  A  2011    			dec bc
001666 0B                  A  2012    			dec bc
001667 E5                  A  2013    			push hl								001668 21000000            A  2014    			ld hl,0
00166C B7                  A  2015    			or a
00166D ED4A                A  2016    			adc hl,bc
00166F E1                  A  2017    			pop hl
001670 20 DA               A  2018    			jr nz,unp_gtok
001672 C9                  A  2019    			ret	
                           A  2020    	
                           A  2021    ;----------------------------------------------
                           A  2022    ; Commonly called error messages - gets message
                           A  2023    ;----------------------------------------------
                           A  2024    
                           A  2025    
001673 3E0D                A  2026    os_no_fn_error		ld a,0dh
001675 B7                  A  2027    					or a
001676 C9                  A  2028    					ret
                           A  2029    			
001677 3E15                A  2030    os_fn_too_long		ld a,15h
001679 B7                  A  2031    					or a
00167A C9                  A  2032    					ret
                           A  2033    				
00167B 3E16                A  2034    os_no_start_addr	ld a,16h
00167D B7                  A  2035    					or a
00167E C9                  A  2036    					ret
                           A  2037    			
00167F 3E17                A  2038    os_no_filesize		ld a,17h
001681 B7                  A  2039    					or a
001682 C9                  A  2040    					ret
                           A  2041    			
001683 3E18                A  2042    os_abort_save		ld a,18h
001685 B7                  A  2043    					or a
001686 C9                  A  2044    					ret
                           A  2045    			
001687 3E1C                A  2046    os_no_e_addr_error	ld a,1ch
001689 B7                  A  2047    					or a
00168A C9                  A  2048    					ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  43


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2049    			
00168B 3E1D                A  2050    os_no_d_addr_error	ld a,1dh
00168D B7                  A  2051    					or a
00168E C9                  A  2052    					ret
                           A  2053    				
00168F 3E1E                A  2054    os_range_error		ld a,1eh
001691 B7                  A  2055    					or a
001692 C9                  A  2056    					ret
                           A  2057    			
001693 3E1F                A  2058    os_no_args_error	ld a,1fh
001695 B7                  A  2059    					or a
001696 C9                  A  2060    					ret	
                           A  2061    
                           A  2062    ;----------------------------------------------
                           A  2063    
                           A  2064    ; Set xHL to address of zero terminated filenam
                           A  2065    ; RETURNS:	C:xDE  = File length
                           A  2066    ;    		HL     = Start cluster of file
                           A  2067    
001697 CC 23 16 00         A  2068    ext_find_file	call z,mbase_hl
                           A  2069    
00169B CD A9 59 00         A  2070    os_find_file	call fs_hl_to_filename
00169F CD 10 51 00         A  2071    				call fs_open_file_command		0016A3 38 01               A  2072    				jr c,os_fferr					0016A5 C9                  A  2073    				ret								                           A  2074    					
0016A6 47                  A  2075    os_fferr		ld b,a							0016A7 AF                  A  2076    				xor a			
0016A8 3C                  A  2077    				inc a							0016A9 C9                  A  2078    				ret	
                           A  2079    
                           A  2080    ;----------------------------------------------
                           A  2081    
0016AA                     A  2082    os_set_load_length
                           A  2083    
0016AA ED53 2E 5C 00       A  2084    				ld (fs_file_transfer_length),de
0016AF BF                  A  2085    				cp a							0016B0 C9                  A  2086    				ret
                           A  2087    				
                           A  2088    ;----------------------------------------------
                           A  2089    
0016B1                     A  2090    ext_set_file_pointer
                           A  2091    
0016B1 79                  A  2092    				ld a,c
                           A  2093    				
0016B2                     A  2094    os_set_file_pointer
                           A  2095    
                           A  2096    ; Moves the 'start of file' pointer allowing ra
                           A  2097    ; Note: File pointer is reset by opening a file
                           A  2098    ; by normal read function.
                           A  2099    
0016B2 ED53 22 5C 00       A  2100    				ld (fs_file_pointer),de			Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  44


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0016B7 32 25 5C 00         A  2101    				ld (fs_file_pointer+3),a
0016BB F5                  A  2102    				push af
0016BC AF                  A  2103    				xor a
0016BD 32 54 5C 00         A  2104    				ld (fs_filepointer_valid),a		0016C1 F1                  A  2105    				pop af
0016C2 BF                  A  2106    				cp a							0016C3 C9                  A  2107    				ret
                           A  2108    				
                           A  2109    ;----------------------------------------------
                           A  2110    
                           A  2111    ; set xHL = load address 
                           A  2112    ; (Before calling this routine, call os_find_fi
                           A  2113    
0016C4                     A  2114    ext_read_bytes_from_file
                           A  2115    
0016C4 CC 23 16 00         A  2116    				call z,mbase_hl					                           A  2117    				
0016C8                     A  2118    os_read_bytes_from_file
                           A  2119    
0016C8 22 37 5C 00         A  2120    				ld (fs_ez80_address),hl			0016CC CD 63 51 00         A  2121    				call fs_read_data_command
0016D0 38 D4               A  2122    				jr c,os_fferr
0016D2 C9                  A  2123    				ret
                           A  2124    
                           A  2125    ;----------------------------------------------
                           A  2126    
                           A  2127    ; Before calling, set xHL = address of zero ter
                           A  2128    
0016D3 CC 23 16 00         A  2129    ext_create_file	call z,mbase_hl
                           A  2130    
0016D7 CD A9 59 00         A  2131    os_create_file	call fs_hl_to_filename
0016DB CD 3B 54 00         A  2132    				call fs_create_file_command		0016DF DA A6 16 00         A  2133    				jp c,os_fferr					0016E3 C9                  A  2134    				ret
                           A  2135    
                           A  2136    ;----------------------------------------------
                           A  2137    
0016E4                     A  2138    ext_write_bytes_to_file
                           A  2139    
0016E4 CC 23 16 00         A  2140    				call z,mbase_hl
0016E8 CC 34 16 00         A  2141    				call z,mbase_de
                           A  2142    
0016EC                     A  2143    os_write_bytes_to_file
                           A  2144    
                           A  2145    ; Before calling, set..
                           A  2146    
                           A  2147    ; xDE   = address to save data from
                           A  2148    ; xBC   = number of bytes to save
                           A  2149    ; xHL   = address of null-terminated ascii name
                           A  2150    
                           A  2151    ; On return:
                           A  2152    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  45


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2153    ; If zero flag NOT set, there was an error.
                           A  2154    ; If   A = $00, b = hardware error code
                           A  2155    ; Else A = File system error code
                           A  2156    
                           A  2157    ; NOTE:
                           A  2158    ; Will return 'file not found' if the file has 
                           A  2159    				
0016EC ED43 2E 5C 00       A  2160    				ld (fs_file_transfer_length),bc
0016F1 ED53 37 5C 00       A  2161    				ld (fs_ez80_address),de	 	
0016F6 CD A9 59 00         A  2162    				call fs_hl_to_filename
0016FA CD 6D 54 00         A  2163    				call fs_write_bytes_to_file_com
0016FE DA A6 16 00         A  2164    				jp c,os_fferr
001702 C9                  A  2165    				ret
                           A  2166    		
                           A  2167    		
                           A  2168    ;----------------------------------------------
                           A  2169    	
                           A  2170    
001703                     A  2171    os_check_volume_format
                           A  2172    
001703 CD 66 4F 00         A  2173    				call fs_check_disk_format
001707 DA A6 16 00         A  2174    os_rffsc		jp c,os_fferr
00170B C9                  A  2175    				ret
                           A  2176    
                           A  2177    ;----------------------------------------------
                           A  2178    
                           A  2179    
00170C 7B                  A  2180    ext_format		ld a,e
00170D CC 23 16 00         A  2181    				call z,mbase_hl					                           A  2182    
001711 E5                  A  2183    os_format		push hl							001712 CD 20 1B 00         A  2184    				call dev_to_driver_lookup
001716 E1                  A  2185    				pop hl
001717 38 04               A  2186    				jr c,sdevok
001719 3ED0                A  2187    				ld a,0d0h						00171B B7                  A  2188    				or a
00171C C9                  A  2189    				ret
                           A  2190    
00171D F5                  A  2191    sdevok			push af				
00171E 11 FE 5B 00         A  2192    				ld de,fs_sought_filename
001722 CD B8 5A 00         A  2193    				call fs_clear_filename
001726 060B                A  2194    				ld b,11
001728 CD 01 13 00         A  2195    				call os_copy_ascii_run
00172C F1                  A  2196    				pop af
                           A  2197    				
00172D 21 4F 67 00         A  2198    				ld hl,current_driver
001731 46                  A  2199    				ld b,(hl)
001732 77                  A  2200    				ld (hl),a
001733 C5                  A  2201    				push bc
001734 E5                  A  2202    				push hl
001735 CD DB 4D 00         A  2203    				call fs_format_device_command
001739 E1                  A  2204    				pop hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  46


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00173A C1                  A  2205    				pop bc
00173B 70                  A  2206    				ld (hl),b
00173C 18 C9               A  2207    				jr os_rffsc
                           A  2208    
                           A  2209    
                           A  2210    ;----------------------------------------------
                           A  2211    
                           A  2212    
00173E CC 23 16 00         A  2213    ext_make_dir	call z,mbase_hl					                           A  2214    
001742 CD A9 59 00         A  2215    os_make_dir		call fs_hl_to_filename
001746 CD B3 52 00         A  2216    				call fs_make_dir_command
00174A 18 BB               A  2217    				jr os_rffsc
                           A  2218    
                           A  2219    
                           A  2220    ;----------------------------------------------
                           A  2221    
                           A  2222    
00174C CC 23 16 00         A  2223    ext_change_dir	call z,mbase_hl					                           A  2224    
001750 CD A9 59 00         A  2225    os_change_dir	call fs_hl_to_filename
001754 CD B9 50 00         A  2226    				call fs_change_dir_command
001758 18 AD               A  2227    				jr os_rffsc
                           A  2228    				
                           A  2229    	
                           A  2230    ;----------------------------------------------
                           A  2231    	
                           A  2232    	
00175A CD EC 50 00         A  2233    os_parent_dir	call fs_parent_dir_command
00175E 18 A7               A  2234    				jr os_rffsc
                           A  2235    				
                           A  2236    
                           A  2237    ;----------------------------------------------
                           A  2238    
                           A  2239    	
001760 CD E0 50 00         A  2240    os_root_dir		call fs_goto_root_dir_command
001764 18 A1               A  2241    				jr os_rffsc
                           A  2242    
                           A  2243    
                           A  2244    ;----------------------------------------------
                           A  2245    
                           A  2246    
001766 CC 23 16 00         A  2247    ext_erase_file	call z,mbase_hl					                           A  2248    
00176A CD A9 59 00         A  2249    os_erase_file	call fs_hl_to_filename
00176E CD 04 56 00         A  2250    				call fs_erase_file_command
001772 18 93               A  2251    				jr os_rffsc
                           A  2252    	
                           A  2253    
                           A  2254    ;----------------------------------------------
                           A  2255    
                           A  2256    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  47


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001774                     A  2257    os_goto_first_dir_entry	
                           A  2258    
001774 CD 5F 56 00         A  2259    				call fs_goto_first_dir_entry
001778 18 8D               A  2260    				jr os_rffsc
                           A  2261    
                           A  2262    
                           A  2263    ;----------------------------------------------
                           A  2264    
                           A  2265    
00177A                     A  2266    os_get_dir_entry		
                           A  2267    
00177A CD 76 56 00         A  2268    				call fs_get_dir_entry	
00177E 18 87               A  2269    				jr os_rffsc
                           A  2270    
                           A  2271    
                           A  2272    ;----------------------------------------------
                           A  2273    
                           A  2274    
001780                     A  2275    os_goto_next_dir_entry	
                           A  2276    	
001780 CD 03 57 00         A  2277    				call fs_goto_next_dir_entry	
001784 18 81               A  2278    				jr os_rffsc
                           A  2279    
                           A  2280    
                           A  2281    ;----------------------------------------------
                           A  2282    
                           A  2283    
001786                     A  2284    os_get_current_dir_name
                           A  2285    
001786 CD 6F 5A 00         A  2286    				call fs_get_current_dir_name
00178A C3 07 17 00         A  2287    				jr os_rffsc
                           A  2288    				
                           A  2289    
                           A  2290    ;----------------------------------------------
                           A  2291    
                           A  2292    
00178E CC 23 16 00         A  2293    ext_rename_file	call z,mbase_hl
001792 CC 34 16 00         A  2294    				call z,mbase_de
                           A  2295    
001796 D5                  A  2296    os_rename_file	push de
001797 CD A3 59 00         A  2297    				call fs_hl_to_alt_filename		00179B E1                  A  2298    				pop hl				
00179C CD A9 59 00         A  2299    				call fs_hl_to_filename	
0017A0 CD 1B 56 00         A  2300    				call fs_rename_command
0017A4 C3 07 17 00         A  2301    				jr os_rffsc
                           A  2302    				
                           A  2303    
                           A  2304    ;----------------------------------------------
                           A  2305    
                           A  2306    
0017A8 CC 23 16 00         A  2307    ext_delete_dir	call z,mbase_hl					                           A  2308    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  48


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0017AC CD A9 59 00         A  2309    os_delete_dir	call fs_hl_to_filename
0017B0 CD 8C 53 00         A  2310    				call fs_delete_dir_command
0017B4 C3 07 17 00         A  2311    				jp os_rffsc
                           A  2312    	
                           A  2313    	
                           A  2314    ;----- LOW LEVEL SECTOR ACCESS ETC FOR EXTERNAL
                           A  2315    
                           A  2316    
0017B8                     A  2317    ext_read_sector
0017B8 CD 03 18 00         A  2318    				call ext_sector_access_preamble
0017BC C0                  A  2319    				ret nz
0017BD 32 4F 67 00         A  2320    				ld (current_driver),a
0017C1 CD 46 5B 00         A  2321    				call fs_read_sector
0017C5 20 11               A  2322    				jr nz,sect_done
0017C7 38 0F               A  2323    				jr c,sect_done
0017C9 21000800            A  2324    				ld hl,sector_buffer
0017CD ED5B 5F 67 00       A  2325    				ld de,(sector_rd_wr_addr)
0017D2 01000200            A  2326    				ld bc,512
0017D6 EDB0                A  2327    				ldir			
0017D8 F5                  A  2328    sect_done		push af
0017D9 3A 7F 68 00         A  2329    				ld a,(sys_driver_backup)		0017DD 32 4F 67 00         A  2330    				ld (current_driver),a
0017E1 F1                  A  2331    				pop af
0017E2 C3 07 17 00         A  2332    				jp os_rffsc
                           A  2333    				
                           A  2334    
0017E6                     A  2335    ext_write_sector
                           A  2336    			
0017E6 CD 03 18 00         A  2337    				call ext_sector_access_preamble
0017EA C0                  A  2338    				ret nz
0017EB 32 4F 67 00         A  2339    				ld (current_driver),a
0017EF 2A 5F 67 00         A  2340    				ld hl,(sector_rd_wr_addr)
0017F3 11000800            A  2341    				ld de,sector_buffer
0017F7 01000200            A  2342    				ld bc,512
0017FB EDB0                A  2343    				ldir			
0017FD CD 6F 5B 00         A  2344    				call fs_write_sector
001801 18 D5               A  2345    				jr sect_done
                           A  2346    
                           A  2347    
001803                     A  2348    ext_sector_access_preamble
                           A  2349    
001803 CC 23 16 00         A  2350    				call z,mbase_hl
001807 22 5F 67 00         A  2351    				ld (sector_rd_wr_addr),hl
                           A  2352    				
00180B 78                  A  2353    				ld a,b
00180C F5                  A  2354    				push af							00180D DD21 31 69 00       A  2355    				ld ix,sector_lba0
001812 DD1F00              A  2356    				ld (ix),de						001815 DD7103              A  2357    				ld (ix+3),c
001818 CD 20 1B 00         A  2358    				call dev_to_driver_lookup		00181C E5                  A  2359    				push hl
00181D DDE1                A  2360    				pop ix
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  49


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00181F 2A 31 69 00         A  2361    				ld hl,(sector_lba0)				001823 3A 34 69 00         A  2362    				ld a,(sector_lba3)				001827 DD0701              A  2363    				ld bc,(ix+1)					00182A B7                  A  2364    				or a							00182B ED42                A  2365    				sbc hl,bc
00182D DD9E04              A  2366    				sbc a,(ix+4)
001830 38 05               A  2367    				jr c,range_ok
001832 F1                  A  2368    				pop af
001833 3ED5                A  2369    				ld a,0d5h						001835 B7                  A  2370    				or a							001836 C9                  A  2371    				ret
                           A  2372    	
001837 3A 4F 67 00         A  2373    range_ok		ld a,(current_driver)
00183B 32 7F 68 00         A  2374    				ld (sys_driver_backup),a
00183F F1                  A  2375    				pop af							001840 CD 20 1B 00         A  2376    				call dev_to_driver_lookup
001844 30 02               A  2377    				jr nc,bad_dev
001846 BF                  A  2378    os_null			cp a							001847 C9                  A  2379    				ret
                           A  2380    					
001848 3ED0                A  2381    bad_dev			ld a,0d0h						00184A B7                  A  2382    				or a							00184B C9                  A  2383    				ret	
                           A  2384    			
                           A  2385    
                           A  2386    ;----------------------------------------------
                           A  2387    
                           A  2388    
00184C                     A  2389    os_get_device_info
                           A  2390    
00184C 21 FA 67 00         A  2391    				ld hl,host_device_hardware_info
001850 11 37 41 00         A  2392    				ld de,driver_table
001854 3A 50 67 00         A  2393    				ld a,(device_count)
001858 47                  A  2394    				ld b,a
001859 3A 4F 67 00         A  2395    				ld a,(current_driver)
00185D BF                  A  2396    				cp a
00185E C9                  A  2397    				ret
                           A  2398    
                           A  2399    
                           A  2400    
                           A  2401    
00185F                     A  2402    os_get_volume_info
                           A  2403    
00185F 21 7A 67 00         A  2404    				ld hl,volume_mount_list	
001863 3A 51 67 00         A  2405    				ld a,(volume_count)
001867 47                  A  2406    				ld b,a
001868 3A 4E 67 00         A  2407    				ld a,(current_volume)
00186C C9                  A  2408    				ret
                           A  2409    				
                           A  2410    		
                           A  2411    ;----------------------------------------------
                           A  2412    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  50


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2413    
00186D                     A  2414    ext_serial_get_header
                           A  2415    
00186D CC 23 16 00         A  2416    				call z,mbase_hl
001871 7B                  A  2417    				ld a,e
001872 CD 6E 4B 00         A  2418    				call serial_get_header
001876 DDE5                A  2419    				push ix
001878 D1                  A  2420    				pop de
001879 C9                  A  2421    				ret
                           A  2422    				
                           A  2423    				
00187A                     A  2424    ext_serial_receive_file
                           A  2425    				
00187A CC 23 16 00         A  2426    				call z,mbase_hl
00187E CD 09 4C 00         A  2427    				call serial_receive_file
001882 C9                  A  2428    				ret
                           A  2429    				
                           A  2430    	
001883                     A  2431    ext_serial_send_file
                           A  2432    
001883 CC 23 16 00         A  2433    				call z,mbase_hl					001887 CC 34 16 00         A  2434    				call z,mbase_de					00188B D5                  A  2435    				push de	
00188C DDE1                A  2436    				pop ix							00188E C5                  A  2437    				push bc							00188F D1                  A  2438    				pop de							001890 CD D2 4C 00         A  2439    				call serial_send_file
001894 C9                  A  2440    				ret
                           A  2441    
                           A  2442    
001895                     A  2443    ext_serial_tx
001895 7B                  A  2444    				ld a,e
001896 CD 21 44 00         A  2445    				call send_serial_byte
00189A AF                  A  2446    				xor a							00189B C9                  A  2447    				ret
                           A  2448    
                           A  2449    
00189C                     A  2450    ext_serial_rx
00189C 7B                  A  2451    				ld a,e
00189D 32 1E 67 00         A  2452    				ld (serial_timeout),a
0018A1 CD E6 43 00         A  2453    				call receive_serial_byte
0018A5 C9                  A  2454    				ret
                           A  2455    				
                           A  2456    
                           A  2457    ;----------------------------------------------
                           A  2458    
0018A6                     A  2459    ext_mount_volumes
                           A  2460    
0018A6 7B                  A  2461    				ld a,e
                           A  2462    
0018A7                     A  2463    os_mount_volumes
                           A  2464    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  51


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0018A7 32 80 68 00         A  2465    				ld (os_quiet_mode),a			                           A  2466    				
0018AB 21 89 5D 00         A  2467    				ld hl,storage_txt
0018AF CD 10 10 00         A  2468    				call os_print_string_cond
0018B3 CD DB 18 00         A  2469    				call mount_go
0018B7 AF                  A  2470    				xor a
0018B8 32 4E 67 00         A  2471    tvloop			ld (current_volume),a
0018BC CD 36 1B 00         A  2472    				call os_change_volume			0018C0 C8                  A  2473    				ret z							0018C1 3A 4E 67 00         A  2474    				ld a,(current_volume)			0018C5 3C                  A  2475    				inc a
0018C6 FE08                A  2476    				cp max_volumes
0018C8 20 EE               A  2477    				jr nz,tvloop
0018CA 3A 50 67 00         A  2478    				ld a,(device_count)
0018CE B7                  A  2479    				or a
0018CF 20 08               A  2480    				jr nz,mfsdevs
0018D1 21 3F 65 00         A  2481    				ld hl,none_found_msg
0018D5 CD ED 14 00         A  2482    				call os_show_packed_text_cond
0018D9 AF                  A  2483    mfsdevs			xor a
0018DA C9                  A  2484    				ret
                           A  2485    
                           A  2486    
                           A  2487    
0018DB 21 7A 67 00         A  2488    mount_go		ld hl,volume_mount_list			0018DF 01800000            A  2489    				ld bc,max_volumes*16
0018E3 AF                  A  2490    clrdl_lp		xor a
0018E4 CD FC 15 00         A  2491    				call os_bchl_memfill
                           A  2492    								
0018E8 21 62 67 00         A  2493    				ld hl,volume_dir_clusters		0018EC 01180000            A  2494    				ld bc,max_volumes*3		
0018F0 AF                  A  2495    				xor a	
0018F1 CD FC 15 00         A  2496    				call os_bchl_memfill	
                           A  2497    			
0018F5 11 FA 67 00         A  2498    				ld de,host_device_hardware_info
0018F9 ED53 7A 68 00       A  2499    				ld (dhwn_temp_pointer),de
                           A  2500    				
0018FE FD21 7A 67 00       A  2501    				ld iy,volume_mount_list
001903 AF                  A  2502    				xor a
001904 32 51 67 00         A  2503    				ld (volume_count),a
001908 32 50 67 00         A  2504    				ld (device_count),a
00190C 32 4F 67 00         A  2505    mnt_loop		ld (current_driver),a			001910 CD AC 1A 00         A  2506    				call locate_driver_base			001914 21000000            A  2507    				ld hl,0
001918 AF                  A  2508    				xor a
001919 ED5A                A  2509    				adc hl,de
00191B C8                  A  2510    				ret z							00191C EB                  A  2511    				ex de,hl						00191D FDE5                A  2512    				push iy
00191F CD 30 19 00         A  2513    				call find_dev					001923 FDE1                A  2514    				pop iy							001925 CC 31 19 00         A  2515    				call z,got_dev		
001929 3A 4F 67 00         A  2516    nxt_drv			ld a,(current_driver)			Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  52


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00192D 3C                  A  2517    				inc a
00192E 18 DC               A  2518    				jr mnt_loop
                           A  2519    
                           A  2520    				
001930 E9                  A  2521    find_dev		jp (hl)
                           A  2522    			
                           A  2523    			
001931 E5                  A  2524    got_dev			push hl							001932 D5                  A  2525    				push de							001933 C5                  A  2526    				push bc
001934 CD B6 14 00         A  2527    				call os_new_line_cond			001938 015B0100            A  2528    				ld bc,015bh
00193C CD BD 1A 00         A  2529    				call os_print_multiple_chars_co
001940 3A 4F 67 00         A  2530    				ld a,(current_driver)
001944 CD AC 1A 00         A  2531    				call locate_driver_base
001948 210C0000            A  2532    				ld hl,0ch
00194C 19                  A  2533    				add hl,de
00194D CD 10 10 00         A  2534    				call os_print_string_cond		001951 015D0100            A  2535    				ld bc,015dh
001955 CD BD 1A 00         A  2536    				call os_print_multiple_chars_co
001959 C1                  A  2537    				pop bc
00195A D1                  A  2538    				pop de
00195B AF                  A  2539    				xor a
00195C 32 7E 68 00         A  2540    				ld (vols_on_device_temp),a
                           A  2541    				
001960 21 50 67 00         A  2542    				ld hl,device_count
001964 34                  A  2543    				inc (hl)						001965 3A 4F 67 00         A  2544    				ld a,(current_driver)
001969 2A 7A 68 00         A  2545    				ld hl,(dhwn_temp_pointer)	
00196D 77                  A  2546    				ld (hl),a
00196E 23                  A  2547    				inc hl
00196F 73                  A  2548    				ld (hl),e						001970 FD7304              A  2549    				ld (iy+4),e						001973 23                  A  2550    				inc hl							001974 72                  A  2551    				ld (hl),d
001975 FD7205              A  2552    				ld (iy+5),d
001978 23                  A  2553    				inc hl
001979 71                  A  2554    				ld (hl),c			
00197A FD7106              A  2555    				ld (iy+6),c
00197D 23                  A  2556    				inc hl
00197E 70                  A  2557    				ld (hl),b						00197F 23                  A  2558    				inc hl
001980 D1                  A  2559    				pop de
001981 EB                  A  2560    				ex de,hl
001982 01160000            A  2561    				ld bc,22
001986 EDB0                A  2562    				ldir							001988 AF                  A  2563    				xor a
001989 0605                A  2564    				ld b,5		
00198B 12                  A  2565    clrrode			ld (de),a						00198C 13                  A  2566    				inc de
00198D 10 FC               A  2567    				djnz clrrode
00198F ED53 7A 68 00       A  2568    				ld (dhwn_temp_pointer),de		Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  53


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2569    					
001994 AF                  A  2570    				xor a							001995 FDE5                A  2571    fnxtpart		push iy
001997 CD 04 4F 00         A  2572    				call fs_get_partition_info
00199B FDE1                A  2573    				pop iy
00199D 38 31               A  2574    				jr c,nxt_dev					00199F FECE                A  2575    				cp 0ceh							0019A1 28 2D               A  2576    				jr z,nxt_dev
0019A3 F5                  A  2577    				push af
0019A4 FD360001            A  2578    				ld (iy),1						0019A8 3A 4F 67 00         A  2579    				ld a,(current_driver)
0019AC FD7701              A  2580    				ld (iy+1),a						0019AF 3A 7D 68 00         A  2581    				ld a,(partition_temp)	
0019B3 FD7707              A  2582    				ld (iy+7),a						0019B6 F1                  A  2583    				pop af
0019B7 B7                  A  2584    				or a
0019B8 28 35               A  2585    				jr z,dev_mbr
0019BA AF                  A  2586    				xor a
0019BB FD7708              A  2587    				ld (iy+8),a						0019BE FD7709              A  2588    				ld (iy+9),a						0019C1 FD770A              A  2589    				ld (iy+10),a					0019C4 FD770B              A  2590    				ld (iy+11),a
0019C7 CD 3B 1A 00         A  2591    				call show_vol_info
0019CB CD 2C 1A 00         A  2592    				call test_max_vol
0019CF C8                  A  2593    				ret z							                           A  2594    			
0019D0 3A 7E 68 00         A  2595    nxt_dev			ld a,(vols_on_device_temp)		0019D4 B7                  A  2596    				or a
0019D5 C0                  A  2597    				ret nz		
0019D6 CD 8D 1A 00         A  2598    				call test_quiet_mode
0019DA 20 06               A  2599    				jr nz,skp_cu
0019DC 3E0A                A  2600    				ld a,10
0019DE 32 36 69 00         A  2601    				ld (cursor_x),a
0019E2 21 3C 65 00         A  2602    skp_cu			ld hl,no_vols_msg				0019E6 CD ED 14 00         A  2603    				call os_show_packed_text_cond
0019EA CD B6 14 00         A  2604    				call os_new_line_cond
0019EE C9                  A  2605    				ret
                           A  2606    				
                           A  2607    			
0019EF 11040000            A  2608    dev_mbr			ld de,4
0019F3 19                  A  2609    				add hl,de
0019F4 7E                  A  2610    				ld a,(hl)						0019F5 B7                  A  2611    				or a
0019F6 C8                  A  2612    				ret z							0019F7 19                  A  2613    				add hl,de
                           A  2614    				
0019F8 FDE5                A  2615    				push iy
0019FA 0604                A  2616    				ld b,4
0019FC 7E                  A  2617    sfmbrlp			ld a,(hl)						0019FD FD7708              A  2618    				ld (iy+8),a
001A00 23                  A  2619    				inc hl
001A01 FD23                A  2620    				inc iy
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  54


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001A03 10 F7               A  2621    				djnz sfmbrlp
001A05 FDE1                A  2622    				pop iy
001A07 FDE5                A  2623    				push iy
001A09 0603                A  2624    				ld b,3	
001A0B 7E                  A  2625    nsivlp			ld a,(hl)
001A0C FD7704              A  2626    				ld (iy+4),a						001A0F 23                  A  2627    				inc hl
001A10 FD23                A  2628    				inc iy
001A12 10 F7               A  2629    				djnz nsivlp
001A14 FDE1                A  2630    				pop iy
                           A  2631    				
001A16 CD 3B 1A 00         A  2632    				call show_vol_info
001A1A CD 2C 1A 00         A  2633    				call test_max_vol	
001A1E C8                  A  2634    				ret z							001A1F 3A 7D 68 00         A  2635    				ld a,(partition_temp)
001A23 3C                  A  2636    				inc a
001A24 FE04                A  2637    				cp 4							001A26 C2 95 19 00         A  2638    				jp nz,fnxtpart
001A2A 18 A4               A  2639    				jr nxt_dev
                           A  2640    				
                           A  2641    
001A2C                     A  2642    test_max_vol
                           A  2643    			
001A2C 11100000            A  2644    				ld de,16
001A30 FD19                A  2645    				add iy,de			
001A32 21 51 67 00         A  2646    				ld hl,volume_count
001A36 34                  A  2647    				inc (hl)
001A37 7E                  A  2648    				ld a,(hl)
001A38 FE08                A  2649    				cp max_volumes
001A3A C9                  A  2650    				ret
                           A  2651    			
                           A  2652    			
001A3B                     A  2653    show_vol_info
                           A  2654    				
001A3B CD 8D 1A 00         A  2655    				call test_quiet_mode
001A3F 20 06               A  2656    				jr nz,skp_cm2
001A41 3E09                A  2657    				ld a,9			
001A43 32 36 69 00         A  2658    				ld (cursor_x),a
001A47 3A 51 67 00         A  2659    skp_cm2			ld a,(volume_count)
001A4B F5                  A  2660    				push af
001A4C C630                A  2661    				add a,30h		
001A4E 32 56 67 00         A  2662    				ld (vol_txt+4),a	
001A52 21 52 67 00         A  2663    				ld hl,vol_txt
001A56 CD 10 10 00         A  2664    				call os_print_string_cond		001A5A 21 7E 68 00         A  2665    				ld hl,vols_on_device_temp
001A5E CBC6                A  2666    				set 0,(hl)						                           A  2667    			
001A60 F1                  A  2668    				pop af
001A61 FDE5                A  2669    				push iy
001A63 CD 36 1B 00         A  2670    				call os_change_volume			001A67 28 0A               A  2671    				jr z,vform_ok					001A69 21 EC 64 00         A  2672    svi_fe			ld hl,format_err_msg		
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  55


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001A6D CD ED 14 00         A  2673    svi_pem			call os_show_packed_text_cond	001A71 18 0D               A  2674    				jr skpsvl
                           A  2675    			
001A73 CD 5A 57 00         A  2676    vform_ok		call fs_get_volume_label
001A77 38 0E               A  2677    				jr c,svi_hwe
001A79 B7                  A  2678    				or a
001A7A 20 ED               A  2679    				jr nz,svi_fe
001A7C CD 10 10 00         A  2680    				call os_print_string_cond		                           A  2681    			
001A80 CD B6 14 00         A  2682    skpsvl			call os_new_line_cond
001A84 FDE1                A  2683    				pop iy
001A86 C9                  A  2684    				ret
                           A  2685    				
001A87 21 2B 63 00         A  2686    svi_hwe			ld hl,disk_err_msg
001A8B 18 E0               A  2687    				jr svi_pem
                           A  2688    			
                           A  2689    			
001A8D                     A  2690    test_quiet_mode
                           A  2691    			
001A8D 3A 80 68 00         A  2692    				ld a,(os_quiet_mode)
001A91 B7                  A  2693    				or a
001A92 C9                  A  2694    				ret
                           A  2695    
                           A  2696    ;----------------------------------------------
                           A  2697    
                           A  2698    
001A93                     A  2699    show_dev_driver_name
                           A  2700    	
                           A  2701    	
001A93 CD AC 1A 00         A  2702    				call locate_driver_base			001A97 EB                  A  2703    				ex de,hl
001A98 110C0000            A  2704    				ld de,0ch
001A9C 19                  A  2705    				add hl,de
001A9D CD 15 10 00         A  2706    				call os_print_string			001AA1 C5                  A  2707    				push bc
001AA2 01200100            A  2708    				ld bc,0120h
001AA6 CD C2 1A 00         A  2709    				call os_print_multiple_chars	001AAA C1                  A  2710    				pop bc
001AAB C9                  A  2711    				ret
                           A  2712    
                           A  2713    
001AAC                     A  2714    locate_driver_base
                           A  2715    
001AAC E5                  A  2716    				push hl							001AAD 11030000            A  2717    				ld de,3							001AB1 57                  A  2718    				ld d,a
001AB2 ED5C                A  2719    				mlt de
001AB4 21 37 41 00         A  2720    				ld hl,driver_table
001AB8 19                  A  2721    				add hl,de
001AB9 ED17                A  2722    				ld de,(hl)
001ABB E1                  A  2723    				pop hl
001ABC C9                  A  2724    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  56


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2725    				
                           A  2726    		
                           A  2727    ;----------------------------------------------
                           A  2728    
001ABD                     A  2729    os_print_multiple_chars_cond
                           A  2730    
001ABD CD 8D 1A 00         A  2731    				call test_quiet_mode
001AC1 C0                  A  2732    				ret nz
                           A  2733    			
001AC2                     A  2734    os_print_multiple_chars
                           A  2735    
                           A  2736    ;c = char
                           A  2737    ;b = count
001AC2 C5                  A  2738    				push bc
001AC3 E5                  A  2739    				push hl
001AC4 79                  A  2740    				ld a,c
001AC5 21 F8 5D 00         A  2741    				ld hl,rep_char_txt
001AC9 77                  A  2742    				ld (hl),a
001ACA E5                  A  2743    pmch_lp			push hl
001ACB CD 15 10 00         A  2744    				call os_print_string
001ACF E1                  A  2745    				pop hl
001AD0 10 F8               A  2746    				djnz pmch_lp
001AD2 E1                  A  2747    				pop hl
001AD3 C1                  A  2748    				pop bc
001AD4 C9                  A  2749    				ret
                           A  2750    
                           A  2751    ;----------------------------------------------
                           A  2752    
                           A  2753    
001AD5 7B                  A  2754    ext_plot_char	ld a,e
001AD6 C3 5D 45 00         A  2755    				jp hwsc_plot_char
                           A  2756    				
                           A  2757    
                           A  2758    ;----------------------------------------------
                           A  2759    ; Some file system related routines 
                           A  2760    ;----------------------------------------------
                           A  2761    
                           A  2762    
001ADA                     A  2763    fs_get_dir_cluster
                           A  2764    
                           A  2765    
001ADA F5                  A  2766    				push af							001ADB E5                  A  2767    				push hl			
001ADC CD F2 1A 00         A  2768    				call fs_get_dir_cluster_address
001AE0 ED17                A  2769    				ld de,(hl)
001AE2 E1                  A  2770    dclopdone		pop hl
001AE3 F1                  A  2771    				pop af
001AE4 BF                  A  2772    				cp a							001AE5 C9                  A  2773    				ret
                           A  2774    				
                           A  2775    
                           A  2776    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  57


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2777    
                           A  2778    
001AE6                     A  2779    fs_update_dir_cluster
                           A  2780    
001AE6 F5                  A  2781    				push af							001AE7 E5                  A  2782    				push hl			
001AE8 D5                  A  2783    				push de			
001AE9 CD F2 1A 00         A  2784    				call fs_get_dir_cluster_address
001AED D1                  A  2785    				pop de
001AEE ED1F                A  2786    				ld (hl),de
001AF0 18 F0               A  2787    				jr dclopdone
                           A  2788    			
                           A  2789    
                           A  2790    
                           A  2791    
                           A  2792    
001AF2                     A  2793    fs_get_dir_cluster_address
                           A  2794    
001AF2 21 62 67 00         A  2795    				ld hl,volume_dir_clusters		001AF6 3A 4E 67 00         A  2796    				ld a,(current_volume)	
001AFA 11030000            A  2797    				ld de,3
001AFE 57                  A  2798    				ld d,a
001AFF ED5C                A  2799    				mlt de
001B01 19                  A  2800    				add hl,de
001B02 C9                  A  2801    				ret
                           A  2802    				
                           A  2803    	
                           A  2804    
                           A  2805    	
                           A  2806    	
001B03                     A  2807    fs_get_total_sectors
                           A  2808    
                           A  2809    
001B03 F5                  A  2810    				push af
001B04 E5                  A  2811    				push hl							001B05 CD 14 1B 00         A  2812    				call fs_calc_volume_offset	
001B09 21 7E 67 00         A  2813    				ld hl,volume_mount_list+4
001B0D 19                  A  2814    				add hl,de
001B0E ED17                A  2815    				ld de,(hl)
001B10 E1                  A  2816    				pop hl
001B11 F1                  A  2817    				pop af
001B12 BF                  A  2818    				cp a							001B13 C9                  A  2819    				ret
                           A  2820    
                           A  2821    
                           A  2822    
                           A  2823    
                           A  2824    
001B14                     A  2825    fs_calc_volume_offset
                           A  2826    
001B14 3A 4E 67 00         A  2827    				ld a,(current_volume)			001B18 11100000            A  2828    calc_vol		ld de,16
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  58


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001B1C 57                  A  2829    				ld d,a
001B1D ED5C                A  2830    				mlt de
001B1F C9                  A  2831    				ret
                           A  2832    
                           A  2833    
                           A  2834    
                           A  2835    
                           A  2836    
001B20                     A  2837    dev_to_driver_lookup
                           A  2838    
001B20 21 50 67 00         A  2839    				ld hl,device_count				001B24 BE                  A  2840    				cp (hl)							001B25 D0                  A  2841    				ret nc
001B26 11200000            A  2842    				ld de,32						001B2A 57                  A  2843    				ld d,a
001B2B ED5C                A  2844    				mlt de
001B2D 21 FA 67 00         A  2845    				ld hl,host_device_hardware_info
001B31 19                  A  2846    				add hl,de
001B32 7E                  A  2847    				ld a,(hl)
001B33 37                  A  2848    				scf
001B34 C9                  A  2849    				ret
                           A  2850    				
                           A  2851    
                           A  2852    
001B35                     A  2853    ext_change_volume
                           A  2854    
001B35 7B                  A  2855    				ld a,e
                           A  2856    
001B36                     A  2857    os_change_volume
                           A  2858    
001B36 47                  A  2859    				ld b,a							001B37 FE08                A  2860    				cp max_volumes		
001B39 30 22               A  2861    				jr nc,fs_ccv2					                           A  2862    			
001B3B 3A 4E 67 00         A  2863    				ld a,(current_volume)			001B3F F5                  A  2864    				push af
001B40 78                  A  2865    				ld a,b
001B41 32 4E 67 00         A  2866    				ld (current_volume),a			001B45 CD 61 1B 00         A  2867    				call fs_set_driver_for_volume	                           A  2868    				
001B49 CD 66 4F 00         A  2869    				call fs_check_disk_format		001B4D 38 05               A  2870    				jr c,fs_cant_chg_vols	
001B4F 20 03               A  2871    				jr nz,fs_cant_chg_vols
001B51 F1                  A  2872    				pop af							001B52 AF                  A  2873    				xor a							001B53 C9                  A  2874    				ret
                           A  2875    
                           A  2876    
001B54                     A  2877    fs_cant_chg_vols
                           A  2878    			
001B54 F1                  A  2879    				pop af
001B55 32 4E 67 00         A  2880    				ld (current_volume),a			Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  59


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001B59 CD 61 1B 00         A  2881    				call fs_set_driver_for_volume	                           A  2882    				
001B5D 3ECF                A  2883    fs_ccv2			ld a,0cfh						001B5F B7                  A  2884    				or a
001B60 C9                  A  2885    				ret
                           A  2886    					
                           A  2887    	
001B61                     A  2888    fs_set_driver_for_volume
                           A  2889    
001B61 CD 14 1B 00         A  2890    				call fs_calc_volume_offset		001B65 21 7B 67 00         A  2891    				ld hl,volume_mount_list+1
001B69 19                  A  2892    				add hl,de
001B6A 7E                  A  2893    				ld a,(hl)
001B6B 32 4F 67 00         A  2894    				ld (current_driver),a
001B6F C9                  A  2895    				ret
                           A  2896    
                           A  2897    
                           A  2898    ;----------------------------------------------
                           A  2899    
001B70                     A  2900    ext_file_sector_list
                           A  2901    
                           A  2902    ;Input HL = cluster, E = sector offset
                           A  2903    
                           A  2904    ;Output HL = new cluster, E = new sector number
                           A  2905    ;       IX = address of LBA0 LSB of sector (int
                           A  2906    
                           A  2907    				
001B70 3A E7 5B 00         A  2908    				ld a,(fs_cluster_size)
001B74 BB                  A  2909    				cp e
001B75 20 0A               A  2910    				jr nz,fsl_sc
001B77 CD EE 59 00         A  2911    				call get_fat_entry_for_cluster
001B7B DA A6 16 00         A  2912    				jp c,os_fferr
001B7F 1E00                A  2913    				ld e,0
001B81 CD C5 5A 00         A  2914    fsl_sc			call cluster_and_offset_to_lba
001B85 1C                  A  2915    				inc e
001B86 01 31 69 00         A  2916    fsl_done		ld bc,sector_lba0
001B8A BF                  A  2917    				cp a							001B8B C9                  A  2918    				ret
                           A  2919    
                           A  2920    ;----------------------------------------------
                           A  2921    
001B8C                     A  2922    os_get_disk_sector_ptr
                           A  2923     
001B8C 21 31 69 00         A  2924    				ld hl,sector_lba0
001B90 11000800            A  2925    				ld de,sector_buffer
001B94 BF                  A  2926    				cp a
001B95 C9                  A  2927    				ret
                           A  2928    				
                           A  2929    ;----------------------------------------------
                           A  2930    
                           A  2931    
001B96 E5                  A  2932    os_count_chars	push hl							Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  60


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001B97 01000000            A  2933    				ld bc,0
001B9B 7E                  A  2934    cch_lp			ld a,(hl)
001B9C B7                  A  2935    				or a
001B9D 28 04               A  2936    				jr z,cch_end
001B9F 23                  A  2937    				inc hl
001BA0 03                  A  2938    				inc bc
001BA1 18 F8               A  2939    				jr cch_lp
001BA3 E1                  A  2940    cch_end			pop hl
001BA4 C9                  A  2941    				ret
                           A  2942    				
                           A  2943    			
                           A  2944    ;----------------------------------------------
                           A  2945    ; Environment variable code V0.01
                           A  2946    ;----------------------------------------------
                           A  2947    
       00000100            A  2948    envar_buffer_size equ 256
                           A  2949    
                           A  2950    ;----------------------------------------------
                           A  2951    
001BA5                     A  2952    ext_get_envar
001BA5 CC 23 16 00         A  2953    				call z,mbase_hl
                           A  2954    
001BA9                     A  2955    os_get_envar
                           A  2956    
                           A  2957    ;Set: 		HL = name of required variable
                           A  2958    ;Returns:	ZF Set: DE = address of variable's 
                           A  2959    ;        	ZF Not Set: Couldn't find variable
                           A  2960    				
001BA9 DD21 A4 6A 00       A  2961    				ld ix,envar_list-1
001BAE CD 96 1B 00         A  2962    env_fname		call os_count_chars				001BB2 78                  A  2963    				ld a,b
001BB3 B1                  A  2964    				or c
001BB4 28 27               A  2965    				jr z,env_bad
                           A  2966    								
001BB6 ED1201              A  2967    env_cname		lea de,ix+1
001BB9 1A                  A  2968    				ld a,(de)
001BBA FEFF                A  2969    				cp 0ffh
001BBC 28 1F               A  2970    				jr z,env_bad
001BBE C5                  A  2971    				push bc
001BBF 41                  A  2972    				ld b,c
001BC0 CD E2 12 00         A  2973    				call os_compare_strings
001BC4 C1                  A  2974    				pop bc
001BC5 20 06               A  2975    				jr nz,env_nomatch
001BC7 03                  A  2976    				inc bc							001BC8 EB                  A  2977    				ex de,hl
001BC9 09                  A  2978    				add hl,bc
001BCA EB                  A  2979    				ex de,hl						001BCB AF                  A  2980    				xor a
001BCC C9                  A  2981    				ret			
                           A  2982    				
001BCD DD23                A  2983    env_nomatch		inc ix							001BCF CD 75 1C 00         A  2984    				call check_envar_bounds
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  61


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001BD3 20 08               A  2985    				jr nz,env_bad
001BD5 DD7E00              A  2986    				ld a,(ix)
001BD8 B7                  A  2987    				or a
001BD9 28 DB               A  2988    				jr z,env_cname
001BDB 18 F0               A  2989    				jr env_nomatch
                           A  2990    
001BDD 3E82                A  2991    env_bad			ld a,82h						001BDF B7                  A  2992    				or a
001BE0 C9                  A  2993    				ret	
                           A  2994    				
                           A  2995    ;----------------------------------------------
                           A  2996    
001BE1                     A  2997    ext_set_envar
                           A  2998    
                           A  2999    ;HL = addr of variable name (zero terminated)
                           A  3000    ;DE = addr of data for variable (zero terminate
                           A  3001    
                           A  3002    ;Returns:
                           A  3003    ;ZF = Set: OK
                           A  3004    ;ZF = Not Set: No enough space for new variable
                           A  3005    		
001BE1 CC 23 16 00         A  3006    				call z,mbase_hl
001BE5 CC 34 16 00         A  3007    				call z,mbase_de
                           A  3008    
001BE9 7E                  A  3009    os_set_envar	ld a,(hl)						001BEA B7                  A  3010    				or a
001BEB 28 F0               A  3011    				jr z,env_bad
001BED 1A                  A  3012    				ld a,(de)
001BEE B7                  A  3013    				or a
001BEF 28 EC               A  3014    				jr z,env_bad
                           A  3015    
001BF1 E5                  A  3016    				push hl
001BF2 D5                  A  3017    				push de
001BF3 CD 3F 1C 00         A  3018    				call os_delete_envar			001BF7 D1                  A  3019    				pop de
001BF8 E1                  A  3020    				pop hl
                           A  3021    				
001BF9 DD2A BD 6B 00       A  3022    				ld ix,(envar_top_loc)			001BFE CD 75 1C 00         A  3023    env_enlp		call check_envar_bounds
001C02 20 D9               A  3024    				jr nz,env_bad
001C04 7E                  A  3025    				ld a,(hl)						001C05 DD7700              A  3026    				ld (ix),a
001C08 B7                  A  3027    				or a
001C09 28 05               A  3028    				jr z,env_ndone
001C0B 23                  A  3029    				inc hl
001C0C DD23                A  3030    				inc ix
001C0E 18 EE               A  3031    				jr env_enlp
                           A  3032    				
001C10 CD 75 1C 00         A  3033    env_ndone		call check_envar_bounds			001C14 20 C7               A  3034    				jr nz,env_bad
001C16 DD36003D            A  3035    				ld (ix),'='
001C1A DD23                A  3036    				inc ix
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  62


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  3037    
001C1C CD 75 1C 00         A  3038    env_evlp		call check_envar_bounds			001C20 20 BB               A  3039    				jr nz,env_bad
001C22 1A                  A  3040    				ld a,(de)
001C23 DD7700              A  3041    				ld (ix),a
001C26 B7                  A  3042    				or a
001C27 28 05               A  3043    				jr z,env_vdone
001C29 13                  A  3044    				inc de
001C2A DD23                A  3045    				inc ix
001C2C 18 EE               A  3046    				jr env_evlp
                           A  3047    
001C2E DD23                A  3048    env_vdone		inc ix
001C30 DD3600FF            A  3049    				ld (ix),0ffh
001C34 DD22 BD 6B 00       A  3050    				ld (envar_top_loc),ix			001C39 AF                  A  3051    				xor a
001C3A C9                  A  3052    				ret
                           A  3053    
                           A  3054    	
                           A  3055    ;----------------------------------------------
                           A  3056    
001C3B                     A  3057    ext_delete_envar
                           A  3058    
001C3B CC 23 16 00         A  3059    				call z,mbase_hl
                           A  3060    
001C3F                     A  3061    os_delete_envar
                           A  3062    
                           A  3063    ;HL = name of required variable (null terminate
                           A  3064    ;ZF = Set: OK
                           A  3065    ;ZF = Not Set: Didnt find named variable
                           A  3066    
                           A  3067    
001C3F CD A9 1B 00         A  3068    				call os_get_envar				001C43 C0                  A  3069    				ret nz
                           A  3070    				
001C44 D5                  A  3071    				push de
001C45 E1                  A  3072    				pop hl
001C46 AF                  A  3073    				xor a
001C47 ED42                A  3074    				sbc hl,bc						                           A  3075    				
001C49 13                  A  3076    env_fnxt		inc de							001C4A D5                  A  3077    				push de
001C4B DDE1                A  3078    				pop ix
001C4D CD 75 1C 00         A  3079    				call check_envar_bounds
001C51 20 8A               A  3080    				jr nz,env_bad
001C53 1A                  A  3081    				ld a,(de)
001C54 B7                  A  3082    				or a
001C55 20 F2               A  3083    				jr nz,env_fnxt
                           A  3084    
001C57 13                  A  3085    env_gnxt		inc de							001C58 EB                  A  3086    				ex de,hl
001C59 7E                  A  3087    env_collp		ld a,(hl)
001C5A 12                  A  3088    				ld (de),a						Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  63


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001C5B FEFF                A  3089    				cp 0ffh
001C5D 28 0F               A  3090    				jr z,env_clspd					001C5F E5                  A  3091    				push hl
001C60 DDE1                A  3092    				pop ix
001C62 CD 75 1C 00         A  3093    				call check_envar_bounds
001C66 C2 DD 1B 00         A  3094    				jr nz,env_bad
001C6A 23                  A  3095    				inc hl
001C6B 13                  A  3096    				inc de
001C6C 18 EB               A  3097    				jr env_collp
                           A  3098    
001C6E ED53 BD 6B 00       A  3099    env_clspd		ld (envar_top_loc),de			001C73 AF                  A  3100    				xor a
001C74 C9                  A  3101    				ret
                           A  3102    				
                           A  3103    ;----------------------------------------------
                           A  3104    
001C75                     A  3105    check_envar_bounds
                           A  3106    
001C75 C5                  A  3107    				push bc
001C76 E5                  A  3108    				push hl
001C77 DDE5                A  3109    				push ix
001C79 E1                  A  3110    				pop hl
001C7A 01 A6 6B 00         A  3111    				ld bc,1+(envar_list+envar_buffe
001C7E AF                  A  3112    				xor a
001C7F ED42                A  3113    				sbc hl,bc
001C81 38 05               A  3114    				jr c,env_bok
001C83 AF                  A  3115    				xor a
001C84 3C                  A  3116    				inc a
001C85 E1                  A  3117    				pop hl
001C86 C1                  A  3118    				pop bc
001C87 C9                  A  3119    				ret
                           A  3120    
001C88 AF                  A  3121    env_bok			xor a
001C89 E1                  A  3122    				pop hl
001C8A C1                  A  3123    				pop bc
001C8B C9                  A  3124    				ret
                           A  3125    						
                           A  3126    ;----------------------------------------------
                           A  3127    
001C8C                     A  3128    os_get_keymap_location
                           A  3129    
001C8C 21 9A 65 00         A  3130    				ld hl,unshifted_keymap
001C90 BF                  A  3131    				cp a							001C91 C9                  A  3132    				ret
                           A  3133    
                           A  3134    
                           A  3135    ;----------------------------------------------
                           A  3136    
                           A  3137    
001C92 CC 23 16 00         A  3138    ext_play_audio	call z,mbase_hl
                           A  3139    				
001C96 CD 65 4A 00         A  3140    os_play_audio	call hwsc_play_audio
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  64


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001C9A C9                  A  3141    				ret
                           A  3142    				
                           A  3143    ;----------------------------------------------
                           A  3144    
001C9B E5                  A  3145    test_de			push hl
001C9C 21000000            A  3146    				ld hl,0
001CA0 ED5A                A  3147    				adc hl,de
001CA2 E1                  A  3148    				pop hl
001CA3 C9                  A  3149    				ret
                           A  3150    
                           A  3151    ;==============================================
                           A  3152    ; Internal OS command routines
                           A  3153    ;==============================================
                           A  3154    
                           B     0    	include 'commands\c.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"c" - Copy memory command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
001CA4                     B     5    os_cmd_c
                           B     6    
001CA4 CD DA 1C 00         B     7    				call get_start_and_end			                           B     8    				
001CA8 CD 03 1D 00         B     9    				call hexword_or_bust			001CAC CA 8B 16 00         B    10    				jp z,os_no_d_addr_error
001CB0 ED53 44 69 00       B    11    				ld (copy_dest_address),de
                           B    12    						
001CB5 CD C8 1C 00         B    13    				call test_mem_range				001CB9 DA 8F 16 00         B    14    				jp c,os_range_error				001CBD ED5B 44 69 00       B    15    				ld de,(copy_dest_address)
001CC2 EDB0                B    16    				ldir
                           B    17    
001CC4 3E20                B    18    copy_done		ld a,020h						001CC6 B7                  B    19    				or a
001CC7 C9                  B    20    				ret
                           B    21    			
                           B    22    			
                           B    23    ;----------------------------------------------
                           B    24    			
001CC8                     B    25    test_mem_range
                           B    26    			
                           B    27    ; on return:
                           B    28    ;
                           B    29    ; carry flag: Set = bad range
                           B    30    ; xBC = run length on return
                           B    31    ; xHL = start address
                           B    32    			
001CC8 2A 41 69 00         B    33    				ld hl,(cmdop_end_address)	
001CCC ED4B 3E 69 00       B    34    				ld bc,(cmdop_start_address)
001CD1 C5                  B    35    				push bc
001CD2 AF                  B    36    				xor a
001CD3 ED42                B    37    				sbc hl,bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  65


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\c.asm
001CD5 E5                  B    38    				push hl
001CD6 C1                  B    39    				pop bc
001CD7 03                  B    40    				inc bc
001CD8 E1                  B    41    				pop hl
001CD9 C9                  B    42    				ret
                           B    43    				
                           B    44    ;----------------------------------------------
                           B    45    			
001CDA                     B    46    get_start_and_end
                           B    47    			
001CDA CD 92 11 00         B    48    				call ascii_to_hexword			001CDE ED53 3E 69 00       B    49    				ld (cmdop_start_address),de
001CE3 23                  B    50    				inc hl
001CE4 28 09               B    51    				jr z,st_addrok
001CE6 E1                  B    52    				pop hl							001CE7 FE82                B    53    				cp 82h							001CE9 28 02               B    54    				jr z,c_badhex
001CEB 3E16                B    55    				ld a,016h						001CED B7                  B    56    c_badhex		or a
001CEE C9                  B    57    				ret
                           B    58    				
001CEF CD 92 11 00         B    59    st_addrok		call ascii_to_hexword			001CF3 ED53 41 69 00       B    60    				ld (cmdop_end_address),de
001CF8 23                  B    61    				inc hl
001CF9 B7                  B    62    				or a
001CFA C8                  B    63    				ret z
001CFB E1                  B    64    				pop hl							001CFC FE82                B    65    				cp 82h							001CFE 28 ED               B    66    				jr z,c_badhex
001D00 3E1C                B    67    				ld a,01ch						001D02 C9                  B    68    				ret
                           B    69    				
                           B    70    ;----------------------------------------------
                           B    71    
001D03                     B    72    hexword_or_bust
                           B    73    
                           B    74    ; Set HL to string address:
                           B    75    ; Returns to parent routine ONLY if the string 
                           B    76    ; DE = hex word. If no hex found, the zero flag
                           B    77    ; If chars are invalid hex, returns to grandpar
                           B    78    
001D03 CD 92 11 00         B    79    				call ascii_to_hexword		
001D07 FE82                B    80    				cp 82h
001D09 20 03               B    81    				jr nz,hex_good
001D0B E1                  B    82    				pop hl						; r
001D0C B7                  B    83    				or a	
001D0D C9                  B    84    				ret			 
001D0E FE81                B    85    hex_good		cp 081h						; n
001D10 C9                  B    86    				ret
                           B    87    	
                           B    88    ;----------------------------------------------
                           B    89    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  66


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\cd.asm
                           B     0    	include 'commands\cd.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'cd' - Change Dir command. V0.03 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
001D11                     B     5    os_cmd_cd	
                           B     6    
001D11 CD 03 17 00         B     7    				call os_check_volume_format	
001D15 C0                  B     8    				ret nz
                           B     9    				
001D16 7E                  B    10    				ld a,(hl)						001D17 B7                  B    11    				or a				
001D18 CA 4B 1D 00         B    12    				jp z,cd_show_path		
                           B    13    					
001D1C 7E                  B    14    				ld a,(hl)						001D1D 23                  B    15    				inc hl
001D1E 46                  B    16    				ld b,(hl)
001D1F 2B                  B    17    				dec hl
001D20 FE2E                B    18    				cp '.'			
001D22 20 08               B    19    				jr nz,cd_nual
001D24 B8                  B    20    				cp b
001D25 20 05               B    21    				jr nz,cd_nual
001D27 CD 5A 17 00         B    22    				call os_parent_dir	
001D2B C9                  B    23    				ret
                           B    24    			
                           B    25    			
001D2C FE2F                B    26    cd_nual			cp 02fh			
001D2E 20 05               B    27    				jr nz,cd_nogor					001D30 CD 60 17 00         B    28    				call os_root_dir	
001D34 C9                  B    29    				ret
                           B    30    				
                           B    31    				
001D35 FE25                B    32    cd_nogor		cp '%'							001D37 20 02               B    33    				jr nz,cd_no_assign
001D39 AF                  B    34    				xor a
001D3A C9                  B    35    				ret
                           B    36    				
001D3B CD 1C 3B 00         B    37    cd_no_assign	call os_cache_original_vol_dir
001D3F 3E01                B    38    				ld a,1
001D41 CD 9D 3A 00         B    39    				call os_parse_path_string
001D45 C8                  B    40    				ret z
001D46 CD 07 3B 00         B    41    				call os_restore_original_vol_di
001D4A C9                  B    42    				ret
                           B    43    				
                           B    44    ;----------------------------------------------
                           B    45    			
001D4B                     B    46    cd_show_path
                           B    47    			
                           B    48    			
       00000010            B    49    max_dirs	equ 16
                           B    50    			
001D4B 0610                B    51    				ld b,max_dirs
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  67


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\cd.asm
001D4D 0E00                B    52    				ld c,0
001D4F C5                  B    53    lp1				push bc
001D50 CD DA 1A 00         B    54    				call fs_get_dir_cluster
001D54 C1                  B    55    				pop bc
001D55 D5                  B    56    				push de
001D56 0C                  B    57    				inc c
001D57 C5                  B    58    				push bc
001D58 CD 5A 17 00         B    59    				call os_parent_dir
001D5C C1                  B    60    				pop bc
001D5D 20 02               B    61    				jr nz,shdir_lp
001D5F 10 EE               B    62    				djnz lp1
                           B    63    				
001D61 D1                  B    64    shdir_lp		pop de
001D62 C5                  B    65    				push bc
001D63 CD E6 1A 00         B    66    				call fs_update_dir_cluster
001D67 CD 86 17 00         B    67    				call os_get_current_dir_name
001D6B CD 15 10 00         B    68    				call os_print_string
001D6F 21 81 1D 00         B    69    				ld hl,cd_fwdslash_txt
001D73 CD 15 10 00         B    70    				call os_print_string
001D77 C1                  B    71    				pop bc
001D78 0D                  B    72    				dec c
001D79 20 E6               B    73    				jr nz,shdir_lp
                           B    74    			
001D7B CD BB 14 00         B    75    				call os_new_line	
001D7F AF                  B    76    				xor a
001D80 C9                  B    77    				ret
                           B    78    			
001D81 2F00                B    79    cd_fwdslash_txt	db '/',0	
                           B    80    			
                           B    81    ;----------------------------------------------
                           B     0    	include 'commands\cls.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"cls" - Clear screen command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
001D83                     B     5    os_cmd_cls
                           B     6    
001D83 CD E7 44 00         B     7    				call hwsc_clear_screen
001D87 AF                  B     8    				xor a
001D88 C9                  B     9    				ret
                           B    10    				
                           B    11    ;----------------------------------------------
                           B    12    	
                           B     0    	include 'commands\colon.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;":" for write hex bytes command. V0.02 - ADL m
                           B     3    ;----------------------------------------------
                           B     4    
001D89                     B     5    os_cmd_colon
                           B     6    	
001D89 CD 03 1D 00         B     7    				call hexword_or_bust			001D8D CA 7B 16 00         B     8    				jp z,os_no_start_addr			Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  68


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\colon.asm
001D91 D5                  B     9    				push de
001D92 DDE1                B    10    				pop ix							                           B    11    			
001D94 CD 03 1D 00         B    12    wmblp			call hexword_or_bust			001D98 28 07               B    13    				jr z,os_ccmdn
001D9A DD7300              B    14    				ld (ix),e						001D9D DD23                B    15    				inc ix
001D9F 18 F3               B    16    				jr wmblp
                           B    17    
001DA1 AF                  B    18    os_ccmdn		xor a
001DA2 C9                  B    19    				ret
                           B    20    		
                           B    21    
                           B    22    ;----------------------------------------------
                           B     0    	include 'commands\d.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; OS "D" Command: EZ80 Disassembler V0.02
                           B     3    ; Totally and utterly unoptimized!
                           B     4    ;----------------------------------------------
                           B     5    
001DA3 FD21 8A 23 00       B     6    os_cmd_d		ld iy,prefix_bits_loc
001DA8 FDCB 07 C6          B     7    				set adl_dis,(iy+var_adl)
                           B     8    
001DAC CD 03 1D 00         B     9    os_cmd_d_go		call hexword_or_bust			001DB0 28 05               B    10    				jr z,d_no_hex					001DB2 ED53 01 29 00       B    11    				ld (dis_addr),de
                           B    12    				
001DB7 3A F0 66 00         B    13    d_no_hex		ld a,(charmap_rows)				001DBB D602                B    14    				sub a,2
001DBD 47                  B    15    				ld b,a
001DBE C5                  B    16    dis_loop		push bc
                           B    17    				
001DBF DD2A 01 29 00       B    18    				ld ix,(dis_addr)				001DC4 CD 6C 23 00         B    19    				call show_ix					001DC8 3E20                B    20    				ld a,' '
001DCA CD 60 23 00         B    21    				call show_ascii_char
                           B    22    
001DCE FD21 8A 23 00       B    23    				ld iy,prefix_bits_loc
001DD3 FD360000            B    24    				ld (iy),0						001DD7 CD 13 1E 00         B    25    				call dis_instr					001DDB DD23                B    26    				inc ix							                           B    27    				
001DDD 3E1A                B    28    				ld a,26							001DDF 32 36 69 00         B    29    				ld (cursor_pos+1),a				001DE3 ED4B 01 29 00       B    30    				ld bc,(dis_addr)
001DE8 DD22 01 29 00       B    31    				ld (dis_addr),ix				001DED DDE5                B    32    				push ix
001DEF E1                  B    33    				pop hl
001DF0 AF                  B    34    				xor a
001DF1 ED42                B    35    				sbc hl,bc						001DF3 7D                  B    36    				ld a,l
001DF4 E607                B    37    				and 7
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  69


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
001DF6 6F                  B    38    				ld l,a
001DF7 0A                  B    39    shexoplp		ld a,(bc)						001DF8 CD 4F 23 00         B    40    				call show_hex_byte
001DFC 3E20                B    41    				ld a,' '
001DFE CD 60 23 00         B    42    				call show_ascii_char
001E02 03                  B    43    				inc bc
001E03 2D                  B    44    				dec l
001E04 20 F1               B    45    				jr nz,shexoplp
                           B    46    				
001E06 CD BB 14 00         B    47    				call os_new_line
001E0A C1                  B    48    				pop bc
001E0B 10 B1               B    49    				djnz dis_loop
                           B    50    
001E0D CD BB 14 00         B    51    				call os_new_line
001E11 AF                  B    52    				xor a
001E12 C9                  B    53    				ret
                           B    54    
                           B    55    
                           B    56    ;- Handle op code prefixes --------------------
                           B    57    			
       00000000            B    58    cb_prefix			equ 0					
       00000001            B    59    ed_prefix			equ 1
       00000002            B    60    sub_ix_prefix		equ 2
       00000003            B    61    sub_iy_prefix		equ 3
       00000004            B    62    ddcb_fdcb_prefix	equ 4					; p
       00000005            B    63    dot_l_prefix		equ 5
       00000006            B    64    il_prefix			equ 6
       00000007            B    65    show_adl_prefix		equ 7
                           B    66    
       00000000            B    67    adl_dis				equ 0					; b
                           B    68    
                           B    69    
001E13 DD7E00              B    70    dis_instr	ld a,(ix)						; c
                           B    71    			
001E16 FDCB 07 46          B    72    			bit adl_dis,(iy+var_adl)		; i
001E1A 28 04               B    73    			jr z,z80_list					; T
001E1C FDCB00F6            B    74    			set il_prefix,(iy)				; a
001E20                     B    75    z80_list			
                           B    76    			
                           B    77    ;----------------------------------------------
                           B    78    
001E20 FE40                B    79    			cp 40h
001E22 20 0A               B    80    			jr nz,not_sis
001E24 FDCB00B6            B    81    			res il_prefix,(iy)
001E28 FDCB00AE            B    82    			res dot_l_prefix,(iy)
001E2C 18 28               B    83    			jr set_adl_pf
                           B    84    			
001E2E FE49                B    85    not_sis		cp 49h
001E30 20 0A               B    86    			jr nz,not_lis
001E32 FDCB00B6            B    87    			res il_prefix,(iy)
001E36 FDCB00EE            B    88    			set dot_l_prefix,(iy)
001E3A 18 1A               B    89    			jr set_adl_pf
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  70


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B    90    			
001E3C FE52                B    91    not_lis		cp 52h
001E3E 20 0A               B    92    			jr nz,not_sil
001E40 FDCB00F6            B    93    			set il_prefix,(iy)
001E44 FDCB00AE            B    94    			res dot_l_prefix,(iy)
001E48 18 0C               B    95    			jr set_adl_pf
                           B    96    			
001E4A FE5B                B    97    not_sil		cp 5bh
001E4C 20 11               B    98    			jr nz,not_adl_prefix_byte
001E4E FDCB00F6            B    99    			set il_prefix,(iy)
001E52 FDCB00EE            B   100    			set dot_l_prefix,(iy)
                           B   101    			
001E56 FDCB00FE            B   102    set_adl_pf	set show_adl_prefix,(iy)
001E5A DD23                B   103    			inc ix
001E5C DD7E00              B   104    			ld a,(ix)	
                           B   105    			
                           B   106    ;----------------------------------------------
                           B   107    
001E5F                     B   108    not_adl_prefix_byte			
                           B   109    			
001E5F FECB                B   110    			cp 0cbh								001E61 20 08               B   111    			jr nz,not_cb
001E63 FDCB00C6            B   112    do_cb		set cb_prefix,(iy)
001E67 DD23                B   113    			inc ix
001E69 18 3A               B   114    			jr not_traditional_prefix_byte
                           B   115    
001E6B FEED                B   116    not_cb		cp 0edh
001E6D 20 08               B   117    			jr nz,not_ed
001E6F FDCB00CE            B   118    do_ed		set ed_prefix,(iy)
001E73 DD23                B   119    			inc ix
001E75 18 2E               B   120    			jr not_traditional_prefix_byte
                           B   121    
001E77 FEDD                B   122    not_ed		cp 0ddh
001E79 20 18               B   123    			jr nz,not_dd
001E7B CD AE 20 00         B   124    do_dd		call check_nxt_byte_prefix			001E7F 28 92               B   125    			jr z,dis_instr						001E81 FDCB00D6            B   126    			set sub_ix_prefix,(iy)
001E85 FECB                B   127    xdcb_query	cp 0cbh								001E87 20 1C               B   128    			jr nz,not_traditional_prefix_byte	001E89 FDCB00E6            B   129    			set ddcb_fdcb_prefix,(iy)
001E8D DD23                B   130    			inc ix								001E8F DD23                B   131    			inc ix								001E91 18 12               B   132    			jr not_traditional_prefix_byte
                           B   133    
001E93 FEFD                B   134    not_dd		cp 0fdh
001E95 20 0E               B   135    			jr nz,not_traditional_prefix_byte
001E97 CD AE 20 00         B   136    do_fd		call check_nxt_byte_prefix
001E9B CA 13 1E 00         B   137    			jr z,dis_instr	
001E9F FDCB00DE            B   138    			set sub_iy_prefix,(iy)
001EA3 18 E0               B   139    			jr xdcb_query
                           B   140    
001EA5                     B   141    not_traditional_prefix_byte
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  71


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   142    
                           B   143    ;----------------------------------------------
                           B   144    
001EA5 DD7E00              B   145    			ld a,(ix)	
001EA8 E6C0                B   146    			and 11000000b			; seperate 
001EAA 07                  B   147    			rlca
001EAB 07                  B   148    			rlca
001EAC FD77 01             B   149    			ld (iy+var_x),a			;var x= val
                           B   150    			
001EAF DD7E00              B   151    			ld a,(ix)
001EB2 E638                B   152    			and 00111000b
001EB4 CB3F                B   153    			srl a
001EB6 CB3F                B   154    			srl a
001EB8 CB3F                B   155    			srl a	
001EBA FD77 02             B   156    			ld (iy+var_y),a			;var x = vl
                           B   157    
001EBD DD7E00              B   158    			ld a,(ix)
001EC0 E607                B   159    			and 00000111b
001EC2 FD77 03             B   160    			ld (iy+var_z),a			;var z = va
                           B   161    			
001EC5 DD7E00              B   162    			ld a,(ix)
001EC8 E630                B   163    			and 00110000b
001ECA CB3F                B   164    			srl a
001ECC CB3F                B   165    			srl a
001ECE CB3F                B   166    			srl a
001ED0 CB3F                B   167    			srl a
001ED2 FD77 04             B   168    			ld (iy+var_p),a			; var p = v
                           B   169    			
001ED5 DD7E00              B   170    			ld a,(ix)
001ED8 E608                B   171    			and 00001000b
001EDA CB3F                B   172    			srl a
001EDC CB3F                B   173    			srl a
001EDE CB3F                B   174    			srl a
001EE0 FD77 05             B   175    			ld (iy+var_q),a				;var q 
                           B   176    
001EE3 CD BC 20 00         B   177    			call find_instruction_ascii		; g
                           B   178    	
                           B   179    ;----------------------------------------------
                           B   180    
001EE7 78                  B   181    index_table	ld a,b							; a
001EE8 B7                  B   182    			or a
001EE9 28 07               B   183    			jr z,parse_instr				; m
001EEB CB7E                B   184    d_filp		bit 7,(hl)						; w
001EED 23                  B   185    			inc hl							; o
001EEE 28 FB               B   186    			jr z,d_filp					
001EF0 10 F9               B   187    			djnz d_filp
                           B   188    										
                           B   189    			
001EF2 FD21 8A 23 00       B   190    parse_instr	ld iy,opcode_vars
001EF7 01000000            B   191    			ld bc,0
001EFB 7E                  B   192    			ld a,(hl)						;ge
001EFC FE80                B   193    			cp 80h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  72


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
001EFE C8                  B   194    			ret z
001EFF E67F                B   195    			and 7fh
                           B   196    			
001F01 FE26                B   197    			cp '&'							;sy
001F03 20 28               B   198    			jr nz,not_adlsym
001F05 FDCB007E            B   199    			bit show_adl_prefix,(iy)		;do
001F09 CA 97 20 00         B   200    			jr z,next_opcode_ascii_char
001F0D 0600                B   201    			ld b,0
001F0F FDCB006E            B   202    			bit dot_l_prefix,(iy)
001F13 28 02               B   203    			jr z,naplsb
001F15 CBC0                B   204    			set 0,b
001F17 FDCB0076            B   205    naplsb		bit il_prefix,(iy)
001F1B 28 02               B   206    			jr z,napmsb
001F1D CBC8                B   207    			set 1,b
001F1F E5                  B   208    napmsb		push hl
001F20 21 E9 28 00         B   209    			ld hl,adl_prefix_list
001F24 CD E7 1E 00         B   210    			call index_table				; r
001F28 E1                  B   211    			pop hl
001F29 C3 97 20 00         B   212    			jp next_opcode_ascii_char
                           B   213    
001F2D FE5E                B   214    not_adlsym	cp '^'							;sy
001F2F 20 0D               B   215    			jr nz,d_not_imm8
001F31 DD23                B   216    			inc ix							;th
001F33 DD7E00              B   217    			ld a,(ix)
001F36 CD 4F 23 00         B   218    			call show_hex_byte
001F3A C3 97 20 00         B   219    			jp next_opcode_ascii_char
                           B   220    					
001F3E FE21                B   221    d_not_imm8	cp '!'							;sy
001F40 20 26               B   222    			jr nz,d_not_imm16					001F42 11020000            B   223    			ld de,2
001F46 FDCB0076            B   224    			bit il_prefix,(iy)				;ad
001F4A 28 08               B   225    			jr z,imm16
001F4C 13                  B   226    			inc de
001F4D DD7E03              B   227    			ld a,(ix+3)
001F50 CD 4F 23 00         B   228    			call show_hex_byte
001F54 DD7E02              B   229    imm16		ld a,(ix+2)						;sh
001F57 CD 4F 23 00         B   230    			call show_hex_byte			
001F5B DD7E01              B   231    			ld a,(ix+1)						;th
001F5E CD 4F 23 00         B   232    			call show_hex_byte
001F62 DD19                B   233    			add ix,de						;ad
001F64 C3 97 20 00         B   234    			jp next_opcode_ascii_char
                           B   235    
001F68 FE2F                B   236    d_not_imm16	cp '/'							;sy
001F6A 20 36               B   237    			jr nz,d_not_sb
001F6C FDCB0066            B   238    			bit ddcb_fdcb_prefix,(iy)
001F70 28 05               B   239    			jr z,norm_dbyte
001F72 DD7EFF              B   240    			ld a,(ix-1)						;if
001F75 18 05               B   241    			jr xdcb_dbyte
001F77 DD23                B   242    norm_dbyte	inc ix
001F79 DD7E00              B   243    			ld a,(ix)						;th
001F7C CB7F                B   244    xdcb_dbyte	bit 7,a
001F7E 20 10               B   245    			jr nz,d_sbin					;sh
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  73


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
001F80 F5                  B   246    			push af
001F81 3E2B                B   247    			ld a,'+'
001F83 CD 60 23 00         B   248    			call show_ascii_char
001F87 F1                  B   249    			pop af
001F88 CD 4F 23 00         B   250    			call show_hex_byte
001F8C C3 97 20 00         B   251    			jp next_opcode_ascii_char
001F90 F5                  B   252    d_sbin		push af
001F91 3E2D                B   253    			ld a,'-'
001F93 CD 60 23 00         B   254    			call show_ascii_char
001F97 F1                  B   255    			pop af
001F98 ED44                B   256    			neg
001F9A CD 4F 23 00         B   257    			call show_hex_byte
001F9E C3 97 20 00         B   258    			jp next_opcode_ascii_char
                           B   259    			
001FA2 FE64                B   260    d_not_sb	cp 'd'							;sy
001FA4 20 1E               B   261    			jr nz,d_not_pcdip
001FA6 DD23                B   262    			inc ix
001FA8 01000000            B   263    			ld bc,0
001FAC DD7E00              B   264    			ld a,(ix)
001FAF CB7F                B   265    			bit 7,a
001FB1 28 01               B   266    			jr z,d_spcd_pos
001FB3 0B                  B   267    			dec bc
001FB4 4F                  B   268    d_spcd_pos	ld c,a
001FB5 03                  B   269    			inc bc
001FB6 DDE5                B   270    			push ix
001FB8 DD09                B   271    			add ix,bc
001FBA CD 6C 23 00         B   272    			call show_ix
001FBE DDE1                B   273    			pop ix
001FC0 C3 97 20 00         B   274    			jp next_opcode_ascii_char
                           B   275    
001FC4 FE3E                B   276    d_not_pcdip	cp '>'							;sy
001FC6 20 16               B   277    			jr nz,d_not_sdig
001FC8 23                  B   278    			inc hl							;th
001FC9 01000000            B   279    			ld bc,0
001FCD 4E                  B   280    			ld c,(hl)
001FCE FD21 8A 23 00       B   281    			ld iy,opcode_vars
001FD3 FD09                B   282    			add iy,bc
001FD5 FD7E00              B   283    			ld a,(iy)						;a 
001FD8 C630                B   284    			add a,30h						;co
001FDA C3 93 20 00         B   285    			jp d_output_char
                           B   286    
001FDE FE5F                B   287    d_not_sdig	cp '_'
001FE0 20 12               B   288    			jr nz,d_nhlsubst				; s
001FE2 E5                  B   289    			push hl
001FE3 21 C1 28 00         B   290    			ld hl,hl_subs
001FE7 CD 9F 20 00         B   291    hl_subst	call prefix_to_offset
001FEB CD E7 1E 00         B   292    			call index_table				; r
001FEF E1                  B   293    			pop hl
001FF0 C3 97 20 00         B   294    			jp next_opcode_ascii_char
                           B   295    			
001FF4 FE7C                B   296    d_nhlsubst	cp '|'
001FF6 20 07               B   297    			jr nz,d_noinvhls
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  74


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
001FF8 E5                  B   298    			push hl
001FF9 21 C7 28 00         B   299    			ld hl,inv_hl_subs
001FFD 18 E8               B   300    			jr hl_subst
                           B   301    			
001FFF FE68                B   302    d_noinvhls	cp 'h'							;sy
002001 20 07               B   303    			jr nz,d_nhsubst
002003 E5                  B   304    			push hl
002004 21 CD 28 00         B   305    			ld hl,h_subs
002008 18 DD               B   306    			jr hl_subst
                           B   307    			
00200A FE6C                B   308    d_nhsubst	cp 'l'							;sy
00200C 20 07               B   309    			jr nz,d_nlsubst
00200E E5                  B   310    			push hl
00200F 21 D4 28 00         B   311    			ld hl,l_subs
002013 18 D2               B   312    			jr hl_subst
                           B   313    			
002015 FE24                B   314    d_nlsubst	cp '$'
002017 20 07               B   315    			jr nz,d_nihlsubst				; s
002019 E5                  B   316    			push hl
00201A 21 DB 28 00         B   317    			ld hl,ind_hl_subs
00201E 18 C7               B   318    			jr hl_subst
                           B   319    
                           B   320    
002020                     B   321    d_nihlsubst	
                           B   322    
002020 FE7E                B   323    			cp '~'							; s
002022 20 1F               B   324    			jr nz,ntable_r
002024 11 16 28 00         B   325    			ld de,table_r
002028 23                  B   326    do_table 	inc hl
002029 01000000            B   327    			ld bc,0							; t
00202D 4E                  B   328    			ld c,(hl)
00202E FD21 8A 23 00       B   329    			ld iy,opcode_vars
002033 FD09                B   330    			add iy,bc
002035 FD4600              B   331    			ld b,(iy)						;in
002038 E5                  B   332    			push hl
002039 EB                  B   333    			ex de,hl
00203A CD E7 1E 00         B   334    			call index_table				; r
00203E E1                  B   335    			pop hl
00203F C3 97 20 00         B   336    			jp next_opcode_ascii_char
                           B   337    			
002043 11 21 28 00         B   338    ntable_r	ld de,table_r2					; s
002047 FE3D                B   339    			cp '='
002049 28 DD               B   340    			jr z,do_table
                           B   341    			
00204B 11 2C 28 00         B   342    			ld de,table_rp					; s
00204F FE40                B   343    			cp '@'
002051 28 D5               B   344    			jr z,do_table 
                           B   345    			
002053 11 33 28 00         B   346    			ld de,table_rp2					; s
002057 FE2A                B   347    			cp '*'
002059 28 CD               B   348    			jr z,do_table
                           B   349    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  75


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
00205B 11 99 28 00         B   350    			ld de,table_rp3					; s
00205F FE3C                B   351    			cp '<'
002061 28 C5               B   352    			jr z,do_table
                           B   353    			
002063 11 A1 28 00         B   354    			ld de,table_rp4					; s
002067 FE7D                B   355    			cp '}'
002069 28 BD               B   356    			jr z,do_table
                           B   357    			
00206B 11 3B 28 00         B   358    			ld de,table_cc					; s
00206F FE23                B   359    			cp '#'
002071 28 B5               B   360    			jr z,do_table 
                           B   361    			
002073 11 47 28 00         B   362    			ld de,table_alu					; s
002077 FE3A                B   363    			cp ':'
002079 28 AD               B   364    			jr z,do_table 
                           B   365    			
00207B 11 73 28 00         B   366    			ld de,table_rot					; s
00207F FE25                B   367    			cp '%'
002081 28 A5               B   368    			jr z,do_table 
                           B   369    			
002083 11 B1 28 00         B   370    			ld de,table_rst					; s
002087 FE3B                B   371    			cp ';'
002089 28 9D               B   372    			jr z,do_table 
                           B   373    
00208B 11 A9 28 00         B   374    			ld de,table_rp5					; s
00208F FE7B                B   375    			cp '{'
002091 28 95               B   376    			jr z,do_table 
                           B   377    
002093                     B   378    ntable_bli
                           B   379    
                           B   380    ;----------------------------------------------
                           B   381    
002093                     B   382    d_output_char
                           B   383    
002093 CD 60 23 00         B   384    			call show_ascii_char
                           B   385    
002097                     B   386    next_opcode_ascii_char
                           B   387    
002097 CB7E                B   388    			bit 7,(hl)						;if
002099 C0                  B   389    			ret nz
00209A 23                  B   390    			inc hl
00209B C3 F2 1E 00         B   391    			jp parse_instr
                           B   392    			
                           B   393    			
                           B   394    ;----------------------------------------------
                           B   395    
                           B   396    
00209F                     B   397    prefix_to_offset
                           B   398    
00209F 0602                B   399    			ld b,2							;se
0020A1 FDCB005E            B   400    			bit sub_iy_prefix,(iy)
0020A5 C0                  B   401    			ret nz
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  76


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0020A6 05                  B   402    			dec b
0020A7 FDCB0056            B   403    			bit sub_ix_prefix,(iy)
0020AB C0                  B   404    			ret nz
0020AC 05                  B   405    			dec b
0020AD C9                  B   406    			ret
                           B   407    			
                           B   408    			
0020AE                     B   409    check_nxt_byte_prefix			
                           B   410    
0020AE DD23                B   411    			inc ix
0020B0 DD7E00              B   412    			ld a,(ix)
0020B3 FEDD                B   413    			cp 0ddh
0020B5 C8                  B   414    			ret z
0020B6 FEED                B   415    			cp 0edh
0020B8 C8                  B   416    			ret z
0020B9 FEFD                B   417    			cp 0fdh
0020BB C9                  B   418    			ret
                           B   419    			
                           B   420    			
                           B   421    ;==============================================
                           B   422    ;- Find instruction ascii ---------------------
                           B   423    ;==============================================
                           B   424    
                           B   425    ; Returns HL = ptr to ascii name
                           B   426    ;          B = group index (number of instructi
                           B   427    
0020BC                     B   428    find_instruction_ascii
                           B   429    
0020BC 0600                B   430    			ld b,0						; defau
                           B   431    
0020BE FDCB0066            B   432    			bit ddcb_fdcb_prefix,(iy)	; Was t
0020C2 28 12               B   433    			jr z,not_ddcb_fdcb_inst
0020C4 21 F0 27 00         B   434    			ld hl,ddcb_fdcb_z6		
0020C8 FD46 01             B   435    			ld b,(iy+var_x)				; x is 
0020CB FD7E 03             B   436    			ld a,(iy+var_z)
0020CE FE06                B   437    			cp 6
0020D0 C8                  B   438    			ret z
0020D1 21 B8 27 00         B   439    			ld hl,ddcb_fdcb_zn6					0020D5 C9                  B   440    			ret
                           B   441    			
                           B   442    ;==============================================
                           B   443    
0020D6                     B   444    not_ddcb_fdcb_inst
                           B   445    
0020D6 FDCB0046            B   446    			bit cb_prefix,(iy)			;is thi
0020DA 28 08               B   447    			jr z,not_cb_inst
0020DC 21 40 25 00         B   448    			ld hl,cb_group		
0020E0 FD46 01             B   449    			ld b,(iy+var_x)				; x is 
0020E3 C9                  B   450    			ret
                           B   451    
                           B   452    ;==============================================
                           B   453    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  77


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0020E4                     B   454    not_cb_inst
                           B   455    
0020E4 FDCB004E            B   456    			bit ed_prefix,(iy)			;is thi
0020E8 CA 09 22 00         B   457    			jr z,not_ed_inst
                           B   458    
0020EC FD7E 01             B   459    			ld a,(iy+var_x)				;x = 0
0020EF B7                  B   460    			or a
0020F0 20 56               B   461    			jr nz,notedx0
                           B   462    		
                           B   463    			
0020F2 FD7E 03             B   464    			ld a,(iy+var_z)				
0020F5 B7                  B   465    			or a
0020F6 20 0D               B   466    			jr nz,notedx0z0
0020F8 21 67 25 00         B   467    			ld hl,ed_x0_z0_yn6			;x0 / z
0020FC FD7E 02             B   468    			ld a,(iy+var_y)
0020FF FE06                B   469    			cp 6
002101 C0                  B   470    			ret nz
002102 0601                B   471    			ld b,1
002104 C9                  B   472    			ret
                           B   473    
002105 FE01                B   474    notedx0z0	cp 1
002107 20 0D               B   475    			jr nz,notedx0z1
002109 21 78 25 00         B   476    			ld hl,ed_x0_z1				;x0 / z
00210D FD7E 02             B   477    			ld a,(iy+var_y)
002110 FE06                B   478    			cp 6
002112 C0                  B   479    			ret nz
002113 0601                B   480    			ld b,1
002115 C9                  B   481    			ret
                           B   482    
002116 FE02                B   483    notedx0z1	cp 2
002118 20 05               B   484    			jr nz,notedx0z2
00211A 21 8E 25 00         B   485    			ld hl,ed_x0_z2				;x0 / z
00211E C9                  B   486    			ret
                           B   487    
00211F FE03                B   488    notedx0z2	cp 3
002121 20 05               B   489    			jr nz,notedx0z3
002123 21 9A 25 00         B   490    			ld hl,ed_x0_z3				;x0 / z
002127 C9                  B   491    			ret
                           B   492    			
002128 FE04                B   493    notedx0z3	cp 4
00212A 20 05               B   494    			jr nz,notedx0z4
00212C 21 A6 25 00         B   495    			ld hl,ed_x0_z4				;x0 / z
002130 C9                  B   496    			ret
                           B   497    
002131 FE06                B   498    notedx0z4	cp 6
002133 20 05               B   499    			jr nz,notedx0z6				;x0 / z
002135 21 B0 25 00         B   500    			ld hl,ed_x0_z6
002139 C9                  B   501    			ret
                           B   502    
00213A FE07                B   503    notedx0z6	cp 7
00213C C2 13 28 00         B   504    			jr nz,bad_opcode			;x0 / z
002140 21 BB 25 00         B   505    			ld hl,ed_x0_z7
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  78


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002144 FD46 05             B   506    			ld b,(iy+var_q)
002147 C9                  B   507    			ret
                           B   508    			
                           B   509    ;----------------------------------------------
                           B   510    			
002148 FE01                B   511    notedx0		cp 1	
00214A 20 68               B   512    			jr nz,ed_xn1
                           B   513    
00214C FD7E 03             B   514    			ld a,(iy+var_z)					;x 
00214F B7                  B   515    			or a
002150 20 0D               B   516    			jr nz,ed_x1_zn0
002152 21 D0 25 00         B   517    			ld hl,ed_x1_z0_yn6				;z 
002156 FD7E 02             B   518    			ld a,(iy+var_y)
002159 FE06                B   519    			cp 6
00215B C0                  B   520    			ret nz
00215C 0601                B   521    			ld b,1
00215E C9                  B   522    			ret
                           B   523    			
00215F FE01                B   524    ed_x1_zn0	cp 1
002161 20 0D               B   525    			jr nz,ed_x1_zn1
002163 21 E0 25 00         B   526    			ld hl,ed_x1_z1_yn6				;z 
002167 FD7E 02             B   527    			ld a,(iy+var_y)
00216A FE06                B   528    			cp 6
00216C C0                  B   529    			ret nz
00216D 0601                B   530    			ld b,1
00216F C9                  B   531    			ret
                           B   532    		
002170 FE02                B   533    ed_x1_zn1	cp 2
002172 20 08               B   534    			jr nz,ed_x1_zn2					;z 
002174 21 F5 25 00         B   535    			ld hl,ed_x1_z2	
002178 FD46 05             B   536    			ld b,(iy+var_q)
00217B C9                  B   537    			ret
                           B   538    
00217C FE03                B   539    ed_x1_zn2	cp 3
00217E 20 08               B   540    			jr nz,ed_x1_zn3					;z 
002180 21 0B 26 00         B   541    			ld hl,ed_x1_z3	
002184 FD46 05             B   542    			ld b,(iy+var_q)
002187 C9                  B   543    			ret
                           B   544    			
002188 FE04                B   545    ed_x1_zn3	cp 4							;z 
00218A 20 08               B   546    			jr nz,ed_x1_zn4
00218C 21 20 26 00         B   547    			ld hl,ed_x1_z4
002190 FD46 02             B   548    			ld b,(iy+var_y)
002193 C9                  B   549    			ret
                           B   550    			
002194 FE05                B   551    ed_x1_zn4	cp 5
002196 20 08               B   552    			jr nz,ed_x1_zn5
002198 21 58 26 00         B   553    			ld hl,ed_x1_z5					;z 
00219C FD46 02             B   554    			ld b,(iy+var_y)
00219F C9                  B   555    			ret
                           B   556    			
0021A0 FE06                B   557    ed_x1_zn5	cp 6
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  79


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0021A2 20 08               B   558    			jr nz,ed_x1_zn6					;z=
0021A4 21 87 26 00         B   559    			ld hl,ed_x1_z6
0021A8 FD46 02             B   560    			ld b,(iy+var_y)
0021AB C9                  B   561    			ret
                           B   562    			
0021AC 21 AC 26 00         B   563    ed_x1_zn6	ld hl,ed_x1_z7					;z=
0021B0 FD46 02             B   564    			ld b,(iy+var_y)
0021B3 C9                  B   565    			ret
                           B   566    
                           B   567    ;----------------------------------------------
                           B   568    				
0021B4 FE02                B   569    ed_xn1		cp 2
0021B6 20 2E               B   570    			jr nz,ed_xn2
                           B   571    			
0021B8 FD46 02             B   572    			ld b,(iy+var_y)
0021BB FD7E 03             B   573    			ld a,(iy+var_z)
0021BE B7                  B   574    			or a
0021BF 20 05               B   575    			jr nz,edx2zn0
0021C1 21 D0 26 00         B   576    			ld hl,ed_x2_z0					;x=
0021C5 C9                  B   577    			ret
                           B   578    
0021C6 FE01                B   579    edx2zn0		cp 1
0021C8 20 05               B   580    			jr nz,edx2zn1
0021CA 21 EA 26 00         B   581    			ld hl,ed_x2_z1					;x=
0021CE C9                  B   582    			ret
                           B   583    
0021CF FE02                B   584    edx2zn1		cp 2
0021D1 20 05               B   585    			jr nz,edx2zn2
0021D3 21 04 27 00         B   586    			ld hl,ed_x2_z2					;x=
0021D7 C9                  B   587    			ret
                           B   588    
0021D8 FE03                B   589    edx2zn2		cp 3
0021DA 20 05               B   590    			jr nz,edx2zn3
0021DC 21 34 27 00         B   591    			ld hl,ed_x2_z3					;x=
0021E0 C9                  B   592    			ret
                           B   593    
0021E1 21 66 27 00         B   594    edx2zn3		ld hl,ed_x2_z4					;x=
0021E5 C9                  B   595    			ret
                           B   596    
                           B   597    ;----------------------------------------------
                           B   598    
0021E6 FE03                B   599    ed_xn2		cp 3
0021E8 20 18               B   600    			jr nz,ed_xn3
                           B   601    			
0021EA FD46 02             B   602    			ld b,(iy+var_y)
0021ED FD7E 03             B   603    			ld a,(iy+var_z)
0021F0 FE02                B   604    			cp 2
0021F2 20 05               B   605    			jr nz,edx3zn2
0021F4 21 9C 27 00         B   606    			ld hl,ed_x3_z2					;x=
0021F8 C9                  B   607    			ret
0021F9 FE03                B   608    edx3zn2		cp 3
0021FB 20 05               B   609    			jr nz,edx3zn3
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  80


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0021FD 21 AA 27 00         B   610    			ld hl,ed_x3_z3					;x=
002201 C9                  B   611    			ret
                           B   612    
002202                     B   613    edx3zn3
                           B   614    
002202                     B   615    ed_xn3
                           B   616    
                           B   617    ;----------------------------------------------
                           B   618    
002202                     B   619    invalid_op
002202 21 13 28 00         B   620    			ld hl,bad_opcode				; x
002206 0600                B   621    			ld b,0
002208 C9                  B   622    			ret
                           B   623    			
                           B   624    			
                           B   625    ;========= UNPREFIXED INSTRUCTION =============
                           B   626    
                           B   627    
002209 FD7E 01             B   628    not_ed_inst	ld a,(iy+var_x)				; is X 
00220C B7                  B   629    			or a
00220D C2 A5 22 00         B   630    			jr nz,x_not_zero
                           B   631    
                           B   632    ;----------------------------------------------
                           B   633    
                           B   634    
002211 FD7E 03             B   635    			ld a,(iy+var_z)				;x = 0
002214 B7                  B   636    			or a
002215 20 14               B   637    			jr nz,x0_z_not_zero
002217 21 92 23 00         B   638    			ld hl,x0_z0
00221B FD7E 02             B   639    			ld a,(iy+var_y)				;y is t
00221E 47                  B   640    			ld b,a
00221F D604                B   641    			sub 4
002221 FD77 06             B   642    			ld (iy+var_calc),a			;var_ca
002224 78                  B   643    			ld a,b
002225 FE04                B   644    			cp 4
002227 D8                  B   645    			ret c
002228 0604                B   646    			ld b,4						;if y >
00222A C9                  B   647    			ret
                           B   648    			
00222B                     B   649    x0_z_not_zero		
                           B   650    			
00222B FE01                B   651    			cp 1
00222D 20 1A               B   652    			jr nz,x0_z_not_one
00222F FD7E 02             B   653    			ld a,(iy+var_y)				;x=0/z=
002232 FE06                B   654    			cp 6
002234 20 0B               B   655    			jr nz,x0z1yn6
002236 CD 45 23 00         B   656    			call test_ixiy_prefix		;if y=6
00223A 28 05               B   657    			jr z,x0z1yn6				;altern
00223C 21 C5 23 00         B   658    			ld hl,x0_z1_y6
002240 C9                  B   659    			ret
                           B   660    
002241 21 B2 23 00         B   661    x0z1yn6		ld hl,x0_z1					;x=0, z
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  81


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002245 FD46 05             B   662    			ld b,(iy+var_q)				;q is t
002248 C9                  B   663    			ret 
                           B   664    			
002249                     B   665    x0_z_not_one
                           B   666    
002249 FE02                B   667    			cp 2
00224B 20 08               B   668    			jr nz,x0_z_not_two
00224D 21 CD 23 00         B   669    			ld hl,x0_z2
002251 FD46 02             B   670    			ld b,(iy+var_y)				;y is t
002254 C9                  B   671    			ret
                           B   672    			
002255                     B   673    x0_z_not_two
                           B   674    
002255 FE03                B   675    			cp 3
002257 20 08               B   676    			jr nz,x0_z_not_three
002259 21 19 24 00         B   677    			ld hl,x0_z3
00225D FD46 05             B   678    			ld b,(iy+var_q)				;q is t
002260 C9                  B   679    			ret
                           B   680    			
002261                     B   681    x0_z_not_three
                           B   682    
002261 FE04                B   683    			cp 4
002263 20 05               B   684    			jr nz,x0_z_not_four
002265 21 29 24 00         B   685    			ld hl,x0_z4					;no ini
002269 C9                  B   686    			ret			
                           B   687    			
00226A                     B   688    x0_z_not_four
                           B   689    
00226A FE05                B   690    			cp 5
00226C 20 05               B   691    			jr nz,x0_z_not_five
00226E 21 31 24 00         B   692    			ld hl,x0_z5					;no ini
002272 C9                  B   693    			ret				
                           B   694    			
002273                     B   695    x0_z_not_five
                           B   696    
002273 FE06                B   697    			cp 6
002275 20 1A               B   698    			jr nz,x0_z_not_six
002277 21 39 24 00         B   699    			ld hl,x0_z6					;normal
00227B FD7E 02             B   700    			ld a,(iy+var_y)
00227E FE07                B   701    			cp 7
002280 C0                  B   702    			ret nz
002281 FDCB0056            B   703    			bit sub_ix_prefix,(iy)
002285 20 05               B   704    			jr nz,altx0z6
002287 FDCB005E            B   705    			bit sub_iy_prefix,(iy)
00228B C8                  B   706    			ret z	
00228C 21 42 24 00         B   707    altx0z6		ld hl,alt_x0_z6				;if dd/
002290 C9                  B   708    			ret
                           B   709    
                           B   710    
002291                     B   711    x0_z_not_six
                           B   712    			
002291 21 4A 24 00         B   713    			ld hl,x0_z7					;x=0, z
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  82


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002295 FD46 02             B   714    			ld b,(iy+var_y)				;y is n
002298 CD 45 23 00         B   715    			call test_ixiy_prefix
00229C C8                  B   716    			ret z
00229D 21 64 24 00         B   717    altx0z7		ld hl,alt_x0_z7				;if dd/
0022A1 FD46 05             B   718    			ld b,(iy+var_q)				;this i
0022A4 C9                  B   719    			ret
                           B   720    
                           B   721    ;----------------------------------------------
                           B   722    
0022A5 FE01                B   723    x_not_zero	cp 1						; is x 
0022A7 20 32               B   724    			jr nz,x_not_one
                           B   725    			
0022A9 21 76 24 00         B   726    			ld hl,x1_table				; x=1
0022AD CD 45 23 00         B   727    			call test_ixiy_prefix
0022B1 20 11               B   728    			jr nz,pref_x1
0022B3 FD7E 02             B   729    			ld a,(iy+var_y)
0022B6 FE06                B   730    			cp 6
0022B8 C0                  B   731    			ret nz
0022B9 FD7E 03             B   732    			ld a,(iy+var_z)
0022BC FE06                B   733    			cp 6
0022BE C0                  B   734    			ret nz
0022BF 21 94 24 00         B   735    			ld hl,x1_y6_z6				;if y=6
0022C3 C9                  B   736    			ret
                           B   737    
0022C4 FD7E 02             B   738    pref_x1		ld a,(iy+var_y)				
0022C7 FE06                B   739    			cp 6
0022C9 20 05               B   740    			jr nz,x1yn6
0022CB 21 80 24 00         B   741    			ld hl,x1_y6
0022CF C9                  B   742    			ret
                           B   743    			
0022D0 FD7E 03             B   744    x1yn6		ld a,(iy+var_z)
0022D3 FE06                B   745    			cp 6
0022D5 C0                  B   746    			ret nz
0022D6 21 8A 24 00         B   747    			ld hl,x1_z6
0022DA C9                  B   748    			ret
                           B   749    			
                           B   750    ;----------------------------------------------
                           B   751    			
0022DB FE02                B   752    x_not_one	cp 2						; is x 
0022DD 20 05               B   753    			jr nz,x_not_two
0022DF 21 98 24 00         B   754    			ld hl,x2_table				; no in
0022E3 C9                  B   755    			ret
                           B   756    			
                           B   757    ;----------------------------------------------
                           B   758    
0022E4 FD7E 03             B   759    x_not_two	ld a,(iy+var_z)				; x mus
0022E7 B7                  B   760    			or a
0022E8 20 05               B   761    			jr nz,x3_z_not_zero
0022EA 21 9D 24 00         B   762    			ld hl,x3_z0					; no in
0022EE C9                  B   763    			ret
                           B   764    						
0022EF                     B   765    x3_z_not_zero
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  83


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   766    
0022EF FE01                B   767    			cp 1
0022F1 20 11               B   768    			jr nz,x3_z_not_one
0022F3 21 A5 24 00         B   769    			ld hl,x3_z1_q0
0022F7 FD7E 05             B   770    			ld a,(iy+var_q)
0022FA B7                  B   771    			or a
0022FB C8                  B   772    			ret z						; no in
0022FC 21 AD 24 00         B   773    			ld hl,x3_z1_q1
002300 FD46 04             B   774    			ld b,(iy+var_p)				; index
002303 C9                  B   775    			ret
                           B   776    
002304                     B   777    x3_z_not_one
                           B   778    
002304 FE02                B   779    			cp 2
002306 20 05               B   780    			jr nz,x3_z_not_two
002308 21 C4 24 00         B   781    			ld hl,x3_z2					;no ini
00230C C9                  B   782    			ret
                           B   783    
00230D                     B   784    x3_z_not_two
                           B   785    
00230D FE03                B   786    			cp 3
00230F 20 08               B   787    			jr nz,x3_z_not_three
002311 21 CD 24 00         B   788    			ld hl,x3_z3
002315 FD46 02             B   789    			ld b,(iy+var_y)				;index 
002318 C9                  B   790    			ret
                           B   791    
002319                     B   792    x3_z_not_three
                           B   793    
002319 FE04                B   794    			cp 4
00231B 20 05               B   795    			jr nz,x3_z_not_four
00231D 21 02 25 00         B   796    			ld hl,x3_z4				;no initial
002321 C9                  B   797    			ret						
                           B   798    
                           B   799    
002322                     B   800    x3_z_not_four
                           B   801    
002322 FE05                B   802    			cp 5
002324 20 11               B   803    			jr nz,x3_z_not_five
002326 21 0D 25 00         B   804    			ld hl,x3_z5_q0
00232A FD7E 05             B   805    			ld a,(iy+var_q)
00232D B7                  B   806    			or a
00232E C8                  B   807    			ret z						;no ind
00232F 21 16 25 00         B   808    			ld hl,x3_z5_q1
002333 FD46 04             B   809    			ld b,(iy+var_p)				;else i
002336 C9                  B   810    			ret
                           B   811    
002337                     B   812    x3_z_not_five
                           B   813    
002337 FE06                B   814    			cp 6
002339 20 05               B   815    			jr nz,x3_z_not_six
00233B 21 34 25 00         B   816    			ld hl,x3_z6					;no ind
00233F C9                  B   817    			ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  84


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   818    
002340                     B   819    x3_z_not_six
                           B   820    
002340 21 38 25 00         B   821    			ld hl,x3_z7					;x=3, z
002344 C9                  B   822    			ret
                           B   823    
                           B   824    
                           B   825    ;==============================================
                           B   826    
002345                     B   827    test_ixiy_prefix
                           B   828    
002345 FDCB0056            B   829    			bit sub_ix_prefix,(iy)
002349 C0                  B   830    			ret nz
00234A FDCB005E            B   831    			bit sub_iy_prefix,(iy)
00234E C9                  B   832    			ret
                           B   833    			
                           B   834    ;==============================================
                           B   835    
                           B   836    
00234F                     B   837    show_hex_byte
                           B   838    
00234F E5                  B   839    			push hl
002350 21 FC 28 00         B   840    			ld hl,output_byte_txt
002354 E5                  B   841    			push hl
002355 CD 5E 11 00         B   842    			call hexbyte_to_ascii
002359 E1                  B   843    			pop hl
00235A CD 15 10 00         B   844    			call os_print_string
00235E E1                  B   845    			pop hl
00235F C9                  B   846    			ret
                           B   847    			
                           B   848    
002360                     B   849    show_ascii_char
                           B   850    
002360 E5                  B   851    			push hl
002361 21 FF 28 00         B   852    			ld hl,output_char_txt
002365 77                  B   853    			ld (hl),a
002366 CD 15 10 00         B   854    			call os_print_string
00236A E1                  B   855    			pop hl
00236B C9                  B   856    			ret
                           B   857    		
                           B   858    		
00236C DD22 F9 28 00       B   859    show_ix		ld (d_work_address),ix
002371 3A FB 28 00         B   860    			ld a,(d_work_address+2)
002375 CD 4F 23 00         B   861    			call show_hex_byte
002379 3A FA 28 00         B   862    			ld a,(d_work_address+1)
00237D CD 4F 23 00         B   863    			call show_hex_byte
002381 3A F9 28 00         B   864    			ld a,(d_work_address)
002385 CD 4F 23 00         B   865    			call show_hex_byte
002389 C9                  B   866    			ret
                           B   867    			
                           B   868    ;----------------------------------------------
                           B   869    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  85


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   870    ; SYMBOLS:
                           B   871    
                           B   872    ; #  CC_table
                           B   873    ; ~  r table (registers)
                           B   874    ; =  r2 table (registers 2)
                           B   875    ; @  RP table (register pairs 1)
                           B   876    ; *  RP2 table (registers pairs 2)
                           B   877    ; :  ALU table
                           B   878    ; %  ROT table
                           B   879    ; _  HL,IX/IY substitute selected by prefix
                           B   880    ; |  HL, IY/IX substitute based on prefix (IX/I
                           B   881    ; $  (HL),(IX+d),(IY+d) substitute selected by 
                           B   882    ; h  H,IXH/IYH substitute selected by prefix
                           B   883    ; l  L,IXL,IYL substitute selected by prefix
                           B   884    ; &  ADL prefix 
                           B   885    
                           B   886    ; ^   n (8 bit immediate)
                           B   887    ; !   nn (16 or 24 bit immediate)
                           B   888    ; d   8 bit signed jump displacement from PC
                           B   889    ; /   8 bit signed byte used for IX+d, IY+d ins
                           B   890    ; >   single digit used by BIT,SET,RES instruct
                           B   891    ; <   RP3 table (register pairs 3)
                           B   892    ; }   RP4 table (register pairs 4)
                           B   893    ; ;   RST table
                           B   894    ; {   RP5 table (register pairs 5)
                           B   895    
00238A                     B   896    opcode_vars
                           B   897    
00238A 00                  B   898    prefix_bits_loc	db 0	
00238B 00                  B   899    var_x_loc		db 0	
00238C 00                  B   900    var_y_loc		db 0	
00238D 00                  B   901    var_z_loc		db 0	
00238E 00                  B   902    var_p_loc		db 0	
00238F 00                  B   903    var_q_loc		db 0
002390 00                  B   904    var_calc_loc	db 0
002391 01                  B   905    var_adl_loc		db 1
                           B   906    
       00000000            B   907    prefix_bits		equ opcode_vars-prefix_bits_loc
       00000001            B   908    var_x			equ var_x_loc-opcode_vars
       00000002            B   909    var_y			equ var_y_loc-opcode_vars
       00000003            B   910    var_z			equ var_z_loc-opcode_vars
       00000004            B   911    var_p			equ var_p_loc-opcode_vars
       00000005            B   912    var_q			equ var_q_loc-opcode_vars
       00000006            B   913    var_calc		equ var_calc_loc-opcode_vars
       00000007            B   914    var_adl			equ var_adl_loc-opcode_vars
                           B   915    
                           B   916    ;---- Unprefixed opcodes ----------------------
                           B   917    
                           B   918    
002392 4E4FD0              B   919    x0_z0		db 'NO','P'+80h				; y0
002395 45582041 462C4146   B   920    			db 'EX AF,AF',27h+80h		; y1 
00239D A7 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  86


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
00239E 444A4E5A 206480     B   921    			db 'DJNZ ','d',80h			; y2
0023A5 4A522064 80         B   922    			db 'JR ','d',80h			; y3
0023AA 4A522023 06 2C6480   B   923    			db 'JR #',var_calc,',d',80h	; y4-y7
                           B   924    			
0023B2 4C442620 40 04      B   925    x0_z1		db 'LD& @',var_p,',!',80h	; q=0
0023B8 2C2180 
0023BB 41444426 205F2C40   B   926    			db 'ADD& _,@',var_p,80h		; q=1
0023C3 04 80 
0023C5 4C442620 7C2C2480   B   927    x0_z1_y6	db 'LD& |,$',80h
                           B   928    
0023CD 4C442620 28424329   B   929    x0_z2		db 'LD& (BC),','A'+80h		;y=0
0023D5 2CC1 
0023D7 4C442620 412C2842   B   930    			db 'LD& A,(BC',')'+80h		;y=1
0023DF 43A9 
0023E1 4C442620 28444529   B   931    			db 'LD& (DE),','A'+80h		;y=2
0023E9 2CC1 
0023EB 4C442620 412C2844   B   932    			db 'LD& A,(DE',')'+80h		;y=3
0023F3 45A9 
0023F5 4C442620 2821292C   B   933    			db 'LD& (!),','_'+80h		;y=4
0023FD DF 
0023FE 4C442620 5F2C2821   B   934    			db 'LD& _,(!',')'+80h		;y=5
002406 A9 
002407 4C442620 2821292C   B   935    			db 'LD& (!),','A'+80h		;y=6
00240F C1 
002410 4C442620 412C2821   B   936    			db 'LD& A,(!',')'+80h		;y=7
002418 A9 
                           B   937    
002419 494E4326 2040 04    B   938    x0_z3		db 'INC& @',var_p,80h		;q=0
002420 80 
002421 44454326 2040 04    B   939    			db 'DEC& @',var_p,80h		;q=1
002428 80 
                           B   940    			
002429 494E4326 207E 02    B   941    x0_z4		db 'INC& ~',var_y,80h		
002430 80 
                           B   942    
002431 44454326 207E 02    B   943    x0_z5		db 'DEC& ~',var_y,80h		
002438 80 
                           B   944    			
002439 4C442620 7E 02      B   945    x0_z6		db 'LD& ~',var_y,',^',80h	
00243F 2C5E80 
002442 4C442620 242C7C80   B   946    alt_x0_z6	db 'LD& $,|',80h			; when 
                           B   947    		
00244A 524C43C1            B   948    x0_z7		db 'RLC','A'+80h		;y=0
00244E 525243C1            B   949    			db 'RRC','A'+80h		;y=1
002452 524CC1              B   950    			db 'RL','A'+80h			;y=2
002455 5252C1              B   951    			db 'RR','A'+80h			;y=3
002458 4441C1              B   952    			db 'DA','A'+80h			;y=4
00245B 4350CC              B   953    			db 'CP','L'+80h			;y=5
00245E 5343C6              B   954    			db 'SC','F'+80h			;y=6 (and n
002461 4343C6              B   955    			db 'CC','F'+80h			;y=7 (and n
                           B   956    			
002464 4C442620 7B 04      B   957    alt_x0_z7	db 'LD& {',var_p,',$',80h	;q=0 (D
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  87


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
00246A 2C2480 
00246D 4C442620 242C7B 04   B   958    			db 'LD& $,{',var_p,80h		;q=1 (D
002475 80 
                           B   959    		
                           B   960    
                           B   961    
002476 4C442620 7E 02      B   962    x1_table	db 'LD& ~',var_y,',~',var_z,80h	
00247C 2C7E 03 80 
002480 4C442620 7E 02      B   963    x1_y6	 	db 'LD& ~',var_y,',=',var_z,80h		002486 2C3D 03 80 
00248A 4C442620 3D 02      B   964    x1_z6		db 'LD& =',var_y,',~',var_z,80h		002490 2C7E 03 80 
                           B   965    
002494 48414CD4            B   966    x1_y6_z6	db 'HAL','T'+80h
                           B   967    
                           B   968    
                           B   969    
002498 3A 02 7E 03 80      B   970    x2_table	db ':',var_y,'~',var_z,80h			                           B   971    			
                           B   972    		
                           B   973    		
00249D 52455426 2023 02    B   974    x3_z0		db 'RET& #',var_y,80h
0024A4 80 
                           B   975    
0024A5 504F5026 202A 04    B   976    x3_z1_q0	db 'POP& *',var_p,80h			
0024AC 80 
0024AD 52455426 80         B   977    x3_z1_q1	db 'RET','&',80h		;p=0
0024B2 4558D8              B   978    			db 'EX','X'+80h			;p=1
0024B5 4A502620 5F80       B   979    			db 'JP& _',80h			;p=2
0024BB 4C442620 53502C5F   B   980    			db 'LD& SP,_',80h		;p=3
0024C3 80 
                           B   981    
0024C4 4A502620 23 02      B   982    x3_z2		db 'JP& #',var_y,',!',80h		
0024CA 2C2180 
                           B   983    
0024CD 4A502620 2180       B   984    x3_z3		db 'JP& !',80h			;y = 0
0024D3 43422070 667880     B   985    			db 'CB pfx',80h			;y = 1
0024DA 4F555420 285E292C   B   986    			db 'OUT (^),','A'+80h	;y = 2
0024E2 C1 
0024E3 494E2041 2C285EA9   B   987    			db 'IN A,(^',')'+80h	;y = 3
0024EB 45582620 28535029   B   988    			db 'EX& (SP),','_',80h	;y = 4
0024F3 2C5F80 
0024F6 45582044 452C48CC   B   989    			db 'EX DE,H','L'+80h	;y = 5
0024FE 44C9                B   990    			db 'D','I'+80h			;y = 6
002500 45C9                B   991    			db 'E','I'+80h			;y = 7
                           B   992    
002502 43414C4C 262023 02   B   993    x3_z4		db 'CALL& #',var_y,',!',80h
00250A 2C2180 
                           B   994    
00250D 50555348 26202A 04   B   995    x3_z5_q0	db 'PUSH& *',var_p,80h			
002515 80 
002516 43414C4C 26202180   B   996    x3_z5_q1	db 'CALL& !',80h			;p=0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  88


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
00251E 44442070 667880     B   997    			db 'DD pfx',80h			;p=1
002525 45442070 667880     B   998    			db 'ED pfx',80h			;p=2
00252C 20464420 70667880   B   999    			db' FD pfx',80h			;p=3
                           B  1000    
002534 3A 02 5E80          B  1001    x3_z6		db ':',var_y,'^',80h	;ALU_table(
                           B  1002    
002538 52535426 203B 02    B  1003    x3_z7		db 'RST& ;',var_y,80h		; rst_t
00253F 80 
                           B  1004    
                           B  1005    
                           B  1006    ;--- CB - Prefixed op-codes--------------------
                           B  1007    
                           B  1008    
002540 25 02 207E 03 80    B  1009    cb_group		db '%',var_y,' ~',var_z,80h		002546 42495426 203E 02    B  1010    				db 'BIT& >',var_y,',~',var_z,80
00254D 2C7E 03 80 
002551 52455326 203E 02    B  1011    				db 'RES& >',var_y,',~',var_z,80
002558 2C7E 03 80 
00255C 53455426 203E 02    B  1012    				db 'SET& >',var_y,',~',var_z,80
002563 2C7E 03 80 
                           B  1013    
                           B  1014    
                           B  1015    ;---- ED - Prefixed op-codes-------------------
                           B  1016    
002567 494E3020 7E 02      B  1017    ed_x0_z0_yn6	db 'IN0 ~',var_y,',(^',')'+80h
00256D 2C285EA9 
002571 494E3020 285EA9     B  1018    ed_x0_z0_y6		db 'IN0 (^',')'+80h	
                           B  1019    
002578 4F555430 20285E29   B  1020    ed_x0_z1		db 'OUT0 (^),~',var_y,80h		002580 2C7E 02 80 
002584 4C442620 49592C28   B  1021    				db 'LD& IY,(_',')'+80h			00258C 5FA9 
                           B  1022    
00258E 4C454126 203C 04    B  1023    ed_x0_z2		db 'LEA& <',var_p,',IX/',80h	002595 2C49582F 80 
00259A 4C454126 207D 04    B  1024    ed_x0_z3		db 'LEA& }',var_p,',IY/',80h
0025A1 2C49592F 80 
0025A6 54535426 20412C7E   B  1025    ed_x0_z4		db 'TST& A,~',var_y,80h
0025AE 02 80 
                           B  1026    
0025B0 4C442620 285F292C   B  1027    ed_x0_z6		db 'LD& (_),}',var_p,80h
0025B8 7D 04 80 
                           B  1028    
0025BB 4C442620 3C 04      B  1029    ed_x0_z7		db 'LD& <',var_p,',(_',')'+80h	0025C1 2C285FA9 
0025C5 4C442620 285F292C   B  1030    				db 'LD& (_),<',var_p,80h		0025CD 3C 04 80 
                           B  1031    
0025D0 494E207E 02         B  1032    ed_x1_z0_yn6	db 'IN ~',var_y,',(BC',')'+80h
0025D5 2C284243 A9 
0025DA 494E2028 43A9       B  1033    ed_x1_z0_y6		db 'IN (C',')'+80h
                           B  1034    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  89


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0025E0 4F555420 28424329   B  1035    ed_x1_z1_yn6	db 'OUT (BC),~',var_y,80h
0025E8 2C7E 02 80 
0025EC 4F555420 2843292C   B  1036    ed_x1_z1_y6		db 'OUT (C),','0'+80h
0025F4 B0 
                           B  1037    
0025F5 53424326 20484C2C   B  1038    ed_x1_z2		db 'SBC& HL,@',var_p,80h		0025FD 40 04 80 
002600 41444326 20484C2C   B  1039    				db 'ADC& HL,@',var_p,80h		002608 40 04 80 
                           B  1040    
00260B 4C442620 2821292C   B  1041    ed_x1_z3		db 'LD& (!),@',var_p,80h		002613 40 04 80 
002616 4C442620 40 04      B  1042    				db 'LD& @',var_p,',(!',')'+80h	00261C 2C2821A9 
                           B  1043    
002620 4E45C7              B  1044    ed_x1_z4		db 'NE','G'+80h				;y=
002623 4D4C5420 42C3       B  1045    				db 'MLT B','C'+80h			;y=
002629 4C454126 2049582C   B  1046    				db 'LEA& IX,IY/',80h			002631 49592F80 
002635 4D4C5420 44C5       B  1047    				db 'MLT D','E'+80h			;y=
00263B 54535426 20412C5E   B  1048    				db 'TST& A,^',80h			;y=
002643 80 
002644 4D4C5420 48CC       B  1049    				db 'MLT H','L'+80h			;y=
00264A 54535449 4F205E80   B  1050    				db 'TSTIO ^',80h			;y=
002652 4D4C5420 53D0       B  1051    				db 'MLT S','P'+80h 			;y=
                           B  1052    
002658 5245544E 2680       B  1053    ed_x1_z5		db 'RETN&',80h				;y=
00265E 52455449 2680       B  1054    				db 'RETI&',80h				;y=
002664 4C454126 2049592C   B  1055    				db 'LEA& IY,IX/',80h		;y=
00266C 49582F80 
002670 BF                  B  1056    				db '?'+80h					;y=
002671 50454126 2049582F   B  1057    				db 'PEA& IX/',80h			;y=
002679 80 
00267A 4C44204D 422CC1     B  1058    				db 'LD MB,','A'+80h			;y=
002681 BF                  B  1059    				db '?'+80h					;y=
002682 53544D49 D8         B  1060    				db 'STMI','X'+80h			;y=
                           B  1061    				
                           B  1062    	
002687 494D20B0            B  1063    ed_x1_z6		db 'IM ','0'+80h			;y=
00268B BF                  B  1064    				db '?'+80h					;y=
00268C 494D20B1            B  1065    				db 'IM ','1'+80h			;y=
002690 494D20B2            B  1066    				db 'IM ','2'+80h			;y=
002694 50454126 2049592F   B  1067    				db 'PEA& IY/',80h			;y=
00269C 80 
00269D 4C442041 2C4DC2     B  1068    				db 'LD A,','M','B'+80h		;y=
0026A4 534CD0              B  1069    				db 'SL','P'+80h				;y=
0026A7 52534D49 D8         B  1070    				db 'RSMI','X'+80h			;y=
                           B  1071    
0026AC 4C442049 2CC1       B  1072    ed_x1_z7		db 'LD I,','A'+80h			;y=
0026B2 4C442052 2CC1       B  1073    				db 'LD R,','A'+80h			;y=
0026B8 4C442041 2CC9       B  1074    				db 'LD A,','I'+80h			;y=
0026BE 4C442041 2CD2       B  1075    				db 'LD A,','R'+80h			;y=
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  90


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0026C4 5252C4              B  1076    				db 'RR','D'+80h				;y=
0026C7 524CC4              B  1077    				db 'RL','D'+80h				;y=
0026CA 4E4FD0              B  1078    				db 'NO','P'+80h				;y=
0026CD 4E4FD0              B  1079    				db 'NO','P'+80h				;y=
                           B  1080    
                           B  1081    
0026D0 BFBFBFBF            B  1082    ed_x2_z0		db '?'+80h,'?'+80h,'?'+80h,'?'+
0026D4 4C444926 80         B  1083    				db 'LDI&',80h					0026D9 4C444426 80         B  1084    				db 'LDD&',80h					0026DE 4C444952 2680       B  1085    				db 'LDIR&',80h					0026E4 4C444452 2680       B  1086    				db 'LDDR&',80h					                           B  1087    
0026EA BFBFBFBF            B  1088    ed_x2_z1		db '?'+80h,'?'+80h,'?'+80h,'?'+
0026EE 43504926 80         B  1089    				db 'CPI&',80h					0026F3 43504426 80         B  1090    				db 'CPD&',80h					0026F8 43504952 2680       B  1091    				db 'CPIR&',80h					0026FE 43504452 2680       B  1092    				db 'CPDR&',80h					                           B  1093    
002704 494E494D 2680       B  1094    ed_x2_z2		db 'INIM&',80h		; y0	
00270A 494E444D 2680       B  1095    				db 'INDM&',80h		; y1
002710 494E494D 522680     B  1096    				db 'INIMR&',80h		; y2
002717 494E444D 522680     B  1097    				db 'INDMR&',80h		; y3
00271E 494E4926 80         B  1098    				db 'INI&',80h		; y4
002723 494E4426 80         B  1099    				db 'IND&',80h		; y5
002728 494E4952 2680       B  1100    				db 'INIR&',80h		; y6
00272E 494E4452 2680       B  1101    				db 'INDR&',80h		; y7
                           B  1102    
                           B  1103    
002734 4F54494D 2680       B  1104    ed_x2_z3		db 'OTIM&',80h		; y0
00273A 4F54444D 2680       B  1105    				db 'OTDM&',80h		; y1
002740 4F54494D 522680     B  1106    				db 'OTIMR&',80h		; y2
002747 4F54444D 522680     B  1107    				db 'OTDMR&',80h		; y3
00274E 4F555449 2680       B  1108    				db 'OUTI&',80h		; y4
002754 4F555444 2680       B  1109    				db 'OUTD&',80h		; y5
00275A 4F544952 2680       B  1110    				db 'OTIR&',80h		; y6
002760 4F544452 2680       B  1111    				db 'OTDR&',80h		; y7
                           B  1112    
002766 494E4932 2680       B  1113    ed_x2_z4		db 'INI2&',80h		; y0
00276C 494E4432 2680       B  1114    				db 'IND2&',80h		; y1
002772 494E4932 522680     B  1115    				db 'INI2R&',80h		; y2
002779 494E4432 522680     B  1116    				db 'IND2R&',80h		; y3
002780 4F555449 322680     B  1117    				db 'OUTI2&',80h		; y4
002787 4F555444 322680     B  1118    				db 'OUTD2&',80h		; y5
00278E 4F544932 522680     B  1119    				db 'OTI2R&',80h		; y6
002795 4F544432 522680     B  1120    				db 'OTD2R&',80h		; y7
                           B  1121    
                           B  1122    
00279C 494E4952 582680     B  1123    ed_x3_z2		db 'INIRX&',80h 	; y0
0027A3 494E4452 582680     B  1124    				db 'INDRX&',80h		; y1
                           B  1125    
0027AA 4F544952 582680     B  1126    ed_x3_z3		db 'OTIRX&',80h		; y0
0027B1 4F544452 582680     B  1127    				db 'OTDRX&',80h		; y1
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  91


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B  1128    			
                           B  1129    
                           B  1130    ;--- DDCB or FDCB - Prefixed op-codes----------
                           B  1131    
                           B  1132    
0027B8 4C442620 7E 03      B  1133    ddcb_fdcb_zn6	db 'LD& ~',var_z, ',%',var_y,' 
0027BE 2C25 02 202480 
0027C4 42495426 203E 02    B  1134    				db 'BIT& >',var_y,',$',80h		0027CB 2C2480 
0027CE 4C442620 7E 03      B  1135    				db 'LD& ~',var_z,',RES& >',var_
0027D4 2C524553 26203E 02 
0027DC 2C2480 
0027DF 4C442620 7E 03      B  1136    				db 'LD& ~',var_z,',SET& >',var_
0027E5 2C534554 26203E 02 
0027ED 2C2480 
                           B  1137    
0027F0 25 02 202480        B  1138    ddcb_fdcb_z6	db '%',var_y,' $',80h			0027F5 42495426 203E 02    B  1139    				db 'BIT& >',var_y,',$',80h		0027FC 2C2480 
0027FF 52455326 203E 02    B  1140    				db 'RES& >',var_y,',$',80h		002806 2C2480 
002809 53455426 203E 02    B  1141    				db 'SET& >',var_y,',$',80h		002810 2C2480 
                           B  1142    
                           B  1143    ;----------------------------------------------
                           B  1144    
002813 3F3FBF              B  1145    bad_opcode	db '??','?'+80h
                           B  1146    
                           B  1147    ;----------------------------------------------
                           B  1148    
                           B  1149    
002816 C2C3C4C5 68806C80   B  1150    table_r		db 'B'+80h, 'C'+80h, 'D'+80h, 'E'+8
00281E 2480C1 
                           B  1151    
002821 C2C3C4C5 48804C80   B  1152    table_r2	db 'B'+80h, 'C'+80h, 'D'+80h, 'E'+8
002829 2480C1 
                           B  1153    
00282C 42C344C5 DF53D0     B  1154    table_rp	db 'B','C'+80h, 'D','E'+80h, '_'+80
                           B  1155    
002833 42C344C5 5F8041C6   B  1156    table_rp2	db 'B','C'+80h, 'D','E'+80h, '_',+8
                           B  1157    	
00283B 4EDADA4E C3C350CF   B  1158    table_cc	db 'N','Z'+80h, 'Z'+80h, 'N','C'+80
002843 50C5D0CD 
                           B  1159    	
002847 41444426 2041AC41   B  1160    table_alu	db 'ADD& A',','+80h, 'ADC& A',','+8
00284F 44432620 41AC5355 
002857 4226A053 42432041 
00285F 26AC 
002861 414E4426 A0584F52   B  1161    			db 'AND&',' '+80h, 'XOR&',' '+80h, 
002869 26A04F52 26A04350 
002871 26A0 
                           B  1162    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  92


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002873 524C4326 80525243   B  1163    table_rot	db 'RLC&',80h, 'RRC&',80h, 'RL&',80
00287B 2680524C 26805252 
002883 2680 
002885 534C4126 80535241   B  1164    			db 'SLA&',80h, 'SRA&',80h, 'SLL&',8
00288D 2680534C 4C268053 
002895 524C2680 
                           B  1165    	
002899 42C344C5 48CC49D8   B  1166    table_rp3	db 'B','C'+80h, 'D','E'+80h, 'H','L
                           B  1167    
0028A1 42C344C5 48CC49D9   B  1168    table_rp4	db 'B','C'+80h, 'D','E'+80h, 'H','L
                           B  1169    
0028A9 42C344C5 48CC5F80   B  1170    table_rp5	db 'B','C'+80h, 'D','E'+80h, 'H','L
                           B  1171    
0028B1 30B0                B  1172    table_rst	db '0','0'+80h
0028B3 30B8                B  1173    			db '0','8'+80h
0028B5 31B0                B  1174    			db '1','0'+80h
0028B7 31B8                B  1175    			db '1','8'+80h
0028B9 32B0                B  1176    			db '2','0'+80h
0028BB 32B8                B  1177    			db '2','8'+80h	
0028BD 33B0                B  1178    			db '3','0'+80h
0028BF 33B8                B  1179    			db '3','8'+80h			
                           B  1180    
                           B  1181    ;----------------------------------------------
                           B  1182    
                           B  1183    ; "_" = HL, IX, IY depending on prefix 
                           B  1184    ; "|" = as above with IX/IY switched
                           B  1185    
                           B  1186    ; "h" = H, IXH, IYL depending on prefix
                           B  1187    ; "l" = L, IXL, IYL depending on prefix
                           B  1188    ; "$" = (HL), (IX+d), (IY+d) depending on prefi
                           B  1189    
0028C1 48CC49D8 49D9       B  1190    hl_subs		db 'H','L'+80h, 'I','X'+80h, 'I','Y
0028C7 48CC49D9 49D8       B  1191    inv_hl_subs	db 'H','L'+80h, 'I','Y'+80h, 'I','X
0028CD C84958C8 4959C8     B  1192    h_subs		db 'H'+80h, 'IX','H'+80h, 'IY','H'+
0028D4 CC4958CC 4959CC     B  1193    l_subs		db 'L'+80h, 'IX','L'+80h, 'IY','L'+
0028DB 28484CA9 2849582F   B  1194    ind_hl_subs	db '(HL',')'+80h, '(IX/',')'+80h, '
0028E3 A9284959 2FA9 
                           B  1195    
                           B  1196    ;----------------------------------------------
                           B  1197    
0028E9                     B  1198    adl_prefix_list
                           B  1199    
0028E9 2E5349D3 2E4C49D3   B  1200    			db '.SI','S'+80h, '.LI','S'+80h, '.
0028F1 2E5349CC 2E4C49CC 
                           B  1201    
                           B  1202    ;----------------------------------------------
                           B  1203    
0028F9 000000              B  1204    d_work_address	dw24 0
                           B  1205    
0028FC 2D2D00              B  1206    output_byte_txt	db "--",0
0028FF 2D00                B  1207    output_char_txt	db "-",0
                           B  1208    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  93


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002901 000001              B  1209    dis_addr		dw24 10000h
                           B  1210    
                           B  1211    ;----------------------------------------------
                           B  1212    
                           B     0    	include 'commands\del.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"del" delete file command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
                           B     5    
002904                     B     6    os_cmd_del
                           B     7    	
002904 CD 03 17 00         B     8    				call os_check_volume_format	
002908 C0                  B     9    				ret nz
                           B    10    			
002909 CD 11 29 00         B    11    				call filename_or_bust
                           B    12    				
00290D C3 6A 17 00         B    13    				jp os_erase_file			;no
                           B    14    				
                           B    15    				
                           B    16    ;----------------------------------------------
                           B    17    			
002911                     B    18    filename_or_bust
                           B    19    			
002911 7E                  B    20    				ld a,(hl)					;is
002912 B7                  B    21    				or a
002913 C0                  B    22    				ret nz
002914 E1                  B    23    				pop hl						;ot
002915 C3 73 16 00         B    24    				jp os_no_fn_error			;so
                           B    25    
                           B    26    ;----------------------------------------------
                           B     0    	include 'commands\dir.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; FAT16 'dir' - show directory command. v0.03 -
                           B     3    ;----------------------------------------------
                           B     4    
002919                     B     5    os_cmd_dir
                           B     6    
002919 CD 03 17 00         B     7    				call os_check_volume_format	
00291D C0                  B     8    				ret nz
                           B     9    				
00291E CD 32 2A 00         B    10    				call div_line
002922 CD 6F 5A 00         B    11    				call fs_get_current_dir_name	002926 D8                  B    12    				ret c
002927 C0                  B    13    				ret nz
002928 CD 15 10 00         B    14    				call os_print_string
00292C CD DA 1A 00         B    15    				call fs_get_dir_cluster			002930 7A                  B    16    				ld a,d
002931 B3                  B    17    				or e
002932 20 08               B    18    				jr nz,dcmdnr
002934 CD 5A 57 00         B    19    				call fs_get_volume_label
002938 CD 15 10 00         B    20    				call os_print_string
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  94


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\dir.asm
00293C CD BB 14 00         B    21    dcmdnr			call os_new_line
                           B    22    				
002940 CD 32 2A 00         B    23    nrootdir		call div_line
002944 CD 5F 56 00         B    24    				call fs_goto_first_dir_entry
002948 D8                  B    25    				ret c
002949 20 6F               B    26    				jr nz,os_dlr
00294B AF                  B    27    				xor a
00294C 32 3A 69 00         B    28    				ld (os_linecount),a
                           B    29    				
002950 CD 76 56 00         B    30    os_dfllp		call fs_get_dir_entry			002954 D8                  B    31    				ret c
002955 20 63               B    32    				jr nz,os_dlr					002957 C5                  B    33    				push bc
002958 CD 15 10 00         B    34    				call os_print_string			00295C CD E6 14 00         B    35    				call os_get_cursor_position		002960 060E                B    36    				ld b,14
002962 CD C6 14 00         B    37    				call os_set_cursor_position	
002966 C1                  B    38    				pop bc
002967 CB40                B    39    				bit 0,b							002969 28 06               B    40    				jr z,os_deif		
00296B 21 3F 2A 00         B    41    				ld hl,dir_txt					00296F 18 32               B    42    				jr os_dpl
                           B    43    				
002971 21 9E 5D 00         B    44    os_deif			ld hl,os_hex_prefix_txt			002975 CD 15 10 00         B    45    				call os_print_string
002979 ED530001 00         B    46    				ld (scratch_pad),de
00297E 79                  B    47    				ld a,c
00297F 32030100            B    48    				ld (scratch_pad+3),a
002983 21 A5 69 00         B    49    				ld hl,output_line
002987 E5                  B    50    				push hl
002988 ED5B0201 00         B    51    				ld de,(scratch_pad+2)
00298D CD 83 11 00         B    52    				call hexword_to_ascii
002991 ED5B0001 00         B    53    				ld de,(scratch_pad)
002996 CD 83 11 00         B    54    				call hexword_to_ascii
00299A 3600                B    55    				ld (hl),0
00299C E1                  B    56    				pop hl
00299D 0607                B    57    				ld b,7							00299F CD 3B 11 00         B    58    				call os_skip_leading_ascii_zero
0029A3 CD 15 10 00         B    59    os_dpl			call os_print_string
0029A7 CD BB 14 00         B    60    				call os_new_line
                           B    61    				
0029AB CD 03 57 00         B    62    				call fs_goto_next_dir_entry
0029AF 20 09               B    63    				jr nz,os_dlr					0029B1 CD B9 12 00         B    64    				call os_count_lines
0029B5 3E79                B    65    				ld a,'y'
0029B7 B8                  B    66    				cp b
0029B8 28 96               B    67    				jr z,os_dfllp
                           B    68    				
0029BA CD 32 2A 00         B    69    os_dlr			call div_line					0029BE CD 5D 50 00         B    70    				call fs_calc_free_space
0029C2 D8                  B    71    				ret c	
                           B    72    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  95


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\dir.asm
0029C3 CD D1 29 00         B    73    				call show_capacity				0029C7 21 4F 2A 00         B    74    				ld hl,free_txt
0029CB CD 15 10 00         B    75    				call os_print_string
0029CF AF                  B    76    				xor a
0029D0 C9                  B    77    				ret
                           B    78    				
                           B    79    ;----------------------------------------------
                           B    80    
0029D1                     B    81    show_capacity	
                           B    82    
                           B    83    ; set xDE = capacity in KB
                           B    84    ; (trashed all other registers!)
                           B    85    
0029D1 DD21 45 2A 00       B    86    				ld ix,dir_kb_txt
0029D6 AF                  B    87    				xor a
0029D7 D5                  B    88    				push de
0029D8 E1                  B    89    				pop hl
0029D9 01241000            B    90    				ld bc,1024h
0029DD ED42                B    91    				sbc hl,bc
0029DF 38 0B               B    92    				jr c,showresinkb
0029E1 060A                B    93    				ld b,10
0029E3 CD F8 29 00         B    94    				call shr_de
0029E7 DD21 4A 2A 00       B    95    				ld ix,dir_mb_txt
0029EC CD 0B 2A 00         B    96    showresinkb		call show_xde_decimal
0029F0 DDE5                B    97    				push ix
0029F2 E1                  B    98    				pop hl
0029F3 CD 15 10 00         B    99    				call os_print_string
0029F7 C9                  B   100    				ret
                           B   101    				
                           B   102    ;----------------------------------------------
                           B   103    
                           B   104    ; Set xDE = value to shift
                           B   105    ; Set B = number of places to shift right (0-23
                           B   106    	
0029F8 E5                  B   107    shr_de			push hl
0029F9 3E18                B   108    				ld a,24
0029FB 90                  B   109    				sub b
0029FC 47                  B   110    				ld b,a
0029FD 21000000            B   111    				ld hl,0
002A01 EB                  B   112    				ex de,hl
002A02 29                  B   113    divde_lp		add hl,hl
002A03 EB                  B   114    				ex de,hl
002A04 ED6A                B   115    				adc hl,hl
002A06 EB                  B   116    				ex de,hl
002A07 10 F9               B   117    				djnz divde_lp
002A09 E1                  B   118    				pop hl
002A0A C9                  B   119    				ret
                           B   120    				
                           B   121    ;----------------------------------------------
                           B   122    
002A0B                     B   123    show_xde_decimal
                           B   124    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  96


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\dir.asm
002A0B CD 4E 13 00         B   125    				call os_hex_to_decimal			002A0F 11070000            B   126    				ld de,7
002A13 19                  B   127    				add hl,de						002A14 43                  B   128    				ld b,e
002A15 11 A5 69 00         B   129    				ld de,output_line
002A19 D5                  B   130    				push de
002A1A 7E                  B   131    dec2strlp		ld a,(hl)						002A1B B7                  B   132    				or a
002A1C 20 03               B   133    				jr nz,foundlnz
002A1E 2B                  B   134    				dec hl
002A1F 10 F9               B   135    				djnz dec2strlp
002A21 04                  B   136    foundlnz		inc b
002A22 7E                  B   137    ndecchar		ld a,(hl)						002A23 C630                B   138    				add a,030h
002A25 12                  B   139    				ld (de),a
002A26 13                  B   140    				inc de
002A27 2B                  B   141    				dec hl
002A28 10 F8               B   142    				djnz ndecchar
002A2A AF                  B   143    				xor a
002A2B 12                  B   144    				ld (de),a
002A2C E1                  B   145    				pop hl							002A2D CD 15 10 00         B   146    				call os_print_string
002A31 C9                  B   147    				ret
                           B   148    
                           B   149    ;----------------------------------------------
                           B   150    			
002A32 0E2D                B   151    div_line		ld c,'-'
002A34 0613                B   152    				ld b,19
002A36 CD C2 1A 00         B   153    				call os_print_multiple_chars
002A3A CD BB 14 00         B   154    				call os_new_line
002A3E C9                  B   155    				ret
                           B   156    
                           B   157    ;----------------------------------------------
                           B   158    
002A3F 5B444952 5D00       B   159    dir_txt			db '[DIR]',0
                           B   160    
002A45 204B4220 00         B   161    dir_kb_txt		db ' KB ',0
002A4A 204D4220 00         B   162    dir_mb_txt		db ' MB ',0
002A4F 46726565 0B00       B   163    free_txt		db 'Free',11,0
                           B   164    
                           B   165    ;----------------------------------------------
                           B   166    	
                           B     0    	include 'commands\f.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"f" fill memory command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
002A55                     B     5    os_cmd_f			
                           B     6    
002A55 CD DA 1C 00         B     7    				call get_start_and_end			                           B     8    			
002A59 CD 03 1D 00         B     9    				call hexword_or_bust			Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  97


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\f.asm
002A5D CA 93 16 00         B    10    				jp z,os_no_args_error			002A61 7B                  B    11    				ld a,e
002A62 32 51 69 00         B    12    				ld (fillbyte),a
                           B    13    					
002A66 CD C8 1C 00         B    14    				call test_mem_range
002A6A DA 8F 16 00         B    15    				jp c,os_range_error				                           B    16    					
002A6E 3A 51 69 00         B    17    				ld a,(fillbyte)
002A72 77                  B    18    f_floop			ld (hl),a
002A73 EDA1                B    19    				cpi								002A75 EA 72 2A 00         B    20    				jp pe,f_floop
                           B    21    					
002A79 3E20                B    22    				ld a,020h						002A7B B7                  B    23    				or a
002A7C C9                  B    24    				ret
                           B    25    
                           B    26    ;----------------------------------------------
                           B     0    	include 'commands\format.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"format" - format disk command. V0.05 - ADL mo
                           B     3    ;
                           B     4    ; The internal format routine is limited to for
                           B     5    ; No partition data is allowed.
                           B     6    ;----------------------------------------------
                           B     7    
                           B     8    
002A7D                     B     9    os_cmd_format
                           B    10    
002A7D 7E                  B    11    				ld a,(hl)						002A7E B7                  B    12    				or a
002A7F 20 04               B    13    				jr nz,fgotargs					002A81 3E1F                B    14    				ld a,01fh						002A83 B7                  B    15    				or a
002A84 C9                  B    16    				ret
                           B    17    			
002A85 E5                  B    18    fgotargs		push hl
002A86 3E01                B    19    				ld a,1							002A88 CD A7 18 00         B    20    				call os_mount_volumes			002A8C E1                  B    21    				pop hl
                           B    22    				
002A8D 11 FE 5B 00         B    23    				ld de,fs_sought_filename
002A91 CD B8 5A 00         B    24    				call fs_clear_filename			002A95 E5                  B    25    				push hl							002A96 CD 9E 10 00         B    26    				call os_next_arg
002A9A 20 04               B    27    				jr nz,fgotlab
002A9C 21 C9 2B 00         B    28    				ld hl,default_label
002AA0 060B                B    29    fgotlab			ld b,11
002AA2 CD 01 13 00         B    30    				call os_copy_ascii_run
002AA6 E1                  B    31    				pop hl
                           B    32    				
002AA7 3A 50 67 00         B    33    				ld a,(device_count)				002AAB B7                  B    34    				or a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  98


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\format.asm
002AAC 28 25               B    35    				jr z,fno_dev
002AAE 47                  B    36    				ld b,a
002AAF 0E00                B    37    				ld c,0							002AB1 DD21 FA 67 00       B    38    				ld ix,host_device_hardware_info
002AB6 DD7E00              B    39    fdev_lp			ld a,(ix)						002AB9 CD AC 1A 00         B    40    				call locate_driver_base			002ABD D5                  B    41    				push de
002ABE FDE1                B    42    				pop iy
002AC0 ED130C              B    43    				lea de,iy+0ch					002AC3 C5                  B    44    				push bc
002AC4 0607                B    45    				ld b,7
002AC6 CD E2 12 00         B    46    				call os_compare_strings
002ACA C1                  B    47    				pop bc
002ACB 28 0A               B    48    				jr z,format_dev
002ACD ED3220              B    49    				lea ix,ix+20h					002AD0 0C                  B    50    				inc c
002AD1 10 E3               B    51    				djnz fdev_lp
                           B    52    			
002AD3 3ED0                B    53    fno_dev			ld a,0d0h						002AD5 B7                  B    54    				or a
002AD6 C9                  B    55    				ret
                           B    56    				
                           B    57    			
                           B    58    				
                           B    59    ;----- FORMAT A DEVICE (USE ENTIRE CAPACITY (TR
                           B    60    			
                           B    61    			
002AD7 C5                  B    62    format_dev		push bc
002AD8 CD BB 14 00         B    63    				call os_new_line
002ADC 21 9A 2B 00         B    64    				ld hl,form_dev_warn1
002AE0 CD F2 14 00         B    65    				call os_show_packed_text
002AE4 C1                  B    66    				pop bc
                           B    67    				
002AE5 79                  B    68    				ld a,c							002AE6 C630                B    69    				add a,030h
002AE8 32 5C 67 00         B    70    				ld (dev_txt+3),a
002AEC 21 59 67 00         B    71    				ld hl,dev_txt	
002AF0 CD 15 10 00         B    72    				call os_print_string			                           B    73    				
002AF4 79                  B    74    				ld a,c
002AF5 CD 20 1B 00         B    75    				call dev_to_driver_lookup		002AF9 E5                  B    76    				push hl
002AFA 32 4F 67 00         B    77    				ld (current_driver),a
002AFE CD 93 1A 00         B    78    				call show_dev_driver_name		002B02 DDE1                B    79    				pop ix
002B04 DD1701              B    80    				ld de,(ix+1)
002B07 DD7E04              B    81    				ld a,(ix+4)
002B0A B7                  B    82    				or a
002B0B 28 06               B    83    				jr z,less16gb
002B0D 21 D4 2B 00         B    84    				ld hl,dev16gbplus_txt
002B11 18 14               B    85    				jr form_capdone
002B13 0601                B    86    less16gb		ld b,1
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page:  99


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\format.asm
002B15 CD F8 29 00         B    87    				call shr_de						002B19 3E28                B    88    				ld a,'('
002B1B CD 57 10 00         B    89    				call os_print_char
002B1F DDE5                B    90    				push ix
002B21 CD D1 29 00         B    91    				call show_capacity				002B25 DDE1                B    92    				pop ix
002B27 ED2205              B    93    form_capdone	lea hl,ix+5		
002B2A CD 15 10 00         B    94    				call os_print_string			002B2E 3E29                B    95    				ld a,')'
002B30 CD 57 10 00         B    96    				call os_print_char
                           B    97    				
002B34 CD BB 14 00         B    98    				call os_new_line
002B38 CD BB 14 00         B    99    				call os_new_line
002B3C 21 A1 2B 00         B   100    				ld hl,form_dev_warn2
002B40 CD 91 2B 00         B   101    				call show_packed_text_and_cr
002B44 CD 79 2B 00         B   102    				call confirm_yes
002B48 20 27               B   103    				jr nz,ab_form
                           B   104    				
002B4A 21 AB 2B 00         B   105    				ld hl,formatting_txt			002B4E CD 15 10 00         B   106    				call os_print_string
                           B   107    				
002B52 CD DB 4D 00         B   108    				call fs_format_device_command
002B56 38 0F               B   109    				jr c,form_err
002B58 20 0D               B   110    				jr nz,form_err
                           B   111    			
002B5A 21 BB 2B 00         B   112    				ld hl,ok_txt					002B5E CD 15 10 00         B   113    				call os_print_string
                           B   114    				
002B62 CD 0C 33 00         B   115    f_end			call os_cmd_remount				002B66 C9                  B   116    				ret
                           B   117    			
002B67                     B   118    form_err
002B67 21 C0 2B 00         B   119    				ld hl,ferr_txt
002B6B CD 15 10 00         B   120    				call os_print_string
002B6F 18 F1               B   121    				jr f_end
                           B   122    				
                           B   123    				
                           B   124    ;----------------------------------------------
                           B   125    				
                           B   126    				
002B71 CD BB 14 00         B   127    ab_form			call os_new_line
002B75 3E24                B   128    				ld a,024h						002B77 B7                  B   129    				or a
002B78 C9                  B   130    				ret
                           B   131    				
002B79                     B   132    confirm_yes
                           B   133    			
002B79 21000100            B   134    				ld hl,scratch_pad
002B7D 1E03                B   135    				ld e,3
002B7F E5                  B   136    				push hl
002B80 CD E7 11 00         B   137    				call os_user_input
002B84 E1                  B   138    				pop hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 100


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\format.asm
002B85 C0                  B   139    				ret nz
002B86 0603                B   140    				ld b,3
002B88 11 C8 61 00         B   141    				ld de,yes_txt+1
002B8C CD E2 12 00         B   142    				call os_compare_strings
002B90 C9                  B   143    				ret
                           B   144    			
                           B   145    			
002B91                     B   146    show_packed_text_and_cr
                           B   147    			
002B91 CD F2 14 00         B   148    				call os_show_packed_text
002B95 CD BB 14 00         B   149    				call os_new_line
002B99 C9                  B   150    				ret
                           B   151    			
                           B   152    ;----------------------------------------------
                           B   153    
002B9A                     B   154    form_dev_warn1
                           B   155    
002B9A 27283640 979700     B   156    				db 027h,028h,036h,040h,097h,097
                           B   157    
002BA1                     B   158    form_dev_warn2
                           B   159    
002BA1 52467E98 9EA2A3A5   B   160    				db 052h,046h,07eh,098h,09eh,0a2
002BA9 9700 
                           B   161    
002BAB                     B   162    formatting_txt
                           B   163    
002BAB 0B0B466F 726D6174   B   164    				db 11,11,'Formatting.. ',0
002BB3 74696E67 2E2E2000 
                           B   165    
002BBB 4F4B0B0B 00         B   166    ok_txt			db 'OK',11,11,0
                           B   167    
002BC0 4552524F 52210B0B   B   168    ferr_txt		db 'ERROR!',11,11,0
002BC8 00 
                           B   169    
002BC9                     B   170    default_label	
                           B   171    
002BC9 50524F53 455F4449   B   172    				db 'PROSE_DISK',0
002BD1 534B00 
                           B   173    
002BD4 28313647 422B2000   B   174    dev16gbplus_txt	db '(16GB+ ',0
                           B   175    
                           B   176    ;----------------------------------------------
                           B   177    
       00000104            B   178    fs_drive_sel_cache		equ scratch_pad+4		                           B   179    
                           B   180    ;----------------------------------------------
                           B   181    
                           B     0    	include 'commands\h.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"H" - Hunt in memory command V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 101


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\h.asm
002BDC CD DA 1C 00         B     5    os_cmd_h		call get_start_and_end			002BE0 22 4A 69 00         B     6    				ld (find_hexstringascii),hl		                           B     7    
002BE4 CD C8 1C 00         B     8    				call test_mem_range
002BE8 DA 8F 16 00         B     9    				jp c,os_range_error				                           B    10    			
002BEC AF                  B    11    				xor a
002BED 32 89 2C 00         B    12    				ld (h_ascii_mode),a
                           B    13    				
002BF1 2A 4A 69 00         B    14    				ld hl,(find_hexstringascii)
002BF5 0600                B    15    				ld b,0
002BF7 7E                  B    16    h_lfascii		ld a,(hl)						002BF8 B7                  B    17    				or a
002BF9 28 28               B    18    				jr z,h_no_text					002BFB FE22                B    19    				cp 022h
002BFD 28 03               B    20    				jr z,h_found_quote
002BFF 23                  B    21    				inc hl
002C00 18 F5               B    22    				jr h_lfascii
002C02 23                  B    23    h_found_quote	inc hl
002C03 22 4A 69 00         B    24    				ld (find_hexstringascii),hl
002C07 7E                  B    25    h_fasc_len		ld a,(hl)
002C08 B7                  B    26    				or a
002C09 CA 93 16 00         B    27    				jp z,os_no_args_error			002C0D FE22                B    28    				cp 022h
002C0F 28 04               B    29    				jr z,h_startas
002C11 23                  B    30    				inc hl
002C12 04                  B    31    				inc b
002C13 18 F2               B    32    				jr h_fasc_len
                           B    33    
002C15 78                  B    34    h_startas		ld a,b
002C16 B7                  B    35    				or a
002C17 CA 93 16 00         B    36    				jp z,os_no_args_error			002C1B 3E01                B    37    				ld a,1
002C1D 32 89 2C 00         B    38    				ld (h_ascii_mode),a
002C21 18 16               B    39    				jr h_start_search
                           B    40    						
                           B    41    
002C23 2A 4A 69 00         B    42    h_no_text		ld hl,(find_hexstringascii)
002C27 0600                B    43    				ld b,0							002C29 CD 03 1D 00         B    44    cntfbyts		call hexword_or_bust			002C2D 28 04               B    45    				jr z,gthexstr
002C2F 04                  B    46    				inc b
002C30 23                  B    47    				inc hl
002C31 18 F6               B    48    				jr cntfbyts
002C33 78                  B    49    gthexstr		ld a,b
002C34 B7                  B    50    				or a
002C35 CA 93 16 00         B    51    				jp z,os_no_args_error	
                           B    52    
                           B    53    
002C39                     B    54    h_start_search
                           B    55    	
002C39 DD2A 3E 69 00       B    56    				ld ix,(cmdop_start_address)		Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 102


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\h.asm
002C3E DDE5                B    57    fndloop1		push ix
002C40 FDE1                B    58    				pop iy
002C42 48                  B    59    				ld c,b							002C43 2A 4A 69 00         B    60    				ld hl,(find_hexstringascii)
002C47 3A 89 2C 00         B    61    fcmloop			ld a,(h_ascii_mode)
002C4B B7                  B    62    				or a
002C4C 28 08               B    63    				jr z,h_hex
002C4E FD7E00              B    64    				ld a,(iy)
002C51 BE                  B    65    				cp (hl)
002C52 20 23               B    66    				jr nz,nofmatch
002C54 18 0A               B    67    				jr h_matched
002C56 CD 92 11 00         B    68    h_hex			call ascii_to_hexword			002C5A FD7E00              B    69    				ld a,(iy)
002C5D BB                  B    70    				cp e
002C5E 20 17               B    71    				jr nz,nofmatch
002C60 FD23                B    72    h_matched		inc iy
002C62 23                  B    73    				inc hl
002C63 0D                  B    74    				dec c
002C64 20 E1               B    75    				jr nz,fcmloop
                           B    76    			
002C66 DDE5                B    77    				push ix							002C68 D1                  B    78    				pop de							002C69 DDE5                B    79    				push ix
002C6B C5                  B    80    				push bc
002C6C CD F3 13 00         B    81    				call os_show_hex_address
002C70 CD BB 14 00         B    82    				call os_new_line
002C74 C1                  B    83    				pop bc
002C75 DDE1                B    84    				pop ix
                           B    85    				
002C77 DDE5                B    86    nofmatch		push ix
002C79 DD23                B    87    				inc ix
002C7B D1                  B    88    				pop de
002C7C 2A 41 69 00         B    89    				ld hl,(cmdop_end_address)
002C80 AF                  B    90    				xor a
002C81 ED52                B    91    				sbc hl,de
002C83 20 B9               B    92    				jr nz,fndloop1
                           B    93    							
002C85 3E20                B    94    				ld a,020h						002C87 B7                  B    95    				or a
002C88 C9                  B    96    				ret
                           B    97    			
                           B    98    ;----------------------------------------------
                           B    99    
002C89 00                  B   100    h_ascii_mode	db 0
                           B   101    
                           B   102    ;----------------------------------------------
                           B     0    	include 'commands\help.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"?" - List commands. V0.03 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
002C8A                     B     5    os_cmd_help		
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 103


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\help.asm
002C8A AF                  B     6    				xor a
002C8B 32 3A 69 00         B     7    				ld (os_linecount),a
                           B     8    				
002C8F 21 38 63 00         B     9    				ld hl,packed_help1
002C93 CD F2 14 00         B    10    show_page		call os_show_packed_text
002C97 E5                  B    11    				push hl
002C98 CD BB 14 00         B    12    				call os_new_line
002C9C E1                  B    13    				pop hl
002C9D 23                  B    14    				inc hl						;sk
002C9E 7E                  B    15    				ld a,(hl)
002C9F FEFF                B    16    				cp 0ffh						;la
002CA1 28 09               B    17    				jr z,last_help_page
                           B    18    				
002CA3 CD B9 12 00         B    19    				call os_count_lines
002CA7 78                  B    20    				ld a,b
002CA8 FE79                B    21    				cp 'y'
002CAA 28 E7               B    22    				jr z,show_page
                           B    23    
002CAC                     B    24    last_help_page
002CAC AF                  B    25    				xor a
002CAD C9                  B    26    				ret	
                           B    27    	
                           B    28    ;----------------------------------------------
                           B    29    	
                           B     0    	include 'commands\gtr.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;">" for write ascii bytes to memory command. V
                           B     3    ;----------------------------------------------
                           B     4    
002CAE                     B     5    os_cmd_gtr
                           B     6    
002CAE CD 03 1D 00         B     7    				call hexword_or_bust			002CB2 CA 7B 16 00         B     8    				jp z,os_no_start_addr
002CB6 23                  B     9    fndquot1		inc hl
002CB7 7E                  B    10    				ld a,(hl)
002CB8 B7                  B    11    				or a
002CB9 CA 93 16 00         B    12    				jp z,os_no_args_error
002CBD FE22                B    13    				cp 022h							002CBF 20 F5               B    14    				jr nz,fndquot1
002CC1 23                  B    15    				inc hl
002CC2 E5                  B    16    				push hl
002CC3 7E                  B    17    fndquot2		ld a,(hl)
002CC4 23                  B    18    				inc hl
002CC5 B7                  B    19    				or a
002CC6 28 15               B    20    				jr z,noquot2
002CC8 FE22                B    21    				cp 022h							002CCA 20 F7               B    22    				jr nz,fndquot2
002CCC E1                  B    23    				pop hl
                           B    24    					
002CCD 7E                  B    25    wmbalp			ld a,(hl)						002CCE FE22                B    26    				cp 022h
002CD0 28 09               B    27    				jr z,os_gtrdn					Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 104


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\gtr.asm
002CD2 FE7D                B    28    				cp 07dh
002CD4 28 01               B    29    				jr z,skpnasc
002CD6 12                  B    30    				ld (de),a
002CD7 13                  B    31    skpnasc			inc de
002CD8 23                  B    32    				inc hl
002CD9 18 F2               B    33    				jr wmbalp
002CDB AF                  B    34    os_gtrdn		xor a
002CDC C9                  B    35    				ret	
                           B    36    				
002CDD E1                  B    37    noquot2			pop hl							002CDE 3E12                B    38    				ld a,012h
002CE0 B7                  B    39    				or a
002CE1 C9                  B    40    				ret
                           B    41    
                           B    42    ;----------------------------------------------
                           B     0    	include 'commands\lb.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"lb" - Load binary file command. V0.05
                           B     3    ;----------------------------------------------
                           B     4    
002CE2 CD 03 17 00         B     5    os_cmd_lb		call os_check_volume_format	
002CE6 C0                  B     6    				ret nz
                           B     7    				
002CE7 CD 1C 3B 00         B     8    				call os_cache_original_vol_dir
002CEB CD F4 2C 00         B     9    				call do_lb
002CEF CD 07 3B 00         B    10    				call os_restore_original_vol_di
002CF3 C9                  B    11    				ret
                           B    12    				
002CF4 CD B3 10 00         B    13    do_lb			call os_scan_for_non_space		002CF8 20 04               B    14    				jr nz,lb_got_fn
002CFA 3E8D                B    15    missing_args	ld a,8dh
002CFC B7                  B    16    				or a
002CFD C9                  B    17    				ret
                           B    18    				
002CFE AF                  B    19    lb_got_fn		xor a
002CFF CD 9D 3A 00         B    20    				call os_parse_path_string
002D03 C0                  B    21    				ret nz
002D04 CD 9B 16 00         B    22    				call os_find_file				002D08 C0                  B    23    				ret nz
002D09 ED53 03 01 00       B    24    				ld (filesize_cache),de			002D0E 2A 8B 68 00         B    25    				ld hl,(free_sysram_base)
002D12 22 00 01 00         B    26    				ld (data_load_addr),hl			                           B    27    				
002D16 2A F7 69 00         B    28    				ld hl,(os_args_loc)
002D1A CD 9E 10 00         B    29    				call os_next_arg
002D1E CD 92 11 00         B    30    				call ascii_to_hexword			002D22 28 05               B    31    				jr z,lb_argsok
002D24 FE81                B    32    				cp 81h
002D26 28 D2               B    33    				jr z,missing_args
002D28 C9                  B    34    				ret
                           B    35    				
002D29 ED53 00 01 00       B    36    lb_argsok		ld (data_load_addr),de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 105


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\lb.asm
002D2E ED4B 00 01 00       B    37    				ld bc,(data_load_addr)			002D33 C5                  B    38    				push bc
002D34 E1                  B    39    				pop hl
002D35 ED5B 03 01 00       B    40    				ld de,(filesize_cache)
002D3A 19                  B    41    				add hl,de
002D3B EB                  B    42    				ex de,hl
002D3C CD E2 39 00         B    43    				call os_protected_ram_test
002D40 C4 34 3A 00         B    44    				call nz,os_protected_ram_query
002D44 C0                  B    45    				ret nz
                           B    46    
002D45 2A 00 01 00         B    47    				ld hl,(data_load_addr)			002D49 CD C8 16 00         B    48    				call os_read_bytes_from_file
002D4D C0                  B    49    				ret nz
                           B    50    			
002D4E                     B    51    report_bytes_loaded
                           B    52    
002D4E 21 9E 5D 00         B    53    				ld hl,os_hex_prefix_txt			002D52 CD 15 10 00         B    54    				call os_print_string			                           B    55    				
002D56 11 05 01 00         B    56    				ld de,filesize_cache+2			002D5A 21 A5 69 00         B    57    				ld hl,output_line
002D5E 0603                B    58    				ld b,3
002D60 CD 50 11 00         B    59    				call n_hexbytes_to_ascii
002D64 3600                B    60    				ld (hl),0	
002D66 0605                B    61    				ld b,5							002D68 CD 29 14 00         B    62    				call os_print_output_line_skip_
                           B    63    				
002D6C 21 E3 64 00         B    64    				ld hl,bytes_loaded_msg			002D70 CD F2 14 00         B    65    				call os_show_packed_text
                           B    66    				
002D74 21 FA 5D 00         B    67    				ld hl,to_txt					002D78 CD 15 10 00         B    68    				call os_print_string
                           B    69    
002D7C 21 9E 5D 00         B    70    				ld hl,os_hex_prefix_txt			002D80 CD 15 10 00         B    71    				call os_print_string	
                           B    72    
002D84 ED5B 00 01 00       B    73    				ld de,(data_load_addr)			002D89 CD F3 13 00         B    74    				call os_show_hex_address
                           B    75    
002D8D CD BB 14 00         B    76    				call os_new_line
002D91 AF                  B    77    				xor a
002D92 C9                  B    78    				ret
                           B    79    				
                           B    80    ;----------------------------------------------
                           B    81    
       00000100            B    82    data_load_addr	equ scratch_pad
       00000103            B    83    filesize_cache	equ scratch_pad+3
                           B    84    
                           B    85    ;----------------------------------------------
                           B     0    	include 'commands\m.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'m' - Show memory as hex bytes command. V0.02 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 106


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\m.asm
                           B     3    ;----------------------------------------------
                           B     4    
       00000010            B     5    bytes_per_line	equ 16
                           B     6    
002D93 CD 03 1D 00         B     7    os_cmd_m		call hexword_or_bust			002D97 28 05               B     8    				jr z,m_no_hex					002D99 ED53 3B 69 00       B     9    				ld (mem_mon_addr),de
                           B    10    				
002D9E 0610                B    11    m_no_hex		ld b,16							002DA0 C5                  B    12    smbllp			push bc							                           B    13    				
002DA1 21 DA 2D 00         B    14    				ld hl,colon_cmd_prefix			002DA5 CD 15 10 00         B    15    				call os_print_string
002DA9 ED5B 3B 69 00       B    16    				ld de,(mem_mon_addr)
002DAE CD F3 13 00         B    17    				call os_show_hex_address
                           B    18    
002DB2 21 A5 69 00         B    19    				ld hl,output_line
002DB6 0610                B    20    				ld b,bytes_per_line				002DB8 3620                B    21    mmbllp			ld (hl),' '
002DBA 23                  B    22    				inc hl
002DBB 1A                  B    23    				ld a,(de)	
002DBC CD 5E 11 00         B    24    				call hexbyte_to_ascii
002DC0 13                  B    25    				inc de
002DC1 10 F5               B    26    				djnz mmbllp
                           B    27    
002DC3 ED53 3B 69 00       B    28    				ld (mem_mon_addr),de
002DC8 360B                B    29    				ld (hl),11
002DCA 23                  B    30    				inc hl
002DCB 3600                B    31    				ld (hl),0
002DCD 21 A5 69 00         B    32    				ld hl,output_line
002DD1 CD 15 10 00         B    33    				call os_print_string
002DD5 C1                  B    34    				pop bc
002DD6 10 C8               B    35    				djnz smbllp
                           B    36    				
002DD8 AF                  B    37    				xor a
002DD9 C9                  B    38    				ret
                           B    39    
                           B    40    ;----------------------------------------------
                           B    41    
002DDA 3A2000              B    42    colon_cmd_prefix	db ': ',0
                           B    43    
                           B    44    ;----------------------------------------------
                           B     0    	include 'commands\md.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"md" - Make dir command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
002DDD                     B     5    os_cmd_md
                           B     6    	
002DDD CD 03 17 00         B     7    				call os_check_volume_format	
002DE1 C0                  B     8    				ret nz
                           B     9    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 107


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\md.asm
002DE2 CD 11 29 00         B    10    				call filename_or_bust
                           B    11    				
002DE6 C3 42 17 00         B    12    				jp os_make_dir			;no poi
                           B    13    				
                           B    14    
                           B    15    ;----------------------------------------------
                           B     0    	include 'commands\r.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'R' - show CPU register values saved on return
                           B     3    ;----------------------------------------------
                           B     4    
002DEA                     B     5    os_cmd_r	
002DEA DD21 A6 68 00       B     6    				ld ix,store_a1					002DEF 21 94 2E 00         B     7    				ld hl,register_txt
002DF3 CD 15 10 00         B     8    rcmdloop2		call os_print_string
002DF7 7E                  B     9    rcmdloop		ld a,(hl)
002DF8 FE01                B    10    				cp 1
002DFA 28 0B               B    11    				jr z,showbyte
002DFC FE02                B    12    				cp 2
002DFE 28 15               B    13    				jr z,showword16
002E00 FE03                B    14    				cp 3
002E02 28 2E               B    15    				jr z,showaddr
002E04 23                  B    16    				inc hl
002E05 18 F0               B    17    				jr rcmdloop
                           B    18    				
002E07 DD7E00              B    19    showbyte		ld a,(ix)
002E0A DD23                B    20    				inc ix
002E0C DDE5                B    21    				push ix
002E0E E5                  B    22    				push hl
002E0F CD 07 14 00         B    23    				call os_show_hex_byte
002E13 18 2A               B    24    				jr showreg
                           B    25    
002E15 DD7E01              B    26    showword16		ld a,(ix+1)
002E18 DDE5                B    27    				push ix
002E1A E5                  B    28    				push hl
002E1B CD 07 14 00         B    29    				call os_show_hex_byte
002E1F E1                  B    30    				pop hl
002E20 DDE1                B    31    				pop ix
002E22 DD7E00              B    32    				ld a,(ix)
002E25 DD23                B    33    				inc ix
002E27 DD23                B    34    				inc ix
002E29 DDE5                B    35    				push ix
002E2B E5                  B    36    				push hl
002E2C CD 07 14 00         B    37    				call os_show_hex_byte
002E30 18 0D               B    38    				jr showreg
                           B    39    
002E32 DD1700              B    40    showaddr		ld de,(ix)
002E35 ED3203              B    41    				lea ix,ix+3
002E38 DDE5                B    42    				push ix
002E3A E5                  B    43    				push hl
002E3B CD F3 13 00         B    44    				call os_show_hex_address
002E3F E1                  B    45    showreg			pop hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 108


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\r.asm
002E40 DDE1                B    46    				pop ix
002E42 23                  B    47    				inc hl
002E43 7E                  B    48    				ld a,(hl)
002E44 B7                  B    49    				or a
002E45 20 AC               B    50    				jr nz,rcmdloop2
                           B    51    			
002E47 CD BB 14 00         B    52    				call os_new_line				002E4B 21 F8 2E 00         B    53    				ld hl,flag_txt
002E4F CD DB 13 00         B    54    				call os_copy_to_output_line
002E53 21 A9 69 00         B    55    				ld hl,output_line+4
002E57 01050000            B    56    				ld bc,5
002E5B 3A C9 68 00         B    57    				ld a,(store_f)
002E5F CB77                B    58    				bit 6,a							002E61 28 02               B    59    				jr z,zfzero
002E63 3631                B    60    				ld (hl),'1'
002E65 09                  B    61    zfzero			add hl,bc
002E66 CB47                B    62    				bit 0,a							002E68 28 02               B    63    				jr z,cfzero
002E6A 3631                B    64    				ld (hl),'1'
002E6C 09                  B    65    cfzero			add hl,bc
002E6D CB7F                B    66    				bit 7,a							002E6F 28 02               B    67    				jr z,sfzero
002E71 364D                B    68    				ld (hl),'M'
002E73 09                  B    69    sfzero			add hl,bc
002E74 CB57                B    70    				bit 2,a							002E76 28 02               B    71    				jr z,pfzero
002E78 364F                B    72    				ld (hl),'O'
002E7A 09                  B    73    pfzero			add hl,bc
002E7B 23                  B    74    				inc hl
002E7C CB67                B    75    				bit 4,a							002E7E 28 02               B    76    				jr z,iffzero
002E80 3631                B    77    				ld (hl),'1'
002E82                     B    78    iffzero			
002E82 01060000            B    79    				ld bc,6
002E86 09                  B    80    				add hl,bc
002E87 3A CA 68 00         B    81    				ld a,(store_adl)
002E8B C630                B    82    				add a,30h
002E8D 77                  B    83    				ld (hl),a
002E8E CD 1E 14 00         B    84    				call os_print_output_line
002E92 AF                  B    85    				xor a
002E93 C9                  B    86    				ret
                           B    87    
                           B    88    ;----------------------------------------------
                           B    89    	
                           B    90    
002E94 20413D00 01         B    91    register_txt		db ' A=',0,1
002E99 20204243 3D0003     B    92    					db '  BC=',0,3
002EA0 20204445 3D0003     B    93    					db '  DE=',0,3
002EA7 2020484C 3D0003     B    94    					db '  HL=',0,3
                           B    95    					
002EAE 0B                  B    96    					db 11
                           B    97    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 109


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\r.asm
002EAF 27413D00 01         B    98    					db 027h,'A=',0,1
002EB4 20274243 3D0003     B    99    					db ' ',027h,'BC=',0,3
002EBB 20274445 3D0003     B   100    					db ' ',027h,'DE=',0,3
002EC2 2027484C 3D0003     B   101    					db ' ',027h,'HL=',0,3
                           B   102    					
002EC9 0B                  B   103    					db 11
                           B   104    
002ECA 2049583D 0003       B   105    					db ' IX=',0,3
002ED0 2049593D 0003       B   106    					db ' IY=',0,3
                           B   107    					
002ED6 0B                  B   108    					db 11
                           B   109    					
002ED7 2050433D 0003       B   110    					db ' PC=',0,3
002EDD 204C5350 3D0003     B   111    					db ' LSP=',0,3
002EE4 20535350 3D0002     B   112    					db ' SSP=',0,2
                           B   113    					
002EEB 0B                  B   114    					db 11
                           B   115    					
002EEC 204D4241 53453D00   B   116    					db ' MBASE=',0,1,0,0
002EF4 010000 
                           B   117    					
002EF7 0B                  B   118    					db 11
                           B   119    
002EF8 205A463D 30204346   B   120    flag_txt			db ' ZF=0 CF=0 SF=P PV=E IF
002F00 3D302053 463D5020 
002F08 50563D45 20494646 
002F10 3D302041 444C3D30 
002F18 0B0B00 
                           B   121    		
                           B   122    ;----------------------------------------------
                           B     0    	include 'commands\rd.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"RD" - Remove directory command. V0.02 - ADL m
                           B     3    ;----------------------------------------------
                           B     4    
002F1B                     B     5    os_cmd_rd
                           B     6    
002F1B CD 03 17 00         B     7    				call os_check_volume_format	
002F1F C0                  B     8    				ret nz
                           B     9    				
002F20 CD 11 29 00         B    10    				call filename_or_bust
                           B    11    			
002F24 C3 AC 17 00         B    12    				jp os_delete_dir		;no poi
                           B    13    
                           B    14    
                           B    15    ;----------------------------------------------
                           B     0    	include 'commands\rn.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"rn" - Rename command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
002F28                     B     5    os_cmd_rn
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 110


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rn.asm
                           B     6    	
002F28 CD 03 17 00         B     7    				call os_check_volume_format	
002F2C C0                  B     8    				ret nz
                           B     9    			
002F2D CD 11 29 00         B    10    				call filename_or_bust
002F31 E5                  B    11    				push hl
002F32 D1                  B    12    				pop de
002F33 CD 9E 10 00         B    13    				call os_next_arg
002F37 7E                  B    14    				ld a,(hl)						002F38 B7                  B    15    				or a
002F39 20 04               B    16    				jr nz,rn_grfn
002F3B 3E1F                B    17    				ld a,01fh						002F3D B7                  B    18    				or a
002F3E C9                  B    19    				ret
                           B    20    
002F3F EB                  B    21    rn_grfn			ex de,hl
002F40 C3 96 17 00         B    22    				jp os_rename_file				                           B    23    		
                           B    24    ;----------------------------------------------
                           B     0    	include 'commands\sb.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'SB' - Save binary file command. V0.03
                           B     3    ;----------------------------------------------
                           B     4    
002F44                     B     5    os_cmd_sb
                           B     6    	
002F44 CD 03 17 00         B     7    				call os_check_volume_format		002F48 C0                  B     8    				ret nz
                           B     9    				
002F49 CD 1C 3B 00         B    10    				call os_cache_original_vol_dir
002F4D CD 56 2F 00         B    11    				call do_sb
002F51 CD 07 3B 00         B    12    				call os_restore_original_vol_di
002F55 C9                  B    13    				ret
                           B    14    				
002F56 CD B3 10 00         B    15    do_sb			call os_scan_for_non_space		002F5A CA FA 2C 00         B    16    				jp z,missing_args
002F5E 22 06 01 00         B    17    				ld (sb_save_name_addr),hl	
                           B    18    
002F62 CD 9E 10 00         B    19    				call os_next_arg
002F66 CD 92 11 00         B    20    				call ascii_to_hexword			002F6A C2 7B 16 00         B    21    				jp nz,os_no_start_addr			002F6E ED53 00 01 00       B    22    				ld (sb_save_addr),de
                           B    23    				
002F73 CD 9E 10 00         B    24    				call os_next_arg
002F77 CD 92 11 00         B    25    				call ascii_to_hexword			002F7B C2 7F 16 00         B    26    				jp nz,os_no_filesize
002F7F ED53 03 01 00       B    27    				ld (sb_save_length),de
                           B    28    				
002F84 2A 06 01 00         B    29    				ld hl,(sb_save_name_addr)		002F88 AF                  B    30    				xor a
002F89 CD 9D 3A 00         B    31    				call os_parse_path_string
002F8D 22 06 01 00         B    32    				ld (sb_save_name_addr),hl		Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 111


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\sb.asm
002F91 C0                  B    33    				ret nz
                           B    34    
002F92 CD 9B 16 00         B    35    				call os_find_file				002F96 28 06               B    36    				jr z,sb_file_exists
002F98 FEC6                B    37    				cp 0c6h							002F9A 20 17               B    38    				jr nz,sb_makefile
002F9C B7                  B    39    				or a
002F9D C9                  B    40    				ret
                           B    41    
002F9E 21 FF 62 00         B    42    sb_file_exists	ld hl,save_append_msg			002FA2 CD F2 14 00         B    43    				call os_show_packed_text
002FA6 CD F8 4A 00         B    44    				call os_wait_key_press
002FAA 3E79                B    45    				ld a,'y'
002FAC B8                  B    46    				cp b
002FAD 28 0D               B    47    				jr z,os_sfapp
002FAF 3E2C                B    48    				ld a,2ch						002FB1 B7                  B    49    				or a
002FB2 C9                  B    50    				ret
                           B    51    
002FB3 2A 06 01 00         B    52    sb_makefile		ld hl,(sb_save_name_addr)		002FB7 CD D7 16 00         B    53    				call os_create_file
002FBB C0                  B    54    				ret nz
                           B    55    						
002FBC 2A 06 01 00         B    56    os_sfapp		ld hl,(sb_save_name_addr)		002FC0 ED5B 00 01 00       B    57    				ld de,(sb_save_addr)			002FC5 ED4B 03 01 00       B    58    				ld bc,(sb_save_length)			002FCA CD EC 16 00         B    59    				call os_write_bytes_to_file
002FCE C0                  B    60    				ret nz	
                           B    61    				
002FCF 3E20                B    62    				ld a,020h						002FD1 B7                  B    63    				or a
002FD2 C9                  B    64    				ret
                           B    65    			
                           B    66    				
                           B    67    ;----------------------------------------------
                           B    68    
       00000100            B    69    sb_save_addr		equ scratch_pad
       00000103            B    70    sb_save_length		equ scratch_pad+3
       00000106            B    71    sb_save_name_addr	equ scratch_pad+6
                           B    72    
                           B    73    ;----------------------------------------------
                           B     0    	include 'commands\rx.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"RX" - Receive binary file via serial port com
                           B     3    ;----------------------------------------------
                           B     4    
       00000040            B     5    buffer_blocks			 equ 64					                           B     6    
       00000100            B     7    rx_buffer_loc			 equ scratch_pad
       00000103            B     8    rx_buffer_ptr			 equ scratch_pad+3
       00000106            B     9    serial_file_length_cache equ scratch_pad+6
                           B    10    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 112


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
                           B    11    
002FD3 7E                  B    12    os_cmd_rx		ld a,(hl)						002FD4 B7                  B    13    				or a
002FD5 CA 73 16 00         B    14    				jp z,os_no_fn_error
                           B    15    				
002FD9 3E3E                B    16    				ld a,'>'						002FDB BE                  B    17    				cp (hl)
002FDC C2 C3 30 00         B    18    				jp nz,rx_nrs
002FE0 23                  B    19    				inc hl
002FE1 3E20                B    20    				ld a,' '
002FE3 BE                  B    21    				cp (hl)
002FE4 2B                  B    22    				dec hl
002FE5 C2 C3 30 00         B    23    				jp nz,rx_nrs
                           B    24    				
002FE9 CD 03 17 00         B    25    				call os_check_volume_format		002FED C0                  B    26    				ret nz		
                           B    27    				
002FEE 01004000            B    28    				ld bc,buffer_blocks*256			002FF2 1E00                B    29    				ld e,0
002FF4 CD 8C 39 00         B    30    				call os_allocate_ram
002FF8 C0                  B    31    				ret nz
002FF9 22000100            B    32    				ld (rx_buffer_loc),hl
                           B    33    				
002FFD 112A0000            B    34    				ld de,02ah						003001 ED53 0B 67 00       B    35    				ld (serial_filename),de			003006 CD F5 31 00         B    36    				call rx_get_header
00300A C2 93 30 00         B    37    				jr nz,rxwtd_fail
00300E CD CB 4C 00         B    38    				call s_holdack					                           B    39    				
003012 21 1F 67 00         B    40    				ld hl,serial_fileheader			003016 CD D7 16 00         B    41    				call os_create_file
00301A C2 93 30 00         B    42    				jp nz,rxwtd_fail				                           B    43    				
00301E 21 1F 63 00         B    44    				ld hl,ser_recsave_msg
003022 CD F2 14 00         B    45    				call os_show_packed_text
                           B    46    				
003026 2A 2F 67 00         B    47    rx_rnblk		ld hl,(serial_fileheader+16)	00302A 22060100            B    48    				ld (serial_file_length_cache),h
00302E 2A000100            B    49    				ld hl,(rx_buffer_loc)
003032 22030100            B    50    				ld (rx_buffer_ptr),hl
                           B    51    				
003036 0640                B    52    				ld b,buffer_blocks				                           B    53    				
003038 CD B3 4C 00         B    54    rx_lnb			call s_goodack
00303C CD 5D 4C 00         B    55    				call s_getblock
003040 28 0F               B    56    				jr z,rxtd_blok
003042 F5                  B    57    				push af							003043 CD C4 4C 00         B    58    				call s_badack					003047 21 1F 67 00         B    59    				ld hl,serial_fileheader			00304B CD 6A 17 00         B    60    				call os_erase_file
00304F 18 47               B    61    				jr rx_dealloc
                           B    62    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 113


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
003051 CD CB 4C 00         B    63    rxtd_blok		call s_holdack					                           B    64    				
003055 21000700            B    65    				ld hl,serial_buffer				003059 ED5B0301 00         B    66    				ld de,(rx_buffer_ptr)
00305E C5                  B    67    				push bc
00305F 01000100            B    68    				ld bc,256
003063 EDB0                B    69    				ldir
003065 C1                  B    70    				pop bc
003066 ED530301 00         B    71    				ld (rx_buffer_ptr),de
                           B    72    				
00306B 2A 2F 67 00         B    73    				ld hl,(serial_fileheader+16)	00306F 11000100            B    74    				ld de,256
003073 AF                  B    75    				xor a
003074 ED52                B    76    				sbc hl,de
003076 22 2F 67 00         B    77    				ld (serial_fileheader+16),hl
00307A 28 28               B    78    				jr z,rx_lbr						00307C 38 26               B    79    				jr c,rx_lbr						00307E 10 B8               B    80    				djnz rx_lnb						                           B    81    
003080 01004000            B    82    				ld bc,buffer_blocks*256			003084 ED5B0001 00         B    83    				ld de,(rx_buffer_loc)
003089 21 1F 67 00         B    84    				ld hl,serial_fileheader
00308D CD EC 16 00         B    85    				call os_write_bytes_to_file
003091 28 93               B    86    				jr z,rx_rnblk					003093 F5                  B    87    rxwtd_fail		push af
003094 CD C4 4C 00         B    88    				call s_badack
003098 01004000            B    89    rx_dealloc		ld bc,buffer_blocks*256
00309C 1E00                B    90    				ld e,0
00309E CD B7 39 00         B    91    				call os_deallocate_ram
0030A2 F1                  B    92    				pop af
0030A3 C9                  B    93    				ret
                           B    94    				
0030A4 CD B3 4C 00         B    95    rx_lbr			call s_goodack					0030A8 ED4B0601 00         B    96    				ld bc,(serial_file_length_cache
0030AD ED5B0001 00         B    97    				ld de,(rx_buffer_loc)
0030B2 21 1F 67 00         B    98    				ld hl,serial_fileheader
0030B6 CD EC 16 00         B    99    				call os_write_bytes_to_file
0030BA 28 03               B   100    				jr z,rxtd_done
0030BC F5                  B   101    				push af
0030BD 18 D9               B   102    				jr rx_dealloc
                           B   103    				
0030BF 3E20                B   104    rxtd_done		ld a,020h						0030C1 B7                  B   105    				or a
0030C2 C9                  B   106    				ret
                           B   107    
                           B   108    				
                           B   109    
                           B   110    				
0030C3 3E21                B   111    rx_nrs			ld a,'!'						0030C5 BE                  B   112    				cp (hl)							0030C6 C2 96 31 00         B   113    				jr nz,notrxe
0030CA 23                  B   114    				inc hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 114


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
0030CB 3E20                B   115    				ld a,' '
0030CD BE                  B   116    				cp (hl)
0030CE 2B                  B   117    				dec hl
0030CF C2 96 31 00         B   118    				jr nz,notrxe
0030D3 112A0000            B   119    				ld de,02ah						0030D7 ED53 0B 67 00       B   120    				ld (serial_filename),de			0030DC CD F5 31 00         B   121    				call rx_get_header
0030E0 C0                  B   122    				ret nz
0030E1 21 15 63 00         B   123    				ld hl,ser_rec2_msg
0030E5 CD F2 14 00         B   124    				call os_show_packed_text
0030E9 CD B3 4C 00         B   125    				call s_goodack
0030ED 3E01                B   126    				ld a,1							0030EF 32 1E 67 00         B   127    				ld (serial_timeout),a
0030F3 CD 5D 4C 00         B   128    				call s_getblock					0030F7 28 07               B   129    				jr z,rxe_fblok
0030F9 F5                  B   130    rxe_badblock	push af							0030FA CD C4 4C 00         B   131    				call s_badack					0030FE F1                  B   132    				pop af
0030FF C9                  B   133    				ret
                           B   134    	
003100 ED4B0507 00         B   135    rxe_fblok		ld bc,(serial_buffer+5)			003105 C5                  B   136    				push bc
003106 E1                  B   137    				pop hl
003107 ED5B 2F 67 00       B   138    				ld de,(serial_fileheader+16)
00310C 19                  B   139    				add hl,de
00310D EB                  B   140    				ex de,hl
00310E CD E2 39 00         B   141    				call os_protected_ram_test		003112 28 11               B   142    				jr z,rxe_norampro
003114 CD CB 4C 00         B   143    				call s_holdack					003118 CD 34 3A 00         B   144    				call os_protected_ram_query
00311C 28 07               B   145    				jr z,rxe_norampro
00311E F5                  B   146    				push af
00311F CD C4 4C 00         B   147    				call s_badack
003123 F1                  B   148    				pop af
003124 C9                  B   149    				ret
                           B   150    	
003125 2A020700            B   151    rxe_norampro	ld hl,(serial_buffer+2)
003129 1150524F            B   152    				ld de,04f5250h					00312D AF                  B   153    				xor a
00312E 28 04               B   154    				jr z,rxe_ok
003130 3E1A                B   155    				ld a,1ah						003132 B7                  B   156    				or a
003133 C9                  B   157    				ret
003134 2A050700            B   158    rxe_ok			ld hl,(serial_buffer+5)			003138 22 02 67 00         B   159    				ld (serial_ez80_address),hl
00313C 01000100            B   160    				ld bc,256						003140 DD21 1F 67 00       B   161    				ld ix,serial_fileheader
003145 AF                  B   162    				xor a
003146 DDB612              B   163    				or (ix+18)						003149 20 0A               B   164    				jr nz,mtones
00314B DDB611              B   165    				or a,(ix+17)					00314E 20 05               B   166    				jr nz,mtones
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 115


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
003150 0600                B   167    				ld b,0
003152 DD4E10              B   168    				ld c,(ix+16)					003155 21000700            B   169    mtones			ld hl,serial_buffer				003159 ED5B 02 67 00       B   170    				ld de,(serial_ez80_address)		00315E EDB0                B   171    				ldir
                           B   172    				
003160 D5                  B   173    				push de
003161 CD B3 4C 00         B   174    				call s_goodack		
003165 DDE1                B   175    				pop ix							003167 2A 2F 67 00         B   176    				ld hl,(serial_fileheader+16)	00316B 11000100            B   177    				ld de,256
00316F AF                  B   178    				xor a
003170 ED52                B   179    				sbc hl,de						003172 28 18               B   180    				jr z,rxe_done
003174 38 16               B   181    				jr c,rxe_done
003176 EB                  B   182    				ex de,hl
003177 ED53 2F 67 00       B   183    				ld (serial_fileheader+16),de	00317C DD2A 02 67 00       B   184    				ld ix,(serial_ez80_address)
003181 01000100            B   185    				ld bc,256
003185 DD09                B   186    				add ix,bc
003187 CD 1B 4C 00         B   187    				call s_gbloop					00318B C0                  B   188    				ret nz
00318C E1                  B   189    rxe_done		pop hl							00318D CD CF 43 00         B   190    				call enable_button_nmi			003191 2A 02 67 00         B   191    				ld hl,(serial_ez80_address)
003195 E9                  B   192    				jp (hl)							                           B   193    				
                           B   194    				
                           B   195    
003196 CD 3C 32 00         B   196    notrxe			call clear_serial_filename
                           B   197    				
00319A 0610                B   198    				ld b,16							00319C 11 0B 67 00         B   199    				ld de,serial_filename
0031A0 CD 01 13 00         B   200    				call os_copy_ascii_run			0031A4 79                  B   201    				ld a,c
0031A5 32 1D 67 00         B   202    				ld (serial_fn_length),a
0031A9 CD AA 10 00         B   203    				call os_scan_for_space
                           B   204    				
0031AD CD 03 1D 00         B   205    				call hexword_or_bust			0031B1 CA 7B 16 00         B   206    				jp z,os_no_start_addr			0031B5 ED530001 00         B   207    				ld (data_load_addr),de			0031BA CD F5 31 00         B   208    				call rx_get_header
0031BE C0                  B   209    				ret nz
                           B   210    
0031BF ED4B0001 00         B   211    				ld bc,(data_load_addr)			0031C4 C5                  B   212    				push bc
0031C5 E1                  B   213    				pop hl
0031C6 ED5B 2F 67 00       B   214    				ld de,(serial_fileheader+16)
0031CB 19                  B   215    				add hl,de
0031CC EB                  B   216    				ex de,hl
0031CD CD E2 39 00         B   217    				call os_protected_ram_test
0031D1 C4 34 3A 00         B   218    				call nz,os_protected_ram_query
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 116


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
0031D5 C0                  B   219    				ret nz
                           B   220    				
0031D6 21 15 63 00         B   221    				ld hl,ser_rec2_msg
0031DA CD F2 14 00         B   222    				call os_show_packed_text
                           B   223    	
0031DE 2A000100            B   224    				ld hl,(data_load_addr)			0031E2 CD 09 4C 00         B   225    				call serial_receive_file
0031E6 C0                  B   226    				ret nz							                           B   227    
0031E7 ED5B 2F 67 00       B   228    				ld de,(serial_fileheader+16)	0031EC ED530301 00         B   229    				ld (filesize_cache),de
0031F1 C3 4E 2D 00         B   230    				jp report_bytes_loaded			                           B   231    				
                           B   232    ;----------------------------------------------
                           B   233    
0031F5                     B   234    rx_get_header
0031F5 21 11 63 00         B   235    				ld hl,ser_rec_msg
0031F9 CD F2 14 00         B   236    				call os_show_packed_text
                           B   237    				
0031FD 3E00                B   238    				ld a,0
0031FF 32 40 67 00         B   239    				ld (anim_wait_count),a			003203 3A 40 67 00         B   240    get_hdr_loop	ld a,(anim_wait_count)
003207 3C                  B   241    				inc a
003208 47                  B   242    				ld b,a
003209 FE06                B   243    				cp 6
00320B 20 07               B   244    				jr nz,notsix
00320D 0E20                B   245    				ld c,' '
00320F 0605                B   246    				ld b,5
003211 AF                  B   247    				xor a
003212 18 02               B   248    				jr mcharset
003214 0E2E                B   249    notsix			ld c,'.'
003216 32 40 67 00         B   250    mcharset		ld (anim_wait_count),a
00321A CD C2 1A 00         B   251    				call os_print_multiple_chars
00321E CD 5E 10 00         B   252    				call home_cursor
                           B   253    				
003222 21 0B 67 00         B   254    				ld hl,serial_filename			003226 3E01                B   255    				ld a,1							003228 CD 6E 4B 00         B   256    				call serial_get_header
00322C C8                  B   257    				ret z
00322D FE83                B   258    				cp 083h							00322F C0                  B   259    				ret nz
003230 CD 53 4B 00         B   260    				call os_get_key_press
003234 FE76                B   261    				cp 076h
003236 20 CB               B   262    				jr nz,get_hdr_loop
003238 3E80                B   263    				ld a,080h						00323A B7                  B   264    notsto			or a
00323B C9                  B   265    				ret								                           B   266    							
                           B   267    
                           B   268    ;----------------------------------------------
                           B   269    
00323C                     B   270    clear_serial_filename
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 117


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
                           B   271    
00323C E5                  B   272    				push hl							00323D 21 0B 67 00         B   273    				ld hl,serial_filename
003241 01100000            B   274    				ld bc,16
003245 AF                  B   275    				xor a
003246 CD FC 15 00         B   276    				call os_bchl_memfill
00324A E1                  B   277    				pop hl
00324B C9                  B   278    				ret
                           B   279    
                           B   280    ;----------------------------------------------
                           B   281    
                           B     0    	include 'commands\tx.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'TX' - Transmit binary file via serial port co
                           B     3    ;----------------------------------------------
                           B     4    
00324C 7E                  B     5    os_cmd_tx		ld a,(hl)						00324D B7                  B     6    				or a
00324E CA 73 16 00         B     7    				jp z,os_no_fn_error
                           B     8    			
003252 E5                  B     9    				push hl							003253 21 0B 67 00         B    10    				ld hl,serial_filename
003257 01100000            B    11    				ld bc,16
00325B AF                  B    12    				xor a
00325C CD FC 15 00         B    13    				call os_bchl_memfill
003260 E1                  B    14    				pop hl
                           B    15    			
003261 0610                B    16    				ld b,16							003263 11 0B 67 00         B    17    				ld de,serial_filename
003267 CD 01 13 00         B    18    				call os_copy_ascii_run			00326B 79                  B    19    				ld a,c
00326C 32 1D 67 00         B    20    				ld (serial_fn_length),a
003270 CD AA 10 00         B    21    				call os_scan_for_space
                           B    22    							
003274 CD 03 1D 00         B    23    				call hexword_or_bust			003278 CA 7B 16 00         B    24    				jp z,os_no_start_addr			00327C ED53 02 67 00       B    25    				ld (serial_ez80_address),de
                           B    26    			
003281 CD 03 1D 00         B    27    				call hexword_or_bust			003285 CA 7F 16 00         B    28    				jp z,os_no_filesize
003289 ED53 05 67 00       B    29    				ld (serial_file_length),de
00328E 21000000            B    30    				ld hl,0
003292 3E07                B    31    				ld a,07h						003294 B7                  B    32    				or a
003295 ED5A                B    33    				adc hl,de
003297 28 1D               B    34    				jr z,s_error
                           B    35    				
003299 21 1A 63 00         B    36    				ld hl,ser_send_msg
00329D CD F2 14 00         B    37    				call os_show_packed_text
                           B    38    			
0032A1 ED5B 05 67 00       B    39    				ld de,(serial_file_length)
0032A6 21 0B 67 00         B    40    				ld hl,serial_filename			Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 118


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\tx.asm
0032AA DD2A 02 67 00       B    41    				ld ix,(serial_ez80_address)
0032AF CD D2 4C 00         B    42    				call serial_send_file
0032B3 C0                  B    43    				ret nz			
                           B    44    			
0032B4 3E20                B    45    				ld a,020h						0032B6 B7                  B    46    s_error			or a
0032B7 C9                  B    47    				ret
                           B    48    				
                           B    49    			
                           B    50    ;----------------------------------------------
                           B     0    	include 'commands\t.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'T' - Show memory as ascii text command. V0.02
                           B     3    ;----------------------------------------------
                           B     4    
0032B8 CD 03 1D 00         B     5    os_cmd_t		call hexword_or_bust			0032BC 28 05               B     6    				jr z,t_no_hex					0032BE ED53 3B 69 00       B     7    				ld (mem_mon_addr),de
                           B     8    							
0032C3 0610                B     9    t_no_hex		ld b,16
0032C5 C5                  B    10    smaalp			push bc
                           B    11    				
0032C6 21 09 33 00         B    12    				ld hl,gtr_cmd_prefix			0032CA CD 15 10 00         B    13    				call os_print_string
0032CE ED5B 3B 69 00       B    14    				ld de,(mem_mon_addr)
0032D3 CD F3 13 00         B    15    				call os_show_hex_address
                           B    16    
0032D7 21 A5 69 00         B    17    				ld hl,output_line
0032DB 3620                B    18    				ld (hl),' '
0032DD 23                  B    19    				inc hl
0032DE 3622                B    20    				ld (hl),022h
0032E0 0610                B    21    				ld b,16
0032E2 23                  B    22    mabllp			inc hl
0032E3 1A                  B    23    				ld a,(de)	
0032E4 FE20                B    24    				cp 020h
0032E6 38 04               B    25    				jr c,chchar
0032E8 FE7F                B    26    				cp 07fh
0032EA 38 02               B    27    				jr c,nchchar
0032EC 3E7C                B    28    chchar			ld a,07ch
0032EE 77                  B    29    nchchar			ld (hl),a
0032EF 13                  B    30    				inc de
0032F0 10 F0               B    31    				djnz mabllp
                           B    32    
0032F2 ED53 3B 69 00       B    33    				ld (mem_mon_addr),de
0032F7 23                  B    34    				inc hl
0032F8 3622                B    35    				ld (hl),022h
0032FA 23                  B    36    				inc hl
0032FB 360B                B    37    				ld (hl),11
0032FD 23                  B    38    				inc hl
0032FE 3600                B    39    				ld (hl),0
003300 CD 1E 14 00         B    40    				call os_print_output_line
003304 C1                  B    41    				pop bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 119


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\t.asm
003305 10 BE               B    42    				djnz smaalp
003307 AF                  B    43    				xor a
003308 C9                  B    44    				ret
                           B    45    	
                           B    46    ;----------------------------------------------
                           B    47    
003309 3E2000              B    48    gtr_cmd_prefix	db '> ',0
                           B    49    
                           B    50    ;----------------------------------------------
                           B     0    	include 'commands\mount.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; "MOUNT" = Re-mount and show drives v0.02 - AD
                           B     3    ;----------------------------------------------
                           B     4    
00330C                     B     5    os_cmd_remount
                           B     6    
00330C 3E00                B     7    				ld a,0							00330E CD A7 18 00         B     8    				call os_mount_volumes
003312 CD BB 14 00         B     9    				call os_new_line
003316 AF                  B    10    				xor a
003317 C9                  B    11    				ret
                           B    12    
                           B    13    ;----------------------------------------------
                           B    14    	
                           B     0    	include 'commands\vers.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; "Vers" = Show OS / Hardware version v0.03 - A
                           B     3    ;----------------------------------------------
                           B     4    
003318                     B     5    os_cmd_vers		
003318 E5                  B     6    				push hl
                           B     7    				
003319 21 A0 5D 00         B     8    				ld hl,os_version_txt
00331D CD 15 10 00         B     9    				call os_print_string
                           B    10    			
003321 CD 5E 47 00         B    11    				call hwsc_get_version
003325 22100100            B    12    				ld (scratch_pad+10h),hl
003329 ED531301 00         B    13    				ld (scratch_pad+13h),de
00332E D5                  B    14    				push de
00332F EB                  B    15    				ex de,hl
003330 CD 12 14 00         B    16    				call os_show_hex_word
                           B    17    				
003334 21 BB 5D 00         B    18    				ld hl,fwd_slash_txt
003338 CD 15 10 00         B    19    				call os_print_string
                           B    20    				
00333C 21 AD 5D 00         B    21    				ld hl,hw_version_txt
003340 CD 15 10 00         B    22    				call os_print_string
003344 D1                  B    23    				pop de
003345 CD 12 14 00         B    24    				call os_show_hex_word
                           B    25    				
003349 CD BB 14 00         B    26    				call os_new_line
00334D CD BB 14 00         B    27    				call os_new_line	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 120


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\vers.asm
                           B    28    				
003351 E1                  B    29    				pop hl
003352 7E                  B    30    				ld a,(hl)
003353 FE23                B    31    				cp '#'
003355 28 02               B    32    				jr z,vers_env
003357 AF                  B    33    				xor a
003358 C9                  B    34    				ret
                           B    35    				
003359 CD 82 3A 00         B    36    vers_env		call clear_output_envars
00335D DD211001 00         B    37    				ld ix,scratch_pad+10h
003362 0602                B    38    				ld b,2
003364 0E00                B    39    				ld c,0
003366 CD 4F 3A 00         B    40    				call os_output_to_envars
00336A C9                  B    41    				ret
                           B    42    				
                           B    43    	
                           B    44    ;----------------------------------------------
                           B    45    	
                           B     0    	include 'commands\ltn.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; OS "<" Command: Update mem hex bytes and re-d
                           B     3    ;
                           B     4    ; Not currently enabled in PROSE
                           B     5    ;----------------------------------------------
                           B     6    
00336B                     B     7    os_cmd_ltn
                           B     8    
00336B AF                  B     9    				xor a
00336C C9                  B    10    				ret
                           B    11    
                           B    12    
                           B    13    ;----------------------------------------------
                           B    14    	
                           B     0    	include 'commands\pen.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"Pen" - Change attribute v0.03 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
00336D                     B     5    os_cmd_pen
                           B     6    	
00336D 0612                B     7    				ld b,18							00336F DD21 C6 66 00       B     8    				ld ix,current_pen
                           B     9    				
003374 CD 03 1D 00         B    10    chpenlp			call hexword_or_bust			003378 28 0D               B    11    				jr z,pendone					00337A 23                  B    12    				inc hl
00337B DD7300              B    13    				ld (ix),e
00337E DD7201              B    14    				ld (ix+1),d
003381 DD23                B    15    				inc ix
003383 DD23                B    16    				inc ix
003385 10 ED               B    17    				djnz chpenlp	
                           B    18    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 121


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\pen.asm
003387 21 CA 66 00         B    19    pendone			ld hl,pen_palette				00338B CD DB 44 00         B    20    				call hswc_set_ui_colours
00338F AF                  B    21    				xor a
003390 C9                  B    22    				ret
                           B    23    
                           B    24    ;----------------------------------------------
                           B     0    	include 'commands\mouse.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; "Mouse" = Reset / Enable Mouse Driver v0.05 -
                           B     3    ;----------------------------------------------
                           B     4    
       00000280            B     5    window_width_pixels		equ 640
       000001E0            B     6    window_height_pixels	equ 480
                           B     7    
       00000064            B     8    default_sample_rate 	equ 100			; 100 s
       00000003            B     9    default_resolution		equ 03h			; 8 cou
       000000E6            B    10    default_scaling			equ 0e6h		; valid
                           B    11    
003391                     B    12    os_cmd_mouse
                           B    13    
                           B    14    		
003391 CD BB 41 00         B    15    				call disable_ms_irq
                           B    16    
003395 21 8A 68 00         B    17    				ld hl,devices_connected
003399 CB8E                B    18    				res 1,(hl)
                           B    19    		
00339B CD E7 48 00         B    20    				call init_mouse
00339F C0                  B    21    				ret nz
                           B    22    			
0033A0 AF                  B    23    				xor a
0033A1 32 79 6A 00         B    24    				ld (mouse_packet_index),a
0033A5 32 7A 6A 00         B    25    				ld (mouse_buttons),a
0033A9 21000000            B    26    				ld hl,0
0033AD 22 7B 6A 00         B    27    				ld (mouse_disp_x),hl
0033B1 22 7E 6A 00         B    28    				ld (mouse_disp_y),hl
                           B    29    
0033B5 21800200            B    30    				ld hl,window_width_pixels
0033B9 11E00100            B    31    				ld de,window_height_pixels
0033BD CD 3C 15 00         B    32    				call os_set_mouse_window
                           B    33    
0033C1 CD B5 41 00         B    34    				call enable_ms_irq
                           B    35    
0033C5 21 8A 68 00         B    36    				ld hl,devices_connected
0033C9 CBCE                B    37    				set 1,(hl)
0033CB AF                  B    38    				xor a
0033CC C9                  B    39    				ret				
                           B    40    				
                           B    41    ;----------------------------------------------
                           B    42    	
                           B     0    	include 'commands\vmode.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"vmode" - Change video mode - ADL mode 0.3
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 122


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\vmode.asm
                           B     3    ;----------------------------------------------
                           B     4    
0033CD                     B     5    os_cmd_vmode
                           B     6    	
0033CD CD 03 1D 00         B     7    				call hexword_or_bust			0033D1 20 04               B     8    				jr nz,vm_data					0033D3 3E81                B     9    				ld a,81h						0033D5 B7                  B    10    				or a
0033D6 C9                  B    11    				ret
                           B    12    
0033D7 7B                  B    13    vm_data			ld a,e
0033D8 CD D5 15 00         B    14    				call os_set_vmode
0033DC C9                  B    15    				ret
                           B    16    				
                           B    17    ;----------------------------------------------
                           B     0    	include 'commands\font.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"font" - replace font. V0.01 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
0033DD                     B     5    os_cmd_font
                           B     6    	
0033DD CD 03 17 00         B     7    				call os_check_volume_format	
0033E1 C0                  B     8    				ret nz
                           B     9    				
0033E2 CD 11 29 00         B    10    				call filename_or_bust			0033E6 22000100            B    11    				ld (scratch_pad),hl
                           B    12    
0033EA CD DA 1A 00         B    13    				call fs_get_dir_cluster			0033EE ED530301 00         B    14    				ld (scratch_pad+3),de
                           B    15    				
0033F3 CD 60 17 00         B    16    				call os_root_dir				0033F7 C0                  B    17    				ret nz
0033F8 21 66 34 00         B    18    				ld hl,fonts_fn
0033FC CD 50 17 00         B    19    				call os_change_dir
003400 20 1E               B    20    				jr nz,no_font
                           B    21    				
003402 2A000100            B    22    				ld hl,(scratch_pad)
003406 CD 9B 16 00         B    23    				call os_find_file				00340A 20 14               B    24    				jr nz,no_font
                           B    25    				
00340C 11000800            B    26    				ld de,800h
003410 CD AA 16 00         B    27    				call os_set_load_length			                           B    28    
003414 21000080            B    29    				ld hl,vram_a_addr				003418 CD C8 16 00         B    30    				call os_read_bytes_from_file
00341C CD 2C 34 00         B    31    				call convert_font
                           B    32    				
003420 F5                  B    33    no_font			push af
003421 ED5B0301 00         B    34    				ld de,(scratch_pad+3)			003426 CD E6 1A 00         B    35    				call fs_update_dir_cluster
00342A F1                  B    36    				pop af
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 123


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\font.asm
00342B C9                  B    37    				ret
                           B    38    				
                           B    39    
                           B    40    ;----------------------------------------------
                           B    41    				
00342C 1EFF                B    42    convert_font	ld e,255						00342E 01080000            B    43    				ld bc,8
003432 21F80780            B    44    				ld hl,vram_a_addr+07f8h	
003436 CD 41 34 00         B    45    conv_allch		call char_to_font
00343A AF                  B    46    				xor a
00343B ED42                B    47    				sbc hl,bc
00343D 1D                  B    48    				dec e
00343E 20 F6               B    49    				jr nz,conv_allch
003440 C9                  B    50    				ret
                           B    51    
                           B    52    ;----------------------------------------------
                           B    53    
                           B    54    ; set E = character number
                           B    55    ;     HL = character source def address
                           B    56    
003441 E5                  B    57    char_to_font	push hl
003442 C5                  B    58    				push bc
003443 01400000            B    59    				ld bc,64
003447 43                  B    60    				ld b,e
003448 ED4C                B    61    				mlt bc
00344A DD210000 80         B    62    				ld ix,vram_a_addr
00344F DD09                B    63    				add ix,bc
003451 CD 59 34 00         B    64    				call conv_char
003455 C1                  B    65    				pop bc
003456 E1                  B    66    				pop hl
003457 AF                  B    67    				xor a
003458 C9                  B    68    				ret
                           B    69    	
                           B    70    ;----------------------------------------------
                           B    71    
003459 0608                B    72    conv_char		ld b,8
00345B 7E                  B    73    bfontlp1		ld a,(hl)
00345C DD7700              B    74    				ld (ix),a
00345F 23                  B    75    				inc hl
003460 ED3208              B    76    				lea ix,ix+8
003463 10 F6               B    77    				djnz bfontlp1
003465 C9                  B    78    				ret	
                           B    79    				
                           B    80    ;----------------------------------------------
                           B    81    
003466 666F6E74 7300       B    82    fonts_fn		db "fonts",0
                           B    83    
                           B    84    ;----------------------------------------------
                           B     0    	include 'commands\set.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"set" - set an environment variable v0.02
                           B     3    ;
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 124


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\set.asm
                           B     4    ; Command should be in format: SET BLAH = SOMET
                           B     5    ;
                           B     6    ;----------------------------------------------
                           B     7    
00346C 7E                  B     8    os_cmd_set		ld a,(hl)					; i
00346D B7                  B     9    				or a
00346E 28 61               B    10    				jr z,show_envars
                           B    11    		
003470 11030100            B    12    				ld de,scratch_pad+3			; p
003474 7E                  B    13    evsalp1			ld a,(hl)
003475 12                  B    14    				ld (de),a
003476 B7                  B    15    				or a
003477 28 54               B    16    				jr z,set_bad_args
003479 FE3D                B    17    				cp '='
00347B 28 11               B    18    				jr z,ev_goteq
00347D FE20                B    19    				cp ' '
00347F 28 04               B    20    				jr z,set_fequ
003481 23                  B    21    				inc hl
003482 13                  B    22    				inc de
003483 18 EF               B    23    				jr evsalp1
                           B    24    
003485 23                  B    25    set_fequ		inc hl						; f
003486 7E                  B    26    				ld a,(hl)
003487 B7                  B    27    				or a
003488 28 43               B    28    				jr z,set_bad_args
00348A FE3D                B    29    				cp '='
00348C 20 F7               B    30    				jr nz,set_fequ
                           B    31    				
00348E 23                  B    32    ev_goteq		inc hl
00348F CD B3 10 00         B    33    				call os_scan_for_non_space		003493 28 38               B    34    				jr z,set_bad_args
                           B    35    				
003495 AF                  B    36    				xor a
003496 12                  B    37    				ld (de),a
003497 13                  B    38    				inc de
003498 ED530001 00         B    39    				ld (scratch_pad),de				                           B    40    				
00349D 7E                  B    41    				ld a,(hl)
00349E 0E00                B    42    				ld c,0
0034A0 FE22                B    43    				cp 022h						
0034A2 20 02               B    44    				jr nz,set_noquotes
0034A4 0C                  B    45    				inc c
0034A5 23                  B    46    				inc hl
                           B    47    
0034A6 7E                  B    48    set_noquotes	ld a,(hl)
0034A7 12                  B    49    				ld (de),a
0034A8 CB41                B    50    				bit 0,c
0034AA 28 06               B    51    				jr z,set_fcs
0034AC FE22                B    52    				cp 022h
0034AE 28 0D               B    53    				jr z,evsadone2
0034B0 18 04               B    54    				jr set_igsp
0034B2 FE20                B    55    set_fcs			cp ' '
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 125


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\set.asm
0034B4 28 07               B    56    				jr z,evsadone2
0034B6 B7                  B    57    set_igsp		or a
0034B7 28 14               B    58    				jr z,set_bad_args
0034B9 23                  B    59    				inc hl
0034BA 13                  B    60    				inc de
0034BB 18 E9               B    61    				jr set_noquotes
0034BD AF                  B    62    evsadone2		xor a
0034BE 12                  B    63    				ld (de),a
                           B    64    				
0034BF 21030100            B    65    				ld hl,scratch_pad+3
0034C3 ED5B0001 00         B    66    				ld de,(scratch_pad)
0034C8 CD E9 1B 00         B    67    				call os_set_envar
0034CC C9                  B    68    				ret
                           B    69    
0034CD 3E82                B    70    set_bad_args	ld a,82h
0034CF B7                  B    71    				or a
0034D0 C9                  B    72    				ret
                           B    73    				
                           B    74    
0034D1 21 A5 6A 00         B    75    show_envars		ld hl,envar_list
                           B    76    				
0034D5 7E                  B    77    show_envlp		ld a,(hl)
0034D6 FEFF                B    78    				cp 0ffh
0034D8 28 12               B    79    				jr z,set_done
0034DA E5                  B    80    				push hl
0034DB CD 15 10 00         B    81    				call os_print_string
0034DF CD BB 14 00         B    82    				call os_new_line
0034E3 E1                  B    83    				pop hl
                           B    84    				
0034E4 23                  B    85    set_fnl			inc hl
0034E5 7E                  B    86    				ld a,(hl)
0034E6 B7                  B    87    				or a
0034E7 20 FB               B    88    				jr nz,set_fnl
0034E9 23                  B    89    				inc hl
0034EA 18 E9               B    90    				jr show_envlp
                           B    91    				
0034EC AF                  B    92    set_done		xor a
0034ED C9                  B    93    				ret
                           B    94    								
                           B    95    ;----------------------------------------------
                           B     0    	include 'commands\dz.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; OS "DZ" Command: Z80-mode Disassemble V0.01
                           B     3    ;----------------------------------------------
                           B     4    
0034EE FD21 8A 23 00       B     5    os_cmd_dz		ld iy,prefix_bits_loc
0034F3 FDCB 07 86          B     6    				res adl_dis,(iy+var_adl)
0034F7 C3 AC 1D 00         B     7    				jp os_cmd_d_go
                           B     8    				
                           B     9    ;----------------------------------------------
                           B     0    	include 'commands\sound.asm'
                           B     1    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 126


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\sound.asm
                           B     2    ;"Sound" - Play a section of Audio RAM v1.00
                           B     3    ;----------------------------------------------
                           B     4    
0034FB 11FFFF00            B     5    os_cmd_sound	ld de,0ffffh					0034FF ED53 8E 35 00       B     6    				ld (aud_per),de
003504 3E40                B     7    				ld a,64
003506 32 90 35 00         B     8    				ld (aud_vol),a
00350A 3E11                B     9    				ld a,11h
00350C 32 91 35 00         B    10    				ld (aud_chans),a
                           B    11    				
003510 CD 03 1D 00         B    12    				call hexword_or_bust			003514 20 06               B    13    				jr nz,alocok					003516 CD B2 4A 00         B    14    				call hwsc_disable_audio			00351A AF                  B    15    				xor a
00351B C9                  B    16    				ret
00351C ED53 82 35 00       B    17    alocok			ld (aud_loc),de
003521 ED53 88 35 00       B    18    				ld (aud_loc_loop),de
                           B    19    				
003526 CD 03 1D 00         B    20    				call hexword_or_bust
00352A 20 04               B    21    				jr nz,gotaudlen
00352C 3E8D                B    22    missaudpar		ld a,8dh						00352E B7                  B    23    				or a
00352F C9                  B    24    				ret				
003530 ED53 85 35 00       B    25    gotaudlen		ld (aud_len),de
003535 ED53 8B 35 00       B    26    				ld (aud_len_loop),de
                           B    27    				
00353A CD 03 1D 00         B    28    				call hexword_or_bust
00353E 28 33               B    29    				jr z,play_sound
003540 7B                  B    30    				ld a,e
003541 32 8E 35 00         B    31    				ld (aud_per),a
003545 7A                  B    32    				ld a,d
003546 32 8F 35 00         B    33    				ld (aud_per+1),a
                           B    34    				
00354A CD 03 1D 00         B    35    				call hexword_or_bust
00354E 28 23               B    36    				jr z,play_sound
003550 7B                  B    37    				ld a,e
003551 32 90 35 00         B    38    				ld (aud_vol),a
                           B    39    				
003555 CD 03 1D 00         B    40    				call hexword_or_bust
003559 28 18               B    41    				jr z,play_sound
00355B 7B                  B    42    				ld a,e
00355C 32 91 35 00         B    43    				ld (aud_chans),a
                           B    44    				
003560 CD 03 1D 00         B    45    				call hexword_or_bust
003564 28 0D               B    46    				jr z,play_sound
003566 7B                  B    47    				ld a,e
003567 B7                  B    48    				or a
003568 20 09               B    49    				jr nz,play_sound
00356A 11010000            B    50    				ld de,1
00356E ED53 8B 35 00       B    51    				ld (aud_len_loop),de
                           B    52    				
003573 21 82 35 00         B    53    play_sound		ld hl,audio_structure
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 127


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\sound.asm
003577 3A 91 35 00         B    54    				ld a,(aud_chans)
00357B 4F                  B    55    				ld c,a
00357C CD 65 4A 00         B    56    				call hwsc_play_audio
003580 AF                  B    57    				xor a
003581 C9                  B    58    				ret
                           B    59    				
                           B    60    
                           B    61    ;----------------------------------------------
                           B    62    
003582                     B    63    audio_structure
                           B    64    
003582 000000              B    65    aud_loc			dw24 0			;loc
003585 000000              B    66    aud_len			dw24 0			;len
003588 000000              B    67    aud_loc_loop	dw24 0	  	    ;loop loc
00358B 000000              B    68    aud_len_loop	dw24 0		    ;loop len
                           B    69    
00358E FFFF                B    70    aud_per			dw 0ffffh		;per
003590 40                  B    71    aud_vol			db 64			;vol
                           B    72    
003591 11                  B    73    aud_chans		db 11h			;channels to pl
                           B    74    
                           B    75    ;----------------------------------------------
                           B    76    		
                           B     0    	include 'commands\avail.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; "Avail" = Show OS / Hardware version v0.02 - 
                           B     3    ;----------------------------------------------
                           B     4    
003592 7E                  B     5    os_cmd_avail	ld a,(hl)
003593 FE23                B     6    				cp '#'
003595 20 11               B     7    				jr nz,avnoenv
                           B     8    				
003597 CD 82 3A 00         B     9    				call clear_output_envars
00359B DD21 8B 68 00       B    10    				ld ix,free_sysram_base
0035A0 0606                B    11    				ld b,6
0035A2 0E00                B    12    				ld c,0
0035A4 CD 4F 3A 00         B    13    				call os_output_to_envars
                           B    14    								
0035A8 DD21 8B 68 00       B    15    avnoenv			ld ix,free_sysram_base
0035AD 21 F7 35 00         B    16    				ld hl,sysram_txt
0035B1 CD 15 10 00         B    17    				call os_print_string
0035B5 CD DB 35 00         B    18    				call show_range
                           B    19    				
0035B9 21 06 36 00         B    20    				ld hl,vram_a_txt
0035BD CD 15 10 00         B    21    				call os_print_string
0035C1 CD DB 35 00         B    22    				call show_range
                           B    23    				
0035C5 21 14 36 00         B    24    				ld hl,vram_b_txt
0035C9 CD 15 10 00         B    25    				call os_print_string
0035CD CD DB 35 00         B    26    				call show_range
                           B    27    				
0035D1 CD BB 14 00         B    28    				call os_new_line
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 128


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\avail.asm
0035D5 CD BB 14 00         B    29    				call os_new_line	
0035D9 AF                  B    30    				xor a
0035DA C9                  B    31    				ret
                           B    32    				
                           B    33    				
0035DB DD1700              B    34    show_range		ld de,(ix)
0035DE CD F3 13 00         B    35    				call os_show_hex_address
0035E2 3E2D                B    36    				ld a,'-'
0035E4 CD 57 10 00         B    37    				call os_print_char
0035E8 DD1703              B    38    				ld de,(ix+3)
0035EB CD F3 13 00         B    39    				call os_show_hex_address
0035EF CD BB 14 00         B    40    				call os_new_line
0035F3 ED3206              B    41    				lea ix,ix+6
0035F6 C9                  B    42    				ret
                           B    43    
                           B    44    			
                           B    45    
0035F7 0B537973 74656D20   B    46    sysram_txt		db 11,'System  RAM: ',0
0035FF 2052414D 3A2000 
003606 56696465 6F202020   B    47    vram_a_txt		db    'Video   RAM: ',0
00360E 52414D3A 2000 
003614 5370722F 41756420   B    48    vram_b_txt		db    'Spr/Aud RAM: ',0
00361C 52414D3A 2000 
                           B    49    
                           B    50    
                           B    51    ;----------------------------------------------
                           B    52    	
                           B     0    	include 'commands\fi.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; "FI" = Show file info.  v0.01 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
003622 CD 11 29 00         B     5    os_cmd_fi		call filename_or_bust			                           B     6    				
003626 E5                  B     7    				push hl
003627 CD 03 17 00         B     8    				call os_check_volume_format	
00362B E1                  B     9    				pop hl
00362C C0                  B    10    				ret nz
                           B    11    
00362D E5                  B    12    				push hl
00362E CD 9E 10 00         B    13    				call os_next_arg
003632 7E                  B    14    				ld a,(hl)	
003633 32220100            B    15    				ld (scratch_pad+34),a			003637 E1                  B    16    				pop hl
                           B    17    
003638 CD 9B 16 00         B    18    				call os_find_file				00363C 28 11               B    19    				jr z,fi_filexists
00363E F5                  B    20    				push af
00363F 3A220100            B    21    				ld a,(scratch_pad+34)
003643 FE23                B    22    				cp '#'
003645 28 02               B    23    				jr z,fi_remove
003647 F1                  B    24    				pop af
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 129


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\fi.asm
003648 C9                  B    25    				ret
003649 CD 82 3A 00         B    26    fi_remove		call clear_output_envars
00364D F1                  B    27    				pop af
00364E C9                  B    28    				ret
                           B    29    				
00364F 21260100            B    30    fi_filexists	ld hl,scratch_pad+38
003653 71                  B    31    				ld (hl),c
003654 ED532301 00         B    32    				ld (scratch_pad+35),de
                           B    33    				
003659 11100000            B    34    				ld de,16
00365D CD AA 16 00         B    35    				call os_set_load_length			                           B    36    				
003661 21100100            B    37    				ld hl,scratch_pad+16			003665 CD C8 16 00         B    38    				call os_read_bytes_from_file
003669 C0                  B    39    				ret nz
                           B    40    	
00366A CD F9 36 00         B    41    				call fi_show_length				                           B    42    				
00366E 2A120100            B    43    				ld hl,(scratch_pad+16+2)		003672 AF                  B    44    				xor a
003673 1150524F            B    45    				ld de,04f5250h	
003677 ED52                B    46    				sbc hl,de
003679 28 04               B    47    				jr z,ezp_file
00367B 0601                B    48    fi_nezp_hash	ld b,1
00367D 18 36               B    49    				jr fi_envtest
                           B    50    				
                           B    51    				
00367F FD211501 00         B    52    ezp_file		ld iy,scratch_pad+16+5			003684 DD213001 00         B    53    				ld ix,scratch_pad+48			003689 21 65 37 00         B    54    				ld hl,fi_txt2
00368D CD 17 37 00         B    55    				call fi_show_w24				003691 CD 17 37 00         B    56    				call fi_show_w24				003695 CD 32 37 00         B    57    				call fi_show_w16				003699 CD 32 37 00         B    58    				call fi_show_w16				00369D CD 15 10 00         B    59    				call os_print_string			0036A1 11000000            B    60    				ld de,0
0036A5 FD5E00              B    61    				ld e,(iy)
0036A8 DD1F00              B    62    				ld (ix),de
0036AB CD F3 13 00         B    63    				call os_show_hex_address
0036AF CD BB 14 00         B    64    				call os_new_line
                           B    65    				
0036B3 0606                B    66    				ld b,6
0036B5 3A220100            B    67    fi_envtest		ld a,(scratch_pad+34)
0036B9 FE23                B    68    				cp '#'
0036BB 28 02               B    69    				jr z,fi_envars
0036BD AF                  B    70    				xor a
0036BE C9                  B    71    				ret
                           B    72    				
0036BF E5                  B    73    fi_envars		push hl
0036C0 CD 82 3A 00         B    74    				call clear_output_envars
0036C4 E1                  B    75    				pop hl	
                           B    76    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 130


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\fi.asm
0036C5 C5                  B    77    				push bc
                           B    78    				
0036C6 11260100            B    79    				ld de,scratch_pad+38
0036CA 21280100            B    80    				ld hl,scratch_pad+40
0036CE E5                  B    81    				push hl
0036CF 0604                B    82    				ld b,4
0036D1 CD 50 11 00         B    83    				call n_hexbytes_to_ascii
0036D5 D1                  B    84    				pop de
0036D6 DD21 5B 5E 00       B    85    				ld ix,envar_out_n_txt
0036DB DD360330            B    86    				ld (ix+3),'0'
0036DF DD360430            B    87    				ld (ix+4),'0'
0036E3 DDE5                B    88    				push ix
0036E5 E1                  B    89    				pop hl
0036E6 CD E9 1B 00         B    90    				call os_set_envar
                           B    91    				
0036EA C1                  B    92    				pop bc
0036EB 05                  B    93    				dec b
0036EC C8                  B    94    				ret z
                           B    95    				
0036ED DD213001 00         B    96    				ld ix,scratch_pad+48
0036F2 0E01                B    97    				ld c,1
0036F4 CD 4F 3A 00         B    98    				call os_output_to_envars		0036F8 C9                  B    99    				ret
                           B   100    
                           B   101    
                           B   102    
0036F9 21 54 37 00         B   103    fi_show_length	ld hl,fi_txt
0036FD CD 15 10 00         B   104    				call os_print_string
003701 3A260100            B   105    				ld a,(scratch_pad+38)
003705 CD 07 14 00         B   106    				call os_show_hex_byte
003709 ED5B2301 00         B   107    				ld de,(scratch_pad+35)
00370E CD F3 13 00         B   108    				call os_show_hex_address
003712 CD BB 14 00         B   109    				call os_new_line
003716 C9                  B   110    				ret
                           B   111    
                           B   112    
003717 CD 15 10 00         B   113    fi_show_w24		call os_print_string
00371B FD1700              B   114    				ld de,(iy)
00371E DD1F00              B   115    				ld (ix),de
003721 E5                  B   116    				push hl
003722 CD F3 13 00         B   117    				call os_show_hex_address
003726 CD BB 14 00         B   118    				call os_new_line
00372A E1                  B   119    				pop hl
00372B ED3203              B   120    				lea ix,ix+3
00372E ED3303              B   121    				lea iy,iy+3
003731 C9                  B   122    				ret
                           B   123    				
003732 CD 15 10 00         B   124    fi_show_w16		call os_print_string
003736 11000000            B   125    				ld de,0
00373A FD5E00              B   126    				ld e,(iy)
00373D FD5601              B   127    				ld d,(iy+1)
003740 DD1F00              B   128    				ld (ix),de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 131


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\fi.asm
003743 E5                  B   129    				push hl
003744 CD F3 13 00         B   130    				call os_show_hex_address
003748 CD BB 14 00         B   131    				call os_new_line
00374C E1                  B   132    				pop hl
00374D ED3203              B   133    				lea ix,ix+3
003750 ED3302              B   134    				lea iy,iy+2
003753 C9                  B   135    				ret
                           B   136    				
                           B   137    ;----------------------------------------------
                           B   138    				
003754 546F7461 6C204C65   B   139    fi_txt			db "Total Length  : ",0
00375C 6E677468 20203A20 
003764 00 
003765 4C6F6164 204C6F63   B   140    fi_txt2			db "Load Location : ",0
00376D 6174696F 6E203A20 
003775 00 
003776 5472756E 63617465   B   141    				db "Truncate to   : ",0
00377E 20746F20 20203A20 
003786 00 
003787 50524F53 45205265   B   142    				db "PROSE Reqd    : ",0
00378F 71642020 20203A20 
003797 00 
003798 414D4F45 42412052   B   143    				db "AMOEBA Reqd   : ",0
0037A0 65716420 20203A20 
0037A8 00 
0037A9 41444C20 6D6F6465   B   144    				db "ADL mode      : ",0
0037B1 20202020 20203A20 
0037B9 00 
                           B   145    				
                           B   146    ;----------------------------------------------
                           B   147    	
                           B     0    	include 'commands\echo.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; echo v0.01
                           B     3    ;----------------------------------------------
                           B     4    
0037BA                     B     5    os_cmd_echo
                           B     6    
0037BA 7E                  B     7    			ld a,(hl)					;if no 
0037BB B7                  B     8    			or a
0037BC 20 04               B     9    			jr nz,got_args
0037BE 3E81                B    10    			ld a,81h					;no dat
0037C0 B7                  B    11    			or a
0037C1 C9                  B    12    			ret
                           B    13    
                           B    14    
0037C2 11000100            B    15    got_args	ld de,scratch_pad
0037C6 7E                  B    16    			ld a,(hl)					;is cha
0037C7 FE22                B    17    			cp 22h
0037C9 20 0C               B    18    			jr nz,got_string
                           B    19    						
0037CB 0650                B    20    			ld b,80
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 132


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\echo.asm
0037CD 23                  B    21    echolp1		inc hl
0037CE 7E                  B    22    			ld a,(hl)
0037CF FE22                B    23    			cp 22h
0037D1 28 04               B    24    			jr z,got_string
0037D3 12                  B    25    			ld (de),a
0037D4 13                  B    26    			inc de
0037D5 10 F6               B    27    			djnz echolp1
                           B    28    
0037D7 3E0B                B    29    got_string	ld a,11
0037D9 12                  B    30    			ld (de),a					;add a 
0037DA 13                  B    31    			inc de
0037DB AF                  B    32    			xor a
0037DC 12                  B    33    			ld (de),a
                           B    34    			
0037DD 21000100            B    35    			ld hl,scratch_pad
0037E1 CD 15 10 00         B    36    			call os_print_string
0037E5 AF                  B    37    			xor a
0037E6 C9                  B    38    			ret
                           B    39    			
                           B    40    ;----------------------------------------------
                           B    41    
                           A  3190    	
0037E7 C9                  A  3191    os_cmd_unused	ret		; <- dummy command, sho
                           A  3192    
                           A  3193    ;----------------------------------------------
                           A  3194    
0037E8                     A  3195    os_get_mem_base
                           A  3196    
0037E8 2A 8B 68 00         A  3197    		ld hl,(free_sysram_base)
0037EC ED5B 91 68 00       A  3198    		ld de,(free_vram_a_base)
0037F1 ED4B 97 68 00       A  3199    		ld bc,(free_vram_b_base)
0037F6 BF                  A  3200    		cp a
0037F7 C9                  A  3201    		ret
                           A  3202    
                           A  3203    
0037F8                     A  3204    os_get_mem_top
                           A  3205    
0037F8 2A 8E 68 00         A  3206    		ld hl,(free_sysram_top)
0037FC ED5B 94 68 00       A  3207    		ld de,(free_vram_a_top)
003801 ED4B 9A 68 00       A  3208    		ld bc,(free_vram_b_top)
003806 BF                  A  3209    		cp a
003807 C9                  A  3210    		ret
                           A  3211    
                           A  3212    ;----------------------------------------------
                           A  3213    
003808                     A  3214    ext_set_pointer
                           A  3215    
                           A  3216    ; Set D = 1: use default pointer, otherwise:
                           A  3217    
                           A  3218    ;  Set HL to location of sprite data in memory 
                           A  3219    ;  followed by:
                           A  3220    ;   $00 - palette offset
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 133


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  3221    ;   $00 - colour count
                           A  3222    ;  then.. palette data (starting from colour 1)
                           A  3223    
                           A  3224    ;   Set C to pointer height (max 32)
                           A  3225    ;   Set B to palette 0-3
                           A  3226    ;   Set E to enable/disable pointer sprite
                           A  3227    
                           A  3228    ;   Returns with Zero Flag set if mouse driver 
                           A  3229    				
003808 CC 23 16 00         A  3230    				call z,mbase_hl
                           A  3231    
00380C                     A  3232    os_set_pointer
                           A  3233    
00380C 7B                  A  3234    				ld a,e
00380D B7                  A  3235    				or a
00380E CA B2 38 00         A  3236    				jr z,disable_pointer
                           A  3237    				
003812 3A 8A 68 00         A  3238    				ld a,(devices_connected)		003816 E602                A  3239    				and 2
003818 20 07               A  3240    				jr nz,ok_md_enabled
00381A CD B2 38 00         A  3241    				call disable_pointer
00381E AF                  A  3242    				xor a
00381F 3C                  A  3243    				inc a
003820 C9                  A  3244    				ret
                           A  3245    				
                           A  3246    				
003821 7A                  A  3247    ok_md_enabled	ld a,d
003822 E601                A  3248    				and 1
003824 28 27               A  3249    				jr z,user_def_pointer
                           A  3250    					
003826 21 A2 6E 00         A  3251    				ld hl,default_pointer
00382A 1100FEC7            A  3252    				ld de,vram_b_addr+vram_b_size-5
00382E 01 AC 00 00         A  3253    				ld bc,default_pointer_colours-d
003832 CD 47 16 00         A  3254    				call unpack_rle
                           A  3255    					
003836 01000000            A  3256    				ld bc,0
00383A 0E 14               A  3257    				ld c,default_pointer_height
00383C ED43 A0 6A 00       A  3258    				ld (os_pointer_height),bc
003841 21 4E 6F 00         A  3259    				ld hl,default_pointer_colours
003845 3E03                A  3260    				ld a,3
003847 32 A3 6A 00         A  3261    				ld (os_pointer_palette),a		00384B 18 1F               A  3262    				jr copy_spr_pal
                           A  3263    				
00384D                     A  3264    user_def_pointer
00384D 78                  A  3265    				ld a,b
00384E E603                A  3266    				and 3
003850 32 A3 6A 00         A  3267    				ld (os_pointer_palette),a	
003854 79                  A  3268    				ld a,c
003855 FE20                A  3269    				cp 020h
003857 38 02               A  3270    				jr c,pointhok
003859 3E20                A  3271    				ld a,020h
00385B 32 A0 6A 00         A  3272    pointhok		ld (os_pointer_height),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 134


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00385F 01100000            A  3273    				ld bc,16
003863 47                  A  3274    				ld b,a
003864 ED4C                A  3275    				mlt bc							003866 1100FEC7            A  3276    				ld de,vram_b_addr+vram_b_size-5
00386A EDB0                A  3277    				ldir							                           A  3278    							
00386C E5                  A  3279    copy_spr_pal	push hl							00386D 01000000            A  3280    				ld bc,0
003871 4E                  A  3281    				ld c,(hl)
003872 CB21                A  3282    				sla c
003874 CB10                A  3283    				rl b							003876 210000FF            A  3284    				ld hl,hw_palette			
00387A 09                  A  3285    				add hl,bc
00387B 3A A3 6A 00         A  3286    				ld a,(os_pointer_palette)		00387F CB27                A  3287    				sla a
003881 47                  A  3288    				ld b,a
003882 0E00                A  3289    				ld c,0
003884 09                  A  3290    				add hl,bc				
003885 EB                  A  3291    				ex de,hl						003886 E1                  A  3292    				pop hl							003887 23                  A  3293    				inc hl							003888 0600                A  3294    				ld b,0
00388A 4E                  A  3295    				ld c,(hl)
00388B CB21                A  3296    				sla c
00388D CB10                A  3297    				rl b							00388F 23                  A  3298    				inc hl
003890 EDB0                A  3299    				ldir							                           A  3300    				
003892 21E07F00            A  3301    				ld hl,07fe0h
003896 22 9D 6A 00         A  3302    				ld (os_pointer_definition),hl	00389A 3E01                A  3303    				ld a,1
00389C 32 9C 6A 00         A  3304    				ld (os_pointer_enable),a
0038A0 320118FF            A  3305    				ld (sprite_control),a			0038A4 3A A3 6A 00         A  3306    				ld a,(os_pointer_palette)
0038A8 320318FF            A  3307    				ld (sprite_palette_select),a	0038AC CD 19 47 00         A  3308    				call hwsc_update_pointer_sprite
0038B0 AF                  A  3309    				xor a
0038B1 C9                  A  3310    				ret
                           A  3311    
                           A  3312    
0038B2                     A  3313    disable_pointer
                           A  3314    
0038B2 AF                  A  3315    				xor a
0038B3 32 9C 6A 00         A  3316    				ld (os_pointer_enable),a
0038B7 320118FF            A  3317    				ld (sprite_control),a			0038BB C9                  A  3318    				ret
                           A  3319    				
                           A  3320    ;----------------------------------------------
                           A  3321    
0038BC                     A  3322    test_amoeba_vers
                           A  3323    
0038BC CD 5E 47 00         A  3324    				call hwsc_get_version			Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 135


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0038C0 21060100            A  3325    				ld hl,amoeba_version_required-1
0038C4 AF                  A  3326    				xor a
0038C5 ED52                A  3327    				sbc hl,de
0038C7 D8                  A  3328    				ret c
                           A  3329    				
0038C8 21 21 5E 00         A  3330    				ld hl,hw_warn_txt2
0038CC 11070100            A  3331    				ld de,amoeba_version_required
0038D0 CD 83 11 00         A  3332    				call hexword_to_ascii
                           A  3333    				
0038D4 21004080            A  3334    				ld hl,vram_a_addr+16384			0038D8 222010FF            A  3335    				ld (bitmap_parameters),hl		0038DC 3600                A  3336    				ld (hl),0
0038DE E5                  A  3337    				push hl
0038DF D1                  A  3338    				pop de
0038E0 13                  A  3339    				inc de
0038E1 01002C01            A  3340    				ld bc,320*240
0038E5 EDB0                A  3341    				ldir
                           A  3342    					
0038E7 DD2138D1 80         A  3343    				ld ix,vram_a_addr+16384+(320*11
0038EC FD21 0C 5E 00       A  3344    				ld iy,hw_warn_txt1				0038F1 FD7E00              A  3345    nextwchar		ld a,(iy)
0038F4 B7                  A  3346    				or a
0038F5 28 3B               A  3347    				jr z,wmsg_done
0038F7 21400000            A  3348    				ld hl,64
0038FB 67                  A  3349    				ld h,a
0038FC ED6C                A  3350    				mlt hl
0038FE 11000080            A  3351    				ld de,vram_a_addr
003902 19                  A  3352    				add hl,de						003903 0E08                A  3353    				ld c,8
003905 7E                  A  3354    wpixlp2			ld a,(hl)
003906 0608                A  3355    				ld b,8
003908 CB17                A  3356    wpixlp1			rl a
00390A 30 06               A  3357    				jr nc,nowpix
00390C DD360001            A  3358    				ld (ix),1
003910 18 04               A  3359    				jr wpixd
003912 DD360000            A  3360    nowpix			ld (ix),0
003916 DD23                A  3361    wpixd			inc ix
003918 10 EE               A  3362    				djnz wpixlp1
00391A 11380100            A  3363    				ld de,320-8
00391E DD19                A  3364    				add ix,de
003920 11080000            A  3365    				ld de,8
003924 19                  A  3366    				add hl,de
003925 0D                  A  3367    				dec c
003926 20 DD               A  3368    				jr nz,wpixlp2
                           A  3369    				
003928 1108F6FF            A  3370    				ld de,8-(320*8)
00392C DD19                A  3371    				add ix,de
00392E FD23                A  3372    				inc iy
003930 18 BF               A  3373    				jr nextwchar
                           A  3374    
                           A  3375    
003932 CD DC 48 00         A  3376    wmsg_done		call purge_keyboard
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 136


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
003936 CD 46 41 00         A  3377    				call set_irq_vectors
00393A CD 9E 41 00         A  3378    				call enable_os_irqs
00393E FB                  A  3379    				ei
                           A  3380    
00393F CD B7 46 00         A  3381    wmsg_loop		call hwsc_wait_vrt			;	                           A  3382    				
003943 11CC0C00            A  3383    				ld de,ccch
003947 21 38 69 00         A  3384    				ld hl,cursorflashtimer
00394B 34                  A  3385    				inc (hl)
00394C 7E                  A  3386    				ld a,(hl)
00394D E640                A  3387    				and 64
00394F 28 04               A  3388    				jr z,got_wcolour
003951 11000000            A  3389    				ld de,000h
003955 ED530200 FF         A  3390    got_wcolour		ld (hw_palette+2),de
                           A  3391    								
00395A CD 53 4B 00         A  3392    				call os_get_key_press
00395E FE76                A  3393    				cp 76h
003960 20 DD               A  3394    				jr nz,wmsg_loop
003962 C3000000            A  3395    				jp 0
                           A  3396    
                           A  3397    ;----------------------------------------------
                           A  3398    
                           A  3399    
003966 D5                  A  3400    relativize_hl	push de						
                           A  3401    
003967 D1                  A  3402    				pop de
003968 D1                  A  3403    				pop de						; P
003969 19                  A  3404    				add hl,de
00396A 11080000            A  3405    				ld de,8
00396E B7                  A  3406    				or a
00396F ED52                A  3407    				sbc hl,de
003971 3B                  A  3408    				dec sp
003972 3B                  A  3409    				dec sp
003973 3B                  A  3410    				dec sp
003974 3B                  A  3411    				dec sp
003975 3B                  A  3412    				dec sp
003976 3B                  A  3413    				dec sp
003977 D1                  A  3414    				pop de						; o
003978 C9                  A  3415    				ret
                           A  3416    
                           A  3417    
003979 D5                  A  3418    relative_call	push de						
                           A  3419    
00397A D1                  A  3420    				pop de
00397B D1                  A  3421    				pop de						; P
00397C 19                  A  3422    				add hl,de
00397D 11080000            A  3423    				ld de,8
003981 B7                  A  3424    				or a
003982 ED52                A  3425    				sbc hl,de
003984 3B                  A  3426    				dec sp
003985 3B                  A  3427    				dec sp
003986 3B                  A  3428    				dec sp
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 137


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
003987 3B                  A  3429    				dec sp
003988 3B                  A  3430    				dec sp
003989 3B                  A  3431    				dec sp
00398A D1                  A  3432    				pop de						; o
00398B E9                  A  3433    				jp (hl)
                           A  3434    
                           A  3435    
                           A  3436    ;----------------------------------------------
                           A  3437    
00398C                     A  3438    os_allocate_ram
                           A  3439    
                           A  3440    ; set BC = number of bytes to allocate
                           A  3441    ; set E = 0 sysram, E = 1 vram_a, E = 2 vram_b
                           A  3442    ; returns HL = address of allocated RAM
                           A  3443    ; ZF set if all OK
                           A  3444    
00398C 7B                  A  3445    				ld a,e
00398D 11060000            A  3446    				ld de,6
003991 57                  A  3447    				ld d,a
003992 ED5C                A  3448    				mlt de
003994 DD21 8B 68 00       A  3449    				ld ix,free_sysram_base
003999 DD19                A  3450    				add ix,de
                           A  3451    				
00399B DD2703              A  3452    				ld hl,(ix+3)
00399E AF                  A  3453    				xor a
00399F ED42                A  3454    				sbc hl,bc
0039A1 38 0E               A  3455    				jr c,alloc_err
0039A3 DD2F03              A  3456    				ld (ix+3),hl
                           A  3457    				
0039A6 DD1700              A  3458    				ld de,(ix)
0039A9 AF                  A  3459    				xor a
0039AA E5                  A  3460    				push hl
0039AB ED52                A  3461    				sbc hl,de
0039AD E1                  A  3462    				pop hl
0039AE 23                  A  3463    				inc hl
0039AF 30 04               A  3464    				jr nc,alloc_ok
0039B1 3E8E                A  3465    alloc_err		ld a,8eh						0039B3 B7                  A  3466    				or a
0039B4 C9                  A  3467    				ret
                           A  3468    				
0039B5 AF                  A  3469    alloc_ok		xor a
0039B6 C9                  A  3470    				ret
                           A  3471    			
                           A  3472    
                           A  3473    
0039B7                     A  3474    os_deallocate_ram
                           A  3475    
                           A  3476    ; set BC = number of bytes to de-allocate
                           A  3477    ; set E = 0 sysram, E = 1 vram_a, E = 2 vram_b
                           A  3478    ; returns HL = address of allocated RAM
                           A  3479    ; ZF set if all OK		
                           A  3480    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 138


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0039B7 D5                  A  3481    				push de
                           A  3482    				
0039B8 7B                  A  3483    				ld a,e
0039B9 11060000            A  3484    				ld de,6
0039BD 57                  A  3485    				ld d,a
0039BE ED5C                A  3486    				mlt de
0039C0 DD21 8B 68 00       A  3487    				ld ix,free_sysram_base
0039C5 DD19                A  3488    				add ix,de
                           A  3489    				
0039C7 DD2703              A  3490    				ld hl,(ix+3)
0039CA 09                  A  3491    				add hl,bc
0039CB DD2F03              A  3492    				ld (ix+3),hl
                           A  3493    				
0039CE D1                  A  3494    				pop de							0039CF 7B                  A  3495    				ld a,e
0039D0 B7                  A  3496    				or a
0039D1 20 0D               A  3497    				jr nz,dealloc_ok				                           A  3498    				
0039D3 1100FE07            A  3499    				ld de,sysram_addr+sysram_size-s
0039D7 AF                  A  3500    				xor a
0039D8 ED52                A  3501    				sbc hl,de
0039DA 38 04               A  3502    				jr c,dealloc_ok
0039DC 1B                  A  3503    				dec de
0039DD DD1F03              A  3504    				ld (ix+3),de
0039E0 AF                  A  3505    dealloc_ok		xor a
0039E1 C9                  A  3506    				ret
                           A  3507    				
                           A  3508    				
                           A  3509    ;----------------------------------------------
                           A  3510    
0039E2                     A  3511    os_protected_ram_test
                           A  3512    
                           A  3513    ; set bc = start of range
                           A  3514    ; set de = end of range
                           A  3515    
                           A  3516    ; Returns ZF set if no collision
                           A  3517    
                           A  3518    
0039E2 DD21 8B 68 00       A  3519    				ld ix,free_sysram_base			0039E7 DD2700              A  3520    				ld hl,(ix)
0039EA AF                  A  3521    				xor a
0039EB ED42                A  3522    				sbc hl,bc
0039ED 38 04               A  3523    				jr c,no_prose_hit
0039EF 3E26                A  3524    				ld a,26h						0039F1 B7                  A  3525    				or a
0039F2 C9                  A  3526    				ret
                           A  3527    				
0039F3 DD2706              A  3528    no_prose_hit	ld hl,(ix+6)					0039F6 AF                  A  3529    				xor a
0039F7 ED42                A  3530    				sbc hl,bc
0039F9 38 0D               A  3531    				jr c,no_vram_a_low_hit
0039FB 21000080            A  3532    				ld hl,800000h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 139


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0039FF AF                  A  3533    				xor a
003A00 ED52                A  3534    				sbc hl,de
003A02 30 04               A  3535    				jr nc,no_vram_a_low_hit
003A04 3E36                A  3536    				ld a,36h						003A06 B7                  A  3537    				or a
003A07 C9                  A  3538    				ret
                           A  3539    
003A08                     A  3540    no_vram_a_low_hit
                           A  3541    				
003A08 CD 1D 3A 00         A  3542    				call test_alloc
003A0C C0                  A  3543    				ret nz
003A0D ED3206              A  3544    				lea ix,ix+6
003A10 CD 1D 3A 00         A  3545    				call test_alloc
003A14 C0                  A  3546    				ret nz
003A15 ED3206              A  3547    				lea ix,ix+6
003A18 CD 1D 3A 00         A  3548    				call test_alloc
003A1C C9                  A  3549    				ret 
                           A  3550    				
003A1D DD2703              A  3551    test_alloc		ld hl,(ix+3)					003A20 AF                  A  3552    				xor a
003A21 ED52                A  3553    				sbc hl,de
003A23 30 0D               A  3554    				jr nc,no_colis
003A25 21000008            A  3555    				ld hl,sysram_addr+sysram_size	003A29 AF                  A  3556    				xor a
003A2A ED42                A  3557    				sbc hl,bc
003A2C 38 04               A  3558    				jr c,no_colis
003A2E 3E35                A  3559    				ld a,35h						003A30 B7                  A  3560    				or a
003A31 C9                  A  3561    				ret
                           A  3562    				
003A32 AF                  A  3563    no_colis		xor a
003A33 C9                  A  3564    				ret
                           A  3565    				
                           A  3566    ;----------------------------------------------
                           A  3567    
003A34                     A  3568    os_protected_ram_query
                           A  3569    
003A34 F5                  A  3570    				push af
003A35 21 26 5E 00         A  3571    				ld hl,pmq_txt
003A39 CD 15 10 00         A  3572    				call os_print_string
003A3D CD F8 4A 00         A  3573    				call os_wait_key_press
003A41 78                  A  3574    				ld a,b
003A42 FE79                A  3575    				cp 'y'
003A44 28 06               A  3576    				jr z,ok_pmwrite
003A46 FE59                A  3577    				cp 'Y'
003A48 28 02               A  3578    				jr z,ok_pmwrite
003A4A F1                  A  3579    				pop af
003A4B C9                  A  3580    				ret
                           A  3581    				
003A4C F1                  A  3582    ok_pmwrite		pop af
003A4D AF                  A  3583    				xor a
003A4E C9                  A  3584    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 140


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  3585    
                           A  3586    ;----------------------------------------------
                           A  3587    					
003A4F                     A  3588    os_output_to_envars
                           A  3589    
                           A  3590    ; Set IX to location of first 24bit value to ou
                           A  3591    ; B = number of envars to make 
                           A  3592    ; C = Start envar number
                           A  3593    				
003A4F C5                  A  3594    out_to_envlp	push bc
003A50 79                  A  3595    				ld a,c
003A51 21 5E 5E 00         A  3596    				ld hl,envar_out_n_txt+3
003A55 CD 5E 11 00         A  3597    				call hexbyte_to_ascii
                           A  3598    						
003A59 21000100            A  3599    				ld hl,scratch_pad
003A5D ED1202              A  3600    				lea de,ix+2
003A60 0603                A  3601    				ld b,3
003A62 CD 50 11 00         A  3602    				call n_hexbytes_to_ascii
003A66 3600                A  3603    				ld (hl),0
                           A  3604    				
003A68 21 5B 5E 00         A  3605    				ld hl,envar_out_n_txt
003A6C 11000100            A  3606    				ld de,scratch_pad
003A70 DDE5                A  3607    				push ix
003A72 CD E9 1B 00         A  3608    				call os_set_envar
003A76 DDE1                A  3609    				pop ix
003A78 C1                  A  3610    				pop bc
003A79 C0                  A  3611    				ret nz
                           A  3612    				
003A7A ED3203              A  3613    				lea ix,ix+3
003A7D 0C                  A  3614    				inc c
003A7E 10 CF               A  3615    				djnz out_to_envlp
003A80 AF                  A  3616    				xor a
003A81 C9                  A  3617    				ret			
                           A  3618    
                           A  3619    
003A82                     A  3620    clear_output_envars
                           A  3621    
003A82 0E00                A  3622    				ld c,0
003A84 C5                  A  3623    del_out_envlp	push bc
003A85 79                  A  3624    				ld a,c
003A86 21 5E 5E 00         A  3625    				ld hl,envar_out_n_txt+3
003A8A CD 5E 11 00         A  3626    				call hexbyte_to_ascii
003A8E 21 5B 5E 00         A  3627    				ld hl,envar_out_n_txt
003A92 CD 3F 1C 00         A  3628    				call os_delete_envar
003A96 C1                  A  3629    				pop bc
003A97 C0                  A  3630    				ret nz
003A98 0C                  A  3631    				inc c
003A99 10 E9               A  3632    				djnz del_out_envlp
003A9B AF                  A  3633    				xor a
003A9C C9                  A  3634    				ret			
                           A  3635    
                           A  3636    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 141


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  3637    ;----------------------------------------------
                           A  3638    
003A9D                     A  3639    os_parse_path_string
                           A  3640    
                           A  3641    ; Set HL = string address in format "locomotion
                           A  3642    ; A: 1 = change to all names in string, 0 = sto
                           A  3643    				
003A9D 32060100            A  3644    				ld (scratch_pad+6),a
                           A  3645    	
003AA1 E5                  A  3646    				push hl
003AA2 DDE1                A  3647    				pop ix
003AA4 DD7E04              A  3648    				ld a,(ix+4)
003AA7 FE3A                A  3649    				cp ':'							003AA9 20 27               A  3650    				jr nz,pp_nchvol
003AAB 11 53 67 00         A  3651    				ld de,vol_txt+1
003AAF 0603                A  3652    				ld b,3
003AB1 CD E2 12 00         A  3653    				call os_compare_strings
003AB5 20 1B               A  3654    				jr nz,pp_nchvol
003AB7 11050000            A  3655    				ld de,5
003ABB 19                  A  3656    				add hl,de
003ABC 22 F7 69 00         A  3657    				ld (os_args_loc),hl				003AC0 DD7E03              A  3658    				ld a,(ix+3)						003AC3 D630                A  3659    				sub 030h
003AC5 CD 36 1B 00         A  3660    				call os_change_volume
003AC9 C0                  A  3661    				ret nz							003ACA CD 60 17 00         A  3662    				call os_root_dir				003ACE 2A F7 69 00         A  3663    				ld hl,(os_args_loc)	
                           A  3664    			
003AD2 E5                  A  3665    pp_nchvol		push hl
003AD3 D1                  A  3666    				pop de
                           A  3667    				
003AD4 1B                  A  3668    				dec de
003AD5 13                  A  3669    pp_chkstring	inc de
003AD6 1A                  A  3670    				ld a,(de)						003AD7 B7                  A  3671    				or a
003AD8 28 1D               A  3672    				jr z,pp_end
003ADA FE20                A  3673    				cp ' '
003ADC 28 19               A  3674    				jr z,pp_end
003ADE FE2F                A  3675    				cp '/'
003AE0 20 F3               A  3676    				jr nz,pp_chkstring
                           A  3677    
003AE2 13                  A  3678    				inc de
003AE3 ED530701 00         A  3679    				ld (scratch_pad+7),de
003AE8 CD 50 17 00         A  3680    				call os_change_dir				003AEC C0                  A  3681    				ret nz
                           A  3682    				
003AED 2A070100            A  3683    				ld hl,(scratch_pad+7)			003AF1 22 F7 69 00         A  3684    				ld (os_args_loc),hl
003AF5 18 DB               A  3685    				jr pp_nchvol
                           A  3686    					
003AF7 3A060100            A  3687    pp_end			ld a,(scratch_pad+6)			003AFB B7                  A  3688    				or a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 142


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
003AFC C8                  A  3689    				ret z
003AFD ED53 F7 69 00       A  3690    				ld (os_args_loc),de	
003B02 CD 50 17 00         A  3691    				call os_change_dir
003B06 C9                  A  3692    				ret
                           A  3693    
                           A  3694    ;----------------------------------------------
                           A  3695    
003B07                     A  3696    os_restore_original_vol_dir
                           A  3697    
003B07 F5                  A  3698    				push af							003B08 ED5B 10 6A 00       A  3699    				ld de,(original_dir)
003B0D CD E6 1A 00         A  3700    				call fs_update_dir_cluster
003B11 3A 13 6A 00         A  3701    				ld a,(original_vol)
003B15 CD 36 1B 00         A  3702    				call os_change_volume	
003B19 F1                  A  3703    				pop af
003B1A B7                  A  3704    				or a
003B1B C9                  A  3705    				ret
                           A  3706    				
                           A  3707    				
003B1C                     A  3708    os_cache_original_vol_dir
                           A  3709    
003B1C F5                  A  3710    				push af
003B1D C5                  A  3711    				push bc
003B1E D5                  A  3712    				push de
003B1F E5                  A  3713    				push hl
003B20 3A 4E 67 00         A  3714    				ld a,(current_volume)
003B24 32 13 6A 00         A  3715    				ld (original_vol),a
003B28 CD DA 1A 00         A  3716    				call fs_get_dir_cluster
003B2C ED53 10 6A 00       A  3717    				ld (original_dir),de
003B31 E1                  A  3718    				pop hl
003B32 D1                  A  3719    				pop de
003B33 C1                  A  3720    				pop bc
003B34 F1                  A  3721    				pop af
003B35 C9                  A  3722    				ret
                           A  3723    				
                           A  3724    ;----------------------------------------------
                           A  3725    
                           B     0    	include 'script_routines.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"PROSE script routines V0.04 
                           B     3    ;
                           B     4    ; Notes: Changing drives within a script not su
                           B     5    ;        Scripts cannot launch scripts as this 
                           B     6    ;		 Abort with CRTL + C
                           B     7    ;
                           B     8    ;        Supports: IF [CONDITION] jumps. Syntax
                           B     9    ;        
                           B    10    ;          "IF ENVAR = STRING LABEL" (or IF ENV
                           B    11    ;          (goto LABEL must be declared as [LAB
                           B    12    ;----------------------------------------------
                           B    13    
       00000010            B    14    max_if_chars		equ 16 ;(string size for en
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 143


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\script_routines.asm
                           B    15    
       00000000            B    16    scr_in_script		equ 0
       00000001            B    17    scr_find_new_line	equ 1
       00000002            B    18    scr_if_condition	equ 2
       00000003            B    19    scr_end				equ 3
                           B    20    
                           B    21    
003B36 CD 41 3B 00         B    22    os_cmd_exec		call do_script
003B3A 21 0C 6A 00         B    23    				ld hl,script_flags
003B3E CB86                B    24    				res scr_in_script,(hl)
003B40 C9                  B    25    				ret
                           B    26    				
003B41 21 0C 6A 00         B    27    do_script		ld hl,script_flags	
003B45 CBC6                B    28    				set scr_in_script,(hl)
                           B    29    						
003B47 CD DA 1A 00         B    30    				call fs_get_dir_cluster			003B4B ED53 03 6A 00       B    31    				ld (script_dir),de
                           B    32    				
003B50 CD 03 17 00         B    33    				call os_check_volume_format		003B54 C0                  B    34    				ret nz
                           B    35    				
003B55 CD 85 3C 00         B    36    				call new_script
                           B    37    
                           B    38    ;----------------------------------------------
                           B    39    
                           B    40    
003B59 3A 70 6A 00         B    41    scrp_loop		ld a,(key_mod_flags)			003B5D E602                B    42    				and 2
003B5F 28 12               B    43    				jr z,no_quit_script	
003B61 CD 53 4B 00         B    44    				call os_get_key_press
003B65 FE21                B    45    				cp 021h							003B67 20 0A               B    46    				jr nz,no_quit_script
                           B    47    
003B69 21 2E 63 00         B    48    				ld hl,script_aborted_msg
003B6D CD F2 14 00         B    49    				call os_show_packed_text
003B71 AF                  B    50    				xor a							003B72 C9                  B    51    				ret
                           B    52    					
                           B    53    
003B73 CD 98 3C 00         B    54    no_quit_script	call open_script				003B77 C0                  B    55    				ret nz
003B78 CD C3 3C 00         B    56    				call read_script				003B7C C0                  B    57    				ret nz
003B7D 21 0C 6A 00         B    58    				ld hl,script_flags				003B81 CB5E                B    59    				bit scr_end,(hl)
003B83 28 02               B    60    				jr z,scr_to_do
003B85 AF                  B    61    scr_done		xor a
003B86 C9                  B    62    				ret
                           B    63    				
003B87 21 53 69 00         B    64    scr_to_do		ld hl,commandstring				003B8B 7E                  B    65    				ld a,(hl)
003B8C FE5B                B    66    				cp '['
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 144


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\script_routines.asm
003B8E 28 1C               B    67    				jr z,exec_scr_next
                           B    68    
003B90 11 05 5E 00         B    69    				ld de,if_command_txt			003B94 0603                B    70    				ld b,3
003B96 CD E2 12 00         B    71    				call os_compare_strings
003B9A 28 18               B    72    				jr z,do_exec_if
                           B    73    				
003B9C 11 08 5E 00         B    74    				ld de,end_command_txt			003BA0 0604                B    75    				ld b,4
003BA2 CD E2 12 00         B    76    				call os_compare_strings
003BA6 28 DD               B    77    				jr z,scr_done
                           B    78    			
003BA8 CD A7 0C 00         B    79    				call os_parse_cmd_chk_ps		                           B    80    				
003BAC 21 0C 6A 00         B    81    exec_scr_next	ld hl,script_flags
003BB0 CBCE                B    82    				set scr_find_new_line,(hl)
003BB2 18 A5               B    83    				jr scrp_loop
                           B    84    	
                           B    85    ;----------------------------------------------
                           B    86    
                           B    87    ; Handle "IF" instructions in the format:
                           B    88    
                           B    89    ; "IF ENVAR = VALUE LABLE"
                           B    90    ; "IF ENVAR <> VALUE LABLE"
                           B    91    ;  (LABEL must be declared at start of a script
                           B    92    ;  square brackets ([label]) with no other data
                           B    93    
003BB4 21 55 69 00         B    94    do_exec_if		ld hl,commandstring+2			003BB8 CD B3 10 00         B    95    				call os_scan_for_non_space
003BBC CA B9 3C 00         B    96    				jr z,script_error				003BC0 11 14 6A 00         B    97    				ld de,if_name_txt
003BC4 0610                B    98    				ld b,max_if_chars
003BC6 CD 01 13 00         B    99    				call os_copy_ascii_run			003BCA AF                  B   100    				xor a
003BCB 12                  B   101    				ld (de),a
                           B   102    				
003BCC CD B3 10 00         B   103    				call os_scan_for_non_space		003BD0 CA B9 3C 00         B   104    				jr z,script_error
003BD4 DD21 0C 6A 00       B   105    				ld ix,script_flags
003BD9 DDCB0096            B   106    				res scr_if_condition,(ix)
003BDD 7E                  B   107    				ld a,(hl)
003BDE FE3D                B   108    				cp '='
003BE0 28 04               B   109    				jr z,if_equals
003BE2 DDCB00D6            B   110    				set scr_if_condition,(ix)		                           B   111    
003BE6 CD AA 10 00         B   112    if_equals		call os_scan_for_space			003BEA CD B3 10 00         B   113    				call os_scan_for_non_space		003BEE CA B9 3C 00         B   114    				jr z,script_error
003BF2 11 26 6A 00         B   115    				ld de,if_value_txt				003BF6 0610                B   116    				ld b,max_if_chars
003BF8 CD 01 13 00         B   117    				call os_copy_ascii_run
003BFC AF                  B   118    				xor a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 145


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\script_routines.asm
003BFD 12                  B   119    				ld (de),a
                           B   120    				
003BFE CD B3 10 00         B   121    				call os_scan_for_non_space
003C02 CA B9 3C 00         B   122    				jr z,script_error
003C06 11 38 6A 00         B   123    				ld de,if_label_txt				003C0A 0610                B   124    				ld b,max_if_chars
003C0C CD 01 13 00         B   125    				call os_copy_ascii_run			003C10 AF                  B   126    				xor a
003C11 12                  B   127    				ld (de),a						                           B   128    								
003C12 21 14 6A 00         B   129    				ld hl,if_name_txt				003C16 CD A9 1B 00         B   130    				call os_get_envar				003C1A C2 AC 3B 00         B   131    				jp nz,exec_scr_next				                           B   132    								
003C1E 21 26 6A 00         B   133    				ld hl,if_value_txt
003C22 DD21 0C 6A 00       B   134    				ld ix,script_flags
003C27 DDCB0056            B   135    				bit scr_if_condition,(ix)
003C2B 20 0A               B   136    				jr nz,if_cond_diff
003C2D CD E2 12 00         B   137    				call os_compare_strings			003C31 C2 AC 3B 00         B   138    				jp nz,exec_scr_next				003C35 18 08               B   139    				jr if_cond_met
003C37 CD E2 12 00         B   140    if_cond_diff	call os_compare_strings			003C3B CA AC 3B 00         B   141    				jp z,exec_scr_next				                           B   142    
003C3F CD 85 3C 00         B   143    if_cond_met		call new_script					                           B   144    
003C43 CD 98 3C 00         B   145    find_if_label	call open_script				003C47 C0                  B   146    				ret nz
                           B   147    
003C48 CD C3 3C 00         B   148    				call read_script
003C4C C0                  B   149    				ret nz
003C4D 21 0C 6A 00         B   150    				ld hl,script_flags
003C51 CB5E                B   151    				bit scr_end,(hl)
003C53 C2 85 3B 00         B   152    				jp nz,scr_done
                           B   153    				
003C57 21 53 69 00         B   154    				ld hl,commandstring				003C5B 7E                  B   155    				ld a,(hl)
003C5C FE5B                B   156    				cp '['
003C5E 20 1D               B   157    				jr nz,not_a_label				                           B   158    				
003C60 23                  B   159    if_find_csb		inc hl
003C61 7E                  B   160    				ld a,(hl)
003C62 B7                  B   161    				or a
003C63 28 18               B   162    				jr z,not_a_label				003C65 FE5D                B   163    				cp ']'							003C67 20 F7               B   164    				jr nz,if_find_csb
003C69 3600                B   165    				ld (hl),0						003C6B 21 54 69 00         B   166    				ld hl,commandstring+1
003C6F 11 38 6A 00         B   167    				ld de,if_label_txt				003C73 0610                B   168    				ld b,max_if_chars
003C75 CD E2 12 00         B   169    				call os_compare_strings
003C79 CA AC 3B 00         B   170    				jp z,exec_scr_next				Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 146


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\script_routines.asm
                           B   171    
003C7D 21 0C 6A 00         B   172    not_a_label		ld hl,script_flags
003C81 CBCE                B   173    				set scr_find_new_line,(hl)		003C83 18 BE               B   174    				jr find_if_label
                           B   175    											
                           B   176    ;----------------------------------------------
                           B   177    
003C85 E5                  B   178    new_script		push hl
003C86 21000000            B   179    				ld hl,0
003C8A 22 06 6A 00         B   180    				ld (script_file_offset),hl		003C8E 21 0C 6A 00         B   181    				ld hl,script_flags
003C92 CB8E                B   182    				res scr_find_new_line,(hl)		003C94 CB9E                B   183    				res scr_end,(hl)
003C96 E1                  B   184    				pop hl
003C97 C9                  B   185    				ret
                           B   186    								
                           B   187    ;----------------------------------------------
                           B   188    
003C98 CD DA 1A 00         B   189    open_script		call fs_get_dir_cluster			003C9C D5                  B   190    				push de
003C9D ED5B 03 6A 00       B   191    				ld de,(script_dir)				003CA2 CD E6 1A 00         B   192    				call fs_update_dir_cluster
                           B   193    				
003CA6 21 24 69 00         B   194    				ld hl,script_fn					003CAA CD 9B 16 00         B   195    				call os_find_file				003CAE ED53 09 6A 00       B   196    				ld (script_length),de			003CB3 D1                  B   197    				pop de
003CB4 C0                  B   198    				ret nz
003CB5 79                  B   199    				ld a,c							003CB6 B7                  B   200    				or a
003CB7 28 04               B   201    				jr z,scr_flok
                           B   202    				
003CB9 3E8C                B   203    script_error	ld a,08ch
003CBB B7                  B   204    				or a
003CBC C9                  B   205    				ret
                           B   206    				
003CBD CD E6 1A 00         B   207    scr_flok		call fs_update_dir_cluster		003CC1 AF                  B   208    				xor a
003CC2 C9                  B   209    				ret
                           B   210    				
                           B   211    ;----------------------------------------------
                           B   212    
                           B   213    
003CC3 21 53 69 00         B   214    read_script		ld hl,commandstring				003CC7 01500000            B   215    				ld bc,max_buffer_chars			003CCB 3E20                B   216    				ld a,32
003CCD CD FC 15 00         B   217    				call os_bchl_memfill
                           B   218    				
003CD1 11500000            B   219    				ld de,max_buffer_chars			003CD5 CD AA 16 00         B   220    				call os_set_load_length
                           B   221    				
003CD9 AF                  B   222    				xor a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 147


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\script_routines.asm
003CDA 2A 09 6A 00         B   223    				ld hl,(script_length)
003CDE ED5B 06 6A 00       B   224    				ld de,(script_file_offset)		003CE3 37                  B   225    				scf
003CE4 ED52                B   226    				sbc hl,de						003CE6 30 08               B   227    				jr nc,not_eoscr					003CE8 21 0C 6A 00         B   228    				ld hl,script_flags
003CEC CBDE                B   229    				set scr_end,(hl)				003CEE AF                  B   230    				xor a
003CEF C9                  B   231    				ret
003CF0 CD B2 16 00         B   232    not_eoscr		call os_set_file_pointer
                           B   233    
003CF4 21 53 69 00         B   234    				ld hl,commandstring				003CF8 CD C8 16 00         B   235    				call os_read_bytes_from_file
003CFC B7                  B   236    				or a			
003CFD 28 03               B   237    				jr z,scr_load_ok
003CFF FECC                B   238    				cp 0cch							003D01 C0                  B   239    				ret nz							                           B   240    
003D02 21 0C 6A 00         B   241    scr_load_ok		ld hl,script_flags
003D06 CB4E                B   242    				bit scr_find_new_line,(hl)		003D08 20 17               B   243    				jr nz,scr_fnl					                           B   244    
003D0A 21 53 69 00         B   245    				ld hl,commandstring				003D0E 0650                B   246    				ld b,max_buffer_chars
003D10 7E                  B   247    scr_fcr			ld a,(hl)
003D11 FE20                B   248    				cp 32
003D13 38 05               B   249    				jr c,scr_gotclcr
003D15 23                  B   250    				inc hl
003D16 10 F8               B   251    				djnz scr_fcr
003D18 AF                  B   252    				xor a
003D19 C9                  B   253    				ret
003D1A 3620                B   254    scr_gotclcr		ld (hl),32						003D1C 23                  B   255    				inc hl
003D1D 10 FB               B   256    				djnz scr_gotclcr
003D1F AF                  B   257    				xor a
003D20 C9                  B   258    				ret
                           B   259    
003D21 FD2A 06 6A 00       B   260    scr_fnl			ld iy,(script_file_offset)
003D26 21 53 69 00         B   261    				ld hl,commandstring	
003D2A 7E                  B   262    scr_find_cr		ld a,(hl)						003D2B B7                  B   263    				or a
003D2C 20 07               B   264    				jr nz,scr_neocl					003D2E FD22 06 6A 00       B   265    scr_eocl		ld (script_file_offset),iy
003D33 18 8E               B   266    				jr read_script				
003D35 FE20                B   267    scr_neocl		cp 20h							003D37 38 05               B   268    				jr c,scr_got_cr
003D39 23                  B   269    				inc hl
003D3A FD23                B   270    				inc iy
003D3C 18 EC               B   271    				jr scr_find_cr
                           B   272    				
003D3E 7E                  B   273    scr_got_cr		ld a,(hl)
003D3F B7                  B   274    				or a							Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 148


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\script_routines.asm
003D40 28 EC               B   275    				jr z,scr_eocl					003D42 FE20                B   276    				cp 20h
003D44 30 05               B   277    				jr nc,scr_got_ch				003D46 23                  B   278    				inc hl
003D47 FD23                B   279    				inc iy
003D49 18 F3               B   280    				jr scr_got_cr
                           B   281    
003D4B FD22 06 6A 00       B   282    scr_got_ch		ld (script_file_offset),iy
003D50 21 0C 6A 00         B   283    				ld hl,script_flags				003D54 CB8E                B   284    				res scr_find_new_line,(hl)
003D56 C3 C3 3C 00         B   285    				jr read_script
                           B   286    
                           B   287    
                           B   288    ;----------------------------------------------
                           B   289    
                           B   290    		
                           B   291    				
                           B   292    				
                           B   293    				
                           B   294    				
                           B   295    				
                           A  3727    	
                           A  3728    ;----------------------------------------------
                           A  3729    ; Storage Device Drivers
                           A  3730    ;----------------------------------------------
                           A  3731    
                           B     0    	include		'prose_sdcard_driver_v110.asm'	                           B     1    ;----------------------------------------------
                           B     2    ; Low level Z80 MMC/SDC/SDHC card access routin
                           B     3    ;----------------------------------------------
                           B     4    ;
                           B     5    ; V1.10 - SDHC support added
                           B     6    ;
                           B     7    ; Limitations:
                           B     8    ; ------------
                           B     9    ; Does not check for block size
                           B    10    ;
                           B    11    ; Somewhat arbitrary timimg due to quirks of my
                           B    12    ; which means the data from the card following 
                           B    13    ; byte is skipped by the send_command routine.)
                           B    14    
                           B    15    
                           B    16    ;----------------------------------------------
                           B    17    ;
                           B    18    ; Key Routines:      Input Parameters          
                           B    19    ; -------------      ----------------          
                           B    20    ; sd_initialize		no arguments required      
                           B    21    ; sd_read_sector	[sector_lba0-3]				                           B    22    ; sd_write_sector	[sector_lba0-3]    			                           B    23    ;
                           B    24    ; (Assume all other registers are trashed.)
                           B    25    ;
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 149


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
                           B    26    ;----------------------------------------------
                           B    27    
                           B    28    ; Routines respond with Zero Flag set if operat
                           B    29    
                           B    30    ; $01 - SPI mode failed	 
                           B    31    ; $10 - MMC init failed	
                           B    32    ; $11 - SD init failed	
                           B    33    ; $12 - SDHC init failed	
                           B    34    ; $13 - voltage range bad	
                           B    35    ; $14 - check pattern bad
                           B    36    ; $20 - illegal command
                           B    37    ; $21 - bad command response
                           B    38    ; $22 - data token timeout
                           B    39    ; $23 - write timeout
                           B    40    ; $24 - write failed
                           B    41    ;
                           B    42    ;----------------------------------------------
                           B    43    
                           B    44    ; Define "sector_buffer" in main code (512 byte
                           B    45    
                           B    46    ;----------------------------------------------
                           B    47    
       00000041            B    48    CMD1	equ 40h + 1
       00000049            B    49    CMD9	equ 40h + 9
       0000004A            B    50    CMD10	equ 40h + 10
       0000004D            B    51    CMD13	equ 40h + 13
       00000051            B    52    CMD17	equ 40h + 17
       00000058            B    53    CMD24	equ 40h + 24
       00000069            B    54    ACMD41	equ 40h + 41
       00000077            B    55    CMD55	equ 40h + 55
       0000007A            B    56    CMD58	equ 40h + 58
                           B    57    
       00000001            B    58    sd_error_spi_mode_failed		equ 01h
                           B    59    
       00000010            B    60    sd_error_mmc_init_failed		equ 10h
       00000011            B    61    sd_error_sd_init_failed			equ 11h
       00000012            B    62    sd_error_sdhc_init_failed		equ 12h
       00000013            B    63    sd_error_vrange_bad				equ 13h
       00000014            B    64    sd_error_check_pattern_bad		equ 14h
                           B    65    
       00000020            B    66    sd_error_illegal_command		equ 20h
       00000021            B    67    sd_error_bad_command_response	equ 21h
       00000022            B    68    sd_error_data_token_timeout		equ 22h
       00000023            B    69    sd_error_write_timeout			equ 23h
       00000024            B    70    sd_error_write_failed			equ 24h
                           B    71    
                           B    72    ;----------------------------------------------
                           B    73    ; PROSE STANDARD DRIVER HEADER
                           B    74    ;----------------------------------------------
                           B    75    
003D5A C3 6E 3D 00         B    76    sd_card_driver	jp sd_initialize			; $
003D5E C3 90 3D 00         B    77    				jp sd_read_sector			; $
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 150


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
003D62 C3 96 3D 00         B    78    				jp sd_write_sector			; $
003D66 53445F43 41524400   B    79    				db "SD_CARD",0				; $
                           B    80    
                           B    81    ;----------------------------------------------
                           B    82    ; SD Card INITIALIZE code begins...
                           B    83    ;----------------------------------------------
                           B    84    
003D6E CD 9C 3D 00         B    85    sd_initialize	call sd_init_main
003D72 B7                  B    86    				or a						; i
003D73 28 05               B    87    				jr z,sd_inok
003D75 CD 2D 41 00         B    88    				call sd_power_off			; i
003D79 C9                  B    89    				ret
                           B    90    
003D7A CD 32 41 00         B    91    sd_inok			call sd_spi_port_fast		; o
                           B    92    
003D7E CD FE 3E 00         B    93    				call sd_read_cid			; a
003D82 20 06               B    94    				jr nz,sd_done
003D84 E5                  B    95    				push hl						; c
003D85 CD 67 3E 00         B    96    				call sd_read_csd
003D89 E1                  B    97    				pop hl
                           B    98    
003D8A CD 15 41 00         B    99    sd_done			call sd_deselect_card		; R
003D8E B7                  B   100    				or a						; I
003D8F C9                  B   101    				ret				 
                           B   102    
                           B   103    ;----------------------------------------------
                           B   104    		
003D90 CD 82 3F 00         B   105    sd_read_sector	call sd_read_sector_main
003D94 18 F4               B   106    				jr sd_done
                           B   107    
                           B   108    ;----------------------------------------------
                           B   109    	
003D96 CD A8 3F 00         B   110    sd_write_sector	call sd_write_sector_main
003D9A 18 EE               B   111    				jr sd_done
                           B   112    	
                           B   113    ;----------------------------------------------
                           B   114    	
003D9C AF                  B   115    sd_init_main	xor a							003D9D 32 AC 40 00         B   116    				ld (sd_card_info),a			
                           B   117    
003DA1 CD 2D 41 00         B   118    				call sd_power_off				                           B   119    				
003DA5 11004000            B   120    				ld de,16384						003DA9 CD 79 47 00         B   121    				call hwsc_time_delay
                           B   122    							
003DAD CD 21 41 00         B   123    				call sd_power_on				                           B   124    
003DB1 11830000            B   125    				ld de,131						003DB5 CD 79 47 00         B   126    				call hwsc_time_delay
                           B   127    				
003DB9 060A                B   128    				ld b,10							003DBB CD 31 40 00         B   129    sd_ecilp		call sd_send_eight_clocks
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 151


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
003DBF 10 FA               B   130    				djnz sd_ecilp
                           B   131    				
003DC1 21 80 40 00         B   132    				ld hl,CMD0_string				003DC5 CD 49 40 00         B   133    				call sd_send_command_string		003DC9 FE01                B   134    				cp 01h							003DCB 28 03               B   135    				jr z,sd_spi_mode_ok
                           B   136    				
003DCD 3E01                B   137    				ld a,sd_error_spi_mode_failed
003DCF C9                  B   138    				ret		
                           B   139    
                           B   140    ; ---- CARD IS IN IDLE MODE -------------------
                           B   141    
003DD0 21 86 40 00         B   142    sd_spi_mode_ok	ld hl,CMD8_string				003DD4 CD 49 40 00         B   143    				call sd_send_command_string
003DD8 FE01                B   144    				cp 01h
003DDA 20 52               B   145    				jr nz,sd_sdc_init				                           B   146    
003DDC 0604                B   147    				ld b,4
003DDE CD 71 40 00         B   148    				call sd_read_bytes_to_sector_bu
003DE2 3E01                B   149    				ld a,1
003DE4 23                  B   150    				inc hl
003DE5 23                  B   151    				inc hl
003DE6 BE                  B   152    				cp (hl)							003DE7 28 03               B   153    				jr z,sd_vrok
003DE9 3E13                B   154    				ld a,sd_error_vrange_bad
003DEB C9                  B   155    				ret				
                           B   156    
003DEC 3EAA                B   157    sd_vrok			ld a,0aah
003DEE 23                  B   158    				inc hl
003DEF BE                  B   159    				cp (hl)
003DF0 28 03               B   160    				jr z,sd_check_pattern_ok
003DF2 3E14                B   161    				ld a,sd_error_check_pattern_bad
003DF4 C9                  B   162    				ret
                           B   163    				
003DF5                     B   164    sd_check_pattern_ok
                           B   165    
                           B   166    ;------ SDHC CARD CAN WORK AT 2.7v - 3.6v -----
                           B   167    	
003DF5 01401F00            B   168    				ld bc,8000						                           B   169    
003DF9 3E77                B   170    sdhc_iwl		ld a,CMD55						003DFB CD 38 40 00         B   171    				call sd_send_command_null_args
                           B   172    				
003DFF 21 8C 40 00         B   173    				ld hl,ACMD41HCS_string			003E03 CD 49 40 00         B   174    				call sd_send_command_string
003E07 28 0C               B   175    				jr z,sdhc_init_ok				003E09 CB57                B   176    				bit 2,a
003E0B 20 05               B   177    				jr nz,sdhc_if					                           B   178    				
003E0D 0B                  B   179    				dec bc
003E0E 78                  B   180    				ld a,b
003E0F B1                  B   181    				or c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 152


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
003E10 20 E7               B   182    				jr nz,sdhc_iwl
                           B   183    				
003E12 3E12                B   184    sdhc_if			ld a,sd_error_sdhc_init_failed	003E14 C9                  B   185    				ret
                           B   186    				
003E15                     B   187    sdhc_init_ok
                           B   188    
                           B   189    ;------ SDHC CARD IS INITIALIZED --------------
                           B   190    
003E15 3E7A                B   191    				ld a,CMD58						003E17 CD 38 40 00         B   192    				call sd_send_command_null_args
                           B   193    					
003E1B 0604                B   194    				ld b,4							003E1D CD 71 40 00         B   195    				call sd_read_bytes_to_sector_bu
003E21 7E                  B   196    				ld a,(hl)
003E22 E640                B   197    				and 040h						003E24 0F                  B   198    				rrca
003E25 0F                  B   199    				rrca 
003E26 F602                B   200    				or 00000010b				
003E28 32 AC 40 00         B   201    				ld (sd_card_info),a				003E2C AF                  B   202    				xor a							003E2D C9                  B   203    				ret
                           B   204    
                           B   205    	
                           B   206    ;-------- NOT AN SDHC CARD, TRY SD INIT -------
                           B   207    
003E2E 01401F00            B   208    sd_sdc_init		ld bc,8000						                           B   209    
003E32 3E77                B   210    sd_iwl			ld a,CMD55						003E34 CD 38 40 00         B   211    				call sd_send_command_null_args
                           B   212    
003E38 3E69                B   213    				ld a,ACMD41						003E3A CD 38 40 00         B   214    				call sd_send_command_null_args
003E3E 28 0C               B   215    				jr z,sd_rdy						                           B   216    				
003E40 CB57                B   217    				bit 2,a				
003E42 20 10               B   218    				jr nz,sd_mmc_init				                           B   219    							
003E44 0B                  B   220    				dec bc
003E45 78                  B   221    				ld a,b
003E46 B1                  B   222    				or c
003E47 20 E9               B   223    				jr nz,sd_iwl
                           B   224    				
003E49 3E11                B   225    				ld a,sd_error_sd_init_failed	003E4B C9                  B   226    				ret
                           B   227    				
003E4C 3E01                B   228    sd_rdy			ld a,1
003E4E 32 AC 40 00         B   229    				ld (sd_card_info),a				003E52 AF                  B   230    				xor a							003E53 C9                  B   231    				ret	
                           B   232    
                           B   233    ;-------- NOT AN SDHC OR SD CARD, TRY MMC INIT 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 153


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
                           B   234    
003E54 01401F00            B   235    sd_mmc_init		ld bc,8000						                           B   236    
003E58 3E41                B   237    sdmmc_iwl		ld a,CMD1
003E5A CD 38 40 00         B   238    				call sd_send_command_null_args	003E5E C8                  B   239    				ret z							                           B   240    				
003E5F 0B                  B   241    sd_mnrdy		dec bc
003E60 78                  B   242    				ld a,b
003E61 B1                  B   243    				or c
003E62 20 F4               B   244    				jr nz,sdmmc_iwl
                           B   245    				
003E64 3E10                B   246    				ld a,sd_error_mmc_init_failed	003E66 C9                  B   247    				ret
                           B   248    	
                           B   249    ;----------------------------------------------
                           B   250    
                           B   251    ; Returns BC:DE = Total capacity of card (in se
                           B   252    
003E67                     B   253    sd_read_csd
                           B   254    				
003E67 3E49                B   255    				ld a,CMD9						003E69 CD 38 40 00         B   256    				call sd_send_command_null_args	003E6D C2 8E 3F 00         B   257    				jp nz,sd_bcr_error				                           B   258    
003E71 CD 1C 40 00         B   259    				call sd_wait_data_token			003E75 C2 97 3F 00         B   260    				jp nz,sd_dt_timeout	
                           B   261    
003E79 0612                B   262    sd_id_ok		ld b,18							003E7B CD 71 40 00         B   263    				call sd_read_bytes_to_sector_bu
                           B   264    
003E7F DD210008 00         B   265    				ld ix,sector_buffer				003E84 DDCB0076            B   266    				bit 6,(ix)
003E88 28 19               B   267    				jr z,sd_csd_v1
                           B   268    
003E8A DD6E09              B   269    sd_csd_v2		ld l,(ix+9)						003E8D DD6608              B   270    				ld h,(ix+8)
003E90 23                  B   271    				inc hl
003E91 3E0A                B   272    				ld a,10
003E93 01000000            B   273    				ld bc,0
003E97 4029                B   274    sd_csd2lp		add.sis hl,hl
003E99 CB11                B   275    				rl c
003E9B CB10                B   276    				rl b
003E9D 3D                  B   277    				dec a
003E9E 20 F7               B   278    				jr nz,sd_csd2lp
003EA0 EB                  B   279    				ex de,hl						003EA1 AF                  B   280    				xor a
003EA2 C9                  B   281    				ret
                           B   282    				
003EA3 DD7E06              B   283    sd_csd_v1		ld a,(ix+6)						003EA6 E603                B   284    				and 00000011b
003EA8 57                  B   285    				ld d,a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 154


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
003EA9 DD5E07              B   286    				ld e,(ix+7)
003EAC DD7E08              B   287    				ld a,(ix+8)
003EAF E6C0                B   288    				and 11000000b
003EB1 CB27                B   289    				sla a
003EB3 CB13                B   290    				rl e
003EB5 CB12                B   291    				rl d
003EB7 CB27                B   292    				sla a
003EB9 CB13                B   293    				rl e
003EBB CB12                B   294    				rl d							                           B   295    				
003EBD DD7E09              B   296    				ld a,(ix+9)
003EC0 E603                B   297    				and 00000011b
003EC2 47                  B   298    				ld b,a
003EC3 DD7E0A              B   299    				ld a,(ix+10)
003EC6 E680                B   300    				and 10000000b
003EC8 CB27                B   301    				sla a
003ECA CB10                B   302    				rl b							                           B   303    				
003ECC 04                  B   304    				inc b
003ECD 04                  B   305    				inc b
003ECE 21000000            B   306    				ld hl,0
003ED2 CB23                B   307    sd_cmsh			sla e
003ED4 CB12                B   308    				rl d
003ED6 CB15                B   309    				rl l
003ED8 CB14                B   310    				rl h
003EDA 10 F6               B   311    				djnz sd_cmsh					                           B   312    				
003EDC DD7E05              B   313    				ld a,(ix+5)
003EDF E60F                B   314    				and 00001111b					003EE1 28 17               B   315    				jr z,sd_nbls
003EE3 47                  B   316    				ld b,a
003EE4 CB23                B   317    sd_blsh			sla e
003EE6 CB12                B   318    				rl d
003EE8 CB15                B   319    				rl l
003EEA CB14                B   320    				rl h
003EEC 10 F6               B   321    				djnz sd_blsh					                           B   322    				
003EEE 0609                B   323    				ld b,9							003EF0 CB3C                B   324    sd_cbsec		srl h
003EF2 CB1D                B   325    				rr l
003EF4 CB1A                B   326    				rr d
003EF6 CB1B                B   327    				rr e
003EF8 10 F6               B   328    				djnz sd_cbsec
                           B   329    
003EFA E5                  B   330    sd_nbls			push hl
003EFB C1                  B   331    				pop bc							003EFC AF                  B   332    				xor a
003EFD C9                  B   333    				ret
                           B   334    
                           B   335    ;----------------------------------------------
                           B   336    
003EFE                     B   337    sd_read_cid
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 155


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
                           B   338    	
                           B   339    ; Returns HL = Pointer to device ID string
                           B   340    
003EFE 3E4A                B   341    				ld a,CMD10						003F00 CD 38 40 00         B   342    				call sd_send_command_null_args
003F04 C2 8E 3F 00         B   343    				jp nz,sd_bcr_error				                           B   344    
003F08 CD 1C 40 00         B   345    				call sd_wait_data_token			003F0C C2 97 3F 00         B   346    				jp nz,sd_dt_timeout
                           B   347    					
003F10 0612                B   348    				ld b,18
003F12 CD 71 40 00         B   349    				call sd_read_bytes_to_sector_bu
                           B   350    				
003F16 21030800            B   351    				ld hl,sector_buffer+03h			003F1A 11200800            B   352    				ld de,sector_buffer+20h
003F1E 01050000            B   353    				ld bc,5
003F22 3A AC 40 00         B   354    				ld a,(sd_card_info)
003F26 E60F                B   355    				and 0fh
003F28 20 01               B   356    				jr nz,sd_cn5
003F2A 03                  B   357    				inc bc
003F2B EDB0                B   358    sd_cn5			ldir
003F2D E5                  B   359    				push hl
003F2E D5                  B   360    				push de
003F2F 21 92 40 00         B   361    				ld hl,sd_vnchars
003F33 01140000            B   362    				ld bc,20
003F37 EDB0                B   363    				ldir
003F39 D1                  B   364    				pop de
003F3A E1                  B   365    				pop hl
003F3B 13                  B   366    				inc de
003F3C 13                  B   367    				inc de
003F3D 7E                  B   368    				ld a,(hl)
003F3E CB3F                B   369    				srl a
003F40 CB3F                B   370    				srl a
003F42 CB3F                B   371    				srl a
003F44 CB3F                B   372    				srl a
003F46 C630                B   373    				add a,30h						003F48 12                  B   374    				ld (de),a
003F49 13                  B   375    				inc de
003F4A 13                  B   376    				inc de
003F4B 7E                  B   377    				ld a,(hl)
003F4C E60F                B   378    				and 0fh
003F4E C630                B   379    				add a,30h
003F50 12                  B   380    				ld (de),a						003F51 13                  B   381    				inc de
003F52 13                  B   382    				inc de
003F53 13                  B   383    				inc de
003F54 13                  B   384    				inc de
003F55 13                  B   385    				inc de
003F56 23                  B   386    				inc hl
003F57 0604                B   387    				ld b,4
003F59 7E                  B   388    sd_snulp		ld a,(hl)						003F5A CB3F                B   389    				srl a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 156


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
003F5C CB3F                B   390    				srl a
003F5E CB3F                B   391    				srl a
003F60 CB3F                B   392    				srl a
003F62 C630                B   393    				add a,30h
003F64 FE3A                B   394    				cp 3ah
003F66 38 02               B   395    				jr c,sd_hvl1
003F68 C607                B   396    				add a,07h
003F6A 12                  B   397    sd_hvl1			ld (de),a
003F6B 13                  B   398    				inc de
003F6C 7E                  B   399    				ld a,(hl)
003F6D E60F                B   400    				and 0fh
003F6F C630                B   401    				add a,30h
003F71 FE3A                B   402    				cp 3ah
003F73 38 02               B   403    				jr c,sd_hvl2
003F75 C607                B   404    				add a,07h
003F77 12                  B   405    sd_hvl2			ld (de),a
003F78 13                  B   406    				inc de
003F79 23                  B   407    				inc hl
003F7A 10 DD               B   408    				djnz sd_snulp
                           B   409    				
003F7C 21200800            B   410    				ld hl,sector_buffer+20h			003F80 AF                  B   411    				xor a
003F81 C9                  B   412    				ret
                           B   413    
                           B   414    ;----------------------------------------------
                           B   415    ; SD Card READ SECTOR code begins...
                           B   416    ;----------------------------------------------
                           B   417    	
003F82                     B   418    sd_read_sector_main
                           B   419    
                           B   420    ; 512 bytes are returned in sector buffer
                           B   421    
003F82 CD F3 3F 00         B   422    				call sd_set_sector_addr
                           B   423    
003F86 3E51                B   424    				ld a,CMD17						003F88 CD 44 40 00         B   425    				call sd_send_command_current_ar
003F8C 28 03               B   426    				jr z,sd_rscr_ok					003F8E 3E21                B   427    sd_bcr_error	ld a,sd_error_bad_command_respo
003F90 C9                  B   428    				ret
                           B   429    
003F91 CD 1C 40 00         B   430    sd_rscr_ok		call sd_wait_data_token			003F95 28 03               B   431    				jr z,sd_dt_ok					003F97 3E22                B   432    sd_dt_timeout	ld a,sd_error_data_token_timeou
003F99 C9                  B   433    				ret
                           B   434    
003F9A 21000800            B   435    sd_dt_ok		ld hl,sector_buffer
003F9E CD C2 40 00         B   436    				call sd_read_513_bytes			003FA2 CD BA 40 00         B   437    				call sd_get_byte
                           B   438    				
003FA6 AF                  B   439    				xor a							003FA7 C9                  B   440    				ret
                           B   441    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 157


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
                           B   442    ;----------------------------------------------
                           B   443    ; SD Card WRITE SECTOR code begins...
                           B   444    ;----------------------------------------------
                           B   445    
003FA8                     B   446    sd_write_sector_main
                           B   447    	
003FA8 CD F3 3F 00         B   448    				call sd_set_sector_addr
                           B   449    
003FAC 3E58                B   450    				ld a,CMD24						003FAE CD 44 40 00         B   451    				call sd_send_command_current_ar
003FB2 20 DA               B   452    				jr nz,sd_bcr_error				                           B   453    				
003FB4 CD 31 40 00         B   454    				call sd_send_eight_clocks		                           B   455    
003FB8 3EFE                B   456    				ld a,0feh
003FBA CD AD 40 00         B   457    				call sd_send_byte				                           B   458    
003FBE 21000800            B   459    				ld hl,sector_buffer
003FC2 CD F1 40 00         B   460    				call sd_write_512_bytes			003FC6 CD 31 40 00         B   461    				call sd_send_eight_clocks		003FCA CD 31 40 00         B   462    				call sd_send_eight_clocks		                           B   463    		
003FCE CD BA 40 00         B   464    				call sd_get_byte				003FD2 E61F                B   465    				and 1fh
003FD4 CB3F                B   466    				srl a
003FD6 FE02                B   467    				cp 02h
003FD8 28 03               B   468    				jr z,sd_wr_ok
                           B   469    
003FDA 3E24                B   470    sd_write_fail	ld a,sd_error_write_failed
003FDC C9                  B   471    				ret
                           B   472    
003FDD 01FFFF00            B   473    sd_wr_ok		ld bc,65535						003FE1 CD BA 40 00         B   474    sd_wcbsy		call sd_get_byte				003FE5 FEFF                B   475    				cp 0ffh
003FE7 20 02               B   476    				jr nz,sd_busy
003FE9 AF                  B   477    				xor a							003FEA C9                  B   478    				ret
                           B   479    				
003FEB 0B                  B   480    sd_busy			dec bc
003FEC 78                  B   481    				ld a,b
003FED B1                  B   482    				or c
003FEE 20 F1               B   483    				jr nz,sd_wcbsy
                           B   484    
003FF0                     B   485    sd_card_busy_timeout
                           B   486    
003FF0 3E23                B   487    				ld a,sd_error_write_timeout
003FF2 C9                  B   488    				ret	
                           B   489    
                           B   490    ;----------------------------------------------
                           B   491    
003FF3                     B   492    sd_set_sector_addr
                           B   493    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 158


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
003FF3 21 31 69 00         B   494    				ld hl,sector_lba0
003FF7 4E                  B   495    				ld c,(hl)
003FF8 23                  B   496    				inc hl
003FF9 5E                  B   497    				ld e,(hl)
003FFA 23                  B   498    				inc hl
003FFB 56                  B   499    				ld d,(hl)
003FFC 23                  B   500    				inc hl
003FFD 46                  B   501    				ld b,(hl)					; s
                           B   502    
003FFE 3A AC 40 00         B   503    				ld a,(sd_card_info)
004002 E610                B   504    				and 10h
004004 20 0A               B   505    				jr nz,lbatoargs				; i
004006 69                  B   506    				ld l,c
004007 63                  B   507    				ld h,e
004008 7A                  B   508    				ld a,d						; o
004009 4029                B   509    				add.sis hl,hl
00400B 8F                  B   510    				adc a,a	
00400C EB                  B   511    				ex de,hl
00400D 47                  B   512    				ld b,a
00400E 0E00                B   513    				ld c,0
004010 21 A7 40 00         B   514    lbatoargs		ld hl,cmd_generic_args
004014 70                  B   515    				ld (hl),b
004015 23                  B   516    				inc hl
004016 72                  B   517    				ld (hl),d
004017 23                  B   518    				inc hl
004018 73                  B   519    				ld (hl),e
004019 23                  B   520    				inc hl
00401A 71                  B   521    				ld (hl),c
00401B C9                  B   522    				ret
                           B   523    	
                           B   524    	
                           B   525    ;----------------------------------------------
                           B   526    
00401C                     B   527    sd_wait_data_token
                           B   528    
00401C C5                  B   529    				push bc
00401D 01401F00            B   530    				ld bc,8000				
004021 CD BA 40 00         B   531    sd_wdt			call sd_get_byte			; r
004025 FEFE                B   532    				cp 0feh
004027 28 06               B   533    				jr z,sd_gdt
004029 0B                  B   534    				dec bc
00402A 78                  B   535    				ld a,b
00402B B1                  B   536    				or c
00402C 20 F3               B   537    				jr nz,sd_wdt
00402E 0C                  B   538    				inc c						; d
00402F C1                  B   539    sd_gdt			pop bc
004030 C9                  B   540    				ret
                           B   541    
                           B   542    ;----------------------------------------------
                           B   543    
004031                     B   544    sd_send_eight_clocks
                           B   545    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 159


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
004031 3EFF                B   546    				ld a,0ffh
004033 CD AD 40 00         B   547    				call sd_send_byte
004037 C9                  B   548    				ret
                           B   549    
                           B   550    ;----------------------------------------------
                           B   551    
                           B   552    
004038                     B   553    sd_send_command_null_args
                           B   554    
004038 21000000            B   555    				ld hl,0
00403C 22 A7 40 00         B   556    				ld (cmd_generic_args),hl	; c
004040 22 A8 40 00         B   557    				ld (cmd_generic_args+1),hl	
                           B   558    				
                           B   559    				
                           B   560    	
004044                     B   561    sd_send_command_current_args
                           B   562    	
004044 21 A6 40 00         B   563    				ld hl,cmd_generic
004048 77                  B   564    				ld (hl),a
                           B   565    
                           B   566    
                           B   567    
004049                     B   568    sd_send_command_string
                           B   569    
                           B   570    ; set HL = location of 6 byte command string
                           B   571    ; returns command response in A (ZF set if $00)
                           B   572    
                           B   573    
004049 CD 0D 41 00         B   574    				call sd_select_card				                           B   575    						
00404D CD 31 40 00         B   576    				call sd_send_eight_clocks		                           B   577    				
004051 C5                  B   578    				push bc
004052 0606                B   579    				ld b,6
004054 7E                  B   580    sd_sclp			ld a,(hl)
004055 CD AD 40 00         B   581    				call sd_send_byte				004059 23                  B   582    				inc hl
00405A 10 F8               B   583    				djnz sd_sclp
00405C C1                  B   584    				pop bc
                           B   585    				
00405D CD BA 40 00         B   586    				call sd_get_byte				                           B   587    					
                           B   588    
004061                     B   589    sd_wait_valid_response
                           B   590    				
004061 C5                  B   591    				push bc
004062 0600                B   592    				ld b,0
004064 CD BA 40 00         B   593    sd_wncrl		call sd_get_byte				004068 CB7F                B   594    				bit 7,a							00406A 28 02               B   595    				jr z,sd_gcr
00406C 10 F6               B   596    				djnz sd_wncrl
                           B   597    								
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 160


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
00406E B7                  B   598    sd_gcr			or a							00406F C1                  B   599    				pop bc
004070 C9                  B   600    				ret
                           B   601    				
                           B   602    	
                           B   603    ;----------------------------------------------
                           B   604    
004071                     B   605    sd_read_bytes_to_sector_buffer
                           B   606    
004071 21000800            B   607    				ld hl,sector_buffer
                           B   608    	
004075                     B   609    sd_read_bytes
                           B   610    
                           B   611    ; set HL to dest address for data
                           B   612    ; set B to number of bytes required  
                           B   613    
004075 E5                  B   614    				push hl
004076 CD BA 40 00         B   615    sd_rblp			call sd_get_byte
00407A 77                  B   616    				ld (hl),a
00407B 23                  B   617    				inc hl
00407C 10 F8               B   618    				djnz sd_rblp
00407E E1                  B   619    				pop hl
00407F C9                  B   620    				ret
                           B   621    	
                           B   622    ;----------------------------------------------
                           B   623    
                           B   624    ; This data can be placed in ROM:
                           B   625    
004080 40000000 0095       B   626    CMD0_string			db 40h,00h,00h,00h,00h,95h
004086 48000001 AA87       B   627    CMD8_string			db 48h,00h,00h,01h,aah,87h
00408C 69400000 0001       B   628    ACMD41HCS_string	db 69h,40h,00h,00h,00h,01h
004092 2076782E 7820534E   B   629    sd_vnchars			db " vx.x SN:00000000 ",0,0
00409A 3A303030 30303030 
0040A2 30200000 
                           B   630    
                           B   631    
                           B   632    ; The following variables need to be placed in 
                           B   633    
0040A6 00                  B   634    cmd_generic			db 00h
0040A7 00000000            B   635    cmd_generic_args	db 00h,00h,00h,00h
0040AB 01                  B   636    cmd_generic_crc		db 01h
                           B   637    
0040AC 00                  B   638    sd_card_info		db 0	; Bit [4] = CCS (bl
                           B   639    
                           B   640    
                           B   641    ;==============================================
                           B   642    
                           B   643    ;----------------------------------------------
                           B   644    
                           C     0    include "ez80p_sdcard_code.asm"				;EZ
                           C     1    ;----------------------------------------------
                           C     2    ; eZ80P Specific SD card low-level routines v1.
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 161


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_sdcard_code.asm
                           C     3    ;----------------------------------------------
                           C     4    
0040AD                     C     5    sd_send_byte
                           C     6    
                           C     7    ;Put byte to send to card in A
                           C     8    
0040AD ED3903              C     9    					out0 (port_sdc_data),a
0040B0 C5                  C    10    					push bc
0040B1 0E01                C    11    					ld c,port_hw_flags
0040B3 ED7410              C    12    sd_wb_loop			tstio 1<<sdc_serializer_bus
0040B6 20 FB               C    13    					jr nz,sd_wb_loop			0040B8 C1                  C    14    					pop bc
0040B9 C9                  C    15    					ret
                           C    16    
                           C    17    ;----------------------------------------------
                           C    18    
0040BA                     C    19    sd_get_byte
                           C    20    
                           C    21    ; Returns byte read from card in A
                           C    22    
0040BA CD 31 40 00         C    23    					call sd_send_eight_clocks
0040BE ED3803              C    24    					in0 a,(port_sdc_data)
0040C1 C9                  C    25    					ret
                           C    26    
                           C    27    ;----------------------------------------------
                           C    28    
0040C2                     C    29    sd_read_513_bytes
                           C    30    
                           C    31    ; optimized sector read
                           C    32    ; set hl = dest location for bytes
                           C    33    ; note: The last byte read (CRC) is not put int
                           C    34    
0040C2 C5                  C    35    					push bc
0040C3 D5                  C    36    					push de
0040C4 1EFF                C    37    					ld e,0ffh
0040C6 ED1903              C    38    					out0 (port_sdc_data),e		0040C9 0E01                C    39    					ld c,port_hw_flags			0040CB 0600                C    40    					ld b,0						                           C    41    
0040CD ED7410              C    42    sd_wser_loop1		tstio 1<<sdc_serializer_bus
0040D0 20 FB               C    43    					jr nz,sd_wser_loop1			0040D2 DB03                C    44    					in a,(port_sdc_data)		                           C    45    					
0040D4 ED1903              C    46    sd_512_loop			out0 (port_sdc_data),e		0040D7 77                  C    47    					ld (hl),a					0040D8 23                  C    48    					inc hl						                           C    49    					
0040D9 ED7410              C    50    sd_wser_loop2		tstio 1<<sdc_serializer_bus
0040DC 20 FB               C    51    					jr nz,sd_wser_loop2			0040DE DB03                C    52    					in a,(port_sdc_data)		                           C    53    												0040E0 ED1903              C    54    					out0 (port_sdc_data),e		Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 162


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_sdcard_code.asm
0040E3 77                  C    55    					ld (hl),a					0040E4 23                  C    56    					inc hl						                           C    57    					
0040E5 ED7410              C    58    sd_wser_loop3		tstio 1<<sdc_serializer_bus
0040E8 20 FB               C    59    					jr nz,sd_wser_loop3			0040EA DB03                C    60    					in a,(port_sdc_data)		                           C    61    					
0040EC 10 E6               C    62    					djnz sd_512_loop
0040EE D1                  C    63    					pop de
0040EF C1                  C    64    					pop bc
0040F0 C9                  C    65    					ret
                           C    66    					
                           C    67    ;----------------------------------------------
                           C    68    					
0040F1                     C    69    sd_write_512_bytes
                           C    70    
                           C    71    ;optimized sector write
                           C    72    ;set hl = source location for bytes
                           C    73    
0040F1 0E01                C    74    					ld c,port_hw_flags			0040F3 0600                C    75    					ld b,0						0040F5 7E                  C    76    					ld a,(hl)
0040F6 ED3903              C    77    sd_wr512_loop		out0 (port_sdc_data),a
0040F9 23                  C    78    					inc hl
0040FA 7E                  C    79    					ld a,(hl)
0040FB ED7410              C    80    sd_wser_loop4		tstio 1<<sdc_serializer_bus
0040FE 20 FB               C    81    					jr nz,sd_wser_loop4			004100 ED3903              C    82    					out0 (port_sdc_data),a
004103 23                  C    83    					inc hl
004104 7E                  C    84    					ld a,(hl)
004105 ED7410              C    85    sd_wser_loop5		tstio 1<<sdc_serializer_bus
004108 20 FB               C    86    					jr nz,sd_wser_loop5
00410A 10 EA               C    87    					djnz sd_wr512_loop
00410C C9                  C    88    					ret
                           C    89    
                           C    90    			
                           C    91    ;----------------------------------------------
                           C    92    ; SD Card control
                           C    93    ;----------------------------------------------
                           C    94    
00410D F5                  C    95    sd_select_card		push af
00410E 3E02                C    96    					ld a,00h+(1<<sdc_cs)		004110 ED3902              C    97    sd_wr_sdc_ctrl		out0 (port_sdc_ctrl),a
004113 F1                  C    98    					pop af
004114 C9                  C    99    					ret
                           C   100    
                           C   101    
004115 F5                  C   102    sd_deselect_card	push af
004116 3E82                C   103    					ld a,080h+(1<<sdc_cs)		004118 ED3902              C   104    					out0 (port_sdc_ctrl),a
00411B CD 31 40 00         C   105    					call sd_send_eight_clocks	00411F F1                  C   106    					pop af
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 163


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_sdcard_code.asm
004120 C9                  C   107    					ret
                           C   108    
                           C   109    
004121 F5                  C   110    sd_power_on			push af
004122 3A040000            C   111    					ld a,(1<<sdc_speed)			004126 ED3902              C   112    					out0 (port_sdc_ctrl),a		004129 3E83                C   113    					ld a,80h+(1<<sdc_power)+(1<
00412B 18 E3               C   114    					jr sd_wr_sdc_ctrl			                           C   115    
                           C   116    
00412D F5                  C   117    sd_power_off		push af
00412E 3E01                C   118    					ld a,00h+(1<<sdc_power)		004130 18 DE               C   119    					jr sd_wr_sdc_ctrl			                           C   120    
                           C   121    
004132 F5                  C   122    sd_spi_port_fast	push af
004133 3E84                C   123    					ld a,80h+(1<<sdc_speed)		004135 18 D9               C   124    					jr sd_wr_sdc_ctrl
                           C   125    
                           C   126    
                           C   127    ;----------------------------------------------
                           B   646    
                           B   647    ;----------------------------------------------
                           A  3733    	
                           A  3734    ; Additional storage device driver source can b
                           A  3735    ; Also add the driver's PROSE header address la
                           A  3736    
004137 5A3D00              A  3737    driver_table		dw24 sd_card_driver	; Stora
00413A 000000              A  3738    					dw24 0 				; Stora
00413D 000000              A  3739    					dw24 0				; Stora
004140 000000              A  3740    					dw24 0				; Stora
                           A  3741    					
004143 000000              A  3742    					dw24 0				; Essen
                           A  3743    					
                           A  3744    ;----------------------------------------------
                           A  3745    ; IO routines
                           A  3746    ;----------------------------------------------
                           A  3747    
                           B     0    	include		'ez80p_interrupt_code.asm'		                           B     1    ;----------------------------------------------
                           B     2    ; ez80p interrupt code v0.06 (MADL mode)
                           B     3    ;----------------------------------------------
                           B     4    
004146                     B     5    set_irq_vectors
                           B     6    		
004146 AF                  B     7    				xor a
004147 ED47                B     8    				ld i,a
                           B     9    						
004149 DD216F00 00         B    10    				ld ix,06fh						00414E 0623                B    11    				ld b,35
004150 DD3600C3            B    12    init_ivect_lp1	ld (ix),0c3h					004154 ED3204              B    13    				lea ix,ix+4
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 164


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
004157 10 F7               B    14    				djnz init_ivect_lp1
                           B    15    				
004159 216F0000            B    16    				ld hl,6fh						00415D DD210A00 00         B    17    				ld ix,0ah
004162 11040000            B    18    				ld de,4
004166 060B                B    19    				ld b,11							004168 DD7500              B    20    init_ivect_lp2	ld (ix),l
00416B DD7401              B    21    				ld (ix+1),h
00416E 19                  B    22    				add hl,de
00416F ED3202              B    23    				lea ix,ix+2
004172 10 F4               B    24    				djnz init_ivect_lp2
004174 DD213000 00         B    25    				ld ix,30h						004179 0619                B    26    				ld b,25
00417B DD7500              B    27    init_ivect_lp3	ld (ix),l
00417E DD7401              B    28    				ld (ix+1),h
004181 19                  B    29    				add hl,de
004182 ED3202              B    30    				lea ix,ix+2
004185 10 F4               B    31    				djnz init_ivect_lp3
                           B    32    				
004187 21 C7 41 00         B    33    				ld hl,int_routine				00418B 229C0000            B    34    				ld (09ch),hl					                           B    35    
00418F 3EC3                B    36    				ld a,0c3h						004191 32660000            B    37    				ld (066h),a
004195 21 87 43 00         B    38    				ld hl,nmi_routine				004199 22670000            B    39    				ld (067h),hl
00419D C9                  B    40    				ret
                           B    41    
                           B    42    
                           B    43    ;----------------------------------------------
                           B    44    
                           B    45    
00419E 21 8A 68 00         B    46    enable_os_irqs	ld hl,devices_connected			0041A2 CB46                B    47    				bit 0,(hl)
0041A4 C4 AF 41 00         B    48    				call nz,enable_kb_irq
0041A8 CB4E                B    49    				bit 1,(hl)
0041AA C4 B5 41 00         B    50    				call nz,enable_ms_irq
0041AE C9                  B    51    				ret
                           B    52    
                           B    53    
0041AF 3E81                B    54    enable_kb_irq	ld a,10000001b
0041B1 ED3905              B    55    				out0 (port_irq_ctrl),a			0041B4 C9                  B    56    				ret
                           B    57    
0041B5 3E82                B    58    enable_ms_irq	ld a,10000010b
0041B7 ED3905              B    59    				out0 (port_irq_ctrl),a			0041BA C9                  B    60    				ret
                           B    61    
0041BB 3E02                B    62    disable_ms_irq	ld a,00000010b
0041BD ED3905              B    63    				out0 (port_irq_ctrl),a			0041C0 C9                  B    64    				ret
                           B    65    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 165


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
0041C1 3E3F                B    66    disable_irqs	ld a,00111111b
0041C3 ED3905              B    67    				out0 (port_irq_ctrl),a			0041C6 C9                  B    68    				ret
                           B    69    			
                           B    70    ;----------------------------------------------
                           B    71    
                           B    72    
0041C7                     B    73    int_routine
0041C7 F5                  B    74    				push af							0041C8 ED3807              B    75    				in0 a,(port_ps2_ctrl)			0041CB CB67                B    76    				bit 4,a
0041CD C4 0B 42 00         B    77    				call nz,kb_interrupt_handler
0041D1 ED3807              B    78    				in0 a,(port_ps2_ctrl)			0041D4 CB6F                B    79    				bit 5,a
0041D6 C4 AD 42 00         B    80    				call nz,ms_interrupt_handler
0041DA F1                  B    81    				pop af
0041DB FB                  B    82    				ei								0041DC 5BED4D              B    83    				reti.l							                           B    84    
                           B    85    
                           B    86    
0041DF                     B    87    prt1_irq_handler
                           B    88    
0041DF F5                  B    89    				push af
0041E0 D5                  B    90    				push de
0041E1 E5                  B    91    				push hl
0041E2 ED3883              B    92    				in0 a,(TMR1_CTL)				                           B    93    				
0041E5 2A A0 68 00         B    94    				ld hl,(milliseconds_counter)
0041E9 23                  B    95    				inc hl
0041EA 22 A0 68 00         B    96    				ld (milliseconds_counter),hl
0041EE 11E80300            B    97    				ld de,1000
0041F2 AF                  B    98    				xor a
0041F3 ED52                B    99    				sbc hl,de
0041F5 20 0D               B   100    				jr nz,sec_count_ok
0041F7 22 A0 68 00         B   101    				ld (milliseconds_counter),hl
0041FB 2A A3 68 00         B   102    				ld hl,(seconds_counter)
0041FF 23                  B   103    				inc hl
004200 22 A3 68 00         B   104    				ld (seconds_counter),hl
004204 E1                  B   105    sec_count_ok	pop hl
004205 D1                  B   106    				pop de
004206 F1                  B   107    				pop af
004207 FB                  B   108    				ei
004208 5BED4D              B   109    				reti.l
                           B   110    
                           B   111    ;----------------------------------------------
                           B   112    ; Keyboard IRQ routine v0.03
                           B   113    ;----------------------------------------------
                           B   114    
00420B                     B   115    kb_interrupt_handler
                           B   116    
                           B   117    ;--- irq test ---------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 166


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
                           B   118    
                           B   119    ;				push bc
                           B   120    ;				ld a,0ffh
                           B   121    ;				ld (hw_palette),a
                           B   122    ;				ld b,0
                           B   123    ;testlp1		djnz testlp1
                           B   124    ;				ld a,0
                           B   125    ;				ld (hw_palette),a
                           B   126    ;				pop bc
                           B   127    				
                           B   128    ;--- end of test ------------------------------
                           B   129    
                           B   130    
00420B E5                  B   131    				push hl							00420C C5                  B   132    				push bc
                           B   133    				
00420D ED3802              B   134    key_loop		in0 a,(port_keyboard_data)		004210 47                  B   135    				ld b,a
                           B   136    
004211 3A 6E 6A 00         B   137    				ld a,(key_release_mode)
004215 B7                  B   138    				or a
004216 28 20               B   139    				jr z,key_pressed
                           B   140    			
004218 78                  B   141    				ld a,b							004219 FEE0                B   142    				cp 0e0h							00421B 28 61               B   143    				jr z,kirq_done	
00421D FEE1                B   144    				cp 0e1h
00421F 28 5D               B   145    				jr z,kirq_done	
                           B   146    				
004221 CD 88 42 00         B   147    				call qualifiers					004225 7D                  B   148    				ld a,l
004226 2F                  B   149    				cpl
004227 6F                  B   150    				ld l,a
004228 3A 70 6A 00         B   151    				ld a,(key_mod_flags)
00422C A5                  B   152    				and l							00422D 32 70 6A 00         B   153    				ld (key_mod_flags),a
004231 AF                  B   154    				xor a
004232 32 6E 6A 00         B   155    				ld (key_release_mode),a
004236 18 46               B   156    				jr kirq_done
                           B   157    	
                           B   158    
004238 78                  B   159    key_pressed		ld a,b							004239 FEE0                B   160    				cp 0e0h							00423B 28 41               B   161    				jr z,kirq_done	
00423D FEE1                B   162    				cp 0e1h
00423F 28 3D               B   163    				jr z,kirq_done	
                           B   164    			
004241 FEF0                B   165    				cp 0f0h							004243 20 08               B   166    				jr nz,not_krel
004245 3E01                B   167    				ld a,1							004247 32 6E 6A 00         B   168    				ld (key_release_mode),a			00424B 18 31               B   169    				jr kirq_done
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 167


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
                           B   170    	
                           B   171    	
00424D CD 88 42 00         B   172    not_krel		call qualifiers					004251 3A 70 6A 00         B   173    				ld a,(key_mod_flags)			004255 B5                  B   174    				or l
004256 32 70 6A 00         B   175    				ld (key_mod_flags),a			00425A 68                  B   176    				ld l,b
00425B 01000000            B   177    				ld bc,0
00425F 3A 6C 6A 00         B   178    				ld a,(key_buf_wr_idx)
004263 4F                  B   179    				ld c,a
004264 7D                  B   180    				ld a,l
004265 21 4C 6A 00         B   181    				ld hl,scancode_buffer
004269 09                  B   182    				add hl,bc
00426A 77                  B   183    				ld (hl),a						00426B 0E10                B   184    				ld c,16
00426D 09                  B   185    				add hl,bc
00426E 3A 70 6A 00         B   186    				ld a,(key_mod_flags)			004272 77                  B   187    				ld (hl),a	
004273 3A 6C 6A 00         B   188    				ld a,(key_buf_wr_idx)
004277 3C                  B   189    				inc a
004278 E60F                B   190    				and 15
00427A 32 6C 6A 00         B   191    				ld (key_buf_wr_idx),a			                           B   192    				
00427E ED3807              B   193    kirq_done		in0 a,(port_ps2_ctrl)			004281 CB67                B   194    				bit 4,a	
004283 20 88               B   195    				jr nz,key_loop
                           B   196    
004285 C1                  B   197    				pop bc
004286 E1                  B   198    				pop hl
004287 C9                  B   199    				ret
                           B   200    
                           B   201    
004288 2E40                B   202    qualifiers		ld l,040h		;apps
00428A FE2F                B   203    				cp 02fh
00428C C8                  B   204    				ret z
                           B   205    			
00428D 2E20                B   206    				ld l,020h		;r gui
00428F FE27                B   207    				cp 027h
004291 C8                  B   208    				ret z
                           B   209    			
004292 2E10                B   210    				ld l,010h		;r shift
004294 FE59                B   211    				cp 059h
004296 C8                  B   212    				ret z
                           B   213    			
004297 2E08                B   214    				ld l,08h		; alt
004299 FE11                B   215    				cp 011h
00429B C8                  B   216    				ret z
                           B   217    			
00429C 2E04                B   218    				ld l,04h		; l gui
00429E FE1F                B   219    				cp 01fh
                           B   220    			
0042A0 2E02                B   221    				ld l,02h		;l ctrl / r ctr
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 168


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
0042A2 FE14                B   222    				cp 14h
0042A4 C8                  B   223    				ret z
                           B   224    			
0042A5 2E01                B   225    				ld l,01h		;l shift
0042A7 FE12                B   226    				cp 12h
0042A9 C8                  B   227    				ret z
                           B   228    				
0042AA 2E00                B   229    				ld l,0
0042AC C9                  B   230    				ret
                           B   231    
                           B   232    ;----------------------------------------------
                           B   233    ; Mouse IRQ routine v0.03
                           B   234    ;----------------------------------------------
                           B   235    
0042AD                     B   236    ms_interrupt_handler
                           B   237    
                           B   238    ;--- irq test ---------------------------------
                           B   239    
                           B   240    ;				push bc
                           B   241    ;				ld a,0ffh
                           B   242    ;				ld (hw_palette),a
                           B   243    ;				ld b,0
                           B   244    ;testlp1		djnz testlp1
                           B   245    ;				ld a,0
                           B   246    ;				ld (hw_palette),a
                           B   247    ;				pop bc
                           B   248    				
                           B   249    ;--- end of test ------------------------------
                           B   250    
                           B   251    
0042AD C5                  B   252    				push bc							0042AE D5                  B   253    				push de							0042AF E5                  B   254    				push hl							                           B   255    							
0042B0 11000000            B   256    ms_loop			ld de,0		
0042B4 3A 79 6A 00         B   257    				ld a,(mouse_packet_index)		0042B8 5F                  B   258    				ld e,a
0042B9 21 75 6A 00         B   259    				ld hl,mouse_packet	
0042BD 19                  B   260    				add hl,de
0042BE ED3806              B   261    				in0 a,(port_mouse_data)
0042C1 77                  B   262    				ld (hl),a
                           B   263    								
0042C2 21 74 6A 00         B   264    				ld hl,mouse_packet_size
0042C6 1C                  B   265    				inc e							0042C7 7B                  B   266    				ld a,e
0042C8 BE                  B   267    				cp (hl)
0042C9 C2 72 43 00         B   268    				jr nz,msubpkt
                           B   269    
0042CD 3A 75 6A 00         B   270    				ld a,(mouse_packet)				0042D1 4F                  B   271    				ld c,a	
0042D2 E607                B   272    				and 0111b
0042D4 32 7A 6A 00         B   273    				ld (mouse_buttons),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 169


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
                           B   274    				
0042D8 11000000            B   275    				ld de,0							0042DC CB61                B   276    				bit 4,c
0042DE 28 01               B   277    				jr z,mxsignpos
0042E0 1B                  B   278    				dec de
0042E1 3A 76 6A 00         B   279    mxsignpos		ld a,(mouse_packet+1)
0042E5 5F                  B   280    				ld e,a
0042E6 2A 7B 6A 00         B   281    				ld hl,(mouse_disp_x)
0042EA 19                  B   282    				add hl,de
0042EB 22 7B 6A 00         B   283    				ld (mouse_disp_x),hl
                           B   284    				
0042EF 2A 89 6A 00         B   285    				ld hl,(mouse_abs_x)				0042F3 19                  B   286    				add hl,de
0042F4 22 89 6A 00         B   287    				ld (mouse_abs_x),hl
0042F8 CB61                B   288    				bit 4,c
0042FA 20 12               B   289    				jr nz,m_abs_neg_x
0042FC ED5B 83 6A 00       B   290    				ld de,(mouse_window_size_x)
004301 AF                  B   291    				xor a
004302 ED52                B   292    				sbc hl,de
004304 38 13               B   293    				jr c,m_abs_x_ok
004306 1B                  B   294    				dec de
004307 ED53 89 6A 00       B   295    				ld (mouse_abs_x),de
00430C 18 0B               B   296    				jr m_abs_x_ok
00430E 29                  B   297    m_abs_neg_x		add hl,hl
00430F 30 08               B   298    				jr nc,m_abs_x_ok
004311 21000000            B   299    				ld hl,0
004315 22 89 6A 00         B   300    				ld (mouse_abs_x),hl
                           B   301    				
                           B   302    				
004319 11000000            B   303    m_abs_x_ok		ld de,0							00431D CB69                B   304    				bit 5,c
00431F 28 01               B   305    				jr z,mysignpos
004321 1B                  B   306    				dec de
004322 3A 77 6A 00         B   307    mysignpos		ld a,(mouse_packet+2)
004326 5F                  B   308    				ld e,a
004327 2A 7E 6A 00         B   309    				ld hl,(mouse_disp_y)			00432B AF                  B   310    				xor a							00432C ED52                B   311    				sbc hl,de
00432E 22 7E 6A 00         B   312    				ld (mouse_disp_y),hl
                           B   313    				
004332 2A 8C 6A 00         B   314    				ld hl,(mouse_abs_y)				004336 AF                  B   315    				xor a
004337 ED52                B   316    				sbc hl,de
004339 22 8C 6A 00         B   317    				ld (mouse_abs_y),hl
00433D CB69                B   318    				bit 5,c
00433F 28 12               B   319    				jr z,m_abs_neg_y
004341 ED5B 86 6A 00       B   320    				ld de,(mouse_window_size_y)
004346 AF                  B   321    				xor a
004347 ED52                B   322    				sbc hl,de
004349 38 13               B   323    				jr c,m_abs_y_ok
00434B 1B                  B   324    				dec de
00434C ED53 8C 6A 00       B   325    				ld (mouse_abs_y),de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 170


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
004351 18 0B               B   326    				jr m_abs_y_ok
004353 29                  B   327    m_abs_neg_y		add hl,hl
004354 30 08               B   328    				jr nc,m_abs_y_ok
004356 21000000            B   329    				ld hl,0
00435A 22 8C 6A 00         B   330    				ld (mouse_abs_y),hl
00435E                     B   331    m_abs_y_ok			
                           B   332    
00435E 21 78 6A 00         B   333    				ld hl,mouse_packet+3			004362 3A 81 6A 00         B   334    				ld a,(mouse_wheel)
004366 86                  B   335    				add a,(hl)
004367 32 81 6A 00         B   336    				ld (mouse_wheel),a
                           B   337    				
00436B 3E01                B   338    				ld a,1
00436D 32 82 6A 00         B   339    				ld (mouse_updated),a			                           B   340    				
004371 AF                  B   341    				xor a
004372 32 79 6A 00         B   342    msubpkt			ld (mouse_packet_index),a
                           B   343    				
004376 ED3807              B   344    				in0 a,(port_ps2_ctrl)			004379 CB6F                B   345    				bit 5,a
00437B C2 B0 42 00         B   346    				jr nz,ms_loop				
                           B   347    				
00437F CD 19 47 00         B   348    				call hwsc_update_pointer_sprite
                           B   349    
004383 E1                  B   350    				pop hl
004384 D1                  B   351    				pop de
004385 C1                  B   352    				pop bc
004386 C9                  B   353    				ret
                           B   354    				
                           B   355    				
                           B   356    ;----------------------------------------------
                           B   357    ; ez80p NMI code v0.03
                           B   358    ;----------------------------------------------
                           B   359    
004387 F5                  B   360    nmi_routine		push af							004388 ED3805              B   361    				in0 a,(port_irq_flags)			00438B CB77                B   362    				bit 6,a							00438D 20 09               B   363    				jr nz,freeze
00438F 3E20                B   364    				ld a,00100000b					004391 ED3909              B   365    				out0 (port_clear_flags),a		004394 F1                  B   366    				pop af
004395 5BED45              B   367    				retn.l
                           B   368    				
004398 F1                  B   369    freeze			pop af
004399 CD 34 14 00         B   370    				call os_store_CPU_regs
                           B   371    				
00439D 21000000            B   372    				ld hl,0
0043A1 39                  B   373    				add hl,sp
0043A2 7E                  B   374    				ld a,(hl)						0043A3 E601                B   375    				and 1
0043A5 32 CA 68 00         B   376    				ld (store_adl),a
0043A9 20 0A               B   377    				jr nz,adl_freeze
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 171


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
0043AB 23                  B   378    				inc hl
0043AC 5E                  B   379    				ld e,(hl)						0043AD 23                  B   380    				inc hl
0043AE 56                  B   381    				ld d,(hl)
0043AF CD 34 16 00         B   382    				call mbase_de
0043B3 18 02               B   383    				jr got_pc
                           B   384    				
0043B5 33                  B   385    adl_freeze		inc sp
0043B6 D1                  B   386    				pop de							0043B7 ED53 C0 68 00       B   387    got_pc			ld (store_pc),de				                           B   388    				
0043BC CD DA 43 00         B   389    				call disable_button_nmi
0043C0 3E40                B   390    				ld a,01000000b
0043C2 ED3909              B   391    				out0 (port_clear_flags),a		0043C5 3E01                B   392    				ld a,1
0043C7 32 88 68 00         B   393    				ld (frozen),a
0043CB C3 56 0A 00         B   394    				jp os_cold_start				                           B   395    
                           B   396    ;----------------------------------------------
                           B   397    
                           B   398    ;nmi_routine
                           B   399    ;
                           B   400    ;				push af							                           B   401    ;				push bc
                           B   402    ;				ld a,0ffh
                           B   403    ;				ld (hw_palette),a
                           B   404    ;				ld b,0
                           B   405    ;nmi_testlp2		djnz nmi_testlp2
                           B   406    ;				ld a,0
                           B   407    ;				ld (hw_palette),a
                           B   408    ;				pop bc
                           B   409    ;				ld a,01100000b
                           B   410    ;				out0 (port_clear_flags)
                           B   411    ;				pop af
                           B   412    ;				retn.l							                           B   413    
                           B   414    
                           B   415    ;----------------------------------------------
                           B   416    
0043CF                     B   417    enable_button_nmi
                           B   418    
0043CF 3E40                B   419    				ld a,01000000b
0043D1 ED3909              B   420    				out0 (port_clear_flags),a		0043D4 3EC0                B   421    				ld a,11000000b					0043D6 ED3905              B   422    				out0 (port_irq_ctrl),a			0043D9 C9                  B   423    				ret
                           B   424    
                           B   425    
0043DA                     B   426    disable_button_nmi
                           B   427    
0043DA 3E40                B   428    				ld a,01000000b					0043DC ED3905              B   429    				out0 (port_irq_ctrl),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 172


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
0043DF C9                  B   430    				ret
                           B   431    
                           B   432    
0043E0                     B   433    disable_all_nmis
                           B   434    
0043E0 3E60                B   435    				ld a,01100000b					0043E2 ED3905              B   436    				out0 (port_irq_ctrl),a
0043E5 C9                  B   437    				ret
                           B   438    				
                           B   439    ;----------------------------------------------
                           B   440    
                           B     0    	include		'ez80p_rs232_code.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; ez80p low level RS232 code v0.03 (ADL mode)
                           B     3    ;----------------------------------------------
                           B     4    		
0043E6                     B     5    receive_serial_byte
                           B     6    
                           B     7    ; If zero flag set on return OK, A = received b
                           B     8    ; Else timed out (and also A = error $83: time 
                           B     9    
0043E6 C5                  B    10    				push bc
0043E7 3A 1E 67 00         B    11    				ld a,(serial_timeout)
0043EB 47                  B    12    				ld b,a
0043EC 3ECC                B    13    rx_set_timer	ld a,cch
0043EE ED3981              B    14    				out0 (TMR0_RR_L),a				0043F1 3E0C                B    15    				ld a,0ch
0043F3 ED3982              B    16    				out0 (TMR0_RR_H),a				0043F6 3E03                B    17    				ld a,00000011b					0043F8 ED3980              B    18    				out0 (TMR0_CTL),a				0043FB ED3880              B    19    				in0 a,(TMR0_CTL)				                           B    20    				
0043FE 0EC5                B    21    rx_byte_lp		ld c,UART0_LSR					004400 ED7401              B    22    				tstio 1							004403 20 0E               B    23    				jr nz,rx_in_buffer
004405 AF                  B    24    				xor a
004406 B0                  B    25    				or b
004407 28 13               B    26    				jr z,rx_time_out
004409 0E80                B    27    				ld c,TMR0_CTL	
00440B ED7480              B    28    				tstio 128						00440E 28 EE               B    29    				jr z,rx_byte_lp		
004410 05                  B    30    				dec b
004411 18 D9               B    31    				jr rx_set_timer
                           B    32    
004413 01C00000            B    33    rx_in_buffer	ld bc,UART0_RBR
004417 ED78                B    34    				in a,(bc)						004419 C1                  B    35    				pop bc
00441A BF                  B    36    				cp a							00441B C9                  B    37    				ret
                           B    38    
00441C C1                  B    39    rx_time_out		pop bc
00441D 3E83                B    40    				ld a,083h						Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 173


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_rs232_code.asm
00441F B7                  B    41    				or a							004420 C9                  B    42    				ret
                           B    43    
                           B    44    
                           B    45    
                           B    46    ;----------------------------------------------
                           B    47    
004421                     B    48    send_serial_byte
                           B    49    
                           B    50    ; set A to the byte to send
                           B    51    
004421 C5                  B    52    				push bc
004422 0EC5                B    53    				ld c,UART0_LSR					004424 ED7420              B    54    rs232_swait		tstio 020h						004427 28 FB               B    55    				jr z,rs232_swait
004429 01C00000            B    56    				ld bc,UART0_THR
00442D ED79                B    57    				out (c),a						00442F C1                  B    58    				pop bc
004430 C9                  B    59    				ret
                           B    60    
                           B    61    ;----------------------------------------------
                           B    62    
004431                     B    63    send_serial_bytes
                           B    64    
                           B    65    ; set D to the first byte to send
                           B    66    ; and E to the second byte to send
                           B    67    
004431 7A                  B    68    				ld a,d
004432 CD 21 44 00         B    69    				call send_serial_byte
004436 7B                  B    70    				ld a,e
004437 CD 21 44 00         B    71    				call send_serial_byte
00443B C9                  B    72    				ret
                           B    73    
                           B    74    ;----------------------------------------------
                           B    75    
00443C                     B    76    hwsc_flush_serial_buffer
                           B    77    
00443C C5                  B    78    				push bc
00443D 01C00000            B    79    				ld bc,UART0_RBR
004441 ED78                B    80    				in a,(bc)						004443 C1                  B    81    				pop bc
004444 C9                  B    82    				ret
                           B    83    
                           B    84    ;----------------------------------------------
                           B    85    		
                           B     0    	include		'ez80p_video_code.asm'
                           B     1    ;---------------------------------
                           B     2    ; ez80p-specific video code v0.10
                           B     3    ; Character Mode Routines
                           B     4    ;---------------------------------
                           B     5    
       00804000            B     6    charmap_addr	equ vram_a_addr+04000h			Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 174


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
                           B     7    
004445                     B     8    set_charmap_parameters
                           B     9    
                           B    10    ;set
                           B    11    ; a = line/pixel doubling (bit 0 = line double,
                           B    12    ; b = columns
                           B    13    ; c = rows
                           B    14    
004445 E603                B    15    				and 3
004447 32 EF 66 00         B    16    				ld (video_doubling),a
00444B 79                  B    17    				ld a,c
00444C 32 F0 66 00         B    18    				ld (charmap_rows),a
004450 78                  B    19    				ld a,b
004451 32 F3 66 00         B    20    				ld (charmap_columns),a
004455 21000000            B    21    				ld hl,0
004459 69                  B    22    				ld l,c
00445A 60                  B    23    				ld h,b
00445B ED6C                B    24    				mlt hl
00445D 29                  B    25    				add hl,hl
00445E 22 9D 68 00         B    26    				ld (charmap_size),hl
004462 11004080            B    27    				ld de,charmap_addr
004466 19                  B    28    				add hl,de
004467 22 91 68 00         B    29    				ld (free_vram_a_base),hl		                           B    30    				
00446B CD 71 44 00         B    31    				call os_set_video_hw_regs
00446F AF                  B    32    				xor a
004470 C9                  B    33    				ret
                           B    34    				
                           B    35    
004471                     B    36    os_set_video_hw_regs
                           B    37    
004471 3A EF 66 00         B    38    				ld a,(video_doubling)
004475 CB27                B    39    				sla a
004477 F618                B    40    				or 00011000b
004479 320018FF            B    41    				ld (video_control),a			00447D AF                  B    42    				xor a
00447E 320218FF            B    43    				ld (bgnd_palette_select),a
004482 3E63                B    44    				ld a,99
004484 320418FF            B    45    				ld (right_border_position),a
                           B    46    
004488 DD210010 FF         B    47    				ld ix,tilemap_parameters		00448D 21004080            B    48    				ld hl,charmap_addr
004491 DD2F00              B    49    				ld (ix),hl			   			                           B    50    
004494 21020000            B    51    				ld hl,2
004498 DD2F04              B    52    				ld (ix+04h),hl					                           B    53    				
00449B 21000008            B    54    				ld hl,80000h
00449F 11000000            B    55    				ld de,0
0044A3 3A F3 66 00         B    56    				ld a,(charmap_columns)
0044A7 5F                  B    57    				ld e,a
0044A8 AF                  B    58    				xor a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 175


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
0044A9 ED52                B    59    				sbc hl,de
0044AB AF                  B    60    				xor a
0044AC ED52                B    61    				sbc hl,de
0044AE DD2F08              B    62    				ld (ix+08h),hl					                           B    63    				
0044B1 21000000            B    64    				ld hl,0
0044B5 DD2F0C              B    65    				ld (ix+0ch),hl					                           B    66    				
0044B8 3A F3 66 00         B    67    				ld a,(charmap_columns)
0044BC 3D                  B    68    				dec a
0044BD DD7710              B    69    				ld (ix+10h),a					                           B    70    				
0044C0 3E00                B    71    				ld a,0
0044C2 DD7711              B    72    				ld (ix+11h),a					0044C5 DD7712              B    73    				ld (ix+12h),a					                           B    74    
0044C8 21 CA 66 00         B    75    				ld hl,pen_palette
0044CC CD DB 44 00         B    76    				call hswc_set_ui_colours
                           B    77    				
0044D0 CD 06 47 00         B    78    				call hwsc_reset_sprites
                           B    79    				
0044D4 AF                  B    80    				xor a
0044D5 32 9C 6A 00         B    81    				ld (os_pointer_enable),a		                           B    82    				
0044D9 AF                  B    83    				xor a							0044DA C9                  B    84    				ret
                           B    85    
                           B    86    ;----------------------------------------------
                           B    87    				
0044DB                     B    88    hswc_set_ui_colours
                           B    89    
0044DB 110000FF            B    90    				ld de,hw_palette
0044DF 01200000            B    91    				ld bc,16*2
0044E3 EDB0                B    92    				ldir
0044E5 AF                  B    93    				xor a							0044E6 C9                  B    94    				ret
                           B    95    
                           B    96    
                           B    97    ;----------------------------------------------
                           B    98    
0044E7                     B    99    hwsc_clear_screen
                           B   100    
0044E7 21004080            B   101    				ld hl,charmap_addr				0044EB 3620                B   102    				ld (hl),32						0044ED 23                  B   103    				inc hl
0044EE CD 0D 45 00         B   104    				call get_fill_attr
0044F2 77                  B   105    				ld (hl),a
0044F3 23                  B   106    				inc hl
0044F4 EB                  B   107    				ex de,hl
0044F5 21004080            B   108    				ld hl,charmap_addr
0044F9 ED4B 9D 68 00       B   109    				ld bc,(charmap_size)
0044FE 0B                  B   110    				dec bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 176


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
0044FF 0B                  B   111    				dec bc
004500 EDB0                B   112    				ldir
                           B   113    				
004502 01000000            B   114    				ld bc,0
004506 ED43 35 69 00       B   115    				ld (cursor_y),bc
00450B AF                  B   116    				xor a							00450C C9                  B   117    				ret
                           B   118    				
                           B   119    				
00450D D5                  B   120    get_fill_attr	push de
00450E 3A C6 66 00         B   121    				ld a,(current_pen)
004512 E60F                B   122    				and 0fh
004514 5F                  B   123    				ld e,a
004515 3A C8 66 00         B   124    				ld a,(background_colour)
004519 0F                  B   125    				rrca
00451A 0F                  B   126    				rrca
00451B 0F                  B   127    				rrca
00451C 0F                  B   128    				rrca
00451D E6F0                B   129    				and 0f0h
00451F B3                  B   130    				or e
004520 D1                  B   131    				pop de
004521 C9                  B   132    				ret
                           B   133    				
                           B   134    
                           B   135    ;----------------------------------------------
                           B   136    
004522                     B   137    hwsc_scroll_up	
                           B   138    				
004522 C5                  B   139    				push bc
004523 D5                  B   140    				push de
004524 E5                  B   141    				push hl
                           B   142    
004525 2A 9D 68 00         B   143    				ld hl,(charmap_size)
004529 ED5B F3 66 00       B   144    				ld de,(charmap_columns)
00452E AF                  B   145    				xor a
00452F ED52                B   146    				sbc hl,de
004531 ED52                B   147    				sbc hl,de						004533 E5                  B   148    				push hl
004534 C1                  B   149    				pop bc							004535 21004080            B   150    				ld hl,charmap_addr
004539 E5                  B   151    				push hl
00453A 19                  B   152    				add hl,de
00453B 19                  B   153    				add hl,de
00453C D1                  B   154    				pop de
00453D EDB0                B   155    				ldir
                           B   156    				
00453F EB                  B   157    				ex de,hl						004540 E5                  B   158    				push hl
004541 3620                B   159    				ld (hl),32
004543 23                  B   160    				inc hl
004544 CD 0D 45 00         B   161    				call get_fill_attr
004548 77                  B   162    				ld (hl),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 177


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
004549 2A F3 66 00         B   163    				ld hl,(charmap_columns)
00454D 2B                  B   164    				dec hl
00454E 29                  B   165    				add hl,hl
00454F E5                  B   166    				push hl
004550 C1                  B   167    				pop bc
004551 E1                  B   168    				pop hl
004552 E5                  B   169    				push hl
004553 D1                  B   170    				pop de
004554 13                  B   171    				inc de
004555 13                  B   172    				inc de
004556 EDB0                B   173    				ldir
                           B   174    				
004558 E1                  B   175    				pop hl
004559 D1                  B   176    				pop de
00455A C1                  B   177    				pop bc
00455B AF                  B   178    				xor a							00455C C9                  B   179    				ret
                           B   180    
                           B   181    
                           B   182    ;----------------------------------------------
                           B   183    
00455D                     B   184    hwsc_plot_char
                           B   185    
                           B   186    ; Set:
                           B   187    ; ----
                           B   188    ; A = ascii char
                           B   189    ; B = x character coordinate 
                           B   190    ; C = y character coordinate
                           B   191    
00455D E5                  B   192    				push hl							00455E D5                  B   193    				push de
00455F F5                  B   194    				push af
                           B   195    
004560 3A F0 66 00         B   196    				ld a,(charmap_rows)				004564 3D                  B   197    				dec a
004565 B9                  B   198    				cp c							004566 38 08               B   199    				jr c,win_err
004568 3A F3 66 00         B   200    				ld a,(charmap_columns)
00456C 3D                  B   201    				dec a
00456D B8                  B   202    				cp b
00456E 30 07               B   203    				jr nc,win_ok
004570 F1                  B   204    win_err			pop af
004571 D1                  B   205    				pop de
004572 E1                  B   206    				pop hl
004573 3E88                B   207    				ld a,88h						004575 B7                  B   208    				or a
004576 C9                  B   209    				ret
                           B   210    				
004577 2A F3 66 00         B   211    win_ok			ld hl,(charmap_columns)			00457B 61                  B   212    				ld h,c
00457C ED6C                B   213    				mlt hl
00457E 11000000            B   214    				ld de,0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 178


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
004582 58                  B   215    				ld e,b
004583 19                  B   216    				add hl,de
004584 29                  B   217    				add hl,hl
004585 11004080            B   218    				ld de,charmap_addr
004589 19                  B   219    				add hl,de
00458A F1                  B   220    				pop af
00458B 77                  B   221    				ld (hl),a
00458C 23                  B   222    				inc hl
00458D 3A C6 66 00         B   223    				ld a,(current_pen)
004591 77                  B   224    				ld (hl),a
004592 D1                  B   225    				pop de
004593 E1                  B   226    				pop hl
004594 AF                  B   227    				xor a
004595 C9                  B   228    				ret
                           B   229    				
                           B   230    				
                           B   231    ;----------------------------------------------
                           B   232    
004596                     B   233    hwsc_remove_cursor
                           B   234    
004596 3A EC 66 00         B   235    				ld a,(cursor_present)			00459A B7                  B   236    				or a
00459B C8                  B   237    				ret z
00459C ED4B 35 69 00       B   238    				ld bc,(cursor_y)
0045A1 CD 04 46 00         B   239    				call hwsc_get_charmap_addr_xy
0045A5 3A EB 66 00         B   240    				ld a,(char_under_cursor)
0045A9 77                  B   241    				ld (hl),a
0045AA AF                  B   242    				xor a
0045AB 32 EC 66 00         B   243    				ld (cursor_present),a
0045AF C9                  B   244    				ret
                           B   245    
                           B   246    
0045B0                     B   247    hwsc_draw_cursor
                           B   248    								
0045B0 3A EC 66 00         B   249    				ld a,(cursor_present)			0045B4 B7                  B   250    				or a
0045B5 C0                  B   251    				ret nz
0045B6 3C                  B   252    				inc a
0045B7 32 EC 66 00         B   253    				ld (cursor_present),a
                           B   254    				
0045BB ED4B 35 69 00       B   255    				ld bc,(cursor_y)
0045C0 CD 04 46 00         B   256    				call hwsc_get_charmap_addr_xy
0045C4 7E                  B   257    				ld a,(hl)						0045C5 32 EB 66 00         B   258    				ld (char_under_cursor),a		0045C9 36FF                B   259    				ld (hl),ffh						                           B   260    				
0045CB 11400000            B   261    				ld de,64						0045CF 57                  B   262    				ld d,a
0045D0 ED5C                B   263    				mlt de
0045D2 FD210000 80         B   264    				ld iy,vram_a_addr				0045D7 FD19                B   265    				add iy,de						                           B   266    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 179


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
0045D9 21400000            B   267    				ld hl,64
0045DD 3A EE 66 00         B   268    				ld a,(cursor_image_char)
0045E1 67                  B   269    				ld h,a
0045E2 ED6C                B   270    				mlt hl
0045E4 11000080            B   271    				ld de,vram_a_addr
0045E8 19                  B   272    				add hl,de
                           B   273    				
0045E9 DD21C03F 80         B   274    				ld ix,vram_a_addr+03fc0h
0045EE 11080000            B   275    				ld de,8
0045F2 0608                B   276    				ld b,8
0045F4 FD7E00              B   277    cur_loop		ld a,(iy)						0045F7 AE                  B   278    				xor (hl)						0045F8 DD7700              B   279    				ld (ix),a						0045FB FD19                B   280    				add iy,de
0045FD DD19                B   281    				add ix,de
0045FF 19                  B   282    				add hl,de
004600 10 F2               B   283    				djnz cur_loop
                           B   284    				
004602 AF                  B   285    				xor a
004603 C9                  B   286    				ret
                           B   287    				
                           B   288    
                           B   289    ;----------------------------------------------
                           B   290    
004604                     B   291    hwsc_get_charmap_addr_xy
                           B   292    
                           B   293    ; returns address of charmap in xHL for charact
                           B   294    ; and attrmap in xDE
                           B   295    				
004604 2A F3 66 00         B   296    				ld hl,(charmap_columns)			004608 61                  B   297    				ld h,c
004609 ED6C                B   298    				mlt hl
00460B 11000000            B   299    				ld de,0
00460F 58                  B   300    				ld e,b
004610 19                  B   301    				add hl,de
004611 29                  B   302    				add hl,hl
004612 11004080            B   303    				ld de,charmap_addr
004616 19                  B   304    				add hl,de
004617 E5                  B   305    				push hl
004618 D1                  B   306    				pop de
004619 13                  B   307    				inc de
00461A AF                  B   308    				xor a
00461B C9                  B   309    				ret
                           B   310    								
                           B   311    ;----------------------------------------------
                           B   312    
00461C                     B   313    hwsc_chars_left
                           B   314    
                           B   315    ; moves characters (in character map) on the cu
                           B   316    
00461C E5                  B   317    				push hl
00461D D5                  B   318    				push de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 180


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
00461E C5                  B   319    				push bc
                           B   320    				
00461F 2A F3 66 00         B   321    				ld hl,(charmap_columns)
004623 3A 35 69 00         B   322    				ld a,(cursor_y)
004627 67                  B   323    				ld h,a
004628 ED6C                B   324    				mlt hl
00462A 11000000            B   325    				ld de,0
00462E 58                  B   326    				ld e,b
00462F 19                  B   327    				add hl,de
004630 29                  B   328    				add hl,hl
004631 11004080            B   329    				ld de,charmap_addr
004635 19                  B   330    				add hl,de
                           B   331    				
004636 3A F3 66 00         B   332    				ld a,(charmap_columns)
00463A 90                  B   333    				sub b
00463B CB27                B   334    				sla a
00463D 01000000            B   335    				ld bc,0
004641 4F                  B   336    				ld c,a
004642 E5                  B   337    				push hl
004643 D1                  B   338    				pop de
004644 1B                  B   339    				dec de
004645 1B                  B   340    				dec de
004646 EDB0                B   341    				ldir
                           B   342    				
004648 3E20                B   343    				ld a,32						;pu
00464A 12                  B   344    				ld (de),a
00464B 13                  B   345    				inc de
00464C CD 0D 45 00         B   346    				call get_fill_attr
004650 12                  B   347    				ld (de),a
                           B   348    				
004651 C1                  B   349    				pop bc
004652 D1                  B   350    				pop de
004653 E1                  B   351    				pop hl
004654 C9                  B   352    				ret
                           B   353    
                           B   354    
                           B   355    ;----------------------------------------------
                           B   356    
                           B   357    
004655                     B   358    hwsc_chars_right
                           B   359    
                           B   360    ; moves characters on current line right from c
                           B   361    
004655 C5                  B   362    				push bc
004656 D5                  B   363    				push de
004657 E5                  B   364    				push hl
                           B   365    	
004658 21 36 69 00         B   366    				ld hl,cursor_x				
00465C 3A F3 66 00         B   367    				ld a,(charmap_columns)
004660 3D                  B   368    				dec a
004661 BE                  B   369    				cp (hl)			
004662 28 30               B   370    				jr z,chright_end
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 181


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
004664 46                  B   371    				ld b,(hl)
                           B   372    				
004665 2A F3 66 00         B   373    				ld hl,(charmap_columns)
004669 3A 35 69 00         B   374    				ld a,(cursor_y)
00466D 3C                  B   375    				inc a							00466E 67                  B   376    				ld h,a
00466F ED6C                B   377    				mlt hl
004671 29                  B   378    				add hl,hl
004672 11004080            B   379    				ld de,charmap_addr
004676 19                  B   380    				add hl,de					
004677 2B                  B   381    				dec hl							004678 E5                  B   382    				push hl
004679 D1                  B   383    				pop de							00467A 2B                  B   384    				dec hl
00467B 2B                  B   385    				dec hl							00467C 3A F3 66 00         B   386    				ld a,(charmap_columns)
004680 90                  B   387    				sub b
004681 3D                  B   388    				dec a
004682 CB27                B   389    				sla a
004684 01000000            B   390    				ld bc,0
004688 4F                  B   391    				ld c,a							004689 EDB8                B   392    				lddr
00468B 23                  B   393    				inc hl							00468C 3620                B   394    				ld (hl),32
00468E 23                  B   395    				inc hl
00468F CD 0D 45 00         B   396    				call get_fill_attr
004693 77                  B   397    				ld (hl),a
                           B   398    							
004694 E1                  B   399    chright_end		pop hl	
004695 D1                  B   400    				pop de
004696 C1                  B   401    				pop bc
004697 C9                  B   402    				ret
                           B   403    
                           B   404    ;----------------------------------------------
                           B   405    
                           B   406    
004698                     B   407    hwsc_charline_to_command_string	
                           B   408    				
                           B   409    				
004698 2A F3 66 00         B   410    				ld hl,(charmap_columns)			00469C 3A 35 69 00         B   411    				ld a,(cursor_y)
0046A0 67                  B   412    				ld h,a
0046A1 ED6C                B   413    				mlt hl
0046A3 29                  B   414    				add hl,hl
0046A4 11004080            B   415    				ld de,charmap_addr
0046A8 19                  B   416    				add hl,de
0046A9 11 53 69 00         B   417    				ld de,commandstring
0046AD 0650                B   418    				ld b,max_buffer_chars			0046AF 7E                  B   419    copy_to_cmdline	ld a,(hl)
0046B0 12                  B   420    				ld (de),a
0046B1 13                  B   421    				inc de
0046B2 23                  B   422    				inc hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 182


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
0046B3 23                  B   423    				inc hl
0046B4 10 F9               B   424    				djnz copy_to_cmdline
0046B6 C9                  B   425    				ret
                           B   426    
                           B   427    ;----------------------------------------------
                           B   428    
                           B   429    
0046B7 C5                  B   430    hwsc_wait_vrt	push bc
                           B   431    
0046B8 0E01                B   432    				ld c,1
0046BA ED0909              B   433    				out0 (port_clear_flags),c
                           B   434    
0046BD 0E01                B   435    				ld c,port_hw_flags
0046BF ED7420              B   436    ewaitvrtlp1		tstio 1<<vrt
0046C2 28 FB               B   437    				jr z,ewaitvrtlp1
                           B   438    				
0046C4 C1                  B   439    				pop bc
0046C5 BF                  B   440    				cp a							0046C6 C9                  B   441    				ret
                           B   442    
                           B   443    
                           B   444    ;----------------------------------------------
                           B   445    
                           B     0    	include		'ez80p_misc_code.asm'
                           B     1    ;----------------------------------
                           B     2    ;Misc eZ80p specific routines v0.06
                           B     3    ;----------------------------------
                           B     4    
0046C7                     B     5    hwsc_default_hw_settings
                           B     6    
                           B     7    ; Set up eZ80 Wait states
                           B     8    
0046C7 3E48                B     9    					ld a,01001000b				0046C9 ED39AA              B    10    					out0 (CS0_CTL),a
0046CC 3E00                B    11    					ld a,000h					0046CE ED39A8              B    12    					out0 (CS0_LBR),a
0046D1 3EFF                B    13    					ld a,0ffh	
0046D3 ED39A9              B    14    					out0 (CS0_UBR),a			                           B    15    
0046D6 3E58                B    16    					ld a,01011000b
0046D8 ED39AD              B    17    					out0 (CS1_CTL),a			0046DB 3E00                B    18    					ld a,0
0046DD ED39AB              B    19    					out0 (CS1_LBR),a			                           B    20    
                           B    21    ;set up eZ80 GPIO ports
                           B    22    
0046E0 3EFF                B    23    					ld a,0ffh
0046E2 ED399F              B    24    					out0 (PC_DDR),a				0046E5 AF                  B    25    					xor a
0046E6 ED39A0              B    26    					out0 (PC_ALT1),a
0046E9 ED39A1              B    27    					out0 (PC_ALT2),a
                           B    28    					
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 183


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
0046EC 3EFF                B    29    					ld a,0ffh					0046EE ED39A3              B    30    					out0 (PD_DDR),a				0046F1 AF                  B    31    					xor a	
0046F2 ED39A4              B    32    					out0 (PD_ALT1),a			0046F5 3E0F                B    33    					ld a,00fh				
0046F7 ED39A5              B    34    					out0 (PD_ALT2),a			                           B    35    
                           B    36    ;set up eZ80 timer
                           B    37    
0046FA ED3892              B    38    					in0 a,(TMR_ISS)
0046FD E6FC                B    39    					and 11111100b
0046FF F601                B    40    					or  00000001b
004701 ED3992              B    41    					out0 (TMR_ISS),a			                           B    42    					
004704 AF                  B    43    					xor a
004705 C9                  B    44    					ret
                           B    45    
                           B    46    
                           B    47    ;----------------------------------------------
                           B    48    
004706 AF                  B    49    hwsc_reset_sprites	xor a
004707 320118FF            B    50    					ld (sprite_control),a		                           B    51    					
00470B 210008FF            B    52    					ld hl,hw_sprite_registers	00470F 01000100            B    53    					ld bc,8*32
004713 AF                  B    54    					xor a
004714 CD FC 15 00         B    55    					call os_bchl_memfill
004718 C9                  B    56    					ret
                           B    57    					
                           B    58    ;----------------------------------------------
                           B    59    
                           B    60    
004719                     B    61    hwsc_update_pointer_sprite
                           B    62    					
004719 3A 9C 6A 00         B    63    					ld a,(os_pointer_enable)	00471D E601                B    64    					and 1
00471F C8                  B    65    					ret z
                           B    66    
004720 DDE5                B    67    					push ix
004722 DD21F808 FF         B    68    					ld ix,hw_sprite_registers+(
004727 2A 89 6A 00         B    69    					ld hl,(mouse_abs_x)
00472B 019A0000            B    70    					ld bc,x_display_offset
00472F 09                  B    71    					add hl,bc
004730 DD7500              B    72    					ld (ix),l
004733 DD7401              B    73    					ld (ix+1),h
004736 2A 8C 6A 00         B    74    					ld hl,(mouse_abs_y)
00473A 01250000            B    75    					ld bc,y_display_offset
00473E 09                  B    76    					add hl,bc
00473F DD7502              B    77    					ld (ix+2),l
004742 DD7403              B    78    					ld (ix+3),h
004745 ED4B A0 6A 00       B    79    					ld bc,(os_pointer_height)
00474A DD7104              B    80    					ld (ix+4),c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 184


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
00474D DD7005              B    81    					ld (ix+5),b
004750 ED4B 9D 6A 00       B    82    					ld bc,(os_pointer_definitio
004755 DD7106              B    83    					ld (ix+6),c
004758 DD7007              B    84    					ld (ix+7),b
00475B DDE1                B    85    					pop ix
00475D C9                  B    86    					ret
                           B    87    
                           B    88    
                           B    89    ;----------------------------------------------
                           B    90    				
                           B    91    
00475E 11000000            B    92    hwsc_get_version	ld de,0
004762 0610                B    93    					ld b,16
004764 78                  B    94    gethwvlp			ld a,b
004765 3D                  B    95    					dec a
004766 ED3908              B    96    					out0 (port_selector),a		004769 DB01                B    97    					in a,(port_hw_flags)		00476B CB27                B    98    					sla a
00476D CB13                B    99    					rl e
00476F CB12                B   100    					rl d
004771 10 F1               B   101    					djnz gethwvlp				                           B   102    									
004773 21390000            B   103    					ld hl,prose_version
004777 BF                  B   104    					cp a						004778 C9                  B   105    					ret
                           B   106    
                           B   107    
                           B   108    
                           B   109    ;----------------------------------------------
                           B   110    ; Timer0 related 
                           B   111    ;----------------------------------------------
                           B   112    
004779                     B   113    hwsc_time_delay
                           B   114    
                           B   115    ; set DE to 32768Hz ticks to wait
                           B   116    
004779 CD 85 47 00         B   117    					call hwsc_set_timeout
00477D CD 96 47 00         B   118    twaitlp				call hwsc_test_timeout
004781 28 FA               B   119    					jr z,twaitlp
004783 AF                  B   120    					xor a						004784 C9                  B   121    					ret			
                           B   122    
                           B   123    ;----------------------------------------------
                           B   124    
                           B   125    ; Set DE to 32768 Hz ticks to allow before time
                           B   126    
004785 7B                  B   127    hwsc_set_timeout	ld a,e						004786 ED3981              B   128    					out0 (TMR0_RR_L),a			004789 7A                  B   129    					ld a,d
00478A ED3982              B   130    					out0 (TMR0_RR_H),a			00478D 3E03                B   131    					ld a,00000011b				00478F ED3980              B   132    					out0 (TMR0_CTL),a			Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 185


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
004792 ED3880              B   133    					in0 a,(TMR0_CTL)			004795 C9                  B   134    					ret
                           B   135    			
004796 ED3880              B   136    hwsc_test_timeout	in0 a,(TMR0_CTL)			004799 CB7F                B   137    					bit 7,a
00479B C9                  B   138    					ret
                           B   139    			
                           B   140    ;----------------------------------------------
                           B   141    
00479C                     B   142    hwsc_read_rtc
00479C D5                  B   143    					push de
00479D C5                  B   144    					push bc
00479E 0EE0                B   145    hwsc_rtc_rlp		ld c,RTC_SEC
0047A0 0608                B   146    					ld b,8
0047A2 21 81 68 00         B   147    					ld hl,time_data
0047A6 ED92                B   148    					inimr						0047A8 0EE0                B   149    					ld c,RTC_SEC
0047AA 0600                B   150    					ld b,0
0047AC 1E08                B   151    					ld e,8
0047AE 21 81 68 00         B   152    					ld hl,time_data
0047B2 ED78                B   153    timevloop			in a,(bc)					0047B4 BE                  B   154    					cp (hl)						0047B5 20 E7               B   155    					jr nz,hwsc_rtc_rlp			0047B7 23                  B   156    					inc hl
0047B8 0C                  B   157    					inc c
0047B9 1D                  B   158    					dec e
0047BA 20 F6               B   159    					jr nz,timevloop
0047BC 21 81 68 00         B   160    					ld hl,time_data
0047C0 C1                  B   161    					pop bc
0047C1 D1                  B   162    					pop de
0047C2 BF                  B   163    					cp a						0047C3 C9                  B   164    					ret
                           B   165    
                           B   166    
0047C4                     B   167    hwsc_write_rtc	
                           B   168    
                           B   169    ; set HL to location of BCD data for RTC: sec/m
                           B   170    
0047C4 E5                  B   171    					push hl
0047C5 C5                  B   172    					push bc
0047C6 3E21                B   173    					ld a,00100001b				0047C8 ED39ED              B   174    					out0 (RTC_CTRL),a
0047CB 0EE0                B   175    					ld c,RTC_SEC
0047CD 0608                B   176    					ld b,8
0047CF ED93                B   177    					otimr
0047D1 3E20                B   178    					ld a,00100000b				0047D3 ED39ED              B   179    					out0 (RTC_CTRL),a
0047D6 C1                  B   180    					pop bc
0047D7 E1                  B   181    					pop hl
0047D8 BF                  B   182    					cp a						0047D9 C9                  B   183    					ret	
                           B   184    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 186


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B   185    ;----------------------------------------------
                           B   186    ; Timer1 related 
                           B   187    ;----------------------------------------------
                           B   188    
0047DA                     B   189    os_init_msec_counter
                           B   190    
                           B   191    ; set E = 1 enable, E = 0 disable
                           B   192    
                           B   193    ; 1 tick = 50MHz/4, EG:  Reload value = 12500, 
                           B   194    			
0047DA E5                  B   195    				push hl
                           B   196    
0047DB AF                  B   197    				xor a
0047DC ED3983              B   198    				out0 (TMR1_CTL),a				                           B   199    				
0047DF CB43                B   200    				bit 0,e
0047E1 28 2B               B   201    				jr z,disable_tmr1
                           B   202    				
0047E3 21 DF 41 00         B   203    				ld hl,prt1_irq_handler
0047E7 22740000            B   204    				ld (074h),hl
                           B   205    				
0047EB ED3892              B   206    				in0 a,(TMR_ISS)
0047EE E6F3                B   207    				and 11110011b
0047F0 ED3992              B   208    				out0 (TMR_ISS),a
                           B   209    				
0047F3 21D43000            B   210    				ld hl,30d4h
0047F7 ED2185              B   211    				out0 (TMR1_RR_H),h
0047FA ED2984              B   212    				out0 (TMR1_RR_L),l
                           B   213    
0047FD 21000000            B   214    				ld hl,0
004801 22 A3 68 00         B   215    				ld (seconds_counter),hl
004805 22 A0 68 00         B   216    				ld (milliseconds_counter),hl
                           B   217    
004809 3E53                B   218    				ld a,01010011b
00480B ED3983              B   219    				out0 (TMR1_CTL),a				                           B   220    			
00480E E1                  B   221    disable_tmr1	pop hl
00480F AF                  B   222    				xor a
004810 C9                  B   223    				ret
                           B   224    
                           B   225    
                           B   226    
004811                     B   227    os_read_msec_counter
                           B   228    			
004811 F3                  B   229    			di
004812 ED5B A0 68 00       B   230    			ld de,(milliseconds_counter)
004817 2A A3 68 00         B   231    			ld hl,(seconds_counter)
00481B FB                  B   232    			ei
00481C AF                  B   233    			xor a
00481D C9                  B   234    			ret
                           B   235    			
                           B   236    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 187


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B   237    ;----------------------------------------------
                           B   238    ; INIT KEYBOARD ROUTINE 
                           B   239    ;----------------------------------------------
                           B   240    
                           B   241    ; ZF set and A = 0 if all OK, else error code i
                           B   242    
00481E                     B   243    init_keyboard
                           B   244    
00481E 11004000            B   245    			ld de,16384							004822 CD 79 47 00         B   246    			call hwsc_time_delay
004826 F3                  B   247    			di
004827 CD DC 48 00         B   248    			call purge_keyboard
00482B CD 35 48 00         B   249    			call rs_keyboard
00482F FB                  B   250    			ei
004830 D0                  B   251    			ret nc
004831 3E8B                B   252    			ld a,08bh							004833 B7                  B   253    			or a
004834 C9                  B   254    			ret
                           B   255    			
                           B   256    			
004835                     B   257    rs_keyboard
                           B   258    
004835 3EFF                B   259    			ld a,0ffh
004837 CD 54 48 00         B   260    			call write_to_keyboard
00483B 30 04               B   261    			jr nc,kb_connected
00483D 3E8A                B   262    			ld a,08ah							00483F B7                  B   263    			or a
004840 C9                  B   264    			ret
                           B   265    
004841                     B   266    kb_connected
                           B   267    			
004841 0605                B   268    			ld b,5
004843 C5                  B   269    kb_initlp	push bc
004844 CD C0 48 00         B   270    			call wait_kb_byte					004848 C1                  B   271    			pop bc
004849 D8                  B   272    			ret c
00484A FEAA                B   273    			cp 0aah
00484C 28 04               B   274    			jr z,kb_postok
00484E 10 F3               B   275    			djnz kb_initlp						004850 37                  B   276    			scf									004851 C9                  B   277    			ret
                           B   278    			
                           B   279    			
004852 AF                  B   280    kb_postok	xor a
004853 C9                  B   281    			ret
                           B   282    	
                           B   283    	
                           B   284    ;----------------------------------------------
                           B   285    				
004854                     B   286    write_to_keyboard
                           B   287    
                           B   288    ; Put byte to send to keyboard in A
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 188


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B   289    
004854 4F                  B   290    			ld c,a								004855 3E01                B   291    			ld a,01b							004857 ED3907              B   292    			out0 (port_ps2_ctrl),a
                           B   293    
00485A 110A0000            B   294    			ld de,10
00485E CD 79 47 00         B   295    			call hwsc_time_delay				                           B   296    
004862 3E03                B   297    			ld a,11b
004864 ED3907              B   298    			out0 (port_ps2_ctrl),a				                           B   299    			
004867 3E02                B   300    			ld a,10b
004869 ED3907              B   301    			out0 (port_ps2_ctrl),a				                           B   302    			
00486C CD 3C 4A 00         B   303    			call wait_kb_clk_high
                           B   304    			
004870 1601                B   305    			ld d,1								004872 0608                B   306    			ld b,8								004874 CD 0F 4A 00         B   307    kdoloop		call wait_kb_clk_low	
004878 D8                  B   308    			ret c
004879 AF                  B   309    			xor a
00487A CBCF                B   310    			set 1,a
00487C CB41                B   311    			bit 0,c
00487E 28 03               B   312    			jr z,kdbzero
004880 CB8F                B   313    			res 1,a
004882 14                  B   314    			inc d
004883 ED3907              B   315    kdbzero		out0 (port_ps2_ctrl),a				004886 CD 3C 4A 00         B   316    			call wait_kb_clk_high
00488A D8                  B   317    			ret c
00488B CB19                B   318    			rr c
00488D 10 E5               B   319    			djnz kdoloop
                           B   320    
00488F CD 0F 4A 00         B   321    			call wait_kb_clk_low
004893 D8                  B   322    			ret c
004894 AF                  B   323    			xor a
004895 CB42                B   324    			bit 0,d
004897 20 02               B   325    			jr nz,kparone
004899 CBCF                B   326    			set 1,a
00489B ED3907              B   327    kparone		out0 (port_ps2_ctrl),a				00489E CD 3C 4A 00         B   328    			call wait_kb_clk_high
0048A2 D8                  B   329    			ret c
                           B   330    			
0048A3 CD 0F 4A 00         B   331    			call wait_kb_clk_low
0048A7 D8                  B   332    			ret c
0048A8 AF                  B   333    			xor a
0048A9 ED3907              B   334    			out0 (port_ps2_ctrl),a				                           B   335    
0048AC CD 0B 4A 00         B   336    			call wait_kb_data_low				0048B0 D8                  B   337    			ret c
0048B1 CD 0F 4A 00         B   338    			call wait_kb_clk_low				0048B5 D8                  B   339    			ret c
                           B   340    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 189


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
0048B6 CD 38 4A 00         B   341    			call wait_kb_data_high				0048BA D8                  B   342    			ret c
0048BB CD 3C 4A 00         B   343    			call wait_kb_clk_high				0048BF C9                  B   344    			ret 
                           B   345    
                           B   346    
                           B   347    ;----------------------------------------------
                           B   348    
                           B   349    
0048C0                     B   350    wait_kb_byte
                           B   351    
0048C0 11008000            B   352    			ld de,8000h
0048C4 CD 85 47 00         B   353    			call hwsc_set_timeout				                           B   354    
0048C8 ED3807              B   355    wait_kloop	in0 a,(port_ps2_ctrl)
0048CB CB67                B   356    			bit 4,a
0048CD 20 08               B   357    			jr nz,rec_kbyte
                           B   358    			
0048CF CD 96 47 00         B   359    			call hwsc_test_timeout
0048D3 28 F3               B   360    			jr z,wait_kloop
0048D5 37                  B   361    			scf									0048D6 C9                  B   362    			ret
                           B   363    			
0048D7 ED3802              B   364    rec_kbyte	in0 a,(port_keyboard_data)			0048DA B7                  B   365    			or a
0048DB C9                  B   366    			ret
                           B   367    
                           B   368    
                           B   369    ;----------------------------------------------
                           B   370    
0048DC                     B   371    purge_keyboard
                           B   372    			
0048DC ED3807              B   373    			in0 a,(port_ps2_ctrl)
0048DF CB67                B   374    			bit 4,a
0048E1 C8                  B   375    			ret z
0048E2 ED3802              B   376    			in0 a,(port_keyboard_data)			0048E5 18 F5               B   377    			jr purge_keyboard
                           B   378    
                           B   379    
                           B   380    
                           B   381    ;----------------------------------------------
                           B   382    ; INIT MOUSE ROUTINE 
                           B   383    ;----------------------------------------------
                           B   384    
                           B   385    ; ZF set and A = 0 if all OK, else error code i
                           B   386    
0048E7                     B   387    init_mouse		
0048E7 F3                  B   388    			di
0048E8 CD 00 4A 00         B   389    			call purge_mouse
0048EC CD F6 48 00         B   390    			call rs_mouse
0048F0 FB                  B   391    			ei
0048F1 D0                  B   392    			ret nc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 190


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
0048F2 3E8B                B   393    			ld a,08bh							0048F4 B7                  B   394    			or a
0048F5 C9                  B   395    			ret
                           B   396    
                           B   397    
0048F6                     B   398    rs_mouse
0048F6 3EFF                B   399    			ld a,0ffh							0048F8 CD 78 49 00         B   400    			call write_to_mouse		
0048FC 30 04               B   401    			jr nc,mouse_connected
0048FE 3E8A                B   402    			ld a,08ah							004900 B7                  B   403    			or a
004901 C9                  B   404    			ret
                           B   405    
                           B   406    
004902                     B   407    mouse_connected
                           B   408    
004902 0605                B   409    			ld b,5
004904 C5                  B   410    ms_initlp	push bc
004905 CD E4 49 00         B   411    			call wait_mouse_byte				004909 C1                  B   412    			pop bc
00490A D8                  B   413    			ret c
00490B FEAA                B   414    			cp 0aah
00490D 28 04               B   415    			jr z,ms_postok
00490F 10 F3               B   416    			djnz ms_initlp
004911 18 43               B   417    			jr bad_mouse
                           B   418    			
004913 CD E4 49 00         B   419    ms_postok	call wait_mouse_byte				004917 D8                  B   420    			ret c
004918 B7                  B   421    			or a
004919 20 3B               B   422    			jr nz,bad_mouse						                           B   423    			
00491B 3E03                B   424    			ld a,3
00491D 32 74 6A 00         B   425    			ld (mouse_packet_size),a
                           B   426    
004921 21 41 67 00         B   427    			ld hl,intellimouse_seq
004925 0606                B   428    			ld b,6
004927 CD 5A 49 00         B   429    			call mouse_sequence
00492B D8                  B   430    			ret c
                           B   431    			
00492C 3EF2                B   432    			ld a,0f2h
00492E CD 69 49 00         B   433    			call write_mouse_wait_ack			004932 D8                  B   434    			ret c
004933 CD E4 49 00         B   435    			call wait_mouse_byte				004937 D8                  B   436    			ret c
004938 32 73 6A 00         B   437    			ld (mouse_id),a
00493C B7                  B   438    			or a								00493D 28 0A               B   439    			jr z,standard_mouse
00493F FE03                B   440    			cp 3
004941 20 13               B   441    			jr nz,bad_mouse						004943 3E04                B   442    			ld a,4
004945 32 74 6A 00         B   443    			ld (mouse_packet_size),a
                           B   444    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 191


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
004949                     B   445    standard_mouse
                           B   446    		
004949 21 47 67 00         B   447    			ld hl,mouse_settings_seq
00494D 0606                B   448    			ld b,6
00494F CD 5A 49 00         B   449    			call mouse_sequence
004953 D8                  B   450    			ret c
004954 AF                  B   451    			xor a								004955 C9                  B   452    			ret
                           B   453    
                           B   454    
004956 3E89                B   455    bad_mouse	ld a,089h							004958 B7                  B   456    			or a
004959 C9                  B   457    			ret
                           B   458    
                           B   459    
00495A                     B   460    mouse_sequence
                           B   461    
00495A 7E                  B   462    mseqlp		ld a,(hl)
00495B E5                  B   463    			push hl
00495C C5                  B   464    			push bc
00495D CD 69 49 00         B   465    			call write_mouse_wait_ack
004961 C1                  B   466    			pop bc
004962 E1                  B   467    			pop hl
004963 D8                  B   468    			ret c
004964 23                  B   469    			inc hl
004965 10 F3               B   470    			djnz mseqlp
004967 AF                  B   471    			xor a
004968 C9                  B   472    			ret
                           B   473    
                           B   474    
004969                     B   475    write_mouse_wait_ack
                           B   476    			
004969 CD 78 49 00         B   477    			call write_to_mouse
00496D D8                  B   478    			ret c
00496E CD E4 49 00         B   479    			call wait_mouse_byte				004972 D8                  B   480    			ret c
004973 FEFA                B   481    			cp 0fah								004975 C8                  B   482    			ret z
004976 37                  B   483    			scf
004977 C9                  B   484    			ret
                           B   485    			
                           B   486    ;----------------------------------------------
                           B   487    				
004978                     B   488    write_to_mouse
                           B   489    
                           B   490    ; Put byte to send to mouse in A
                           B   491    
004978 4F                  B   492    			ld c,a								004979 3E04                B   493    			ld a,0100b							00497B ED3907              B   494    			out0 (port_ps2_ctrl),a
                           B   495    
00497E 110A0000            B   496    			ld de,10
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 192


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
004982 CD 79 47 00         B   497    			call hwsc_time_delay				                           B   498    
004986 3E0C                B   499    			ld a,1100b
004988 ED3907              B   500    			out0 (port_ps2_ctrl),a				                           B   501    			
00498B 3E08                B   502    			ld a,1000b
00498D ED3907              B   503    			out0 (port_ps2_ctrl),a				                           B   504    			
004990 CD 44 4A 00         B   505    			call wait_mouse_clk_high
                           B   506    			
004994 1601                B   507    			ld d,1								004996 0608                B   508    			ld b,8								004998 CD 17 4A 00         B   509    mdoloop		call wait_mouse_clk_low	
00499C D8                  B   510    			ret c
00499D AF                  B   511    			xor a
00499E CBDF                B   512    			set 3,a
0049A0 CB41                B   513    			bit 0,c
0049A2 28 03               B   514    			jr z,mdbzero
0049A4 CB9F                B   515    			res 3,a
0049A6 14                  B   516    			inc d
0049A7 ED3907              B   517    mdbzero		out0 (port_ps2_ctrl),a				0049AA CD 44 4A 00         B   518    			call wait_mouse_clk_high
0049AE D8                  B   519    			ret c
0049AF CB19                B   520    			rr c
0049B1 10 E5               B   521    			djnz mdoloop
                           B   522    
0049B3 CD 17 4A 00         B   523    			call wait_mouse_clk_low
0049B7 D8                  B   524    			ret c
0049B8 AF                  B   525    			xor a
0049B9 CB42                B   526    			bit 0,d
0049BB 20 02               B   527    			jr nz,parone
0049BD CBDF                B   528    			set 3,a
0049BF ED3907              B   529    parone		out0 (port_ps2_ctrl),a				0049C2 CD 44 4A 00         B   530    			call wait_mouse_clk_high
0049C6 D8                  B   531    			ret c
                           B   532    			
0049C7 CD 17 4A 00         B   533    			call wait_mouse_clk_low
0049CB D8                  B   534    			ret c
0049CC AF                  B   535    			xor a
0049CD ED3907              B   536    			out0 (port_ps2_ctrl),a				                           B   537    
0049D0 CD 13 4A 00         B   538    			call wait_mouse_data_low			0049D4 D8                  B   539    			ret c
0049D5 CD 17 4A 00         B   540    			call wait_mouse_clk_low				0049D9 D8                  B   541    			ret c
                           B   542    				
0049DA CD 40 4A 00         B   543    			call wait_mouse_data_high			0049DE D8                  B   544    			ret c
0049DF CD 44 4A 00         B   545    			call wait_mouse_clk_high			0049E3 C9                  B   546    			ret 
                           B   547    
                           B   548    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 193


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B   549    
                           B   550    
0049E4                     B   551    wait_mouse_byte
                           B   552    
0049E4 11008000            B   553    			ld de,8000h
0049E8 CD 85 47 00         B   554    			call hwsc_set_timeout				                           B   555    
0049EC ED3807              B   556    wait_mloop	in0 a,(port_ps2_ctrl)
0049EF CB6F                B   557    			bit 5,a
0049F1 20 08               B   558    			jr nz,rec_mbyte
                           B   559    			
0049F3 CD 96 47 00         B   560    			call hwsc_test_timeout
0049F7 28 F3               B   561    			jr z,wait_mloop
0049F9 37                  B   562    			scf									0049FA C9                  B   563    			ret
                           B   564    			
0049FB ED3806              B   565    rec_mbyte	in0 a,(port_mouse_data)				0049FE B7                  B   566    			or a
0049FF C9                  B   567    			ret
                           B   568    
                           B   569    ;----------------------------------------------
                           B   570    
004A00                     B   571    purge_mouse
                           B   572    			
004A00 ED3807              B   573    			in0 a,(port_ps2_ctrl)
004A03 CB6F                B   574    			bit 5,a
004A05 C8                  B   575    			ret z
004A06 ED3806              B   576    			in0 a,(port_mouse_data)			; r
004A09 18 F5               B   577    			jr purge_mouse
                           B   578    
                           B   579    
                           B   580    ;----------------------------------------------
                           B   581    
                           B   582    
004A0B                     B   583    wait_kb_data_low
                           B   584    
004A0B 3E02                B   585    			ld a,2
004A0D 18 0A               B   586    			jr test_lo_ps2
                           B   587    			
004A0F                     B   588    wait_kb_clk_low
                           B   589    
004A0F 3E01                B   590    			ld a,1
004A11 18 06               B   591    			jr test_lo_ps2			
                           B   592    
004A13                     B   593    wait_mouse_data_low
                           B   594    
004A13 3E08                B   595    			ld a,8
004A15 18 02               B   596    			jr test_lo_ps2
                           B   597    
004A17                     B   598    wait_mouse_clk_low
                           B   599    
004A17 3E04                B   600    			ld a,4
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 194


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B   601    
004A19 C5                  B   602    test_lo_ps2	push bc
004A1A D5                  B   603    			push de
004A1B 4F                  B   604    			ld c,a
004A1C 11004000            B   605    			ld de,04000h					; a
004A20 CD 85 47 00         B   606    			call hwsc_set_timeout
                           B   607    
004A24 CD 96 47 00         B   608    nkb_lw		call hwsc_test_timeout			; t
004A28 28 04               B   609    			jr z,nkb_lnto
004A2A D1                  B   610    			pop de
004A2B C1                  B   611    			pop bc
004A2C 37                  B   612    			scf								; c
004A2D C9                  B   613    			ret
004A2E ED3807              B   614    nkb_lnto	in0 a,(port_ps2_ctrl)
004A31 A1                  B   615    			and c
004A32 20 F0               B   616    			jr nz,nkb_lw
                           B   617    					
004A34 D1                  B   618    			pop de
004A35 C1                  B   619    			pop bc
004A36 AF                  B   620    			xor a
004A37 C9                  B   621    			ret					
                           B   622    
                           B   623    
                           B   624    
                           B   625    
004A38                     B   626    wait_kb_data_high
                           B   627    
004A38 3E02                B   628    			ld a,2
004A3A 18 0A               B   629    			jr test_hi_ps2
                           B   630    			
004A3C                     B   631    wait_kb_clk_high
                           B   632    
004A3C 3E01                B   633    			ld a,1
004A3E 18 06               B   634    			jr test_hi_ps2
                           B   635    
                           B   636    
004A40                     B   637    wait_mouse_data_high
                           B   638    			
004A40 3E08                B   639    			ld a,8
004A42 18 02               B   640    			jr test_hi_ps2
                           B   641    			 
004A44                     B   642    wait_mouse_clk_high
                           B   643    
004A44 3E04                B   644    			ld a,4
                           B   645    
004A46 C5                  B   646    test_hi_ps2	push bc
004A47 D5                  B   647    			push de
004A48 4F                  B   648    			ld c,a
004A49 11004000            B   649    			ld de,04000h					; a
004A4D CD 85 47 00         B   650    			call hwsc_set_timeout
                           B   651    
004A51 CD 96 47 00         B   652    nkb_hw		call hwsc_test_timeout			; t
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 195


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
004A55 28 04               B   653    			jr z,nkb_hnto
004A57 D1                  B   654    			pop de
004A58 C1                  B   655    			pop bc
004A59 37                  B   656    			scf								; c
004A5A C9                  B   657    			ret
004A5B ED3807              B   658    nkb_hnto	in0 a,(port_ps2_ctrl)
004A5E A1                  B   659    			and c
004A5F 28 F0               B   660    			jr z,nkb_hw
                           B   661    					
004A61 D1                  B   662    			pop de
004A62 C1                  B   663    			pop bc
004A63 AF                  B   664    			xor a							; c
004A64 C9                  B   665    			ret
                           B   666    
                           B   667    
                           B   668    ;==============================================
                           B   669    
004A65                     B   670    hwsc_play_audio
                           B   671    
                           B   672    ; set HL register to location of an audio data 
                           B   673    
                           B   674    ; 0 - start 
                           B   675    ; 3 - length
                           B   676    ; 6 - loop start
                           B   677    ; 9 - loop length
                           B   678    ; c - frequency constant
                           B   679    ; e - volume
                           B   680    
                           B   681    ; set C register to set channels wave is to pla
                           B   682    
004A65 E5                  B   683    				push hl
004A66 FDE1                B   684    				pop iy
004A68 DD210014 FF         B   685    				ld ix,hw_audio_registers
004A6D CD A2 4A 00         B   686    				call audio_reg_wait				                           B   687    				
004A71 0608                B   688    				ld b,8
004A73 CB39                B   689    audchanloop		srl c
004A75 30 24               B   690    				jr nc,not_this_chan
                           B   691    				
004A77 FD1700              B   692    				ld de,(iy)
004A7A DD1F00              B   693    				ld (ix),de						                           B   694    
004A7D FD1703              B   695    				ld de,(iy+3)
004A80 DD1F04              B   696    				ld (ix+04h),de					                           B   697    				
004A83 FD170C              B   698    				ld de,(iy+0ch)
004A86 DD1F08              B   699    				ld (ix+08h),de					                           B   700    				
004A89 FD5E0E              B   701    				ld e,(iy+0eh)
004A8C DD1F0C              B   702    				ld (ix+0ch),de					                           B   703    				
004A8F FD1706              B   704    				ld de,(iy+6)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 196


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
004A92 DD1F10              B   705    				ld (ix+10h),de					                           B   706    				
004A95 FD1709              B   707    				ld de,(iy+9)
004A98 DD1F14              B   708    				ld (ix+14h),de					                           B   709    
004A9B                     B   710    not_this_chan	
004A9B ED3220              B   711    				lea ix,ix+20h			
004A9E 10 D3               B   712    				djnz audchanloop
004AA0 AF                  B   713    				xor a
004AA1 C9                  B   714    				ret
                           B   715    
                           B   716    
                           B   717    ;----------------------------------------------
                           B   718    
004AA2                     B   719    audio_reg_wait	
                           B   720    
004AA2 3E01                B   721    				ld a,1
004AA4 320314FF            B   722    				ld (hw_audio_registers+3),a		                           B   723    				
004AA8 ED3801              B   724    wait_audreg		in0 a,(port_hw_flags)			004AAB E640                B   725    				and 040h
004AAD 28 F9               B   726    				jr z,wait_audreg				004AAF AF                  B   727    				xor a
004AB0 C9                  B   728    				ret
004AB1 C9                  B   729    				ret
                           B   730    
                           B   731    
                           B   732    ;----------------------------------------------
                           B   733    				
                           B   734    				
004AB2                     B   735    hwsc_disable_audio
                           B   736    
004AB2 AF                  B   737    				xor a
004AB3 320314FF            B   738    				ld (hw_audio_registers+3),a		                           B   739    				
004AB7 DD210014 FF         B   740    				ld ix,hw_audio_registers		004ABC 0608                B   741    				ld b,8
004ABE 11000000            B   742    				ld de,0
004AC2 DD1F0C              B   743    disaud_lp		ld (ix+0ch),de
004AC5 ED3220              B   744    				lea ix,ix+020h
004AC8 10 F8               B   745    				djnz disaud_lp
004ACA C9                  B   746    				ret
                           B   747    				
                           B   748    ;----------------------------------------------
                           B   749    
004ACB                     B   750    hwsc_get_joysticks
                           B   751    
004ACB ED389E              B   752    				in0 a,(PC_DR)				
004ACE 2F                  B   753    				cpl
004ACF 47                  B   754    				ld b,a
004AD0 E60F                B   755    				and 0fh
004AD2 5F                  B   756    				ld e,a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 197


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
004AD3 78                  B   757    				ld a,b
004AD4 0F                  B   758    				rrca
004AD5 0F                  B   759    				rrca
004AD6 0F                  B   760    				rrca
004AD7 0F                  B   761    				rrca
004AD8 E60F                B   762    				and 0fh
004ADA 57                  B   763    				ld d,a
                           B   764    				
004ADB ED38A2              B   765    				in0 a,(PD_DR)	
004ADE CB67                B   766    				bit 4,a						; f
004AE0 20 02               B   767    				jr nz,noj1b1
004AE2 CBEA                B   768    				set 5,d
                           B   769    
004AE4 CB6F                B   770    noj1b1			bit 5,a						; f
004AE6 20 02               B   771    				jr nz,noj1b0
004AE8 CBE2                B   772    				set 4,d
                           B   773    				
004AEA CB77                B   774    noj1b0			bit 6,a						; f
004AEC 20 02               B   775    				jr nz,noj0b1
004AEE CBEB                B   776    				set 5,e
                           B   777    
004AF0 CB7F                B   778    noj0b1			bit 7,a						; f
004AF2 20 02               B   779    				jr nz,noj0b0
004AF4 CBE3                B   780    				set 4,e
                           B   781    
004AF6 AF                  B   782    noj0b0			xor a
004AF7 C9                  B   783    				ret
                           B   784    				
                           B   785    				
                           B   786    ;----------------------------------------------
                           B   787    			
                           B   788    				
                           B   789    				
                           A  3752    
                           B     0    	include		'prose_keyboard_routines.asm'	                           B     1    ;----------------------------------------------
                           B     2    ;PROSE KEYBOARD/MOUSE ROUTINES V0.04 (ADL mode)
                           B     3    ;----------------------------------------------
                           B     4    
004AF8                     B     5    os_wait_key_press
                           B     6    
                           B     7    ; Busy waits for a keypress.
                           B     8    ; Handles the following modifier keys (key_mod_
                           B     9    ; Returns scancode in A and ASCII code in B (B=
                           B    10    ; (ASCII code is modifed by shift / alt key sta
                           B    11    
                           B    12    
004AF8 D5                  B    13    				push de
004AF9 51                  B    14    				ld d,c
004AFA E5                  B    15    				push hl
                           B    16    				
004AFB CD 65 4B 00         B    17    wait_kbuf		call get_kb_buffer_indexes		Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 198


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_keyboard_routines.asm
004AFF BE                  B    18    				cp (hl)							004B00 28 F9               B    19    				jr z,wait_kbuf		
                           B    20    			
004B02 01000000            B    21    new_key			ld bc,0							004B06 4F                  B    22    				ld c,a
004B07 21 4C 6A 00         B    23    				ld hl,scancode_buffer	
004B0B 09                  B    24    				add hl,bc
004B0C 7E                  B    25    				ld a,(hl)						                           B    26    
004B0D 0E10                B    27    				ld c,16
004B0F 09                  B    28    				add hl,bc						004B10 4F                  B    29    				ld c,a							004B11 7E                  B    30    				ld a,(hl)						                           B    31    
004B12 1E00                B    32    				ld e,0							004B14 21 9A 65 00         B    33    				ld hl,unshifted_keymap			                           B    34    
004B18 CB4F                B    35    				bit 1,a
004B1A 28 04               B    36    				jr z,not_ctrl					004B1C 1E60                B    37    				ld e,96							004B1E 18 16               B    38    				jr got_keymap					                           B    39    							
004B20 CB47                B    40    not_ctrl		bit 0,a
004B22 20 04               B    41    				jr nz,shifted
004B24 CB67                B    42    				bit 4,a
004B26 28 06               B    43    				jr z,not_shifted
004B28 21 FC 65 00         B    44    shifted			ld hl,shifted_keymap			004B2C 18 08               B    45    				jr got_keymap
                           B    46    				
004B2E CB5F                B    47    not_shifted		bit 3,a
004B30 28 04               B    48    				jr z,got_keymap	
004B32 21 5E 66 00         B    49    				ld hl,alted_keymap				                           B    50    
004B36 79                  B    51    got_keymap		ld a,c							004B37 FE62                B    52    				cp 062h
004B39 30 07               B    53    				jr nc,gotkdone
004B3B 09                  B    54    				add hl,bc						004B3C 7E                  B    55    				ld a,(hl)						004B3D 93                  B    56    				sub a,e							004B3E 30 01               B    57    				jr nc,subkey_ok	
004B40 AF                  B    58    				xor a							004B41 47                  B    59    subkey_ok		ld b,a
                           B    60    				
004B42 3A 6D 6A 00         B    61    gotkdone		ld a,(key_buf_rd_idx)			004B46 3C                  B    62    				inc a							004B47 E60F                B    63    				and 15
004B49 32 6D 6A 00         B    64    				ld (key_buf_rd_idx),a			004B4D 79                  B    65    				ld a,c							004B4E E1                  B    66    				pop hl
004B4F 4A                  B    67    				ld c,d
004B50 D1                  B    68    				pop de
004B51 BF                  B    69    				cp a							Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 199


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_keyboard_routines.asm
004B52 C9                  B    70    				ret
                           B    71    			
                           B    72    		
                           B    73    ;----------------------------------------------
                           B    74    			
004B53                     B    75    os_get_key_press
                           B    76    				
                           B    77    ; Gets a keycode on-the-fly - If one is availab
                           B    78    ; On return, ZF is set if there is a new scanco
                           B    79    ; (ASCII code is modifed by shift key status), 
                           B    80    			
                           B    81    			
004B53 D5                  B    82    				push de
004B54 51                  B    83    				ld d,c
004B55 E5                  B    84    				push hl
004B56 CD 65 4B 00         B    85    				call get_kb_buffer_indexes		004B5A BE                  B    86    				cp (hl)							004B5B 20 A5               B    87    				jr nz,new_key					004B5D 3E81                B    88    				ld a,81h			
004B5F 47                  B    89    				ld b,a
004B60 B7                  B    90    				or a
004B61 E1                  B    91    				pop hl
004B62 4A                  B    92    				ld c,d
004B63 D1                  B    93    				pop de
004B64 C9                  B    94    				ret
                           B    95    			
                           B    96    ;----------------------------------------------
                           B    97    			
004B65                     B    98    get_kb_buffer_indexes
                           B    99    			
                           B   100    			
004B65 21 6C 6A 00         B   101    				ld hl,key_buf_wr_idx			004B69 3A 6D 6A 00         B   102    				ld a,(key_buf_rd_idx)			004B6D C9                  B   103    				ret
                           B   104    			
                           B   105    		
                           B   106    ;----------------------------------------------
                           B     0    	include		'prose_serial_routines.asm'
                           B     1    ;**********************************************
                           B     2    ; PROSE Serial File Transfer Routines V0.05 (AD
                           B     3    ;**********************************************
                           B     4    
                           B     5    ;----------------------------------------------
                           B     6    ; .---------------------.
                           B     7    ; ! Receive file header !
                           B     8    ; '---------------------'
                           B     9    ;
                           B    10    ; Before calling set:-
                           B    11    ;
                           B    12    ; HL = Filename ("*" if dont care)
                           B    13    ;  A = Time out in seconds
                           B    14    ;
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 200


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
                           B    15    ; If zero flag set, all OK. IX returns location
                           B    16    ;    Else A=$84 = memory address out of range, 
                           B    17    ;           $87 = Filename mismatch, $86 = chec
                           B    18    ;----------------------------------------------
                           B    19    	
                           B    20    
004B6E                     B    21    serial_get_header
                           B    22    
004B6E 32 1E 67 00         B    23    				ld (serial_timeout),a			004B72 22 08 67 00         B    24    				ld (serial_fn_addr),hl
004B76 CD 3C 44 00         B    25    				call hwsc_flush_serial_buffer	                           B    26    
004B7A CD 5D 4C 00         B    27    				call s_getblock					004B7E 28 0C               B    28    				jr z,s_gbfhok					004B80 F5                  B    29    				push af							004B81 3A 3F 67 00         B    30    				ld a,(serial_transfer_started)
004B85 B7                  B    31    				or a							004B86 C4 C4 4C 00         B    32    				call nz,s_badack				004B8A F1                  B    33    				pop af
004B8B C9                  B    34    				ret
                           B    35    	
004B8C 21 33 67 00         B    36    s_gbfhok		ld hl,serial_header_id			004B90 11140700            B    37    				ld de,serial_buffer+20			004B94 060C                B    38    				ld b,12
004B96 CD E2 12 00         B    39    				call os_compare_strings
004B9A 20 0F               B    40    				jr nz,s_nfhdr
004B9C 06E0                B    41    				ld b,256-32						004B9E 21200700            B    42    				ld hl,serial_buffer+32
004BA2 7E                  B    43    s_chdr			ld a,(hl)
004BA3 23                  B    44    				inc hl
004BA4 B7                  B    45    				or a
004BA5 20 04               B    46    				jr nz,s_nfhdr
004BA7 10 F9               B    47    				djnz s_chdr
004BA9 18 08               B    48    				jr s_fhcsok
                           B    49    				
004BAB CD C4 4C 00         B    50    s_nfhdr			call s_badack					004BAF 3E85                B    51    				ld a,085h						004BB1 B7                  B    52    				or a
004BB2 C9                  B    53    				ret
                           B    54    		
004BB3 21100700            B    55    s_fhcsok		ld hl,serial_buffer+16			004BB7 11 2F 67 00         B    56    				ld de,serial_fileheader+16
004BBB 01040000            B    57    				ld bc,4
004BBF EDB0                B    58    				ldir
                           B    59    				
004BC1 21000700            B    60    				ld hl,serial_buffer
004BC5 11 1F 67 00         B    61    				ld de,serial_fileheader			004BC9 0610                B    62    				ld b,16							004BCB 7E                  B    63    s_tuclp			ld a,(hl)						004BCC B7                  B    64    				or a
004BCD 28 0B               B    65    				jr z,s_ffhswz	
004BCF CD 1C 13 00         B    66    				call os_uppercasify
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 201


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
004BD3 12                  B    67    				ld (de),a
004BD4 23                  B    68    				inc hl
004BD5 13                  B    69    				inc de
004BD6 10 F3               B    70    				djnz s_tuclp
004BD8 18 04               B    71    				jr s_tucdone
004BDA 12                  B    72    s_ffhswz		ld (de),a
004BDB 13                  B    73    				inc de
004BDC 10 FC               B    74    				djnz s_ffhswz		
                           B    75    	
004BDE 2A 08 67 00         B    76    s_tucdone		ld hl,(serial_fn_addr)			004BE2 7E                  B    77    				ld a,(hl)
004BE3 FE2A                B    78    				cp '*'
004BE5 28 14               B    79    				jr z,s_rffns					004BE7 11 1F 67 00         B    80    				ld de,serial_fileheader
004BEB 0610                B    81    				ld b,16
004BED CD E2 12 00         B    82    				call os_compare_strings
004BF1 28 08               B    83    				jr z,s_rffns
004BF3 CD C4 4C 00         B    84    s_rfnbad		call s_badack
004BF7 3E87                B    85    				ld a,087h						004BF9 B7                  B    86    				or a
004BFA C9                  B    87    				ret
                           B    88    				
004BFB DD21 1F 67 00       B    89    s_rffns			ld ix,serial_fileheader			004C00 AF                  B    90    				xor a
004C01 C9                  B    91    				ret
                           B    92    
004C02 F5                  B    93    s_fail			push af				
004C03 CD C4 4C 00         B    94    				call s_badack		 
004C07 F1                  B    95    				pop af
004C08 C9                  B    96    				ret
                           B    97    	
                           B    98    ;----------------------------------------------
                           B    99    ; .-------------------.
                           B   100    ; ! Receive file data !
                           B   101    ; '-------------------'
                           B   102    ;
                           B   103    ; Serial_get_header must be called first!
                           B   104    ;
                           B   105    ; Set:
                           B   106    ;
                           B   107    ; xHL = Address to load to [23:0]
                           B   108    ;
                           B   109    ; On return, if Zero flag is set, all OK (IX = 
                           B   110    ; Else A =  $84 = memory address out of range
                           B   111    ;           $85 = comms error
                           B   112    ;----------------------------------------------
                           B   113    
004C09                     B   114    serial_receive_file
                           B   115    
004C09 3E0A                B   116    				ld a,10							004C0B 32 1E 67 00         B   117    				ld (serial_timeout),a
004C0F E5                  B   118    				push hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 202


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
004C10 CD B3 4C 00         B   119    				call s_goodack					004C14 DDE1                B   120    				pop ix							004C16 ED5B 2F 67 00       B   121    				ld de,(serial_fileheader+16)	                           B   122    
004C1B CD 5D 4C 00         B   123    s_gbloop		call s_getblock
004C1F 20 E1               B   124    				jr nz,s_fail
004C21 0E00                B   125    				ld c,0							004C23 FD210007 00         B   126    				ld iy,serial_buffer
004C28 FD7E00              B   127    s_rfloop		ld a,(iy)
004C2B DD7700              B   128    				ld (ix),a						004C2E 1B                  B   129    				dec de							004C2F 21000000            B   130    				ld hl,0
004C33 AF                  B   131    				xor a
004C34 ED5A                B   132    				adc hl,de						004C36 28 1A               B   133    				jr z,s_rfabr					004C38 C5                  B   134    				push bc
004C39 01010000            B   135    				ld bc,1
004C3D DD09                B   136    				add ix,bc						004C3F C1                  B   137    				pop bc
004C40 30 05               B   138    				jr nc,s_nbt
004C42 3E84                B   139    				ld a,84h						004C44 B7                  B   140    				or a
004C45 18 BB               B   141    				jr s_fail
004C47 FD23                B   142    s_nbt			inc iy
004C49 0D                  B   143    				dec c
004C4A 20 DC               B   144    				jr nz,s_rfloop
004C4C CD B3 4C 00         B   145    				call s_goodack					004C50 18 C9               B   146    				jr s_gbloop
                           B   147    			
004C52 CD B3 4C 00         B   148    s_rfabr			call s_goodack					004C56 DD21 1F 67 00       B   149    				ld ix,serial_fileheader			004C5B AF                  B   150    				xor a							004C5C C9                  B   151    				ret
                           B   152    			
                           B   153    ;----------------------------------------------
                           B   154    
004C5D                     B   155    s_getblock
                           B   156    
                           B   157    ; carry set on return if timed out
                           B   158    
004C5D AF                  B   159    				xor a
004C5E 32 3F 67 00         B   160    				ld (serial_transfer_started),a	004C62 E5                  B   161    				push hl							004C63 D5                  B   162    				push de
004C64 C5                  B   163    				push bc
004C65 21000700            B   164    				ld hl,serial_buffer				004C69 0600                B   165    				ld b,0
004C6B D9                  B   166    				exx
004C6C 21FFFF00            B   167    				ld hl,0ffffh					004C70 D9                  B   168    				exx
004C71 CD E6 43 00         B   169    s_lgb			call receive_serial_byte
004C75 20 38               B   170    				jr nz,s_gberr					Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 203


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
004C77 F5                  B   171    				push af
004C78 3E01                B   172    				ld a,1
004C7A 32 3F 67 00         B   173    				ld (serial_transfer_started),a
004C7E F1                  B   174    				pop af
004C7F 77                  B   175    				ld (hl),a
004C80 D9                  B   176    				exx
004C81 AC                  B   177    				xor h							004C82 67                  B   178    				ld h,a			
004C83 0608                B   179    				ld b,8
004C85 4029                B   180    rxcrcbyte		add.sis hl,hl					004C87 30 08               B   181    				jr nc,rxcrcnext
004C89 7C                  B   182    				ld a,h
004C8A EE10                B   183    				xor 10h
004C8C 67                  B   184    				ld h,a
004C8D 7D                  B   185    				ld a,l
004C8E EE21                B   186    				xor 21h
004C90 6F                  B   187    				ld l,a
004C91 10 F2               B   188    rxcrcnext		djnz rxcrcbyte
004C93 D9                  B   189    				exx
004C94 23                  B   190    				inc hl
004C95 10 DA               B   191    				djnz s_lgb
004C97 D9                  B   192    				exx								                           B   193    			
004C98 CD E6 43 00         B   194    				call receive_serial_byte		004C9C 20 11               B   195    				jr nz,s_gberr
004C9E 4F                  B   196    				ld c,a
004C9F CD E6 43 00         B   197    				call receive_serial_byte
004CA3 20 0A               B   198    				jr nz,s_gberr		
004CA5 47                  B   199    				ld b,a
                           B   200    				
004CA6 AF                  B   201    				xor a							004CA7 52ED42              B   202    				sbc.s hl,bc						004CAA 28 03               B   203    				jr z,s_gberr
                           B   204    			
004CAC 3E86                B   205    				ld a,86h						004CAE B7                  B   206    				or a							004CAF C1                  B   207    s_gberr			pop bc
004CB0 D1                  B   208    				pop de
004CB1 E1                  B   209    				pop hl
004CB2 C9                  B   210    				ret
                           B   211    				
                           B   212    ;----------------------------------------------
                           B   213    
004CB3 C5                  B   214    s_goodack		push bc
004CB4 014F4B00            B   215    				ld bc,04b4fh					004CB8 79                  B   216    ackbytes		ld a,c
004CB9 CD 21 44 00         B   217    				call send_serial_byte
004CBD 78                  B   218    				ld a,b
004CBE CD 21 44 00         B   219    				call send_serial_byte
004CC2 C1                  B   220    				pop bc
004CC3 C9                  B   221    				ret
                           B   222    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 204


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
004CC4 C5                  B   223    s_badack		push bc
004CC5 01585800            B   224    				ld bc,05858h					004CC9 18 ED               B   225    				jr ackbytes
                           B   226    
004CCB C5                  B   227    s_holdack		push bc
004CCC 01575700            B   228    				ld bc,05757h					004CD0 18 E6               B   229    				jr ackbytes
                           B   230    				
                           B   231    ;==============================================
                           B   232    
                           B   233    ; .-----------.
                           B   234    ; ! Send file !
                           B   235    ; '-----------'
                           B   236    
                           B   237    ; Before calling set:-
                           B   238    
                           B   239    ;  xHL   = filename
                           B   240    ;  xDE   = length of file
                           B   241    ;  xIX   = Start address [23:0]
                           B   242    
                           B   243    ; On return, if zero flag is set, all OK. Else:
                           B   244    ; $81 = Save length is zero
                           B   245    ; $84 = memory address out of range
                           B   246    ; $85 = comms error
                           B   247    
                           B   248    
004CD2                     B   249    serial_send_file
                           B   250    			
004CD2 3E01                B   251    				ld a,1							004CD4 32 1E 67 00         B   252    				ld (serial_timeout),a
                           B   253    			
004CD8 DD22 02 67 00       B   254    				ld (serial_ez80_address),ix
004CDD ED53 2F 67 00       B   255    				ld (serial_fileheader+10h),de	004CE2 E5                  B   256    				push hl
004CE3 21000000            B   257    				ld hl,0
004CE7 AF                  B   258    				xor a
004CE8 ED5A                B   259    				adc hl,de
004CEA 20 05               B   260    				jr nz,s_flok
004CEC E1                  B   261    				pop hl
004CED 3E81                B   262    				ld a,081h						004CEF B7                  B   263    				or a							004CF0 C9                  B   264    				ret
                           B   265    			
004CF1 21 1F 67 00         B   266    s_flok			ld hl,serial_fileheader			004CF5 01100000            B   267    				ld bc,16
004CF9 AF                  B   268    				xor a
004CFA CD FC 15 00         B   269    				call os_bchl_memfill
004CFE E1                  B   270    				pop hl							004CFF 11 1F 67 00         B   271    				ld de,serial_fileheader
004D03 0610                B   272    				ld b,16
004D05 CD 01 13 00         B   273    				call os_copy_ascii_run
                           B   274    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 205


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
004D09 21 33 67 00         B   275    				ld hl,serial_header_id			004D0D 11 33 67 00         B   276    				ld de,serial_fileheader+014h
004D11 010C0000            B   277    				ld bc,12		
004D15 EDB0                B   278    				ldir
                           B   279    			
004D17 DD21 1F 67 00       B   280    				ld ix,serial_fileheader			004D1C 11200000            B   281    				ld de,32
004D20 CD 56 4D 00         B   282    				call s_makeblock			
004D24 C0                  B   283    				ret nz
004D25 CD 8E 4D 00         B   284    				call s_sendblock
004D29 C0                  B   285    				ret nz
004D2A CD BB 4D 00         B   286    				call s_waitack					004D2E C0                  B   287    				ret nz							                           B   288    				
004D2F DD2A 02 67 00       B   289    				ld ix,(serial_ez80_address)
004D34 ED5B 2F 67 00       B   290    				ld de,(serial_fileheader+16)	004D39 CD 56 4D 00         B   291    s_sbloop		call s_makeblock				004D3D 38 16               B   292    				jr c,s_rerr
004D3F CD 8E 4D 00         B   293    				call s_sendblock				004D43 38 10               B   294    				jr c,s_rerr	
004D45 CD BB 4D 00         B   295    				call s_waitack					004D49 38 0A               B   296    				jr c,s_rerr
004D4B 21000000            B   297    				ld hl,0
004D4F AF                  B   298    				xor a
004D50 ED5A                B   299    				adc hl,de
004D52 20 E5               B   300    				jr nz,s_sbloop					004D54 AF                  B   301    				xor a							004D55 C9                  B   302    s_rerr			ret
                           B   303    
                           B   304    ;----------------------------------------------
                           B   305    
004D56                     B   306    s_makeblock
                           B   307    
                           B   308    ; set xIX = src addr
                           B   309    ; xDE = byte count
                           B   310    ; a=0 on return if all ok	
                           B   311    
004D56 21000700            B   312    				ld hl,serial_buffer				004D5A 01000100            B   313    				ld bc,256						004D5E AF                  B   314    				xor a							004D5F CD FC 15 00         B   315    				call os_bchl_memfill			                           B   316    				
004D63 0600                B   317    				ld b,0							004D65 FD210007 00         B   318    				ld iy,serial_buffer	
004D6A DD7E00              B   319    s_sloop			ld a,(ix)
004D6D FD7700              B   320    				ld (iy),a
004D70 1B                  B   321    				dec de							004D71 21000000            B   322    				ld hl,0
004D75 AF                  B   323    				xor a
004D76 ED5A                B   324    				adc hl,de
004D78 28 12               B   325    				jr z,s_mbend	
004D7A FD23                B   326    				inc iy							Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 206


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
004D7C C5                  B   327    				push bc
004D7D 01010000            B   328    				ld bc,1
004D81 DD09                B   329    				add ix,bc						004D83 C1                  B   330    				pop bc							004D84 20 04               B   331    				jr nz,s_sbok
004D86 3E84                B   332    				ld a,84h						004D88 B7                  B   333    				or a
004D89 C9                  B   334    				ret
004D8A 10 DE               B   335    s_sbok			djnz s_sloop
004D8C AF                  B   336    s_mbend			xor a
004D8D C9                  B   337    				ret
                           B   338    
                           B   339    
                           B   340    
004D8E                     B   341    s_sendblock
                           B   342    
004D8E E5                  B   343    				push hl
004D8F D5                  B   344    				push de							004D90 C5                  B   345    				push bc				
004D91 21000700            B   346    				ld hl,serial_buffer			
004D95 1E00                B   347    				ld e,0
004D97 7E                  B   348    s_sblklp		ld a,(hl)
004D98 CD 21 44 00         B   349    				call send_serial_byte
004D9C 23                  B   350    				inc hl
004D9D 1D                  B   351    				dec e
004D9E 20 F7               B   352    				jr nz,s_sblklp
004DA0 11000700            B   353    				ld de,serial_buffer
004DA4 01000000            B   354    				ld bc,0
004DA8 CD A2 15 00         B   355    				call crc_checksum
004DAC 7D                  B   356    				ld a,l
004DAD CD 21 44 00         B   357    				call send_serial_byte
004DB1 7C                  B   358    				ld a,h
004DB2 CD 21 44 00         B   359    				call send_serial_byte
004DB6 AF                  B   360    				xor a
004DB7 C1                  B   361    s_popall		pop bc
004DB8 D1                  B   362    				pop de
004DB9 E1                  B   363    				pop hl
004DBA C9                  B   364    				ret
                           B   365    	
                           B   366    
004DBB                     B   367    s_waitack
004DBB E5                  B   368    				push hl
004DBC D5                  B   369    				push de
004DBD C5                  B   370    				push bc
004DBE CD E6 43 00         B   371    				call receive_serial_byte		004DC2 20 F3               B   372    				jr nz,s_popall
004DC4 47                  B   373    				ld b,a
004DC5 CD E6 43 00         B   374    				call receive_serial_byte
004DC9 20 EC               B   375    				jr nz,s_popall
004DCB 4F                  B   376    				ld c,a
004DCC 264F                B   377    				ld h,'O'
004DCE 2E4B                B   378    				ld l,'K'
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 207


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
004DD0 AF                  B   379    				xor a
004DD1 52ED42              B   380    				sbc.s hl,bc						004DD4 28 E1               B   381    				jr z,s_popall					                           B   382    			
004DD6 3E85                B   383    				ld a,085h						004DD8 B7                  B   384    				or a
004DD9 18 DC               B   385    				jr s_popall
                           B   386    
                           B   387    	
                           B   388    ;----------------------------------------------
                           B     0    	include		'prose_fat16_code_v08.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; eZ80 FAT16 File System code for PROSE by Phil
                           B     3    ;----------------------------------------------
                           B     4    ;
                           B     5    ; Changes:
                           B     6    ;
                           B     7    ; 0.08 - Speeded up reading of files (pre-calc 
                           B     8    ;        All routines return with ZF not set if
                           B     9    ;
                           B    10    ; 0.07 - Made compatible with v1.10 drivers (ZF
                           B    11    ; 0.06 - Fixed "fs_get_volume_label"
                           B    12    ; 0.05 - Fixed format command
                           B    13    ; 0.04 - File system error codes are now in the
                           B    14    ; 0.03 - ADL mode
                           B    15    ; 0.02 - removed references to banks, added 24 
                           B    16    ; 0.01 - first version based on FLOS routines v
                           B    17    ;
                           B    18    ; Known limitations:
                           B    19    ; ------------------
                           B    20    ; If a disk full error is returned during a fil
                           B    21    ; Allows a file to be created in root even if t
                           B    22    ;        
                           B    23    ;----------------------------------------------
                           B    24    ;
                           B    25    ; All routines return carry clear / zero flag s
                           B    26    ;
                           B    27    ; If carry set there was a driver error, A = Er
                           B    28    ; Check for "carry set" first!
                           B    29    ; If carry clear, check zero flag. If not set: 
                           B    30    ;
                           B    31    ;					$c1  - Disk full
                           B    32    ;					$c2  - file not found
                           B    33    ;             	    $c3  - (root) dir table is 
                           B    34    ;					$c4  - directory requested 
                           B    35    ;             	    $c5  - cant delete dir, it 
                           B    36    ;					$c6  - not a file
                           B    37    ;					$c7  - file length is zero
                           B    38    ;              	    $c8  - out of memory
                           B    39    ;					$c9  - filename already exi
                           B    40    ;					$ca  - already at root dire
                           B    41    ;                  	$cb  - directory not found
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 208


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
                           B    42    ;					$cc  - requested bytes beyo
                           B    43    ;					$cd  - invalid filename
                           B    44    ;					$ce  - unknown/incorrect di
                           B    45    ;					$cf  - invalid volume
                           B    46    ;                 	$d0  - device not present	                           B    47    ;					$d1  - directory not found	                           B    48    ;                 	$d2  - end of directory lis
                           B    49    ;                 	$d3  - device does not use 
                           B    50    ;                  	$d4  - cant find volume lab
                           B    51    ;                   $d5  - sector out of range
                           B    52    
                           B    53    ;----------------------------------------------
                           B    54    ; Main routines called by external programs
                           B    55    ;----------------------------------------------
                           B    56    
004DDB                     B    57    fs_format_device_command
                           B    58    
                           B    59    ; Creates a single partition (truncated to 2GB)
                           B    60    
                           B    61    
004DDB 3A 50 67 00         B    62    				ld a,(device_count)				004DDF 47                  B    63    				ld b,a							004DE0 DD21 FA 67 00       B    64    				ld ix,host_device_hardware_info
004DE5 3A 4F 67 00         B    65    fdevinfo		ld a,(current_driver)
004DE9 DDBE00              B    66    				cp (ix)
004DEC 28 09               B    67    				jr z,got_dev_info
004DEE ED3220              B    68    				lea ix,ix+32
004DF1 10 F2               B    69    				djnz fdevinfo
004DF3 3ED0                B    70    				ld a,0d0h						004DF5 B7                  B    71    				or a
004DF6 C9                  B    72    				ret	
                           B    73    	
004DF7 CD CC 58 00         B    74    got_dev_info	call fs_clear_sector_buffer		004DFB 11000000            B    75    				ld de,0							004DFF CD EF 4E 00         B    76    form_ws			call set_lba_and_write_sector
004E03 D8                  B    77    				ret c
004E04 13                  B    78    				inc de
004E05 7A                  B    79    				ld a,d
004E06 FE03                B    80    				cp 3
004E08 20 F5               B    81    				jr nz,form_ws
                           B    82    	
004E0A 21 A8 5B 00         B    83    				ld hl,bootsector_stub			004E0E 11000800            B    84    				ld de,sector_buffer				004E12 013F0000            B    85    				ld bc,03fh
004E16 EDB0                B    86    				ldir
                           B    87    	
004E18 DD7E04              B    88    				ld a,(ix+4)						004E1B B7                  B    89    				or a
004E1C 20 0C               B    90    				jr nz,above_2gb
004E1E 2100003F            B    91    				ld hl,3f0000h					004E22 DD1701              B    92    				ld de,(ix+1)					004E25 AF                  B    93    				xor a			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 209


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
004E26 ED52                B    94    				sbc hl,de						004E28 30 08               B    95    				jr nc,lessthan2gb				004E2A 3E40                B    96    above_2gb		ld a,40h						004E2C 1100003F            B    97    				ld de,3f0000h					004E30 18 11               B    98    				jr spcvalok
                           B    99    
004E32 DD4E03              B   100    lessthan2gb		ld c,(ix+3)						004E35 0C                  B   101    				inc c							004E36 3E01                B   102    spc_loop		ld a,1							004E38 B9                  B   103    spc_comp		cp c							004E39 28 08               B   104    				jr z,spcvalok
004E3B 07                  B   105    				rlca
004E3C FE80                B   106    				cp 080h							004E3E 20 F8               B   107    				jr nz,spc_comp
004E40 0C                  B   108    				inc c			
004E41 18 F3               B   109    				jr spc_loop						                           B   110    							
004E43 DD210008 00         B   111    spcvalok		ld ix,sector_buffer
004E48 DD770D              B   112    				ld (ix+0dh),a					                           B   113    				
004E4B CD 19 16 00         B   114    				call os_get_xde_msb				004E4F 4F                  B   115    				ld c,a							004E50 B7                  B   116    				or a							004E51 20 08               B   117    				jr nz,ts_dword					004E53 DD7313              B   118    				ld (ix+13h),e					004E56 DD7214              B   119    				ld (ix+14h),d
004E59 18 07               B   120    				jr ts_done
004E5B DD1F20              B   121    ts_dword		ld (ix+20h),de					004E5E DD362300            B   122    				ld (ix+23h),0
                           B   123    
004E62 EB                  B   124    ts_done			ex de,hl						004E63 11000000            B   125    				ld de,0						
004E67 DD560D              B   126    				ld d,(ix+0dh)					004E6A 01000000            B   127    				ld bc,0							004E6E AF                  B   128    div_tscls		xor a							004E6F ED52                B   129    				sbc hl,de
004E71 28 05               B   130    				jr z,gotfats
004E73 38 03               B   131    				jr c,gotfats	
004E75 03                  B   132    				inc bc
004E76 18 F6               B   133    				jr div_tscls
004E78 03                  B   134    gotfats			inc bc
004E79 DD7116              B   135    				ld (ix+16h),c					004E7C DD7017              B   136    				ld (ix+17h),b
004E7F ED43 F8 5B 00       B   137    				ld (fs_sectors_per_fat),bc
                           B   138    				
004E84 010055AA            B   139    				ld bc,0aa5500h
004E88 ED43FD09 00         B   140    				ld (sector_buffer+1fdh),bc		004E8D 11000000            B   141    				ld de,0
004E91 CD EF 4E 00         B   142    				call set_lba_and_write_sector	004E95 D8                  B   143    				ret c
                           B   144    				
004E96 21000000            B   145    				ld hl,0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 210


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
004E9A DD6E0E              B   146    				ld l,(ix+0eh)					004E9D DD660F              B   147    				ld h,(ix+0fh)
004EA0 19                  B   148    				add hl,de
004EA1 EB                  B   149    				ex de,hl						                           B   150    				
004EA2 CD CC 58 00         B   151    				call fs_clear_sector_buffer		004EA6 DD3600FF            B   152    				ld (ix+0),0ffh
004EAA DD3601F8            B   153    				ld (ix+1),0f8h
004EAE DD3602FF            B   154    				ld (ix+2),0ffh
004EB2 DD3603FF            B   155    				ld (ix+3),0ffh
004EB6 CD EF 4E 00         B   156    				call set_lba_and_write_sector	004EBA D8                  B   157    				ret c
                           B   158    
004EBB 2A F8 5B 00         B   159    				ld hl,(fs_sectors_per_fat)	
004EBF 19                  B   160    				add hl,de
004EC0 EB                  B   161    				ex de,hl
004EC1 CD EF 4E 00         B   162    				call set_lba_and_write_sector 	004EC5 D8                  B   163    				ret c	
                           B   164    				
004EC6 D5                  B   165    				push de							004EC7 CD CC 58 00         B   166    				call fs_clear_sector_buffer
004ECB 21 FE 5B 00         B   167    				ld hl,fs_sought_filename
004ECF 11000800            B   168    				ld de,sector_buffer
004ED3 010B0000            B   169    				ld bc,11
004ED7 EDB0                B   170    				ldir							004ED9 D1                  B   171    				pop de							004EDA DD360B08            B   172    				ld (ix+0bh),8					004EDE DD361821            B   173    				ld (ix+018h),021h				004EE2 2A F8 5B 00         B   174    				ld hl,(fs_sectors_per_fat)		004EE6 19                  B   175    				add hl,de
004EE7 EB                  B   176    				ex de,hl
004EE8 CD EF 4E 00         B   177    				call set_lba_and_write_sector	004EEC D8                  B   178    				ret c	
                           B   179    			
004EED AF                  B   180    				xor a							004EEE C9                  B   181    				ret
                           B   182    	
                           B   183    
                           B   184    
004EEF                     B   185    set_lba_and_write_sector
                           B   186    
004EEF DDE5                B   187    				push ix
004EF1 DD21 31 69 00       B   188    				ld ix,sector_lba0				004EF6 DD1F00              B   189    				ld (ix),de						004EF9 DD360300            B   190    				ld (ix+3),0
004EFD DDE1                B   191    				pop ix
004EFF CD 6F 5B 00         B   192    				call fs_write_sector
004F03 C9                  B   193    				ret
                           B   194    				
                           B   195    				
                           B   196    ;----------------------------------------------
                           B   197    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 211


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
004F04                     B   198    fs_get_partition_info
                           B   199    
                           B   200    ; Set A to partition: $00 to $03
                           B   201    ; On return: If A = $00, xHL = Address of reque
                           B   202    ;            If A = $25, A partition table is n
                           B   203    ;            If A = $13, Disk format is bad 
                           B   204    ;            If carry flag set, there was a har
                           B   205    
                           B   206    
004F04 32 7D 68 00         B   207    				ld (partition_temp),a
                           B   208    				
004F08 21000000            B   209    				ld hl,0							004F0C 22 31 69 00         B   210    				ld (sector_lba0),hl
004F10 7D                  B   211    				ld a,l
004F11 32 34 69 00         B   212    				ld (sector_lba3),a
004F15 CD 46 5B 00         B   213    				call fs_read_sector
004F19 D8                  B   214    				ret c
                           B   215    			
004F1A CD 55 4F 00         B   216    				call fs_check_fat_sig			004F1E 20 42               B   217    				jr nz,formbad
                           B   218    			
004F20 CD 46 4F 00         B   219    				call check_fat16_id				004F24 28 1C               B   220    				jr z,at_pbs						                           B   221    				
004F26 3AC20900            B   222    				ld a,(sector_buffer+01c2h)		004F2A E604                B   223    				and 4							004F2C 28 34               B   224    				jr z,formbad	
004F2E 11000000            B   225    				ld de,0
004F32 3A 7D 68 00         B   226    				ld a,(partition_temp)
004F36 5F                  B   227    				ld e,a
004F37 1610                B   228    				ld d,16
004F39 ED5C                B   229    				mlt de
004F3B 21BE0900            B   230    				ld hl,sector_buffer+01beh
004F3F 19                  B   231    				add hl,de						004F40 AF                  B   232    				xor a
004F41 C9                  B   233    				ret
                           B   234    					
004F42 3ED3                B   235    at_pbs			ld a,0d3h						004F44 B7                  B   236    				or a
004F45 C9                  B   237    				ret
                           B   238    
                           B   239    
                           B   240    
004F46                     B   241    check_fat16_id
                           B   242    		
004F46 21360800            B   243    				ld hl,sector_buffer+036h		004F4A 11 05 61 00         B   244    				ld de,fat16_txt			
004F4E 0605                B   245    				ld b,5
004F50 CD E2 12 00         B   246    				call os_compare_strings
004F54 C9                  B   247    				ret
                           B   248    				
                           B   249    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 212


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
                           B   250    
                           B   251    
004F55                     B   252    fs_check_fat_sig
                           B   253    
004F55 2AFE0900            B   254    				ld hl,(sector_buffer+01feh)		004F59 1155AA00            B   255    				ld de,0aa55h
004F5D AF                  B   256    				xor a
004F5E 52ED52              B   257    				sbc.s hl,de						004F61 C9                  B   258    				ret
                           B   259    			
                           B   260    			
                           B   261    			
004F62 3ECE                B   262    formbad			ld a,0ceh						004F64 B7                  B   263    				or a
004F65 C9                  B   264    				ret
                           B   265    
                           B   266    ;----------------------------------------------
                           B   267    
                           B   268    
004F66                     B   269    fs_check_disk_format
                           B   270    
                           B   271    ; ensures disk is FAT16, sets up constants..
                           B   272    	
004F66 C5                  B   273    				push bc
004F67 D5                  B   274    				push de
004F68 E5                  B   275    				push hl
004F69 CD 71 4F 00         B   276    				call go_checkf
004F6D E1                  B   277    				pop hl
004F6E D1                  B   278    				pop de
004F6F C1                  B   279    				pop bc
004F70 C9                  B   280    				ret
                           B   281    				
004F71 CD 38 50 00         B   282    go_checkf		call fs_read_partition_bootsect
004F75 D8                  B   283    				ret c
004F76 B7                  B   284    				or a
004F77 C0                  B   285    				ret nz
                           B   286    				
004F78 CD 55 4F 00         B   287    				call fs_check_fat_sig			004F7C 20 E4               B   288    				jr nz,formbad		
                           B   289    			
004F7E CD 46 4F 00         B   290    				call check_fat16_id				004F82 20 DE               B   291    				jr nz,formbad
                           B   292    			
004F84 DD210008 00         B   293    				ld ix,sector_buffer
004F89 DD270B              B   294    				ld hl,(ix+0bh)					004F8C 11000200            B   295    				ld de,512						004F90 AF                  B   296    				xor a
004F91 52ED52              B   297    				sbc.s hl,de						004F94 20 CC               B   298    				jr nz,formbad
                           B   299    			
004F96 DD7E0D              B   300    				ld a,(ix+0dh)					004F99 32 E7 5B 00         B   301    				ld (fs_cluster_size),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 213


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
004F9D CB27                B   302    				sla a
004F9F 32 E9 5B 00         B   303    				ld (fs_bytes_per_cluster+1),a
                           B   304    							
004FA3 21000000            B   305    				ld hl,0
004FA7 DD6E0E              B   306    				ld l,(ix+0eh)					004FAA DD660F              B   307    				ld h,(ix+0fh)
004FAD 22 EB 5B 00         B   308    				ld (fs_fat1_position),hl		004FB1 11000000            B   309    				ld de,0
004FB5 DD5E16              B   310    				ld e,(ix+16h)					004FB8 DD5617              B   311    				ld d,(ix+17h)
004FBB ED53 F8 5B 00       B   312    				ld (fs_sectors_per_fat),de
004FC0 19                  B   313    				add hl,de
004FC1 22 EE 5B 00         B   314    				ld (fs_fat2_position),hl		004FC5 19                  B   315    				add hl,de
004FC6 22 F1 5B 00         B   316    				ld (fs_root_dir_position),hl 	004FCA EB                  B   317    				ex de,hl
004FCB DD6E11              B   318    				ld l,(ix+11h)					004FCE DD6612              B   319    				ld h,(ix+12h)					004FD1 7C                  B   320    				ld a,h
004FD2 B5                  B   321    				or l
004FD3 28 8D               B   322    				jr z,formbad					004FD5 29                  B   323    				add hl,hl						004FD6 29                  B   324    				add hl,hl						004FD7 29                  B   325    				add hl,hl
004FD8 29                  B   326    				add hl,hl
004FD9 EB                  B   327    				ex de,hl
004FDA 7A                  B   328    				ld a,d
004FDB 32 F7 5B 00         B   329    				ld (fs_root_dir_sectors),a		004FDF 01000000            B   330    				ld bc,0
004FE3 4A                  B   331    				ld c,d
004FE4 09                  B   332    				add hl,bc				
004FE5 22 F4 5B 00         B   333    				ld (fs_data_area),hl			                           B   334    												004FE9 21000000            B   335    				ld hl,0
004FED 01000000            B   336    				ld bc,0
004FF1 DD4E22              B   337    				ld c,(ix+022h)					004FF4 DD4623              B   338    				ld b,(ix+023h)
004FF7 DD6E13              B   339    				ld l,(ix+013h)					004FFA DD6614              B   340    				ld h,(ix+014h)
004FFD 7C                  B   341    				ld a,h							004FFE B5                  B   342    				or l
004FFF 20 06               B   343    				jr nz,got_tsfbs
005001 DD6E20              B   344    				ld l,(ix+020h)					005004 DD6621              B   345    				ld h,(ix+021h)
005007 ED5B F4 5B 00       B   346    got_tsfbs 		ld de,(fs_data_area)
00500C AF                  B   347    				xor a							00500D 52ED52              B   348    				sbc.s hl,de						005010 30 02               B   349    				jr nc,nomxcb
005012 520B                B   350    				dec.s bc
005014 3A E7 5B 00         B   351    nomxcb			ld a,(fs_cluster_size)
005018 CB3F                B   352    fmaxcl			srl a
00501A 28 08               B   353    				jr z,got_cmaxc					Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 214


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
00501C CB39                B   354    				srl c				
00501E CB1C                B   355    				rr h
005020 CB1D                B   356    				rr l
005022 18 F4               B   357    				jr fmaxcl
005024 E5                  B   358    got_cmaxc		push hl							005025 11F0FF00            B   359    				ld de,0fff0h
005029 AF                  B   360    				xor a
00502A 52ED52              B   361    				sbc.s hl,de						00502D 38 02               B   362    				jr c,cmaxok
00502F E1                  B   363    				pop hl
005030 D5                  B   364    				push de
005031 E1                  B   365    cmaxok			pop hl
005032 22 FB 5B 00         B   366    				ld (fs_max_data_clusters),hl
005036 AF                  B   367    				xor a
005037 C9                  B   368    				ret				
                           B   369    
                           B   370    ;----------------------------------------------
                           B   371    
005038                     B   372    fs_read_partition_bootsector
                           B   373    
005038 CD 14 1B 00         B   374    				call fs_calc_volume_offset		00503C 21 7A 67 00         B   375    				ld hl,volume_mount_list
005040 19                  B   376    				add hl,de
005041 7E                  B   377    				ld a,(hl)
005042 B7                  B   378    				or a							005043 20 04               B   379    				jr nz,fs_volpre
005045 3ECF                B   380    				ld a,0cfh						005047 B7                  B   381    				or a
005048 C9                  B   382    				ret
                           B   383    			
005049 11080000            B   384    fs_volpre		ld de,8							00504D 19                  B   385    				add hl,de
00504E 11 31 69 00         B   386    				ld de,sector_lba0
005052 01040000            B   387    				ld bc,4
005056 EDB0                B   388    				ldir
005058 CD 46 5B 00         B   389    				call fs_read_sector
00505C C9                  B   390    				ret	
                           B   391    
                           B   392    ;----------------------------------------------
                           B   393    
00505D                     B   394    fs_calc_free_space
                           B   395    
                           B   396    ;returns free space in KB in HL:DE
                           B   397    
00505D ED5B FB 5B 00       B   398    				ld de,(fs_max_data_clusters)
005062 13                  B   399    				inc de
005063 13                  B   400    				inc de							005064 D5                  B   401    				push de
005065 DDE1                B   402    				pop ix
                           B   403    			
005067 AF                  B   404    				xor a
005068 32 40 5C 00         B   405    cfs_lp2			ld (fs_working_sector),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 215


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
00506C 2A EB 5B 00         B   406    				ld hl,(fs_fat1_position)
005070 CD 1C 5B 00         B   407    				call set_abs_lba_and_read_secto
005074 D8                  B   408    				ret c
                           B   409    				
005075 21000800            B   410    				ld hl,sector_buffer
005079 0600                B   411    				ld b,0
00507B AF                  B   412    cfs_lp1			xor a
00507C B6                  B   413    				or a,(hl)						00507D 23                  B   414    				inc hl							00507E 20 03               B   415    				jr nz,cfs_ciu					005080 B6                  B   416    				or a,(hl)
005081 28 02               B   417    				jr z,cfs_ddcc
005083 DD2B                B   418    cfs_ciu			dec ix							005085 23                  B   419    cfs_ddcc		inc hl
005086 1B                  B   420    				dec de
005087 7A                  B   421    				ld a,d
005088 B3                  B   422    				or e
005089 28 09               B   423    				jr z,cfs_ok						00508B 10 EE               B   424    				djnz cfs_lp1
00508D 3A 40 5C 00         B   425    				ld a,(fs_working_sector)
005091 3C                  B   426    				inc a
005092 18 D4               B   427    				jr cfs_lp2
                           B   428    				
005094 3A E7 5B 00         B   429    cfs_ok			ld a,(fs_cluster_size)			005098 CB3F                B   430    cltoslp			srl a
00509A 28 04               B   431    				jr z,powdone
00509C DD29                B   432    				add ix,ix
00509E 18 F8               B   433    				jr cltoslp	
0050A0 FD21 4D 69 00       B   434    powdone			ld iy,xrr_temp
0050A5 FD3E00              B   435    				ld (iy),ix						0050A8 FDCB023E            B   436    				srl (iy+2)
0050AC FDCB011E            B   437    				rr (iy+1)
0050B0 FDCB001E            B   438    				rr (iy+0)						0050B4 FD1700              B   439    				ld de,(iy)						0050B7 AF                  B   440    				xor a
0050B8 C9                  B   441    				ret
                           B   442    
                           B   443    ;----------------------------------------------
                           B   444    
0050B9                     B   445    fs_change_dir_command
                           B   446    
                           B   447    ; INPUT: HL = directory name ascii (zero/space 
                           B   448    			
                           B   449    			
0050B9 CD DE 58 00         B   450    				call fs_find_filename			0050BD D8                  B   451    				ret c							0050BE FEC2                B   452    				cp 0c2h							0050C0 20 04               B   453    				jr nz,founddir
0050C2 3ED1                B   454    				ld a,0d1h						0050C4 B7                  B   455    				or a
0050C5 C9                  B   456    				ret
                           B   457    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 216


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
0050C6 DDCB0B66            B   458    founddir		bit 4,(ix+0bh)
0050CA 20 04               B   459    				jr nz,fs_isadir
0050CC 3EC4                B   460    				ld a,0c4h
0050CE B7                  B   461    				or a
0050CF C9                  B   462    				ret
                           B   463    				
0050D0 11000000            B   464    fs_isadir		ld de,0
0050D4 DD5E1A              B   465    				ld e,(ix+01ah)
0050D7 DD561B              B   466    				ld d,(ix+01bh)					0050DA CD E6 1A 00         B   467    				call fs_update_dir_cluster
0050DE AF                  B   468    				xor a
0050DF C9                  B   469    				ret
                           B   470    
                           B   471    
                           B   472    ;----------------------------------------------
                           B   473    	
                           B   474    	
0050E0                     B   475    fs_goto_root_dir_command
                           B   476    
0050E0 D5                  B   477    				push de
0050E1 11000000            B   478    				ld de,0
0050E5 CD E6 1A 00         B   479    				call fs_update_dir_cluster
0050E9 D1                  B   480    				pop de
0050EA AF                  B   481    				xor a
0050EB C9                  B   482    				ret
                           B   483    
                           B   484    ;----------------------------------------------
                           B   485    	
                           B   486    	
0050EC                     B   487    fs_parent_dir_command
                           B   488    
0050EC CD DA 1A 00         B   489    				call fs_get_dir_cluster
0050F0 7A                  B   490    				ld a,d
0050F1 B3                  B   491    				or e
0050F2 20 04               B   492    				jr nz,pdnaroot
0050F4 3ECA                B   493    				ld a,0cah						0050F6 B7                  B   494    				or a
0050F7 C9                  B   495    				ret
0050F8 212E2E20            B   496    pdnaroot		ld hl,0202e2eh					0050FC 22 FE 5B 00         B   497    				ld (fs_sought_filename),hl		005100 21 01 5C 00         B   498    				ld hl,fs_sought_filename+3		005104 3E20                B   499    				ld a,32
005106 01080000            B   500    				ld bc,8
00510A CD FC 15 00         B   501    				call os_bchl_memfill
00510E 18 A9               B   502    				jr fs_change_dir_command
                           B   503    				
                           B   504    		
                           B   505    ;----------------------------------------------
                           B   506    		
005110                     B   507    fs_open_file_command
                           B   508    
                           B   509    ; INPUT: xHL = directory name ascii (zero/space
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 217


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
                           B   510    ; OUTPUT: C:xDE  = File length
                           B   511    ;            HL  = Start cluster of file
                           B   512    ;            Internal vars (file pointer reset 
                           B   513    
                           B   514    			
005110 CD DE 58 00         B   515    				call fs_find_filename			005114 D8                  B   516    				ret c							005115 C0                  B   517    				ret nz							                           B   518    								
005116 3EC6                B   519    				ld a,0c6h						005118 DDCB0B66            B   520    				bit 4,(ix+0bh)
00511C C0                  B   521    				ret nz
                           B   522    
00511D AF                  B   523    				xor a
00511E 32 54 5C 00         B   524    				ld (fs_filepointer_valid),a		005122 21000000            B   525    				ld hl,0
005126 22 22 5C 00         B   526    				ld (fs_file_pointer),hl			00512A 32 25 5C 00         B   527    				ld (fs_file_pointer+3),a		00512E 22 60 5C 00         B   528    				ld (fs_sector_last_read_lba0),h
005132 32 63 5C 00         B   529    				ld (fs_sector_last_read_lba0+3)
                           B   530    
005136 DD171C              B   531    				ld de,(ix+01ch)
005139 D5                  B   532    				push de
00513A E1                  B   533    				pop hl
00513B DD4E1F              B   534    				ld c,(ix+01fh)					00513E ED53 26 5C 00       B   535    				ld (fs_file_length),de			005143 79                  B   536    				ld a,c
005144 32 29 5C 00         B   537    				ld (fs_file_length+3),a			005148 B7                  B   538    				or a							005149 28 04               B   539    				jr z,fs_dflsm					00514B 21FFFFFF            B   540    				ld hl,0ffffffh
00514F 22 2E 5C 00         B   541    fs_dflsm		ld (fs_file_transfer_length),hl
                           B   542    				
005153 21000000            B   543    				ld hl,0
005157 DD6E1A              B   544    				ld l,(ix+01ah)		
00515A DD661B              B   545    				ld h,(ix+01bh)
00515D 22 31 5C 00         B   546    				ld (fs_file_start_cluster),hl	                           B   547    				
005161 AF                  B   548    				xor a
005162 C9                  B   549    				ret
                           B   550    
                           B   551    
                           B   552    ;----------------------------------------------
                           B   553    
005163                     B   554    fs_read_data_command		
                           B   555    
                           B   556    ;*******************************************
                           B   557    ;*** 'fs_open_file' must be called first ***
                           B   558    ;*******************************************
                           B   559    		
005163 CD A2 52 00         B   560    fs_load			call fs_test_transfer_length	005167 20 04               B   561    				jr nz,fs_btrok
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 218


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
                           B   562    
005169 3EC7                B   563    fs_fliz			ld a,0c7h						00516B B7                  B   564    				or a
00516C C9                  B   565    				ret
                           B   566    			 
00516D 2A 37 5C 00         B   567    fs_btrok		ld hl,(fs_ez80_address)			005171 22 3A 5C 00         B   568    				ld (fs_ez80_working_address),hl
                           B   569    			
005175 2A 22 5C 00         B   570    				ld hl,(fs_file_pointer)			005179 3A 25 5C 00         B   571    				ld a,(fs_file_pointer+3)		00517D 11010000            B   572    				ld de,1							005181 19                  B   573    				add hl,de
005182 CE00                B   574    				adc a,0
005184 4F                  B   575    				ld c,a
005185 EB                  B   576    				ex de,hl						005186 2A 26 5C 00         B   577    				ld hl,(fs_file_length)			00518A 3A 29 5C 00         B   578    				ld a,(fs_file_length+3)			00518E B7                  B   579    				or a							00518F ED52                B   580    				sbc hl,de						005191 99                  B   581    				sbc a,c
005192 DA F3 51 00         B   582    				jp c,fs_rd_eof
                           B   583    					
005196 3A 54 5C 00         B   584    fs_fpok			ld a,(fs_filepointer_valid)		00519A B7                  B   585    				or a							00519B 20 46               B   586    				jr nz,fs_get_sector_if_necessar
                           B   587    			
00519D 3E01                B   588    seek_strt		ld a,1
00519F 32 54 5C 00         B   589    				ld (fs_filepointer_valid),a
0051A3 2A 31 5C 00         B   590    				ld hl,(fs_file_start_cluster)	0051A7 22 34 5C 00         B   591    				ld (fs_file_working_cluster),hl
                           B   592    			
0051AB 3A 25 5C 00         B   593    				ld a,(fs_file_pointer+3)		0051AF 2A 22 5C 00         B   594    				ld hl,(fs_file_pointer)			0051B3 ED4B E8 5B 00       B   595    fs_fpblp		ld bc,(fs_bytes_per_cluster)
0051B8 AF                  B   596    				xor a
0051B9 ED42                B   597    				sbc hl,bc						0051BB DE00                B   598    				sbc a,0
0051BD 38 14               B   599    				jr c,fs_fpgbo
0051BF E5                  B   600    				push hl				
0051C0 2A 34 5C 00         B   601    				ld hl,(fs_file_working_cluster)
0051C4 CD EE 59 00         B   602    				call get_fat_entry_for_cluster
0051C8 30 02               B   603    				jr nc,fs_ghok					0051CA E1                  B   604    				pop hl
0051CB C9                  B   605    				ret
0051CC 22 34 5C 00         B   606    fs_ghok			ld (fs_file_working_cluster),hl
0051D0 E1                  B   607    				pop hl
0051D1 18 E0               B   608    				jr fs_fpblp
                           B   609    			
0051D3 09                  B   610    fs_fpgbo		add hl,bc						0051D4 7C                  B   611    				ld a,h
0051D5 CB3F                B   612    				srl a							0051D7 32 55 5C 00         B   613    				ld (fs_sector_pos_cnt),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 219


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
0051DB 7C                  B   614    				ld a,h
0051DC E601                B   615    				and 01h
0051DE 67                  B   616    				ld h,a
0051DF 22 3D 5C 00         B   617    				ld (fs_in_sector_offset),hl		                           B   618    
                           B   619    				
                           B   620    
0051E3                     B   621    fs_get_sector_if_necessary
                           B   622    				
0051E3 CD A2 52 00         B   623    				call fs_test_transfer_length	0051E7 28 64               B   624    				jr z,fs_read_done	
                           B   625    				
0051E9 2A 34 5C 00         B   626    				ld hl,(fs_file_working_cluster)
0051ED CD 97 57 00         B   627    				call fs_compare_hl_fff8			0051F1 38 04               B   628    				jr c,fs_rd_noteof		
0051F3 3ECC                B   629    fs_rd_eof		ld a,0cch						0051F5 B7                  B   630    				or a
0051F6 C9                  B   631    				ret
                           B   632    				
0051F7 2A 34 5C 00         B   633    fs_rd_noteof	ld hl,(fs_file_working_cluster)
0051FB 3A 55 5C 00         B   634    				ld a,(fs_sector_pos_cnt)		0051FF CD C5 5A 00         B   635    				call cluster_and_offset_to_lba
005203 CD 8B 5B 00         B   636    				call fs_is_same_sector_in_buffe
005207 28 05               B   637    				jr z,fs_same_sector
005209 CD 46 5B 00         B   638    				call fs_read_sector				00520D D8                  B   639    				ret c							                           B   640    			
00520E 21000200            B   641    fs_same_sector	ld hl,512
005212 ED5B 3D 5C 00       B   642    				ld de,(fs_in_sector_offset)
005217 AF                  B   643    				xor a
005218 ED52                B   644    				sbc hl,de						00521A E5                  B   645    				push hl
00521B C1                  B   646    				pop bc							                           B   647    				
00521C ED5B 2E 5C 00       B   648    				ld de,(fs_file_transfer_length)
005221 AF                  B   649    				xor a
005222 ED52                B   650    				sbc hl,de
005224 38 02               B   651    				jr c,fs_got_bc					005226 D5                  B   652    				push de							005227 C1                  B   653    				pop bc
                           B   654    
005228 21000800            B   655    fs_got_bc		ld hl,sector_buffer
00522C ED5B 3D 5C 00       B   656    				ld de,(fs_in_sector_offset)		005231 19                  B   657    				add hl,de
005232 ED5B 3A 5C 00       B   658    				ld de,(fs_ez80_working_address)
005237 C5                  B   659    				push bc
005238 EDB0                B   660    				ldir							00523A ED53 3A 5C 00       B   661    				ld (fs_ez80_working_address),de
00523F C1                  B   662    				pop bc
005240 CD 76 52 00         B   663    				call fs_adjust_fp_tl_so
005244 2A 3D 5C 00         B   664    				ld hl,(fs_in_sector_offset)
005248 7C                  B   665    				ld a,h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 220


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
005249 FE02                B   666    				cp 02h							00524B 28 02               B   667    				jr z,fs_new_sec
00524D AF                  B   668    fs_read_done	xor a
00524E C9                  B   669    				ret
                           B   670    
00524F 21000000            B   671    fs_new_sec		ld hl,0
005253 22 3D 5C 00         B   672    				ld (fs_in_sector_offset),hl		005257 21 55 5C 00         B   673    				ld hl,fs_sector_pos_cnt			00525B 34                  B   674    				inc (hl)
00525C 3A E7 5B 00         B   675    				ld a,(fs_cluster_size)
005260 BE                  B   676    				cp (hl)
005261 20 80               B   677    				jr nz,fs_get_sector_if_necessar
                           B   678    				
005263 3600                B   679    				ld (hl),0						005265 2A 34 5C 00         B   680    				ld hl,(fs_file_working_cluster)
005269 CD EE 59 00         B   681    				call get_fat_entry_for_cluster	00526D D8                  B   682    				ret c							00526E 22 34 5C 00         B   683    				ld (fs_file_working_cluster),hl
005272 C3 E3 51 00         B   684    				jr fs_get_sector_if_necessary
                           B   685    
                           B   686    ;----------------------------------------------
                           B   687    
005276                     B   688    fs_adjust_fp_tl_so
                           B   689    
                           B   690    ; advance / reduce by BC
                           B   691    
005276 C5                  B   692    				push bc
005277 E5                  B   693    				push hl
005278 2A 22 5C 00         B   694    				ld hl,(fs_file_pointer)			00527C 09                  B   695    				add hl,bc
00527D 22 22 5C 00         B   696    				ld (fs_file_pointer),hl			005281 3A 25 5C 00         B   697    				ld a,(fs_file_pointer+3)		005285 CE00                B   698    				adc a,0
005287 32 22 5C 00         B   699    				ld (fs_file_pointer),a		
                           B   700    				
00528B 2A 2E 5C 00         B   701    				ld hl,(fs_file_transfer_length)
00528F AF                  B   702    				xor a
005290 ED42                B   703    				sbc hl,bc
005292 22 2E 5C 00         B   704    				ld (fs_file_transfer_length),hl
                           B   705    				
005296 2A 3D 5C 00         B   706    				ld hl,(fs_in_sector_offset)
00529A 09                  B   707    				add hl,bc
00529B 22 3D 5C 00         B   708    				ld (fs_in_sector_offset),hl
                           B   709    				
00529F E1                  B   710    				pop hl
0052A0 C1                  B   711    				pop bc
0052A1 C9                  B   712    				ret
                           B   713    				
                           B   714    				
0052A2                     B   715    fs_test_transfer_length
                           B   716    				
0052A2 C5                  B   717    				push bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 221


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
0052A3 E5                  B   718    				push hl
0052A4 21000000            B   719    				ld hl,0
0052A8 ED4B 2E 5C 00       B   720    				ld bc,(fs_file_transfer_length)
0052AD AF                  B   721    				xor a
0052AE ED4A                B   722    				adc hl,bc
0052B0 E1                  B   723    				pop hl
0052B1 C1                  B   724    				pop bc
0052B2 C9                  B   725    				ret
                           B   726    				
                           B   727    ;----------------------------------------------
                           B   728    
0052B3                     B   729    fs_make_dir_command		
                           B   730    				
0052B3 CD DE 58 00         B   731    				call fs_find_filename			0052B7 D8                  B   732    				ret c
0052B8 FEC2                B   733    				cp 0c2h							0052BA 28 04               B   734    				jr z,mdirfnde
0052BC 3EC9                B   735    				ld a,0c9h						0052BE B7                  B   736    				or a
0052BF C9                  B   737    				ret
                           B   738    			
0052C0 CD A4 57 00         B   739    mdirfnde		call fs_find_free_cluster		0052C4 D8                  B   740    				ret c							0052C5 C0                  B   741    				ret nz							                           B   742    							
0052C6 2A 44 5C 00         B   743    				ld hl,(fs_free_cluster)
0052CA 22 47 5C 00         B   744    				ld (fs_new_file_cluster),hl
                           B   745    			
0052CE CD F5 57 00         B   746    				call fs_find_free_dir_entry		0052D2 D8                  B   747    				ret c							0052D3 C0                  B   748    				ret nz							                           B   749    			
0052D4 DDE5                B   750    				push ix							0052D6 D1                  B   751    				pop de
0052D7 21 FE 5B 00         B   752    				ld hl,fs_sought_filename
0052DB 010B0000            B   753    				ld bc,11
0052DF EDB0                B   754    				ldir
0052E1 AF                  B   755    				xor a							0052E2 0615                B   756    				ld b,21
0052E4 12                  B   757    clrdiren		ld (de),a
0052E5 13                  B   758    				inc de
0052E6 10 FC               B   759    				djnz clrdiren
0052E8 DD360B10            B   760    				ld (ix+0bh),010h				0052EC DD361821            B   761    				ld (ix+018h),021h				0052F0 ED5B 47 5C 00       B   762    				ld de,(fs_new_file_cluster)
0052F5 DD731A              B   763    				ld (ix+01ah),e					0052F8 DD721B              B   764    				ld (ix+01bh),d
0052FB CD 6F 5B 00         B   765    				call fs_write_sector			0052FF D8                  B   766    				ret c							                           B   767    				
005300 CD CC 58 00         B   768    				call fs_clear_sector_buffer
005304 DD210008 00         B   769    				ld ix,sector_buffer				Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 222


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
005309 DD36002E            B   770    				ld (ix+00h),02eh				00530D DD360120            B   771    				ld (ix+01h),020h
005311 DD36202E            B   772    				ld (ix+020h),02eh
005315 DD36212E            B   773    				ld (ix+021h),02eh
005319 DD360B10            B   774    				ld (ix+0bh),010h
00531D DD362B10            B   775    				ld (ix+02bh),010h
005321 ED5B 47 5C 00       B   776    				ld de,(fs_new_file_cluster)		005326 DD731A              B   777    				ld (ix+01ah),e
005329 DD721B              B   778    				ld (ix+01bh),d
00532C CD DA 1A 00         B   779    				call fs_get_dir_cluster			005330 DD733A              B   780    				ld (ix+03ah),e
005333 DD723B              B   781    				ld (ix+03bh),d
005336 DD361821            B   782    				ld (ix+018h),021h				00533A DD363821            B   783    				ld (ix+038h),021h				00533E 0609                B   784    				ld b,9
005340 DD360220            B   785    mndelp			ld (ix+002h),32
005344 DD362220            B   786    				ld (ix+022h),32
005348 DD23                B   787    				inc ix
00534A 10 F4               B   788    				djnz mndelp
00534C 2A 47 5C 00         B   789    				ld hl,(fs_new_file_cluster)		005350 AF                  B   790    				xor a
005351 CD C5 5A 00         B   791    				call cluster_and_offset_to_lba
005355 CD 6F 5B 00         B   792    				call fs_write_sector
005359 D8                  B   793    				ret c							                           B   794    			
00535A CD CC 58 00         B   795    				call fs_clear_sector_buffer		00535E AF                  B   796    				xor a
00535F 3C                  B   797    wroslp			inc a
005360 32 40 5C 00         B   798    				ld (fs_working_sector),a
005364 21 E7 5B 00         B   799    				ld hl,fs_cluster_size
005368 BE                  B   800    				cp (hl)
005369 28 13               B   801    				jr z,allsclr
00536B 2A 47 5C 00         B   802    				ld hl,(fs_new_file_cluster)
00536F CD C5 5A 00         B   803    				call cluster_and_offset_to_lba
005373 CD 6F 5B 00         B   804    				call fs_write_sector
005377 D8                  B   805    				ret c
005378 3A 40 5C 00         B   806    				ld a,(fs_working_sector)
00537C 18 E1               B   807    				jr wroslp
                           B   808    			
00537E 2A 47 5C 00         B   809    allsclr			ld hl,(fs_new_file_cluster)		005382 11FFFF00            B   810    				ld de,0ffffh
005386 CD 1A 5A 00         B   811    				call update_fat_entry_for_clust
00538A AF                  B   812    				xor a
00538B C9                  B   813    				ret
                           B   814    
                           B   815    
                           B   816    
                           B   817    ;----------------------------------------------
                           B   818    
00538C                     B   819    fs_delete_dir_command
                           B   820    
00538C CD DE 58 00         B   821    				call fs_find_filename			Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 223


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
005390 D8                  B   822    				ret c
005391 28 04               B   823    				jr z,ddc_gotd
005393 3ED1                B   824    				ld a,0d1h						005395 B7                  B   825    				or a
005396 C9                  B   826    				ret
                           B   827    				
005397 DDCB0B66            B   828    ddc_gotd		bit 4,(ix+0bh)					00539B 20 04               B   829    				jr nz,okdeldir
00539D 3EC4                B   830    				ld a,0c4h						00539F B7                  B   831    				or a
0053A0 C9                  B   832    				ret
                           B   833    				
0053A1 DD22 4A 5C 00       B   834    okdeldir		ld (fs_fname_in_sector_addr),ix
0053A6 CD 24 5B 00         B   835    				call backup_sector_lba
0053AA DD6E1A              B   836    				ld l,(ix+01ah)					0053AD DD661B              B   837    				ld h,(ix+01bh)
                           B   838    				
0053B0 3A E7 5B 00         B   839    fs_ddecl		ld a,(fs_cluster_size)
0053B4 47                  B   840    				ld b,a							0053B5 0E00                B   841    				ld c,0			
0053B7 79                  B   842    fs_cne2 		ld a,c
0053B8 CD C5 5A 00         B   843    				call cluster_and_offset_to_lba
0053BC CD 46 5B 00         B   844    				call fs_read_sector
0053C0 D8                  B   845    				ret c							                           B   846    				
0053C1 C5                  B   847    				push bc
0053C2 0610                B   848    				ld b,16							0053C4 DD210008 00         B   849    				ld ix,sector_buffer
0053C9 11200000            B   850    				ld de,020h
0053CD DD7E00              B   851    fs_cne1			ld a,(ix)
0053D0 B7                  B   852    				or a
0053D1 28 0D               B   853    				jr z,fs_chnde
0053D3 FEE5                B   854    				cp 0e5h
0053D5 28 09               B   855    				jr z,fs_chnde
0053D7 FE2E                B   856    				cp '.'
0053D9 28 05               B   857    				jr z,fs_chnde
0053DB C1                  B   858    				pop bc
0053DC 3EC5                B   859    				ld a,0c5h						0053DE B7                  B   860    				or a
0053DF C9                  B   861    				ret
                           B   862    			
0053E0 DD19                B   863    fs_chnde		add ix,de
0053E2 10 E9               B   864    				djnz fs_cne1
0053E4 C1                  B   865    				pop bc
0053E5 0C                  B   866    				inc c
0053E6 10 CF               B   867    				djnz fs_cne2
                           B   868    			
0053E8 CD EE 59 00         B   869    				call get_fat_entry_for_cluster	0053EC D8                  B   870    				ret c
0053ED CD 97 57 00         B   871    				call fs_compare_hl_fff8
0053F1 38 BD               B   872    				jr c,fs_ddecl
                           B   873    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 224


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
0053F3 CD 39 5B 00         B   874    dir_empty		call restore_sector_lba			0053F7 CD 46 5B 00         B   875    				call fs_read_sector
0053FB D8                  B   876    				ret c							0053FC 2A 4A 5C 00         B   877    				ld hl,(fs_fname_in_sector_addr)
005400 36E5                B   878    fs_delco		ld (hl),0e5h					005402 CD 6F 5B 00         B   879    				call fs_write_sector
005406 D8                  B   880    				ret c
                           B   881    			
005407 E5                  B   882    				push hl
005408 DDE1                B   883    				pop ix
00540A DD6E1A              B   884    				ld l,(ix+01ah)
00540D DD661B              B   885    				ld h,(ix+01bh)
005410 22 41 5C 00         B   886    				ld (fs_working_cluster),hl
005414 7C                  B   887    				ld a,h							005415 B5                  B   888    				or l							005416 C8                  B   889    				ret z							                           B   890    				
005417 2A 41 5C 00         B   891    clrfatlp		ld hl,(fs_working_cluster)
00541B CD EE 59 00         B   892    				call get_fat_entry_for_cluster
00541F D8                  B   893    				ret c
005420 EB                  B   894    				ex de,hl
                           B   895    				
005421 2A 41 5C 00         B   896    				ld hl,(fs_working_cluster)
005425 ED53 41 5C 00       B   897    				ld (fs_working_cluster),de
00542A 11000000            B   898    				ld de,0
00542E CD 1A 5A 00         B   899    				call update_fat_entry_for_clust
005432 D8                  B   900    				ret c
                           B   901    				
005433 CD 97 57 00         B   902    				call fs_compare_hl_fff8			005437 38 DE               B   903    				jr c,clrfatlp
005439 AF                  B   904    				xor a
00543A C9                  B   905    				ret
                           B   906    
                           B   907    
                           B   908    ;----------------------------------------------
                           B   909    
00543B                     B   910    fs_create_file_command
                           B   911    
                           B   912    ; Note: As per FAT standard, creating a file (0
                           B   913    ; only a directory entry (FAT is only updated w
                           B   914    
00543B CD DE 58 00         B   915    				call fs_find_filename			00543F D8                  B   916    				ret c
005440 FEC2                B   917    				cp 0c2h							005442 28 04               B   918    				jr z,mfilefnde
                           B   919    				
005444 3EC9                B   920    				ld a,0c9h						005446 B7                  B   921    				or a
005447 C9                  B   922    				ret
                           B   923    			
005448 CD F5 57 00         B   924    mfilefnde		call fs_find_free_dir_entry		00544C D8                  B   925    				ret c							Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 225


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
00544D C0                  B   926    				ret nz							                           B   927    			
00544E DDE5                B   928    				push ix							005450 D1                  B   929    				pop de
005451 21 FE 5B 00         B   930    				ld hl,fs_sought_filename
005455 010B0000            B   931    				ld bc,11
005459 EDB0                B   932    				ldir
00545B AF                  B   933    				xor a							00545C 0615                B   934    				ld b,21
00545E 12                  B   935    clrfnen			ld (de),a
00545F 13                  B   936    				inc de
005460 10 FC               B   937    				djnz clrfnen
005462 DD361821            B   938    				ld (ix+018h),021h				005466 CD 6F 5B 00         B   939    				call fs_write_sector			00546A D8                  B   940    				ret c							00546B AF                  B   941    				xor a
00546C C9                  B   942    				ret								                           B   943    
                           B   944    
                           B   945    ;----------------------------------------------
                           B   946    
00546D                     B   947    fs_write_bytes_to_file_command
                           B   948    	
                           B   949    ; *********************************************
                           B   950    ; * set up: fs_file_transfer_length (new data),
                           B   951    ; * before calling                             
                           B   952    ; *********************************************
                           B   953    
                           B   954    				
00546D ED5B 2E 5C 00       B   955    				ld de,(fs_file_transfer_length)
005472 21000000            B   956    				ld hl,0
005476 AF                  B   957    				xor a
005477 ED5A                B   958    				adc hl,de
005479 CA 69 51 00         B   959    				jp z,fs_fliz					                           B   960    				 
00547D CD DE 58 00         B   961    				call fs_find_filename			005481 D8                  B   962    				ret c							005482 FEC2                B   963    				cp 0c2h				
005484 20 02               B   964    				jr nz,fs_fetwt					005486 B7                  B   965    				or a
005487 C9                  B   966    				ret
005488 DDCB0B66            B   967    fs_fetwt		bit 4,(ix+0bh)					00548C 28 04               B   968    				jr z,fs_oknad					00548E 3EC6                B   969    				ld a,0c6h						005490 B7                  B   970    				or a
005491 C9                  B   971    				ret
                           B   972    
005492 CD 24 5B 00         B   973    fs_oknad		call backup_sector_lba
005496 DD22 4A 5C 00       B   974    				ld (fs_fname_in_sector_addr),ix
                           B   975    
00549B DD311C              B   976    				ld iy,(ix+01ch)					00549E DD7E1F              B   977    				ld a,(ix+01fh)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 226


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
0054A1 FD22 2A 5C 00       B   978    				ld (fs_existing_file_length),iy
0054A6 32 2A 5C 00         B   979    				ld (fs_existing_file_length),a
0054AA ED5B 2E 5C 00       B   980    				ld de,(fs_file_transfer_length)
0054AF FD19                B   981    				add iy,de						0054B1 CE00                B   982    				adc a,0
0054B3 DD3E1C              B   983    				ld (ix+01ch),iy					0054B6 DD771F              B   984    				ld (ix+01fh),a					0054B9 30 04               B   985    				jr nc,nfsizeok
0054BB 3EC7                B   986    				ld a,0c7h						0054BD B7                  B   987    				or a
0054BE C9                  B   988    				ret
                           B   989    
0054BF 11000000            B   990    nfsizeok		ld de,0
0054C3 DD5E1A              B   991    				ld e,(ix+01ah)					0054C6 DD561B              B   992    				ld d,(ix+01bh)					0054C9 ED53 34 5C 00       B   993    				ld (fs_file_working_cluster),de
0054CE CD 6F 5B 00         B   994    				call fs_write_sector			0054D2 D8                  B   995    				ret c
0054D3 7A                  B   996    				ld a,d
0054D4 B3                  B   997    				or e
0054D5 20 35               B   998    				jr nz,apenclch	
                           B   999    				
0054D7 CD A4 57 00         B  1000    				call fs_find_free_cluster		0054DB D8                  B  1001    				ret c
0054DC C0                  B  1002    				ret nz
0054DD 2A 44 5C 00         B  1003    				ld hl,(fs_free_cluster)
0054E1 22 34 5C 00         B  1004    				ld (fs_file_working_cluster),hl
0054E5 11FFFF00            B  1005    				ld de,0ffffh
0054E9 CD 1A 5A 00         B  1006    				call update_fat_entry_for_clust
0054ED D8                  B  1007    				ret c
                           B  1008    			
0054EE CD 39 5B 00         B  1009    				call restore_sector_lba			0054F2 CD 46 5B 00         B  1010    				call fs_read_sector
0054F6 D8                  B  1011    				ret c
0054F7 DD2A 4A 5C 00       B  1012    				ld ix,(fs_fname_in_sector_addr)
0054FC ED5B 34 5C 00       B  1013    				ld de,(fs_file_working_cluster)
005501 DD731A              B  1014    				ld (ix+01ah),e
005504 DD721B              B  1015    				ld (ix+01bh),d
005507 CD 6F 5B 00         B  1016    				call fs_write_sector			00550B D8                  B  1017    				ret c
                           B  1018    				
                           B  1019    					
00550C 2A 34 5C 00         B  1020    apenclch		ld hl,(fs_file_working_cluster)
005510 CD EE 59 00         B  1021    				call get_fat_entry_for_cluster
005514 D8                  B  1022    				ret c
005515 CD 97 57 00         B  1023    				call fs_compare_hl_fff8
005519 30 1C               B  1024    				jr nc,atlclif
00551B 22 34 5C 00         B  1025    				ld (fs_file_working_cluster),hl
00551F 01000000            B  1026    				ld bc,0
005523 3A E7 5B 00         B  1027    				ld a,(fs_cluster_size)
005527 CB27                B  1028    				sla a
005529 47                  B  1029    				ld b,a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 227


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
00552A 2A 2A 5C 00         B  1030    				ld hl,(fs_existing_file_length)
00552E AF                  B  1031    				xor a							00552F ED42                B  1032    				sbc hl,bc						005531 22 2A 5C 00         B  1033    				ld (fs_existing_file_length),hl
005535 18 D5               B  1034    				jr apenclch
                           B  1035    				
005537 ED4B 2A 5C 00       B  1036    atlclif			ld bc,(fs_existing_file_length)
00553C CB38                B  1037    				srl b				
00553E 48                  B  1038    				ld c,b							00553F 3A E7 5B 00         B  1039    				ld a,(fs_cluster_size)
005543 91                  B  1040    				sub c
005544 47                  B  1041    				ld b,a							005545 28 79               B  1042    				jr z,fs_sfncl					                           B  1043    				
005547 2A 34 5C 00         B  1044    				ld hl,(fs_file_working_cluster)
00554B 79                  B  1045    				ld a,c
00554C CD C5 5A 00         B  1046    				call cluster_and_offset_to_lba
005550 CD 46 5B 00         B  1047    				call fs_read_sector
005554 D8                  B  1048    				ret c
005555 C5                  B  1049    				push bc							                           B  1050    				
005556 11000000            B  1051    				ld de,0
00555A 3A 2A 5C 00         B  1052    				ld a,(fs_existing_file_length)
00555E 5F                  B  1053    				ld e,a
00555F 3A 2B 5C 00         B  1054    				ld a,(fs_existing_file_length+1
005563 E601                B  1055    				and 1
005565 57                  B  1056    				ld d,a							005566 21000200            B  1057    				ld hl,512	
00556A AF                  B  1058    				xor a
00556B ED52                B  1059    				sbc hl,de						00556D E5                  B  1060    				push hl
00556E C1                  B  1061    				pop bc							00556F 21000800            B  1062    				ld hl,sector_buffer
005573 19                  B  1063    				add hl,de
005574 EB                  B  1064    				ex de,hl						005575 7C                  B  1065    				ld a,h			
005576 B5                  B  1066    				or l
005577 20 04               B  1067    				jr nz,fs_dcsb					005579 CD CC 58 00         B  1068    fs_dbfil		call fs_clear_sector_buffer
00557D 2A 37 5C 00         B  1069    fs_dcsb			ld hl,(fs_ez80_address)			005581 EDA0                B  1070    fs_cbsb			ldi								005583 7C                  B  1071    				ld a,h							005584 B5                  B  1072    				or l
005585 20 0D               B  1073    				jr nz,fs_srcadok
005587 22 37 5C 00         B  1074    				ld (fs_ez80_address),hl
00558B 3A 39 5C 00         B  1075    				ld a,(fs_ez80_address+2)
00558F B7                  B  1076    				or a
005590 CA FF 55 00         B  1077    				jp z,fs_mem_error
005594 CD 4E 5A 00         B  1078    fs_srcadok		call transfer_length_countdown
005598 28 54               B  1079    				jr z,fs_lbof					00559A 78                  B  1080    fs_sadok		ld a,b							00559B B1                  B  1081    				or c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 228


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
00559C 20 E3               B  1082    				jr nz,fs_cbsb					                           B  1083    
00559E 22 37 5C 00         B  1084    				ld (fs_ez80_address),hl			0055A2 C1                  B  1085    				pop bc							0055A3 79                  B  1086    				ld a,c
0055A4 2A 34 5C 00         B  1087    				ld hl,(fs_file_working_cluster)
0055A8 CD C5 5A 00         B  1088    				call cluster_and_offset_to_lba
0055AC CD 6F 5B 00         B  1089    				call fs_write_sector			0055B0 D8                  B  1090    				ret c							0055B1 0C                  B  1091    				inc c							0055B2 05                  B  1092    				dec b
0055B3 28 0B               B  1093    				jr z,fs_sfncl					0055B5 C5                  B  1094    fs_sfns			push bc				
0055B6 01000200            B  1095    				ld bc,512						0055BA 11000800            B  1096    				ld de,sector_buffer				0055BE 18 B9               B  1097    				jr fs_dbfil						                           B  1098    				
0055C0 CD A4 57 00         B  1099    fs_sfncl		call fs_find_free_cluster		0055C4 D8                  B  1100    				ret c							0055C5 C0                  B  1101    				ret nz							0055C6 2A 34 5C 00         B  1102    				ld hl,(fs_file_working_cluster)
0055CA ED5B 44 5C 00       B  1103    				ld de,(fs_free_cluster)
0055CF CD 1A 5A 00         B  1104    				call update_fat_entry_for_clust
0055D3 D8                  B  1105    				ret c
0055D4 2A 44 5C 00         B  1106    				ld hl,(fs_free_cluster)
0055D8 22 34 5C 00         B  1107    				ld (fs_file_working_cluster),hl
0055DC 11FFFF00            B  1108    				ld de,0ffffh
0055E0 CD 1A 5A 00         B  1109    				call update_fat_entry_for_clust
0055E4 D8                  B  1110    				ret c
0055E5 3A E7 5B 00         B  1111    				ld a,(fs_cluster_size)
0055E9 47                  B  1112    				ld b,a							0055EA 0E00                B  1113    				ld c,0							0055EC 18 C7               B  1114    				jr fs_sfns						                           B  1115    				
0055EE C1                  B  1116    fs_lbof			pop bc
0055EF 79                  B  1117    				ld a,c							0055F0 2A 34 5C 00         B  1118    				ld hl,(fs_file_working_cluster)
0055F4 CD C5 5A 00         B  1119    				call cluster_and_offset_to_lba
0055F8 CD 6F 5B 00         B  1120    				call fs_write_sector	
0055FC D8                  B  1121    				ret c
0055FD AF                  B  1122    				xor a							0055FE C9                  B  1123    				ret
                           B  1124    
                           B  1125    
0055FF 3EC8                B  1126    fs_mem_error	ld a,0c8h						005601 C1                  B  1127    fs_flerr		pop bc
005602 B7                  B  1128    				or a							005603 C9                  B  1129    				ret			
                           B  1130    
                           B  1131    ;----------------------------------------------
                           B  1132    
005604                     B  1133    fs_erase_file_command
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 229


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
                           B  1134    
                           B  1135    
005604 CD DE 58 00         B  1136    				call fs_find_filename			005608 D8                  B  1137    				ret c
005609 C0                  B  1138    				ret nz
                           B  1139    				
00560A DDCB0B66            B  1140    				bit 4,(ix+0bh)					00560E 28 04               B  1141    				jr z,okdelf
005610 3EC6                B  1142    				ld a,0c6h						005612 B7                  B  1143    				or a
005613 C9                  B  1144    				ret
                           B  1145    				
005614 DDE5                B  1146    okdelf			push ix
005616 E1                  B  1147    				pop hl
005617 C3 00 54 00         B  1148    				jp fs_delco						                           B  1149    					
                           B  1150    
                           B  1151    ;----------------------------------------------
                           B  1152    
                           B  1153    
00561B                     B  1154    fs_rename_command
                           B  1155    
00561B CD DE 58 00         B  1156    				call fs_find_filename			00561F D8                  B  1157    				ret c							005620 FEC2                B  1158    				cp 0c2h							005622 28 04               B  1159    				jr z,fs_nfnok					005624 3EC9                B  1160    				ld a,0c9h						005626 B7                  B  1161    				or a
005627 C9                  B  1162    				ret
                           B  1163    			
005628 21 FE 5B 00         B  1164    fs_nfnok		ld hl,fs_sought_filename		00562C 11 16 5C 00         B  1165    				ld de,fs_filename_buffer
005630 010B0000            B  1166    				ld bc,11
005634 EDB0                B  1167    				ldir
005636 21 0A 5C 00         B  1168    				ld hl,fs_alt_filename			00563A 11 FE 5B 00         B  1169    				ld de,fs_sought_filename
00563E 010B0000            B  1170    				ld bc,11
005642 EDB0                B  1171    				ldir
005644 CD DE 58 00         B  1172    				call fs_find_filename			005648 D8                  B  1173    				ret c
005649 FEC2                B  1174    				cp 0c2h
00564B C8                  B  1175    				ret z							                           B  1176    				
00564C DDE5                B  1177    				push ix
00564E D1                  B  1178    				pop de
00564F 21 16 5C 00         B  1179    				ld hl,fs_filename_buffer	 	005653 010B0000            B  1180    				ld bc,11
005657 EDB0                B  1181    				ldir							005659 CD 6F 5B 00         B  1182    				call fs_write_sector			                           B  1183    				
00565D AF                  B  1184    fs_rndone		xor a
00565E C9                  B  1185    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 230


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
                           B  1186    				
                           B  1187    
                           B  1188    ;----------------------------------------------
                           B  1189    
                           B  1190    
00565F                     B  1191    fs_goto_first_dir_entry
                           B  1192    
00565F CD DA 1A 00         B  1193    				call fs_get_dir_cluster
005663 ED53 4D 5C 00       B  1194    				ld (fs_dir_entry_cluster),de
005668 AF                  B  1195    				xor a
005669 32 53 5C 00         B  1196    				ld (fs_dir_entry_sector),a		00566D 11000000            B  1197    				ld de,0
005671 ED53 50 5C 00       B  1198    				ld (fs_dir_entry_line_offset),d
                           B  1199    				
                           B  1200    
                           B  1201    
005676                     B  1202    fs_get_dir_entry
                           B  1203    
                           B  1204    ; No input parameters.
                           B  1205    ;
                           B  1206    ; Returns HL    = Location of null terminated f
                           B  1207    ;         IX:IY = Length of file (if applicable
                           B  1208    ;         B     = File flag (1 = directory, 0 =
                           B  1209    ;         A     = Error code
                           B  1210    ;         Carry = Set if hardware error encount
                           B  1211    
                           B  1212    
005676 3A 53 5C 00         B  1213    				ld a,(fs_dir_entry_sector)		00567A 4F                  B  1214    				ld c,a
00567B 2A 4D 5C 00         B  1215    				ld hl,(fs_dir_entry_cluster)	00567F CD C5 5A 00         B  1216    				call cluster_and_offset_to_lba
                           B  1217    			
005683 7C                  B  1218    				ld a,h							005684 B5                  B  1219    				or l							005685 20 09               B  1220    				jr nz,nr_read					005687 2A F1 5B 00         B  1221    				ld hl,(fs_root_dir_position)	00568B 79                  B  1222    				ld a,c
00568C CD 0B 5B 00         B  1223    				call set_absolute_lba
                           B  1224    				
005690 CD 46 5B 00         B  1225    nr_read			call fs_read_sector				005694 D8                  B  1226    				ret c							                           B  1227    				
005695 ED5B 50 5C 00       B  1228    				ld de,(fs_dir_entry_line_offset
00569A DD210008 00         B  1229    dscan_int_loop	ld ix,sector_buffer
00569F DD19                B  1230    				add ix,de
0056A1 DD7E00              B  1231    ds_int_loop		ld a,(ix)
0056A4 B7                  B  1232    				or a							0056A5 28 0E               B  1233    				jr z,fs_dir_entry_free		
0056A7 FEE5                B  1234    				cp 0e5h							0056A9 28 0A               B  1235    				jr z,fs_dir_entry_free	
0056AB FE05                B  1236    				cp 05h							0056AD 28 06               B  1237    				jr z,fs_dir_entry_free	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 231


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
0056AF DDCB0B5E            B  1238    				bit 3,(ix+0bh)					0056B3 28 0D               B  1239    				jr z,fs_dir_entry_in_use		                           B  1240    
0056B5                     B  1241    fs_dir_entry_free
                           B  1242    
0056B5 EB                  B  1243    				ex de,hl
0056B6 11200000            B  1244    				ld de,32
0056BA 19                  B  1245    				add hl,de
0056BB EB                  B  1246    				ex de,hl
0056BC CB4A                B  1247    				bit 1,d
0056BE 28 DA               B  1248    				jr z,dscan_int_loop
0056C0 18 54               B  1249    				jr dscan_new_sect
                           B  1250    
0056C2                     B  1251    fs_dir_entry_in_use
                           B  1252    				
0056C2 ED53 50 5C 00       B  1253    				ld (fs_dir_entry_line_offset),d
0056C7 DDE5                B  1254    				push ix
0056C9 E1                  B  1255    				pop hl
0056CA CD 28 11 00         B  1256    				call os_clear_output_line
0056CE 0608                B  1257    				ld b,8							0056D0 11 A5 69 00         B  1258    				ld de,output_line
0056D4 7E                  B  1259    dcopyn			ld a,(hl)
0056D5 FE20                B  1260    				cp ' '							0056D7 28 02               B  1261    				jr z,digchar
0056D9 12                  B  1262    				ld (de),a
0056DA 13                  B  1263    				inc de
0056DB 23                  B  1264    digchar			inc hl
0056DC 10 F6               B  1265    				djnz dcopyn
0056DE 7E                  B  1266    				ld a,(hl)						0056DF FE20                B  1267    				cp ' '							0056E1 28 0A               B  1268    				jr z,dirnoex
0056E3 3E2E                B  1269    				ld a,'.'						0056E5 12                  B  1270    				ld (de),a
0056E6 13                  B  1271    				inc de	
0056E7 01030000            B  1272    				ld bc,3							0056EB EDB0                B  1273    				ldir
0056ED AF                  B  1274    dirnoex			xor a 
0056EE 12                  B  1275    				ld (de),a						                           B  1276    				
0056EF 47                  B  1277    				ld b,a
0056F0 DDCB0B66            B  1278    				bit 4,(ix+0bh)					0056F4 28 01               B  1279    				jr z,fs_fniaf		
0056F6 04                  B  1280    				inc b							0056F7 DD171C              B  1281    fs_fniaf		ld de,(ix+01ch)					0056FA DD4E1F              B  1282    				ld c,(ix+01fh)
0056FD 21 A5 69 00         B  1283    				ld hl,output_line				005701 AF                  B  1284    				xor a
005702 C9                  B  1285    				ret
                           B  1286    
                           B  1287    
                           B  1288    
                           B  1289    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 232


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
005703                     B  1290    fs_goto_next_dir_entry
                           B  1291    
005703 11200000            B  1292    				ld de,32
005707 2A 50 5C 00         B  1293    				ld hl,(fs_dir_entry_line_offset
00570B 19                  B  1294    				add hl,de
00570C 22 50 5C 00         B  1295    				ld (fs_dir_entry_line_offset),h
005710 CB4C                B  1296    				bit 1,h
005712 CA 76 56 00         B  1297    				jp z,fs_get_dir_entry
                           B  1298    
005716 21000000            B  1299    dscan_new_sect	ld hl,0				
00571A 22 50 5C 00         B  1300    				ld (fs_dir_entry_line_offset),h
                           B  1301    			
00571E 21 53 5C 00         B  1302    				ld hl,fs_dir_entry_sector
005722 34                  B  1303    				inc (hl)						                           B  1304    			
005723 ED5B 4D 5C 00       B  1305    				ld de,(fs_dir_entry_cluster)
005728 7A                  B  1306    				ld a,d
005729 B3                  B  1307    				or e							00572A 20 0B               B  1308    				jr nz,nonroot2
00572C 3A F7 5B 00         B  1309    				ld a,(fs_root_dir_sectors)
005730 BE                  B  1310    				cp (hl)
005731 28 23               B  1311    				jr z,endofdir			
005733 C3 76 56 00         B  1312    				jp fs_get_dir_entry
                           B  1313    												005737 3A E7 5B 00         B  1314    nonroot2		ld a,(fs_cluster_size)		
00573B BE                  B  1315    				cp (hl)							00573C C2 76 56 00         B  1316    				jp nz,fs_get_dir_entry
005740 3600                B  1317    				ld (hl),0						005742 2A 4D 5C 00         B  1318    				ld hl,(fs_dir_entry_cluster)
005746 CD EE 59 00         B  1319    				call get_fat_entry_for_cluster
00574A 22 4D 5C 00         B  1320    				ld (fs_dir_entry_cluster),hl
00574E CD 97 57 00         B  1321    				call fs_compare_hl_fff8			005752 DA 76 56 00         B  1322    				jp c,fs_get_dir_entry
                           B  1323    	
005756 3ED2                B  1324    endofdir		ld a,0d2h
005758 B7                  B  1325    				or a							005759 C9                  B  1326    				ret	
                           B  1327    				
                           B  1328    ;----------------------------------------------
                           B  1329    
00575A                     B  1330    fs_get_volume_label
                           B  1331    
                           B  1332    
                           B  1333    ; On return HL = volume label
                           B  1334    
                           B  1335    
00575A 2A F1 5B 00         B  1336    				ld hl,(fs_root_dir_position)
00575E 0E00                B  1337    				ld c,0
005760 AF                  B  1338    gvl_nrsec		xor a
005761 CD 1C 5B 00         B  1339    				call set_abs_lba_and_read_secto
005765 D8                  B  1340    				ret c
005766 0610                B  1341    				ld b,16							Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 233


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
005768 DD210008 00         B  1342    				ld ix,sector_buffer
00576D DD7E0B              B  1343    find_vl			ld a,(ix+0bh)
005770 FE08                B  1344    				cp 08h
005772 28 1A               B  1345    				jr z,got_label
005774 ED3220              B  1346    				lea ix,ix+32					005777 10 F4               B  1347    				djnz find_vl					005779 23                  B  1348    				inc hl
00577A 0C                  B  1349    				inc c
00577B 3A F7 5B 00         B  1350    				ld a,(fs_root_dir_sectors)		00577F B9                  B  1351    				cp c							005780 20 DE               B  1352    				jr nz,gvl_nrsec
                           B  1353    			
005782 CD 38 50 00         B  1354    				call fs_read_partition_bootsect
005786 D8                  B  1355    				ret c
005787 B7                  B  1356    				or a
005788 C0                  B  1357    				ret nz
005789 DD212B08 00         B  1358    				ld ix,sector_buffer+02bh
                           B  1359    				
00578E DD360B00            B  1360    got_label		ld (ix+0bh),0					005792 DDE5                B  1361    				push ix
005794 E1                  B  1362    				pop hl
005795 AF                  B  1363    				xor a
005796 C9                  B  1364    				ret
                           B  1365    				
                           B  1366    				
                           B  1367    ;----------------------------------------------
                           B  1368    ; Internal subroutines
                           B  1369    ;----------------------------------------------
                           B  1370    
005797                     B  1371    fs_compare_hl_fff8
                           B  1372    
                           B  1373    ;INPUT HL = value to compare with fff8
                           B  1374    ;OUTPUT CARRY set if < $fff8, ZERO FLAG set if 
                           B  1375    	
                           B  1376    	
005797 E5                  B  1377    				push hl
005798 D5                  B  1378    				push de
005799 11F8FF00            B  1379    				ld de,0fff8h			
00579D B7                  B  1380    				or a							00579E 52ED52              B  1381    				sbc.s hl,de						0057A1 D1                  B  1382    				pop de
0057A2 E1                  B  1383    				pop hl
0057A3 C9                  B  1384    				ret
                           B  1385    
                           B  1386    ;----------------------------------------------
                           B  1387    
                           B  1388    
0057A4                     B  1389    fs_find_free_cluster
                           B  1390    	
0057A4 DD210000 00         B  1391    				ld ix,0							0057A9 ED5B EB 5B 00       B  1392    				ld de,(fs_fat1_position)		0057AE AF                  B  1393    				xor a				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 234


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
0057AF 32 40 5C 00         B  1394    fs_ffcl2		ld (fs_working_sector),a	
0057B3 D5                  B  1395    				push de
0057B4 E1                  B  1396    				pop hl
0057B5 3A 40 5C 00         B  1397    				ld a,(fs_working_sector)
0057B9 CD 1C 5B 00         B  1398    				call set_abs_lba_and_read_secto
0057BD D8                  B  1399    				ret c
0057BE 21000800            B  1400    				ld hl,sector_buffer
0057C2 0600                B  1401    				ld b,0
0057C4 7E                  B  1402    fs_ffcl1		ld a,(hl)						0057C5 23                  B  1403    				inc hl
0057C6 B6                  B  1404    				or (hl)
0057C7 23                  B  1405    				inc hl
0057C8 28 14               B  1406    				jr z,fs_gotfc
0057CA DD23                B  1407    				inc ix
0057CC 10 F6               B  1408    				djnz fs_ffcl1
                           B  1409    				
0057CE 2A F8 5B 00         B  1410    				ld hl,(fs_sectors_per_fat)
0057D2 3A 40 5C 00         B  1411    				ld a,(fs_working_sector)		0057D6 3C                  B  1412    				inc a				
0057D7 BD                  B  1413    				cp l		
0057D8 20 D5               B  1414    				jr nz,fs_ffcl2					0057DA 3EC1                B  1415    fs_dfull		ld a,c1h						0057DC B7                  B  1416    				or a							0057DD C9                  B  1417    				ret
                           B  1418    			
0057DE DDE5                B  1419    fs_gotfc		push ix							0057E0 E1                  B  1420    				pop hl							0057E1 2B                  B  1421    				dec hl							0057E2 2B                  B  1422    				dec hl							0057E3 ED5B FB 5B 00       B  1423    				ld de,(fs_max_data_clusters)
0057E8 AF                  B  1424    				xor a
0057E9 52ED52              B  1425    				sbc.s hl,de						0057EC 30 EC               B  1426    				jr nc,fs_dfull
                           B  1427    			
0057EE DD22 44 5C 00       B  1428    				ld (fs_free_cluster),ix
0057F3 AF                  B  1429    				xor a
0057F4 C9                  B  1430    				ret
                           B  1431    	
                           B  1432    	
                           B  1433    ;----------------------------------------------
                           B  1434    	
                           B  1435    	
0057F5                     B  1436    fs_find_free_dir_entry
                           B  1437    
                           B  1438    
                           B  1439    ; OUTPUT IX start of 32 byte dir entry in secto
                           B  1440    
                           B  1441    			
0057F5 CD DA 1A 00         B  1442    				call fs_get_dir_cluster			0057F9 EB                  B  1443    				ex de,hl
0057FA 22 34 5C 00         B  1444    ffenxtclu		ld (fs_file_working_cluster),hl
0057FE AF                  B  1445    				xor a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 235


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
0057FF 32 40 5C 00         B  1446    				ld (fs_working_sector),a
                           B  1447    			
005803 2A F1 5B 00         B  1448    ffenxtsec		ld hl,(fs_root_dir_position)	005807 3A 40 5C 00         B  1449    				ld a,(fs_working_sector)
00580B CD 0B 5B 00         B  1450    				call set_absolute_lba
                           B  1451    				
00580F CD DA 1A 00         B  1452    				call fs_get_dir_cluster			005813 7A                  B  1453    				ld a,d
005814 B3                  B  1454    				or e
005815 28 0C               B  1455    				jr z,at_rootd
005817 2A 34 5C 00         B  1456    				ld hl,(fs_file_working_cluster)
00581B 3A 40 5C 00         B  1457    				ld a,(fs_working_sector)
00581F CD C5 5A 00         B  1458    				call cluster_and_offset_to_lba
                           B  1459    				
005823 CD 46 5B 00         B  1460    at_rootd		call fs_read_sector
005827 D8                  B  1461    				ret c
005828 0610                B  1462    				ld b,16							00582A 11200000            B  1463    				ld de,32
00582E DD210008 00         B  1464    				ld ix,sector_buffer
005833 DD7E00              B  1465    scdirfe			ld a,(ix)						005836 B7                  B  1466    				or a
005837 28 65               B  1467    				jr z,got_fde
005839 FEE5                B  1468    				cp 0e5h
00583B 28 61               B  1469    				jr z,got_fde
00583D DD19                B  1470    				add ix,de						00583F 10 F2               B  1471    				djnz scdirfe					                           B  1472    				
005841 21 40 5C 00         B  1473    				ld hl,fs_working_sector			005845 34                  B  1474    				inc (hl)
                           B  1475    				
005846 CD DA 1A 00         B  1476    				call fs_get_dir_cluster			00584A 7A                  B  1477    				ld a,d
00584B B3                  B  1478    				or e
00584C 20 0B               B  1479    				jr nz,ffenotroo
00584E 3A F7 5B 00         B  1480    				ld a,(fs_root_dir_sectors)		005852 BE                  B  1481    				cp (hl)							005853 20 AE               B  1482    				jr nz,ffenxtsec
005855 3EC3                B  1483    fenotfnd		ld a,0c3h						005857 B7                  B  1484    				or a
005858 C9                  B  1485    				ret
                           B  1486    			
005859 3A E7 5B 00         B  1487    ffenotroo		ld a,(fs_cluster_size)			00585D BE                  B  1488    				cp (hl)
00585E 20 A3               B  1489    				jr nz,ffenxtsec
005860 2A 34 5C 00         B  1490    				ld hl,(fs_file_working_cluster)
005864 CD EE 59 00         B  1491    				call get_fat_entry_for_cluster	005868 D8                  B  1492    				ret c
005869 CD 97 57 00         B  1493    				call fs_compare_hl_fff8			00586D 38 8B               B  1494    				jr c,ffenxtclu
                           B  1495    			
00586F CD A4 57 00         B  1496    				call fs_find_free_cluster		005873 D8                  B  1497    				ret c							Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 236


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
005874 C0                  B  1498    				ret nz							005875 ED5B 44 5C 00       B  1499    				ld de,(fs_free_cluster)
00587A 2A 34 5C 00         B  1500    				ld hl,(fs_file_working_cluster)
00587E CD 1A 5A 00         B  1501    				call update_fat_entry_for_clust
005882 D8                  B  1502    				ret c
005883 EB                  B  1503    				ex de,hl						005884 11FFFF00            B  1504    				ld de,0ffffh
005888 CD 1A 5A 00         B  1505    				call update_fat_entry_for_clust
00588C D8                  B  1506    				ret c
                           B  1507    			
00588D 2A 44 5C 00         B  1508    				ld hl,(fs_free_cluster)			005891 CD A0 58 00         B  1509    				call fs_clear_cluster			005895 D8                  B  1510    				ret c
005896 2A 44 5C 00         B  1511    				ld hl,(fs_free_cluster)			00589A C3 FA 57 00         B  1512    				jp ffenxtclu					                           B  1513    			
00589E AF                  B  1514    got_fde			xor a
00589F C9                  B  1515    				ret
                           B  1516    					
                           B  1517    
                           B  1518    ;----------------------------------------------
                           B  1519    
0058A0                     B  1520    fs_clear_cluster
                           B  1521    
                           B  1522    ;INPUT HL = cluster to clear
                           B  1523    
0058A0 22 41 5C 00         B  1524    				ld (fs_working_cluster),hl
                           B  1525    			
0058A4 CD CC 58 00         B  1526    				call fs_clear_sector_buffer
                           B  1527    					
0058A8 AF                  B  1528    				xor a				
0058A9 32 40 5C 00         B  1529    				ld (fs_working_sector),a		0058AD 3A 40 5C 00         B  1530    wipeclulp		ld a,(fs_working_sector)		0058B1 2A 41 5C 00         B  1531    				ld hl,(fs_working_cluster)		0058B5 CD C5 5A 00         B  1532    				call cluster_and_offset_to_lba	0058B9 CD 6F 5B 00         B  1533    				call fs_write_sector
0058BD D8                  B  1534    				ret c
0058BE 21 40 5C 00         B  1535    				ld hl,fs_working_sector
0058C2 34                  B  1536    				inc (hl)
0058C3 3A E7 5B 00         B  1537    				ld a,(fs_cluster_size)
0058C7 BE                  B  1538    				cp (hl)
0058C8 20 E3               B  1539    				jr nz,wipeclulp
0058CA AF                  B  1540    				xor a
0058CB C9                  B  1541    				ret
                           B  1542    			
                           B  1543    			
0058CC                     B  1544    fs_clear_sector_buffer
                           B  1545    			
0058CC E5                  B  1546    				push hl
0058CD C5                  B  1547    				push bc
0058CE 21000800            B  1548    				ld hl,sector_buffer			
0058D2 01000200            B  1549    				ld bc,512				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 237


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
0058D6 AF                  B  1550    				xor a				
0058D7 CD FC 15 00         B  1551    				call os_bchl_memfill	
0058DB C1                  B  1552    				pop bc
0058DC E1                  B  1553    				pop hl
0058DD C9                  B  1554    				ret
                           B  1555    				
                           B  1556    
                           B  1557    	
                           B  1558    ;----------------------------------------------
                           B  1559    	
0058DE                     B  1560    fs_find_filename
                           B  1561    
0058DE AF                  B  1562    				xor a
                           B  1563    
0058DF                     B  1564    fs_search	
                           B  1565    				
0058DF 32 5B 5C 00         B  1566    				ld (fs_search_type),a
                           B  1567    			
                           B  1568    ; OUTPUT IX start of 32 byte dir entry
                           B  1569    			
0058E3 CD DA 1A 00         B  1570    				call fs_get_dir_cluster
0058E7 ED53 34 5C 00       B  1571    ffnnxtclu		ld (fs_file_working_cluster),de
0058EC AF                  B  1572    				xor a
0058ED 32 40 5C 00         B  1573    				ld (fs_working_sector),a
                           B  1574    			
0058F1 2A F1 5B 00         B  1575    ffnnxtsec		ld hl,(fs_root_dir_position)	0058F5 3A 40 5C 00         B  1576    				ld a,(fs_working_sector)
0058F9 CD 0B 5B 00         B  1577    				call set_absolute_lba
                           B  1578    				
0058FD CD DA 1A 00         B  1579    				call fs_get_dir_cluster			005901 7A                  B  1580    				ld a,d
005902 B3                  B  1581    				or e
005903 28 0C               B  1582    				jr z,at_rootd2
005905 2A 34 5C 00         B  1583    				ld hl,(fs_file_working_cluster)
005909 3A 40 5C 00         B  1584    				ld a,(fs_working_sector)
00590D CD C5 5A 00         B  1585    				call cluster_and_offset_to_lba	                           B  1586    				
005911 CD 46 5B 00         B  1587    at_rootd2		call fs_read_sector
005915 D8                  B  1588    				ret c
005916 0E10                B  1589    				ld c,16							005918 DD210008 00         B  1590    				ld ix,sector_buffer
00591D DDE5                B  1591    ndirentr		push ix
00591F D1                  B  1592    				pop de
005920 3A 5B 5C 00         B  1593    				ld a,(fs_search_type)
005924 B7                  B  1594    				or a
005925 28 1E               B  1595    				jr z,fs_ststr
                           B  1596    			
005927 DD7E00              B  1597    				ld a,(ix)						00592A FE80                B  1598    				cp 080h							00592C 30 35               B  1599    				jr nc,fnnotsame
00592E FE20                B  1600    				cp 020h
005930 38 31               B  1601    				jr c,fnnotsame
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 238


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
005932 ED5B 58 5C 00       B  1602    				ld de,(fs_stash_dir_block)		005937 DD7E1A              B  1603    				ld a,(ix+01ah)
00593A BB                  B  1604    				cp e
00593B 20 26               B  1605    				jr nz,fnnotsame
00593D DD7E1B              B  1606    				ld a,(ix+01bh)
005940 BA                  B  1607    				cp d
005941 28 1E               B  1608    				jr z,fs_found
005943 18 1E               B  1609    				jr fnnotsame
                           B  1610    				
005945 FD21 FE 5B 00       B  1611    fs_ststr		ld iy,fs_sought_filename		00594A 060B                B  1612    				ld b,11							00594C 1A                  B  1613    cmpfnlp			ld a,(de)						00594D CD 1C 13 00         B  1614    				call os_uppercasify				005951 6F                  B  1615    				ld l,a
005952 FD7E00              B  1616    				ld a,(iy)
005955 CD 1C 13 00         B  1617    				call os_uppercasify
005959 BD                  B  1618    				cp l				
00595A 20 07               B  1619    				jr nz,fnnotsame
00595C FD23                B  1620    				inc iy
00595E 13                  B  1621    				inc de
00595F 10 EB               B  1622    				djnz cmpfnlp
005961 AF                  B  1623    fs_found		xor a							005962 C9                  B  1624    				ret
                           B  1625    			
005963 11200000            B  1626    fnnotsame		ld de,32						005967 DD19                B  1627    				add ix,de
005969 0D                  B  1628    				dec c
00596A 20 B1               B  1629    				jr nz,ndirentr					                           B  1630    				
00596C 21 40 5C 00         B  1631    				ld hl,fs_working_sector			005970 34                  B  1632    				inc (hl)
                           B  1633    				
005971 CD DA 1A 00         B  1634    				call fs_get_dir_cluster			005975 7A                  B  1635    				ld a,d
005976 B3                  B  1636    				or e
005977 20 0D               B  1637    				jr nz,notrootdir
005979 3A F7 5B 00         B  1638    				ld a,(fs_root_dir_sectors)		00597D BE                  B  1639    				cp (hl)							00597E C2 F1 58 00         B  1640    				jp nz,ffnnxtsec
005982 3EC2                B  1641    fnnotfnd		ld a,0c2h						005984 B7                  B  1642    				or a
005985 C9                  B  1643    				ret
                           B  1644    			
005986                     B  1645    notrootdir
                           B  1646    				
005986 3A E7 5B 00         B  1647    				ld a,(fs_cluster_size)			00598A BE                  B  1648    				cp (hl)
00598B C2 F1 58 00         B  1649    				jp nz,ffnnxtsec
                           B  1650    				
00598F 2A 34 5C 00         B  1651    				ld hl,(fs_file_working_cluster)
005993 CD EE 59 00         B  1652    				call get_fat_entry_for_cluster
005997 D8                  B  1653    				ret c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 239


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
005998 CD 97 57 00         B  1654    				call fs_compare_hl_fff8			00599C 30 E4               B  1655    				jr nc,fnnotfnd					00599E EB                  B  1656    				ex de,hl						00599F C3 E7 58 00         B  1657    				jp ffnnxtclu					                           B  1658    				
                           B  1659    
                           B  1660    ;----------------------------------------------
                           B  1661    
0059A3                     B  1662    fs_hl_to_alt_filename
                           B  1663    
0059A3 11 0A 5C 00         B  1664    				ld de,fs_alt_filename
0059A7 18 04               B  1665    				jr hltofngo
                           B  1666    
                           B  1667    
0059A9                     B  1668    fs_hl_to_filename
                           B  1669    
                           B  1670    ;INPUT: HL = address of filename (null / space 
                           B  1671    ;OUTPUT HL = address of first character after f
                           B  1672    ;        C = number of characters in filename
                           B  1673    
0059A9 11 FE 5B 00         B  1674    				ld de,fs_sought_filename
0059AD CD B8 5A 00         B  1675    hltofngo		call fs_clear_filename			0059B1 D5                  B  1676    				push de			
0059B2 DDE1                B  1677    				pop ix							                           B  1678    				
0059B4 0E00                B  1679    				ld c,0
0059B6 0608                B  1680    				ld b,8
0059B8 7E                  B  1681    csfnlp2			ld a,(hl)						0059B9 B7                  B  1682    				or a
0059BA C8                  B  1683    				ret z							0059BB FE20                B  1684    				cp 32
0059BD C8                  B  1685    				ret z							0059BE FE2F                B  1686    				cp 02fh
0059C0 C8                  B  1687    				ret z							0059C1 FE2E                B  1688    				cp '.'
0059C3 28 16               B  1689    				jr z,dofn_ext					0059C5 12                  B  1690    				ld (de),a
0059C6 13                  B  1691    				inc de
0059C7 23                  B  1692    				inc hl
0059C8 0C                  B  1693    				inc c							0059C9 10 ED               B  1694    				djnz csfnlp2					0059CB 7E                  B  1695    find_ext		ld a,(hl)
0059CC FE2E                B  1696    				cp '.'							0059CE 28 0B               B  1697    				jr z,dofn_ext	
0059D0 FE20                B  1698    				cp ' '							0059D2 C8                  B  1699    				ret z
0059D3 FE2F                B  1700    				cp 02fh
0059D5 C8                  B  1701    				ret z
0059D6 B7                  B  1702    				or a
0059D7 C8                  B  1703    				ret z
0059D8 23                  B  1704    				inc hl
0059D9 18 F0               B  1705    				jr find_ext
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 240


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
                           B  1706    				
0059DB 23                  B  1707    dofn_ext		inc hl							0059DC 0603                B  1708    				ld b,3				
0059DE 7E                  B  1709    fnextlp			ld a,(hl)						0059DF B7                  B  1710    				or a
0059E0 C8                  B  1711    				ret z							0059E1 FE20                B  1712    				cp 32
0059E3 C8                  B  1713    				ret z
0059E4 DD7708              B  1714    				ld (ix+8),a
0059E7 DD23                B  1715    				inc ix
0059E9 23                  B  1716    				inc hl
0059EA 0C                  B  1717    				inc c
0059EB 10 F1               B  1718    				djnz fnextlp
0059ED C9                  B  1719    				ret
                           B  1720    				
                           B  1721    ;----------------------------------------------
                           B  1722    
                           B  1723    
0059EE                     B  1724    get_fat_entry_for_cluster
                           B  1725    
                           B  1726    ; INPUT: HL = cluster in question, OUTPUT: HL =
                           B  1727    
0059EE C5                  B  1728    				push bc
0059EF D5                  B  1729    				push de
0059F0 01000000            B  1730    				ld bc,0
0059F4 4D                  B  1731    				ld c,l
0059F5 7C                  B  1732    				ld a,h
0059F6 2A EB 5B 00         B  1733    				ld hl,(fs_fat1_position)
0059FA CD 1C 5B 00         B  1734    				call set_abs_lba_and_read_secto
0059FE 38 17               B  1735    				jr c,hwerr
005A00 DDE5                B  1736    				push ix
005A02 DD210008 00         B  1737    				ld ix,sector_buffer
005A07 DD09                B  1738    				add ix,bc
005A09 DD09                B  1739    				add ix,bc
005A0B 21000000            B  1740    				ld hl,0
005A0F DD6E00              B  1741    				ld l,(ix)
005A12 DD6601              B  1742    				ld h,(ix+1)
005A15 DDE1                B  1743    				pop ix
005A17 D1                  B  1744    hwerr			pop de
005A18 C1                  B  1745    				pop bc
005A19 C9                  B  1746    				ret
                           B  1747    
                           B  1748    
                           B  1749    ;----------------------------------------------
                           B  1750    
                           B  1751    
005A1A                     B  1752    update_fat_entry_for_cluster
                           B  1753    
                           B  1754    ; INPUT: HL = cluster in question
                           B  1755    ;        DE = new value to put in FAT tables
                           B  1756    			
005A1A C5                  B  1757    				push bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 241


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
005A1B E5                  B  1758    				push hl
005A1C 01000000            B  1759    				ld bc,0
005A20 4D                  B  1760    				ld c,l
005A21 7C                  B  1761    				ld a,h
005A22 2A EB 5B 00         B  1762    				ld hl,(fs_fat1_position)		005A26 CD 3A 5A 00         B  1763    				call fat_upd
005A2A 38 0B               B  1764    				jr c,fup_end
                           B  1765    			
005A2C E1                  B  1766    				pop hl
005A2D E5                  B  1767    				push hl
005A2E 7C                  B  1768    				ld a,h
005A2F 2A EE 5B 00         B  1769    				ld hl,(fs_fat2_position)		005A33 CD 3A 5A 00         B  1770    				call fat_upd
005A37 E1                  B  1771    fup_end			pop hl
005A38 C1                  B  1772    				pop bc
005A39 C9                  B  1773    				ret
                           B  1774    			
                           B  1775    			
005A3A CD 1C 5B 00         B  1776    fat_upd			call set_abs_lba_and_read_secto
005A3E 38 0D               B  1777    				jr c,ufehwerr
005A40 21000800            B  1778    				ld hl,sector_buffer
005A44 09                  B  1779    				add hl,bc
005A45 09                  B  1780    				add hl,bc
005A46 73                  B  1781    				ld (hl),e
005A47 23                  B  1782    				inc hl
005A48 72                  B  1783    				ld (hl),d
005A49 CD 6F 5B 00         B  1784    				call fs_write_sector
005A4D C9                  B  1785    ufehwerr		ret
                           B  1786    				
                           B  1787    	
                           B  1788    ;----------------------------------------------
                           B  1789    
005A4E                     B  1790    transfer_length_countdown
                           B  1791    
005A4E E5                  B  1792    				push hl							005A4F C5                  B  1793    				push bc
                           B  1794    			
005A50 0604                B  1795    				ld b,4
005A52 21 22 5C 00         B  1796    				ld hl,fs_file_pointer			005A56 34                  B  1797    fpinclp			inc (hl)
005A57 20 03               B  1798    				jr nz,fs_fpino
005A59 23                  B  1799    				inc hl
005A5A 10 FA               B  1800    				djnz fpinclp
                           B  1801    				
005A5C 2A 2E 5C 00         B  1802    fs_fpino		ld hl,(fs_file_transfer_length)
005A60 2B                  B  1803    				dec hl
005A61 22 2E 5C 00         B  1804    				ld (fs_file_transfer_length),hl
005A65 01000000            B  1805    				ld bc,0
005A69 B7                  B  1806    				or a
005A6A ED4A                B  1807    				adc hl,bc						                           B  1808    				
005A6C C1                  B  1809    				pop bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 242


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
005A6D E1                  B  1810    				pop hl
005A6E C9                  B  1811    				ret
                           B  1812    
                           B  1813    ;----------------------------------------------
                           B  1814    
005A6F                     B  1815    fs_get_current_dir_name
                           B  1816    
                           B  1817    ;returns current dir name - location at HL
                           B  1818    
005A6F CD DA 1A 00         B  1819    				call fs_get_dir_cluster			005A73 7A                  B  1820    				ld a,d
005A74 B3                  B  1821    				or e
005A75 20 10               B  1822    				jr nz,fs_dnnr
005A77 21 53 67 00         B  1823    				ld hl,vol_txt+1					005A7B 3A 4E 67 00         B  1824    				ld a,(current_volume)
005A7F C630                B  1825    				add a,030h
005A81 32 56 67 00         B  1826    				ld (vol_txt+4),a
005A85 AF                  B  1827    				xor a
005A86 C9                  B  1828    				ret
                           B  1829    					
005A87 ED53 58 5C 00       B  1830    fs_dnnr			ld (fs_stash_dir_block),de
005A8C CD EC 50 00         B  1831    				call fs_parent_dir_command		005A90 D8                  B  1832    				ret c
005A91 B7                  B  1833    				or a
005A92 C0                  B  1834    				ret nz
005A93 3E01                B  1835    				ld a,1
005A95 CD DF 58 00         B  1836    				call fs_search					005A99 D8                  B  1837    				ret c
005A9A C0                  B  1838    				ret nz
                           B  1839    					
005A9B DDE5                B  1840    fs_gdbn			push ix
005A9D E1                  B  1841    				pop hl
005A9E 060B                B  1842    				ld b,11							005AA0 7E                  B  1843    ntdirn			ld a,(hl)
005AA1 FE20                B  1844    				cp ' '
005AA3 28 03               B  1845    				jr z,rdirfsp
005AA5 23                  B  1846    				inc hl
005AA6 10 F8               B  1847    rdirnsp			djnz ntdirn
                           B  1848    				
005AA8 3600                B  1849    rdirfsp			ld (hl),0
005AAA DDE5                B  1850    				push ix
005AAC ED5B 58 5C 00       B  1851    				ld de,(fs_stash_dir_block)
005AB1 CD E6 1A 00         B  1852    				call fs_update_dir_cluster		005AB5 E1                  B  1853    				pop hl	
005AB6 AF                  B  1854    				xor a							005AB7 C9                  B  1855    				ret
                           B  1856    
                           B  1857    			
                           B  1858    ;----------------------------------------------
                           B  1859    
005AB8                     B  1860    fs_clear_filename
                           B  1861    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 243


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
005AB8 D5                  B  1862    				push de							005AB9 C5                  B  1863    				push bc
005ABA 060C                B  1864    				ld b,12
005ABC 3E20                B  1865    				ld a,' '
005ABE 12                  B  1866    clrfnlp			ld (de),a
005ABF 13                  B  1867    				inc de
005AC0 10 FC               B  1868    				djnz clrfnlp
005AC2 C1                  B  1869    				pop bc
005AC3 D1                  B  1870    				pop de
005AC4 C9                  B  1871    				ret
                           B  1872    				
                           B  1873    ;----------------------------------------------
                           B  1874    
                           B  1875    
005AC5                     B  1876    cluster_and_offset_to_lba
                           B  1877    
                           B  1878    ; INPUT: HL = cluster, A = sector offset, OUTPU
                           B  1879    
005AC5 C5                  B  1880    				push bc
005AC6 D5                  B  1881    				push de
005AC7 E5                  B  1882    				push hl
005AC8 DDE5                B  1883    				push ix
                           B  1884    
005ACA 2B                  B  1885    				dec hl							005ACB 2B                  B  1886    				dec hl							005ACC 11000000            B  1887    				ld de,0							005AD0 01000000            B  1888    				ld bc,0
005AD4 5F                  B  1889    				ld e,a
005AD5 3A E7 5B 00         B  1890    				ld a,(fs_cluster_size)			005AD9 CB3F                B  1891    caotllp			srl a
005ADB 28 03               B  1892    				jr z,clusdone
005ADD 29                  B  1893    				add hl,hl						005ADE 18 F9               B  1894    				jr caotllp
                           B  1895    			
005AE0 ED4B F4 5B 00       B  1896    clusdone		ld bc,(fs_data_area)			005AE5 09                  B  1897    				add hl,bc						005AE6 19                  B  1898    				add hl,de						                           B  1899    				
005AE7 E5                  B  1900    add_ptn_offset	push hl							005AE8 CD 14 1B 00         B  1901    				call fs_calc_volume_offset
005AEC DD21 7A 67 00       B  1902    				ld ix,volume_mount_list
005AF1 DD19                B  1903    				add ix,de
005AF3 E1                  B  1904    				pop hl
005AF4 DD0708              B  1905    				ld bc,(ix+08h)					005AF7 DD7E0B              B  1906    				ld a,(ix+0bh)
005AFA 09                  B  1907    				add hl,bc
005AFB CE00                B  1908    				adc a,0
005AFD 22 31 69 00         B  1909    				ld (sector_lba0),hl				005B01 32 34 69 00         B  1910    				ld (sector_lba3),a				                           B  1911    				
005B05 DDE1                B  1912    				pop ix
005B07 E1                  B  1913    				pop hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 244


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
005B08 D1                  B  1914    				pop de
005B09 C1                  B  1915    				pop bc
005B0A C9                  B  1916    				ret
                           B  1917    				
                           B  1918    
                           B  1919    ;----------------------------------------------
                           B  1920    
005B0B                     B  1921    set_absolute_lba
                           B  1922    
                           B  1923    ; set A to sector offset, HL to sectors from st
                           B  1924    
005B0B C5                  B  1925    				push bc							005B0C D5                  B  1926    				push de							005B0D E5                  B  1927    				push hl							005B0E DDE5                B  1928    				push ix							005B10 01000000            B  1929    				ld bc,0
005B14 11000000            B  1930    				ld de,0
005B18 5F                  B  1931    				ld e,a
005B19 19                  B  1932    				add hl,de
005B1A 18 CB               B  1933    				jr add_ptn_offset		
                           B  1934    				
                           B  1935    
005B1C                     B  1936    set_abs_lba_and_read_sector
                           B  1937    
005B1C CD 0B 5B 00         B  1938    				call set_absolute_lba
005B20 C3 46 5B 00         B  1939    				jp fs_read_sector
                           B  1940    				
                           B  1941    ;----------------------------------------------
                           B  1942    
                           B  1943    
005B24                     B  1944    backup_sector_lba
                           B  1945    
005B24 C5                  B  1946    				push bc
005B25 D5                  B  1947    				push de
005B26 E5                  B  1948    				push hl
005B27 21 31 69 00         B  1949    				ld hl,sector_lba0
005B2B 11 5C 5C 00         B  1950    				ld de,fs_backed_up_sector_lba0
005B2F 01040000            B  1951    lbabur			ld bc,4
005B33 EDB0                B  1952    				ldir
005B35 E1                  B  1953    				pop hl
005B36 D1                  B  1954    				pop de
005B37 C1                  B  1955    				pop bc
005B38 C9                  B  1956    				ret
                           B  1957    
                           B  1958    
005B39                     B  1959    restore_sector_lba
                           B  1960    
005B39 C5                  B  1961    				push bc
005B3A D5                  B  1962    				push de
005B3B E5                  B  1963    				push hl
005B3C 21 5C 5C 00         B  1964    				ld hl,fs_backed_up_sector_lba0
005B40 11 31 69 00         B  1965    				ld de,sector_lba0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 245


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
005B44 18 E9               B  1966    				jr lbabur	
                           B  1967    					
                           B  1968    ;----------------------------------------------
                           B  1969    
005B46                     B  1970    fs_read_sector
                           B  1971    			
005B46 C5                  B  1972    				push bc
005B47 D5                  B  1973    				push de
005B48 E5                  B  1974    				push hl
005B49 DDE5                B  1975    				push ix
005B4B FDE5                B  1976    				push iy
005B4D 01040000            B  1977    				ld bc,04h						005B51 CD 80 5B 00         B  1978    				call sector_access_redirect
005B55 2A 31 69 00         B  1979    secaccend		ld hl,(sector_lba0)
005B59 22 60 5C 00         B  1980    				ld (fs_sector_last_read_lba0),h
005B5D 3A 34 69 00         B  1981    				ld a,(sector_lba0+3)
005B61 32 63 5C 00         B  1982    				ld (fs_sector_last_read_lba0+3)
005B65 FDE1                B  1983    				pop iy
005B67 DDE1                B  1984    				pop ix
005B69 E1                  B  1985    				pop hl
005B6A D1                  B  1986    				pop de
005B6B C1                  B  1987    				pop bc
005B6C C8                  B  1988    				ret z							005B6D 37                  B  1989    				scf								005B6E C9                  B  1990    				ret								                           B  1991    
                           B  1992    
005B6F                     B  1993    fs_write_sector	
                           B  1994    				
005B6F C5                  B  1995    				push bc
005B70 D5                  B  1996    				push de
005B71 E5                  B  1997    				push hl
005B72 DDE5                B  1998    				push ix
005B74 FDE5                B  1999    				push iy
005B76 01080000            B  2000    				ld bc,08h						005B7A CD 80 5B 00         B  2001    				call sector_access_redirect
005B7E 18 D5               B  2002    				jr secaccend
                           B  2003    
                           B  2004    
                           B  2005    
005B80                     B  2006    sector_access_redirect
                           B  2007    
                           B  2008    	
005B80 3A 4F 67 00         B  2009    				ld a,(current_driver)			005B84 CD AC 1A 00         B  2010    				call locate_driver_base			005B88 EB                  B  2011    				ex de,hl
005B89 09                  B  2012    				add hl,bc						005B8A E9                  B  2013    				jp (hl)
                           B  2014    
                           B  2015    ;----------------------------------------------
                           B  2016    
005B8B                     B  2017    fs_is_same_sector_in_buffer
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 246


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
                           B  2018    				
005B8B E5                  B  2019    				push hl
005B8C D5                  B  2020    				push de
005B8D 2A 31 69 00         B  2021    				ld hl,(sector_lba0)
005B91 ED5B 60 5C 00       B  2022    				ld de,(fs_sector_last_read_lba0
005B96 AF                  B  2023    				xor a
005B97 ED52                B  2024    				sbc hl,de
005B99 20 0A               B  2025    				jr nz,fs_notsamsec
005B9B 3A 34 69 00         B  2026    				ld a,(sector_lba0+3)
005B9F 6F                  B  2027    				ld l,a
005BA0 3A 63 5C 00         B  2028    				ld a,(fs_sector_last_read_lba0+
005BA4 BD                  B  2029    				cp l
005BA5 D1                  B  2030    fs_notsamsec	pop de
005BA6 E1                  B  2031    				pop hl
005BA7 C9                  B  2032    				ret
                           B  2033    
                           B  2034    ;----------------------------------------------
                           B  2035    	
005BA8                     B  2036    bootsector_stub
                           B  2037    
005BA8 EB3C904D 53444F53   B  2038    				db  0EBh,03Ch,090h,04Dh,053h,04
005BB0 352E3000 02004000 
005BB8 02000200 00F8F200   B  2039    				db  002h,000h,002h,000h,000h,0F
005BC0 3F00FF00 00000000 
005BC8 00000000 000029C4   B  2040    				db  000h,000h,000h,000h,000h,00
005BD0 E636984E 4F204E41 
005BD8 4D452020 20204641   B  2041    				db  04Dh,045h,020h,020h,020h,02
005BE0 54313620 2020C3 
                           B  2042    
                           B  2043    ;----------------------------------------------
                           B  2044    
005BE7 00                  B  2045    fs_cluster_size				db 0
005BE8 000000              B  2046    fs_bytes_per_cluster		dw24 0
005BEB 000000              B  2047    fs_fat1_position			dw24 0		; offse
005BEE 000000              B  2048    fs_fat2_position			dw24 0		; offse
005BF1 000000              B  2049    fs_root_dir_position		dw24 0		; offse
005BF4 000000              B  2050    fs_data_area				dw24 0		; offse
005BF7 00                  B  2051    fs_root_dir_sectors			db 0
                           B  2052    
005BF8 000000              B  2053    fs_sectors_per_fat			dw24 0
005BFB 000000              B  2054    fs_max_data_clusters		dw24 0
                           B  2055    
005BFE 00 00 00 00 00 00   B  2056    fs_sought_filename			blkb 12,0
005C04 00 00 00 00 00 00 
005C0A 00 00 00 00 00 00   B  2057    fs_alt_filename				blkb 12,0
005C10 00 00 00 00 00 00 
005C16 00 00 00 00 00 00   B  2058    fs_filename_buffer			blkb 12,0
005C1C 00 00 00 00 00 00 
                           B  2059    
005C22 00000000            B  2060    fs_file_pointer				dw 0,0		; 32 bi
005C26 00000000            B  2061    fs_file_length				dw 0,0		; 32 bi
005C2A 00000000            B  2062    fs_existing_file_length 	dw 0,0		; 32 bi
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 247


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
                           B  2063    
005C2E 000000              B  2064    fs_file_transfer_length		dw24 0		; 24 bi
                           B  2065    
005C31 000000              B  2066    fs_file_start_cluster		dw24 0
005C34 000000              B  2067    fs_file_working_cluster		dw24 0
                           B  2068    
005C37 000000              B  2069    fs_ez80_address				dw24 0
005C3A 000000              B  2070    fs_ez80_working_address		dw24 0
                           B  2071    
005C3D 000000              B  2072    fs_in_sector_offset			dw24 0
005C40 00                  B  2073    fs_working_sector			db 0
                           B  2074    
005C41 000000              B  2075    fs_working_cluster			dw24 0
005C44 000000              B  2076    fs_free_cluster				dw24 0
005C47 000000              B  2077    fs_new_file_cluster			dw24 0
                           B  2078    
005C4A 000000              B  2079    fs_fname_in_sector_addr		dw24 0
                           B  2080    
005C4D 000000              B  2081    fs_dir_entry_cluster		dw24 0
005C50 000000              B  2082    fs_dir_entry_line_offset	dw24 0
005C53 00                  B  2083    fs_dir_entry_sector			db 0
                           B  2084    
005C54 00                  B  2085    fs_filepointer_valid		db 0
005C55 000000              B  2086    fs_sector_pos_cnt			dw24 0
                           B  2087    
005C58 000000              B  2088    fs_stash_dir_block	 		dw24 0
                           B  2089    
005C5B 00                  B  2090    fs_search_type				db 0
                           B  2091    
005C5C 00000000            B  2092    fs_backed_up_sector_lba0	db 0,0,0,0
                           B  2093    
005C60 00000000            B  2094    fs_sector_last_read_lba0	db 0,0,0,0
                           B  2095    
                           B  2096    ;----------------------------------------------
                           B  2097    
                           A  3756    
                           A  3757    ;----------------------------------------------
                           A  3758    ; OS Data 
                           A  3759    ;----------------------------------------------
                           A  3760    
                           A  3761    
                           B     0    	include		'prose_data.asm'				                           B     1    ;**************
                           B     2    ;* PROSE DATA *
                           B     3    ;**************
                           B     4    
                           B     5    ;----------------------------------------------
                           B     6    ; kernal routine locations
                           B     7    ;----------------------------------------------
                           B     8    
005C64                     B     9    kernal_table
                           B    10    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 248


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005C64 A61800              B    11    	dw24 ext_mount_volumes			;00		
005C67 4C1800              B    12    	dw24 os_get_device_info			;01		
005C6A 031700              B    13    	dw24 os_check_volume_format		;02		
005C6D 351B00              B    14    	dw24 ext_change_volume			;03		
005C70 5F1800              B    15    	dw24 os_get_volume_info			;04		
005C73 0C1700              B    16    	dw24 ext_format					;05		
005C76 3E1700              B    17    	dw24 ext_make_dir				;06		
005C79 4C1700              B    18    	dw24 ext_change_dir				;07		
005C7C 5A1700              B    19    	dw24 os_parent_dir				;08		
005C7F 601700              B    20    	dw24 os_root_dir				;09		
005C82 A81700              B    21    	dw24 ext_delete_dir				;0a		
005C85 971600              B    22    	dw24 ext_find_file				;0b		
005C88 B11600              B    23    	dw24 ext_set_file_pointer		;0c		
005C8B AA1600              B    24    	dw24 os_set_load_length			;0d		
005C8E C41600              B    25    	dw24 ext_read_bytes_from_file	;0e		
005C91 661700              B    26    	dw24 ext_erase_file				;0f		
005C94 8E1700              B    27    	dw24 ext_rename_file			;10		
005C97 D31600              B    28    	dw24 ext_create_file			;11		
005C9A E41600              B    29    	dw24 ext_write_bytes_to_file	;12		
005C9D 031B00              B    30    	dw24 fs_get_total_sectors		;13		
005CA0 741700              B    31    	dw24 os_goto_first_dir_entry	;14		 
005CA3 7A1700              B    32    	dw24 os_get_dir_entry			;15		
005CA6 801700              B    33    	dw24 os_goto_next_dir_entry		;16		
005CA9 B81700              B    34    	dw24 ext_read_sector			;17		
005CAC E61700              B    35    	dw24 ext_write_sector			;18		
005CAF 701B00              B    36    	dw24 ext_file_sector_list		;19		
005CB2 DA1A00              B    37    	dw24 fs_get_dir_cluster			;1a		
005CB5 E61A00              B    38    	dw24 fs_update_dir_cluster		;1b		
005CB8 861700              B    39    	dw24 os_get_current_dir_name	;1c		
                           B    40    
005CBB F84A00              B    41    	dw24 os_wait_key_press			;1d		
005CBE 534B00              B    42    	dw24 os_get_key_press			;1e		
005CC1 BE1500              B    43    	dw24 os_get_key_mod_flags		;1f		
                           B    44    
005CC4 6D1800              B    45    	dw24 ext_serial_get_header		;20		
005CC7 7A1800              B    46    	dw24 ext_serial_receive_file	;21		 
005CCA 831800              B    47    	dw24 ext_serial_send_file		;22		 
005CCD 951800              B    48    	dw24 ext_serial_tx				;23		
005CD0 9C1800              B    49    	dw24 ext_serial_rx				;24		
                           B    50    
005CD3 0A1000              B    51    	dw24 ext_print_string			;25		
005CD6 E74400              B    52    	dw24 hwsc_clear_screen			;26		
005CD9 B74600              B    53    	dw24 hwsc_wait_vrt				;27		
005CDC C61400              B    54    	dw24 os_set_cursor_position		;28		
005CDF D51A00              B    55    	dw24 ext_plot_char				;29		
005CE2 041600              B    56    	dw24 ext_set_pen				;2a		
005CE5 111600              B    57    	dw24 ext_background_colours		;2b		
005CE8 B04500              B    58    	dw24 hwsc_draw_cursor			;2c		
005CEB 0B1600              B    59    	dw24 os_get_pen					;2d		
005CEE 224500              B    60    	dw24 hwsc_scroll_up				;2e		
005CF1 714400              B    61    	dw24 os_set_video_hw_regs		;2f		
005CF4 C41500              B    62    	dw24 os_get_vmode				;30			Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 249


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005CF7 044600              B    63    	dw24 hwsc_get_charmap_addr_xy	;31		
005CFA E61400              B    64    	dw24 os_get_cursor_position		;32		 
                           B    65    
005CFD E11B00              B    66    	dw24 ext_set_envar				;33		
005D00 A51B00              B    67    	dw24 ext_get_envar				;34		
005D03 3B1C00              B    68    	dw24 ext_delete_envar			;35		
                           B    69    
005D06 3C1500              B    70    	dw24 os_set_mouse_window		;36		
005D09 821500              B    71    	dw24 os_get_mouse_position		;37		
005D0C 591500              B    72    	dw24 os_get_mouse_motion		;38		
                           B    73    
005D0F 794700              B    74    	dw24 hwsc_time_delay			;39		
005D12 DA1200              B    75    	dw24 ext_compare_strings		;3a		
005D15 591100              B    76    	dw24 ext_hexbyte_to_ascii		;3b		
005D18 8E1100              B    77    	dw24 ext_ascii_to_hexword		;3c		
005D1B E31100              B    78    	dw24 ext_user_input				;3d		
                           B    79    
005D1E 5E4700              B    80    	dw24 hwsc_get_version			;3e		
005D21 B01400              B    81    	dw24 os_dont_store_registers	;3f		
005D24 E73700              B    82    	dw24 os_cmd_unused				;40 		005D27 9C4700              B    83    	dw24 hwsc_read_rtc				;41     
005D2A C44700              B    84    	dw24 hwsc_write_rtc				;42		 
005D2D 8C1C00              B    85    	dw24 os_get_keymap_location		;43		 
005D30 E83700              B    86    	dw24 os_get_mem_base			;44
005D33 921C00              B    87    	dw24 ext_play_audio				;45
005D36 B24A00              B    88    	dw24 hwsc_disable_audio			;46
005D39 CB4A00              B    89    	dw24 hwsc_get_joysticks			;47
005D3C D41500              B    90    	dw24 ext_set_vmode				;48
005D3F 971000              B    91    	dw24 ext_set_cursor_image		;49
005D42 964500              B    92    	dw24 hwsc_remove_cursor			;4a
005D45 413400              B    93    	dw24 char_to_font				;4b
005D48 8C1B00              B    94    	dw24 os_get_disk_sector_ptr		;4c
005D4B 854700              B    95    	dw24 hwsc_set_timeout			;4d
005D4E 964700              B    96    	dw24 hwsc_test_timeout			;4e
                           B    97    	
005D51 083800              B    98    	dw24 ext_set_pointer			;4f
005D54 8C3900              B    99    	dw24 os_allocate_ram			;50
005D57 B73900              B   100    	dw24 os_deallocate_ram			;51
005D5A F83700              B   101    	dw24 os_get_mem_top				;52
005D5D DA4700              B   102    	dw24 os_init_msec_counter		;53
005D60 114800              B   103    	dw24 os_read_msec_counter		;54
                           B   104    	
                           B   105    ;----------------------------------------------
                           B   106    ; Non-packed Text Strings
                           B   107    ;----------------------------------------------
                           B   108    
005D63 50524F53 4520666F   B   109    welcome_message			db "PROSE for EZ80P by 
005D6B 7220455A 38305020 
005D73 62792050 68696C20 
005D7B 52757374 6F6E2032 
005D83 3031310B 0B00 
005D89 44726976 65733A0B   B   110    storage_txt				db "Drives:",11,0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 250


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005D91 00 
005D92 53544152 5455502E   B   111    startup_script_fn		db "STARTUP.PBF",0
005D9A 50424600 
005D9E 2400                B   112    os_hex_prefix_txt		db "$",0
005DA0 50524F53 45205665   B   113    os_version_txt			db "PROSE Ver: $",0		005DA8 723A2024 00 
005DAD 414D4F45 42412056   B   114    hw_version_txt			db "AMOEBA Ver: $",0
005DB5 65723A20 2400 
005DBB 202F2000            B   115    fwd_slash_txt			db " / ",0
005DBF 4C6F6164 696E672E   B   116    loading_txt				db "Loading..",11,0
005DC7 2E0B00 
005DCA 53617669 6E672E2E   B   117    saving_txt				db "Saving..",11,0
005DD2 0B00 
005DD4 2E657A70 20         B   118    ezp_txt					db ".ezp",32
005DD9 2E706266 20         B   119    pbf_txt					db ".pbf",32
005DDE 0B4D6F72 653F0B0B   B   120    os_more_txt				db 11,"More?",11,11,0
005DE6 00 
005DE7 52656769 73746572   B   121    nmi_freeze_txt			db "Register Dump:"
005DEF 2044756D 703A 
005DF5 0B0B00              B   122    crlfx2_txt				db 11,11,0
005DF8 7800                B   123    rep_char_txt			db "x",0
005DFA 20746F20 00         B   124    to_txt					db " to ",0
005DFF 4552524F 5200       B   125    error_txt				db "ERROR",0
005E05 494620              B   126    if_command_txt			db "IF "
005E08 454E4420            B   127    end_command_txt			db "END "
005E0C 4F532052 45515549   B   128    hw_warn_txt1			db "OS REQUIRES AMOEBA 
005E14 52455320 414D4F45 
005E1C 42412056 3A 
005E21 2D2D2D2D 00         B   129    hw_warn_txt2			db "----",0
005E26 54686973 2077696C   B   130    pmq_txt					db "This will overwrite
005E2E 6C206F76 65727772 
005E36 69746520 70726F74 
005E3E 65637465 64205241 
005E46 4D2E2043 6F6E7469 
005E4E 6E756520 28792F6E 
005E56 293F200B 00 
005E5B 4F555478 7800       B   131    envar_out_n_txt			db "OUTxx",0
005E61 50415448 00         B   132    path_txt				db "PATH",0
                           B   133    
                           B   134    ;----------------------------------------------
                           B   135    ; Packed text section
                           B   136    ;----------------------------------------------
                           B   137    
005E66 00444542 5547       B   138    dictionary				db 0,"DEBUG"			005E6C 002D2D2D 2D2D       B   139    						db 0,"-----"			005E72 00494F              B   140    						db 0,"IO"				005E75 002D2D              B   141    						db 0,"--"				005E78 004D4953 43         B   142    						db 0,"MISC"				005E7D 002D2D2D 2D         B   143    						db 0,"----"				005E82 00616464 72         B   144    						db 0,"addr"				005E87 0050524F 5345       B   145    						db 0,"PROSE"			005E8D 00612062 2063       B   146    						db 0,"a b c"			Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 251


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005E93 00416464 72657373   B   147    						db 0,"Address"			005E9B 00427974 6573       B   148    						db 0,"Bytes"			005EA1 00457865 63757461   B   149    						db 0,"Executable"		005EA9 626C65 
005EAC 0048756E 74         B   150    						db 0,"Hunt"				005EB1 0046696C 6C         B   151    						db 0,"Fill"				005EB6 00476F74 6F         B   152    						db 0,"Goto"				                           B   153    						
005EBB 0053686F 77         B   154    						db 0,"Show"				005EC0 00435055            B   155    						db 0,"CPU"				005EC4 00526567 69737465   B   156    						db 0,"Registers"		005ECC 7273 
005ECE 004173              B   157    						db 0,"As"				005ED1 00415343 4949       B   158    						db 0,"ASCII"			005ED7 00436C65 6172       B   159    						db 0,"Clear"			005EDD 00536372 65656E     B   160    						db 0,"Screen"			005EE4 00446973 61737365   B   161    						db 0,"Disassemble"		005EEC 6D626C65 
005EF0 00537769 746368     B   162    						db 0,"Switch"			005EF7 00436F70 79         B   163    						db 0,"Copy"				005EFC 00446576 696365     B   164    						db 0,"Device"			005F03 00436861 6E6765     B   165    						db 0,"Change"			005F0A 00447269 7665       B   166    						db 0,"Drive"			005F10 00446972            B   167    						db 0,"Dir"				005F14 002F                B   168    						db 0,"/"				005F16 00666E              B   169    						db 0,"fn"				                           B   170    						
005F19 0044656C 657465     B   171    						db 0,"Delete"			005F20 0046696C 65         B   172    						db 0,"File"				005F25 00496E66 6F         B   173    						db 0,"Info"				005F2A 00564F4C 783A       B   174    						db 0,"VOLx:"			005F30 004D616B 65         B   175    						db 0,"Make"				005F35 0052656D 6F756E74   B   176    						db 0,"Remount"			005F3D 00537461 7274       B   177    						db 0,"Start"			005F43 00576172 6E696E67   B   178    						db 0,"Warning!"			005F4B 21 
005F4C 00416C6C            B   179    						db 0,"All"				005F50 0052656D 6F7665     B   180    						db 0,"Remove"			005F57 0052656E 616D65     B   181    						db 0,"Rename"			005F5E 004F72              B   182    						db 0,"Or"				005F61 00526563 65697665   B   183    						db 0,"Receive"			005F69 00536176 65         B   184    						db 0,"Save"				005F6E 00547261 6E736D69   B   185    						db 0,"Transmit"			005F76 74 
005F77 004C6F61 64         B   186    						db 0,"Load"				                           B   187    						
005F7C 004F532F 4857       B   188    						db 0,"OS/HW"			005F82 00566572 73696F6E   B   189    						db 0,"Version"			005F8A 0070656E 20706170   B   190    						db 0,"pen paper"		005F92 6572 
005F94 803A                B   191    						db 80h,":"				005F96 813E                B   192    						db 81h,">"				Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 252


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005F98 82534F55 4E44       B   193    						db 82h,"SOUND"			005F9E 00566F6C 756D6573   B   194    						db 0,"Volumes"			005FA6 8343                B   195    						db 83h,"C"				005FA8 844344              B   196    						db 84h,"CD"				005FAB 85434C53            B   197    						db 85h,"CLS"			005FAF 8650454E            B   198    						db 86h,"PEN"			005FB3 8744                B   199    						db 87h,"D"				005FB5 8844454C            B   200    						db 88h,"DEL"			005FB9 89444952            B   201    						db 89h,"DIR"			005FBD 8A48                B   202    						db 8ah,"H"				005FBF 8B46                B   203    						db 8bh,"F"				                           B   204    						
005FC1 004F6E              B   205    						db 0,"On"				005FC4 8C464F52 4D4154     B   206    						db 8ch,"FORMAT"			005FCB 0047                B   207    						db 0,"G"				005FCD 8D4C42              B   208    						db 8dh,"LB"				005FD0 8E4D                B   209    						db 8eh,"M"				005FD2 8F4D4F55 4E54       B   210    						db 8fh,"MOUNT"			005FD8 004265              B   211    						db 0,"Be"				005FDB 9052                B   212    						db 90h,"R"				005FDD 915244              B   213    						db 91h,"RD"				005FE0 92524E              B   214    						db 92h,"RN"				005FE3 935258              B   215    						db 93h,"RX"				005FE6 945342              B   216    						db 94h,"SB"				005FE9 9554                B   217    						db 95h,"T"				005FEB 965458              B   218    						db 96h,"TX"				005FEE 97564552 53         B   219    						db 97h,"VERS"			005FF3 00577269 7465       B   220    						db 0,"Write"			                           B   221    						
005FF9 004D656D 6F7279     B   222    						db 0,"Memory"			006000 00227478 7422       B   223    						db 0,22h,"txt",22h		006006 0057696C 6C         B   224    						db 0,"Will"				00600B 00526174 65         B   225    						db 0,"Rate"				006010 0061                B   226    						db 0,"a"				006012 00507265 70         B   227    						db 0,"Prep"				006017 984D44              B   228    						db 98h,"MD"				00601A 00447269 766573     B   229    						db 0,"Drives"			006021 006F6C64 666E       B   230    						db 0,"oldfn"			006027 006E6577 666E       B   231    						db 0,"newfn"			00602D 006C656E            B   232    						db 0,"len"				006031 00436F6C 6F757273   B   233    						db 0,"Colours"			006039 993F                B   234    						db 99h,"?"				00603B 00436F6D 6D616E64   B   235    						db 0,"Commands"			006043 73 
006044 0020                B   236    						db 0," "				006046 002D                B   237    						db 0,"-"				                           B   238    						
006048 00566F6C 756D65     B   239    						db 0,"Volume"			00604F 0046756C 6C         B   240    						db 0,"Full"				006054 004E6F74            B   241    						db 0,"Not"				006058 00466F75 6E64       B   242    						db 0,"Found"			00605E 004C656E 677468     B   243    						db 0,"Length"			Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 253


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
006065 005A6572 6F         B   244    						db 0,"Zero"				00606A 004F7574            B   245    						db 0,"Out"				00606E 004F66              B   246    						db 0,"Of"				006071 0052616E 6765       B   247    						db 0,"Range"			006077 00416C72 65616479   B   248    						db 0,"Already"			00607F 00457869 737473     B   249    						db 0,"Exists"			006086 004174              B   250    						db 0,"At"				006089 00526F6F 74         B   251    						db 0,"Root"				00608E 004D6973 6D617463   B   252    						db 0,"Mismatch"			006096 68 
006097 00526571 75657374   B   253    						db 0,"Request"			00609F 00446174 61         B   254    						db 0,"Data"				                           B   255    				
0060A4 00454F46            B   256    						db 0,"EOF"				0060A8 00416674 6572       B   257    						db 0,"After"			0060AE 00556E6B 6E6F776E   B   258    						db 0,"Unknown"			0060B6 00436F6D 6D616E64   B   259    						db 0,"Command"			0060BE 00426164            B   260    						db 0,"Bad"				0060C2 00486578            B   261    						db 0,"Hex"				0060C6 004E6F              B   262    						db 0,"No"				0060C9 0041626F 72746564   B   263    						db 0,"Aborted"			0060D1 00507265 73656E74   B   264    						db 0,"Present"			0060D9 00436865 636B7375   B   265    						db 0,"Checksum"			0060E1 6D 
0060E2 004C6F61 646564     B   266    						db 0,"Loaded"			0060E9 00436F6D 6D73       B   267    						db 0,"Comms"			0060EF 00457272 6F72       B   268    						db 0,"Error"			0060F5 00417267 756D656E   B   269    						db 0,"Arguments"		0060FD 7473 
0060FF 004C6F73 74         B   270    						db 0,"Lost"				                           B   271    						
006104 00                  B   272    						db 0
006105 46415431 36         B   273    fat16_txt				db "FAT16"				                           B   274    
00610A 00536572 69616C     B   275    						db 0,"Serial"			006111 0054696D 65         B   276    						db 0,"Time"				006116 00466F6E 74         B   277    						db 0,"Font"				00611B 00546F6F            B   278    						db 0,"Too"				00611F 004C6F6E 67         B   279    						db 0,"Long"				006124 00446573 74696E61   B   280    						db 0,"Destination"		00612C 74696F6E 
006130 0053656C 65637465   B   281    						db 0,"Selected"			006138 64 
006139 00496E76 616C6964   B   282    						db 0,"Invalid"			006141 004D6973 73696E67   B   283    						db 0,"Missing"			006149 004F4B              B   284    						db 0,"OK"				00614C 004F53              B   285    						db 0,"OS"				00614F 0050726F 74656374   B   286    						db 0,"Protected"		006157 6564 
006159 0041                B   287    						db 0,"A"				00615B 004973              B   288    						db 0,"Is"				00615E 00456D70 7479       B   289    						db 0,"Empty"			Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 254


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
006164 00456E64            B   290    						db 0,"End"				                           B   291    						
006168 0024                B   292    						db 0,"$"
00616A 7878                B   293    hex_byte_txt			db "xx"					                           B   294    						
00616C 00417070 656E64     B   295    						db 0,"Append"			006173 003F                B   296    						db 0,"?"				006175 0024                B   297    						db 0,"$"				006177 00417761 6974696E   B   298    						db 0,"Awaiting"			00617F 67 
006180 00526563 65697669   B   299    						db 0,"Receiving"		006188 6E67 
00618A 0053656E 64696E67   B   300    						db 0,"Sending"			006192 000B                B   301    						db 0,11					006194 002E2E              B   302    						db 0,".."				006197 004E616D 65         B   303    						db 0,"Name"				00619C 00204279 746573     B   304    						db 0," Bytes"			0061A3 00507265 7373       B   305    						db 0,"Press"			0061A9 00416E79            B   306    						db 0,"Any"				0061AD 004B6579            B   307    						db 0,"Key"				0061B1 00456E74 6572       B   308    						db 0,"Enter"			0061B7 9A454348 4F         B   309    						db 9ah,"ECHO"			                           B   310    				
0061BC 0052756E            B   311    						db 0,"Run"				0061C0 00536372 697074     B   312    						db 0,"Script"			0061C7 00594553            B   313    yes_txt					db 0,"YES" 				0061CB 00546F              B   314    						db 0,"To"				0061CE 00536574            B   315    						db 0,"Set"				0061D2 00436F6E 74696E75   B   316    						db 0,"Continue"			0061DA 65 
0061DB 004E6F6E 65         B   317    						db 0,"None"				0061E0 00447269 766572     B   318    						db 0,"Driver"			0061E7 9B3C                B   319    						db 9bh,"<"				0061E9 004E6577 6572       B   320    						db 0,"Newer"			0061EF 00526571 75697265   B   321    						db 0,"Required"			0061F7 64 
0061F8 00465047 4120636F   B   322    						db 0,"FPGA config"		006200 6E666967 
006204 00556E63 68616E67   B   323    						db 0,"Unchanged"		00620C 6564 
00620E 006C6F63 206C656E   B   324    						db 0,"loc len [per vol 
006216 205B7065 7220766F 
00621E 6C206368 616E7320 
006226 6C6F6F70 3F5D20 
00622D 003E3E55 6E757365   B   325    						db 0,">>Unused<<"		006235 643C3C 
006238 0070616C 65747465   B   326    						db 0,"palette"			                           B   327    						
006240 9D4D4F55 5345       B   328    						db 9dh,"MOUSE"			006246 00456E61 626C65     B   329    						db 0,"Enable"			00624D 004B6579 626F6172   B   330    						db 0,"Keyboard"			006255 64 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 255


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
006256 00446574 65637465   B   331    						db 0,"Detected"			00625E 64 
00625F 004D6F75 7365       B   332    						db 0,"Mouse"			006265 00536563 746F72     B   333    						db 0,"Sector"			00626C 00496E63 6F727265   B   334    						db 0,"Incorrect"		006274 6374 
006276 9E564D4F 4445       B   335    						db 9eh,"VMODE"			00627C 00566964 656F       B   336    						db 0,"Video"			006282 004D6F64 65         B   337    						db 0,"Mode"				006287 9F464F4E 54         B   338    						db 9fh,"FONT"			00628C 00416E64            B   339    						db 0,"And"				006290 00536176 696E67     B   340    						db 0,"Saving"			006297 00556E73 7570706F   B   341    						db 0,"Unsupported"		00629F 72746564 
0062A3 A0534554            B   342    						db 0a0h,"SET"			0062A7 005B7661 723D7374   B   343    						db 0,"[var=string]"		0062AF 72696E67 5D 
                           B   344    
0062B4 00456E76 6172       B   345    						db 0,"Envar"			0062BA A1445A              B   346    						db 0a1h,"DZ"			0062BD 0041444C            B   347    						db 0,"ADL"				0062C1 005A3830            B   348    						db 0,"Z80"				0062C5 00506C61 79         B   349    						db 0,"Play"				0062CA 00417564 696F       B   350    						db 0,"Audio"			0062D0 A2415641 494C       B   351    						db 0a2h,"AVAIL"			0062D6 00467265 65         B   352    						db 0,"Free"				0062DB 0043616E 6E6F74     B   353    						db 0,"Cannot"			0062E2 00416C6C 6F636174   B   354    						db 0,"Allocate"			0062EA 65 
0062EB 00416C6C 6F636174   B   355    						db 0,"Allocated"		0062F3 6564 
0062F5 A34649              B   356    						db 0a3h,"FI"			0062F8 00546578 74         B   357    						db 0,"Text"				                           B   358    						
0062FD 0001                B   359    						db 0,1					                           B   360    
                           B   361    
                           B   362    
                           B   363    
                           B   364    
0062FF 2199696A 5F916F92   B   365    save_append_msg			db 021h,099h,069h,06ah,
006307 9700 
006309 2F0A9300            B   366    os_loadaddress_msg 		db 02fh,00ah,093h,0		00630D 21649300            B   367    os_filesize_msg			db 021h,064h,093h,0		006311 94219700            B   368    ser_rec_msg				db 094h,021h,097h,0		006315 956F9897 00         B   369    ser_rec2_msg			db 095h,06fh,098h,097h,
00631A 966F9897 00         B   370    ser_send_msg			db 096h,06fh,098h,097h,
00631F 9521BBBC 989700     B   371    ser_recsave_msg			db 095h,021h,0bbh,0bch,
006326 A77C9097 00         B   372    hw_err_msg				db 0a7h,07ch,090h,097h,
00632B 607C00              B   373    disk_err_msg			db 060h,07ch,0			00632E A1779797 00         B   374    script_aborted_msg		db 0a1h,077h,097h,097h,
006333 76B2B397 00         B   375    no_keyboard_msg			db 076h,0b2h,0b3h,097h,
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 256


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   376    
006338 9700                B   377    packed_help1				db 097h,0
00633A 0100                B   378    							db 001h,0			00633C 0200                B   379    							db 002h,0			00633E 3307095F 4F500B00   B   380    							db 033h,007h,009h,0
006346 3407515F 4F1400     B   381    							db 034h,007h,051h,0
00634D 37070707 5F195000   B   382    							db 037h,007h,007h,0
006355 3B075FC2 1700       B   383    							db 03bh,007h,05fh,0
00635B C1075FC3 1700       B   384    							db 0c1h,007h,05fh,0
006361 3F070754 5F0E5000   B   385    							db 03fh,007h,007h,0
006369 42075F0F 0A00       B   386    							db 042h,007h,05fh,0
00636F 3E070709 5F0D5000   B   387    							db 03eh,007h,007h,0
006377 44075F10 500B00     B   388    							db 044h,007h,05fh,0
00637E 475F1011 1200       B   389    							db 047h,05fh,010h,0
006384 4C075F10 50131400   B   390    							db 04ch,007h,05fh,0
                           B   391    	
00638C 9700                B   392    							db 097h,0
00638E 0300                B   393    							db 003h,0			006390 0400                B   394    							db 004h,0			006392 38231E1D 5F1B601E   B   395    							db 038h,023h,01eh,0
00639A 1D00 
00639C 3C1F5F20 2100       B   396    							db 03ch,01fh,05fh,0
0063A2 3D5F101D 00         B   397    							db 03dh,05fh,010h,0
0063A7 CB1F5F21 2200       B   398    							db 0cbh,01fh,05fh,0
0063AD 411A995F 551C00     B   399    							db 041h,01ah,099h,0
0063B4 431F075F 2F2100     B   400    							db 043h,01fh,007h,0
0063BB 561D5F24 1D00       B   401    							db 056h,01dh,05fh,0
0063C1 455F2557 00         B   402    							db 045h,05fh,025h,0
0063C6 481D5F29 1D00       B   403    							db 048h,01dh,05fh,0
0063CC 4958595F 2A2100     B   404    							db 049h,058h,059h,0
0063D3 4A1F075F 2C2100     B   405    							db 04ah,01fh,007h,0
0063DA 4B1F075A 5F2D2100   B   406    							db 04bh,01fh,007h,0
0063E2 4D1F075A 5F2E2100   B   407    							db 04dh,01fh,007h,0
0063EA 235F1860 00         B   408    							db 023h,05fh,018h,0
                           B   409    
0063EF 9700                B   410    							db 097h,0
0063F1 0500                B   411    							db 005h,0			0063F3 0600                B   412    							db 006h,0			0063F5 C65F10C7 5000       B   413    							db 0c6h,05fh,010h,0
0063FB 395F1516 00         B   414    							db 039h,05fh,015h,0
006400 9F515F10 CC00       B   415    							db 09fh,051h,05fh,0
006406 BA1F5F1B 8200       B   416    							db 0bah,01fh,05fh,0
00640C B05FB1B0 A700       B   417    							db 0b0h,05fh,0b1h,0
006412 3A325F09 1B5B00     B   418    							db 03ah,032h,05fh,0
006419 BEBF5FA4 C000       B   419    							db 0beh,0bfh,05fh,0
00641F 35AD5FC4 5013C500   B   420    							db 035h,0adh,05fh,0
006427 4E5F1030 3100       B   421    							db 04eh,05fh,010h,0
00642D B7095F1B B8B900     B   422    							db 0b7h,09h,5fh,01b
006434 5C5F105D 00         B   423    							db 05ch,05fh,010h,0
006439 9700                B   424    							db 097h,0
00643B FF                  B   425    							db 0ffh
                           B   426    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 257


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   427    
                           B   428    
                           B   429    
00643C 891D00              B   430    os_cmd_locs					dw24 os_cmd_colon	00643F AE2C00              B   431    							dw24 os_cmd_gtr		006442 FB3400              B   432    							dw24 os_cmd_sound	006445 A41C00              B   433    							dw24 os_cmd_c		006448 111D00              B   434    							dw24 os_cmd_cd		00644B 831D00              B   435    							dw24 os_cmd_cls		00644E 6D3300              B   436    							dw24 os_cmd_pen		006451 A31D00              B   437    							dw24 os_cmd_d		                           B   438    					
006454 042900              B   439    							dw24 os_cmd_del		006457 192900              B   440    							dw24 os_cmd_dir		00645A DC2B00              B   441    							dw24 os_cmd_h		00645D 552A00              B   442    							dw24 os_cmd_f		006460 7D2A00              B   443    							dw24 os_cmd_format	006463 E22C00              B   444    							dw24 os_cmd_lb		006466 932D00              B   445    							dw24 os_cmd_m		006469 0C3300              B   446    							dw24 os_cmd_remount
                           B   447    
00646C EA2D00              B   448    							dw24 os_cmd_r		00646F 1B2F00              B   449    							dw24 os_cmd_rd		006472 282F00              B   450    							dw24 os_cmd_rn		006475 D32F00              B   451    							dw24 os_cmd_rx		006478 442F00              B   452    							dw24 os_cmd_sb		00647B B83200              B   453    							dw24 os_cmd_t		00647E 4C3200              B   454    							dw24 os_cmd_tx		006481 183300              B   455    							dw24 os_cmd_vers	                           B   456    							
006484 DD2D00              B   457    							dw24 os_cmd_md		006487 8A2C00              B   458    							dw24 os_cmd_help	00648A BA3700              B   459    							dw24 os_cmd_echo	00648D 6B3300              B   460    							dw24 os_cmd_ltn		006490 E73700              B   461    							dw24 os_cmd_unused	006493 913300              B   462    							dw24 os_cmd_mouse	006496 CD3300              B   463    							dw24 os_cmd_vmode	006499 DD3300              B   464    							dw24 os_cmd_font	                           B   465    							
00649C 6C3400              B   466    							dw24 os_cmd_set		00649F EE3400              B   467    							dw24 os_cmd_dz		0064A2 923500              B   468    							dw24 os_cmd_avail	0064A5 223600              B   469    							dw24 os_cmd_fi		                           B   470    							
                           B   471    								
0064A8 00                  B   472    packed_msg_list				db 0				                           B   473    		
0064A9 606100              B   474    							db 060h,061h,0		0064AC 21626300            B   475    							db 021h,062h,063h,0
0064B0 1D6100              B   476    							db 01dh,061h,0		0064B3 628C1D00            B   477    							db 062h,08ch,01dh,0
0064B7 1D8D628E 00         B   478    							db 01dh,08dh,062h,0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 258


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
0064BC 628C2100            B   479    							db 062h,08ch,021h,0
0064C0 21648D65 00         B   480    							db 021h,064h,08dh,0
0064C5 0A666768 00         B   481    							db 00ah,066h,067h,0
0064CA 2199696A 00         B   482    							db 021h,099h,069h,0
0064CF 696B6C00            B   483    							db 069h,06bh,06ch,0
                           B   484    					
0064D3 727300              B   485    							db 072h,073h,0		0064D6 877500              B   486    							db 087h,075h,0		0064D9 76219900            B   487    							db 076h,021h,099h,0
                           B   488    					
0064DD 87B500              B   489    							db 087h,0b5h,0		0064E0 797400              B   490    							db 079h,074h,0		0064E3 9A7A00              B   491    bytes_loaded_msg			db 09ah,07ah,0		0064E6 7B7C00              B   492    							db 07bh,07ch,0		0064E9 747D00              B   493    							db 074h,07dh,0		                           B   494    
0064EC 627F00              B   495    format_err_msg				db 062h,07fh,0		                           B   496    
0064EF 816600              B   497    							db 081h,066h,0		0064F2 21998384 00         B   498    							db 021h,099h,083h,0
0064F7 76260A00            B   499    							db 076h,026h,00ah,0
0064FB 76216400            B   500    							db 076h,021h,064h,0
0064FF 2D7700              B   501    							db 02dh,077h,0		006502 2D7C6B85 00         B   502    							db 02dh,07ch,06bh,0
006507 628C080C 00         B   503    							db 062h,08ch,08h,0c
00650C A9316708 AA00       B   504    							db 0a9h,031h,067h,0
006512 768F0A00            B   505    							db 076h,08fh,00ah,0
006516 76850A00            B   506    							db 076h,085h,00ah,0
                           B   507    					
00651A 746800              B   508    							db 074h,068h,0		00651D 887D00              B   509    							db 088h,07dh,0		006520 8900                B   510    ok_msg						db 089h,0			                           B   511    					
006522 876000              B   512    							db 087h,060h,0		006525 1A627800            B   513    							db 01ah,062h,078h,0
                           B   514    					
006529 1D626300            B   515    							db 01dh,062h,063h,0
00652D 7700                B   516    							db 077h,0			                           B   517    					
00652F 21996D00            B   518    							db 021h,099h,06dh,0
006533 8A508B00            B   519    							db 08ah,050h,08bh,0
006537 6F71706E 00         B   520    							db 06fh,071h,070h,0
00653C 763600              B   521    no_vols_msg					db 076h,036h,0		00653F 97A66300            B   522    none_found_msg				db 097h,0a6h,063h,0
                           B   523    							
006543 B62100              B   524    							db 0b6h,021h,0		006546 A9316708 AA00       B   525    							db 0a9h,031h,067h,0
00654C 21AC00              B   526    							db 021h,0ach,0		                           B   527    							
00654F 766F00              B   528    							db 076h,06fh,0		006552 746F00              B   529    							db 074h,06fh,0		006555 66676800            B   530    							db 066h,067h,068h,0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 259


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
006559 BD1A00              B   531    							db 0bdh,01ah,0		00655C 1A62B300            B   532    							db 01ah,062h,0b3h,0
006560 1A7C00              B   533    							db 01ah,07ch,0		006563 817C00              B   534    							db 081h,07ch,0		006566 C8C95000            B   535    							db 0c8h,0c9h,050h,0
00656A CA508B00            B   536    							db 0cah,050h,08bh,0
00656E B8508B00            B   537    							db 0b8h,050h,08bh,0
                           B   538    							
006572 FF                  B   539    							db 0ffh				                           B   540    
                           B   541    ;----------------------------------------------
                           B   542    
006573                     B   543    kernal_error_code_translation
                           B   544    
006573 242D2E14 08110F2A   B   545    					db 24h,2dh,2eh,14h, 08h,11h
00657B 2F303132 331F34 
                           B   546    					
006582                     B   547    fs_error_code_translation
                           B   548    
006582 00010203 04050607   B   549    					db 00h,01h,02h,03h, 04h,05h
00658A 08090A23 270D1321 
006592 22232425 260E0000   B   550    					db 22h,23h,24h,25h, 26h,0eh
                           B   551    
                           B   552    
                           B   553    ;----------------------------------------------
                           B   554    ; Scancode to ASCII keymaps
                           B   555    ;----------------------------------------------
                           B   556    
                           C     0    include	'UK_keymap.asm'
00659A                     C     1    keymap:
00659A 00000000 00000000   C     2                    db 000h,000h,000h,000h,000h,000
0065A2 00000000 00006000 
0065AA 00000000 00713100   C     3                    db 000h,000h,000h,000h,000h,071
0065B2 00007A73 61773200 
0065BA 00637864 65343300   C     4                    db 000h,063h,078h,064h,065h,034
0065C2 00207666 74723500 
0065CA 006E6268 67793600   C     5                    db 000h,06Eh,062h,068h,067h,079
0065D2 00006D6A 75373800 
0065DA 002C6B69 6F303900   C     6                    db 000h,02Ch,06Bh,069h,06Fh,030
0065E2 002E2F6C 3B702D00 
0065EA 00002700 5B3D0000   C     7                    db 000h,000h,027h,000h,05Bh,03D
0065F2 0000005D 00230000 
0065FA 005C0000 00000000   C     8                    db 000h,05Ch,000h,000h,000h,000
006602 00000000 00000000 
00660A AC000000 00000051   C     9                    db 0ACh,000h,000h,000h,000h,000
006612 21000000 5A534157 
00661A 22000043 58444524   C    10                    db 022h,000h,000h,043h,058h,044
006622 A3000020 56465452 
00662A 2500004E 42484759   C    11                    db 025h,000h,000h,04Eh,042h,048
006632 5E000000 4D4A5526 
00663A 2A00003C 4B494F29   C    12                    db 02Ah,000h,000h,03Ch,04Bh,049
006642 2800003E 3F4C3A50 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 260


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\UK_keymap.asm
00664A 5F000000 40007B2B   C    13                    db 05Fh,000h,000h,000h,040h,000
006652 00000000 007D007E 
00665A 0000007C 00000000   C    14                    db 000h,000h,000h,07Ch,000h,000
006662 00000000 00000000 
00666A 00000000 00000000   C    15                    db 000h,000h,000h,000h,000h,000
006672 00000000 00000000 
00667A 00000000 00000000   C    16                    db 000h,000h,000h,000h,000h,000
006682 00000000 00000000 
00668A 00000000 00000000   C    17                    db 000h,000h,000h,000h,000h,000
006692 00000000 00000000 
00669A 00000000 00000000   C    18                    db 000h,000h,000h,000h,000h,000
0066A2 00000000 00000000 
0066AA 00000000 00000000   C    19                    db 000h,000h,000h,000h,000h,000
0066B2 00000000 00000000 
0066BA 00000000 0000       C    20                    db 000h,000h,000h,000h,000h,000
                           B   558    
       0000659A            B   559    unshifted_keymap equ keymap+00h
       000065FC            B   560    shifted_keymap   equ keymap+62h
       0000665E            B   561    alted_keymap	 equ keymap+c4h
                           B   562    	
                           B   563    ;----------------------------------------------
                           B   564    
0066C0 00                  B   565    ui_index				db 0				; u
0066C1 00                  B   566    ui_maxchars				db 0				; "
0066C2 000000              B   567    ui_string_addr			dw24 0				; "
                           B   568    
                           B   569    ;----------------------------------------------
                           B   570    ; OS Display parameters
                           B   571    ;----------------------------------------------
                           B   572    
0066C5 00                  B   573    video_mode				db 0
0066C6 0700                B   574    current_pen				dw 07h				; C
0066C8 0000                B   575    background_colour		dw 00h				; F
                           B   576    
0066CA 00000F00 000F0F0F   B   577    pen_palette				dw 0000h,000fh,0f00h,0f
0066D2 F000FF00 F00FFF0F 
0066DA 55059909 CC0C710F   B   578    						dw 0555h,0999h,0ccch,0f
0066E2 7F00F80D 4008880F 
                           B   579    
0066EA 00                  B   580    plotchar_colour			db 0				; c
                           B   581    
0066EB 00                  B   582    char_under_cursor		db 0			
0066EC 00                  B   583    cursor_present			db 0				; 1
0066ED 00                  B   584    overwrite_mode			db 0
0066EE 00                  B   585    cursor_image_char		db 0
                           B   586    
                           B   587    ;----------------------------------------------
                           B   588    
0066EF                     B   589    display_parameters
                           B   590    
0066EF 00                  B   591    video_doubling			db 0
0066F0 000000              B   592    charmap_rows			dw24 0					Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 261


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
0066F3 000000              B   593    charmap_columns			dw24 0				
                           B   594    
                           B   595    ;----------------------------------------------
                           B   596    
0066F6                     B   597    vmode_parameter_list
                           B   598    
0066F6 00503C              B   599    				db 00b, 80,60	; vmode 0 (vide
0066F9 01501E              B   600    				db 01b, 80,30	; vmode 1
0066FC 02283C              B   601    				db 10b, 40,60	; vmode 2	
0066FF 03281E              B   602    				db 11b, 40,30	; vmode 3
                           B   603    				
                           B   604    ;==============================================
                           B   605    ;  Serial Routine Data
                           B   606    ;==============================================
                           B   607    
006702 000000              B   608    serial_ez80_address		dw24 0
006705 000000              B   609    serial_file_length		dw24 0
006708 000000              B   610    serial_fn_addr			dw24 0
00670B 00 00 00 00 00 00   B   611    serial_filename			blkb 18,0		
006711 00 00 00 00 00 00 
006717 00 00 00 00 00 00 
00671D 00                  B   612    serial_fn_length		db 0
00671E 00                  B   613    serial_timeout			db 0
                           B   614    
00671F 00 00 00 00 00 00   B   615    serial_fileheader		blkb 20,0
006725 00 00 00 00 00 00 
00672B 00 00 00 00 00 00 
006731 00 00 
006733 5A383050 2E464845   B   616    serial_header_id		db "Z80P.FHEADER"		00673B 41444552 
00673F 00                  B   617    serial_transfer_started	db 0
                           B   618    
006740 00                  B   619    anim_wait_count			db 0
                           B   620    
                           B   621    ;==============================================
                           B   622    
006741 F3C8                B   623    intellimouse_seq	db 0f3h,200
006743 F364                B   624    					db 0f3h,100
006745 F350                B   625    					db 0f3h,80
                           B   626    
006747 E803                B   627    mouse_settings_seq	db 0e8h,default_resolution
006749 E6                  B   628    					db default_scaling
00674A F364                B   629    					db 0f3h,default_sample_rate
00674C F4                  B   630    					db 0f4h
                           B   631    					
                           B   632    ;----------------------------------------------
                           B   633    ; FILE SYSTEM RELATED VARIABLES
                           B   634    ;----------------------------------------------
                           B   635    
00674D 00                  B   636    boot_drive			db 0
                           B   637    
00674E 00                  B   638    current_volume		db 0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 262


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   639    	
00674F 00                  B   640    current_driver		db 0			;normally u
                           B   641    
006750 00                  B   642    device_count		db 0			;IE: the nu
                           B   643    
006751 00                  B   644    volume_count		db 0
                           B   645    				
006752 20564F4C 303A00     B   646    vol_txt				db " VOL0:",0	;space pref
006759 44455630 3A00       B   647    dev_txt				db "DEV0:",0
                           B   648    
00675F 000000              B   649    sector_rd_wr_addr	dw24 0
                           B   650    
                           B   651    
                           B   652    ;==============================================
                           B   653    
006762                     B   654    volume_dir_clusters
                           B   655    
006762 00 00 00 00 00 00   B   656    					blkb max_volumes*3,0
006768 00 00 00 00 00 00 
00676E 00 00 00 00 00 00 
006774 00 00 00 00 00 00 
                           B   657    	
00677A                     B   658    volume_mount_list
                           B   659    
00677A 00 00 00 00 00 00   B   660    					blkb max_volumes*16,0
006780 00 00 00 00 00 00 
006786 00 00 00 00 00 00 
00678C 00 00 00 00 00 00 
006792 00 00 00 00 00 00 
006798 00 00 00 00 00 00 
00679E 00 00 00 00 00 00 
0067A4 00 00 00 00 00 00 
0067AA 00 00 00 00 00 00 
0067B0 00 00 00 00 00 00 
0067B6 00 00 00 00 00 00 
0067BC 00 00 00 00 00 00 
0067C2 00 00 00 00 00 00 
0067C8 00 00 00 00 00 00 
0067CE 00 00 00 00 00 00 
0067D4 00 00 00 00 00 00 
0067DA 00 00 00 00 00 00 
0067E0 00 00 00 00 00 00 
0067E6 00 00 00 00 00 00 
0067EC 00 00 00 00 00 00 
0067F2 00 00 00 00 00 00 
0067F8 00 00 
                           B   661    
                           B   662    ; Each entry is 16 bytes in the form:
                           B   663    
                           B   664    ; OFFSETS
                           B   665    ; -------
                           B   666    ; $00 - Volume is present (0/1)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 263


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   667    ; $01 - Volume's host driver number (1 byte)	                           B   668    ; $02 - [reserved]
                           B   669    ; $03 - [reserved]
                           B   670    ; $04 - Volume's capacity in sectors (3 bytes)
                           B   671    ; $07 - Partition number on host drive (0/1/2/3
                           B   672    ; $08 - Offset in sectors from MBR to partition
                           B   673    ; $0c - [reserved]
                           B   674    ; $0d - [reserved]	
                           B   675    ; $0e - [reserved]
                           B   676    ; $0f - [reserved]
                           B   677    
                           B   678    ;==============================================
                           B   679    
0067FA                     B   680    host_device_hardware_info
                           B   681    
0067FA 00 00 00 00 00 00   B   682    					blkb 32*4,0
006800 00 00 00 00 00 00 
006806 00 00 00 00 00 00 
00680C 00 00 00 00 00 00 
006812 00 00 00 00 00 00 
006818 00 00 00 00 00 00 
00681E 00 00 00 00 00 00 
006824 00 00 00 00 00 00 
00682A 00 00 00 00 00 00 
006830 00 00 00 00 00 00 
006836 00 00 00 00 00 00 
00683C 00 00 00 00 00 00 
006842 00 00 00 00 00 00 
006848 00 00 00 00 00 00 
00684E 00 00 00 00 00 00 
006854 00 00 00 00 00 00 
00685A 00 00 00 00 00 00 
006860 00 00 00 00 00 00 
006866 00 00 00 00 00 00 
00686C 00 00 00 00 00 00 
006872 00 00 00 00 00 00 
006878 00 00 
                           B   683    
                           B   684    ; Each entry is 32 bytes..
                           B   685    ;
                           B   686    ; OFFSETS
                           B   687    ; -------
                           B   688    ; $00 - Device driver number
                           B   689    ; $01 - Device's TOTAL capacity in sectors (4 b
                           B   690    ; $05 - Zero terminated hardware name (22 ASCII
                           B   691    ; (remaining bytes to $1F currently unused)
                           B   692    
                           B   693    ;----------------------------------------------
                           B   694    
00687A 000000              B   695    dhwn_temp_pointer		dw24 0
                           B   696    
00687D 00                  B   697    partition_temp			db 0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 264


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
00687E 00                  B   698    vols_on_device_temp		db 0
00687F 00                  B   699    sys_driver_backup		db 0
006880 00                  B   700    os_quiet_mode			db 0
                           B   701    
                           B   702    ;----------------------------------------------
                           B   703    
006881 00 00 00 00 00 00   B   704    time_data				blkb	7,0
006887 00 
                           B   705    
006888 00                  B   706    frozen					db 0
006889 01                  B   707    first_run				db 1
00688A 01                  B   708    devices_connected		db 1					                           B   709    
                           B   710    ;----------------------------------------------
                           B   711    
00688B 546F00              B   712    free_sysram_base		dw24 os_max_addr
00688E FFFF07              B   713    free_sysram_top			dw24 sysram_addr+sysram
                           B   714    
006891 000080              B   715    free_vram_a_base		dw24 vram_a_addr
006894 FFFF87              B   716    free_vram_a_top			dw24 vram_a_addr+7ffffh
                           B   717    
006897 0000C0              B   718    free_vram_b_base		dw24 vram_b_addr
00689A FFFFC7              B   719    free_vram_b_top			dw24 vram_b_addr+7ffffh
                           B   720    
00689D 000000              B   721    charmap_size			dw24 0
                           B   722    
                           B   723    ;----------------------------------------------
                           B   724    
0068A0 000000              B   725    milliseconds_counter	dw24 0
0068A3 000000              B   726    seconds_counter			dw24 0
                           B   727    
                           B   728    ;----------------------------------------------
                           B   729    
0068A6 00                  B   730    store_a1				db 0		
0068A7 000000              B   731    store_bc1				dw24 0
0068AA 000000              B   732    store_de1				dw24 0
0068AD 000000              B   733    store_hl1				dw24 0
0068B0 00                  B   734    store_a2				db 0
0068B1 000000              B   735    store_bc2				dw24 0
0068B4 000000              B   736    store_de2				dw24 0
0068B7 000000              B   737    store_hl2				dw24 0
0068BA 000000              B   738    store_ix				dw24 0
0068BD 000000              B   739    store_iy				dw24 0
0068C0 000000              B   740    store_pc				dw24 0		;only relev
0068C3 000000              B   741    store_spl				dw24 0
0068C6 0000                B   742    store_sps				dw 0
0068C8 00                  B   743    store_mbase				db 0
0068C9 00                  B   744    store_f	 				db 0
0068CA 00                  B   745    store_adl				db 0
                           B   746    
                           B   747    ;----------------------------------------------
0068CB                     B   748    os_variables
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 265


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   749    ;----------------------------------------------
                           B   750    
0068CB 000000              B   751    kernal_ix_cache			dw24 0
                           B   752    
0068CE 00                  B   753    store_registers			db 0
0068CF 000000              B   754    com_start_addr			dw24 0
                           B   755    
0068D2 00 00 00 00 00 00   B   756    temp_string				blkb max_buffer_chars+2
0068D8 00 00 00 00 00 00 
0068DE 00 00 00 00 00 00 
0068E4 00 00 00 00 00 00 
0068EA 00 00 00 00 00 00 
0068F0 00 00 00 00 00 00 
0068F6 00 00 00 00 00 00 
0068FC 00 00 00 00 00 00 
006902 00 00 00 00 00 00 
006908 00 00 00 00 00 00 
00690E 00 00 00 00 00 00 
006914 00 00 00 00 00 00 
00691A 00 00 00 00 00 00 
006920 00 00 00 00 
006924 00 00 00 00 00 00   B   757    script_fn				blkb 13,0
00692A 00 00 00 00 00 00 
006930 00 
                           B   758    
006931 00                  B   759    sector_lba0				db 0			; keep 
006932 00                  B   760    sector_lba1				db 0
006933 00                  B   761    sector_lba2				db 0
006934 00                  B   762    sector_lba3				db 0
                           B   763    
                           B   764    ;----------------------------------------------
                           B   765    
006935 000000              B   766    cursor_pos				dw24 0			; 3rd b
                           B   767    
       00006935            B   768    cursor_y 				equ cursor_pos
       00006936            B   769    cursor_x 				equ cursor_pos+1
                           B   770    						
006938 00                  B   771    cursorflashtimer		db 0
006939 00                  B   772    cursor_status			db 0
00693A 00                  B   773    os_linecount			db 0
                           B   774    		
00693B 000000              B   775    mem_mon_addr			dw24 0
00693E 000000              B   776    cmdop_start_address		dw24 0
006941 000000              B   777    cmdop_end_address		dw24 0
006944 000000              B   778    copy_dest_address		dw24 0
006947 000000              B   779    hex_address				dw24 0
                           B   780    
00694A 000000              B   781    find_hexstringascii 	dw24 0
00694D 000000              B   782    xrr_temp				dw24 0
006950 00                  B   783    temphex					db 0
006951 00                  B   784    fillbyte				db 0 
006952 00                  B   785    ui_im_cache				db 0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 266


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   786    
006953 00 00 00 00 00 00   B   787    commandstring			blkb max_buffer_chars+2
006959 00 00 00 00 00 00 
00695F 00 00 00 00 00 00 
006965 00 00 00 00 00 00 
00696B 00 00 00 00 00 00 
006971 00 00 00 00 00 00 
006977 00 00 00 00 00 00 
00697D 00 00 00 00 00 00 
006983 00 00 00 00 00 00 
006989 00 00 00 00 00 00 
00698F 00 00 00 00 00 00 
006995 00 00 00 00 00 00 
00699B 00 00 00 00 00 00 
0069A1 00 00 00 00 
0069A5 00 00 00 00 00 00   B   788    output_line				blkb max_buffer_chars+2
0069AB 00 00 00 00 00 00 
0069B1 00 00 00 00 00 00 
0069B7 00 00 00 00 00 00 
0069BD 00 00 00 00 00 00 
0069C3 00 00 00 00 00 00 
0069C9 00 00 00 00 00 00 
0069CF 00 00 00 00 00 00 
0069D5 00 00 00 00 00 00 
0069DB 00 00 00 00 00 00 
0069E1 00 00 00 00 00 00 
0069E7 00 00 00 00 00 00 
0069ED 00 00 00 00 00 00 
0069F3 00 00 00 00 
                           B   789    				
0069F7 000000              B   790    os_args_loc				dw24 0
0069FA 000000              B   791    os_args_pos_cache		dw24 0
                           B   792    
0069FD 000000              B   793    os_dir_block_cache  	dw24 0
006A00 000000              B   794    os_extcmd_jmp_addr		dw24 0
                           B   795    
                           B   796    
006A03 000000              B   797    script_dir				dw24 0
006A06 000000              B   798    script_file_offset		dw24 0
006A09 000000              B   799    script_length			dw24 0
                           B   800    
006A0C 00                  B   801    script_flags			db 0
                           B   802    
006A0D 000000              B   803    path_parse_loc			dw24 0
                           B   804    
006A10 000000              B   805    original_dir			dw24 0 
006A13 00                  B   806    original_vol		 	db 0
                           B   807    		
006A14 00 00 00 00 00 00   B   808    if_name_txt				blkb max_if_chars+2,0
006A1A 00 00 00 00 00 00 
006A20 00 00 00 00 00 00 
006A26 00 00 00 00 00 00   B   809    if_value_txt			blkb max_if_chars+2,0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 267


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
006A2C 00 00 00 00 00 00 
006A32 00 00 00 00 00 00 
006A38 00 00 00 00 00 00   B   810    if_label_txt			blkb max_if_chars+2,0
006A3E 00 00 00 00 00 00 
006A44 00 00 00 00 00 00 
                           B   811    
                           B   812    
006A4A 0000                B   813    char_to_print			db 0,0	; zero terminat
                           B   814    
                           B   815    ;----------------------------------------------
                           B   816    ; Keyboard buffer and registers
                           B   817    ;----------------------------------------------
                           B   818    
006A4C 00 00 00 00 00 00   B   819    scancode_buffer			blkb 32,0
006A52 00 00 00 00 00 00 
006A58 00 00 00 00 00 00 
006A5E 00 00 00 00 00 00 
006A64 00 00 00 00 00 00 
006A6A 00 00 
                           B   820    
006A6C 00                  B   821    key_buf_wr_idx			db 0
006A6D 00                  B   822    key_buf_rd_idx			db 0
006A6E 00                  B   823    key_release_mode		db 0		
006A6F 00                  B   824    not_currently_used		db 0
006A70 00                  B   825    key_mod_flags			db 0
006A71 00                  B   826    current_scancode		db 0
006A72 00                  B   827    current_asciicode		db 0
                           B   828    
                           B   829    ;----------------------------------------------
                           B   830    ; Mouse related registers
                           B   831    ;----------------------------------------------
                           B   832    
006A73 00                  B   833    mouse_id				db 0
006A74 00                  B   834    mouse_packet_size		db 0
                           B   835    
006A75 00 00 00 00         B   836    mouse_packet			blkb 4,0			; t
006A79 00                  B   837    mouse_packet_index		db 0				;
006A7A 00                  B   838    mouse_buttons			db 0				;
006A7B 000000              B   839    mouse_disp_x			dw24 0				; c
006A7E 000000              B   840    mouse_disp_y			dw24 0				; c
006A81 00                  B   841    mouse_wheel				db 0				; m
006A82 00                  B   842    mouse_updated			db 0
                           B   843    
006A83 000000              B   844    mouse_window_size_x		dw24 0				; t
006A86 000000              B   845    mouse_window_size_y		dw24 0
006A89 000000              B   846    mouse_abs_x				dw24 0
006A8C 000000              B   847    mouse_abs_y				dw24 0
006A8F 000000              B   848    mouse_disp_x_old		dw24 0
006A92 000000              B   849    mouse_disp_y_old		dw24 0
006A95 000000              B   850    mouse_disp_x_buffer		dw24 0
006A98 000000              B   851    mouse_disp_y_buffer		dw24 0
006A9B 00                  B   852    mouse_new_window		db 0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 268


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   853    
006A9C 00                  B   854    os_pointer_enable		db 0
006A9D 000000              B   855    os_pointer_definition	dw24 0				
006AA0 000000              B   856    os_pointer_height		dw24 0
006AA3 00                  B   857    os_pointer_palette		db 0
                           B   858    
                           B   859    ;----------------------------------------------
       00006935            B   860    first_os_var			equ cursor_y
006AA4 00                  B   861    last_os_var				db 0
                           B   862    ;----------------------------------------------
                           B   863    
                           B   864    ;==============================================
                           B   865    ; Environment variables
                           B   866    ;==============================================
                           B   867    
006AA5 4552524F 523D3030   B   868    envar_list				db "ERROR=00",0
006AAD 00 
006AAE 50415448 3D434F4D   B   869    						db "PATH=COMMANDS",0
006AB6 4D414E44 5300 
006ABC FF                  B   870    first_ext_ev_entry		db 0ffh
006ABD 00 00 00 00 00 00   B   871    						blkb envar_buffer_size,
006AC3 00 00 00 00 00 00 
006AC9 00 00 00 00 00 00 
006ACF 00 00 00 00 00 00 
006AD5 00 00 00 00 00 00 
006ADB 00 00 00 00 00 00 
006AE1 00 00 00 00 00 00 
006AE7 00 00 00 00 00 00 
006AED 00 00 00 00 00 00 
006AF3 00 00 00 00 00 00 
006AF9 00 00 00 00 00 00 
006AFF 00 00 00 00 00 00 
006B05 00 00 00 00 00 00 
006B0B 00 00 00 00 00 00 
006B11 00 00 00 00 00 00 
006B17 00 00 00 00 00 00 
006B1D 00 00 00 00 00 00 
006B23 00 00 00 00 00 00 
006B29 00 00 00 00 00 00 
006B2F 00 00 00 00 00 00 
006B35 00 00 00 00 00 00 
006B3B 00 00 00 00 00 00 
006B41 00 00 00 00 00 00 
006B47 00 00 00 00 00 00 
006B4D 00 00 00 00 00 00 
006B53 00 00 00 00 00 00 
006B59 00 00 00 00 00 00 
006B5F 00 00 00 00 00 00 
006B65 00 00 00 00 00 00 
006B6B 00 00 00 00 00 00 
006B71 00 00 00 00 00 00 
006B77 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 269


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
006B7D 00 00 00 00 00 00 
006B83 00 00 00 00 00 00 
006B89 00 00 00 00 00 00 
006B8F 00 00 00 00 00 00 
006B95 00 00 00 00 00 00 
006B9B 00 00 00 00 00 00 
006BA1 00 00 00 00 00 00 
006BA7 00 00 00 00 00 00 
006BAD 00 00 00 00 00 00 
006BB3 00 00 00 00 00 00 
006BB9 00 00 00 00 
                           B   872    
006BBD BC6A00              B   873    envar_top_loc			dw24 first_ext_ev_entry
                           B   874    
                           B   875    ;==============================================
                           B   876    
                           B     0    	include		'phil_font_packed.asm'			006BC0                     B     1    packed_font_start
006BC0 010100FF 01000918   B     2    				db 001h,001h,000h,0FFh,001h,000
006BC8 3C3C1800 181800EE 
006BD0 EE660100 056C6CFE   B     3                    db 0EEh,066h,001h,000h,005h,06C
006BD8 6CFE6C6C 00187EE0 
006BE0 7C0EFC18 00C6CE1C   B     4                    db 07Ch,00Eh,0FCh,018h,000h,0C6
006BE8 3870E6C6 0078ECEC 
006BF0 78EDEE7D 000C1C18   B     5                    db 078h,0EDh,0EEh,07Dh,000h,00C
006BF8 01000518 30016003 
006C00 30180030 18010C03   B     6                    db 030h,018h,000h,030h,018h,001
006C08 18300010 5438FE38 
006C10 54100000 18187E18   B     7                    db 054h,010h,000h,000h,018h,018
006C18 18010007 38387001 
006C20 00037E01 00091818   B     8                    db 000h,003h,07Eh,001h,000h,009
006C28 0000060E 1C3870E0 
006C30 007CE6EE FEF6E67C   B     9                    db 000h,07Ch,0E6h,0EEh,0FEh,0F6
006C38 00387801 38047C00 
006C40 7CEE0E7C E0E0FE00   B    10                    db 07Ch,0EEh,00Eh,07Ch,0E0h,0E0
006C48 FE0C180C 0ECE7C00 
006C50 1E3E76E6 FF060600   B    11                    db 01Eh,03Eh,076h,0E6h,0FFh,006
006C58 FEE0FC01 0E03FC00 
006C60 7EE0FC01 E6037C00   B    12                    db 07Eh,0E0h,0FCh,001h,0E6h,003
006C68 FE060C18 01380300 
006C70 7CE6E67C E6E67C00   B    13                    db 07Ch,0E6h,0E6h,07Ch,0E6h,0E6
006C78 7C01CE03 7E0E7C01 
006C80 00031818 00181801   B    14                    db 000h,003h,018h,018h,000h,018
006C88 00033030 00303060 
006C90 0E1C3870 381C0E01   B    15                    db 00Eh,01Ch,038h,070h,038h,01C
006C98 00037E00 7E010003 
006CA0 70381C0E 1C387000   B    16                    db 070h,038h,01Ch,00Eh,01Ch,038
006CA8 7CEE0E3C 38003800 
006CB0 7CE601EE 03E07C00   B    17                    db 07Ch,0E6h,001h,0EEh,003h,0E0
006CB8 7CE6E6FE 01E60300 
006CC0 FCE6E6FC E6E6FC00   B    18                    db 0FCh,0E6h,0E6h,0FCh,0E6h,0E6
006CC8 7CE601E0 03E67C00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 270


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\phil_font_packed.asm
006CD0 FC01E605 FC00FEE0   B    19                    db 0FCh,001h,0E6h,005h,0FCh,000
006CD8 E0F8E0E0 FE00FEE0 
006CE0 E0F801E0 03007CE6   B    20                    db 0E0h,0F8h,001h,0E0h,003h,000
006CE8 E0EEE6E6 7C0001E6 
006CF0 03FE01E6 03007C01   B    21                    db 003h,0FEh,001h,0E6h,003h,000
006CF8 38057C00 7E011C04 
006D00 DC7800E6 ECF8EC01   B    22                    db 0DCh,078h,000h,0E6h,0ECh,0F8
006D08 E6030001 E006FE00 
006D10 C6EEFED6 01C60300   B    23                    db 0C6h,0EEh,0FEh,0D6h,001h,0C6
006D18 E6F6FEFE EEE6E600 
006D20 7C01E605 7C00FC01   B    24                    db 07Ch,001h,0E6h,005h,07Ch,000
006D28 E603FCE0 E0007C01 
006D30 E603EAEC 7600FC01   B    25                    db 0E6h,003h,0EAh,0ECh,076h,000
006D38 E603FCE6 E6007CEE 
006D40 E07C0EEE 7C00FE01   B    26                    db 0E0h,07Ch,00Eh,0EEh,07Ch,000
006D48 38060001 E6067C00 
006D50 01E60574 380001C6   B    27                    db 001h,0E6h,005h,074h,038h,000
006D58 04D6FE6C 00E6E66C 
006D60 3874E6E6 0001E604   B    28                    db 038h,074h,0E6h,0E6h,000h,001
006D68 7E06FC00 FE0E1C38 
006D70 70E0FE00 3C013005   B    29                    db 070h,0E0h,0FEh,000h,03Ch,001
006D78 3C00C0E0 70381C0E 
006D80 06007801 18057800   B    30                    db 006h,000h,078h,001h,018h,005
006D88 10386CC6 01000BFE 
006D90 381C0100 087C067E   B    31                    db 038h,01Ch,001h,000h,008h,07C
006D98 E67E0000 E0E0FCE6 
006DA0 E6FC0100 037C01E0   B    32                    db 0E6h,0FCh,001h,000h,003h,07C
006DA8 037C0000 06067EE6 
006DB0 E67E0100 037CE6FE   B    33                    db 0E6h,07Eh,001h,000h,003h,07C
006DB8 E07C0000 3E70FC01 
006DC0 70030100 037EE6E6   B    34                    db 070h,003h,001h,000h,003h,07E
006DC8 7E067C00 E0E0FC01 
006DD0 E6030000 38007838   B    35                    db 0E6h,003h,000h,000h,038h,000
006DD8 387C0000 1C00011C 
006DE0 047800E0 EEECF8EC   B    36                    db 004h,078h,000h,0E0h,0EEh,0EC
006DE8 EE000078 0138047C 
006DF0 010003EC FED6C6C6   B    37                    db 001h,000h,003h,0ECh,0FEh,0D6
006DF8 010003FC 01E60401 
006E00 00037C01 E6037C01   B    38                    db 000h,003h,07Ch,001h,0E6h,003
006E08 0003FCE6 E6FCE0E0 
006E10 00007EE6 E67E0606   B    39                    db 000h,000h,07Eh,0E6h,0E6h,07E
006E18 0000DCE6 01E00301 
006E20 00037EF0 7C1EFC00   B    40                    db 000h,003h,07Eh,0F0h,07Ch,01E
006E28 00387E01 38031E01 
006E30 000301E6 047E0100   B    41                    db 000h,003h,001h,0E6h,004h,07E
006E38 0301E603 6C380100 
006E40 03E2EAFE 7C340100   B    42                    db 003h,0E2h,0EAh,0FEh,07Ch,034
006E48 03E67C38 7CE60100 
006E50 0301E603 7E0CF800   B    43                    db 003h,001h,0E6h,003h,07Eh,00C
006E58 00FE1C38 70FE003C 
006E60 30306030 303C0001   B    44                    db 030h,030h,060h,030h,030h,03C
006E68 18070078 18180C18 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 271


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\phil_font_packed.asm
006E70 18780033 7ECC0100   B    45                    db 018h,078h,000h,033h,07Eh,0CC
006E78 0501FE07 0100FF01 
006E80 001A1C3A 70FC70F2   B    46                    db 000h,01Ah,01Ch,03Ah,070h,0FC
006E88 BC010029 7CC6BAA2 
006E90 BAC67C01 00147E06   B    47                    db 0BAh,0C6h,07Ch,001h,000h,014
006E98 060100FF 0100FF01 
006EA0 009C                B    48                    db 000h,09Ch
006EA2                     B    49    packed_font_end
                           A  3764    
                           A  3765    
       00000014            A  3766    default_pointer_height equ 20
                           A  3767    
                           B     0    	include		'default_pointer_packed.asm'	006EA2                     B     1    default_pointer:
006EA2 03010103 000E0301   B     2                    db 003h,001h,001h,003h,000h,00E
006EAA 0303000D 01020101 
006EB2 03000C01 02020101   B     3                    db 003h,000h,00Ch,001h,002h,002
006EBA 03000B01 03020301 
006EC2 0103000A 01030204   B     4                    db 001h,003h,000h,00Ah,001h,003
006ECA 01010300 09010302 
006ED2 05010103 00080103   B     5                    db 005h,001h,001h,003h,000h,008
006EDA 02060101 03000701 
006EE2 03020701 01030006   B     6                    db 003h,002h,007h,001h,001h,003
006EEA 01030208 01010300 
006EF2 05010302 09010103   B     7                    db 005h,001h,003h,002h,009h,001
006EFA 00040103 020A0101 
006F02 03000301 03020603   B     8                    db 003h,000h,003h,001h,003h,002
006F0A 01060300 03010302 
006F12 03010202 01010300   B     9                    db 003h,001h,002h,002h,001h,001
006F1A 07010202 01000102 
006F22 02010300 07010201   B    10                    db 002h,001h,003h,000h,007h,001
006F2A 00000102 02010103 
006F32 00060101 03000401   B    11                    db 000h,006h,001h,001h,003h,000
006F3A 02020103 000C0102 
006F42 02010103 000C0301   B    12                    db 002h,001h,001h,003h,000h,00C
006F4A 04030015 
                           A  3769    
006F4E 0102                A  3770    default_pointer_colours	db 1,2					006F50 0000FF0F            A  3771    						dw 000h,0fffh
                           A  3772    
                           A  3773    ;==============================================
                           A  3774    	
006F54 00                  A  3775    os_max_addr		db 0							                           A  3776    	
                           A  3777    
                           A  3778    ;==============================================
                           A  3779    
                           A  3780    				end	
                           A  3781    				
                           A  3782    ;==============================================
                           A  3783    	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)01-Sep-11     14:13:00     page: 272


PC     Object              I  Line    Source 


Errors: 0
Warnings: 0
Lines Assembled: 13698
