Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:   1


PC     Object              I  Line    Source 
                           A     1    
                           A     2    ; PROSE for EZ80P by Phil Ruston 2011
                           A     3    ; Compile with Zilog ZDS II
                           A     4    
                           A     5    ;----------------------------------------------
                           A     6    	.assume ADL = 1
                           A     7    ;----------------------------------------------
                           A     8    
                           B     0    	include	'ez80_cpu_equates.asm'
                           B     1    ;--- EZ80 Internal Ports ----------------------
                           B     2    
       0000009A            B     3    PB_DR			equ 09ah
       0000009B            B     4    PB_DDR			equ 09bh
       0000009C            B     5    PB_ALT1			equ 09ch
       0000009D            B     6    PB_ALT2			equ 09dh
                           B     7    
       0000009E            B     8    PC_DR			equ 09eh
       0000009F            B     9    PC_DDR			equ 09fh
       000000A0            B    10    PC_ALT1			equ 0a0h
       000000A1            B    11    PC_ALT2			equ 0a1h
                           B    12    
       000000A2            B    13    PD_DR			equ 0a2h
       000000A3            B    14    PD_DDR			equ 0a3h
       000000A4            B    15    PD_ALT1			equ 0a4h
       000000A5            B    16    PD_ALT2			equ 0a5h
                           B    17    
       000000C0            B    18    UART0_RBR		equ 0c0h
       000000C0            B    19    UART0_THR		equ 0c0h
       000000C0            B    20    UART0_BRG_L		equ 0c0h
       000000C1            B    21    UART0_BRG_H		equ 0c1h
       000000C1            B    22    UART0_IER		equ 0c1h
       000000C2            B    23    UART0_FCTL		equ 0c2h
       000000C3            B    24    UART0_LCTL		equ 0c3h
       000000C4            B    25    UART0_MCTL		equ 0c4h
       000000C5            B    26    UART0_LSR		equ 0c5h
       000000C6            B    27    UART0_MSR		equ 0c6h
                           B    28    
       000000A8            B    29    CS0_LBR			equ 0a8h			;eZ80 wait 
       000000A9            B    30    CS0_UBR			equ 0a9h
       000000AA            B    31    CS0_CTL			equ 0aah			
       000000AB            B    32    CS1_LBR			equ 0abh			;eZ80 wait 
       000000AC            B    33    CS1_UBR			equ 0ach
       000000AD            B    34    CS1_CTL			equ 0adh
       000000AE            B    35    CS2_LBR			equ 0aeh			;eZ80 wait 
       000000AF            B    36    CS2_UBR			equ 0afh
       000000B0            B    37    CS2_CTL			equ 0b0h
       000000B1            B    38    CS3_LBR			equ 0b1h			;eZ80 wait 
       000000B2            B    39    CS3_UBR			equ 0b2h
       000000B3            B    40    CS3_CTL			equ 0b3h
                           B    41    
       00000080            B    42    TMR0_CTL		equ 080h			;timer 0 eq
       00000081            B    43    TMR0_DR_L		equ 081h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:   2


PC     Object              I  Line    Source ..\..\Includes\ez80_cpu_equates.asm
       00000081            B    44    TMR0_RR_L		equ 081h
       00000082            B    45    TMR0_DR_H		equ 082h
       00000082            B    46    TMR0_RR_H		equ 082h
       00000092            B    47    TMR_ISS			equ 092h
                           B    48    
       000000ED            B    49    RTC_CTRL		equ 0edh			;RTC equate
       000000EC            B    50    RTC_ACTRL		equ 0ech
       000000E0            B    51    RTC_SEC			equ 0e0h
       000000E1            B    52    RTC_MIN			equ 0e1h
       000000E2            B    53    RTC_HRS			equ 0e2h
       000000E3            B    54    RTC_DOW			equ 0e3h
       000000E4            B    55    RTC_DOM			equ 0e4h
       000000E5            B    56    RTC_MON			equ 0e5h
       000000E6            B    57    RTC_YR			equ 0e6h
       000000E7            B    58    RTC_CEN			equ 0e7h
                           B    59    
                           B    60    ;----------------------------------------------
                           B     0    	include	'amoeba_hardware_equates.asm'
                           B     1    ;-- AMOEBA Hardware equates -------------------
                           B     2    
       00000000            B     3    port_pic_data  			equ 000h
       00000001            B     4    port_pic_ctrl			equ 001h
       00000001            B     5    port_hw_flags			equ 001h
       00000002            B     6    port_sdc_ctrl			equ 002h	; this is a
       00000002            B     7    port_keyboard_data		equ 002h
       00000003            B     8    port_sdc_data		 	equ 003h	
       00000004            B     9    port_memory_paging		equ 004h
       00000005            B    10    port_irq_ctrl			equ 005h
       00000005            B    11    port_irq_flags			equ 005h
       00000006            B    12    port_nmi_ack			equ 006h
       00000007            B    13    port_ps2_ctrl			equ 007h
       00000008            B    14    port_selector			equ 008h
       00000006            B    15    port_mouse_data			equ 006h
       00000009            B    16    port_clear_flags		equ 009h
                           B    17    
       00000000            B    18    sdc_power				equ 0		;(port_sd_c
       00000001            B    19    sdc_cs					equ 1		;(port_sd_c
       00000002            B    20    sdc_speed				equ 2 		;(port_sd_c
                           B    21    
       00000004            B    22    sdc_serializer_busy		equ 4 		;(port_hw_f
       00000005            B    23    vrt						equ 5		;(port_hw_f
                           B    24    
                           B    25    
                           B    26    ;-- Memory locations --------------------------
                           B    27    
       00000000            B    28    sysram_addr				equ 0000000h
       00800000            B    29    vram_a_addr				equ 0800000h
       00C00000            B    30    vram_b_addr				equ 0c00000h
                           B    31    
                           B    32    ;-- Hardware registers ------------------------
                           B    33    
       00FF0000            B    34    hw_palette				equ 0ff0000h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:   3


PC     Object              I  Line    Source ..\..\Includes\amoeba_hardware_equates.asm
       00FF0800            B    35    hw_sprite_registers		equ 0ff0800h
       00FF1000            B    36    hw_video_parameters		equ 0ff1000h
       00FF1400            B    37    hw_audio_registers		equ 0ff1400h
       00FF1800            B    38    hw_video_settings		equ 0ff1800h
                           B    39    
       00FF1000            B    40    tilemap_parameters		equ hw_video_parameters
       00FF1020            B    41    bitmap_parameters		equ hw_video_parameters
                           B    42    
       00FF1800            B    43    video_control			equ hw_video_settings+0
       00FF1801            B    44    sprite_control			equ hw_video_settings+0
       00FF1802            B    45    bgnd_palette_select		equ hw_video_settings+0
       00FF1803            B    46    sprite_palette_select	equ hw_video_settings+0
       00FF1804            B    47    right_border_position	equ hw_video_settings+0
       00FF1805            B    48    irq_line_lo				equ hw_video_settings+0
       00FF1806            B    49    irq_line_hi				equ hw_video_settings+0
                           B    50    
                           B    51    ;----------------------------------------------
                           B     0    	include 'misc_system_equates.asm'
                           B     1    
                           B     2    ;-- System Equates ----------------------------
                           B     3    
       00000A00            B     4    os_location		equ 0a00h
                           B     5    
       00000A14            B     6    prose_return 	equ os_location + 14h
       00000A18            B     7    prose_relativize_hl	equ os_location + 18h
       00000A1C            B     8    prose_relative_call	equ os_location + 1ch
                           B     9    
       00000A20            B    10    prose_kernal 	equ os_location + 20h
                           B    11    
                           B    12    ;----------------------------------------------
                           B    13    
                           B    14    ; Add to sprite locations to position a 0,0 spr
                           B    15    
       0000009A            B    16    x_display_offset	equ 09ah
       00000025            B    17    y_display_offset	equ 025h
                           B    18    
                           B    19    ;----------------------------------------------
                           A    12    	
       00000800            A    13    	sector_buffer	equ 800h
       00000100            A    14    	scratch_pad		equ 100h
                           A    15    
                           A    16    ;----------------------------------------------
                           A    17    
       00000038            A    18    prose_version			equ 38h
       00000107            A    19    amoeba_version_required	equ 107h
                           A    20    
       00080000            A    21    sysram_size				equ 080000h			;as
       00000200            A    22    stack_size				equ 512
                           A    23    
       00080000            A    24    vram_a_size				equ 080000h
       00080000            A    25    vram_b_size				equ 080000h
                           A    26    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:   4


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A    27    ;----------------------------------------------
                           A    28    ; Assembly options
                           A    29    ;----------------------------------------------
                           A    30    
       00000008            A    31    max_volumes				equ 8
                           A    32    
       00000050            A    33    max_buffer_chars		equ 80		; applies t
                           A    34    
                           A    35    ;----------------------------------------------
                           A    36    			
000A00                     A    37    			org os_location
                           A    38    			
000A00 00 00 00 00 00 00   A    39    				blkb 16,0						000A06 00 00 00 00 00 00 
000A0C 00 00 00 00 
                           A    40    			
                           A    41    ;----------------------------------------------
                           A    42    			
000A10 C3 4E 0A 00         A    43    				jp os_first_run					000A14 C3 21 0F 00         A    44    				jp extcmd_return				000A18 C3 2C 3B 00         A    45    				jp relativize_hl				000A1C C3 3F 3B 00         A    46    				jp relative_call				                           A    47    				
                           A    48    ;----------------------------------------------
                           A    49    
                           A    50    ; External apps can call kernal routines by doi
                           A    51    ; Set A to kernal routine number required (see 
                           A    52    ; (this routine is always located at os_locatio
                           A    53    
000A20 D9                  A    54    				exx
000A21 DD22 55 67 00       A    55    				ld (kernal_ix_cache),ix
000A26 DD21 FC 5A 00       A    56    				ld ix,kernal_table				000A2B 11030000            A    57    				ld de,3
000A2F 57                  A    58    				ld d,a
000A30 ED5C                A    59    				mlt de
000A32 DD19                A    60    				add ix,de						000A34 DD3700              A    61    				ld ix,(ix)						                           A    62    				
000A37 E3                  A    63    				ex (sp),hl
000A38 7D                  A    64    				ld a,l							000A39 E601                A    65    				and 1							000A3B E3                  A    66    				ex (sp),hl
000A3C D9                  A    67    				exx
000A3D FDE5                A    68    				push iy
000A3F CD 4C 0A 00         A    69    				call kr_jump					000A43 FDE1                A    70    				pop iy							000A45 DD2A 55 67 00       A    71    				ld ix,(kernal_ix_cache)
000A4A 5BC9                A    72    				ret.l							                           A    73    				
000A4C DDE9                A    74    kr_jump			jp (ix)							                           A    75    						
                           A    76    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:   5


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A    77    
                           A    78    ; *******************
                           A    79    ; *   START UP OS   *
                           A    80    ; *******************
                           A    81    
000A4E                     A    82    os_first_run
                           A    83    	
000A4E B7                  A    84    				or a							000A4F 20 05               A    85    				jr nz,os_cold_start		
000A51 78                  A    86    				ld a,b
000A52 32 DD 65 00         A    87    				ld (boot_drive),a				                           A    88    
000A56                     A    89    os_cold_start
000A56 ED7D                A    90    				stmix							000A58 F3                  A    91    				di								000A59 ED5E                A    92    				im 2							000A5B AF                  A    93    				xor a
000A5C ED6D                A    94    				ld MB,a							000A5E 4031FFFF            A    95    				ld.sis sp,0ffffh				000A62 31FFFF07            A    96    				ld sp,sysram_addr+sysram_size-1
000A66 21FFFF07            A    97    				ld hl,sysram_addr+sysram_size-1
000A6A 11000200            A    98    				ld de,stack_size
000A6E AF                  A    99    				xor a
000A6F ED52                A   100    				sbc hl,de
000A71 22 1E 67 00         A   101    				ld (free_sysram_top),hl			000A75 21 C9 6D 00         A   102    				ld hl,os_max_addr
000A79 22 1B 67 00         A   103    				ld (free_sysram_base),hl
                           A   104    				
000A7D 21000080            A   105    				ld hl,vram_a_addr
000A81 22 21 67 00         A   106    				ld (free_vram_a_base),hl
000A85 01FFFF07            A   107    				ld bc,vram_a_size-1
000A89 09                  A   108    				add hl,bc
000A8A 22 24 67 00         A   109    				ld (free_vram_a_top),hl
                           A   110    				
000A8E 210000C0            A   111    				ld hl,vram_b_addr
000A92 22 27 67 00         A   112    				ld (free_vram_b_base),hl
000A96 01FFFD07            A   113    				ld bc,vram_b_size-1-512			000A9A 09                  A   114    				add hl,bc
000A9B 22 2A 67 00         A   115    				ld (free_vram_b_top),hl
                           A   116    								
000A9F CD CA 40 00         A   117    				call disable_irqs
000AA3 CD BD 42 00         A   118    				call disable_all_nmis
                           A   119    				
000AA7 3A 19 67 00         A   120    				ld a,(first_run)				000AAB B7                  A   121    				or a
000AAC 28 11               A   122    				jr z,dont_resetkb
000AAE CD B7 46 00         A   123    				call init_keyboard
000AB2 28 06               A   124    				jr z,kb_ok
000AB4 21 1A 67 00         A   125    				ld hl,devices_connected
000AB8 CB86                A   126    				res 0,(hl)
000ABA AF                  A   127    kb_ok			xor a
000ABB 32 19 67 00         A   128    				ld (first_run),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:   6


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000ABF                     A   129    dont_resetkb
                           A   130    				
000ABF 21 35 6A 00         A   131    				ld hl,packed_font_start
000AC3 11000080            A   132    				ld de,vram_a_addr
000AC7 01 E2 02 00         A   133    				ld bc,packed_font_end-packed_fo
000ACB CD C8 15 00         A   134    				call unpack_rle
000ACF CD 45 36 00         A   135    				call convert_font
                           A   136    
000AD3 CD 82 3A 00         A   137    				call test_amoeba_vers
                           A   138    				
000AD7 21 55 67 00         A   139    				ld hl,os_variables				000ADB 01 D2 01 00         A   140    				ld bc,last_os_var-os_variables
000ADF AF                  A   141    				xor a
000AE0 CD 7D 15 00         A   142    				call os_bchl_memfill
                           A   143    	
000AE4 CD A4 45 00         A   144    				call hwsc_default_hw_settings
000AE8 CD 4B 49 00         A   145    				call hwsc_disable_audio
                           A   146    				
000AEC 3A 55 65 00         A   147    				ld a,(video_mode)
000AF0 CD 56 15 00         A   148    				call os_set_vmode				                           A   149    				
000AF4 21 F5 5B 00         A   150    				ld hl,welcome_message			000AF8 CD 94 0F 00         A   151    				call os_print_string
                           A   152    				
000AFC CD C8 32 00         A   153    				call os_cmd_vers				                           A   154    				
000B00 CD BC 32 00         A   155    				call os_cmd_remount				                           A   156    
000B04 CD 3C 14 00         A   157    				call os_new_line				                           A   158    
000B08 CD 75 47 00         A   159    				call purge_keyboard
                           A   160    				
000B0C CD 4F 40 00         A   161    				call set_irq_vectors
000B10 CD A7 40 00         A   162    				call enable_os_irqs
000B14 FB                  A   163    				ei
                           A   164    				
000B15 21 1A 67 00         A   165    				ld hl,devices_connected			000B19 CB46                A   166    				bit 0,(hl)
000B1B 20 08               A   167    				jr nz,kb_present
000B1D 21 BE 61 00         A   168    				ld hl,no_keyboard_msg
000B21 CD 73 14 00         A   169    				call os_show_packed_text
000B25                     A   170    kb_present				
000B25 21 2D 5C 00         A   171    				ld hl,startup_script_fn
000B29 22 81 68 00         A   172    				ld (os_args_loc),hl
000B2D CD 1B 33 00         A   173    				call os_cmd_exec				                           A   174    									
000B31 3A 18 67 00         A   175    				ld a,(frozen)					000B35 B7                  A   176    				or a
000B36 28 11               A   177    				jr z,os_main_loop
000B38 AF                  A   178    				xor a
000B39 32 18 67 00         A   179    				ld (frozen),a
000B3D 21 7D 5C 00         A   180    				ld hl,nmi_freeze_txt
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:   7


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000B41 CD 94 0F 00         A   181    				call os_print_string
000B45 CD C1 2D 00         A   182    				call os_cmd_r
                           A   183    				
                           A   184    
                           A   185    ;==============================================
                           A   186    
000B49 CD 94 45 00         A   187    os_main_loop	call hwsc_wait_vrt				                           A   188    
000B4D CD E5 0F 00         A   189    				call os_cursor_flash
                           A   190    
000B51 CD EC 49 00         A   191    				call os_get_key_press
000B55 20 F2               A   192    				jr nz,os_main_loop
                           A   193    	
000B57 32 F4 68 00         A   194    				ld (current_scancode),a
000B5B 78                  A   195    				ld a,b
000B5C 32 F5 68 00         A   196    				ld (current_asciicode),a		                           A   197    	
000B60 CD 73 44 00         A   198    				call hwsc_remove_cursor
000B64 3E18                A   199    				ld a,24							000B66 32 C2 67 00         A   200    				ld (cursorflashtimer),a			000B6A AF                  A   201    				xor a
000B6B 32 C3 67 00         A   202    				ld (cursor_status),a
                           A   203    				
000B6F 3A F4 68 00         A   204    				ld a,(current_scancode)			000B73 FE70                A   205    				cp 70h
000B75 20 0C               A   206    				jr nz,os_notins
000B77 3A 7D 65 00         A   207     				ld a,(overwrite_mode)
000B7B EE01                A   208    				xor 1
000B7D 32 7D 65 00         A   209    				ld (overwrite_mode),a
000B81 18 C6               A   210    				jr os_main_loop
                           A   211    
000B83 FE6C                A   212    os_notins		cp 6ch
000B85 20 07               A   213    				jr nz,not_homekey
000B87 AF                  A   214    				xor a
000B88 32 C0 67 00         A   215    				ld (cursor_x),a
000B8C 18 BB               A   216    				jr os_main_loop
                           A   217    								
000B8E FE69                A   218    not_homekey		cp 69h
000B90 20 24               A   219    				jr nz,not_endkey
000B92 3A BF 67 00         A   220    				ld a,(cursor_y)					000B96 4F                  A   221    				ld c,a
000B97 3A 83 65 00         A   222    				ld a,(charmap_columns)
000B9B 47                  A   223    				ld b,a
000B9C 05                  A   224    fendloop		dec b
000B9D CD E1 44 00         A   225    				call hwsc_get_charmap_addr_xy
000BA1 7E                  A   226    				ld a,(hl)
000BA2 FE20                A   227    				cp 20h
000BA4 28 F6               A   228    				jr z,fendloop
000BA6 04                  A   229    				inc b
000BA7 3A 83 65 00         A   230    				ld a,(charmap_columns)
000BAB B8                  A   231    				cp b
000BAC 20 01               A   232    				jr nz,endxposok
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:   8


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000BAE 05                  A   233    				dec b
000BAF 78                  A   234    endxposok		ld a,b
000BB0 32 C0 67 00         A   235    				ld (cursor_x),a
000BB4 18 93               A   236    				jr os_main_loop
                           A   237    
000BB6 21 C0 67 00         A   238    not_endkey		ld hl,cursor_x					000BBA FE6B                A   239    				cp 06bh			
000BBC 20 10               A   240    				jr nz,os_ntlft
000BBE 35                  A   241    				dec (hl)
000BBF 7E                  A   242    				ld a,(hl)
000BC0 FEFF                A   243    				cp 0ffh	
000BC2 20 85               A   244    				jr nz,os_main_loop
000BC4 3A 83 65 00         A   245    				ld a,(charmap_columns)
000BC8 3D                  A   246    				dec a
000BC9 77                  A   247    				ld (hl),a						000BCA C3 49 0B 00         A   248    				jr os_main_loop
                           A   249    
000BCE FE74                A   250    os_ntlft		cp 074h							000BD0 20 10               A   251    				jr nz,os_ntrig
000BD2 34                  A   252    				inc (hl)
000BD3 3A 83 65 00         A   253    				ld a,(charmap_columns)
000BD7 BE                  A   254    				cp (hl)
000BD8 C2 49 0B 00         A   255    				jr nz,os_main_loop
000BDC 3600                A   256    				ld (hl),0						000BDE C3 49 0B 00         A   257    				jr os_main_loop
                           A   258    
000BE2 21 BF 67 00         A   259    os_ntrig		ld hl,cursor_y
000BE6 FE75                A   260    				cp 075h							000BE8 20 0D               A   261    				jr nz,os_ntup
000BEA 35                  A   262    				dec (hl)
000BEB CB7E                A   263    				bit 7,(hl)
000BED CA 49 0B 00         A   264    				jr z,os_main_loop
000BF1 3600                A   265    				ld (hl),0						000BF3 C3 49 0B 00         A   266    				jr os_main_loop
                           A   267    
000BF7 FE72                A   268    os_ntup			cp 072h
000BF9 20 14               A   269    				jr nz,os_ntdwn					000BFB 34                  A   270    				inc (hl)
000BFC 3A 80 65 00         A   271    				ld a,(charmap_rows)
000C00 BE                  A   272    				cp (hl)
000C01 C2 49 0B 00         A   273    				jr nz,os_main_loop
000C05 3D                  A   274    				dec a
000C06 77                  A   275    				ld (hl),a						000C07 CD FF 43 00         A   276    				call hwsc_scroll_up
000C0B C3 49 0B 00         A   277    				jr os_main_loop
                           A   278    
000C0F FE71                A   279    os_ntdwn		cp 071h							000C11 20 08               A   280    				jr nz,os_nodel		
000C13 3A C0 67 00         A   281    				ld a,(cursor_x)					000C17 47                  A   282    				ld b,a
000C18 04                  A   283    				inc b
000C19 18 13               A   284    				jr os_chrbk
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:   9


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A   285    
000C1B FE66                A   286    os_nodel		cp 066h							000C1D 20 17               A   287    				jr nz,os_nbksp
000C1F 3A C0 67 00         A   288    				ld a,(cursor_x)					000C23 B7                  A   289    				or a							000C24 CA 49 0B 00         A   290    				jp z,os_main_loop
000C28 47                  A   291    				ld b,a
000C29 3D                  A   292    				dec a
000C2A 32 C0 67 00         A   293    				ld (cursor_x),a					000C2E CD F9 44 00         A   294    os_chrbk		call hwsc_chars_left			000C32 C3 49 0B 00         A   295    				jp os_main_loop
                           A   296    
000C36 FE5A                A   297    os_nbksp		cp 05ah							000C38 CA 80 0C 00         A   298    				jp z,os_enter_pressed
                           A   299    	
000C3C 3A F5 68 00         A   300    				ld a,(current_asciicode)		000C40 FE20                A   301    				cp 32							000C42 38 38               A   302    				jr c,os_nvdun					                           A   303    
000C44 FE7B                A   304    				cp 07bh							000C46 30 12               A   305    				jr nc,os_gtcha					000C48 FE61                A   306    				cp 061h
000C4A 38 04               A   307    				jr c,os_ntupc
000C4C D620                A   308    				sub 020h
000C4E 18 0A               A   309    				jr os_gtcha
000C50 FE5B                A   310    os_ntupc		cp 05bh
000C52 30 06               A   311    				jr nc,os_gtcha
000C54 FE41                A   312    				cp 041h
000C56 38 02               A   313    				jr c,os_gtcha
000C58 C620                A   314    				add a,020h
000C5A 57                  A   315    os_gtcha		ld d,a							000C5B 3A 7D 65 00         A   316    				ld a,(overwrite_mode)			000C5F B7                  A   317    				or a
000C60 CC 32 45 00         A   318    				call z,hwsc_chars_right
                           A   319    				
000C64 ED4B BF 67 00       A   320    os_schi			ld bc,(cursor_pos)				000C69 7A                  A   321    				ld a,d							000C6A CD 3A 44 00         A   322    				call hwsc_plot_char		
000C6E 21 C0 67 00         A   323    				ld hl,cursor_x					000C72 34                  A   324    				inc (hl)
000C73 3A 83 65 00         A   325    				ld a,(charmap_columns)
000C77 BE                  A   326    				cp (hl)							000C78 20 02               A   327    				jr nz,os_nvdun
000C7A 3600                A   328    				ld (hl),0
                           A   329    
000C7C C3 49 0B 00         A   330    os_nvdun		jp os_main_loop
                           A   331    	
                           A   332    
                           A   333    ;----------------------------------------------
                           A   334    
000C80                     A   335    os_enter_pressed
                           A   336    	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  10


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000C80 CD 75 45 00         A   337    				call hwsc_charline_to_command_s
                           A   338    
000C84 AF                  A   339    				xor a
000C85 32 C0 67 00         A   340    				ld (cursor_x),a					000C89 21 BF 67 00         A   341    				ld hl,cursor_y					000C8D 34                  A   342    				inc (hl)
000C8E 3A 80 65 00         A   343    				ld a,(charmap_rows)
000C92 BE                  A   344    				cp (hl)
000C93 20 06               A   345    				jr nz,os_esdok
000C95 3D                  A   346    				dec a
000C96 77                  A   347    				ld (hl),a
000C97 CD FF 43 00         A   348    				call hwsc_scroll_up
                           A   349    
000C9B CD A3 0C 00         A   350    os_esdok		call os_parse_cmd_chk_ps		                           A   351    
000C9F C3 49 0B 00         A   352    post_csb		jp os_main_loop
                           A   353    
                           A   354    	
                           A   355    ;----------------------------------------------
                           A   356    
                           A   357    
000CA3                     A   358    os_parse_cmd_chk_ps
                           A   359    
000CA3 CD B6 0C 00         A   360    				call os_parse_command_line
000CA7 FEFE                A   361    				cp 0feh							000CA9 C0                  A   362    				ret nz
000CAA 01500000            A   363    				ld bc,max_buffer_chars			000CAE 11 DD 67 00         A   364    				ld de,commandstring				000CB2 EDB0                A   365    				ldir
000CB4 18 ED               A   366    				jr os_parse_cmd_chk_ps
                           A   367    
                           A   368    	
                           A   369    ;----------------------------------------------
                           A   370    	
000CB6                     A   371    os_parse_command_line
                           A   372    
000CB6 3E01                A   373    				ld a,1
000CB8 32 58 67 00         A   374    				ld (store_registers),a			                           A   375    
000CBC 21 DD 67 00         A   376    				ld hl,commandstring				000CC0 0650                A   377    				ld b,max_buffer_chars			000CC2 CD 32 10 00         A   378    				call os_scan_for_non_space		000CC6 B7                  A   379    				or a							000CC7 C8                  A   380    				ret z
000CC8 11 F6 5C 00         A   381    				ld de,dictionary-1				000CCC D5                  A   382    				push de
000CCD D1                  A   383    compcstr		pop de
000CCE E5                  A   384    				push hl
000CCF FDE1                A   385    				pop iy
000CD1 13                  A   386    notacmd			inc de
000CD2 1A                  A   387    				ld a,(de)
000CD3 FE01                A   388    				cp 1							Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  11


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000CD5 CA 79 0D 00         A   389    				jp z,os_no_kernal_command_found
000CD9 CB7F                A   390    				bit 7,a
000CDB 28 F4               A   391    				jr z,notacmd					000CDD E67F                A   392    				and 07fh
000CDF 4F                  A   393    				ld c,a							000CE0 D5                  A   394    				push de
000CE1 13                  A   395    cmdnscan		inc de
000CE2 FD7E00              A   396    				ld a,(iy)						000CE5 CD 9D 12 00         A   397    				call os_uppercasify
000CE9 47                  A   398    				ld b,a
000CEA 1A                  A   399    				ld a,(de)						000CEB B8                  A   400    				cp b
000CEC FD23                A   401    				inc iy
000CEE 28 F1               A   402    				jr z,cmdnscan					000CF0 1A                  A   403    nomatch			ld a,(de)						000CF1 B7                  A   404    				or a
000CF2 28 04               A   405    				jr z,posmatch					000CF4 CB7F                A   406    				bit 7,a			
000CF6 28 D5               A   407    				jr z,compcstr					000CF8 FD7EFF              A   408    posmatch		ld a,(iy-1)						000CFB FE20                A   409    				cp 32
000CFD 20 CE               A   410    				jr nz,compcstr					                           A   411    	
000CFF D1                  A   412    				pop de				
000D00 FDE5                A   413    				push iy							000D02 E1                  A   414    				pop hl
000D03 CD 32 10 00         A   415    				call os_scan_for_non_space
000D07 22 81 68 00         A   416    				ld (os_args_loc),hl				                           A   417    	
000D0B 21 CC 62 00         A   418    				ld hl,os_cmd_locs
000D0F 11030000            A   419    				ld de,3
000D13 51                  A   420    				ld d,c
000D14 ED5C                A   421    				mlt de							000D16 19                  A   422    				add hl,de
000D17 ED37                A   423    				ld ix,(hl)						                           A   424    
000D19 2A 81 68 00         A   425    				ld hl,(os_args_loc)				000D1D CD 67 0F 00         A   426    				call os_run_command				                           A   427    
000D21 B7                  A   428    				or a
000D22 C8                  A   429    				ret z							000D23 FE01                A   430    				cp 1
000D25 20 17               A   431    				jr nz,show_erm
000D27 78                  A   432    os_hwe1			ld a,b							000D28 21 FD 5F 00         A   433    os_hwerr		ld hl,hex_byte_txt		
000D2C CD DF 10 00         A   434    				call hexbyte_to_ascii	
000D30 CD 3C 14 00         A   435    				call os_new_line
000D34 21 B1 61 00         A   436    				ld hl,hw_err_msg
000D38 CD 73 14 00         A   437    				call os_show_packed_text
000D3C AF                  A   438    				xor a
000D3D C9                  A   439    				ret
                           A   440    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  12


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000D3E 01000000            A   441    show_erm		ld bc,0							000D42 4F                  A   442    				ld c,a
000D43 D680                A   443    				sub 080h						000D45 38 11               A   444    				jr c,no_trans					000D47 21 03 64 00         A   445    				ld hl,kernal_error_code_transla
000D4B CB77                A   446    				bit 6,a							000D4D 28 06               A   447    				jr z,not_fs_err					000D4F 21 12 64 00         A   448    				ld hl,fs_error_code_translation
000D53 D640                A   449    				sub 040h
000D55 4F                  A   450    not_fs_err		ld c,a
000D56 09                  A   451    				add hl,bc
000D57 4E                  A   452    				ld c,(hl)
000D58 0600                A   453    no_trans		ld b,0
000D5A 21 38 63 00         A   454    				ld hl,packed_msg_list
000D5E 7E                  A   455    findmsg			ld a,(hl)
000D5F FEFF                A   456    				cp 0ffh
000D61 C8                  A   457    				ret z							000D62 23                  A   458    				inc hl
000D63 B7                  A   459    				or a
000D64 20 F8               A   460    				jr nz,findmsg					000D66 04                  A   461    				inc b
000D67 79                  A   462    				ld a,c							000D68 B8                  A   463    				cp b
000D69 20 F3               A   464    				jr nz,findmsg
000D6B CD 3C 14 00         A   465    				call os_new_line
000D6F CD 73 14 00         A   466    				call os_show_packed_text
000D73 CD 3C 14 00         A   467    				call os_new_line
000D77 AF                  A   468    				xor a
000D78 C9                  A   469    				ret
                           A   470    	
                           A   471    
000D79                     A   472    os_no_kernal_command_found
                           A   473    
000D79 3E30                A   474    				ld a,030h						000D7B 32 E6 65 00         A   475    fvolcmd			ld (vol_txt+4),a				000D7F F5                  A   476    				push af			
000D80 11 E3 65 00         A   477    				ld de,vol_txt+1		
000D84 0605                A   478    				ld b,5			
000D86 CD 63 12 00         A   479    				call os_compare_strings	
000D8A 28 08               A   480    				jr z,gotvolcmd		
000D8C F1                  A   481    				pop af				
000D8D 3C                  A   482    				inc a			
000D8E FE38                A   483    				cp 030h+max_volumes		
000D90 20 E9               A   484    				jr nz,fvolcmd		
000D92 18 0B               A   485    				jr novolcmd		
000D94 F1                  A   486    gotvolcmd		pop af
000D95 D630                A   487    				sub 030h
000D97 CD B7 1A 00         A   488    				call os_change_volume
000D9B C3 52 0F 00         A   489    				jp extcmderf					                           A   490    		
                           A   491    
                           A   492    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  13


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000D9F 7E                  A   493    novolcmd		ld a,(hl)						000DA0 FE47                A   494    				cp 'G'							000DA2 20 34               A   495    				jr nz,not_g_cmd					000DA4 23                  A   496    				inc hl
000DA5 7E                  A   497    				ld a,(hl)
000DA6 2B                  A   498    				dec hl
000DA7 FE20                A   499    				cp ' '
000DA9 20 2D               A   500    				jr nz,not_g_cmd
000DAB 23                  A   501    				inc hl
000DAC CD 32 10 00         A   502    				call os_scan_for_non_space
000DB0 22 81 68 00         A   503    				ld (os_args_loc),hl				000DB4 B7                  A   504    				or a
000DB5 20 04               A   505    				jr nz,gotgargs
000DB7 3E1F                A   506    				ld a,01fh						000DB9 18 83               A   507    				jr show_erm
000DBB CD 1E 11 00         A   508    gotgargs		call ascii_to_hex_no_scan		000DBF B7                  A   509    				or a
000DC0 C2 3E 0D 00         A   510    				jr nz,show_erm
000DC4 CD AC 42 00         A   511    				call enable_button_nmi			000DC8 CD 1C 1C 00         A   512    				call test_de
000DCC 20 03               A   513    				jr nz,not_reset
000DCE AF                  A   514    				xor a
000DCF D304                A   515    				out (port_memory_paging),a		000DD1 D5                  A   516    not_reset		push de
000DD2 DDE1                A   517    				pop ix			
000DD4 C3 67 0F 00         A   518    				jp os_run_command				                           A   519    				
                           A   520    				
                           A   521    
000DD8 22 81 68 00         A   522    not_g_cmd		ld (os_args_loc),hl				000DDC 22 84 68 00         A   523    				ld (os_args_pos_cache),hl
000DE0 CD 66 10 00         A   524    				call os_args_to_fn_append_ezp	                           A   525    	
000DE4 CD 71 0F 00         A   526    				call cache_dir_block			                           A   527    
000DE8 CD FF 4D 00         A   528    				call fs_check_disk_format		000DEC 38 38               A   529    				jr c,os_ndfxc					000DEE 20 36               A   530    				jr nz,os_ndfxc
                           A   531    	
000DF0 CD A8 4F 00         A   532    				call fs_open_file_command		000DF4 DA 28 0D 00         A   533    				jp c,os_hwerr			 		000DF8 28 36               A   534    				jr z,os_gecmd					                           A   535    
000DFA CD 79 4F 00         A   536    				call fs_goto_root_dir_command	000DFE 21 24 5C 00         A   537    				ld hl,os_dos_cmds_txt
000E02 CD 41 58 00         A   538    				call fs_hl_to_filename
000E06 CD 52 4F 00         A   539    				call fs_change_dir_command		000E0A DA 28 0D 00         A   540    				jp c,os_hwerr
000E0E 20 16               A   541    				jr nz,os_ndfxc					                           A   542    	
000E10 2A 84 68 00         A   543    				ld hl,(os_args_pos_cache)		000E14 22 81 68 00         A   544    				ld (os_args_loc),hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  14


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000E18 CD 66 10 00         A   545    				call os_args_to_fn_append_ezp	000E1C CD A8 4F 00         A   546    				call fs_open_file_command		000E20 DA 28 0D 00         A   547    				jp c,os_hwerr
000E24 28 0A               A   548    				jr z,os_gecmd
000E26 CD 7D 0F 00         A   549    os_ndfxc		call restore_dir_block			000E2A 3E0B                A   550    				ld a,0bh						000E2C C3 3E 0D 00         A   551    				jp show_erm
                           A   552    
000E30 2A 81 68 00         A   553    os_gecmd		ld hl,(os_args_loc)				000E34 CD 32 10 00         A   554    				call os_scan_for_non_space		000E38 22 81 68 00         A   555    				ld (os_args_loc),hl
                           A   556    
000E3C 11100000            A   557    				ld de,16
000E40 CD 2B 16 00         A   558    				call os_set_load_length			000E44 21000100            A   559    				ld hl,scratch_pad
000E48 22 CF 5A 00         A   560    				ld (fs_ez80_address),hl
000E4C CD FB 4F 00         A   561    				call fs_read_data_command
000E50 DA 28 0D 00         A   562    				jp c,os_hwerr					000E54 C2 3E 0D 00         A   563    				jp nz,show_erm					000E58 2A020100            A   564    				ld hl,(scratch_pad+2)
000E5C 1150524F            A   565    				ld de,04f5250h					000E60 AF                  A   566    				xor a	
000E61 ED52                A   567    				sbc hl,de
000E63 28 0A               A   568    				jr z,loc_header
000E65 CD 7D 0F 00         A   569    				call restore_dir_block			000E69 3E1A                A   570    				ld a,01ah						000E6B C3 3E 0D 00         A   571    				jp show_erm						                           A   572    				
000E6F 3A0F0100            A   573    loc_header		ld a,(scratch_pad+15)			000E73 32 54 67 00         A   574    				ld (store_adl),a			
000E77 CD A8 4F 00         A   575    				call fs_open_file_command		000E7B DA 28 0D 00         A   576    				jp c,os_hwerr
000E7F 20 A5               A   577    				jr nz,os_ndfxc
000E81 2A050100            A   578    				ld hl,(scratch_pad+5)			000E85 22 CF 5A 00         A   579    				ld (fs_ez80_address),hl
                           A   580    				
000E89 ED5B0B01 00         A   581    				ld de,(scratch_pad+11)			000E8E 7B                  A   582    				ld a,e
000E8F B2                  A   583    				or d
000E90 28 14               A   584    				jr z,noprov_spec				000E92 21380000            A   585    				ld hl,prose_version
000E96 AF                  A   586    				xor a
000E97 40ED52              A   587    				sbc.sis hl,de					000E9A 30 0A               A   588    				jr nc,noprov_spec
000E9C CD 7D 0F 00         A   589    				call restore_dir_block
000EA0 3E1B                A   590    				ld a,01bh						000EA2 C3 3E 0D 00         A   591    				jp show_erm
                           A   592    				
000EA6 CD 3B 46 00         A   593    noprov_spec		call hwsc_get_version			000EAA 2A0D0100            A   594    				ld hl,(scratch_pad+13)			000EAE EB                  A   595    				ex de,hl						000EAF 7B                  A   596    				ld a,e
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  15


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000EB0 B2                  A   597    				or d
000EB1 28 10               A   598    				jr z,nohwv_spec					000EB3 AF                  A   599    				xor a
000EB4 40ED52              A   600    				sbc.sis hl,de					000EB7 30 0A               A   601    				jr nc,nohwv_spec
000EB9 CD 7D 0F 00         A   602    				call restore_dir_block
000EBD 3E2B                A   603    				ld a,02bh						000EBF C3 3E 0D 00         A   604    				jp show_erm
                           A   605    
000EC3 ED5B0801 00         A   606    nohwv_spec		ld de,(scratch_pad+8)			000EC8 3A0A0100            A   607    				ld a,(scratch_pad+10)			000ECC B2                  A   608    				or d
000ECD B3                  A   609    				or e
000ECE 28 04               A   610    				jr z,readcode					000ED0 CD 2B 16 00         A   611    				call os_set_load_length			                           A   612    		
000ED4 ED4B CF 5A 00       A   613    readcode		ld bc,(fs_ez80_address)			000ED9 C5                  A   614    				push bc
000EDA E1                  A   615    				pop hl
000EDB ED5B C6 5A 00       A   616    				ld de,(fs_file_transfer_length)
000EE0 19                  A   617    				add hl,de
000EE1 EB                  A   618    				ex de,hl
000EE2 CD A8 3B 00         A   619    				call os_protected_ram_test
000EE6 C4 FA 3B 00         A   620    				call nz,os_protected_ram_query
000EEA 28 0A               A   621    				jr z,ezp_loadpm_ok
000EEC F5                  A   622    				push af
000EED CD 7D 0F 00         A   623    				call restore_dir_block
000EF1 F1                  A   624    				pop af
000EF2 C3 3E 0D 00         A   625    				jp show_erm
                           A   626    
000EF6 2A050100            A   627    ezp_loadpm_ok	ld hl,(scratch_pad+5)
000EFA 22 8A 68 00         A   628    				ld (os_extcmd_jmp_addr),hl		000EFE CD FB 4F 00         A   629    				call fs_read_data_command
000F02 F5                  A   630    				push af
000F03 CD 7D 0F 00         A   631    				call restore_dir_block			000F07 F1                  A   632    				pop af
000F08 DA 28 0D 00         A   633    				jp c,os_hwerr					000F0C C2 3E 0D 00         A   634    				jp nz,show_erm					                           A   635    	
000F10 CD AC 42 00         A   636    				call enable_button_nmi			000F14 DD2A 8A 68 00       A   637    				ld ix,(os_extcmd_jmp_addr)		000F19 2A 81 68 00         A   638    				ld hl,(os_args_loc)				000F1D C3 67 0F 00         A   639    				jp os_run_command				                           A   640    
000F21 F5                  A   641    extcmd_return	push af							000F22 CD A4 45 00         A   642    				call hwsc_default_hw_settings	000F26 3A 58 67 00         A   643    				ld a,(store_registers)
000F2A B7                  A   644    				or a
000F2B 28 06               A   645    				jr z,skp_strg
000F2D F1                  A   646    				pop af
000F2E CD B5 13 00         A   647    				call os_store_CPU_regs			000F32 F5                  A   648    				push af
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  16


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000F33 F1                  A   649    skp_strg		pop af
                           A   650    
000F34 F5                  A   651    cntuasr			push af
000F35 C5                  A   652    				push bc							000F36 21000100            A   653    				ld hl,scratch_pad				000F3A CD DF 10 00         A   654    				call hexbyte_to_ascii
000F3E 3600                A   655    				ld (hl),0
000F40 11000100            A   656    				ld de,scratch_pad
000F44 21 95 5C 00         A   657    				ld hl,error_txt
000F48 CD 6A 1B 00         A   658    				call os_set_envar
000F4C CD B7 42 00         A   659    				call disable_button_nmi			000F50 C1                  A   660    				pop bc
000F51 F1                  A   661    				pop af
000F52 B7                  A   662    extcmderf		or a							000F53 C8                  A   663    				ret z	
000F54 FE01                A   664    				cp 1							000F56 CA 27 0D 00         A   665    				jp z,os_hwe1					000F5A FEFF                A   666    				cp 0ffh							000F5C CA 56 0A 00         A   667    				jp z,os_cold_start
000F60 FEFE                A   668    				cp 0feh							000F62 C8                  A   669    				ret z
000F63 C3 3E 0D 00         A   670    				jp show_erm						                           A   671    				
                           A   672    ;----------------------------------------------
                           A   673    
000F67                     A   674    os_run_command									000F67 ED3906              A   675    				out0 (port_nmi_ack),a			000F6A DD22 59 67 00       A   676    				ld (com_start_addr),ix			000F6F DDE9                A   677    				jp (ix)							                           A   678    
                           A   679    ;----------------------------------------------
                           A   680    
000F71                     A   681    cache_dir_block
                           A   682    
                           A   683    	
000F71 D5                  A   684    				push de
000F72 CD 5B 1A 00         A   685    				call fs_get_dir_cluster	
000F76 ED53 87 68 00       A   686    				ld (os_dir_block_cache),de
000F7B D1                  A   687    				pop de	
000F7C C9                  A   688    				ret
                           A   689    		
                           A   690    
000F7D                     A   691    restore_dir_block
                           A   692    
000F7D D5                  A   693    				push de
000F7E ED5B 87 68 00       A   694    				ld de,(os_dir_block_cache)
000F83 CD 67 1A 00         A   695    				call fs_update_dir_cluster
000F87 D1                  A   696    				pop de
000F88 C9                  A   697    				ret
                           A   698    		
                           A   699    ;==============================================
                           A   700    ; Routines called by command line
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  17


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A   701    ;==============================================
                           A   702    
                           A   703    ; Set:-
                           A   704    ; HL to address of string
                           A   705    ; c = y
                           A   706    ; b = x
                           A   707    
000F89                     A   708    ext_print_string
                           A   709    
000F89 CC A4 15 00         A   710    				call z,mbase_hl
000F8D 18 05               A   711    				jr os_print_string
                           A   712    
000F8F                     A   713    os_print_string_cond
                           A   714    
000F8F CD 0E 1A 00         A   715    				call test_quiet_mode
000F93 C0                  A   716    				ret nz
                           A   717    
000F94                     A   718    os_print_string
                           A   719    
000F94 D5                  A   720    				push de
000F95 C5                  A   721    				push bc
000F96 ED4B BF 67 00       A   722    				ld bc,(cursor_pos)				000F9B 7E                  A   723    prstr_lp		ld a,(hl)
000F9C 23                  A   724    				inc hl
000F9D B7                  A   725    				or a
000F9E 20 09               A   726    				jr nz,prstr_ne
000FA0 ED43 BF 67 00       A   727    				ld (cursor_pos),bc
000FA5 C1                  A   728    				pop bc
000FA6 D1                  A   729    				pop de
000FA7 AF                  A   730    				xor a							000FA8 C9                  A   731    				ret
                           A   732    
000FA9 FE0D                A   733    prstr_ne		cp 13
000FAB 20 04               A   734    				jr nz,not_cr
000FAD 0600                A   735    				ld b,0
000FAF 18 EA               A   736    				jr prstr_lp
000FB1 FE0A                A   737    not_cr			cp 10
000FB3 28 12               A   738    				jr z,line_feed				
000FB5 FE0B                A   739    				cp 11
000FB7 28 0C               A   740    				jr z,next_line
000FB9 CD 3A 44 00         A   741    				call hwsc_plot_char
000FBD 04                  A   742    				inc b
000FBE 3A 83 65 00         A   743    				ld a,(charmap_columns)
000FC2 B8                  A   744    				cp b
000FC3 20 D6               A   745    				jr nz,prstr_lp
000FC5 0600                A   746    next_line		ld b,0
000FC7 0C                  A   747    line_feed		inc c
000FC8 3A 80 65 00         A   748    				ld a,(charmap_rows)
000FCC B9                  A   749    				cp c
000FCD 20 CC               A   750    				jr nz,prstr_lp
000FCF 0D                  A   751    				dec c
000FD0 CD FF 43 00         A   752    				call hwsc_scroll_up
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  18


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
000FD4 18 C5               A   753    				jr prstr_lp
                           A   754    
                           A   755    ;----------------------------------------------
                           A   756    
000FD6 21 CD 68 00         A   757    os_print_char	ld hl,char_to_print
000FDA 77                  A   758    				ld (hl),a
000FDB 18 B7               A   759    				jr os_print_string
                           A   760    
                           A   761    ;----------------------------------------------
                           A   762    
000FDD F5                  A   763    home_cursor		push af
000FDE AF                  A   764    				xor a
000FDF 32 C0 67 00         A   765    				ld (cursor_x),a
000FE3 F1                  A   766    				pop af
000FE4 C9                  A   767    				ret
                           A   768    				
                           A   769    ;----------------------------------------------
                           A   770    
000FE5                     A   771    os_cursor_flash
                           A   772    
000FE5 21 C2 67 00         A   773    				ld hl,cursorflashtimer
000FE9 34                  A   774    				inc (hl)
000FEA 7E                  A   775    				ld a,(hl)
000FEB FE19                A   776    				cp 25
000FED C0                  A   777    				ret nz
000FEE 3600                A   778    				ld (hl),0
000FF0 3A C3 67 00         A   779    				ld a,(cursor_status)
000FF4 EE01                A   780    				xor 1
000FF6 32 C3 67 00         A   781    				ld (cursor_status),a
000FFA 28 15               A   782    				jr z,no_cursor
000FFC 3E5F                A   783    				ld a,05fh
000FFE 21 7D 65 00         A   784    				ld hl,overwrite_mode
001002 CB46                A   785    				bit 0,(hl)
001004 28 02               A   786    				jr z,cursor_selected
001006 3E7F                A   787    				ld a,07fh
                           A   788    				
001008 CD 17 10 00         A   789    cursor_selected	call os_set_cursor_image
00100C CD 8D 44 00         A   790    				call hwsc_draw_cursor			001010 C9                  A   791    				ret
                           A   792    
001011 CD 73 44 00         A   793    no_cursor		call hwsc_remove_cursor
001015 C9                  A   794    				ret
                           A   795    
                           A   796    
                           A   797    ;----------------------------------------------
                           A   798    
001016                     A   799    ext_set_cursor_image
                           A   800    
001016 7B                  A   801    				ld a,e
                           A   802    				
001017                     A   803    os_set_cursor_image
                           A   804    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  19


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001017 32 7E 65 00         A   805    				ld (cursor_image_char),a
00101B BF                  A   806    				cp a
00101C C9                  A   807    				ret
                           A   808    
                           A   809    ;----------------------------------------------
                           A   810    
00101D                     A   811    os_next_arg
                           A   812    
00101D CD 29 10 00         A   813    				call os_scan_for_space
001021 B7                  A   814    				or a
001022 C8                  A   815    				ret z
001023 CD 32 10 00         A   816    				call os_scan_for_non_space
001027 B7                  A   817    				or a
001028 C9                  A   818    				ret
                           A   819    
                           A   820    
                           A   821    ;----------------------------------------------
                           A   822    	
                           A   823    
001029                     A   824    os_scan_for_space
                           A   825    
001029 7E                  A   826    os_sfspl 		ld a,(hl)						00102A B7                  A   827    				or a							00102B C8                  A   828    				ret z
00102C FE20                A   829    				cp ' '
00102E C8                  A   830    				ret z
00102F 23                  A   831    				inc hl
001030 18 F7               A   832    				jr os_sfspl
                           A   833    	
                           A   834    
                           A   835    ;----------------------------------------------
                           A   836    	
                           A   837    
001032                     A   838    os_scan_for_non_space
                           A   839    
001032 2B                  A   840    				dec hl							001033 23                  A   841    os_nsplp		inc hl			
001034 7E                  A   842    				ld a,(hl)			
001035 B7                  A   843    				or a			
001036 C8                  A   844    				ret z							001037 FE20                A   845    				cp ' '
001039 28 F8               A   846    				jr z,os_nsplp
00103B C9                  A   847    				ret
                           A   848    	
                           A   849    	
                           A   850    ;----------------------------------------------
                           A   851    
00103C                     A   852    os_args_to_alt_filename
                           A   853    
00103C CD 96 10 00         A   854    				call os_atfn_pre				001040 C8                  A   855    				ret z
001041 CD 3B 58 00         A   856    				call fs_hl_to_alt_filename
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  20


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001045 18 09               A   857    				jr os_atfrl
                           A   858    	
                           A   859    	
                           A   860    	
                           A   861    		
001047                     A   862    os_args_to_filename
                           A   863    
001047 CD 96 10 00         A   864    				call os_atfn_pre				00104B C8                  A   865    				ret z
00104C CD 41 58 00         A   866    				call fs_hl_to_filename	
                           A   867    
001050 7E                  A   868    os_atfrl		ld a,(hl)						001051 B7                  A   869    				or a							001052 28 0B               A   870    				jr z,os_cfne
001054 FE20                A   871    				cp 32
001056 28 07               A   872    				jr z,os_cfne
001058 FE2F                A   873    				cp 02fh
00105A 28 03               A   874    				jr z,os_cfne
00105C 23                  A   875    				inc hl
00105D 18 F1               A   876    				jr os_atfrl	
00105F 22 81 68 00         A   877    os_cfne			ld (os_args_loc),hl				001063 79                  A   878    				ld a,c			
001064 B7                  A   879    				or a							001065 C9                  A   880    				ret
                           A   881    
                           A   882    
                           A   883    
                           A   884    
001066                     A   885    os_args_to_fn_append_ezp
                           A   886    
                           A   887    	
001066 CD 96 10 00         A   888    				call os_atfn_pre				00106A C8                  A   889    				ret z
00106B 11 5C 67 00         A   890    				ld de,temp_string
00106F 7E                  A   891    ccmdtlp			ld a,(hl)						001070 B7                  A   892    				or a
001071 28 0D               A   893    				jr z,goteocmd
001073 FE20                A   894    				cp ' '
001075 28 09               A   895    				jr z,goteocmd
001077 FE2E                A   896    				cp '.'
001079 28 05               A   897    				jr z,goteocmd
00107B 12                  A   898    				ld (de),a
00107C 13                  A   899    				inc de
00107D 23                  A   900    				inc hl
00107E 18 EF               A   901    				jr ccmdtlp
                           A   902    	
001080 E5                  A   903    goteocmd		push hl
001081 21 6F 5C 00         A   904    				ld hl,ezp_extension_txt
001085 01050000            A   905    				ld bc,5
001089 EDB0                A   906    				ldir 
00108B 21 5C 67 00         A   907    				ld hl,temp_string
00108F CD 41 58 00         A   908    				call fs_hl_to_filename
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  21


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001093 E1                  A   909    				pop hl
001094 18 BA               A   910    				jr os_atfrl
                           A   911    	
                           A   912    
                           A   913    
                           A   914    
001096                     A   915    os_atfn_pre
                           A   916    
001096 2A 81 68 00         A   917    				ld hl,(os_args_loc)				00109A CD 32 10 00         A   918    				call os_scan_for_non_space
00109E B7                  A   919    				or a
00109F C8                  A   920    				ret z
0010A0 7E                  A   921    				ld a,(hl)
0010A1 FE2F                A   922    				cp 02fh							0010A3 20 01               A   923    				jr nz,notfsl1
0010A5 23                  A   924    				inc hl
0010A6 AF                  A   925    notfsl1			xor a
0010A7 3C                  A   926    				inc a
0010A8 C9                  A   927    				ret
                           A   928    
                           A   929    
                           A   930    ;--------- Number <-> String functions --------
                           A   931    
                           A   932    
0010A9                     A   933    os_clear_output_line
                           A   934    
0010A9 C5                  A   935    				push bc
0010AA E5                  A   936    				push hl			
0010AB 21 2F 68 00         A   937    				ld hl,output_line
0010AF 01500000            A   938    				ld bc,max_buffer_chars
0010B3 3E20                A   939    				ld a,32
0010B5 CD 7D 15 00         A   940    				call os_bchl_memfill
0010B9 E1                  A   941    				pop hl
0010BA C1                  A   942    				pop bc
0010BB C9                  A   943    				ret
                           A   944    	
                           A   945    	
                           A   946    	
0010BC                     A   947    os_skip_leading_ascii_zeros
                           A   948    
0010BC 7E                  A   949    slazlp			ld a,(hl)						0010BD FE30                A   950    				cp '0'							0010BF C0                  A   951    				ret nz
0010C0 23                  A   952    				inc hl
0010C1 10 F9               A   953    				djnz slazlp
0010C3 C9                  A   954    				ret
                           A   955    	
                           A   956    
                           A   957    
0010C4                     A   958    os_leading_ascii_zeros_to_spaces
                           A   959    
0010C4 E5                  A   960    				push hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  22


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0010C5 7E                  A   961    clazlp			ld a,(hl)						0010C6 FE30                A   962    				cp '0'							0010C8 20 05               A   963    				jr nz,claze	
0010CA 3620                A   964    				ld (hl),' '
0010CC 23                  A   965    				inc hl
0010CD 10 F6               A   966    				djnz clazlp
0010CF E1                  A   967    claze			pop hl
0010D0 C9                  A   968    				ret
                           A   969    	
                           A   970    
                           A   971    
                           A   972    		
0010D1                     A   973    n_hexbytes_to_ascii
                           A   974    
0010D1 1A                  A   975    				ld a,(de)						0010D2 CD DF 10 00         A   976    				call hexbyte_to_ascii			0010D6 1B                  A   977    				dec de
0010D7 10 F8               A   978    				djnz n_hexbytes_to_ascii
0010D9 C9                  A   979    				ret
                           A   980    			
                           A   981    			
                           A   982    
0010DA                     A   983    ext_hexbyte_to_ascii
                           A   984    
0010DA CC A4 15 00         A   985    				call z,mbase_hl
0010DE 7B                  A   986    				ld a,e
                           A   987    
0010DF                     A   988    hexbyte_to_ascii
                           A   989    
0010DF C5                  A   990    				push bc
0010E0 47                  A   991    				ld b,a							0010E1 CB3F                A   992    				srl a							0010E3 CB3F                A   993    				srl a
0010E5 CB3F                A   994    				srl a
0010E7 CB3F                A   995    				srl a
0010E9 CD FB 10 00         A   996    				call hxdigconv
0010ED 77                  A   997    				ld (hl),a
0010EE 23                  A   998    				inc hl
0010EF 78                  A   999    				ld a,b
0010F0 E60F                A  1000    				and 0fh
0010F2 CD FB 10 00         A  1001    				call hxdigconv
0010F6 77                  A  1002    				ld (hl),a
0010F7 23                  A  1003    				inc hl
0010F8 C1                  A  1004    				pop bc
0010F9 AF                  A  1005    				xor a							0010FA C9                  A  1006    				ret
                           A  1007    				
0010FB C630                A  1008    hxdigconv		add a,030h
0010FD FE3A                A  1009    				cp 03ah
0010FF 38 02               A  1010    				jr c,hxdone
001101 C607                A  1011    				add a,7
001103 C9                  A  1012    hxdone			ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  23


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1013    
                           A  1014    
                           A  1015    
                           A  1016    
001104                     A  1017    hexword_to_ascii	
                           A  1018    
001104 7A                  A  1019    				ld a,d							001105 CD DF 10 00         A  1020    				call hexbyte_to_ascii
001109 7B                  A  1021    				ld a,e
00110A CD DF 10 00         A  1022    				call hexbyte_to_ascii
00110E C9                  A  1023    				ret
                           A  1024    	
                           A  1025    
                           A  1026    
                           A  1027    
00110F                     A  1028    ext_ascii_to_hexword
                           A  1029    		
00110F CC A4 15 00         A  1030    				call z,mbase_hl
                           A  1031    
001113                     A  1032    ascii_to_hexword
                           A  1033    	
001113 CD 32 10 00         A  1034    				call os_scan_for_non_space		001117 B7                  A  1035    				or a
001118 20 04               A  1036    				jr nz,ascii_to_hex_no_scan
00111A 3E81                A  1037    				ld a,081h						00111C B7                  A  1038    				or a
00111D C9                  A  1039    				ret	
                           A  1040    
                           A  1041    	
00111E                     A  1042    ascii_to_hex_no_scan
                           A  1043    
00111E DDE5                A  1044    				push ix
001120 C5                  A  1045    				push bc
001121 DD210000 00         A  1046    				ld ix,0
001126 0606                A  1047    				ld b,6							001128 CD 54 11 00         A  1048    athlp			call ascii_to_hex_digit
00112C FEF0                A  1049    				cp 0f0h							00112E 28 17               A  1050    				jr z,athend
001130 FED0                A  1051    				cp 0d0h
001132 28 13               A  1052    				jr z,athend						001134 FE10                A  1053    				cp 16
001136 30 17               A  1054    				jr nc,badhex					001138 DD29                A  1055    				add ix,ix						00113A DD29                A  1056    				add ix,ix
00113C DD29                A  1057    				add ix,ix
00113E DD29                A  1058    				add ix,ix
001140 DDB5                A  1059    				or a,ixl
001142 DD6F                A  1060    				ld ixl,a
001144 23                  A  1061    				inc hl
001145 10 E1               A  1062    				djnz athlp
001147 DDE5                A  1063    athend			push ix
001149 D1                  A  1064    				pop de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  24


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00114A AF                  A  1065    				xor a
00114B C1                  A  1066    ath_quit		pop bc
00114C DDE1                A  1067    				pop ix							00114E C9                  A  1068    				ret
                           A  1069    		
00114F 3E82                A  1070    badhex			ld a,82h						001151 B7                  A  1071    				or a
001152 18 F7               A  1072    				jr ath_quit
                           A  1073    				
                           A  1074    	
                           A  1075    		
001154                     A  1076    ascii_to_hex_digit
                           A  1077    
001154 7E                  A  1078    				ld a,(hl)						001155 FE61                A  1079    				cp 061h
001157 38 02               A  1080    				jr c,hc_uppercase
001159 D620                A  1081    				sub 020h						00115B D63A                A  1082    hc_uppercase	sub 03ah						00115D 38 02               A  1083    				jr c,zeronine
00115F C6F9                A  1084    				add a,0f9h
001161 C60A                A  1085    zeronine		add a,0ah
001163 C9                  A  1086    				ret
                           A  1087    
                           A  1088    
                           A  1089    ;--------- Text Input / Non-numeric string func
                           A  1090    
                           A  1091    ; Waits for user to enter a string of character
                           A  1092    ; Before calling, set:  HL = destination of str
                           A  1093    ;                        E = max number of char
                           A  1094    ; Returns:   A  = number of characters in enter
                           A  1095    
                           A  1096    
001164                     A  1097    ext_user_input
001164 CC A4 15 00         A  1098    				call z,mbase_hl
                           A  1099    				
001168                     A  1100    os_user_input
001168 AF                  A  1101    				xor a
001169 32 50 65 00         A  1102    				ld (ui_index),a
00116D 22 52 65 00         A  1103    				ld (ui_string_addr),hl
001171 7B                  A  1104    				ld a,e
001172 32 51 65 00         A  1105    				ld (ui_maxchars),a
                           A  1106    				
001176 3A 7D 65 00         A  1107    				ld a,(overwrite_mode)
00117A 32 DC 67 00         A  1108    				ld (ui_im_cache),a
00117E AF                  A  1109    				xor a
00117F 32 7D 65 00         A  1110    				ld (overwrite_mode),a			                           A  1111    				
001183 CD 8D 44 00         A  1112    ui_loop			call hwsc_draw_cursor			001187 CD 91 49 00         A  1113    				call os_wait_key_press			00118B 32 F4 68 00         A  1114    				ld (current_scancode),a
00118F 78                  A  1115    				ld a,b
001190 32 F5 68 00         A  1116    				ld (current_asciicode),a		Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  25


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001194 CD 73 44 00         A  1117    				call hwsc_remove_cursor
                           A  1118    	
001198 3A F4 68 00         A  1119    				ld a,(current_scancode)
00119C FE66                A  1120    				cp 066h							00119E 20 1F               A  1121    				jr nz,os_nuibs
0011A0 3A 50 65 00         A  1122    				ld a,(ui_index)
0011A4 B7                  A  1123    				or a
0011A5 28 DC               A  1124    				jr z,ui_loop					0011A7 21 C0 67 00         A  1125    				ld hl,cursor_x					0011AB 35                  A  1126    				dec (hl)						0011AC 46                  A  1127    os_uixok		ld b,(hl)		
0011AD 3A BF 67 00         A  1128    				ld a,(cursor_y)
0011B1 4F                  A  1129    				ld c,a
0011B2 3E20                A  1130    				ld a,32
0011B4 CD 3A 44 00         A  1131    				call hwsc_plot_char
0011B8 21 50 65 00         A  1132    				ld hl,ui_index
0011BC 35                  A  1133    				dec (hl)						0011BD 18 C4               A  1134    				jr ui_loop
                           A  1135    
0011BF FE76                A  1136    os_nuibs		cp 076h							0011C1 28 6B               A  1137    				jr z,ui_aborted
0011C3 FE5A                A  1138    				cp 05ah							0011C5 28 46               A  1139    				jr z,ui_enter_pressed
                           A  1140    	
0011C7 3A 50 65 00         A  1141    				ld a,(ui_index)					0011CB 21 51 65 00         A  1142    				ld hl,ui_maxchars
0011CF BE                  A  1143    				cp (hl)
0011D0 28 B1               A  1144    				jr z,ui_loop	
                           A  1145    
0011D2 3A F5 68 00         A  1146    				ld a,(current_asciicode)		0011D6 FE20                A  1147    				cp 32							0011D8 38 A9               A  1148    				jr c,ui_loop					                           A  1149    
0011DA 57                  A  1150    ui_gtcha		ld d,a
0011DB 2A 52 65 00         A  1151    				ld hl,(ui_string_addr)
0011DF 3A 50 65 00         A  1152    				ld a,(ui_index)
0011E3 01000000            A  1153    				ld bc,0
0011E7 4F                  A  1154    				ld c,a
0011E8 09                  A  1155    				add hl,bc
0011E9 72                  A  1156    				ld (hl),d						0011EA 3C                  A  1157    				inc a
0011EB 32 50 65 00         A  1158    				ld (ui_index),a					                           A  1159    				
0011EF ED4B BF 67 00       A  1160    				ld bc,(cursor_y)				0011F4 7A                  A  1161    				ld a,d
0011F5 CD 3A 44 00         A  1162    				call hwsc_plot_char		
0011F9 21 C0 67 00         A  1163    				ld hl,cursor_x					0011FD 34                  A  1164    				inc (hl)
0011FE 3A 83 65 00         A  1165    				ld a,(charmap_columns)			001202 BE                  A  1166    				cp (hl)
001203 C2 83 11 00         A  1167    				jp nz,ui_loop
001207 3600                A  1168    				ld (hl),0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  26


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001209 C3 83 11 00         A  1169    				jp ui_loop
                           A  1170    
00120D                     A  1171    ui_enter_pressed
                           A  1172    				
00120D 3A DC 67 00         A  1173    				ld a,(ui_im_cache)				001211 32 7D 65 00         A  1174    				ld (overwrite_mode),a
001215 3A 50 65 00         A  1175    				ld a,(ui_index)					001219 B7                  A  1176    				or a
00121A 20 04               A  1177    				jr nz,ui_data
00121C 3E81                A  1178    				ld a,081h						00121E B7                  A  1179    				or a
00121F C9                  A  1180    				ret
001220 2A 52 65 00         A  1181    ui_data			ld hl,(ui_string_addr)
001224 11000000            A  1182    				ld de,0
001228 5F                  A  1183    				ld e,a
001229 19                  A  1184    				add hl,de
00122A 3600                A  1185    				ld (hl),0						00122C BF                  A  1186    				cp a							00122D C9                  A  1187    				ret
                           A  1188    
00122E 3A DC 67 00         A  1189    ui_aborted		ld a,(ui_im_cache)				001232 32 7D 65 00         A  1190    				ld (overwrite_mode),a
001236 3E80                A  1191    				ld a,080h						001238 B7                  A  1192    				or a							001239 C9                  A  1193    				ret
                           A  1194    		
                           A  1195    ;----------------------------------------------
                           A  1196    	
00123A                     A  1197    os_count_lines
                           A  1198    
00123A E5                  A  1199    				push hl							00123B 0679                A  1200    				ld b,'y'						00123D 21 C4 67 00         A  1201    				ld hl,os_linecount			
001241 34                  A  1202    				inc (hl)						001242 3A 80 65 00         A  1203    				ld a,(charmap_rows)
001246 D604                A  1204    				sub 4
001248 BE                  A  1205    				cp (hl)
001249 20 0E               A  1206    				jr nz,os_nntpo
00124B 3600                A  1207    				ld (hl),0
00124D 21 74 5C 00         A  1208    				ld hl,os_more_txt
001251 CD 94 0F 00         A  1209    				call os_print_string
001255 CD 91 49 00         A  1210    				call os_wait_key_press	
001259 E1                  A  1211    os_nntpo		pop hl
00125A C9                  A  1212    				ret
                           A  1213    
                           A  1214    ;----------------------------------------------
                           A  1215    
00125B                     A  1216    ext_compare_strings
                           A  1217    	
00125B CC A4 15 00         A  1218    				call z,mbase_hl
00125F CC B5 15 00         A  1219    				call z,mbase_de
                           A  1220    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  27


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001263                     A  1221    os_compare_strings
                           A  1222    
                           A  1223    ; both strings at HL/DE should be zero terminat
                           A  1224    ; compare will fail if string lengths are diffe
                           A  1225    ; unless count (B) is reached first
                           A  1226    ; Case is ignored
                           A  1227    ; Zero flag set on return if same
                           A  1228    
001263 E5                  A  1229    				push hl							001264 D5                  A  1230    				push de							001265 1A                  A  1231    ocslp			ld a,(de)						001266 B7                  A  1232    				or a
001267 28 0C               A  1233    				jr z,ocsbt
001269 CD A6 12 00         A  1234    				call case_insensitive_compare	00126D 20 0E               A  1235    				jr nz,ocs_diff
00126F 13                  A  1236    				inc de
001270 23                  A  1237    				inc hl
001271 10 F2               A  1238    				djnz ocslp
001273 18 04               A  1239    				jr ocs_same
001275 1A                  A  1240    ocsbt			ld a,(de)						001276 B6                  A  1241    				or (hl)
001277 20 04               A  1242    				jr nz,ocs_diff
001279 D1                  A  1243    ocs_same		pop de
00127A E1                  A  1244    				pop hl
00127B AF                  A  1245    				xor a							00127C C9                  A  1246    				ret
00127D D1                  A  1247    ocs_diff		pop de
00127E E1                  A  1248    				pop hl
00127F AF                  A  1249    				xor a							001280 3C                  A  1250    				inc a
001281 C9                  A  1251    				ret
                           A  1252    
                           A  1253    
                           A  1254    ;----------------------------------------------
                           A  1255    
001282                     A  1256    os_copy_ascii_run
                           A  1257    
                           A  1258    ;INPUT HL = source ($00 or $20 terminates)
                           A  1259    ;      DE = dest
                           A  1260    ;       b = max chars
                           A  1261    
                           A  1262    ;OUTPUT HL/DE = end of runs
                           A  1263    ;           c = char count
                           A  1264    	
001282 0E00                A  1265    				ld c,0
001284 7E                  A  1266    cpyar_lp		ld a,(hl)
001285 B7                  A  1267    				or a
001286 C8                  A  1268    				ret z
001287 FE20                A  1269    				cp 32
001289 C8                  A  1270    				ret z
00128A 12                  A  1271    				ld (de),a
00128B 23                  A  1272    				inc hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  28


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00128C 13                  A  1273    				inc de
00128D 0C                  A  1274    				inc c
00128E 10 F4               A  1275    				djnz cpyar_lp
001290 C9                  A  1276    				ret
                           A  1277    
                           A  1278    ;----------------------------------------------
                           A  1279    
001291                     A  1280    uppercasify_string
                           A  1281    
                           A  1282    ; Set HL to string location ($00 quits)
                           A  1283    ; Set B to max number of chars
                           A  1284    
001291 7E                  A  1285    				ld a,(hl)
001292 B7                  A  1286    				or a
001293 C8                  A  1287    				ret z
001294 CD 9D 12 00         A  1288    				call os_uppercasify
001298 77                  A  1289    				ld (hl),a
001299 23                  A  1290    				inc hl
00129A 10 F5               A  1291    				djnz uppercasify_string	
00129C C9                  A  1292    				ret
                           A  1293    	
                           A  1294    
00129D                     A  1295    os_uppercasify
                           A  1296    
                           A  1297    ; INPUT/OUTPUT A = ascii char to make uppercase
                           A  1298    
00129D FE61                A  1299    				cp 061h			
00129F D8                  A  1300    				ret c
0012A0 FE7B                A  1301    				cp 07bh
0012A2 D0                  A  1302    				ret nc
0012A3 D620                A  1303    				sub 020h				
0012A5 C9                  A  1304    				ret
                           A  1305    
                           A  1306    ;----------------------------------------------
                           A  1307    
0012A6                     A  1308    case_insensitive_compare
                           A  1309    
                           A  1310    ; compares A with (HL) disregarding the case of
                           A  1311    ; Zero flag set if the characters are the same
                           A  1312    ; all registers are preserved.
                           A  1313    
0012A6 C5                  A  1314    				push bc					
0012A7 4F                  A  1315    				ld c,a
                           A  1316    
0012A8 CD 9D 12 00         A  1317    				call os_uppercasify				0012AC 47                  A  1318    				ld b,a
0012AD 7E                  A  1319    				ld a,(hl)
0012AE CD 9D 12 00         A  1320    				call os_uppercasify
0012B2 B8                  A  1321    				cp b
                           A  1322    
0012B3 79                  A  1323    				ld a,c
0012B4 C1                  A  1324    				pop bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  29


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0012B5 C9                  A  1325    				ret
                           A  1326    
                           A  1327    ;----------------------------------------------
                           A  1328    
0012B6                     A  1329    os_decimal_add
                           A  1330    
                           A  1331    ;INPUT HL = source LSB, DE = dest LSB, b = numb
                           A  1332    
0012B6 C5                  A  1333    				push bc
0012B7 0E00                A  1334    				ld c,0
0012B9 1A                  A  1335    decdlp			ld a,(de)
0012BA 86                  A  1336    				add a,(hl)
0012BB 81                  A  1337    				add a,c
0012BC FE0A                A  1338    				cp 10
0012BE 38 0B               A  1339    				jr c,daddnc
0012C0 D60A                A  1340    				sub 10
0012C2 0E01                A  1341    				ld c,1
0012C4 12                  A  1342    decnclp			ld (de),a
0012C5 23                  A  1343    				inc hl
0012C6 13                  A  1344    				inc de
0012C7 10 F0               A  1345    				djnz decdlp
0012C9 C1                  A  1346    				pop bc
0012CA C9                  A  1347    				ret
0012CB 0E00                A  1348    daddnc			ld c,0
0012CD 18 F5               A  1349    				jr decnclp
                           A  1350    	
                           A  1351    ;----------------------------------------------
                           A  1352    
0012CF                     A  1353    os_hex_to_decimal
                           A  1354    
                           A  1355    ; INPUT xDE hex longword
                           A  1356    ; OUTPUT xHL = decimal LSB address (8 digits) 
                           A  1357    
       00000100            A  1358    hex_to_convert		equ scratch_pad
       00000103            A  1359    decimal_digits		equ scratch_pad+3
       0000010B            A  1360    decimal_add_digits	equ scratch_pad+3+8
                           A  1361    
0012CF ED530001 00         A  1362    				ld (hex_to_convert),de
                           A  1363    		
0012D4 210B0100            A  1364    				ld hl,decimal_add_digits
0012D8 E5                  A  1365    				push hl
0012D9 11030100            A  1366    				ld de,decimal_digits
0012DD AF                  A  1367    				xor a
0012DE 0608                A  1368    				ld b,8
0012E0 12                  A  1369    setupdec		ld (de),a
0012E1 77                  A  1370    				ld (hl),a
0012E2 23                  A  1371    				inc hl
0012E3 13                  A  1372    				inc de
0012E4 10 FA               A  1373    				djnz setupdec
0012E6 E1                  A  1374    				pop hl
0012E7 3601                A  1375    				ld (hl),1
                           A  1376    	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  30


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0012E9 21000100            A  1377    				ld hl,hex_to_convert
0012ED 0603                A  1378    				ld b,3
0012EF C5                  A  1379    decconvlp		push bc
0012F0 7E                  A  1380    				ld a,(hl)
0012F1 CD 0F 13 00         A  1381    				call decadder
0012F5 CD 28 13 00         A  1382    				call decaddx16
0012F9 7E                  A  1383    				ld a,(hl)
0012FA 0F                  A  1384    				rrca
0012FB 0F                  A  1385    				rrca
0012FC 0F                  A  1386    				rrca
0012FD 0F                  A  1387    				rrca
0012FE CD 0F 13 00         A  1388    				call decadder
001302 CD 28 13 00         A  1389    				call decaddx16
001306 C1                  A  1390    				pop bc
001307 23                  A  1391    				inc hl
001308 10 E5               A  1392    				djnz decconvlp
00130A 21030100            A  1393    				ld hl,decimal_digits
00130E C9                  A  1394    				ret
                           A  1395    
                           A  1396    
                           A  1397    
00130F E60F                A  1398    decadder		and 15
001311 C8                  A  1399    				ret z
001312 47                  A  1400    				ld b,a
001313 E5                  A  1401    				push hl
001314 C5                  A  1402    daddlp			push bc
001315 11030100            A  1403    				ld de,decimal_digits
001319 210B0100            A  1404    				ld hl,decimal_add_digits
00131D 0608                A  1405    				ld b,8
00131F CD B6 12 00         A  1406    				call os_decimal_add
001323 C1                  A  1407    				pop bc
001324 10 EE               A  1408    				djnz daddlp	
001326 E1                  A  1409    				pop hl
001327 C9                  A  1410    				ret
                           A  1411    			
                           A  1412    				
001328 E5                  A  1413    decaddx16		push hl
001329 0604                A  1414    				ld b,4							00132B C5                  A  1415    x16loop			push bc
00132C 110B0100            A  1416    				ld de,decimal_add_digits
001330 210B0100            A  1417    				ld hl,decimal_add_digits
001334 0608                A  1418    				ld b,8
001336 CD B6 12 00         A  1419    				call os_decimal_add
00133A C1                  A  1420    				pop bc
00133B 10 EE               A  1421    				djnz x16loop	
00133D E1                  A  1422    				pop hl
00133E C9                  A  1423    				ret
                           A  1424    	
                           A  1425    	
                           A  1426    ;----------------------------------------------
                           A  1427    
00133F                     A  1428    os_show_decimal
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  31


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1429    
00133F 11 2F 68 00         A  1430    				ld de,output_line				001343 01090000            A  1431    				ld bc,9
001347 09                  A  1432    				add hl,bc
001348 060A                A  1433    				ld b,10
00134A 7E                  A  1434    shdeclp			ld a,(hl)
00134B B7                  A  1435    				or a
00134C 28 04               A  1436    				jr z,dnodigit
00134E C630                A  1437    				add a,030h
001350 12                  A  1438    				ld (de),a
001351 13                  A  1439    				inc de
001352 2B                  A  1440    dnodigit		dec hl
001353 10 F5               A  1441    				djnz shdeclp
001355 AF                  A  1442    				xor a
001356 12                  A  1443    				ld (de),a
001357 CD 9F 13 00         A  1444    				call os_print_output_line
00135B C9                  A  1445    				ret
                           A  1446    				
                           A  1447    ;----------------------------------------------
                           A  1448    		
00135C                     A  1449    os_copy_to_output_line
                           A  1450    	
00135C D5                  A  1451    				push de
00135D C5                  A  1452    				push bc
00135E 11 2F 68 00         A  1453    				ld de,output_line				001362 01510000            A  1454    				ld bc,max_buffer_chars+1		001366 EDA0                A  1455    os_cloll		ldi
001368 7E                  A  1456    				ld a,(hl)
001369 B7                  A  1457    				or a
00136A 28 04               A  1458    				jr z,os_clold
00136C 78                  A  1459    				ld a,b
00136D B1                  A  1460    				or c
00136E 20 F6               A  1461    				jr nz,os_cloll
001370 12                  A  1462    os_clold		ld (de),a
001371 C1                  A  1463    				pop bc
001372 D1                  A  1464    				pop de
001373 C9                  A  1465    				ret
                           A  1466    
                           A  1467    
                           A  1468    ;----------------------------------------------
                           A  1469    
001374                     A  1470    os_show_hex_address
                           A  1471    
001374 E5                  A  1472    				push hl							001375 21 2F 68 00         A  1473    				ld hl,output_line
001379 ED53 D1 67 00       A  1474    				ld (hex_address),de
00137E 3A D3 67 00         A  1475    				ld a,(hex_address+2)
001382 CD DF 10 00         A  1476    				call hexbyte_to_ascii
001386 18 10               A  1477    				jr shw_nt
                           A  1478    				
                           A  1479    
001388                     A  1480    os_show_hex_byte
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  32


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1481    
001388 E5                  A  1482    				push hl							001389 21 2F 68 00         A  1483    				ld hl,output_line
00138D CD DF 10 00         A  1484    				call hexbyte_to_ascii
001391 18 09               A  1485    				jr shb_nt
                           A  1486    
                           A  1487    
                           A  1488    
001393                     A  1489    os_show_hex_word
                           A  1490    
001393 E5                  A  1491    				push hl							001394 21 2F 68 00         A  1492    				ld hl,output_line
001398 CD 04 11 00         A  1493    shw_nt			call hexword_to_ascii
00139C 3600                A  1494    shb_nt			ld (hl),0
00139E E1                  A  1495    				pop hl
                           A  1496    
                           A  1497    	
                           A  1498    
00139F                     A  1499    os_print_output_line
                           A  1500    
00139F E5                  A  1501    				push hl
0013A0 21 2F 68 00         A  1502    				ld hl,output_line
0013A4 CD 94 0F 00         A  1503    cproline		call os_print_string
0013A8 E1                  A  1504    				pop hl
0013A9 C9                  A  1505    				ret
                           A  1506    
                           A  1507    
                           A  1508    
0013AA                     A  1509    os_print_output_line_skip_zeroes
                           A  1510    
0013AA E5                  A  1511    				push hl
0013AB 21 2F 68 00         A  1512    				ld hl,output_line
0013AF CD BC 10 00         A  1513    				call os_skip_leading_ascii_zero
0013B3 18 EF               A  1514    				jr cproline
                           A  1515    				
                           A  1516    		
                           A  1517    ;----------------------------------------------
                           A  1518    
0013B5                     A  1519    os_store_CPU_regs
                           A  1520    
0013B5 F3                  A  1521    				di								                           A  1522    
0013B6 33                  A  1523    				inc sp							0013B7 33                  A  1524    				inc sp
0013B8 33                  A  1525    				inc sp
0013B9 ED73 4D 67 00       A  1526    				ld (store_spl),sp
0013BE 3B                  A  1527    				dec sp							0013BF 3B                  A  1528    				dec sp
0013C0 3B                  A  1529    				dec sp
                           A  1530    				
0013C1 F5                  A  1531    				push af
0013C2 32 30 67 00         A  1532    				ld (store_a1),a					Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  33


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0013C6 08                  A  1533    				ex af,af'
0013C7 32 3A 67 00         A  1534    				ld (store_a2),a
0013CB 08                  A  1535    				ex af,af'
0013CC ED43 31 67 00       A  1536    				ld (store_bc1),bc		
0013D1 ED53 34 67 00       A  1537    				ld (store_de1),de
0013D6 22 37 67 00         A  1538    				ld (store_hl1),hl
0013DA D9                  A  1539    				exx
0013DB ED43 3B 67 00       A  1540    				ld (store_bc2),bc
0013E0 ED53 3E 67 00       A  1541    				ld (store_de2),de
0013E5 22 41 67 00         A  1542    				ld (store_hl2),hl
0013E9 D9                  A  1543    				exx
0013EA DD22 44 67 00       A  1544    				ld (store_ix),ix
0013EF FD22 47 67 00       A  1545    				ld (store_iy),iy
                           A  1546    				
0013F4 ED6E                A  1547    			    ld a,MB
0013F6 32 52 67 00         A  1548    				ld (store_mbase),a
                           A  1549    								
0013FA C5                  A  1550    				push bc
0013FB 0600                A  1551    				ld b,0
0013FD 20 02               A  1552    				jr nz,zfstzero					0013FF CBF0                A  1553    				set 6,b
                           A  1554    
001401 30 02               A  1555    zfstzero		jr nc,cfstzero					001403 CBC0                A  1556    				set 0,b
                           A  1557    
001405 F2 0B 14 00         A  1558    cfstzero		jp p,sfstzero					001409 CBF8                A  1559    				set 7,b
                           A  1560    
00140B EA 11 14 00         A  1561    sfstzero		jp pe,pfstzero					00140F CBD0                A  1562    				set 2,b
                           A  1563    
001411 ED57                A  1564    pfstzero		ld a,i			
001413 EA 19 14 00         A  1565    				jp pe,ifstzero					001417 CBE0                A  1566    				set 4,b
                           A  1567    
001419 78                  A  1568    ifstzero		ld a,b
00141A 32 53 67 00         A  1569    				ld (store_f),a
                           A  1570    				
00141E 3E00                A  1571    				ld a,os_location/65536			001420 ED6D                A  1572    				ld MB,a							001422 40ED73 50 67        A  1573    				ld.sis (store_sps),sp
001427 3A 52 67 00         A  1574    				ld a,(store_mbase)				00142B ED6D                A  1575    				ld MB,a
                           A  1576    				
00142D C1                  A  1577    				pop bc
00142E F1                  A  1578    				pop af
00142F FB                  A  1579    				ei
001430 C9                  A  1580    				ret
                           A  1581    
                           A  1582    
                           A  1583    
001431                     A  1584    os_dont_store_registers
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  34


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1585    
001431 AF                  A  1586    				xor a
001432 32 58 67 00         A  1587    				ld (store_registers),a			001436 C9                  A  1588    				ret
                           A  1589    	
                           A  1590    	
                           A  1591    ;----------------------------------------------
                           A  1592    
001437                     A  1593    os_new_line_cond
                           A  1594    
001437 CD 0E 1A 00         A  1595    				call test_quiet_mode
00143B C0                  A  1596    				ret nz
                           A  1597    
                           A  1598    	
00143C                     A  1599    os_new_line
                           A  1600    
00143C E5                  A  1601    				push hl
00143D 21 8C 5C 00         A  1602    				ld hl,crlfx2_txt+1
001441 CD 94 0F 00         A  1603    				call os_print_string
001445 E1                  A  1604    				pop hl
001446 C9                  A  1605    				ret
                           A  1606    				
                           A  1607    ;----------------------------------------------
                           A  1608    
001447                     A  1609    os_set_cursor_position
                           A  1610    				
                           A  1611    												001447 3A 80 65 00         A  1612    				ld a,(charmap_rows)				00144B 3D                  A  1613    				dec a							00144C B9                  A  1614    				cp c
00144D 38 14               A  1615    				jr c,badpos
00144F 79                  A  1616    				ld a,c
001450 32 BF 67 00         A  1617    				ld (cursor_y),a
                           A  1618    				
001454 3A 83 65 00         A  1619    				ld a,(charmap_columns)
001458 3D                  A  1620    				dec a
001459 B8                  A  1621    				cp b
00145A 38 07               A  1622    				jr c,badpos
00145C 78                  A  1623    				ld a,b
00145D 32 C0 67 00         A  1624    				ld (cursor_x),a
001461 AF                  A  1625    				xor a
001462 C9                  A  1626    				ret				
                           A  1627    
001463 3E88                A  1628    badpos			ld a,88h						001465 B7                  A  1629    				or a
001466 C9                  A  1630    				ret
                           A  1631    
                           A  1632    
                           A  1633    					
                           A  1634    	
                           A  1635    	
001467                     A  1636    os_get_cursor_position
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  35


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1637    
001467 ED4B BF 67 00       A  1638    				ld bc,(cursor_pos)				00146C BF                  A  1639    				cp a							00146D C9                  A  1640    				ret
                           A  1641    
                           A  1642    
                           A  1643    ;----------------------------------------------
                           A  1644    
00146E                     A  1645    os_show_packed_text_cond
                           A  1646    
00146E CD 0E 1A 00         A  1647    				call test_quiet_mode
001472 C0                  A  1648    				ret nz
                           A  1649    
                           A  1650    	
001473                     A  1651    os_show_packed_text
                           A  1652    
                           A  1653    ; Construct sentence from internal dictionary u
                           A  1654    	
001473 C5                  A  1655    				push bc
001474 D5                  A  1656    				push de
001475 DDE5                A  1657    				push ix
001477 DD21 2F 68 00       A  1658    				ld ix,output_line
00147C 7E                  A  1659    readpind		ld a,(hl)
00147D B7                  A  1660    				or a
00147E 20 10               A  1661    				jr nz,getword					001480 DD2B                A  1662    				dec ix							001482 DD7700              A  1663    				ld (ix),a						                           A  1664    			
001485 E5                  A  1665    				push hl
001486 CD 9F 13 00         A  1666    				call os_print_output_line
00148A E1                  A  1667    				pop hl
                           A  1668    			
00148B DDE1                A  1669    				pop ix
00148D D1                  A  1670    				pop de
00148E C1                  A  1671    				pop bc
00148F C9                  A  1672    				ret
                           A  1673    				
001490 11 F6 5C 00         A  1674    getword			ld de,dictionary-1
001494 0E00                A  1675    				ld c,0
001496 13                  A  1676    dictloop		inc de
001497 1A                  A  1677    				ld a,(de)
001498 B7                  A  1678    				or a							001499 28 04               A  1679    				jr z,faword
00149B CB7F                A  1680    				bit 7,a							00149D 28 F7               A  1681    				jr z,dictloop	
                           A  1682    			
00149F 0C                  A  1683    faword			inc c							0014A0 79                  A  1684    				ld a,c
0014A1 BE                  A  1685    				cp (hl)
0014A2 20 F2               A  1686    				jr nz,dictloop
0014A4 13                  A  1687    copytol			inc de							0014A5 1A                  A  1688    				ld a,(de)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  36


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0014A6 B7                  A  1689    				or a
0014A7 28 0B               A  1690    				jr z,eoword						0014A9 CB7F                A  1691    				bit 7,a
0014AB 20 07               A  1692    				jr nz,eoword
0014AD DD7700              A  1693    				ld (ix),a						0014B0 DD23                A  1694    				inc ix
0014B2 18 F0               A  1695    				jr copytol
0014B4 DD360020            A  1696    eoword			ld (ix),32						0014B8 DD23                A  1697    				inc ix
0014BA 23                  A  1698    				inc hl
0014BB 18 BF               A  1699    				jr readpind
                           A  1700    
                           A  1701    
                           A  1702    		
                           A  1703    ;--------- Mouse functions --------------------
                           A  1704    
0014BD                     A  1705    os_set_mouse_window
                           A  1706    
                           A  1707    ; Set: HL/DE = window size mouse pointer is to 
                           A  1708    	
0014BD 22 06 69 00         A  1709    				ld (mouse_window_size_x),hl	 
0014C1 ED53 09 69 00       A  1710    				ld (mouse_window_size_y),de
0014C6 21000000            A  1711    				ld hl,0
0014CA 22 0C 69 00         A  1712    				ld (mouse_abs_x),hl
0014CE 22 0F 69 00         A  1713    				ld (mouse_abs_y),hl
0014D2 3E01                A  1714    				ld a,1
0014D4 32 1E 69 00         A  1715    				ld (mouse_new_window),a
0014D8 AF                  A  1716    				xor a
0014D9 C9                  A  1717    				ret
                           A  1718    				
                           A  1719    			
0014DA                     A  1720    os_get_mouse_motion
                           A  1721    			
                           A  1722    ; Returns: ZF = Set: Relative X coord in HL, Re
                           A  1723    ;          ZF = Not set: Mouse driver not initi
                           A  1724    			
0014DA 3A 1A 67 00         A  1725    				ld a,(devices_connected)
0014DE E602                A  1726    				and 2
0014E0 EE02                A  1727    				xor 2
0014E2 C0                  A  1728    				ret nz
                           A  1729    				
0014E3 AF                  A  1730    ms_reread		xor a
0014E4 32 05 69 00         A  1731    				ld (mouse_updated),a
0014E8 2A FE 68 00         A  1732    				ld hl,(mouse_disp_x)			0014EC ED5B 01 69 00       A  1733    				ld de,(mouse_disp_y)
0014F1 3A 05 69 00         A  1734    				ld a,(mouse_updated)			0014F5 B7                  A  1735    				or a
0014F6 20 EB               A  1736    				jr nz,ms_reread
0014F8 AF                  A  1737    mouse_end		xor a
0014F9 3A 04 69 00         A  1738    				ld a,(mouse_wheel)
0014FD 47                  A  1739    				ld b,a
0014FE 3A FD 68 00         A  1740    				ld a,(mouse_buttons)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  37


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001502 C9                  A  1741    				ret
                           A  1742    			
                           A  1743    			
001503                     A  1744    os_get_mouse_position
                           A  1745    
                           A  1746    ; Returns: ZF = Set: Abolute X coord in HL, Abs
                           A  1747    ;          ZF = Not set: Mouse driver not initi
                           A  1748    
001503 3A 1A 67 00         A  1749    				ld a,(devices_connected)
001507 E602                A  1750    				and 2
001509 EE02                A  1751    				xor 2
00150B C0                  A  1752    				ret nz
                           A  1753    				
00150C AF                  A  1754    ms_reread_abs	xor a
00150D 32 05 69 00         A  1755    				ld (mouse_updated),a
                           A  1756    
001511 2A 0C 69 00         A  1757    				ld hl,(mouse_abs_x)
001515 ED5B 0F 69 00       A  1758    				ld de,(mouse_abs_y)
00151A 3A 05 69 00         A  1759    				ld a,(mouse_updated)			00151E B7                  A  1760    				or a
00151F 20 EB               A  1761    				jr nz,ms_reread_abs
                           A  1762    				
001521 18 D5               A  1763    				jr mouse_end
                           A  1764    				
                           A  1765    	
                           A  1766    ;==============================================
                           A  1767    ;----- General Subroutines --------------------
                           A  1768    ;==============================================
                           A  1769    
                           A  1770    ; .--------------.
                           A  1771    ; ! CRC Checksum !
                           A  1772    ; '--------------'
                           A  1773    
                           A  1774    ; makes 16 bit checksum in HL, src addr = DE, l
                           A  1775    
001523                     A  1776    crc_checksum
                           A  1777    
001523 21FFFF00            A  1778    				ld hl,0ffffh		
001527 1A                  A  1779    crcloop			ld a,(de)			
001528 AC                  A  1780    				xor h			
001529 67                  A  1781    				ld h,a			
00152A 0608                A  1782    				ld b,8
00152C 4029                A  1783    crcbyte			add.sis hl,hl					00152E 30 08               A  1784    				jr nc,crcnext
001530 7C                  A  1785    				ld a,h
001531 EE10                A  1786    				xor 10h
001533 67                  A  1787    				ld h,a
001534 7D                  A  1788    				ld a,l
001535 EE21                A  1789    				xor 21h
001537 6F                  A  1790    				ld l,a
001538 10 F2               A  1791    crcnext			djnz crcbyte
00153A 13                  A  1792    				inc de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  38


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00153B 0D                  A  1793    				dec c
00153C 20 E9               A  1794    				jr nz,crcloop
00153E C9                  A  1795    				ret
                           A  1796    
                           A  1797    
                           A  1798    ;----------------------------------------------
                           A  1799    
00153F                     A  1800    os_get_key_mod_flags
                           A  1801    
00153F 3A F3 68 00         A  1802    				ld a,(key_mod_flags)
001543 BF                  A  1803    				cp a							001544 C9                  A  1804    				ret
                           A  1805    
                           A  1806    ;----------------------------------------------
                           A  1807    
001545                     A  1808    os_get_vmode
                           A  1809    			
001545 3A 80 65 00         A  1810    				ld a,(charmap_rows)
001549 4F                  A  1811    				ld c,a
00154A 3A 83 65 00         A  1812    				ld a,(charmap_columns)
00154E 47                  A  1813    				ld b,a
00154F 3A 55 65 00         A  1814    				ld a,(video_mode)
001553 BF                  A  1815    				cp a						; Z
001554 C9                  A  1816    				ret
                           A  1817    
                           A  1818    ;----------------------------------------------
                           A  1819    
001555 7B                  A  1820    ext_set_vmode	ld a,e
                           A  1821    
001556 FE04                A  1822    os_set_vmode	cp 4
001558 38 04               A  1823    				jr c,vm_range_ok
00155A 3E88                A  1824    				ld a,88h					;ou
00155C B7                  A  1825    				or a
00155D C9                  A  1826    				ret
                           A  1827    				
00155E 32 55 65 00         A  1828    vm_range_ok		ld (video_mode),a
001562 21030000            A  1829    				ld hl,3
001566 67                  A  1830    				ld h,a
001567 ED6C                A  1831    				mlt hl
001569 11 86 65 00         A  1832    				ld de,vmode_parameter_list
00156D 19                  A  1833    				add hl,de
00156E 7E                  A  1834    				ld a,(hl)
00156F 23                  A  1835    				inc hl
001570 46                  A  1836    				ld b,(hl)
001571 23                  A  1837    				inc hl
001572 4E                  A  1838    				ld c,(hl)
001573 CD 22 43 00         A  1839    				call set_charmap_parameters
                           A  1840    				
001577 CD C4 43 00         A  1841    				call hwsc_clear_screen
                           A  1842    
00157B AF                  A  1843    				xor a				
00157C C9                  A  1844    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  39


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1845    
                           A  1846    
                           A  1847    ;----------------------------------------------
                           A  1848    
00157D                     A  1849    os_bchl_memfill
                           A  1850    
                           A  1851    ; fill memory from xHL with A. Count in xBC.
                           A  1852    		
00157D 77                  A  1853    mf_loop			ld (hl),a
00157E EDA1                A  1854    				cpi								001580 EA 7D 15 00         A  1855    				jp pe,mf_loop
001584 C9                  A  1856    				ret
                           A  1857    	
                           A  1858    ;----------------------------------------------
                           A  1859    
001585 7B                  A  1860    ext_set_pen		ld a,e
                           A  1861    
001586 32 56 65 00         A  1862    os_set_pen		ld (current_pen),a
00158A BF                  A  1863    				cp a							00158B C9                  A  1864    				ret
                           A  1865    
                           A  1866    ;----------------------------------------------
                           A  1867    	
00158C 3A 56 65 00         A  1868    os_get_pen		ld a,(current_pen)
001590 BF                  A  1869    				cp a							001591 C9                  A  1870    				ret	
                           A  1871    
                           A  1872    ;----------------------------------------------
                           A  1873    
001592                     A  1874    ext_background_colours
                           A  1875    				
001592 CC A4 15 00         A  1876    				call z,mbase_hl
001596 C3 B8 43 00         A  1877    				jp hswc_set_ui_colours
                           A  1878    				
                           A  1879    				
                           A  1880    ;----------------------------------------------
                           A  1881    
00159A                     A  1882    os_get_xde_msb	
                           A  1883    			
00159A ED53 D7 67 00       A  1884    				ld (xrr_temp),de				00159F 3A D9 67 00         A  1885    				ld a,(xrr_temp+2)
0015A3 C9                  A  1886    				ret
                           A  1887    
                           A  1888    ;----------------------------------------------
                           A  1889    
0015A4 F5                  A  1890    mbase_hl		push af
0015A5 22 D7 67 00         A  1891    				ld (xrr_temp),hl				0015A9 ED6E                A  1892    				ld a,MB
0015AB 32 D9 67 00         A  1893    				ld (xrr_temp+2),a
0015AF 2A D7 67 00         A  1894    				ld hl,(xrr_temp)
0015B3 F1                  A  1895    				pop af
0015B4 C9                  A  1896    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  40


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  1897    				
0015B5 F5                  A  1898    mbase_de		push af
0015B6 ED53 D7 67 00       A  1899    				ld (xrr_temp),de				0015BB ED6E                A  1900    				ld a,MB
0015BD 32 D9 67 00         A  1901    				ld (xrr_temp+2),a
0015C1 ED5B D7 67 00       A  1902    				ld de,(xrr_temp)
0015C6 F1                  A  1903    				pop af
0015C7 C9                  A  1904    				ret
                           A  1905    
                           A  1906    
                           A  1907    ;----------------------------------------------
                           A  1908    ; Unpacks Phil's Z80P_RLE packed files - V1.02 
                           A  1909    ;----------------------------------------------
                           A  1910    
0015C8                     A  1911    unpack_rle
                           A  1912    
                           A  1913    ;set xHL = source address of packed file
                           A  1914    ;set xDE = destination address for unpacked dat
                           A  1915    ;set xBC = length of packed file
                           A  1916    
0015C8 E5                  A  1917    			push hl	
0015C9 DDE1                A  1918    			pop ix
0015CB 0B                  A  1919    			dec bc								0015CC 23                  A  1920    			inc hl
0015CD DD7E00              A  1921    unp_gtok	ld a,(ix)							0015D0 BE                  A  1922    unp_next	cp (hl)								0015D1 28 07               A  1923    			jr z,unp_brun						0015D3 EDA0                A  1924    			ldi									0015D5 EA D0 15 00         A  1925    			jp pe,unp_next						0015D9 C9                  A  1926    			ret
                           A  1927    	
0015DA C5                  A  1928    unp_brun	push bc								0015DB 23                  A  1929    			inc hl		
0015DC 7E                  A  1930    			ld a,(hl)							0015DD 23                  A  1931    			inc hl		
0015DE 46                  A  1932    			ld b,(hl)							0015DF 23                  A  1933    			inc hl
                           A  1934    	
0015E0 12                  A  1935    unp_rllp	ld (de),a							0015E1 13                  A  1936    			inc de			
0015E2 10 FC               A  1937    			djnz unp_rllp
                           A  1938    	
0015E4 C1                  A  1939    			pop bc	
0015E5 0B                  A  1940    			dec bc								0015E6 0B                  A  1941    			dec bc
0015E7 0B                  A  1942    			dec bc
0015E8 E5                  A  1943    			push hl								0015E9 21000000            A  1944    			ld hl,0
0015ED B7                  A  1945    			or a
0015EE ED4A                A  1946    			adc hl,bc
0015F0 E1                  A  1947    			pop hl
0015F1 20 DA               A  1948    			jr nz,unp_gtok
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  41


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0015F3 C9                  A  1949    			ret	
                           A  1950    	
                           A  1951    ;----------------------------------------------
                           A  1952    ; Commonly called error messages - gets message
                           A  1953    ;----------------------------------------------
                           A  1954    
                           A  1955    
0015F4 3E0D                A  1956    os_no_fn_error		ld a,0dh
0015F6 B7                  A  1957    					or a
0015F7 C9                  A  1958    					ret
                           A  1959    			
0015F8 3E15                A  1960    os_fn_too_long		ld a,15h
0015FA B7                  A  1961    					or a
0015FB C9                  A  1962    					ret
                           A  1963    				
0015FC 3E16                A  1964    os_no_start_addr	ld a,16h
0015FE B7                  A  1965    					or a
0015FF C9                  A  1966    					ret
                           A  1967    			
001600 3E17                A  1968    os_no_filesize		ld a,17h
001602 B7                  A  1969    					or a
001603 C9                  A  1970    					ret
                           A  1971    			
001604 3E18                A  1972    os_abort_save		ld a,18h
001606 B7                  A  1973    					or a
001607 C9                  A  1974    					ret
                           A  1975    			
001608 3E1C                A  1976    os_no_e_addr_error	ld a,1ch
00160A B7                  A  1977    					or a
00160B C9                  A  1978    					ret
                           A  1979    			
00160C 3E1D                A  1980    os_no_d_addr_error	ld a,1dh
00160E B7                  A  1981    					or a
00160F C9                  A  1982    					ret
                           A  1983    				
001610 3E1E                A  1984    os_range_error		ld a,1eh
001612 B7                  A  1985    					or a
001613 C9                  A  1986    					ret
                           A  1987    			
001614 3E1F                A  1988    os_no_args_error	ld a,1fh
001616 B7                  A  1989    					or a
001617 C9                  A  1990    					ret	
                           A  1991    
                           A  1992    ;----------------------------------------------
                           A  1993    
                           A  1994    ; Set xHL to address of zero terminated filenam
                           A  1995    ; RETURNS:	C:xDE  = File length
                           A  1996    ;    		HL     = Start cluster of file
                           A  1997    
001618 CC A4 15 00         A  1998    ext_find_file	call z,mbase_hl
                           A  1999    
00161C CD 41 58 00         A  2000    os_find_file	call fs_hl_to_filename
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  42


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001620 CD A8 4F 00         A  2001    				call fs_open_file_command		001624 38 01               A  2002    				jr c,os_fferr					001626 C9                  A  2003    				ret								                           A  2004    					
001627 47                  A  2005    os_fferr		ld b,a							001628 AF                  A  2006    				xor a			
001629 3C                  A  2007    				inc a							00162A C9                  A  2008    				ret	
                           A  2009    
                           A  2010    ;----------------------------------------------
                           A  2011    
00162B                     A  2012    os_set_load_length
                           A  2013    
00162B ED53 C6 5A 00       A  2014    				ld (fs_file_transfer_length),de
001630 BF                  A  2015    				cp a							001631 C9                  A  2016    				ret
                           A  2017    				
                           A  2018    ;----------------------------------------------
                           A  2019    
001632                     A  2020    ext_set_file_pointer
                           A  2021    
001632 79                  A  2022    				ld a,c
                           A  2023    				
001633                     A  2024    os_set_file_pointer
                           A  2025    
                           A  2026    ; Moves the 'start of file' pointer allowing ra
                           A  2027    ; Note: File pointer is reset by opening a file
                           A  2028    ; by normal read function.
                           A  2029    
001633 ED53 BA 5A 00       A  2030    				ld (fs_file_pointer),de			001638 32 BD 5A 00         A  2031    				ld (fs_file_pointer+3),a
00163C F5                  A  2032    				push af
00163D AF                  A  2033    				xor a
00163E 32 EC 5A 00         A  2034    				ld (fs_filepointer_valid),a		001642 F1                  A  2035    				pop af
001643 BF                  A  2036    				cp a							001644 C9                  A  2037    				ret
                           A  2038    				
                           A  2039    ;----------------------------------------------
                           A  2040    
                           A  2041    ; set xHL = load address 
                           A  2042    ; (Before calling this routine, call os_find_fi
                           A  2043    
001645                     A  2044    ext_read_bytes_from_file
                           A  2045    
001645 CC A4 15 00         A  2046    				call z,mbase_hl					                           A  2047    				
001649                     A  2048    os_read_bytes_from_file
                           A  2049    
001649 22 CF 5A 00         A  2050    				ld (fs_ez80_address),hl			00164D CD FB 4F 00         A  2051    				call fs_read_data_command
001651 38 D4               A  2052    				jr c,os_fferr
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  43


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001653 C9                  A  2053    				ret
                           A  2054    
                           A  2055    ;----------------------------------------------
                           A  2056    
                           A  2057    ; Before calling, set xHL = address of zero ter
                           A  2058    
001654 CC A4 15 00         A  2059    ext_create_file	call z,mbase_hl
                           A  2060    
001658 CD 41 58 00         A  2061    os_create_file	call fs_hl_to_filename
00165C CD D3 52 00         A  2062    				call fs_create_file_command		001660 DA 27 16 00         A  2063    				jp c,os_fferr					001664 C9                  A  2064    				ret
                           A  2065    
                           A  2066    ;----------------------------------------------
                           A  2067    
001665                     A  2068    ext_write_bytes_to_file
                           A  2069    
001665 CC A4 15 00         A  2070    				call z,mbase_hl
001669 CC B5 15 00         A  2071    				call z,mbase_de
                           A  2072    
00166D                     A  2073    os_write_bytes_to_file
                           A  2074    
                           A  2075    ; Before calling, set..
                           A  2076    
                           A  2077    ; xDE   = address to save data from
                           A  2078    ; xBC   = number of bytes to save
                           A  2079    ; xHL   = address of null-terminated ascii name
                           A  2080    
                           A  2081    ; On return:
                           A  2082    
                           A  2083    ; If zero flag NOT set, there was an error.
                           A  2084    ; If   A = $00, b = hardware error code
                           A  2085    ; Else A = File system error code
                           A  2086    
                           A  2087    ; NOTE:
                           A  2088    ; Will return 'file not found' if the file has 
                           A  2089    				
00166D ED43 C6 5A 00       A  2090    				ld (fs_file_transfer_length),bc
001672 ED53 CF 5A 00       A  2091    				ld (fs_ez80_address),de	 	
001677 CD 41 58 00         A  2092    				call fs_hl_to_filename
00167B CD 05 53 00         A  2093    				call fs_write_bytes_to_file_com
00167F DA 27 16 00         A  2094    				jp c,os_fferr
001683 C9                  A  2095    				ret
                           A  2096    		
                           A  2097    		
                           A  2098    ;----------------------------------------------
                           A  2099    	
                           A  2100    
001684                     A  2101    os_check_volume_format
                           A  2102    
001684 CD FF 4D 00         A  2103    				call fs_check_disk_format
001688 DA 27 16 00         A  2104    os_rffsc		jp c,os_fferr
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  44


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00168C C9                  A  2105    				ret
                           A  2106    
                           A  2107    ;----------------------------------------------
                           A  2108    
                           A  2109    
00168D 7B                  A  2110    ext_format		ld a,e
00168E CC A4 15 00         A  2111    				call z,mbase_hl					                           A  2112    
001692 E5                  A  2113    os_format		push hl							001693 CD A1 1A 00         A  2114    				call dev_to_driver_lookup
001697 E1                  A  2115    				pop hl
001698 38 04               A  2116    				jr c,sdevok
00169A 3ED0                A  2117    				ld a,0d0h						00169C B7                  A  2118    				or a
00169D C9                  A  2119    				ret
                           A  2120    
00169E F5                  A  2121    sdevok			push af				
00169F 11 96 5A 00         A  2122    				ld de,fs_sought_filename
0016A3 CD 50 59 00         A  2123    				call fs_clear_filename
0016A7 060B                A  2124    				ld b,11
0016A9 CD 82 12 00         A  2125    				call os_copy_ascii_run
0016AD F1                  A  2126    				pop af
                           A  2127    				
0016AE 21 DF 65 00         A  2128    				ld hl,current_driver
0016B2 46                  A  2129    				ld b,(hl)
0016B3 77                  A  2130    				ld (hl),a
0016B4 C5                  A  2131    				push bc
0016B5 E5                  A  2132    				push hl
0016B6 CD 74 4C 00         A  2133    				call fs_format_device_command
0016BA E1                  A  2134    				pop hl
0016BB C1                  A  2135    				pop bc
0016BC 70                  A  2136    				ld (hl),b
0016BD 18 C9               A  2137    				jr os_rffsc
                           A  2138    
                           A  2139    
                           A  2140    ;----------------------------------------------
                           A  2141    
                           A  2142    
0016BF CC A4 15 00         A  2143    ext_make_dir	call z,mbase_hl					                           A  2144    
0016C3 CD 41 58 00         A  2145    os_make_dir		call fs_hl_to_filename
0016C7 CD 4B 51 00         A  2146    				call fs_make_dir_command
0016CB 18 BB               A  2147    				jr os_rffsc
                           A  2148    
                           A  2149    
                           A  2150    ;----------------------------------------------
                           A  2151    
                           A  2152    
0016CD CC A4 15 00         A  2153    ext_change_dir	call z,mbase_hl					                           A  2154    
0016D1 CD 41 58 00         A  2155    os_change_dir	call fs_hl_to_filename
0016D5 CD 52 4F 00         A  2156    				call fs_change_dir_command
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  45


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0016D9 18 AD               A  2157    				jr os_rffsc
                           A  2158    				
                           A  2159    	
                           A  2160    ;----------------------------------------------
                           A  2161    	
                           A  2162    	
0016DB CD 85 4F 00         A  2163    os_parent_dir	call fs_parent_dir_command
0016DF 18 A7               A  2164    				jr os_rffsc
                           A  2165    				
                           A  2166    
                           A  2167    ;----------------------------------------------
                           A  2168    
                           A  2169    	
0016E1 CD 79 4F 00         A  2170    os_root_dir		call fs_goto_root_dir_command
0016E5 18 A1               A  2171    				jr os_rffsc
                           A  2172    
                           A  2173    
                           A  2174    ;----------------------------------------------
                           A  2175    
                           A  2176    
0016E7 CC A4 15 00         A  2177    ext_erase_file	call z,mbase_hl					                           A  2178    
0016EB CD 41 58 00         A  2179    os_erase_file	call fs_hl_to_filename
0016EF CD 9C 54 00         A  2180    				call fs_erase_file_command
0016F3 18 93               A  2181    				jr os_rffsc
                           A  2182    	
                           A  2183    
                           A  2184    ;----------------------------------------------
                           A  2185    
                           A  2186    
0016F5                     A  2187    os_goto_first_dir_entry	
                           A  2188    
0016F5 CD F7 54 00         A  2189    				call fs_goto_first_dir_entry
0016F9 18 8D               A  2190    				jr os_rffsc
                           A  2191    
                           A  2192    
                           A  2193    ;----------------------------------------------
                           A  2194    
                           A  2195    
0016FB                     A  2196    os_get_dir_entry		
                           A  2197    
0016FB CD 0E 55 00         A  2198    				call fs_get_dir_entry	
0016FF 18 87               A  2199    				jr os_rffsc
                           A  2200    
                           A  2201    
                           A  2202    ;----------------------------------------------
                           A  2203    
                           A  2204    
001701                     A  2205    os_goto_next_dir_entry	
                           A  2206    	
001701 CD 9B 55 00         A  2207    				call fs_goto_next_dir_entry	
001705 18 81               A  2208    				jr os_rffsc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  46


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2209    
                           A  2210    
                           A  2211    ;----------------------------------------------
                           A  2212    
                           A  2213    
001707                     A  2214    os_get_current_dir_name
                           A  2215    
001707 CD 07 59 00         A  2216    				call fs_get_current_dir_name
00170B C3 88 16 00         A  2217    				jr os_rffsc
                           A  2218    				
                           A  2219    
                           A  2220    ;----------------------------------------------
                           A  2221    
                           A  2222    
00170F CC A4 15 00         A  2223    ext_rename_file	call z,mbase_hl
001713 CC B5 15 00         A  2224    				call z,mbase_de
                           A  2225    
001717 D5                  A  2226    os_rename_file	push de
001718 CD 3B 58 00         A  2227    				call fs_hl_to_alt_filename		00171C E1                  A  2228    				pop hl				
00171D CD 41 58 00         A  2229    				call fs_hl_to_filename	
001721 CD B3 54 00         A  2230    				call fs_rename_command
001725 C3 88 16 00         A  2231    				jr os_rffsc
                           A  2232    				
                           A  2233    
                           A  2234    ;----------------------------------------------
                           A  2235    
                           A  2236    
001729 CC A4 15 00         A  2237    ext_delete_dir	call z,mbase_hl					                           A  2238    
00172D CD 41 58 00         A  2239    os_delete_dir	call fs_hl_to_filename
001731 CD 24 52 00         A  2240    				call fs_delete_dir_command
001735 C3 88 16 00         A  2241    				jp os_rffsc
                           A  2242    	
                           A  2243    	
                           A  2244    ;----- LOW LEVEL SECTOR ACCESS ETC FOR EXTERNAL
                           A  2245    
                           A  2246    
001739                     A  2247    ext_read_sector
001739 CD 84 17 00         A  2248    				call ext_sector_access_preamble
00173D C0                  A  2249    				ret nz
00173E 32 DF 65 00         A  2250    				ld (current_driver),a
001742 CD DE 59 00         A  2251    				call fs_read_sector
001746 20 11               A  2252    				jr nz,sect_done
001748 38 0F               A  2253    				jr c,sect_done
00174A 21000800            A  2254    				ld hl,sector_buffer
00174E ED5B EF 65 00       A  2255    				ld de,(sector_rd_wr_addr)
001753 01000200            A  2256    				ld bc,512
001757 EDB0                A  2257    				ldir			
001759 F5                  A  2258    sect_done		push af
00175A 3A 0F 67 00         A  2259    				ld a,(sys_driver_backup)		00175E 32 DF 65 00         A  2260    				ld (current_driver),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  47


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001762 F1                  A  2261    				pop af
001763 C3 88 16 00         A  2262    				jp os_rffsc
                           A  2263    				
                           A  2264    
001767                     A  2265    ext_write_sector
                           A  2266    			
001767 CD 84 17 00         A  2267    				call ext_sector_access_preamble
00176B C0                  A  2268    				ret nz
00176C 32 DF 65 00         A  2269    				ld (current_driver),a
001770 2A EF 65 00         A  2270    				ld hl,(sector_rd_wr_addr)
001774 11000800            A  2271    				ld de,sector_buffer
001778 01000200            A  2272    				ld bc,512
00177C EDB0                A  2273    				ldir			
00177E CD 07 5A 00         A  2274    				call fs_write_sector
001782 18 D5               A  2275    				jr sect_done
                           A  2276    
                           A  2277    
001784                     A  2278    ext_sector_access_preamble
                           A  2279    
001784 CC A4 15 00         A  2280    				call z,mbase_hl
001788 22 EF 65 00         A  2281    				ld (sector_rd_wr_addr),hl
                           A  2282    				
00178C 78                  A  2283    				ld a,b
00178D F5                  A  2284    				push af							00178E DD21 BB 67 00       A  2285    				ld ix,sector_lba0
001793 DD1F00              A  2286    				ld (ix),de						001796 DD7103              A  2287    				ld (ix+3),c
001799 CD A1 1A 00         A  2288    				call dev_to_driver_lookup		00179D E5                  A  2289    				push hl
00179E DDE1                A  2290    				pop ix
0017A0 2A BB 67 00         A  2291    				ld hl,(sector_lba0)				0017A4 3A BE 67 00         A  2292    				ld a,(sector_lba3)				0017A8 DD0701              A  2293    				ld bc,(ix+1)					0017AB B7                  A  2294    				or a							0017AC ED42                A  2295    				sbc hl,bc
0017AE DD9E04              A  2296    				sbc a,(ix+4)
0017B1 38 05               A  2297    				jr c,range_ok
0017B3 F1                  A  2298    				pop af
0017B4 3ED5                A  2299    				ld a,0d5h						0017B6 B7                  A  2300    				or a							0017B7 C9                  A  2301    				ret
                           A  2302    	
0017B8 3A DF 65 00         A  2303    range_ok		ld a,(current_driver)
0017BC 32 0F 67 00         A  2304    				ld (sys_driver_backup),a
0017C0 F1                  A  2305    				pop af							0017C1 CD A1 1A 00         A  2306    				call dev_to_driver_lookup
0017C5 30 02               A  2307    				jr nc,bad_dev
0017C7 BF                  A  2308    os_null			cp a							0017C8 C9                  A  2309    				ret
                           A  2310    					
0017C9 3ED0                A  2311    bad_dev			ld a,0d0h						0017CB B7                  A  2312    				or a							Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  48


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0017CC C9                  A  2313    				ret	
                           A  2314    			
                           A  2315    
                           A  2316    ;----------------------------------------------
                           A  2317    
                           A  2318    
0017CD                     A  2319    os_get_device_info
                           A  2320    
0017CD 21 8A 66 00         A  2321    				ld hl,host_device_hardware_info
0017D1 11 40 40 00         A  2322    				ld de,driver_table
0017D5 3A E0 65 00         A  2323    				ld a,(device_count)
0017D9 47                  A  2324    				ld b,a
0017DA 3A DF 65 00         A  2325    				ld a,(current_driver)
0017DE BF                  A  2326    				cp a
0017DF C9                  A  2327    				ret
                           A  2328    
                           A  2329    
                           A  2330    
                           A  2331    
0017E0                     A  2332    os_get_volume_info
                           A  2333    
0017E0 21 0A 66 00         A  2334    				ld hl,volume_mount_list	
0017E4 3A E1 65 00         A  2335    				ld a,(volume_count)
0017E8 47                  A  2336    				ld b,a
0017E9 3A DE 65 00         A  2337    				ld a,(current_volume)
0017ED C9                  A  2338    				ret
                           A  2339    				
                           A  2340    		
                           A  2341    ;----------------------------------------------
                           A  2342    
                           A  2343    
0017EE                     A  2344    ext_serial_get_header
                           A  2345    
0017EE CC A4 15 00         A  2346    				call z,mbase_hl
0017F2 7B                  A  2347    				ld a,e
0017F3 CD 07 4A 00         A  2348    				call serial_get_header
0017F7 DDE5                A  2349    				push ix
0017F9 D1                  A  2350    				pop de
0017FA C9                  A  2351    				ret
                           A  2352    				
                           A  2353    				
0017FB                     A  2354    ext_serial_receive_file
                           A  2355    				
0017FB CC A4 15 00         A  2356    				call z,mbase_hl
0017FF CD A2 4A 00         A  2357    				call serial_receive_file
001803 C9                  A  2358    				ret
                           A  2359    				
                           A  2360    	
001804                     A  2361    ext_serial_send_file
                           A  2362    
001804 CC A4 15 00         A  2363    				call z,mbase_hl					001808 CC B5 15 00         A  2364    				call z,mbase_de					Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  49


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
00180C D5                  A  2365    				push de	
00180D DDE1                A  2366    				pop ix							00180F C5                  A  2367    				push bc							001810 D1                  A  2368    				pop de							001811 CD 6B 4B 00         A  2369    				call serial_send_file
001815 C9                  A  2370    				ret
                           A  2371    
                           A  2372    
001816                     A  2373    ext_serial_tx
001816 7B                  A  2374    				ld a,e
001817 CD FE 42 00         A  2375    				call send_serial_byte
00181B AF                  A  2376    				xor a							00181C C9                  A  2377    				ret
                           A  2378    
                           A  2379    
00181D                     A  2380    ext_serial_rx
00181D 7B                  A  2381    				ld a,e
00181E 32 AE 65 00         A  2382    				ld (serial_timeout),a
001822 CD C3 42 00         A  2383    				call receive_serial_byte
001826 C9                  A  2384    				ret
                           A  2385    				
                           A  2386    
                           A  2387    ;----------------------------------------------
                           A  2388    
001827                     A  2389    ext_mount_volumes
                           A  2390    
001827 7B                  A  2391    				ld a,e
                           A  2392    
001828                     A  2393    os_mount_volumes
                           A  2394    				
001828 32 10 67 00         A  2395    				ld (os_quiet_mode),a			                           A  2396    				
00182C 21 1B 5C 00         A  2397    				ld hl,storage_txt
001830 CD 8F 0F 00         A  2398    				call os_print_string_cond
001834 CD 5C 18 00         A  2399    				call mount_go
001838 AF                  A  2400    				xor a
001839 32 DE 65 00         A  2401    tvloop			ld (current_volume),a
00183D CD B7 1A 00         A  2402    				call os_change_volume			001841 C8                  A  2403    				ret z							001842 3A DE 65 00         A  2404    				ld a,(current_volume)			001846 3C                  A  2405    				inc a
001847 FE08                A  2406    				cp max_volumes
001849 20 EE               A  2407    				jr nz,tvloop
00184B 3A E0 65 00         A  2408    				ld a,(device_count)
00184F B7                  A  2409    				or a
001850 20 08               A  2410    				jr nz,mfsdevs
001852 21 CF 63 00         A  2411    				ld hl,none_found_msg
001856 CD 6E 14 00         A  2412    				call os_show_packed_text_cond
00185A AF                  A  2413    mfsdevs			xor a
00185B C9                  A  2414    				ret
                           A  2415    
                           A  2416    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  50


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2417    
00185C 21 0A 66 00         A  2418    mount_go		ld hl,volume_mount_list			001860 01800000            A  2419    				ld bc,max_volumes*16
001864 AF                  A  2420    clrdl_lp		xor a
001865 CD 7D 15 00         A  2421    				call os_bchl_memfill
                           A  2422    								
001869 21 F2 65 00         A  2423    				ld hl,volume_dir_clusters		00186D 01180000            A  2424    				ld bc,max_volumes*3		
001871 AF                  A  2425    				xor a	
001872 CD 7D 15 00         A  2426    				call os_bchl_memfill	
                           A  2427    			
001876 11 8A 66 00         A  2428    				ld de,host_device_hardware_info
00187A ED53 0A 67 00       A  2429    				ld (dhwn_temp_pointer),de
                           A  2430    				
00187F FD21 0A 66 00       A  2431    				ld iy,volume_mount_list
001884 AF                  A  2432    				xor a
001885 32 E1 65 00         A  2433    				ld (volume_count),a
001889 32 E0 65 00         A  2434    				ld (device_count),a
00188D 32 DF 65 00         A  2435    mnt_loop		ld (current_driver),a			001891 CD 2D 1A 00         A  2436    				call locate_driver_base			001895 21000000            A  2437    				ld hl,0
001899 AF                  A  2438    				xor a
00189A ED5A                A  2439    				adc hl,de
00189C C8                  A  2440    				ret z							00189D EB                  A  2441    				ex de,hl						00189E FDE5                A  2442    				push iy
0018A0 CD B1 18 00         A  2443    				call find_dev					0018A4 FDE1                A  2444    				pop iy							0018A6 CC B2 18 00         A  2445    				call z,got_dev		
0018AA 3A DF 65 00         A  2446    nxt_drv			ld a,(current_driver)			0018AE 3C                  A  2447    				inc a
0018AF 18 DC               A  2448    				jr mnt_loop
                           A  2449    
                           A  2450    				
0018B1 E9                  A  2451    find_dev		jp (hl)
                           A  2452    			
                           A  2453    			
0018B2 E5                  A  2454    got_dev			push hl							0018B3 D5                  A  2455    				push de							0018B4 C5                  A  2456    				push bc
0018B5 CD 37 14 00         A  2457    				call os_new_line_cond			0018B9 015B0100            A  2458    				ld bc,015bh
0018BD CD 3E 1A 00         A  2459    				call os_print_multiple_chars_co
0018C1 3A DF 65 00         A  2460    				ld a,(current_driver)
0018C5 CD 2D 1A 00         A  2461    				call locate_driver_base
0018C9 210C0000            A  2462    				ld hl,0ch
0018CD 19                  A  2463    				add hl,de
0018CE CD 8F 0F 00         A  2464    				call os_print_string_cond		0018D2 015D0100            A  2465    				ld bc,015dh
0018D6 CD 3E 1A 00         A  2466    				call os_print_multiple_chars_co
0018DA C1                  A  2467    				pop bc
0018DB D1                  A  2468    				pop de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  51


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
0018DC AF                  A  2469    				xor a
0018DD 32 0E 67 00         A  2470    				ld (vols_on_device_temp),a
                           A  2471    				
0018E1 21 E0 65 00         A  2472    				ld hl,device_count
0018E5 34                  A  2473    				inc (hl)						0018E6 3A DF 65 00         A  2474    				ld a,(current_driver)
0018EA 2A 0A 67 00         A  2475    				ld hl,(dhwn_temp_pointer)	
0018EE 77                  A  2476    				ld (hl),a
0018EF 23                  A  2477    				inc hl
0018F0 73                  A  2478    				ld (hl),e						0018F1 FD7304              A  2479    				ld (iy+4),e						0018F4 23                  A  2480    				inc hl							0018F5 72                  A  2481    				ld (hl),d
0018F6 FD7205              A  2482    				ld (iy+5),d
0018F9 23                  A  2483    				inc hl
0018FA 71                  A  2484    				ld (hl),c			
0018FB FD7106              A  2485    				ld (iy+6),c
0018FE 23                  A  2486    				inc hl
0018FF 70                  A  2487    				ld (hl),b						001900 23                  A  2488    				inc hl
001901 D1                  A  2489    				pop de
001902 EB                  A  2490    				ex de,hl
001903 01160000            A  2491    				ld bc,22
001907 EDB0                A  2492    				ldir							001909 AF                  A  2493    				xor a
00190A 0605                A  2494    				ld b,5		
00190C 12                  A  2495    clrrode			ld (de),a						00190D 13                  A  2496    				inc de
00190E 10 FC               A  2497    				djnz clrrode
001910 ED53 0A 67 00       A  2498    				ld (dhwn_temp_pointer),de		                           A  2499    					
001915 AF                  A  2500    				xor a							001916 FDE5                A  2501    fnxtpart		push iy
001918 CD 9D 4D 00         A  2502    				call fs_get_partition_info
00191C FDE1                A  2503    				pop iy
00191E 38 31               A  2504    				jr c,nxt_dev					001920 FECE                A  2505    				cp 0ceh							001922 28 2D               A  2506    				jr z,nxt_dev
001924 F5                  A  2507    				push af
001925 FD360001            A  2508    				ld (iy),1						001929 3A DF 65 00         A  2509    				ld a,(current_driver)
00192D FD7701              A  2510    				ld (iy+1),a						001930 3A 0D 67 00         A  2511    				ld a,(partition_temp)	
001934 FD7707              A  2512    				ld (iy+7),a						001937 F1                  A  2513    				pop af
001938 B7                  A  2514    				or a
001939 28 35               A  2515    				jr z,dev_mbr
00193B AF                  A  2516    				xor a
00193C FD7708              A  2517    				ld (iy+8),a						00193F FD7709              A  2518    				ld (iy+9),a						001942 FD770A              A  2519    				ld (iy+10),a					001945 FD770B              A  2520    				ld (iy+11),a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  52


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001948 CD BC 19 00         A  2521    				call show_vol_info
00194C CD AD 19 00         A  2522    				call test_max_vol
001950 C8                  A  2523    				ret z							                           A  2524    			
001951 3A 0E 67 00         A  2525    nxt_dev			ld a,(vols_on_device_temp)		001955 B7                  A  2526    				or a
001956 C0                  A  2527    				ret nz		
001957 CD 0E 1A 00         A  2528    				call test_quiet_mode
00195B 20 06               A  2529    				jr nz,skp_cu
00195D 3E0A                A  2530    				ld a,10
00195F 32 C0 67 00         A  2531    				ld (cursor_x),a
001963 21 CC 63 00         A  2532    skp_cu			ld hl,no_vols_msg				001967 CD 6E 14 00         A  2533    				call os_show_packed_text_cond
00196B CD 37 14 00         A  2534    				call os_new_line_cond
00196F C9                  A  2535    				ret
                           A  2536    				
                           A  2537    			
001970 11040000            A  2538    dev_mbr			ld de,4
001974 19                  A  2539    				add hl,de
001975 7E                  A  2540    				ld a,(hl)						001976 B7                  A  2541    				or a
001977 C8                  A  2542    				ret z							001978 19                  A  2543    				add hl,de
                           A  2544    				
001979 FDE5                A  2545    				push iy
00197B 0604                A  2546    				ld b,4
00197D 7E                  A  2547    sfmbrlp			ld a,(hl)						00197E FD7708              A  2548    				ld (iy+8),a
001981 23                  A  2549    				inc hl
001982 FD23                A  2550    				inc iy
001984 10 F7               A  2551    				djnz sfmbrlp
001986 FDE1                A  2552    				pop iy
001988 FDE5                A  2553    				push iy
00198A 0603                A  2554    				ld b,3	
00198C 7E                  A  2555    nsivlp			ld a,(hl)
00198D FD7704              A  2556    				ld (iy+4),a						001990 23                  A  2557    				inc hl
001991 FD23                A  2558    				inc iy
001993 10 F7               A  2559    				djnz nsivlp
001995 FDE1                A  2560    				pop iy
                           A  2561    				
001997 CD BC 19 00         A  2562    				call show_vol_info
00199B CD AD 19 00         A  2563    				call test_max_vol	
00199F C8                  A  2564    				ret z							0019A0 3A 0D 67 00         A  2565    				ld a,(partition_temp)
0019A4 3C                  A  2566    				inc a
0019A5 FE04                A  2567    				cp 4							0019A7 C2 16 19 00         A  2568    				jp nz,fnxtpart
0019AB 18 A4               A  2569    				jr nxt_dev
                           A  2570    				
                           A  2571    
0019AD                     A  2572    test_max_vol
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  53


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2573    			
0019AD 11100000            A  2574    				ld de,16
0019B1 FD19                A  2575    				add iy,de			
0019B3 21 E1 65 00         A  2576    				ld hl,volume_count
0019B7 34                  A  2577    				inc (hl)
0019B8 7E                  A  2578    				ld a,(hl)
0019B9 FE08                A  2579    				cp max_volumes
0019BB C9                  A  2580    				ret
                           A  2581    			
                           A  2582    			
0019BC                     A  2583    show_vol_info
                           A  2584    				
0019BC CD 0E 1A 00         A  2585    				call test_quiet_mode
0019C0 20 06               A  2586    				jr nz,skp_cm2
0019C2 3E09                A  2587    				ld a,9			
0019C4 32 C0 67 00         A  2588    				ld (cursor_x),a
0019C8 3A E1 65 00         A  2589    skp_cm2			ld a,(volume_count)
0019CC F5                  A  2590    				push af
0019CD C630                A  2591    				add a,30h		
0019CF 32 E6 65 00         A  2592    				ld (vol_txt+4),a	
0019D3 21 E2 65 00         A  2593    				ld hl,vol_txt
0019D7 CD 8F 0F 00         A  2594    				call os_print_string_cond		0019DB 21 0E 67 00         A  2595    				ld hl,vols_on_device_temp
0019DF CBC6                A  2596    				set 0,(hl)						                           A  2597    			
0019E1 F1                  A  2598    				pop af
0019E2 FDE5                A  2599    				push iy
0019E4 CD B7 1A 00         A  2600    				call os_change_volume			0019E8 28 0A               A  2601    				jr z,vform_ok					0019EA 21 7C 63 00         A  2602    svi_fe			ld hl,format_err_msg		
0019EE CD 6E 14 00         A  2603    svi_pem			call os_show_packed_text_cond	0019F2 18 0D               A  2604    				jr skpsvl
                           A  2605    			
0019F4 CD F2 55 00         A  2606    vform_ok		call fs_get_volume_label
0019F8 38 0E               A  2607    				jr c,svi_hwe
0019FA B7                  A  2608    				or a
0019FB 20 ED               A  2609    				jr nz,svi_fe
0019FD CD 8F 0F 00         A  2610    				call os_print_string_cond		                           A  2611    			
001A01 CD 37 14 00         A  2612    skpsvl			call os_new_line_cond
001A05 FDE1                A  2613    				pop iy
001A07 C9                  A  2614    				ret
                           A  2615    				
001A08 21 B6 61 00         A  2616    svi_hwe			ld hl,disk_err_msg
001A0C 18 E0               A  2617    				jr svi_pem
                           A  2618    			
                           A  2619    			
001A0E                     A  2620    test_quiet_mode
                           A  2621    			
001A0E 3A 10 67 00         A  2622    				ld a,(os_quiet_mode)
001A12 B7                  A  2623    				or a
001A13 C9                  A  2624    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  54


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2625    
                           A  2626    ;----------------------------------------------
                           A  2627    
                           A  2628    
001A14                     A  2629    show_dev_driver_name
                           A  2630    	
                           A  2631    	
001A14 CD 2D 1A 00         A  2632    				call locate_driver_base			001A18 EB                  A  2633    				ex de,hl
001A19 110C0000            A  2634    				ld de,0ch
001A1D 19                  A  2635    				add hl,de
001A1E CD 94 0F 00         A  2636    				call os_print_string			001A22 C5                  A  2637    				push bc
001A23 01200100            A  2638    				ld bc,0120h
001A27 CD 43 1A 00         A  2639    				call os_print_multiple_chars	001A2B C1                  A  2640    				pop bc
001A2C C9                  A  2641    				ret
                           A  2642    
                           A  2643    
001A2D                     A  2644    locate_driver_base
                           A  2645    
001A2D E5                  A  2646    				push hl							001A2E 11030000            A  2647    				ld de,3							001A32 57                  A  2648    				ld d,a
001A33 ED5C                A  2649    				mlt de
001A35 21 40 40 00         A  2650    				ld hl,driver_table
001A39 19                  A  2651    				add hl,de
001A3A ED17                A  2652    				ld de,(hl)
001A3C E1                  A  2653    				pop hl
001A3D C9                  A  2654    				ret
                           A  2655    				
                           A  2656    		
                           A  2657    ;----------------------------------------------
                           A  2658    
001A3E                     A  2659    os_print_multiple_chars_cond
                           A  2660    
001A3E CD 0E 1A 00         A  2661    				call test_quiet_mode
001A42 C0                  A  2662    				ret nz
                           A  2663    			
001A43                     A  2664    os_print_multiple_chars
                           A  2665    
                           A  2666    ;c = char
                           A  2667    ;b = count
001A43 C5                  A  2668    				push bc
001A44 E5                  A  2669    				push hl
001A45 79                  A  2670    				ld a,c
001A46 21 8E 5C 00         A  2671    				ld hl,rep_char_txt
001A4A 77                  A  2672    				ld (hl),a
001A4B E5                  A  2673    pmch_lp			push hl
001A4C CD 94 0F 00         A  2674    				call os_print_string
001A50 E1                  A  2675    				pop hl
001A51 10 F8               A  2676    				djnz pmch_lp
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  55


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001A53 E1                  A  2677    				pop hl
001A54 C1                  A  2678    				pop bc
001A55 C9                  A  2679    				ret
                           A  2680    
                           A  2681    ;----------------------------------------------
                           A  2682    
                           A  2683    
001A56 7B                  A  2684    ext_plot_char	ld a,e
001A57 C3 3A 44 00         A  2685    				jp hwsc_plot_char
                           A  2686    				
                           A  2687    
                           A  2688    ;----------------------------------------------
                           A  2689    ; Some file system related routines 
                           A  2690    ;----------------------------------------------
                           A  2691    
                           A  2692    
001A5B                     A  2693    fs_get_dir_cluster
                           A  2694    
                           A  2695    
001A5B F5                  A  2696    				push af							001A5C E5                  A  2697    				push hl			
001A5D CD 73 1A 00         A  2698    				call fs_get_dir_cluster_address
001A61 ED17                A  2699    				ld de,(hl)
001A63 E1                  A  2700    dclopdone		pop hl
001A64 F1                  A  2701    				pop af
001A65 BF                  A  2702    				cp a							001A66 C9                  A  2703    				ret
                           A  2704    				
                           A  2705    
                           A  2706    
                           A  2707    
                           A  2708    
001A67                     A  2709    fs_update_dir_cluster
                           A  2710    
001A67 F5                  A  2711    				push af							001A68 E5                  A  2712    				push hl			
001A69 D5                  A  2713    				push de			
001A6A CD 73 1A 00         A  2714    				call fs_get_dir_cluster_address
001A6E D1                  A  2715    				pop de
001A6F ED1F                A  2716    				ld (hl),de
001A71 18 F0               A  2717    				jr dclopdone
                           A  2718    			
                           A  2719    
                           A  2720    
                           A  2721    
                           A  2722    
001A73                     A  2723    fs_get_dir_cluster_address
                           A  2724    
001A73 21 F2 65 00         A  2725    				ld hl,volume_dir_clusters		001A77 3A DE 65 00         A  2726    				ld a,(current_volume)	
001A7B 11030000            A  2727    				ld de,3
001A7F 57                  A  2728    				ld d,a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  56


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001A80 ED5C                A  2729    				mlt de
001A82 19                  A  2730    				add hl,de
001A83 C9                  A  2731    				ret
                           A  2732    				
                           A  2733    	
                           A  2734    
                           A  2735    	
                           A  2736    	
001A84                     A  2737    fs_get_total_sectors
                           A  2738    
                           A  2739    
001A84 F5                  A  2740    				push af
001A85 E5                  A  2741    				push hl							001A86 CD 95 1A 00         A  2742    				call fs_calc_volume_offset	
001A8A 21 0E 66 00         A  2743    				ld hl,volume_mount_list+4
001A8E 19                  A  2744    				add hl,de
001A8F ED17                A  2745    				ld de,(hl)
001A91 E1                  A  2746    				pop hl
001A92 F1                  A  2747    				pop af
001A93 BF                  A  2748    				cp a							001A94 C9                  A  2749    				ret
                           A  2750    
                           A  2751    
                           A  2752    
                           A  2753    
                           A  2754    
001A95                     A  2755    fs_calc_volume_offset
                           A  2756    
001A95 3A DE 65 00         A  2757    				ld a,(current_volume)			001A99 11100000            A  2758    calc_vol		ld de,16
001A9D 57                  A  2759    				ld d,a
001A9E ED5C                A  2760    				mlt de
001AA0 C9                  A  2761    				ret
                           A  2762    
                           A  2763    
                           A  2764    
                           A  2765    
                           A  2766    
001AA1                     A  2767    dev_to_driver_lookup
                           A  2768    
001AA1 21 E0 65 00         A  2769    				ld hl,device_count				001AA5 BE                  A  2770    				cp (hl)							001AA6 D0                  A  2771    				ret nc
001AA7 11200000            A  2772    				ld de,32						001AAB 57                  A  2773    				ld d,a
001AAC ED5C                A  2774    				mlt de
001AAE 21 8A 66 00         A  2775    				ld hl,host_device_hardware_info
001AB2 19                  A  2776    				add hl,de
001AB3 7E                  A  2777    				ld a,(hl)
001AB4 37                  A  2778    				scf
001AB5 C9                  A  2779    				ret
                           A  2780    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  57


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2781    
                           A  2782    
001AB6                     A  2783    ext_change_volume
                           A  2784    
001AB6 7B                  A  2785    				ld a,e
                           A  2786    
001AB7                     A  2787    os_change_volume
                           A  2788    
001AB7 47                  A  2789    				ld b,a							001AB8 FE08                A  2790    				cp max_volumes		
001ABA 30 22               A  2791    				jr nc,fs_ccv2					                           A  2792    			
001ABC 3A DE 65 00         A  2793    				ld a,(current_volume)			001AC0 F5                  A  2794    				push af
001AC1 78                  A  2795    				ld a,b
001AC2 32 DE 65 00         A  2796    				ld (current_volume),a			001AC6 CD E2 1A 00         A  2797    				call fs_set_driver_for_volume	                           A  2798    				
001ACA CD FF 4D 00         A  2799    				call fs_check_disk_format		001ACE 38 05               A  2800    				jr c,fs_cant_chg_vols	
001AD0 20 03               A  2801    				jr nz,fs_cant_chg_vols
001AD2 F1                  A  2802    				pop af							001AD3 AF                  A  2803    				xor a							001AD4 C9                  A  2804    				ret
                           A  2805    
                           A  2806    
001AD5                     A  2807    fs_cant_chg_vols
                           A  2808    			
001AD5 F1                  A  2809    				pop af
001AD6 32 DE 65 00         A  2810    				ld (current_volume),a			001ADA CD E2 1A 00         A  2811    				call fs_set_driver_for_volume	                           A  2812    				
001ADE 3ECF                A  2813    fs_ccv2			ld a,0cfh						001AE0 B7                  A  2814    				or a
001AE1 C9                  A  2815    				ret
                           A  2816    					
                           A  2817    	
001AE2                     A  2818    fs_set_driver_for_volume
                           A  2819    
001AE2 CD 95 1A 00         A  2820    				call fs_calc_volume_offset		001AE6 21 0B 66 00         A  2821    				ld hl,volume_mount_list+1
001AEA 19                  A  2822    				add hl,de
001AEB 7E                  A  2823    				ld a,(hl)
001AEC 32 DF 65 00         A  2824    				ld (current_driver),a
001AF0 C9                  A  2825    				ret
                           A  2826    
                           A  2827    
                           A  2828    ;----------------------------------------------
                           A  2829    
001AF1                     A  2830    ext_file_sector_list
                           A  2831    
                           A  2832    ;Input HL = cluster, E = sector offset
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  58


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  2833    
                           A  2834    ;Output HL = new cluster, E = new sector number
                           A  2835    ;       IX = address of LBA0 LSB of sector (int
                           A  2836    
                           A  2837    				
001AF1 3A 7F 5A 00         A  2838    				ld a,(fs_cluster_size)
001AF5 BB                  A  2839    				cp e
001AF6 20 0A               A  2840    				jr nz,fsl_sc
001AF8 CD 86 58 00         A  2841    				call get_fat_entry_for_cluster
001AFC DA 27 16 00         A  2842    				jp c,os_fferr
001B00 1E00                A  2843    				ld e,0
001B02 CD 5D 59 00         A  2844    fsl_sc			call cluster_and_offset_to_lba
001B06 1C                  A  2845    				inc e
001B07 01 BB 67 00         A  2846    fsl_done		ld bc,sector_lba0
001B0B BF                  A  2847    				cp a							001B0C C9                  A  2848    				ret
                           A  2849    
                           A  2850    ;----------------------------------------------
                           A  2851    
001B0D                     A  2852    os_get_disk_sector_ptr
                           A  2853     
001B0D 21 BB 67 00         A  2854    				ld hl,sector_lba0
001B11 11000800            A  2855    				ld de,sector_buffer
001B15 BF                  A  2856    				cp a
001B16 C9                  A  2857    				ret
                           A  2858    				
                           A  2859    ;----------------------------------------------
                           A  2860    
                           A  2861    
001B17 E5                  A  2862    os_count_chars	push hl							001B18 01000000            A  2863    				ld bc,0
001B1C 7E                  A  2864    cch_lp			ld a,(hl)
001B1D B7                  A  2865    				or a
001B1E 28 04               A  2866    				jr z,cch_end
001B20 23                  A  2867    				inc hl
001B21 03                  A  2868    				inc bc
001B22 18 F8               A  2869    				jr cch_lp
001B24 E1                  A  2870    cch_end			pop hl
001B25 C9                  A  2871    				ret
                           A  2872    				
                           A  2873    			
                           A  2874    ;----------------------------------------------
                           A  2875    ; Environment variable code V0.01
                           A  2876    ;----------------------------------------------
                           A  2877    
       00000100            A  2878    envar_buffer_size equ 256
                           A  2879    
                           A  2880    ;----------------------------------------------
                           A  2881    
001B26                     A  2882    ext_get_envar
001B26 CC A4 15 00         A  2883    				call z,mbase_hl
                           A  2884    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  59


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001B2A                     A  2885    os_get_envar
                           A  2886    
                           A  2887    ;Set: 		HL = name of required variable
                           A  2888    ;Returns:	ZF Set: DE = address of variable's 
                           A  2889    ;        	ZF Not Set: Couldn't find variable
                           A  2890    				
001B2A DD21 27 69 00       A  2891    				ld ix,envar_list-1
001B2F CD 17 1B 00         A  2892    env_fname		call os_count_chars				001B33 78                  A  2893    				ld a,b
001B34 B1                  A  2894    				or c
001B35 28 27               A  2895    				jr z,env_bad
                           A  2896    								
001B37 ED1201              A  2897    env_cname		lea de,ix+1
001B3A 1A                  A  2898    				ld a,(de)
001B3B FEFF                A  2899    				cp 0ffh
001B3D 28 1F               A  2900    				jr z,env_bad
001B3F C5                  A  2901    				push bc
001B40 41                  A  2902    				ld b,c
001B41 CD 63 12 00         A  2903    				call os_compare_strings
001B45 C1                  A  2904    				pop bc
001B46 20 06               A  2905    				jr nz,env_nomatch
001B48 03                  A  2906    				inc bc							001B49 EB                  A  2907    				ex de,hl
001B4A 09                  A  2908    				add hl,bc
001B4B EB                  A  2909    				ex de,hl						001B4C AF                  A  2910    				xor a
001B4D C9                  A  2911    				ret			
                           A  2912    				
001B4E DD23                A  2913    env_nomatch		inc ix							001B50 CD F6 1B 00         A  2914    				call check_envar_bounds
001B54 20 08               A  2915    				jr nz,env_bad
001B56 DD7E00              A  2916    				ld a,(ix)
001B59 B7                  A  2917    				or a
001B5A 28 DB               A  2918    				jr z,env_cname
001B5C 18 F0               A  2919    				jr env_nomatch
                           A  2920    
001B5E 3E82                A  2921    env_bad			ld a,82h						001B60 B7                  A  2922    				or a
001B61 C9                  A  2923    				ret	
                           A  2924    				
                           A  2925    ;----------------------------------------------
                           A  2926    
001B62                     A  2927    ext_set_envar
                           A  2928    
                           A  2929    ;HL = addr of variable name (zero terminated)
                           A  2930    ;DE = addr of data for variable (zero terminate
                           A  2931    
                           A  2932    ;Returns:
                           A  2933    ;ZF = Set: OK
                           A  2934    ;ZF = Not Set: No enough space for new variable
                           A  2935    		
001B62 CC A4 15 00         A  2936    				call z,mbase_hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  60


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001B66 CC B5 15 00         A  2937    				call z,mbase_de
                           A  2938    
001B6A 7E                  A  2939    os_set_envar	ld a,(hl)						001B6B B7                  A  2940    				or a
001B6C 28 F0               A  2941    				jr z,env_bad
001B6E 1A                  A  2942    				ld a,(de)
001B6F B7                  A  2943    				or a
001B70 28 EC               A  2944    				jr z,env_bad
                           A  2945    
001B72 E5                  A  2946    				push hl
001B73 D5                  A  2947    				push de
001B74 CD C0 1B 00         A  2948    				call os_delete_envar			001B78 D1                  A  2949    				pop de
001B79 E1                  A  2950    				pop hl
                           A  2951    				
001B7A DD2A 32 6A 00       A  2952    				ld ix,(envar_top_loc)			001B7F CD F6 1B 00         A  2953    env_enlp		call check_envar_bounds
001B83 20 D9               A  2954    				jr nz,env_bad
001B85 7E                  A  2955    				ld a,(hl)						001B86 DD7700              A  2956    				ld (ix),a
001B89 B7                  A  2957    				or a
001B8A 28 05               A  2958    				jr z,env_ndone
001B8C 23                  A  2959    				inc hl
001B8D DD23                A  2960    				inc ix
001B8F 18 EE               A  2961    				jr env_enlp
                           A  2962    				
001B91 CD F6 1B 00         A  2963    env_ndone		call check_envar_bounds			001B95 20 C7               A  2964    				jr nz,env_bad
001B97 DD36003D            A  2965    				ld (ix),'='
001B9B DD23                A  2966    				inc ix
                           A  2967    
001B9D CD F6 1B 00         A  2968    env_evlp		call check_envar_bounds			001BA1 20 BB               A  2969    				jr nz,env_bad
001BA3 1A                  A  2970    				ld a,(de)
001BA4 DD7700              A  2971    				ld (ix),a
001BA7 B7                  A  2972    				or a
001BA8 28 05               A  2973    				jr z,env_vdone
001BAA 13                  A  2974    				inc de
001BAB DD23                A  2975    				inc ix
001BAD 18 EE               A  2976    				jr env_evlp
                           A  2977    
001BAF DD23                A  2978    env_vdone		inc ix
001BB1 DD3600FF            A  2979    				ld (ix),0ffh
001BB5 DD22 32 6A 00       A  2980    				ld (envar_top_loc),ix			001BBA AF                  A  2981    				xor a
001BBB C9                  A  2982    				ret
                           A  2983    
                           A  2984    	
                           A  2985    ;----------------------------------------------
                           A  2986    
001BBC                     A  2987    ext_delete_envar
                           A  2988    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  61


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001BBC CC A4 15 00         A  2989    				call z,mbase_hl
                           A  2990    
001BC0                     A  2991    os_delete_envar
                           A  2992    
                           A  2993    ;HL = name of required variable (null terminate
                           A  2994    ;ZF = Set: OK
                           A  2995    ;ZF = Not Set: Didnt find named variable
                           A  2996    
                           A  2997    
001BC0 CD 2A 1B 00         A  2998    				call os_get_envar				001BC4 C0                  A  2999    				ret nz
                           A  3000    				
001BC5 D5                  A  3001    				push de
001BC6 E1                  A  3002    				pop hl
001BC7 AF                  A  3003    				xor a
001BC8 ED42                A  3004    				sbc hl,bc						                           A  3005    				
001BCA 13                  A  3006    env_fnxt		inc de							001BCB D5                  A  3007    				push de
001BCC DDE1                A  3008    				pop ix
001BCE CD F6 1B 00         A  3009    				call check_envar_bounds
001BD2 20 8A               A  3010    				jr nz,env_bad
001BD4 1A                  A  3011    				ld a,(de)
001BD5 B7                  A  3012    				or a
001BD6 20 F2               A  3013    				jr nz,env_fnxt
                           A  3014    
001BD8 13                  A  3015    env_gnxt		inc de							001BD9 EB                  A  3016    				ex de,hl
001BDA 7E                  A  3017    env_collp		ld a,(hl)
001BDB 12                  A  3018    				ld (de),a						001BDC FEFF                A  3019    				cp 0ffh
001BDE 28 0F               A  3020    				jr z,env_clspd					001BE0 E5                  A  3021    				push hl
001BE1 DDE1                A  3022    				pop ix
001BE3 CD F6 1B 00         A  3023    				call check_envar_bounds
001BE7 C2 5E 1B 00         A  3024    				jr nz,env_bad
001BEB 23                  A  3025    				inc hl
001BEC 13                  A  3026    				inc de
001BED 18 EB               A  3027    				jr env_collp
                           A  3028    
001BEF ED53 32 6A 00       A  3029    env_clspd		ld (envar_top_loc),de			001BF4 AF                  A  3030    				xor a
001BF5 C9                  A  3031    				ret
                           A  3032    				
                           A  3033    ;----------------------------------------------
                           A  3034    
001BF6                     A  3035    check_envar_bounds
                           A  3036    
001BF6 C5                  A  3037    				push bc
001BF7 E5                  A  3038    				push hl
001BF8 DDE5                A  3039    				push ix
001BFA E1                  A  3040    				pop hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  62


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
001BFB 01 29 6A 00         A  3041    				ld bc,1+(envar_list+envar_buffe
001BFF AF                  A  3042    				xor a
001C00 ED42                A  3043    				sbc hl,bc
001C02 38 05               A  3044    				jr c,env_bok
001C04 AF                  A  3045    				xor a
001C05 3C                  A  3046    				inc a
001C06 E1                  A  3047    				pop hl
001C07 C1                  A  3048    				pop bc
001C08 C9                  A  3049    				ret
                           A  3050    
001C09 AF                  A  3051    env_bok			xor a
001C0A E1                  A  3052    				pop hl
001C0B C1                  A  3053    				pop bc
001C0C C9                  A  3054    				ret
                           A  3055    						
                           A  3056    ;----------------------------------------------
                           A  3057    
001C0D                     A  3058    os_get_keymap_location
                           A  3059    
001C0D 21 2A 64 00         A  3060    				ld hl,unshifted_keymap
001C11 BF                  A  3061    				cp a							001C12 C9                  A  3062    				ret
                           A  3063    
                           A  3064    
                           A  3065    ;----------------------------------------------
                           A  3066    
                           A  3067    
001C13 CC A4 15 00         A  3068    ext_play_audio	call z,mbase_hl
                           A  3069    				
001C17 CD FE 48 00         A  3070    os_play_audio	call hwsc_play_audio
001C1B C9                  A  3071    				ret
                           A  3072    				
                           A  3073    ;----------------------------------------------
                           A  3074    
001C1C E5                  A  3075    test_de			push hl
001C1D 21000000            A  3076    				ld hl,0
001C21 ED5A                A  3077    				adc hl,de
001C23 E1                  A  3078    				pop hl
001C24 C9                  A  3079    				ret
                           A  3080    
                           A  3081    ;==============================================
                           A  3082    ; Internal OS command routines
                           A  3083    ;==============================================
                           A  3084    
                           B     0    	include 'commands\c.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"c" - Copy memory command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
001C25                     B     5    os_cmd_c
                           B     6    
001C25 CD 5B 1C 00         B     7    				call get_start_and_end			Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  63


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\c.asm
                           B     8    				
001C29 CD 84 1C 00         B     9    				call hexword_or_bust			001C2D CA 0C 16 00         B    10    				jp z,os_no_d_addr_error
001C31 ED53 CE 67 00       B    11    				ld (copy_dest_address),de
                           B    12    						
001C36 CD 49 1C 00         B    13    				call test_mem_range				001C3A DA 10 16 00         B    14    				jp c,os_range_error				001C3E ED5B CE 67 00       B    15    				ld de,(copy_dest_address)
001C43 EDB0                B    16    				ldir
                           B    17    
001C45 3E20                B    18    copy_done		ld a,020h						001C47 B7                  B    19    				or a
001C48 C9                  B    20    				ret
                           B    21    			
                           B    22    			
                           B    23    ;----------------------------------------------
                           B    24    			
001C49                     B    25    test_mem_range
                           B    26    			
                           B    27    ; on return:
                           B    28    ;
                           B    29    ; carry flag: Set = bad range
                           B    30    ; xBC = run length on return
                           B    31    ; xHL = start address
                           B    32    			
001C49 2A CB 67 00         B    33    				ld hl,(cmdop_end_address)	
001C4D ED4B C8 67 00       B    34    				ld bc,(cmdop_start_address)
001C52 C5                  B    35    				push bc
001C53 AF                  B    36    				xor a
001C54 ED42                B    37    				sbc hl,bc
001C56 E5                  B    38    				push hl
001C57 C1                  B    39    				pop bc
001C58 03                  B    40    				inc bc
001C59 E1                  B    41    				pop hl
001C5A C9                  B    42    				ret
                           B    43    				
                           B    44    ;----------------------------------------------
                           B    45    			
001C5B                     B    46    get_start_and_end
                           B    47    			
001C5B CD 13 11 00         B    48    				call ascii_to_hexword			001C5F ED53 C8 67 00       B    49    				ld (cmdop_start_address),de
001C64 23                  B    50    				inc hl
001C65 28 09               B    51    				jr z,st_addrok
001C67 E1                  B    52    				pop hl							001C68 FE82                B    53    				cp 82h							001C6A 28 02               B    54    				jr z,c_badhex
001C6C 3E16                B    55    				ld a,016h						001C6E B7                  B    56    c_badhex		or a
001C6F C9                  B    57    				ret
                           B    58    				
001C70 CD 13 11 00         B    59    st_addrok		call ascii_to_hexword			Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  64


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\c.asm
001C74 ED53 CB 67 00       B    60    				ld (cmdop_end_address),de
001C79 23                  B    61    				inc hl
001C7A B7                  B    62    				or a
001C7B C8                  B    63    				ret z
001C7C E1                  B    64    				pop hl							001C7D FE82                B    65    				cp 82h							001C7F 28 ED               B    66    				jr z,c_badhex
001C81 3E1C                B    67    				ld a,01ch						001C83 C9                  B    68    				ret
                           B    69    				
                           B    70    ;----------------------------------------------
                           B    71    
001C84                     B    72    hexword_or_bust
                           B    73    
                           B    74    ; Set HL to string address:
                           B    75    ; Returns to parent routine ONLY if the string 
                           B    76    ; DE = hex word. If no hex found, the zero flag
                           B    77    ; If chars are invalid hex, returns to grandpar
                           B    78    
001C84 CD 13 11 00         B    79    				call ascii_to_hexword		
001C88 FE82                B    80    				cp 82h
001C8A 20 03               B    81    				jr nz,hex_good
001C8C E1                  B    82    				pop hl						; r
001C8D B7                  B    83    				or a	
001C8E C9                  B    84    				ret			 
001C8F FE81                B    85    hex_good		cp 081h						; n
001C91 C9                  B    86    				ret
                           B    87    	
                           B    88    ;----------------------------------------------
                           B    89    
                           B     0    	include 'commands\cd.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'cd' - Change Dir command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
001C92                     B     5    os_cmd_cd	
                           B     6    
001C92 CD 84 16 00         B     7    				call os_check_volume_format	
001C96 C0                  B     8    				ret nz
                           B     9    			
                           B    10    			
001C97 7E                  B    11    				ld a,(hl)						001C98 B7                  B    12    				or a				
001C99 CA 40 1D 00         B    13    				jp z,cd_show_path		
                           B    14    			
                           B    15    			
001C9D 7E                  B    16    				ld a,(hl)						001C9E 23                  B    17    				inc hl
001C9F 46                  B    18    				ld b,(hl)
001CA0 2B                  B    19    				dec hl
001CA1 FE2E                B    20    				cp '.'			
001CA3 20 08               B    21    				jr nz,cd_nual
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  65


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\cd.asm
001CA5 B8                  B    22    				cp b
001CA6 20 05               B    23    				jr nz,cd_nual
001CA8 CD DB 16 00         B    24    				call os_parent_dir	
001CAC C9                  B    25    				ret
                           B    26    			
                           B    27    			
001CAD FE2F                B    28    cd_nual			cp 02fh			
001CAF 20 05               B    29    				jr nz,cd_nogor					001CB1 CD E1 16 00         B    30    				call os_root_dir	
001CB5 C9                  B    31    				ret
                           B    32    				
                           B    33    				
001CB6 FE25                B    34    cd_nogor		cp '%'							001CB8 20 1F               B    35    				jr nz,cd_no_assign
001CBA CD 2A 1B 00         B    36    				call os_get_envar
001CBE 28 04               B    37    				jr z,cd_evok
001CC0 3ED1                B    38    				ld a,0d1h						001CC2 B7                  B    39    				or a
001CC3 C9                  B    40    				ret
001CC4 11000000            B    41    cd_evok			ld de,0
001CC8 5E                  B    42    				ld e,(hl)
001CC9 23                  B    43    				inc hl
001CCA 56                  B    44    				ld d,(hl)
001CCB 23                  B    45    				inc hl
001CCC 7E                  B    46    				ld a,(hl)
001CCD D5                  B    47    				push de
001CCE CD B7 1A 00         B    48    				call os_change_volume
001CD2 D1                  B    49    				pop de
001CD3 C0                  B    50    				ret nz
001CD4 CD 67 1A 00         B    51    				call fs_update_dir_cluster
001CD8 C9                  B    52    				ret
                           B    53    				
                           B    54    				
001CD9                     B    55    cd_no_assign
                           B    56    			
001CD9 3A DE 65 00         B    57    				ld a,(current_volume)
001CDD 32 03 01 00         B    58    				ld (original_vol_cd_cmd),a
                           B    59    			
001CE1 E5                  B    60    				push hl
001CE2 DDE1                B    61    				pop ix
001CE4 DD7E04              B    62    				ld a,(ix+4)
001CE7 FE3A                B    63    				cp ':'							001CE9 20 25               B    64    				jr nz,cd_nchvol
001CEB 11 E3 65 00         B    65    				ld de,vol_txt+1
001CEF 0603                B    66    				ld b,3
001CF1 CD 63 12 00         B    67    				call os_compare_strings
001CF5 20 19               B    68    				jr nz,cd_nchvol
001CF7 11050000            B    69    				ld de,5
001CFB 19                  B    70    				add hl,de
001CFC 22 81 68 00         B    71    				ld (os_args_loc),hl				001D00 DD7E03              B    72    				ld a,(ix+3)						001D03 D630                B    73    				sub 030h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  66


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\cd.asm
001D05 CD B7 1A 00         B    74    				call os_change_volume
001D09 C0                  B    75    				ret nz							001D0A CD E1 16 00         B    76    				call os_root_dir				001D0E 18 11               B    77    				jr cd_mol						                           B    78    				
                           B    79    			
001D10 CD 5B 1A 00         B    80    cd_nchvol		call fs_get_dir_cluster
001D14 ED53 00 01 00       B    81    				ld (original_dir_cd_cmd),de
                           B    82    			
001D19 E5                  B    83    cd_mollp		push hl
001D1A CD D1 16 00         B    84    				call os_change_dir				001D1E E1                  B    85    				pop hl
001D1F 20 0A               B    86    				jr nz,cd_dcherr
001D21 7E                  B    87    cd_mol			ld a,(hl)						001D22 23                  B    88    				inc hl
001D23 B7                  B    89    				or a
001D24 C8                  B    90    				ret z
001D25 FE2F                B    91    				cp 02fh
001D27 28 F0               B    92    				jr z,cd_mollp
001D29 18 F6               B    93    				jr cd_mol
                           B    94    					
001D2B                     B    95    cd_dcherr	
                           B    96    			
001D2B F5                  B    97    				push af							001D2C ED5B 00 01 00       B    98    				ld de,(original_dir_cd_cmd)
001D31 CD 67 1A 00         B    99    				call fs_update_dir_cluster
001D35 3A 03 01 00         B   100    				ld a,(original_vol_cd_cmd)
001D39 CD B7 1A 00         B   101    				call os_change_volume	
001D3D F1                  B   102    				pop af
001D3E B7                  B   103    				or a
001D3F C9                  B   104    				ret
                           B   105    				
                           B   106    ;----------------------------------------------
                           B   107    			
001D40                     B   108    cd_show_path
                           B   109    			
                           B   110    			
       00000010            B   111    max_dirs	equ 16
                           B   112    			
001D40 0610                B   113    				ld b,max_dirs
001D42 0E00                B   114    				ld c,0
001D44 C5                  B   115    lp1				push bc
001D45 CD 5B 1A 00         B   116    				call fs_get_dir_cluster
001D49 C1                  B   117    				pop bc
001D4A D5                  B   118    				push de
001D4B 0C                  B   119    				inc c
001D4C C5                  B   120    				push bc
001D4D CD DB 16 00         B   121    				call os_parent_dir
001D51 C1                  B   122    				pop bc
001D52 20 02               B   123    				jr nz,shdir_lp
001D54 10 EE               B   124    				djnz lp1
                           B   125    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  67


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\cd.asm
001D56 D1                  B   126    shdir_lp		pop de
001D57 C5                  B   127    				push bc
001D58 CD 67 1A 00         B   128    				call fs_update_dir_cluster
001D5C CD 07 17 00         B   129    				call os_get_current_dir_name
001D60 CD 94 0F 00         B   130    				call os_print_string
001D64 21 76 1D 00         B   131    				ld hl,cd_fwdslash_txt
001D68 CD 94 0F 00         B   132    				call os_print_string
001D6C C1                  B   133    				pop bc
001D6D 0D                  B   134    				dec c
001D6E 20 E6               B   135    				jr nz,shdir_lp
                           B   136    			
001D70 CD 3C 14 00         B   137    				call os_new_line	
001D74 AF                  B   138    				xor a
001D75 C9                  B   139    				ret
                           B   140    			
001D76 2F00                B   141    cd_fwdslash_txt	db '/',0	
                           B   142    			
                           B   143    ;----------------------------------------------
                           B   144    			
       00000100            B   145    original_dir_cd_cmd		equ scratch_pad 
       00000103            B   146    original_vol_cd_cmd	 	equ scratch_pad+3
                           B   147    					
                           B   148    ;----------------------------------------------
                           B     0    	include 'commands\cls.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"cls" - Clear screen command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
001D78                     B     5    os_cmd_cls
                           B     6    
001D78 CD C4 43 00         B     7    				call hwsc_clear_screen
001D7C AF                  B     8    				xor a
001D7D C9                  B     9    				ret
                           B    10    				
                           B    11    ;----------------------------------------------
                           B    12    	
                           B     0    	include 'commands\colon.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;":" for write hex bytes command. V0.02 - ADL m
                           B     3    ;----------------------------------------------
                           B     4    
001D7E                     B     5    os_cmd_colon
                           B     6    	
001D7E CD 84 1C 00         B     7    				call hexword_or_bust			001D82 CA FC 15 00         B     8    				jp z,os_no_start_addr			001D86 D5                  B     9    				push de
001D87 DDE1                B    10    				pop ix							                           B    11    			
001D89 CD 84 1C 00         B    12    wmblp			call hexword_or_bust			001D8D 28 07               B    13    				jr z,os_ccmdn
001D8F DD7300              B    14    				ld (ix),e						001D92 DD23                B    15    				inc ix
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  68


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\colon.asm
001D94 18 F3               B    16    				jr wmblp
                           B    17    
001D96 AF                  B    18    os_ccmdn		xor a
001D97 C9                  B    19    				ret
                           B    20    		
                           B    21    
                           B    22    ;----------------------------------------------
                           B     0    	include 'commands\d.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; OS "D" Command: EZ80 Disassembler V0.02
                           B     3    ; Totally and utterly unoptimized!
                           B     4    ;----------------------------------------------
                           B     5    
001D98 FD21 7F 23 00       B     6    os_cmd_d		ld iy,prefix_bits_loc
001D9D FDCB 07 C6          B     7    				set adl_dis,(iy+var_adl)
                           B     8    
001DA1 CD 84 1C 00         B     9    os_cmd_d_go		call hexword_or_bust			001DA5 28 05               B    10    				jr z,d_no_hex					001DA7 ED53 F6 28 00       B    11    				ld (dis_addr),de
                           B    12    				
001DAC 3A 80 65 00         B    13    d_no_hex		ld a,(charmap_rows)				001DB0 D602                B    14    				sub a,2
001DB2 47                  B    15    				ld b,a
001DB3 C5                  B    16    dis_loop		push bc
                           B    17    				
001DB4 DD2A F6 28 00       B    18    				ld ix,(dis_addr)				001DB9 CD 61 23 00         B    19    				call show_ix					001DBD 3E20                B    20    				ld a,' '
001DBF CD 55 23 00         B    21    				call show_ascii_char
                           B    22    
001DC3 FD21 7F 23 00       B    23    				ld iy,prefix_bits_loc
001DC8 FD360000            B    24    				ld (iy),0						001DCC CD 08 1E 00         B    25    				call dis_instr					001DD0 DD23                B    26    				inc ix							                           B    27    				
001DD2 3E1A                B    28    				ld a,26							001DD4 32 C0 67 00         B    29    				ld (cursor_pos+1),a				001DD8 ED4B F6 28 00       B    30    				ld bc,(dis_addr)
001DDD DD22 F6 28 00       B    31    				ld (dis_addr),ix				001DE2 DDE5                B    32    				push ix
001DE4 E1                  B    33    				pop hl
001DE5 AF                  B    34    				xor a
001DE6 ED42                B    35    				sbc hl,bc						001DE8 7D                  B    36    				ld a,l
001DE9 E607                B    37    				and 7
001DEB 6F                  B    38    				ld l,a
001DEC 0A                  B    39    shexoplp		ld a,(bc)						001DED CD 44 23 00         B    40    				call show_hex_byte
001DF1 3E20                B    41    				ld a,' '
001DF3 CD 55 23 00         B    42    				call show_ascii_char
001DF7 03                  B    43    				inc bc
001DF8 2D                  B    44    				dec l
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  69


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
001DF9 20 F1               B    45    				jr nz,shexoplp
                           B    46    				
001DFB CD 3C 14 00         B    47    				call os_new_line
001DFF C1                  B    48    				pop bc
001E00 10 B1               B    49    				djnz dis_loop
                           B    50    
001E02 CD 3C 14 00         B    51    				call os_new_line
001E06 AF                  B    52    				xor a
001E07 C9                  B    53    				ret
                           B    54    
                           B    55    
                           B    56    ;- Handle op code prefixes --------------------
                           B    57    			
       00000000            B    58    cb_prefix			equ 0					
       00000001            B    59    ed_prefix			equ 1
       00000002            B    60    sub_ix_prefix		equ 2
       00000003            B    61    sub_iy_prefix		equ 3
       00000004            B    62    ddcb_fdcb_prefix	equ 4					; p
       00000005            B    63    dot_l_prefix		equ 5
       00000006            B    64    il_prefix			equ 6
       00000007            B    65    show_adl_prefix		equ 7
                           B    66    
       00000000            B    67    adl_dis				equ 0					; b
                           B    68    
                           B    69    
001E08 DD7E00              B    70    dis_instr	ld a,(ix)						; c
                           B    71    			
001E0B FDCB 07 46          B    72    			bit adl_dis,(iy+var_adl)		; i
001E0F 28 04               B    73    			jr z,z80_list					; T
001E11 FDCB00F6            B    74    			set il_prefix,(iy)				; a
001E15                     B    75    z80_list			
                           B    76    			
                           B    77    ;----------------------------------------------
                           B    78    
001E15 FE40                B    79    			cp 40h
001E17 20 0A               B    80    			jr nz,not_sis
001E19 FDCB00B6            B    81    			res il_prefix,(iy)
001E1D FDCB00AE            B    82    			res dot_l_prefix,(iy)
001E21 18 28               B    83    			jr set_adl_pf
                           B    84    			
001E23 FE49                B    85    not_sis		cp 49h
001E25 20 0A               B    86    			jr nz,not_lis
001E27 FDCB00B6            B    87    			res il_prefix,(iy)
001E2B FDCB00EE            B    88    			set dot_l_prefix,(iy)
001E2F 18 1A               B    89    			jr set_adl_pf
                           B    90    			
001E31 FE52                B    91    not_lis		cp 52h
001E33 20 0A               B    92    			jr nz,not_sil
001E35 FDCB00F6            B    93    			set il_prefix,(iy)
001E39 FDCB00AE            B    94    			res dot_l_prefix,(iy)
001E3D 18 0C               B    95    			jr set_adl_pf
                           B    96    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  70


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
001E3F FE5B                B    97    not_sil		cp 5bh
001E41 20 11               B    98    			jr nz,not_adl_prefix_byte
001E43 FDCB00F6            B    99    			set il_prefix,(iy)
001E47 FDCB00EE            B   100    			set dot_l_prefix,(iy)
                           B   101    			
001E4B FDCB00FE            B   102    set_adl_pf	set show_adl_prefix,(iy)
001E4F DD23                B   103    			inc ix
001E51 DD7E00              B   104    			ld a,(ix)	
                           B   105    			
                           B   106    ;----------------------------------------------
                           B   107    
001E54                     B   108    not_adl_prefix_byte			
                           B   109    			
001E54 FECB                B   110    			cp 0cbh								001E56 20 08               B   111    			jr nz,not_cb
001E58 FDCB00C6            B   112    do_cb		set cb_prefix,(iy)
001E5C DD23                B   113    			inc ix
001E5E 18 3A               B   114    			jr not_traditional_prefix_byte
                           B   115    
001E60 FEED                B   116    not_cb		cp 0edh
001E62 20 08               B   117    			jr nz,not_ed
001E64 FDCB00CE            B   118    do_ed		set ed_prefix,(iy)
001E68 DD23                B   119    			inc ix
001E6A 18 2E               B   120    			jr not_traditional_prefix_byte
                           B   121    
001E6C FEDD                B   122    not_ed		cp 0ddh
001E6E 20 18               B   123    			jr nz,not_dd
001E70 CD A3 20 00         B   124    do_dd		call check_nxt_byte_prefix			001E74 28 92               B   125    			jr z,dis_instr						001E76 FDCB00D6            B   126    			set sub_ix_prefix,(iy)
001E7A FECB                B   127    xdcb_query	cp 0cbh								001E7C 20 1C               B   128    			jr nz,not_traditional_prefix_byte	001E7E FDCB00E6            B   129    			set ddcb_fdcb_prefix,(iy)
001E82 DD23                B   130    			inc ix								001E84 DD23                B   131    			inc ix								001E86 18 12               B   132    			jr not_traditional_prefix_byte
                           B   133    
001E88 FEFD                B   134    not_dd		cp 0fdh
001E8A 20 0E               B   135    			jr nz,not_traditional_prefix_byte
001E8C CD A3 20 00         B   136    do_fd		call check_nxt_byte_prefix
001E90 CA 08 1E 00         B   137    			jr z,dis_instr	
001E94 FDCB00DE            B   138    			set sub_iy_prefix,(iy)
001E98 18 E0               B   139    			jr xdcb_query
                           B   140    
001E9A                     B   141    not_traditional_prefix_byte
                           B   142    
                           B   143    ;----------------------------------------------
                           B   144    
001E9A DD7E00              B   145    			ld a,(ix)	
001E9D E6C0                B   146    			and 11000000b			; seperate 
001E9F 07                  B   147    			rlca
001EA0 07                  B   148    			rlca
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  71


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
001EA1 FD77 01             B   149    			ld (iy+var_x),a			;var x= val
                           B   150    			
001EA4 DD7E00              B   151    			ld a,(ix)
001EA7 E638                B   152    			and 00111000b
001EA9 CB3F                B   153    			srl a
001EAB CB3F                B   154    			srl a
001EAD CB3F                B   155    			srl a	
001EAF FD77 02             B   156    			ld (iy+var_y),a			;var x = vl
                           B   157    
001EB2 DD7E00              B   158    			ld a,(ix)
001EB5 E607                B   159    			and 00000111b
001EB7 FD77 03             B   160    			ld (iy+var_z),a			;var z = va
                           B   161    			
001EBA DD7E00              B   162    			ld a,(ix)
001EBD E630                B   163    			and 00110000b
001EBF CB3F                B   164    			srl a
001EC1 CB3F                B   165    			srl a
001EC3 CB3F                B   166    			srl a
001EC5 CB3F                B   167    			srl a
001EC7 FD77 04             B   168    			ld (iy+var_p),a			; var p = v
                           B   169    			
001ECA DD7E00              B   170    			ld a,(ix)
001ECD E608                B   171    			and 00001000b
001ECF CB3F                B   172    			srl a
001ED1 CB3F                B   173    			srl a
001ED3 CB3F                B   174    			srl a
001ED5 FD77 05             B   175    			ld (iy+var_q),a				;var q 
                           B   176    
001ED8 CD B1 20 00         B   177    			call find_instruction_ascii		; g
                           B   178    	
                           B   179    ;----------------------------------------------
                           B   180    
001EDC 78                  B   181    index_table	ld a,b							; a
001EDD B7                  B   182    			or a
001EDE 28 07               B   183    			jr z,parse_instr				; m
001EE0 CB7E                B   184    d_filp		bit 7,(hl)						; w
001EE2 23                  B   185    			inc hl							; o
001EE3 28 FB               B   186    			jr z,d_filp					
001EE5 10 F9               B   187    			djnz d_filp
                           B   188    										
                           B   189    			
001EE7 FD21 7F 23 00       B   190    parse_instr	ld iy,opcode_vars
001EEC 01000000            B   191    			ld bc,0
001EF0 7E                  B   192    			ld a,(hl)						;ge
001EF1 FE80                B   193    			cp 80h
001EF3 C8                  B   194    			ret z
001EF4 E67F                B   195    			and 7fh
                           B   196    			
001EF6 FE26                B   197    			cp '&'							;sy
001EF8 20 28               B   198    			jr nz,not_adlsym
001EFA FDCB007E            B   199    			bit show_adl_prefix,(iy)		;do
001EFE CA 8C 20 00         B   200    			jr z,next_opcode_ascii_char
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  72


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
001F02 0600                B   201    			ld b,0
001F04 FDCB006E            B   202    			bit dot_l_prefix,(iy)
001F08 28 02               B   203    			jr z,naplsb
001F0A CBC0                B   204    			set 0,b
001F0C FDCB0076            B   205    naplsb		bit il_prefix,(iy)
001F10 28 02               B   206    			jr z,napmsb
001F12 CBC8                B   207    			set 1,b
001F14 E5                  B   208    napmsb		push hl
001F15 21 DE 28 00         B   209    			ld hl,adl_prefix_list
001F19 CD DC 1E 00         B   210    			call index_table				; r
001F1D E1                  B   211    			pop hl
001F1E C3 8C 20 00         B   212    			jp next_opcode_ascii_char
                           B   213    
001F22 FE5E                B   214    not_adlsym	cp '^'							;sy
001F24 20 0D               B   215    			jr nz,d_not_imm8
001F26 DD23                B   216    			inc ix							;th
001F28 DD7E00              B   217    			ld a,(ix)
001F2B CD 44 23 00         B   218    			call show_hex_byte
001F2F C3 8C 20 00         B   219    			jp next_opcode_ascii_char
                           B   220    					
001F33 FE21                B   221    d_not_imm8	cp '!'							;sy
001F35 20 26               B   222    			jr nz,d_not_imm16					001F37 11020000            B   223    			ld de,2
001F3B FDCB0076            B   224    			bit il_prefix,(iy)				;ad
001F3F 28 08               B   225    			jr z,imm16
001F41 13                  B   226    			inc de
001F42 DD7E03              B   227    			ld a,(ix+3)
001F45 CD 44 23 00         B   228    			call show_hex_byte
001F49 DD7E02              B   229    imm16		ld a,(ix+2)						;sh
001F4C CD 44 23 00         B   230    			call show_hex_byte			
001F50 DD7E01              B   231    			ld a,(ix+1)						;th
001F53 CD 44 23 00         B   232    			call show_hex_byte
001F57 DD19                B   233    			add ix,de						;ad
001F59 C3 8C 20 00         B   234    			jp next_opcode_ascii_char
                           B   235    
001F5D FE2F                B   236    d_not_imm16	cp '/'							;sy
001F5F 20 36               B   237    			jr nz,d_not_sb
001F61 FDCB0066            B   238    			bit ddcb_fdcb_prefix,(iy)
001F65 28 05               B   239    			jr z,norm_dbyte
001F67 DD7EFF              B   240    			ld a,(ix-1)						;if
001F6A 18 05               B   241    			jr xdcb_dbyte
001F6C DD23                B   242    norm_dbyte	inc ix
001F6E DD7E00              B   243    			ld a,(ix)						;th
001F71 CB7F                B   244    xdcb_dbyte	bit 7,a
001F73 20 10               B   245    			jr nz,d_sbin					;sh
001F75 F5                  B   246    			push af
001F76 3E2B                B   247    			ld a,'+'
001F78 CD 55 23 00         B   248    			call show_ascii_char
001F7C F1                  B   249    			pop af
001F7D CD 44 23 00         B   250    			call show_hex_byte
001F81 C3 8C 20 00         B   251    			jp next_opcode_ascii_char
001F85 F5                  B   252    d_sbin		push af
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  73


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
001F86 3E2D                B   253    			ld a,'-'
001F88 CD 55 23 00         B   254    			call show_ascii_char
001F8C F1                  B   255    			pop af
001F8D ED44                B   256    			neg
001F8F CD 44 23 00         B   257    			call show_hex_byte
001F93 C3 8C 20 00         B   258    			jp next_opcode_ascii_char
                           B   259    			
001F97 FE64                B   260    d_not_sb	cp 'd'							;sy
001F99 20 1E               B   261    			jr nz,d_not_pcdip
001F9B DD23                B   262    			inc ix
001F9D 01000000            B   263    			ld bc,0
001FA1 DD7E00              B   264    			ld a,(ix)
001FA4 CB7F                B   265    			bit 7,a
001FA6 28 01               B   266    			jr z,d_spcd_pos
001FA8 0B                  B   267    			dec bc
001FA9 4F                  B   268    d_spcd_pos	ld c,a
001FAA 03                  B   269    			inc bc
001FAB DDE5                B   270    			push ix
001FAD DD09                B   271    			add ix,bc
001FAF CD 61 23 00         B   272    			call show_ix
001FB3 DDE1                B   273    			pop ix
001FB5 C3 8C 20 00         B   274    			jp next_opcode_ascii_char
                           B   275    
001FB9 FE3E                B   276    d_not_pcdip	cp '>'							;sy
001FBB 20 16               B   277    			jr nz,d_not_sdig
001FBD 23                  B   278    			inc hl							;th
001FBE 01000000            B   279    			ld bc,0
001FC2 4E                  B   280    			ld c,(hl)
001FC3 FD21 7F 23 00       B   281    			ld iy,opcode_vars
001FC8 FD09                B   282    			add iy,bc
001FCA FD7E00              B   283    			ld a,(iy)						;a 
001FCD C630                B   284    			add a,30h						;co
001FCF C3 88 20 00         B   285    			jp d_output_char
                           B   286    
001FD3 FE5F                B   287    d_not_sdig	cp '_'
001FD5 20 12               B   288    			jr nz,d_nhlsubst				; s
001FD7 E5                  B   289    			push hl
001FD8 21 B6 28 00         B   290    			ld hl,hl_subs
001FDC CD 94 20 00         B   291    hl_subst	call prefix_to_offset
001FE0 CD DC 1E 00         B   292    			call index_table				; r
001FE4 E1                  B   293    			pop hl
001FE5 C3 8C 20 00         B   294    			jp next_opcode_ascii_char
                           B   295    			
001FE9 FE7C                B   296    d_nhlsubst	cp '|'
001FEB 20 07               B   297    			jr nz,d_noinvhls
001FED E5                  B   298    			push hl
001FEE 21 BC 28 00         B   299    			ld hl,inv_hl_subs
001FF2 18 E8               B   300    			jr hl_subst
                           B   301    			
001FF4 FE68                B   302    d_noinvhls	cp 'h'							;sy
001FF6 20 07               B   303    			jr nz,d_nhsubst
001FF8 E5                  B   304    			push hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  74


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
001FF9 21 C2 28 00         B   305    			ld hl,h_subs
001FFD 18 DD               B   306    			jr hl_subst
                           B   307    			
001FFF FE6C                B   308    d_nhsubst	cp 'l'							;sy
002001 20 07               B   309    			jr nz,d_nlsubst
002003 E5                  B   310    			push hl
002004 21 C9 28 00         B   311    			ld hl,l_subs
002008 18 D2               B   312    			jr hl_subst
                           B   313    			
00200A FE24                B   314    d_nlsubst	cp '$'
00200C 20 07               B   315    			jr nz,d_nihlsubst				; s
00200E E5                  B   316    			push hl
00200F 21 D0 28 00         B   317    			ld hl,ind_hl_subs
002013 18 C7               B   318    			jr hl_subst
                           B   319    
                           B   320    
002015                     B   321    d_nihlsubst	
                           B   322    
002015 FE7E                B   323    			cp '~'							; s
002017 20 1F               B   324    			jr nz,ntable_r
002019 11 0B 28 00         B   325    			ld de,table_r
00201D 23                  B   326    do_table 	inc hl
00201E 01000000            B   327    			ld bc,0							; t
002022 4E                  B   328    			ld c,(hl)
002023 FD21 7F 23 00       B   329    			ld iy,opcode_vars
002028 FD09                B   330    			add iy,bc
00202A FD4600              B   331    			ld b,(iy)						;in
00202D E5                  B   332    			push hl
00202E EB                  B   333    			ex de,hl
00202F CD DC 1E 00         B   334    			call index_table				; r
002033 E1                  B   335    			pop hl
002034 C3 8C 20 00         B   336    			jp next_opcode_ascii_char
                           B   337    			
002038 11 16 28 00         B   338    ntable_r	ld de,table_r2					; s
00203C FE3D                B   339    			cp '='
00203E 28 DD               B   340    			jr z,do_table
                           B   341    			
002040 11 21 28 00         B   342    			ld de,table_rp					; s
002044 FE40                B   343    			cp '@'
002046 28 D5               B   344    			jr z,do_table 
                           B   345    			
002048 11 28 28 00         B   346    			ld de,table_rp2					; s
00204C FE2A                B   347    			cp '*'
00204E 28 CD               B   348    			jr z,do_table
                           B   349    			
002050 11 8E 28 00         B   350    			ld de,table_rp3					; s
002054 FE3C                B   351    			cp '<'
002056 28 C5               B   352    			jr z,do_table
                           B   353    			
002058 11 96 28 00         B   354    			ld de,table_rp4					; s
00205C FE7D                B   355    			cp '}'
00205E 28 BD               B   356    			jr z,do_table
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  75


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   357    			
002060 11 30 28 00         B   358    			ld de,table_cc					; s
002064 FE23                B   359    			cp '#'
002066 28 B5               B   360    			jr z,do_table 
                           B   361    			
002068 11 3C 28 00         B   362    			ld de,table_alu					; s
00206C FE3A                B   363    			cp ':'
00206E 28 AD               B   364    			jr z,do_table 
                           B   365    			
002070 11 68 28 00         B   366    			ld de,table_rot					; s
002074 FE25                B   367    			cp '%'
002076 28 A5               B   368    			jr z,do_table 
                           B   369    			
002078 11 A6 28 00         B   370    			ld de,table_rst					; s
00207C FE3B                B   371    			cp ';'
00207E 28 9D               B   372    			jr z,do_table 
                           B   373    
002080 11 9E 28 00         B   374    			ld de,table_rp5					; s
002084 FE7B                B   375    			cp '{'
002086 28 95               B   376    			jr z,do_table 
                           B   377    
002088                     B   378    ntable_bli
                           B   379    
                           B   380    ;----------------------------------------------
                           B   381    
002088                     B   382    d_output_char
                           B   383    
002088 CD 55 23 00         B   384    			call show_ascii_char
                           B   385    
00208C                     B   386    next_opcode_ascii_char
                           B   387    
00208C CB7E                B   388    			bit 7,(hl)						;if
00208E C0                  B   389    			ret nz
00208F 23                  B   390    			inc hl
002090 C3 E7 1E 00         B   391    			jp parse_instr
                           B   392    			
                           B   393    			
                           B   394    ;----------------------------------------------
                           B   395    
                           B   396    
002094                     B   397    prefix_to_offset
                           B   398    
002094 0602                B   399    			ld b,2							;se
002096 FDCB005E            B   400    			bit sub_iy_prefix,(iy)
00209A C0                  B   401    			ret nz
00209B 05                  B   402    			dec b
00209C FDCB0056            B   403    			bit sub_ix_prefix,(iy)
0020A0 C0                  B   404    			ret nz
0020A1 05                  B   405    			dec b
0020A2 C9                  B   406    			ret
                           B   407    			
                           B   408    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  76


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0020A3                     B   409    check_nxt_byte_prefix			
                           B   410    
0020A3 DD23                B   411    			inc ix
0020A5 DD7E00              B   412    			ld a,(ix)
0020A8 FEDD                B   413    			cp 0ddh
0020AA C8                  B   414    			ret z
0020AB FEED                B   415    			cp 0edh
0020AD C8                  B   416    			ret z
0020AE FEFD                B   417    			cp 0fdh
0020B0 C9                  B   418    			ret
                           B   419    			
                           B   420    			
                           B   421    ;==============================================
                           B   422    ;- Find instruction ascii ---------------------
                           B   423    ;==============================================
                           B   424    
                           B   425    ; Returns HL = ptr to ascii name
                           B   426    ;          B = group index (number of instructi
                           B   427    
0020B1                     B   428    find_instruction_ascii
                           B   429    
0020B1 0600                B   430    			ld b,0						; defau
                           B   431    
0020B3 FDCB0066            B   432    			bit ddcb_fdcb_prefix,(iy)	; Was t
0020B7 28 12               B   433    			jr z,not_ddcb_fdcb_inst
0020B9 21 E5 27 00         B   434    			ld hl,ddcb_fdcb_z6		
0020BD FD46 01             B   435    			ld b,(iy+var_x)				; x is 
0020C0 FD7E 03             B   436    			ld a,(iy+var_z)
0020C3 FE06                B   437    			cp 6
0020C5 C8                  B   438    			ret z
0020C6 21 AD 27 00         B   439    			ld hl,ddcb_fdcb_zn6					0020CA C9                  B   440    			ret
                           B   441    			
                           B   442    ;==============================================
                           B   443    
0020CB                     B   444    not_ddcb_fdcb_inst
                           B   445    
0020CB FDCB0046            B   446    			bit cb_prefix,(iy)			;is thi
0020CF 28 08               B   447    			jr z,not_cb_inst
0020D1 21 35 25 00         B   448    			ld hl,cb_group		
0020D5 FD46 01             B   449    			ld b,(iy+var_x)				; x is 
0020D8 C9                  B   450    			ret
                           B   451    
                           B   452    ;==============================================
                           B   453    
0020D9                     B   454    not_cb_inst
                           B   455    
0020D9 FDCB004E            B   456    			bit ed_prefix,(iy)			;is thi
0020DD CA FE 21 00         B   457    			jr z,not_ed_inst
                           B   458    
0020E1 FD7E 01             B   459    			ld a,(iy+var_x)				;x = 0
0020E4 B7                  B   460    			or a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  77


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0020E5 20 56               B   461    			jr nz,notedx0
                           B   462    		
                           B   463    			
0020E7 FD7E 03             B   464    			ld a,(iy+var_z)				
0020EA B7                  B   465    			or a
0020EB 20 0D               B   466    			jr nz,notedx0z0
0020ED 21 5C 25 00         B   467    			ld hl,ed_x0_z0_yn6			;x0 / z
0020F1 FD7E 02             B   468    			ld a,(iy+var_y)
0020F4 FE06                B   469    			cp 6
0020F6 C0                  B   470    			ret nz
0020F7 0601                B   471    			ld b,1
0020F9 C9                  B   472    			ret
                           B   473    
0020FA FE01                B   474    notedx0z0	cp 1
0020FC 20 0D               B   475    			jr nz,notedx0z1
0020FE 21 6D 25 00         B   476    			ld hl,ed_x0_z1				;x0 / z
002102 FD7E 02             B   477    			ld a,(iy+var_y)
002105 FE06                B   478    			cp 6
002107 C0                  B   479    			ret nz
002108 0601                B   480    			ld b,1
00210A C9                  B   481    			ret
                           B   482    
00210B FE02                B   483    notedx0z1	cp 2
00210D 20 05               B   484    			jr nz,notedx0z2
00210F 21 83 25 00         B   485    			ld hl,ed_x0_z2				;x0 / z
002113 C9                  B   486    			ret
                           B   487    
002114 FE03                B   488    notedx0z2	cp 3
002116 20 05               B   489    			jr nz,notedx0z3
002118 21 8F 25 00         B   490    			ld hl,ed_x0_z3				;x0 / z
00211C C9                  B   491    			ret
                           B   492    			
00211D FE04                B   493    notedx0z3	cp 4
00211F 20 05               B   494    			jr nz,notedx0z4
002121 21 9B 25 00         B   495    			ld hl,ed_x0_z4				;x0 / z
002125 C9                  B   496    			ret
                           B   497    
002126 FE06                B   498    notedx0z4	cp 6
002128 20 05               B   499    			jr nz,notedx0z6				;x0 / z
00212A 21 A5 25 00         B   500    			ld hl,ed_x0_z6
00212E C9                  B   501    			ret
                           B   502    
00212F FE07                B   503    notedx0z6	cp 7
002131 C2 08 28 00         B   504    			jr nz,bad_opcode			;x0 / z
002135 21 B0 25 00         B   505    			ld hl,ed_x0_z7
002139 FD46 05             B   506    			ld b,(iy+var_q)
00213C C9                  B   507    			ret
                           B   508    			
                           B   509    ;----------------------------------------------
                           B   510    			
00213D FE01                B   511    notedx0		cp 1	
00213F 20 68               B   512    			jr nz,ed_xn1
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  78


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   513    
002141 FD7E 03             B   514    			ld a,(iy+var_z)					;x 
002144 B7                  B   515    			or a
002145 20 0D               B   516    			jr nz,ed_x1_zn0
002147 21 C5 25 00         B   517    			ld hl,ed_x1_z0_yn6				;z 
00214B FD7E 02             B   518    			ld a,(iy+var_y)
00214E FE06                B   519    			cp 6
002150 C0                  B   520    			ret nz
002151 0601                B   521    			ld b,1
002153 C9                  B   522    			ret
                           B   523    			
002154 FE01                B   524    ed_x1_zn0	cp 1
002156 20 0D               B   525    			jr nz,ed_x1_zn1
002158 21 D5 25 00         B   526    			ld hl,ed_x1_z1_yn6				;z 
00215C FD7E 02             B   527    			ld a,(iy+var_y)
00215F FE06                B   528    			cp 6
002161 C0                  B   529    			ret nz
002162 0601                B   530    			ld b,1
002164 C9                  B   531    			ret
                           B   532    		
002165 FE02                B   533    ed_x1_zn1	cp 2
002167 20 08               B   534    			jr nz,ed_x1_zn2					;z 
002169 21 EA 25 00         B   535    			ld hl,ed_x1_z2	
00216D FD46 05             B   536    			ld b,(iy+var_q)
002170 C9                  B   537    			ret
                           B   538    
002171 FE03                B   539    ed_x1_zn2	cp 3
002173 20 08               B   540    			jr nz,ed_x1_zn3					;z 
002175 21 00 26 00         B   541    			ld hl,ed_x1_z3	
002179 FD46 05             B   542    			ld b,(iy+var_q)
00217C C9                  B   543    			ret
                           B   544    			
00217D FE04                B   545    ed_x1_zn3	cp 4							;z 
00217F 20 08               B   546    			jr nz,ed_x1_zn4
002181 21 15 26 00         B   547    			ld hl,ed_x1_z4
002185 FD46 02             B   548    			ld b,(iy+var_y)
002188 C9                  B   549    			ret
                           B   550    			
002189 FE05                B   551    ed_x1_zn4	cp 5
00218B 20 08               B   552    			jr nz,ed_x1_zn5
00218D 21 4D 26 00         B   553    			ld hl,ed_x1_z5					;z 
002191 FD46 02             B   554    			ld b,(iy+var_y)
002194 C9                  B   555    			ret
                           B   556    			
002195 FE06                B   557    ed_x1_zn5	cp 6
002197 20 08               B   558    			jr nz,ed_x1_zn6					;z=
002199 21 7C 26 00         B   559    			ld hl,ed_x1_z6
00219D FD46 02             B   560    			ld b,(iy+var_y)
0021A0 C9                  B   561    			ret
                           B   562    			
0021A1 21 A1 26 00         B   563    ed_x1_zn6	ld hl,ed_x1_z7					;z=
0021A5 FD46 02             B   564    			ld b,(iy+var_y)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  79


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0021A8 C9                  B   565    			ret
                           B   566    
                           B   567    ;----------------------------------------------
                           B   568    				
0021A9 FE02                B   569    ed_xn1		cp 2
0021AB 20 2E               B   570    			jr nz,ed_xn2
                           B   571    			
0021AD FD46 02             B   572    			ld b,(iy+var_y)
0021B0 FD7E 03             B   573    			ld a,(iy+var_z)
0021B3 B7                  B   574    			or a
0021B4 20 05               B   575    			jr nz,edx2zn0
0021B6 21 C5 26 00         B   576    			ld hl,ed_x2_z0					;x=
0021BA C9                  B   577    			ret
                           B   578    
0021BB FE01                B   579    edx2zn0		cp 1
0021BD 20 05               B   580    			jr nz,edx2zn1
0021BF 21 DF 26 00         B   581    			ld hl,ed_x2_z1					;x=
0021C3 C9                  B   582    			ret
                           B   583    
0021C4 FE02                B   584    edx2zn1		cp 2
0021C6 20 05               B   585    			jr nz,edx2zn2
0021C8 21 F9 26 00         B   586    			ld hl,ed_x2_z2					;x=
0021CC C9                  B   587    			ret
                           B   588    
0021CD FE03                B   589    edx2zn2		cp 3
0021CF 20 05               B   590    			jr nz,edx2zn3
0021D1 21 29 27 00         B   591    			ld hl,ed_x2_z3					;x=
0021D5 C9                  B   592    			ret
                           B   593    
0021D6 21 5B 27 00         B   594    edx2zn3		ld hl,ed_x2_z4					;x=
0021DA C9                  B   595    			ret
                           B   596    
                           B   597    ;----------------------------------------------
                           B   598    
0021DB FE03                B   599    ed_xn2		cp 3
0021DD 20 18               B   600    			jr nz,ed_xn3
                           B   601    			
0021DF FD46 02             B   602    			ld b,(iy+var_y)
0021E2 FD7E 03             B   603    			ld a,(iy+var_z)
0021E5 FE02                B   604    			cp 2
0021E7 20 05               B   605    			jr nz,edx3zn2
0021E9 21 91 27 00         B   606    			ld hl,ed_x3_z2					;x=
0021ED C9                  B   607    			ret
0021EE FE03                B   608    edx3zn2		cp 3
0021F0 20 05               B   609    			jr nz,edx3zn3
0021F2 21 9F 27 00         B   610    			ld hl,ed_x3_z3					;x=
0021F6 C9                  B   611    			ret
                           B   612    
0021F7                     B   613    edx3zn3
                           B   614    
0021F7                     B   615    ed_xn3
                           B   616    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  80


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   617    ;----------------------------------------------
                           B   618    
0021F7                     B   619    invalid_op
0021F7 21 08 28 00         B   620    			ld hl,bad_opcode				; x
0021FB 0600                B   621    			ld b,0
0021FD C9                  B   622    			ret
                           B   623    			
                           B   624    			
                           B   625    ;========= UNPREFIXED INSTRUCTION =============
                           B   626    
                           B   627    
0021FE FD7E 01             B   628    not_ed_inst	ld a,(iy+var_x)				; is X 
002201 B7                  B   629    			or a
002202 C2 9A 22 00         B   630    			jr nz,x_not_zero
                           B   631    
                           B   632    ;----------------------------------------------
                           B   633    
                           B   634    
002206 FD7E 03             B   635    			ld a,(iy+var_z)				;x = 0
002209 B7                  B   636    			or a
00220A 20 14               B   637    			jr nz,x0_z_not_zero
00220C 21 87 23 00         B   638    			ld hl,x0_z0
002210 FD7E 02             B   639    			ld a,(iy+var_y)				;y is t
002213 47                  B   640    			ld b,a
002214 D604                B   641    			sub 4
002216 FD77 06             B   642    			ld (iy+var_calc),a			;var_ca
002219 78                  B   643    			ld a,b
00221A FE04                B   644    			cp 4
00221C D8                  B   645    			ret c
00221D 0604                B   646    			ld b,4						;if y >
00221F C9                  B   647    			ret
                           B   648    			
002220                     B   649    x0_z_not_zero		
                           B   650    			
002220 FE01                B   651    			cp 1
002222 20 1A               B   652    			jr nz,x0_z_not_one
002224 FD7E 02             B   653    			ld a,(iy+var_y)				;x=0/z=
002227 FE06                B   654    			cp 6
002229 20 0B               B   655    			jr nz,x0z1yn6
00222B CD 3A 23 00         B   656    			call test_ixiy_prefix		;if y=6
00222F 28 05               B   657    			jr z,x0z1yn6				;altern
002231 21 BA 23 00         B   658    			ld hl,x0_z1_y6
002235 C9                  B   659    			ret
                           B   660    
002236 21 A7 23 00         B   661    x0z1yn6		ld hl,x0_z1					;x=0, z
00223A FD46 05             B   662    			ld b,(iy+var_q)				;q is t
00223D C9                  B   663    			ret 
                           B   664    			
00223E                     B   665    x0_z_not_one
                           B   666    
00223E FE02                B   667    			cp 2
002240 20 08               B   668    			jr nz,x0_z_not_two
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  81


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002242 21 C2 23 00         B   669    			ld hl,x0_z2
002246 FD46 02             B   670    			ld b,(iy+var_y)				;y is t
002249 C9                  B   671    			ret
                           B   672    			
00224A                     B   673    x0_z_not_two
                           B   674    
00224A FE03                B   675    			cp 3
00224C 20 08               B   676    			jr nz,x0_z_not_three
00224E 21 0E 24 00         B   677    			ld hl,x0_z3
002252 FD46 05             B   678    			ld b,(iy+var_q)				;q is t
002255 C9                  B   679    			ret
                           B   680    			
002256                     B   681    x0_z_not_three
                           B   682    
002256 FE04                B   683    			cp 4
002258 20 05               B   684    			jr nz,x0_z_not_four
00225A 21 1E 24 00         B   685    			ld hl,x0_z4					;no ini
00225E C9                  B   686    			ret			
                           B   687    			
00225F                     B   688    x0_z_not_four
                           B   689    
00225F FE05                B   690    			cp 5
002261 20 05               B   691    			jr nz,x0_z_not_five
002263 21 26 24 00         B   692    			ld hl,x0_z5					;no ini
002267 C9                  B   693    			ret				
                           B   694    			
002268                     B   695    x0_z_not_five
                           B   696    
002268 FE06                B   697    			cp 6
00226A 20 1A               B   698    			jr nz,x0_z_not_six
00226C 21 2E 24 00         B   699    			ld hl,x0_z6					;normal
002270 FD7E 02             B   700    			ld a,(iy+var_y)
002273 FE07                B   701    			cp 7
002275 C0                  B   702    			ret nz
002276 FDCB0056            B   703    			bit sub_ix_prefix,(iy)
00227A 20 05               B   704    			jr nz,altx0z6
00227C FDCB005E            B   705    			bit sub_iy_prefix,(iy)
002280 C8                  B   706    			ret z	
002281 21 37 24 00         B   707    altx0z6		ld hl,alt_x0_z6				;if dd/
002285 C9                  B   708    			ret
                           B   709    
                           B   710    
002286                     B   711    x0_z_not_six
                           B   712    			
002286 21 3F 24 00         B   713    			ld hl,x0_z7					;x=0, z
00228A FD46 02             B   714    			ld b,(iy+var_y)				;y is n
00228D CD 3A 23 00         B   715    			call test_ixiy_prefix
002291 C8                  B   716    			ret z
002292 21 59 24 00         B   717    altx0z7		ld hl,alt_x0_z7				;if dd/
002296 FD46 05             B   718    			ld b,(iy+var_q)				;this i
002299 C9                  B   719    			ret
                           B   720    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  82


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   721    ;----------------------------------------------
                           B   722    
00229A FE01                B   723    x_not_zero	cp 1						; is x 
00229C 20 32               B   724    			jr nz,x_not_one
                           B   725    			
00229E 21 6B 24 00         B   726    			ld hl,x1_table				; x=1
0022A2 CD 3A 23 00         B   727    			call test_ixiy_prefix
0022A6 20 11               B   728    			jr nz,pref_x1
0022A8 FD7E 02             B   729    			ld a,(iy+var_y)
0022AB FE06                B   730    			cp 6
0022AD C0                  B   731    			ret nz
0022AE FD7E 03             B   732    			ld a,(iy+var_z)
0022B1 FE06                B   733    			cp 6
0022B3 C0                  B   734    			ret nz
0022B4 21 89 24 00         B   735    			ld hl,x1_y6_z6				;if y=6
0022B8 C9                  B   736    			ret
                           B   737    
0022B9 FD7E 02             B   738    pref_x1		ld a,(iy+var_y)				
0022BC FE06                B   739    			cp 6
0022BE 20 05               B   740    			jr nz,x1yn6
0022C0 21 75 24 00         B   741    			ld hl,x1_y6
0022C4 C9                  B   742    			ret
                           B   743    			
0022C5 FD7E 03             B   744    x1yn6		ld a,(iy+var_z)
0022C8 FE06                B   745    			cp 6
0022CA C0                  B   746    			ret nz
0022CB 21 7F 24 00         B   747    			ld hl,x1_z6
0022CF C9                  B   748    			ret
                           B   749    			
                           B   750    ;----------------------------------------------
                           B   751    			
0022D0 FE02                B   752    x_not_one	cp 2						; is x 
0022D2 20 05               B   753    			jr nz,x_not_two
0022D4 21 8D 24 00         B   754    			ld hl,x2_table				; no in
0022D8 C9                  B   755    			ret
                           B   756    			
                           B   757    ;----------------------------------------------
                           B   758    
0022D9 FD7E 03             B   759    x_not_two	ld a,(iy+var_z)				; x mus
0022DC B7                  B   760    			or a
0022DD 20 05               B   761    			jr nz,x3_z_not_zero
0022DF 21 92 24 00         B   762    			ld hl,x3_z0					; no in
0022E3 C9                  B   763    			ret
                           B   764    						
0022E4                     B   765    x3_z_not_zero
                           B   766    
0022E4 FE01                B   767    			cp 1
0022E6 20 11               B   768    			jr nz,x3_z_not_one
0022E8 21 9A 24 00         B   769    			ld hl,x3_z1_q0
0022EC FD7E 05             B   770    			ld a,(iy+var_q)
0022EF B7                  B   771    			or a
0022F0 C8                  B   772    			ret z						; no in
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  83


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0022F1 21 A2 24 00         B   773    			ld hl,x3_z1_q1
0022F5 FD46 04             B   774    			ld b,(iy+var_p)				; index
0022F8 C9                  B   775    			ret
                           B   776    
0022F9                     B   777    x3_z_not_one
                           B   778    
0022F9 FE02                B   779    			cp 2
0022FB 20 05               B   780    			jr nz,x3_z_not_two
0022FD 21 B9 24 00         B   781    			ld hl,x3_z2					;no ini
002301 C9                  B   782    			ret
                           B   783    
002302                     B   784    x3_z_not_two
                           B   785    
002302 FE03                B   786    			cp 3
002304 20 08               B   787    			jr nz,x3_z_not_three
002306 21 C2 24 00         B   788    			ld hl,x3_z3
00230A FD46 02             B   789    			ld b,(iy+var_y)				;index 
00230D C9                  B   790    			ret
                           B   791    
00230E                     B   792    x3_z_not_three
                           B   793    
00230E FE04                B   794    			cp 4
002310 20 05               B   795    			jr nz,x3_z_not_four
002312 21 F7 24 00         B   796    			ld hl,x3_z4				;no initial
002316 C9                  B   797    			ret						
                           B   798    
                           B   799    
002317                     B   800    x3_z_not_four
                           B   801    
002317 FE05                B   802    			cp 5
002319 20 11               B   803    			jr nz,x3_z_not_five
00231B 21 02 25 00         B   804    			ld hl,x3_z5_q0
00231F FD7E 05             B   805    			ld a,(iy+var_q)
002322 B7                  B   806    			or a
002323 C8                  B   807    			ret z						;no ind
002324 21 0B 25 00         B   808    			ld hl,x3_z5_q1
002328 FD46 04             B   809    			ld b,(iy+var_p)				;else i
00232B C9                  B   810    			ret
                           B   811    
00232C                     B   812    x3_z_not_five
                           B   813    
00232C FE06                B   814    			cp 6
00232E 20 05               B   815    			jr nz,x3_z_not_six
002330 21 29 25 00         B   816    			ld hl,x3_z6					;no ind
002334 C9                  B   817    			ret
                           B   818    
002335                     B   819    x3_z_not_six
                           B   820    
002335 21 2D 25 00         B   821    			ld hl,x3_z7					;x=3, z
002339 C9                  B   822    			ret
                           B   823    
                           B   824    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  84


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   825    ;==============================================
                           B   826    
00233A                     B   827    test_ixiy_prefix
                           B   828    
00233A FDCB0056            B   829    			bit sub_ix_prefix,(iy)
00233E C0                  B   830    			ret nz
00233F FDCB005E            B   831    			bit sub_iy_prefix,(iy)
002343 C9                  B   832    			ret
                           B   833    			
                           B   834    ;==============================================
                           B   835    
                           B   836    
002344                     B   837    show_hex_byte
                           B   838    
002344 E5                  B   839    			push hl
002345 21 F1 28 00         B   840    			ld hl,output_byte_txt
002349 E5                  B   841    			push hl
00234A CD DF 10 00         B   842    			call hexbyte_to_ascii
00234E E1                  B   843    			pop hl
00234F CD 94 0F 00         B   844    			call os_print_string
002353 E1                  B   845    			pop hl
002354 C9                  B   846    			ret
                           B   847    			
                           B   848    
002355                     B   849    show_ascii_char
                           B   850    
002355 E5                  B   851    			push hl
002356 21 F4 28 00         B   852    			ld hl,output_char_txt
00235A 77                  B   853    			ld (hl),a
00235B CD 94 0F 00         B   854    			call os_print_string
00235F E1                  B   855    			pop hl
002360 C9                  B   856    			ret
                           B   857    		
                           B   858    		
002361 DD22 EE 28 00       B   859    show_ix		ld (d_work_address),ix
002366 3A F0 28 00         B   860    			ld a,(d_work_address+2)
00236A CD 44 23 00         B   861    			call show_hex_byte
00236E 3A EF 28 00         B   862    			ld a,(d_work_address+1)
002372 CD 44 23 00         B   863    			call show_hex_byte
002376 3A EE 28 00         B   864    			ld a,(d_work_address)
00237A CD 44 23 00         B   865    			call show_hex_byte
00237E C9                  B   866    			ret
                           B   867    			
                           B   868    ;----------------------------------------------
                           B   869    
                           B   870    ; SYMBOLS:
                           B   871    
                           B   872    ; #  CC_table
                           B   873    ; ~  r table (registers)
                           B   874    ; =  r2 table (registers 2)
                           B   875    ; @  RP table (register pairs 1)
                           B   876    ; *  RP2 table (registers pairs 2)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  85


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
                           B   877    ; :  ALU table
                           B   878    ; %  ROT table
                           B   879    ; _  HL,IX/IY substitute selected by prefix
                           B   880    ; |  HL, IY/IX substitute based on prefix (IX/I
                           B   881    ; $  (HL),(IX+d),(IY+d) substitute selected by 
                           B   882    ; h  H,IXH/IYH substitute selected by prefix
                           B   883    ; l  L,IXL,IYL substitute selected by prefix
                           B   884    ; &  ADL prefix 
                           B   885    
                           B   886    ; ^   n (8 bit immediate)
                           B   887    ; !   nn (16 or 24 bit immediate)
                           B   888    ; d   8 bit signed jump displacement from PC
                           B   889    ; /   8 bit signed byte used for IX+d, IY+d ins
                           B   890    ; >   single digit used by BIT,SET,RES instruct
                           B   891    ; <   RP3 table (register pairs 3)
                           B   892    ; }   RP4 table (register pairs 4)
                           B   893    ; ;   RST table
                           B   894    ; {   RP5 table (register pairs 5)
                           B   895    
00237F                     B   896    opcode_vars
                           B   897    
00237F 00                  B   898    prefix_bits_loc	db 0	
002380 00                  B   899    var_x_loc		db 0	
002381 00                  B   900    var_y_loc		db 0	
002382 00                  B   901    var_z_loc		db 0	
002383 00                  B   902    var_p_loc		db 0	
002384 00                  B   903    var_q_loc		db 0
002385 00                  B   904    var_calc_loc	db 0
002386 01                  B   905    var_adl_loc		db 1
                           B   906    
       00000000            B   907    prefix_bits		equ opcode_vars-prefix_bits_loc
       00000001            B   908    var_x			equ var_x_loc-opcode_vars
       00000002            B   909    var_y			equ var_y_loc-opcode_vars
       00000003            B   910    var_z			equ var_z_loc-opcode_vars
       00000004            B   911    var_p			equ var_p_loc-opcode_vars
       00000005            B   912    var_q			equ var_q_loc-opcode_vars
       00000006            B   913    var_calc		equ var_calc_loc-opcode_vars
       00000007            B   914    var_adl			equ var_adl_loc-opcode_vars
                           B   915    
                           B   916    ;---- Unprefixed opcodes ----------------------
                           B   917    
                           B   918    
002387 4E4FD0              B   919    x0_z0		db 'NO','P'+80h				; y0
00238A 45582041 462C4146   B   920    			db 'EX AF,AF',27h+80h		; y1 
002392 A7 
002393 444A4E5A 206480     B   921    			db 'DJNZ ','d',80h			; y2
00239A 4A522064 80         B   922    			db 'JR ','d',80h			; y3
00239F 4A522023 06 2C6480   B   923    			db 'JR #',var_calc,',d',80h	; y4-y7
                           B   924    			
0023A7 4C442620 40 04      B   925    x0_z1		db 'LD& @',var_p,',!',80h	; q=0
0023AD 2C2180 
0023B0 41444426 205F2C40   B   926    			db 'ADD& _,@',var_p,80h		; q=1
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  86


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0023B8 04 80 
0023BA 4C442620 7C2C2480   B   927    x0_z1_y6	db 'LD& |,$',80h
                           B   928    
0023C2 4C442620 28424329   B   929    x0_z2		db 'LD& (BC),','A'+80h		;y=0
0023CA 2CC1 
0023CC 4C442620 412C2842   B   930    			db 'LD& A,(BC',')'+80h		;y=1
0023D4 43A9 
0023D6 4C442620 28444529   B   931    			db 'LD& (DE),','A'+80h		;y=2
0023DE 2CC1 
0023E0 4C442620 412C2844   B   932    			db 'LD& A,(DE',')'+80h		;y=3
0023E8 45A9 
0023EA 4C442620 2821292C   B   933    			db 'LD& (!),','_'+80h		;y=4
0023F2 DF 
0023F3 4C442620 5F2C2821   B   934    			db 'LD& _,(!',')'+80h		;y=5
0023FB A9 
0023FC 4C442620 2821292C   B   935    			db 'LD& (!),','A'+80h		;y=6
002404 C1 
002405 4C442620 412C2821   B   936    			db 'LD& A,(!',')'+80h		;y=7
00240D A9 
                           B   937    
00240E 494E4326 2040 04    B   938    x0_z3		db 'INC& @',var_p,80h		;q=0
002415 80 
002416 44454326 2040 04    B   939    			db 'DEC& @',var_p,80h		;q=1
00241D 80 
                           B   940    			
00241E 494E4326 207E 02    B   941    x0_z4		db 'INC& ~',var_y,80h		
002425 80 
                           B   942    
002426 44454326 207E 02    B   943    x0_z5		db 'DEC& ~',var_y,80h		
00242D 80 
                           B   944    			
00242E 4C442620 7E 02      B   945    x0_z6		db 'LD& ~',var_y,',^',80h	
002434 2C5E80 
002437 4C442620 242C7C80   B   946    alt_x0_z6	db 'LD& $,|',80h			; when 
                           B   947    		
00243F 524C43C1            B   948    x0_z7		db 'RLC','A'+80h		;y=0
002443 525243C1            B   949    			db 'RRC','A'+80h		;y=1
002447 524CC1              B   950    			db 'RL','A'+80h			;y=2
00244A 5252C1              B   951    			db 'RR','A'+80h			;y=3
00244D 4441C1              B   952    			db 'DA','A'+80h			;y=4
002450 4350CC              B   953    			db 'CP','L'+80h			;y=5
002453 5343C6              B   954    			db 'SC','F'+80h			;y=6 (and n
002456 4343C6              B   955    			db 'CC','F'+80h			;y=7 (and n
                           B   956    			
002459 4C442620 7B 04      B   957    alt_x0_z7	db 'LD& {',var_p,',$',80h	;q=0 (D
00245F 2C2480 
002462 4C442620 242C7B 04   B   958    			db 'LD& $,{',var_p,80h		;q=1 (D
00246A 80 
                           B   959    		
                           B   960    
                           B   961    
00246B 4C442620 7E 02      B   962    x1_table	db 'LD& ~',var_y,',~',var_z,80h	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  87


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002471 2C7E 03 80 
002475 4C442620 7E 02      B   963    x1_y6	 	db 'LD& ~',var_y,',=',var_z,80h		00247B 2C3D 03 80 
00247F 4C442620 3D 02      B   964    x1_z6		db 'LD& =',var_y,',~',var_z,80h		002485 2C7E 03 80 
                           B   965    
002489 48414CD4            B   966    x1_y6_z6	db 'HAL','T'+80h
                           B   967    
                           B   968    
                           B   969    
00248D 3A 02 7E 03 80      B   970    x2_table	db ':',var_y,'~',var_z,80h			                           B   971    			
                           B   972    		
                           B   973    		
002492 52455426 2023 02    B   974    x3_z0		db 'RET& #',var_y,80h
002499 80 
                           B   975    
00249A 504F5026 202A 04    B   976    x3_z1_q0	db 'POP& *',var_p,80h			
0024A1 80 
0024A2 52455426 80         B   977    x3_z1_q1	db 'RET','&',80h		;p=0
0024A7 4558D8              B   978    			db 'EX','X'+80h			;p=1
0024AA 4A502620 5F80       B   979    			db 'JP& _',80h			;p=2
0024B0 4C442620 53502C5F   B   980    			db 'LD& SP,_',80h		;p=3
0024B8 80 
                           B   981    
0024B9 4A502620 23 02      B   982    x3_z2		db 'JP& #',var_y,',!',80h		
0024BF 2C2180 
                           B   983    
0024C2 4A502620 2180       B   984    x3_z3		db 'JP& !',80h			;y = 0
0024C8 43422070 667880     B   985    			db 'CB pfx',80h			;y = 1
0024CF 4F555420 285E292C   B   986    			db 'OUT (^),','A'+80h	;y = 2
0024D7 C1 
0024D8 494E2041 2C285EA9   B   987    			db 'IN A,(^',')'+80h	;y = 3
0024E0 45582620 28535029   B   988    			db 'EX& (SP),','_',80h	;y = 4
0024E8 2C5F80 
0024EB 45582044 452C48CC   B   989    			db 'EX DE,H','L'+80h	;y = 5
0024F3 44C9                B   990    			db 'D','I'+80h			;y = 6
0024F5 45C9                B   991    			db 'E','I'+80h			;y = 7
                           B   992    
0024F7 43414C4C 262023 02   B   993    x3_z4		db 'CALL& #',var_y,',!',80h
0024FF 2C2180 
                           B   994    
002502 50555348 26202A 04   B   995    x3_z5_q0	db 'PUSH& *',var_p,80h			
00250A 80 
00250B 43414C4C 26202180   B   996    x3_z5_q1	db 'CALL& !',80h			;p=0
002513 44442070 667880     B   997    			db 'DD pfx',80h			;p=1
00251A 45442070 667880     B   998    			db 'ED pfx',80h			;p=2
002521 20464420 70667880   B   999    			db' FD pfx',80h			;p=3
                           B  1000    
002529 3A 02 5E80          B  1001    x3_z6		db ':',var_y,'^',80h	;ALU_table(
                           B  1002    
00252D 52535426 203B 02    B  1003    x3_z7		db 'RST& ;',var_y,80h		; rst_t
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  88


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
002534 80 
                           B  1004    
                           B  1005    
                           B  1006    ;--- CB - Prefixed op-codes--------------------
                           B  1007    
                           B  1008    
002535 25 02 207E 03 80    B  1009    cb_group		db '%',var_y,' ~',var_z,80h		00253B 42495426 203E 02    B  1010    				db 'BIT& >',var_y,',~',var_z,80
002542 2C7E 03 80 
002546 52455326 203E 02    B  1011    				db 'RES& >',var_y,',~',var_z,80
00254D 2C7E 03 80 
002551 53455426 203E 02    B  1012    				db 'SET& >',var_y,',~',var_z,80
002558 2C7E 03 80 
                           B  1013    
                           B  1014    
                           B  1015    ;---- ED - Prefixed op-codes-------------------
                           B  1016    
00255C 494E3020 7E 02      B  1017    ed_x0_z0_yn6	db 'IN0 ~',var_y,',(^',')'+80h
002562 2C285EA9 
002566 494E3020 285EA9     B  1018    ed_x0_z0_y6		db 'IN0 (^',')'+80h	
                           B  1019    
00256D 4F555430 20285E29   B  1020    ed_x0_z1		db 'OUT0 (^),~',var_y,80h		002575 2C7E 02 80 
002579 4C442620 49592C28   B  1021    				db 'LD& IY,(_',')'+80h			002581 5FA9 
                           B  1022    
002583 4C454126 203C 04    B  1023    ed_x0_z2		db 'LEA& <',var_p,',IX/',80h	00258A 2C49582F 80 
00258F 4C454126 207D 04    B  1024    ed_x0_z3		db 'LEA& }',var_p,',IY/',80h
002596 2C49592F 80 
00259B 54535426 20412C7E   B  1025    ed_x0_z4		db 'TST& A,~',var_y,80h
0025A3 02 80 
                           B  1026    
0025A5 4C442620 285F292C   B  1027    ed_x0_z6		db 'LD& (_),}',var_p,80h
0025AD 7D 04 80 
                           B  1028    
0025B0 4C442620 3C 04      B  1029    ed_x0_z7		db 'LD& <',var_p,',(_',')'+80h	0025B6 2C285FA9 
0025BA 4C442620 285F292C   B  1030    				db 'LD& (_),<',var_p,80h		0025C2 3C 04 80 
                           B  1031    
0025C5 494E207E 02         B  1032    ed_x1_z0_yn6	db 'IN ~',var_y,',(BC',')'+80h
0025CA 2C284243 A9 
0025CF 494E2028 43A9       B  1033    ed_x1_z0_y6		db 'IN (C',')'+80h
                           B  1034    
0025D5 4F555420 28424329   B  1035    ed_x1_z1_yn6	db 'OUT (BC),~',var_y,80h
0025DD 2C7E 02 80 
0025E1 4F555420 2843292C   B  1036    ed_x1_z1_y6		db 'OUT (C),','0'+80h
0025E9 B0 
                           B  1037    
0025EA 53424326 20484C2C   B  1038    ed_x1_z2		db 'SBC& HL,@',var_p,80h		0025F2 40 04 80 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  89


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0025F5 41444326 20484C2C   B  1039    				db 'ADC& HL,@',var_p,80h		0025FD 40 04 80 
                           B  1040    
002600 4C442620 2821292C   B  1041    ed_x1_z3		db 'LD& (!),@',var_p,80h		002608 40 04 80 
00260B 4C442620 40 04      B  1042    				db 'LD& @',var_p,',(!',')'+80h	002611 2C2821A9 
                           B  1043    
002615 4E45C7              B  1044    ed_x1_z4		db 'NE','G'+80h				;y=
002618 4D4C5420 42C3       B  1045    				db 'MLT B','C'+80h			;y=
00261E 4C454126 2049582C   B  1046    				db 'LEA& IX,IY/',80h			002626 49592F80 
00262A 4D4C5420 44C5       B  1047    				db 'MLT D','E'+80h			;y=
002630 54535426 20412C5E   B  1048    				db 'TST& A,^',80h			;y=
002638 80 
002639 4D4C5420 48CC       B  1049    				db 'MLT H','L'+80h			;y=
00263F 54535449 4F205E80   B  1050    				db 'TSTIO ^',80h			;y=
002647 4D4C5420 53D0       B  1051    				db 'MLT S','P'+80h 			;y=
                           B  1052    
00264D 5245544E 2680       B  1053    ed_x1_z5		db 'RETN&',80h				;y=
002653 52455449 2680       B  1054    				db 'RETI&',80h				;y=
002659 4C454126 2049592C   B  1055    				db 'LEA& IY,IX/',80h		;y=
002661 49582F80 
002665 BF                  B  1056    				db '?'+80h					;y=
002666 50454126 2049582F   B  1057    				db 'PEA& IX/',80h			;y=
00266E 80 
00266F 4C44204D 422CC1     B  1058    				db 'LD MB,','A'+80h			;y=
002676 BF                  B  1059    				db '?'+80h					;y=
002677 53544D49 D8         B  1060    				db 'STMI','X'+80h			;y=
                           B  1061    				
                           B  1062    	
00267C 494D20B0            B  1063    ed_x1_z6		db 'IM ','0'+80h			;y=
002680 BF                  B  1064    				db '?'+80h					;y=
002681 494D20B1            B  1065    				db 'IM ','1'+80h			;y=
002685 494D20B2            B  1066    				db 'IM ','2'+80h			;y=
002689 50454126 2049592F   B  1067    				db 'PEA& IY/',80h			;y=
002691 80 
002692 4C442041 2C4DC2     B  1068    				db 'LD A,','M','B'+80h		;y=
002699 534CD0              B  1069    				db 'SL','P'+80h				;y=
00269C 52534D49 D8         B  1070    				db 'RSMI','X'+80h			;y=
                           B  1071    
0026A1 4C442049 2CC1       B  1072    ed_x1_z7		db 'LD I,','A'+80h			;y=
0026A7 4C442052 2CC1       B  1073    				db 'LD R,','A'+80h			;y=
0026AD 4C442041 2CC9       B  1074    				db 'LD A,','I'+80h			;y=
0026B3 4C442041 2CD2       B  1075    				db 'LD A,','R'+80h			;y=
0026B9 5252C4              B  1076    				db 'RR','D'+80h				;y=
0026BC 524CC4              B  1077    				db 'RL','D'+80h				;y=
0026BF 4E4FD0              B  1078    				db 'NO','P'+80h				;y=
0026C2 4E4FD0              B  1079    				db 'NO','P'+80h				;y=
                           B  1080    
                           B  1081    
0026C5 BFBFBFBF            B  1082    ed_x2_z0		db '?'+80h,'?'+80h,'?'+80h,'?'+
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  90


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0026C9 4C444926 80         B  1083    				db 'LDI&',80h					0026CE 4C444426 80         B  1084    				db 'LDD&',80h					0026D3 4C444952 2680       B  1085    				db 'LDIR&',80h					0026D9 4C444452 2680       B  1086    				db 'LDDR&',80h					                           B  1087    
0026DF BFBFBFBF            B  1088    ed_x2_z1		db '?'+80h,'?'+80h,'?'+80h,'?'+
0026E3 43504926 80         B  1089    				db 'CPI&',80h					0026E8 43504426 80         B  1090    				db 'CPD&',80h					0026ED 43504952 2680       B  1091    				db 'CPIR&',80h					0026F3 43504452 2680       B  1092    				db 'CPDR&',80h					                           B  1093    
0026F9 494E494D 2680       B  1094    ed_x2_z2		db 'INIM&',80h		; y0	
0026FF 494E444D 2680       B  1095    				db 'INDM&',80h		; y1
002705 494E494D 522680     B  1096    				db 'INIMR&',80h		; y2
00270C 494E444D 522680     B  1097    				db 'INDMR&',80h		; y3
002713 494E4926 80         B  1098    				db 'INI&',80h		; y4
002718 494E4426 80         B  1099    				db 'IND&',80h		; y5
00271D 494E4952 2680       B  1100    				db 'INIR&',80h		; y6
002723 494E4452 2680       B  1101    				db 'INDR&',80h		; y7
                           B  1102    
                           B  1103    
002729 4F54494D 2680       B  1104    ed_x2_z3		db 'OTIM&',80h		; y0
00272F 4F54444D 2680       B  1105    				db 'OTDM&',80h		; y1
002735 4F54494D 522680     B  1106    				db 'OTIMR&',80h		; y2
00273C 4F54444D 522680     B  1107    				db 'OTDMR&',80h		; y3
002743 4F555449 2680       B  1108    				db 'OUTI&',80h		; y4
002749 4F555444 2680       B  1109    				db 'OUTD&',80h		; y5
00274F 4F544952 2680       B  1110    				db 'OTIR&',80h		; y6
002755 4F544452 2680       B  1111    				db 'OTDR&',80h		; y7
                           B  1112    
00275B 494E4932 2680       B  1113    ed_x2_z4		db 'INI2&',80h		; y0
002761 494E4432 2680       B  1114    				db 'IND2&',80h		; y1
002767 494E4932 522680     B  1115    				db 'INI2R&',80h		; y2
00276E 494E4432 522680     B  1116    				db 'IND2R&',80h		; y3
002775 4F555449 322680     B  1117    				db 'OUTI2&',80h		; y4
00277C 4F555444 322680     B  1118    				db 'OUTD2&',80h		; y5
002783 4F544932 522680     B  1119    				db 'OTI2R&',80h		; y6
00278A 4F544432 522680     B  1120    				db 'OTD2R&',80h		; y7
                           B  1121    
                           B  1122    
002791 494E4952 582680     B  1123    ed_x3_z2		db 'INIRX&',80h 	; y0
002798 494E4452 582680     B  1124    				db 'INDRX&',80h		; y1
                           B  1125    
00279F 4F544952 582680     B  1126    ed_x3_z3		db 'OTIRX&',80h		; y0
0027A6 4F544452 582680     B  1127    				db 'OTDRX&',80h		; y1
                           B  1128    			
                           B  1129    
                           B  1130    ;--- DDCB or FDCB - Prefixed op-codes----------
                           B  1131    
                           B  1132    
0027AD 4C442620 7E 03      B  1133    ddcb_fdcb_zn6	db 'LD& ~',var_z, ',%',var_y,' 
0027B3 2C25 02 202480 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  91


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
0027B9 42495426 203E 02    B  1134    				db 'BIT& >',var_y,',$',80h		0027C0 2C2480 
0027C3 4C442620 7E 03      B  1135    				db 'LD& ~',var_z,',RES& >',var_
0027C9 2C524553 26203E 02 
0027D1 2C2480 
0027D4 4C442620 7E 03      B  1136    				db 'LD& ~',var_z,',SET& >',var_
0027DA 2C534554 26203E 02 
0027E2 2C2480 
                           B  1137    
0027E5 25 02 202480        B  1138    ddcb_fdcb_z6	db '%',var_y,' $',80h			0027EA 42495426 203E 02    B  1139    				db 'BIT& >',var_y,',$',80h		0027F1 2C2480 
0027F4 52455326 203E 02    B  1140    				db 'RES& >',var_y,',$',80h		0027FB 2C2480 
0027FE 53455426 203E 02    B  1141    				db 'SET& >',var_y,',$',80h		002805 2C2480 
                           B  1142    
                           B  1143    ;----------------------------------------------
                           B  1144    
002808 3F3FBF              B  1145    bad_opcode	db '??','?'+80h
                           B  1146    
                           B  1147    ;----------------------------------------------
                           B  1148    
                           B  1149    
00280B C2C3C4C5 68806C80   B  1150    table_r		db 'B'+80h, 'C'+80h, 'D'+80h, 'E'+8
002813 2480C1 
                           B  1151    
002816 C2C3C4C5 48804C80   B  1152    table_r2	db 'B'+80h, 'C'+80h, 'D'+80h, 'E'+8
00281E 2480C1 
                           B  1153    
002821 42C344C5 DF53D0     B  1154    table_rp	db 'B','C'+80h, 'D','E'+80h, '_'+80
                           B  1155    
002828 42C344C5 5F8041C6   B  1156    table_rp2	db 'B','C'+80h, 'D','E'+80h, '_',+8
                           B  1157    	
002830 4EDADA4E C3C350CF   B  1158    table_cc	db 'N','Z'+80h, 'Z'+80h, 'N','C'+80
002838 50C5D0CD 
                           B  1159    	
00283C 41444426 2041AC41   B  1160    table_alu	db 'ADD& A',','+80h, 'ADC& A',','+8
002844 44432620 41AC5355 
00284C 4226A053 42432041 
002854 26AC 
002856 414E4426 A0584F52   B  1161    			db 'AND&',' '+80h, 'XOR&',' '+80h, 
00285E 26A04F52 26A04350 
002866 26A0 
                           B  1162    			
002868 524C4326 80525243   B  1163    table_rot	db 'RLC&',80h, 'RRC&',80h, 'RL&',80
002870 2680524C 26805252 
002878 2680 
00287A 534C4126 80535241   B  1164    			db 'SLA&',80h, 'SRA&',80h, 'SLL&',8
002882 2680534C 4C268053 
00288A 524C2680 
                           B  1165    	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  92


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\d.asm
00288E 42C344C5 48CC49D8   B  1166    table_rp3	db 'B','C'+80h, 'D','E'+80h, 'H','L
                           B  1167    
002896 42C344C5 48CC49D9   B  1168    table_rp4	db 'B','C'+80h, 'D','E'+80h, 'H','L
                           B  1169    
00289E 42C344C5 48CC5F80   B  1170    table_rp5	db 'B','C'+80h, 'D','E'+80h, 'H','L
                           B  1171    
0028A6 30B0                B  1172    table_rst	db '0','0'+80h
0028A8 30B8                B  1173    			db '0','8'+80h
0028AA 31B0                B  1174    			db '1','0'+80h
0028AC 31B8                B  1175    			db '1','8'+80h
0028AE 32B0                B  1176    			db '2','0'+80h
0028B0 32B8                B  1177    			db '2','8'+80h	
0028B2 33B0                B  1178    			db '3','0'+80h
0028B4 33B8                B  1179    			db '3','8'+80h			
                           B  1180    
                           B  1181    ;----------------------------------------------
                           B  1182    
                           B  1183    ; "_" = HL, IX, IY depending on prefix 
                           B  1184    ; "|" = as above with IX/IY switched
                           B  1185    
                           B  1186    ; "h" = H, IXH, IYL depending on prefix
                           B  1187    ; "l" = L, IXL, IYL depending on prefix
                           B  1188    ; "$" = (HL), (IX+d), (IY+d) depending on prefi
                           B  1189    
0028B6 48CC49D8 49D9       B  1190    hl_subs		db 'H','L'+80h, 'I','X'+80h, 'I','Y
0028BC 48CC49D9 49D8       B  1191    inv_hl_subs	db 'H','L'+80h, 'I','Y'+80h, 'I','X
0028C2 C84958C8 4959C8     B  1192    h_subs		db 'H'+80h, 'IX','H'+80h, 'IY','H'+
0028C9 CC4958CC 4959CC     B  1193    l_subs		db 'L'+80h, 'IX','L'+80h, 'IY','L'+
0028D0 28484CA9 2849582F   B  1194    ind_hl_subs	db '(HL',')'+80h, '(IX/',')'+80h, '
0028D8 A9284959 2FA9 
                           B  1195    
                           B  1196    ;----------------------------------------------
                           B  1197    
0028DE                     B  1198    adl_prefix_list
                           B  1199    
0028DE 2E5349D3 2E4C49D3   B  1200    			db '.SI','S'+80h, '.LI','S'+80h, '.
0028E6 2E5349CC 2E4C49CC 
                           B  1201    
                           B  1202    ;----------------------------------------------
                           B  1203    
0028EE 000000              B  1204    d_work_address	dw24 0
                           B  1205    
0028F1 2D2D00              B  1206    output_byte_txt	db "--",0
0028F4 2D00                B  1207    output_char_txt	db "-",0
                           B  1208    
0028F6 000001              B  1209    dis_addr		dw24 10000h
                           B  1210    
                           B  1211    ;----------------------------------------------
                           B  1212    
                           B     0    	include 'commands\del.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"del" delete file command. V0.02 - ADL mode
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  93


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\del.asm
                           B     3    ;----------------------------------------------
                           B     4    
                           B     5    
0028F9                     B     6    os_cmd_del
                           B     7    	
0028F9 CD 84 16 00         B     8    				call os_check_volume_format	
0028FD C0                  B     9    				ret nz
                           B    10    			
0028FE CD 06 29 00         B    11    				call filename_or_bust
                           B    12    				
002902 C3 EB 16 00         B    13    				jp os_erase_file			;no
                           B    14    				
                           B    15    				
                           B    16    ;----------------------------------------------
                           B    17    			
002906                     B    18    filename_or_bust
                           B    19    			
002906 7E                  B    20    				ld a,(hl)					;is
002907 B7                  B    21    				or a
002908 C0                  B    22    				ret nz
002909 E1                  B    23    				pop hl						;ot
00290A C3 F4 15 00         B    24    				jp os_no_fn_error			;so
                           B    25    
                           B    26    ;----------------------------------------------
                           B     0    	include 'commands\dir.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; FAT16 'dir' - show directory command. v0.03 -
                           B     3    ;----------------------------------------------
                           B     4    
00290E                     B     5    os_cmd_dir
                           B     6    
00290E CD 84 16 00         B     7    				call os_check_volume_format	
002912 C0                  B     8    				ret nz
                           B     9    				
002913 CD 27 2A 00         B    10    				call div_line
002917 CD 07 59 00         B    11    				call fs_get_current_dir_name	00291B D8                  B    12    				ret c
00291C C0                  B    13    				ret nz
00291D CD 94 0F 00         B    14    				call os_print_string
002921 CD 5B 1A 00         B    15    				call fs_get_dir_cluster			002925 7A                  B    16    				ld a,d
002926 B3                  B    17    				or e
002927 20 08               B    18    				jr nz,dcmdnr
002929 CD F2 55 00         B    19    				call fs_get_volume_label
00292D CD 94 0F 00         B    20    				call os_print_string
002931 CD 3C 14 00         B    21    dcmdnr			call os_new_line
                           B    22    				
002935 CD 27 2A 00         B    23    nrootdir		call div_line
002939 CD F7 54 00         B    24    				call fs_goto_first_dir_entry
00293D D8                  B    25    				ret c
00293E 20 6F               B    26    				jr nz,os_dlr
002940 AF                  B    27    				xor a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  94


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\dir.asm
002941 32 C4 67 00         B    28    				ld (os_linecount),a
                           B    29    				
002945 CD 0E 55 00         B    30    os_dfllp		call fs_get_dir_entry			002949 D8                  B    31    				ret c
00294A 20 63               B    32    				jr nz,os_dlr					00294C C5                  B    33    				push bc
00294D CD 94 0F 00         B    34    				call os_print_string			002951 CD 67 14 00         B    35    				call os_get_cursor_position		002955 060E                B    36    				ld b,14
002957 CD 47 14 00         B    37    				call os_set_cursor_position	
00295B C1                  B    38    				pop bc
00295C CB40                B    39    				bit 0,b							00295E 28 06               B    40    				jr z,os_deif		
002960 21 34 2A 00         B    41    				ld hl,dir_txt					002964 18 32               B    42    				jr os_dpl
                           B    43    				
002966 21 39 5C 00         B    44    os_deif			ld hl,os_hex_prefix_txt			00296A CD 94 0F 00         B    45    				call os_print_string
00296E ED530001 00         B    46    				ld (scratch_pad),de
002973 79                  B    47    				ld a,c
002974 32030100            B    48    				ld (scratch_pad+3),a
002978 21 2F 68 00         B    49    				ld hl,output_line
00297C E5                  B    50    				push hl
00297D ED5B0201 00         B    51    				ld de,(scratch_pad+2)
002982 CD 04 11 00         B    52    				call hexword_to_ascii
002986 ED5B0001 00         B    53    				ld de,(scratch_pad)
00298B CD 04 11 00         B    54    				call hexword_to_ascii
00298F 3600                B    55    				ld (hl),0
002991 E1                  B    56    				pop hl
002992 0607                B    57    				ld b,7							002994 CD BC 10 00         B    58    				call os_skip_leading_ascii_zero
002998 CD 94 0F 00         B    59    os_dpl			call os_print_string
00299C CD 3C 14 00         B    60    				call os_new_line
                           B    61    				
0029A0 CD 9B 55 00         B    62    				call fs_goto_next_dir_entry
0029A4 20 09               B    63    				jr nz,os_dlr					0029A6 CD 3A 12 00         B    64    				call os_count_lines
0029AA 3E79                B    65    				ld a,'y'
0029AC B8                  B    66    				cp b
0029AD 28 96               B    67    				jr z,os_dfllp
                           B    68    				
0029AF CD 27 2A 00         B    69    os_dlr			call div_line					0029B3 CD F6 4E 00         B    70    				call fs_calc_free_space
0029B7 D8                  B    71    				ret c	
                           B    72    				
0029B8 CD C6 29 00         B    73    				call show_capacity				0029BC 21 44 2A 00         B    74    				ld hl,free_txt
0029C0 CD 94 0F 00         B    75    				call os_print_string
0029C4 AF                  B    76    				xor a
0029C5 C9                  B    77    				ret
                           B    78    				
                           B    79    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  95


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\dir.asm
                           B    80    
0029C6                     B    81    show_capacity	
                           B    82    
                           B    83    ; set xDE = capacity in KB
                           B    84    ; (trashed all other registers!)
                           B    85    
0029C6 DD21 3A 2A 00       B    86    				ld ix,dir_kb_txt
0029CB AF                  B    87    				xor a
0029CC D5                  B    88    				push de
0029CD E1                  B    89    				pop hl
0029CE 01241000            B    90    				ld bc,1024h
0029D2 ED42                B    91    				sbc hl,bc
0029D4 38 0B               B    92    				jr c,showresinkb
0029D6 060A                B    93    				ld b,10
0029D8 CD ED 29 00         B    94    				call shr_de
0029DC DD21 3F 2A 00       B    95    				ld ix,dir_mb_txt
0029E1 CD 00 2A 00         B    96    showresinkb		call show_xde_decimal
0029E5 DDE5                B    97    				push ix
0029E7 E1                  B    98    				pop hl
0029E8 CD 94 0F 00         B    99    				call os_print_string
0029EC C9                  B   100    				ret
                           B   101    				
                           B   102    ;----------------------------------------------
                           B   103    
                           B   104    ; Set xDE = value to shift
                           B   105    ; Set B = number of places to shift right (0-23
                           B   106    	
0029ED E5                  B   107    shr_de			push hl
0029EE 3E18                B   108    				ld a,24
0029F0 90                  B   109    				sub b
0029F1 47                  B   110    				ld b,a
0029F2 21000000            B   111    				ld hl,0
0029F6 EB                  B   112    				ex de,hl
0029F7 29                  B   113    divde_lp		add hl,hl
0029F8 EB                  B   114    				ex de,hl
0029F9 ED6A                B   115    				adc hl,hl
0029FB EB                  B   116    				ex de,hl
0029FC 10 F9               B   117    				djnz divde_lp
0029FE E1                  B   118    				pop hl
0029FF C9                  B   119    				ret
                           B   120    				
                           B   121    ;----------------------------------------------
                           B   122    
002A00                     B   123    show_xde_decimal
                           B   124    
002A00 CD CF 12 00         B   125    				call os_hex_to_decimal			002A04 11070000            B   126    				ld de,7
002A08 19                  B   127    				add hl,de						002A09 43                  B   128    				ld b,e
002A0A 11 2F 68 00         B   129    				ld de,output_line
002A0E D5                  B   130    				push de
002A0F 7E                  B   131    dec2strlp		ld a,(hl)						Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  96


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\dir.asm
002A10 B7                  B   132    				or a
002A11 20 03               B   133    				jr nz,foundlnz
002A13 2B                  B   134    				dec hl
002A14 10 F9               B   135    				djnz dec2strlp
002A16 04                  B   136    foundlnz		inc b
002A17 7E                  B   137    ndecchar		ld a,(hl)						002A18 C630                B   138    				add a,030h
002A1A 12                  B   139    				ld (de),a
002A1B 13                  B   140    				inc de
002A1C 2B                  B   141    				dec hl
002A1D 10 F8               B   142    				djnz ndecchar
002A1F AF                  B   143    				xor a
002A20 12                  B   144    				ld (de),a
002A21 E1                  B   145    				pop hl							002A22 CD 94 0F 00         B   146    				call os_print_string
002A26 C9                  B   147    				ret
                           B   148    
                           B   149    ;----------------------------------------------
                           B   150    			
002A27 0E2D                B   151    div_line		ld c,'-'
002A29 0613                B   152    				ld b,19
002A2B CD 43 1A 00         B   153    				call os_print_multiple_chars
002A2F CD 3C 14 00         B   154    				call os_new_line
002A33 C9                  B   155    				ret
                           B   156    
                           B   157    ;----------------------------------------------
                           B   158    
002A34 5B444952 5D00       B   159    dir_txt			db '[DIR]',0
                           B   160    
002A3A 204B4220 00         B   161    dir_kb_txt		db ' KB ',0
002A3F 204D4220 00         B   162    dir_mb_txt		db ' MB ',0
002A44 46726565 0B00       B   163    free_txt		db 'Free',11,0
                           B   164    
                           B   165    ;----------------------------------------------
                           B   166    	
                           B     0    	include 'commands\f.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"f" fill memory command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
002A4A                     B     5    os_cmd_f			
                           B     6    
002A4A CD 5B 1C 00         B     7    				call get_start_and_end			                           B     8    			
002A4E CD 84 1C 00         B     9    				call hexword_or_bust			002A52 CA 14 16 00         B    10    				jp z,os_no_args_error			002A56 7B                  B    11    				ld a,e
002A57 32 DB 67 00         B    12    				ld (fillbyte),a
                           B    13    					
002A5B CD 49 1C 00         B    14    				call test_mem_range
002A5F DA 10 16 00         B    15    				jp c,os_range_error				                           B    16    					
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  97


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\f.asm
002A63 3A DB 67 00         B    17    				ld a,(fillbyte)
002A67 77                  B    18    f_floop			ld (hl),a
002A68 EDA1                B    19    				cpi								002A6A EA 67 2A 00         B    20    				jp pe,f_floop
                           B    21    					
002A6E 3E20                B    22    				ld a,020h						002A70 B7                  B    23    				or a
002A71 C9                  B    24    				ret
                           B    25    
                           B    26    ;----------------------------------------------
                           B     0    	include 'commands\format.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"format" - format disk command. V0.05 - ADL mo
                           B     3    ;
                           B     4    ; The internal format routine is limited to for
                           B     5    ; No partition data is allowed.
                           B     6    ;----------------------------------------------
                           B     7    
                           B     8    
002A72                     B     9    os_cmd_format
                           B    10    
002A72 7E                  B    11    				ld a,(hl)						002A73 B7                  B    12    				or a
002A74 20 04               B    13    				jr nz,fgotargs					002A76 3E1F                B    14    				ld a,01fh						002A78 B7                  B    15    				or a
002A79 C9                  B    16    				ret
                           B    17    			
002A7A E5                  B    18    fgotargs		push hl
002A7B 3E01                B    19    				ld a,1							002A7D CD 28 18 00         B    20    				call os_mount_volumes			002A81 E1                  B    21    				pop hl
                           B    22    				
002A82 11 96 5A 00         B    23    				ld de,fs_sought_filename
002A86 CD 50 59 00         B    24    				call fs_clear_filename			002A8A E5                  B    25    				push hl							002A8B CD 1D 10 00         B    26    				call os_next_arg
002A8F 20 04               B    27    				jr nz,fgotlab
002A91 21 BE 2B 00         B    28    				ld hl,default_label
002A95 060B                B    29    fgotlab			ld b,11
002A97 CD 82 12 00         B    30    				call os_copy_ascii_run
002A9B E1                  B    31    				pop hl
                           B    32    				
002A9C 3A E0 65 00         B    33    				ld a,(device_count)				002AA0 B7                  B    34    				or a
002AA1 28 25               B    35    				jr z,fno_dev
002AA3 47                  B    36    				ld b,a
002AA4 0E00                B    37    				ld c,0							002AA6 DD21 8A 66 00       B    38    				ld ix,host_device_hardware_info
002AAB DD7E00              B    39    fdev_lp			ld a,(ix)						002AAE CD 2D 1A 00         B    40    				call locate_driver_base			002AB2 D5                  B    41    				push de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  98


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\format.asm
002AB3 FDE1                B    42    				pop iy
002AB5 ED130C              B    43    				lea de,iy+0ch					002AB8 C5                  B    44    				push bc
002AB9 0607                B    45    				ld b,7
002ABB CD 63 12 00         B    46    				call os_compare_strings
002ABF C1                  B    47    				pop bc
002AC0 28 0A               B    48    				jr z,format_dev
002AC2 ED3220              B    49    				lea ix,ix+20h					002AC5 0C                  B    50    				inc c
002AC6 10 E3               B    51    				djnz fdev_lp
                           B    52    			
002AC8 3ED0                B    53    fno_dev			ld a,0d0h						002ACA B7                  B    54    				or a
002ACB C9                  B    55    				ret
                           B    56    				
                           B    57    			
                           B    58    				
                           B    59    ;----- FORMAT A DEVICE (USE ENTIRE CAPACITY (TR
                           B    60    			
                           B    61    			
002ACC C5                  B    62    format_dev		push bc
002ACD CD 3C 14 00         B    63    				call os_new_line
002AD1 21 8F 2B 00         B    64    				ld hl,form_dev_warn1
002AD5 CD 73 14 00         B    65    				call os_show_packed_text
002AD9 C1                  B    66    				pop bc
                           B    67    				
002ADA 79                  B    68    				ld a,c							002ADB C630                B    69    				add a,030h
002ADD 32 EC 65 00         B    70    				ld (dev_txt+3),a
002AE1 21 E9 65 00         B    71    				ld hl,dev_txt	
002AE5 CD 94 0F 00         B    72    				call os_print_string			                           B    73    				
002AE9 79                  B    74    				ld a,c
002AEA CD A1 1A 00         B    75    				call dev_to_driver_lookup		002AEE E5                  B    76    				push hl
002AEF 32 DF 65 00         B    77    				ld (current_driver),a
002AF3 CD 14 1A 00         B    78    				call show_dev_driver_name		002AF7 DDE1                B    79    				pop ix
002AF9 DD1701              B    80    				ld de,(ix+1)
002AFC DD7E04              B    81    				ld a,(ix+4)
002AFF B7                  B    82    				or a
002B00 28 06               B    83    				jr z,less16gb
002B02 21 C9 2B 00         B    84    				ld hl,dev16gbplus_txt
002B06 18 14               B    85    				jr form_capdone
002B08 0601                B    86    less16gb		ld b,1
002B0A CD ED 29 00         B    87    				call shr_de						002B0E 3E28                B    88    				ld a,'('
002B10 CD D6 0F 00         B    89    				call os_print_char
002B14 DDE5                B    90    				push ix
002B16 CD C6 29 00         B    91    				call show_capacity				002B1A DDE1                B    92    				pop ix
002B1C ED2205              B    93    form_capdone	lea hl,ix+5		
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page:  99


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\format.asm
002B1F CD 94 0F 00         B    94    				call os_print_string			002B23 3E29                B    95    				ld a,')'
002B25 CD D6 0F 00         B    96    				call os_print_char
                           B    97    				
002B29 CD 3C 14 00         B    98    				call os_new_line
002B2D CD 3C 14 00         B    99    				call os_new_line
002B31 21 96 2B 00         B   100    				ld hl,form_dev_warn2
002B35 CD 86 2B 00         B   101    				call show_packed_text_and_cr
002B39 CD 6E 2B 00         B   102    				call confirm_yes
002B3D 20 27               B   103    				jr nz,ab_form
                           B   104    				
002B3F 21 A0 2B 00         B   105    				ld hl,formatting_txt			002B43 CD 94 0F 00         B   106    				call os_print_string
                           B   107    				
002B47 CD 74 4C 00         B   108    				call fs_format_device_command
002B4B 38 0F               B   109    				jr c,form_err
002B4D 20 0D               B   110    				jr nz,form_err
                           B   111    			
002B4F 21 B0 2B 00         B   112    				ld hl,ok_txt					002B53 CD 94 0F 00         B   113    				call os_print_string
                           B   114    				
002B57 CD BC 32 00         B   115    f_end			call os_cmd_remount				002B5B C9                  B   116    				ret
                           B   117    			
002B5C                     B   118    form_err
002B5C 21 B5 2B 00         B   119    				ld hl,ferr_txt
002B60 CD 94 0F 00         B   120    				call os_print_string
002B64 18 F1               B   121    				jr f_end
                           B   122    				
                           B   123    				
                           B   124    ;----------------------------------------------
                           B   125    				
                           B   126    				
002B66 CD 3C 14 00         B   127    ab_form			call os_new_line
002B6A 3E24                B   128    				ld a,024h						002B6C B7                  B   129    				or a
002B6D C9                  B   130    				ret
                           B   131    				
002B6E                     B   132    confirm_yes
                           B   133    			
002B6E 21000100            B   134    				ld hl,scratch_pad
002B72 1E03                B   135    				ld e,3
002B74 E5                  B   136    				push hl
002B75 CD 68 11 00         B   137    				call os_user_input
002B79 E1                  B   138    				pop hl
002B7A C0                  B   139    				ret nz
002B7B 0603                B   140    				ld b,3
002B7D 11 5B 60 00         B   141    				ld de,yes_txt+1
002B81 CD 63 12 00         B   142    				call os_compare_strings
002B85 C9                  B   143    				ret
                           B   144    			
                           B   145    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 100


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\format.asm
002B86                     B   146    show_packed_text_and_cr
                           B   147    			
002B86 CD 73 14 00         B   148    				call os_show_packed_text
002B8A CD 3C 14 00         B   149    				call os_new_line
002B8E C9                  B   150    				ret
                           B   151    			
                           B   152    ;----------------------------------------------
                           B   153    
002B8F                     B   154    form_dev_warn1
                           B   155    
002B8F 27283640 979700     B   156    				db 027h,028h,036h,040h,097h,097
                           B   157    
002B96                     B   158    form_dev_warn2
                           B   159    
002B96 52467E98 9EA2A3A5   B   160    				db 052h,046h,07eh,098h,09eh,0a2
002B9E 9700 
                           B   161    
002BA0                     B   162    formatting_txt
                           B   163    
002BA0 0B0B466F 726D6174   B   164    				db 11,11,'Formatting.. ',0
002BA8 74696E67 2E2E2000 
                           B   165    
002BB0 4F4B0B0B 00         B   166    ok_txt			db 'OK',11,11,0
                           B   167    
002BB5 4552524F 52210B0B   B   168    ferr_txt		db 'ERROR!',11,11,0
002BBD 00 
                           B   169    
002BBE                     B   170    default_label	
                           B   171    
002BBE 50524F53 455F4449   B   172    				db 'PROSE_DISK',0
002BC6 534B00 
                           B   173    
002BC9 28313647 422B2000   B   174    dev16gbplus_txt	db '(16GB+ ',0
                           B   175    
                           B   176    ;----------------------------------------------
                           B   177    
       00000104            B   178    fs_drive_sel_cache		equ scratch_pad+4		                           B   179    
                           B   180    ;----------------------------------------------
                           B   181    
                           B     0    	include 'commands\h.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"H" - Hunt in memory command V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
002BD1 CD 5B 1C 00         B     5    os_cmd_h		call get_start_and_end			002BD5 22 D4 67 00         B     6    				ld (find_hexstringascii),hl		                           B     7    
002BD9 CD 49 1C 00         B     8    				call test_mem_range
002BDD DA 10 16 00         B     9    				jp c,os_range_error				                           B    10    			
002BE1 AF                  B    11    				xor a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 101


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\h.asm
002BE2 32 7E 2C 00         B    12    				ld (h_ascii_mode),a
                           B    13    				
002BE6 2A D4 67 00         B    14    				ld hl,(find_hexstringascii)
002BEA 0600                B    15    				ld b,0
002BEC 7E                  B    16    h_lfascii		ld a,(hl)						002BED B7                  B    17    				or a
002BEE 28 28               B    18    				jr z,h_no_text					002BF0 FE22                B    19    				cp 022h
002BF2 28 03               B    20    				jr z,h_found_quote
002BF4 23                  B    21    				inc hl
002BF5 18 F5               B    22    				jr h_lfascii
002BF7 23                  B    23    h_found_quote	inc hl
002BF8 22 D4 67 00         B    24    				ld (find_hexstringascii),hl
002BFC 7E                  B    25    h_fasc_len		ld a,(hl)
002BFD B7                  B    26    				or a
002BFE CA 14 16 00         B    27    				jp z,os_no_args_error			002C02 FE22                B    28    				cp 022h
002C04 28 04               B    29    				jr z,h_startas
002C06 23                  B    30    				inc hl
002C07 04                  B    31    				inc b
002C08 18 F2               B    32    				jr h_fasc_len
                           B    33    
002C0A 78                  B    34    h_startas		ld a,b
002C0B B7                  B    35    				or a
002C0C CA 14 16 00         B    36    				jp z,os_no_args_error			002C10 3E01                B    37    				ld a,1
002C12 32 7E 2C 00         B    38    				ld (h_ascii_mode),a
002C16 18 16               B    39    				jr h_start_search
                           B    40    						
                           B    41    
002C18 2A D4 67 00         B    42    h_no_text		ld hl,(find_hexstringascii)
002C1C 0600                B    43    				ld b,0							002C1E CD 84 1C 00         B    44    cntfbyts		call hexword_or_bust			002C22 28 04               B    45    				jr z,gthexstr
002C24 04                  B    46    				inc b
002C25 23                  B    47    				inc hl
002C26 18 F6               B    48    				jr cntfbyts
002C28 78                  B    49    gthexstr		ld a,b
002C29 B7                  B    50    				or a
002C2A CA 14 16 00         B    51    				jp z,os_no_args_error	
                           B    52    
                           B    53    
002C2E                     B    54    h_start_search
                           B    55    	
002C2E DD2A C8 67 00       B    56    				ld ix,(cmdop_start_address)		002C33 DDE5                B    57    fndloop1		push ix
002C35 FDE1                B    58    				pop iy
002C37 48                  B    59    				ld c,b							002C38 2A D4 67 00         B    60    				ld hl,(find_hexstringascii)
002C3C 3A 7E 2C 00         B    61    fcmloop			ld a,(h_ascii_mode)
002C40 B7                  B    62    				or a
002C41 28 08               B    63    				jr z,h_hex
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 102


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\h.asm
002C43 FD7E00              B    64    				ld a,(iy)
002C46 BE                  B    65    				cp (hl)
002C47 20 23               B    66    				jr nz,nofmatch
002C49 18 0A               B    67    				jr h_matched
002C4B CD 13 11 00         B    68    h_hex			call ascii_to_hexword			002C4F FD7E00              B    69    				ld a,(iy)
002C52 BB                  B    70    				cp e
002C53 20 17               B    71    				jr nz,nofmatch
002C55 FD23                B    72    h_matched		inc iy
002C57 23                  B    73    				inc hl
002C58 0D                  B    74    				dec c
002C59 20 E1               B    75    				jr nz,fcmloop
                           B    76    			
002C5B DDE5                B    77    				push ix							002C5D D1                  B    78    				pop de							002C5E DDE5                B    79    				push ix
002C60 C5                  B    80    				push bc
002C61 CD 74 13 00         B    81    				call os_show_hex_address
002C65 CD 3C 14 00         B    82    				call os_new_line
002C69 C1                  B    83    				pop bc
002C6A DDE1                B    84    				pop ix
                           B    85    				
002C6C DDE5                B    86    nofmatch		push ix
002C6E DD23                B    87    				inc ix
002C70 D1                  B    88    				pop de
002C71 2A CB 67 00         B    89    				ld hl,(cmdop_end_address)
002C75 AF                  B    90    				xor a
002C76 ED52                B    91    				sbc hl,de
002C78 20 B9               B    92    				jr nz,fndloop1
                           B    93    							
002C7A 3E20                B    94    				ld a,020h						002C7C B7                  B    95    				or a
002C7D C9                  B    96    				ret
                           B    97    			
                           B    98    ;----------------------------------------------
                           B    99    
002C7E 00                  B   100    h_ascii_mode	db 0
                           B   101    
                           B   102    ;----------------------------------------------
                           B     0    	include 'commands\help.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"?" - List commands. V0.03 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
002C7F                     B     5    os_cmd_help		
002C7F AF                  B     6    				xor a
002C80 32 C4 67 00         B     7    				ld (os_linecount),a
                           B     8    				
002C84 21 C3 61 00         B     9    				ld hl,packed_help1
002C88 CD 73 14 00         B    10    show_page		call os_show_packed_text
002C8C E5                  B    11    				push hl
002C8D CD 3C 14 00         B    12    				call os_new_line
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 103


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\help.asm
002C91 E1                  B    13    				pop hl
002C92 23                  B    14    				inc hl						;sk
002C93 7E                  B    15    				ld a,(hl)
002C94 FEFF                B    16    				cp 0ffh						;la
002C96 28 09               B    17    				jr z,last_help_page
                           B    18    				
002C98 CD 3A 12 00         B    19    				call os_count_lines
002C9C 78                  B    20    				ld a,b
002C9D FE79                B    21    				cp 'y'
002C9F 28 E7               B    22    				jr z,show_page
                           B    23    
002CA1                     B    24    last_help_page
002CA1 AF                  B    25    				xor a
002CA2 C9                  B    26    				ret	
                           B    27    	
                           B    28    ;----------------------------------------------
                           B    29    	
                           B     0    	include 'commands\gtr.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;">" for write ascii bytes to memory command. V
                           B     3    ;----------------------------------------------
                           B     4    
002CA3                     B     5    os_cmd_gtr
                           B     6    
002CA3 CD 84 1C 00         B     7    				call hexword_or_bust			002CA7 CA FC 15 00         B     8    				jp z,os_no_start_addr
002CAB 23                  B     9    fndquot1		inc hl
002CAC 7E                  B    10    				ld a,(hl)
002CAD B7                  B    11    				or a
002CAE CA 14 16 00         B    12    				jp z,os_no_args_error
002CB2 FE22                B    13    				cp 022h							002CB4 20 F5               B    14    				jr nz,fndquot1
002CB6 23                  B    15    				inc hl
002CB7 E5                  B    16    				push hl
002CB8 7E                  B    17    fndquot2		ld a,(hl)
002CB9 23                  B    18    				inc hl
002CBA B7                  B    19    				or a
002CBB 28 15               B    20    				jr z,noquot2
002CBD FE22                B    21    				cp 022h							002CBF 20 F7               B    22    				jr nz,fndquot2
002CC1 E1                  B    23    				pop hl
                           B    24    					
002CC2 7E                  B    25    wmbalp			ld a,(hl)						002CC3 FE22                B    26    				cp 022h
002CC5 28 09               B    27    				jr z,os_gtrdn					002CC7 FE7D                B    28    				cp 07dh
002CC9 28 01               B    29    				jr z,skpnasc
002CCB 12                  B    30    				ld (de),a
002CCC 13                  B    31    skpnasc			inc de
002CCD 23                  B    32    				inc hl
002CCE 18 F2               B    33    				jr wmbalp
002CD0 AF                  B    34    os_gtrdn		xor a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 104


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\gtr.asm
002CD1 C9                  B    35    				ret	
                           B    36    				
002CD2 E1                  B    37    noquot2			pop hl							002CD3 3E12                B    38    				ld a,012h
002CD5 B7                  B    39    				or a
002CD6 C9                  B    40    				ret
                           B    41    
                           B    42    ;----------------------------------------------
                           B     0    	include 'commands\lb.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"lb" - Load binary file command. V0.04 - ADL m
                           B     3    ;----------------------------------------------
                           B     4    
002CD7                     B     5    os_cmd_lb
                           B     6    	
002CD7 CD 84 16 00         B     7    				call os_check_volume_format	
002CDB C0                  B     8    				ret nz
                           B     9    				
002CDC CD 06 29 00         B    10    				call filename_or_bust			002CE0 CD 1C 16 00         B    11    				call os_find_file				002CE4 C0                  B    12    				ret nz
002CE5 ED53 03 01 00       B    13    				ld (filesize_cache),de			002CEA 2A 1B 67 00         B    14    				ld hl,(free_sysram_base)
002CEE 22 00 01 00         B    15    				ld (data_load_addr),hl			                           B    16    				
002CF2 2A 81 68 00         B    17    				ld hl,(os_args_loc)
002CF6 CD 1D 10 00         B    18    				call os_next_arg
                           B    19    
002CFA CD 84 1C 00         B    20    				call hexword_or_bust			002CFE 28 05               B    21    				jr z,os_lbnao					002D00 ED53 00 01 00       B    22    				ld (data_load_addr),de
                           B    23    
002D05 ED4B 00 01 00       B    24    os_lbnao		ld bc,(data_load_addr)			002D0A C5                  B    25    				push bc
002D0B E1                  B    26    				pop hl
002D0C ED5B 03 01 00       B    27    				ld de,(filesize_cache)
002D11 19                  B    28    				add hl,de
002D12 EB                  B    29    				ex de,hl
002D13 CD A8 3B 00         B    30    				call os_protected_ram_test
002D17 C4 FA 3B 00         B    31    				call nz,os_protected_ram_query
002D1B C0                  B    32    				ret nz
                           B    33    
002D1C 2A 00 01 00         B    34    				ld hl,(data_load_addr)			002D20 CD 49 16 00         B    35    				call os_read_bytes_from_file
002D24 C0                  B    36    				ret nz
                           B    37    			
002D25                     B    38    report_bytes_loaded
                           B    39    
002D25 21 39 5C 00         B    40    				ld hl,os_hex_prefix_txt			002D29 CD 94 0F 00         B    41    				call os_print_string			                           B    42    				
002D2D 11 05 01 00         B    43    				ld de,filesize_cache+2			Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 105


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\lb.asm
002D31 21 2F 68 00         B    44    				ld hl,output_line
002D35 0603                B    45    				ld b,3
002D37 CD D1 10 00         B    46    				call n_hexbytes_to_ascii
002D3B 3600                B    47    				ld (hl),0	
002D3D 0605                B    48    				ld b,5							002D3F CD AA 13 00         B    49    				call os_print_output_line_skip_
                           B    50    				
002D43 21 73 63 00         B    51    				ld hl,bytes_loaded_msg			002D47 CD 73 14 00         B    52    				call os_show_packed_text
                           B    53    				
002D4B 21 90 5C 00         B    54    				ld hl,to_txt					002D4F CD 94 0F 00         B    55    				call os_print_string
                           B    56    
002D53 21 39 5C 00         B    57    				ld hl,os_hex_prefix_txt			002D57 CD 94 0F 00         B    58    				call os_print_string	
                           B    59    
002D5B ED5B 00 01 00       B    60    				ld de,(data_load_addr)			002D60 CD 74 13 00         B    61    				call os_show_hex_address
                           B    62    
002D64 CD 3C 14 00         B    63    				call os_new_line
002D68 AF                  B    64    				xor a
002D69 C9                  B    65    				ret
                           B    66    				
                           B    67    ;----------------------------------------------
                           B    68    
       00000100            B    69    data_load_addr	equ scratch_pad
       00000103            B    70    filesize_cache	equ scratch_pad+3
                           B    71    
                           B    72    ;----------------------------------------------
                           B     0    	include 'commands\m.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'m' - Show memory as hex bytes command. V0.02 
                           B     3    ;----------------------------------------------
                           B     4    
       00000010            B     5    bytes_per_line	equ 16
                           B     6    
002D6A CD 84 1C 00         B     7    os_cmd_m		call hexword_or_bust			002D6E 28 05               B     8    				jr z,m_no_hex					002D70 ED53 C5 67 00       B     9    				ld (mem_mon_addr),de
                           B    10    				
002D75 0610                B    11    m_no_hex		ld b,16							002D77 C5                  B    12    smbllp			push bc							                           B    13    				
002D78 21 B1 2D 00         B    14    				ld hl,colon_cmd_prefix			002D7C CD 94 0F 00         B    15    				call os_print_string
002D80 ED5B C5 67 00       B    16    				ld de,(mem_mon_addr)
002D85 CD 74 13 00         B    17    				call os_show_hex_address
                           B    18    
002D89 21 2F 68 00         B    19    				ld hl,output_line
002D8D 0610                B    20    				ld b,bytes_per_line				002D8F 3620                B    21    mmbllp			ld (hl),' '
002D91 23                  B    22    				inc hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 106


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\m.asm
002D92 1A                  B    23    				ld a,(de)	
002D93 CD DF 10 00         B    24    				call hexbyte_to_ascii
002D97 13                  B    25    				inc de
002D98 10 F5               B    26    				djnz mmbllp
                           B    27    
002D9A ED53 C5 67 00       B    28    				ld (mem_mon_addr),de
002D9F 360B                B    29    				ld (hl),11
002DA1 23                  B    30    				inc hl
002DA2 3600                B    31    				ld (hl),0
002DA4 21 2F 68 00         B    32    				ld hl,output_line
002DA8 CD 94 0F 00         B    33    				call os_print_string
002DAC C1                  B    34    				pop bc
002DAD 10 C8               B    35    				djnz smbllp
                           B    36    				
002DAF AF                  B    37    				xor a
002DB0 C9                  B    38    				ret
                           B    39    
                           B    40    ;----------------------------------------------
                           B    41    
002DB1 3A2000              B    42    colon_cmd_prefix	db ': ',0
                           B    43    
                           B    44    ;----------------------------------------------
                           B     0    	include 'commands\md.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"md" - Make dir command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
002DB4                     B     5    os_cmd_md
                           B     6    	
002DB4 CD 84 16 00         B     7    				call os_check_volume_format	
002DB8 C0                  B     8    				ret nz
                           B     9    			
002DB9 CD 06 29 00         B    10    				call filename_or_bust
                           B    11    				
002DBD C3 C3 16 00         B    12    				jp os_make_dir			;no poi
                           B    13    				
                           B    14    
                           B    15    ;----------------------------------------------
                           B     0    	include 'commands\r.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'R' - show CPU register values saved on return
                           B     3    ;----------------------------------------------
                           B     4    
002DC1                     B     5    os_cmd_r	
002DC1 DD21 30 67 00       B     6    				ld ix,store_a1					002DC6 21 6B 2E 00         B     7    				ld hl,register_txt
002DCA CD 94 0F 00         B     8    rcmdloop2		call os_print_string
002DCE 7E                  B     9    rcmdloop		ld a,(hl)
002DCF FE01                B    10    				cp 1
002DD1 28 0B               B    11    				jr z,showbyte
002DD3 FE02                B    12    				cp 2
002DD5 28 15               B    13    				jr z,showword16
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 107


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\r.asm
002DD7 FE03                B    14    				cp 3
002DD9 28 2E               B    15    				jr z,showaddr
002DDB 23                  B    16    				inc hl
002DDC 18 F0               B    17    				jr rcmdloop
                           B    18    				
002DDE DD7E00              B    19    showbyte		ld a,(ix)
002DE1 DD23                B    20    				inc ix
002DE3 DDE5                B    21    				push ix
002DE5 E5                  B    22    				push hl
002DE6 CD 88 13 00         B    23    				call os_show_hex_byte
002DEA 18 2A               B    24    				jr showreg
                           B    25    
002DEC DD7E01              B    26    showword16		ld a,(ix+1)
002DEF DDE5                B    27    				push ix
002DF1 E5                  B    28    				push hl
002DF2 CD 88 13 00         B    29    				call os_show_hex_byte
002DF6 E1                  B    30    				pop hl
002DF7 DDE1                B    31    				pop ix
002DF9 DD7E00              B    32    				ld a,(ix)
002DFC DD23                B    33    				inc ix
002DFE DD23                B    34    				inc ix
002E00 DDE5                B    35    				push ix
002E02 E5                  B    36    				push hl
002E03 CD 88 13 00         B    37    				call os_show_hex_byte
002E07 18 0D               B    38    				jr showreg
                           B    39    
002E09 DD1700              B    40    showaddr		ld de,(ix)
002E0C ED3203              B    41    				lea ix,ix+3
002E0F DDE5                B    42    				push ix
002E11 E5                  B    43    				push hl
002E12 CD 74 13 00         B    44    				call os_show_hex_address
002E16 E1                  B    45    showreg			pop hl
002E17 DDE1                B    46    				pop ix
002E19 23                  B    47    				inc hl
002E1A 7E                  B    48    				ld a,(hl)
002E1B B7                  B    49    				or a
002E1C 20 AC               B    50    				jr nz,rcmdloop2
                           B    51    			
002E1E CD 3C 14 00         B    52    				call os_new_line				002E22 21 CF 2E 00         B    53    				ld hl,flag_txt
002E26 CD 5C 13 00         B    54    				call os_copy_to_output_line
002E2A 21 33 68 00         B    55    				ld hl,output_line+4
002E2E 01050000            B    56    				ld bc,5
002E32 3A 53 67 00         B    57    				ld a,(store_f)
002E36 CB77                B    58    				bit 6,a							002E38 28 02               B    59    				jr z,zfzero
002E3A 3631                B    60    				ld (hl),'1'
002E3C 09                  B    61    zfzero			add hl,bc
002E3D CB47                B    62    				bit 0,a							002E3F 28 02               B    63    				jr z,cfzero
002E41 3631                B    64    				ld (hl),'1'
002E43 09                  B    65    cfzero			add hl,bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 108


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\r.asm
002E44 CB7F                B    66    				bit 7,a							002E46 28 02               B    67    				jr z,sfzero
002E48 364D                B    68    				ld (hl),'M'
002E4A 09                  B    69    sfzero			add hl,bc
002E4B CB57                B    70    				bit 2,a							002E4D 28 02               B    71    				jr z,pfzero
002E4F 364F                B    72    				ld (hl),'O'
002E51 09                  B    73    pfzero			add hl,bc
002E52 23                  B    74    				inc hl
002E53 CB67                B    75    				bit 4,a							002E55 28 02               B    76    				jr z,iffzero
002E57 3631                B    77    				ld (hl),'1'
002E59                     B    78    iffzero			
002E59 01060000            B    79    				ld bc,6
002E5D 09                  B    80    				add hl,bc
002E5E 3A 54 67 00         B    81    				ld a,(store_adl)
002E62 C630                B    82    				add a,30h
002E64 77                  B    83    				ld (hl),a
002E65 CD 9F 13 00         B    84    				call os_print_output_line
002E69 AF                  B    85    				xor a
002E6A C9                  B    86    				ret
                           B    87    
                           B    88    ;----------------------------------------------
                           B    89    	
                           B    90    
002E6B 20413D00 01         B    91    register_txt		db ' A=',0,1
002E70 20204243 3D0003     B    92    					db '  BC=',0,3
002E77 20204445 3D0003     B    93    					db '  DE=',0,3
002E7E 2020484C 3D0003     B    94    					db '  HL=',0,3
                           B    95    					
002E85 0B                  B    96    					db 11
                           B    97    
002E86 27413D00 01         B    98    					db 027h,'A=',0,1
002E8B 20274243 3D0003     B    99    					db ' ',027h,'BC=',0,3
002E92 20274445 3D0003     B   100    					db ' ',027h,'DE=',0,3
002E99 2027484C 3D0003     B   101    					db ' ',027h,'HL=',0,3
                           B   102    					
002EA0 0B                  B   103    					db 11
                           B   104    
002EA1 2049583D 0003       B   105    					db ' IX=',0,3
002EA7 2049593D 0003       B   106    					db ' IY=',0,3
                           B   107    					
002EAD 0B                  B   108    					db 11
                           B   109    					
002EAE 2050433D 0003       B   110    					db ' PC=',0,3
002EB4 204C5350 3D0003     B   111    					db ' LSP=',0,3
002EBB 20535350 3D0002     B   112    					db ' SSP=',0,2
                           B   113    					
002EC2 0B                  B   114    					db 11
                           B   115    					
002EC3 204D4241 53453D00   B   116    					db ' MBASE=',0,1,0,0
002ECB 010000 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 109


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\r.asm
                           B   117    					
002ECE 0B                  B   118    					db 11
                           B   119    
002ECF 205A463D 30204346   B   120    flag_txt			db ' ZF=0 CF=0 SF=P PV=E IF
002ED7 3D302053 463D5020 
002EDF 50563D45 20494646 
002EE7 3D302041 444C3D30 
002EEF 0B0B00 
                           B   121    		
                           B   122    ;----------------------------------------------
                           B     0    	include 'commands\rd.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"RD" - Remove directory command. V0.02 - ADL m
                           B     3    ;----------------------------------------------
                           B     4    
002EF2                     B     5    os_cmd_rd
                           B     6    
002EF2 CD 84 16 00         B     7    				call os_check_volume_format	
002EF6 C0                  B     8    				ret nz
                           B     9    				
002EF7 CD 06 29 00         B    10    				call filename_or_bust
                           B    11    			
002EFB C3 2D 17 00         B    12    				jp os_delete_dir		;no poi
                           B    13    
                           B    14    
                           B    15    ;----------------------------------------------
                           B     0    	include 'commands\rn.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"rn" - Rename command. V0.02 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
002EFF                     B     5    os_cmd_rn
                           B     6    	
002EFF CD 84 16 00         B     7    				call os_check_volume_format	
002F03 C0                  B     8    				ret nz
                           B     9    			
002F04 CD 06 29 00         B    10    				call filename_or_bust
002F08 E5                  B    11    				push hl
002F09 D1                  B    12    				pop de
002F0A CD 1D 10 00         B    13    				call os_next_arg
002F0E 7E                  B    14    				ld a,(hl)						002F0F B7                  B    15    				or a
002F10 20 04               B    16    				jr nz,rn_grfn
002F12 3E1F                B    17    				ld a,01fh						002F14 B7                  B    18    				or a
002F15 C9                  B    19    				ret
                           B    20    
002F16 EB                  B    21    rn_grfn			ex de,hl
002F17 C3 17 17 00         B    22    				jp os_rename_file				                           B    23    		
                           B    24    ;----------------------------------------------
                           B     0    	include 'commands\sb.asm'
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 110


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\sb.asm
                           B     1    ;----------------------------------------------
                           B     2    ;'SB' - Save binary file command. V0.02 - ADL m
                           B     3    ;----------------------------------------------
                           B     4    
002F1B                     B     5    os_cmd_sb
                           B     6    	
002F1B CD 84 16 00         B     7    				call os_check_volume_format		002F1F C0                  B     8    				ret nz
                           B     9    					
002F20 CD 06 29 00         B    10    				call filename_or_bust			002F24 22 06 01 00         B    11    				ld (sb_save_name_addr),hl
                           B    12    				
002F28 2A 81 68 00         B    13    				ld hl,(os_args_loc)
002F2C CD 1D 10 00         B    14    				call os_next_arg
002F30 CD 84 1C 00         B    15    				call hexword_or_bust			002F34 CA FC 15 00         B    16    				jp z,os_no_start_addr			002F38 ED53 00 01 00       B    17    				ld (sb_save_addr),de
                           B    18    				
002F3D CD 84 1C 00         B    19    				call hexword_or_bust			002F41 CA 00 16 00         B    20    				jp z,os_no_filesize
002F45 ED53 03 01 00       B    21    				ld (sb_save_length),de
                           B    22    				
002F4A 2A 06 01 00         B    23    				ld hl,(sb_save_name_addr)		002F4E CD 58 16 00         B    24    				call os_create_file
002F52 28 18               B    25    				jr z,os_sfapp
002F54 FEC9                B    26    				cp 0c9h							002F56 C0                  B    27    				ret nz			
002F57 21 8A 61 00         B    28    				ld hl,save_append_msg			002F5B CD 73 14 00         B    29    				call os_show_packed_text
002F5F CD 91 49 00         B    30    				call os_wait_key_press
002F63 3E79                B    31    				ld a,'y'
002F65 B8                  B    32    				cp b
002F66 28 04               B    33    				jr z,os_sfapp
002F68 3E2C                B    34    				ld a,2ch						002F6A B7                  B    35    				or a
002F6B C9                  B    36    				ret
                           B    37    			
002F6C 2A 06 01 00         B    38    os_sfapp		ld hl,(sb_save_name_addr)		002F70 ED5B 00 01 00       B    39    				ld de,(sb_save_addr)			002F75 ED4B 03 01 00       B    40    				ld bc,(sb_save_length)			002F7A CD 6D 16 00         B    41    				call os_write_bytes_to_file
002F7E C0                  B    42    				ret nz	
                           B    43    				
002F7F 3E20                B    44    				ld a,020h						002F81 B7                  B    45    				or a
002F82 C9                  B    46    				ret
                           B    47    			
                           B    48    				
                           B    49    ;----------------------------------------------
                           B    50    
       00000100            B    51    sb_save_addr		equ scratch_pad
       00000103            B    52    sb_save_length		equ scratch_pad+3
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 111


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\sb.asm
       00000106            B    53    sb_save_name_addr	equ scratch_pad+6
                           B    54    
                           B    55    ;----------------------------------------------
                           B     0    	include 'commands\rx.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"RX" - Receive binary file via serial port com
                           B     3    ;----------------------------------------------
                           B     4    
       00000040            B     5    buffer_blocks			 equ 64					                           B     6    
       00000100            B     7    rx_buffer_loc			 equ scratch_pad
       00000103            B     8    rx_buffer_ptr			 equ scratch_pad+3
       00000106            B     9    serial_file_length_cache equ scratch_pad+6
                           B    10    
                           B    11    
002F83 7E                  B    12    os_cmd_rx		ld a,(hl)						002F84 B7                  B    13    				or a
002F85 CA F4 15 00         B    14    				jp z,os_no_fn_error
                           B    15    				
002F89 3E3E                B    16    				ld a,'>'						002F8B BE                  B    17    				cp (hl)
002F8C C2 73 30 00         B    18    				jp nz,rx_nrs
002F90 23                  B    19    				inc hl
002F91 3E20                B    20    				ld a,' '
002F93 BE                  B    21    				cp (hl)
002F94 2B                  B    22    				dec hl
002F95 C2 73 30 00         B    23    				jp nz,rx_nrs
                           B    24    				
002F99 CD 84 16 00         B    25    				call os_check_volume_format		002F9D C0                  B    26    				ret nz		
                           B    27    				
002F9E 01004000            B    28    				ld bc,buffer_blocks*256			002FA2 1E00                B    29    				ld e,0
002FA4 CD 52 3B 00         B    30    				call os_allocate_ram
002FA8 C0                  B    31    				ret nz
002FA9 22000100            B    32    				ld (rx_buffer_loc),hl
                           B    33    				
002FAD 112A0000            B    34    				ld de,02ah						002FB1 ED53 9B 65 00       B    35    				ld (serial_filename),de			002FB6 CD A5 31 00         B    36    				call rx_get_header
002FBA C2 43 30 00         B    37    				jr nz,rxwtd_fail
002FBE CD 64 4B 00         B    38    				call s_holdack					                           B    39    				
002FC2 21 AF 65 00         B    40    				ld hl,serial_fileheader			002FC6 CD 58 16 00         B    41    				call os_create_file
002FCA C2 43 30 00         B    42    				jp nz,rxwtd_fail				                           B    43    				
002FCE 21 AA 61 00         B    44    				ld hl,ser_recsave_msg
002FD2 CD 73 14 00         B    45    				call os_show_packed_text
                           B    46    				
002FD6 2A BF 65 00         B    47    rx_rnblk		ld hl,(serial_fileheader+16)	002FDA 22060100            B    48    				ld (serial_file_length_cache),h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 112


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
002FDE 2A000100            B    49    				ld hl,(rx_buffer_loc)
002FE2 22030100            B    50    				ld (rx_buffer_ptr),hl
                           B    51    				
002FE6 0640                B    52    				ld b,buffer_blocks				                           B    53    				
002FE8 CD 4C 4B 00         B    54    rx_lnb			call s_goodack
002FEC CD F6 4A 00         B    55    				call s_getblock
002FF0 28 0F               B    56    				jr z,rxtd_blok
002FF2 F5                  B    57    				push af							002FF3 CD 5D 4B 00         B    58    				call s_badack					002FF7 21 AF 65 00         B    59    				ld hl,serial_fileheader			002FFB CD EB 16 00         B    60    				call os_erase_file
002FFF 18 47               B    61    				jr rx_dealloc
                           B    62    
003001 CD 64 4B 00         B    63    rxtd_blok		call s_holdack					                           B    64    				
003005 21000800            B    65    				ld hl,sector_buffer				003009 ED5B0301 00         B    66    				ld de,(rx_buffer_ptr)
00300E C5                  B    67    				push bc
00300F 01000100            B    68    				ld bc,256
003013 EDB0                B    69    				ldir
003015 C1                  B    70    				pop bc
003016 ED530301 00         B    71    				ld (rx_buffer_ptr),de
                           B    72    				
00301B 2A BF 65 00         B    73    				ld hl,(serial_fileheader+16)	00301F 11000100            B    74    				ld de,256
003023 AF                  B    75    				xor a
003024 ED52                B    76    				sbc hl,de
003026 22 BF 65 00         B    77    				ld (serial_fileheader+16),hl
00302A 28 28               B    78    				jr z,rx_lbr						00302C 38 26               B    79    				jr c,rx_lbr						00302E 10 B8               B    80    				djnz rx_lnb						                           B    81    
003030 01004000            B    82    				ld bc,buffer_blocks*256			003034 ED5B0001 00         B    83    				ld de,(rx_buffer_loc)
003039 21 AF 65 00         B    84    				ld hl,serial_fileheader
00303D CD 6D 16 00         B    85    				call os_write_bytes_to_file
003041 28 93               B    86    				jr z,rx_rnblk					003043 F5                  B    87    rxwtd_fail		push af
003044 CD 5D 4B 00         B    88    				call s_badack
003048 01004000            B    89    rx_dealloc		ld bc,buffer_blocks*256
00304C 1E00                B    90    				ld e,0
00304E CD 7D 3B 00         B    91    				call os_deallocate_ram
003052 F1                  B    92    				pop af
003053 C9                  B    93    				ret
                           B    94    				
003054 CD 4C 4B 00         B    95    rx_lbr			call s_goodack					003058 ED4B0601 00         B    96    				ld bc,(serial_file_length_cache
00305D ED5B0001 00         B    97    				ld de,(rx_buffer_loc)
003062 21 AF 65 00         B    98    				ld hl,serial_fileheader
003066 CD 6D 16 00         B    99    				call os_write_bytes_to_file
00306A 28 03               B   100    				jr z,rxtd_done
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 113


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
00306C F5                  B   101    				push af
00306D 18 D9               B   102    				jr rx_dealloc
                           B   103    				
00306F 3E20                B   104    rxtd_done		ld a,020h						003071 B7                  B   105    				or a
003072 C9                  B   106    				ret
                           B   107    
                           B   108    				
                           B   109    
                           B   110    				
003073 3E21                B   111    rx_nrs			ld a,'!'						003075 BE                  B   112    				cp (hl)							003076 C2 46 31 00         B   113    				jr nz,notrxe
00307A 23                  B   114    				inc hl
00307B 3E20                B   115    				ld a,' '
00307D BE                  B   116    				cp (hl)
00307E 2B                  B   117    				dec hl
00307F C2 46 31 00         B   118    				jr nz,notrxe
003083 112A0000            B   119    				ld de,02ah						003087 ED53 9B 65 00       B   120    				ld (serial_filename),de			00308C CD A5 31 00         B   121    				call rx_get_header
003090 C0                  B   122    				ret nz
003091 21 A0 61 00         B   123    				ld hl,ser_rec2_msg
003095 CD 73 14 00         B   124    				call os_show_packed_text
003099 CD 4C 4B 00         B   125    				call s_goodack
00309D 3E01                B   126    				ld a,1							00309F 32 AE 65 00         B   127    				ld (serial_timeout),a
0030A3 CD F6 4A 00         B   128    				call s_getblock					0030A7 28 07               B   129    				jr z,rxe_fblok
0030A9 F5                  B   130    rxe_badblock	push af							0030AA CD 5D 4B 00         B   131    				call s_badack					0030AE F1                  B   132    				pop af
0030AF C9                  B   133    				ret
                           B   134    	
0030B0 ED4B0508 00         B   135    rxe_fblok		ld bc,(sector_buffer+5)			0030B5 C5                  B   136    				push bc
0030B6 E1                  B   137    				pop hl
0030B7 ED5B BF 65 00       B   138    				ld de,(serial_fileheader+16)
0030BC 19                  B   139    				add hl,de
0030BD EB                  B   140    				ex de,hl
0030BE CD A8 3B 00         B   141    				call os_protected_ram_test		0030C2 28 11               B   142    				jr z,rxe_norampro
0030C4 CD 64 4B 00         B   143    				call s_holdack					0030C8 CD FA 3B 00         B   144    				call os_protected_ram_query
0030CC 28 07               B   145    				jr z,rxe_norampro
0030CE F5                  B   146    				push af
0030CF CD 5D 4B 00         B   147    				call s_badack
0030D3 F1                  B   148    				pop af
0030D4 C9                  B   149    				ret
                           B   150    	
0030D5 2A020800            B   151    rxe_norampro	ld hl,(sector_buffer+2)
0030D9 1150524F            B   152    				ld de,04f5250h					Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 114


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
0030DD AF                  B   153    				xor a
0030DE 28 04               B   154    				jr z,rxe_ok
0030E0 3E1A                B   155    				ld a,1ah						0030E2 B7                  B   156    				or a
0030E3 C9                  B   157    				ret
0030E4 2A050800            B   158    rxe_ok			ld hl,(sector_buffer+5)			0030E8 22 92 65 00         B   159    				ld (serial_ez80_address),hl
0030EC 01000100            B   160    				ld bc,256						0030F0 DD21 AF 65 00       B   161    				ld ix,serial_fileheader
0030F5 AF                  B   162    				xor a
0030F6 DDB612              B   163    				or (ix+18)						0030F9 20 0A               B   164    				jr nz,mtones
0030FB DDB611              B   165    				or a,(ix+17)					0030FE 20 05               B   166    				jr nz,mtones
003100 0600                B   167    				ld b,0
003102 DD4E10              B   168    				ld c,(ix+16)					003105 21000800            B   169    mtones			ld hl,sector_buffer				003109 ED5B 92 65 00       B   170    				ld de,(serial_ez80_address)		00310E EDB0                B   171    				ldir
                           B   172    				
003110 D5                  B   173    				push de
003111 CD 4C 4B 00         B   174    				call s_goodack		
003115 DDE1                B   175    				pop ix							003117 2A BF 65 00         B   176    				ld hl,(serial_fileheader+16)	00311B 11000100            B   177    				ld de,256
00311F AF                  B   178    				xor a
003120 ED52                B   179    				sbc hl,de						003122 28 18               B   180    				jr z,rxe_done
003124 38 16               B   181    				jr c,rxe_done
003126 EB                  B   182    				ex de,hl
003127 ED53 BF 65 00       B   183    				ld (serial_fileheader+16),de	00312C DD2A 92 65 00       B   184    				ld ix,(serial_ez80_address)
003131 01000100            B   185    				ld bc,256
003135 DD09                B   186    				add ix,bc
003137 CD B4 4A 00         B   187    				call s_gbloop					00313B C0                  B   188    				ret nz
00313C E1                  B   189    rxe_done		pop hl							00313D CD AC 42 00         B   190    				call enable_button_nmi			003141 2A 92 65 00         B   191    				ld hl,(serial_ez80_address)
003145 E9                  B   192    				jp (hl)							                           B   193    				
                           B   194    				
                           B   195    
003146 CD EC 31 00         B   196    notrxe			call clear_serial_filename
                           B   197    				
00314A 0610                B   198    				ld b,16							00314C 11 9B 65 00         B   199    				ld de,serial_filename
003150 CD 82 12 00         B   200    				call os_copy_ascii_run			003154 79                  B   201    				ld a,c
003155 32 AD 65 00         B   202    				ld (serial_fn_length),a
003159 CD 29 10 00         B   203    				call os_scan_for_space
                           B   204    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 115


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
00315D CD 84 1C 00         B   205    				call hexword_or_bust			003161 CA FC 15 00         B   206    				jp z,os_no_start_addr			003165 ED530001 00         B   207    				ld (data_load_addr),de			00316A CD A5 31 00         B   208    				call rx_get_header
00316E C0                  B   209    				ret nz
                           B   210    
00316F ED4B0001 00         B   211    				ld bc,(data_load_addr)			003174 C5                  B   212    				push bc
003175 E1                  B   213    				pop hl
003176 ED5B BF 65 00       B   214    				ld de,(serial_fileheader+16)
00317B 19                  B   215    				add hl,de
00317C EB                  B   216    				ex de,hl
00317D CD A8 3B 00         B   217    				call os_protected_ram_test
003181 C4 FA 3B 00         B   218    				call nz,os_protected_ram_query
003185 C0                  B   219    				ret nz
                           B   220    				
003186 21 A0 61 00         B   221    				ld hl,ser_rec2_msg
00318A CD 73 14 00         B   222    				call os_show_packed_text
                           B   223    	
00318E 2A000100            B   224    				ld hl,(data_load_addr)			003192 CD A2 4A 00         B   225    				call serial_receive_file
003196 C0                  B   226    				ret nz							                           B   227    
003197 ED5B BF 65 00       B   228    				ld de,(serial_fileheader+16)	00319C ED530301 00         B   229    				ld (filesize_cache),de
0031A1 C3 25 2D 00         B   230    				jp report_bytes_loaded			                           B   231    				
                           B   232    ;----------------------------------------------
                           B   233    
0031A5                     B   234    rx_get_header
0031A5 21 9C 61 00         B   235    				ld hl,ser_rec_msg
0031A9 CD 73 14 00         B   236    				call os_show_packed_text
                           B   237    				
0031AD 3E00                B   238    				ld a,0
0031AF 32 D0 65 00         B   239    				ld (anim_wait_count),a			0031B3 3A D0 65 00         B   240    get_hdr_loop	ld a,(anim_wait_count)
0031B7 3C                  B   241    				inc a
0031B8 47                  B   242    				ld b,a
0031B9 FE06                B   243    				cp 6
0031BB 20 07               B   244    				jr nz,notsix
0031BD 0E20                B   245    				ld c,' '
0031BF 0605                B   246    				ld b,5
0031C1 AF                  B   247    				xor a
0031C2 18 02               B   248    				jr mcharset
0031C4 0E2E                B   249    notsix			ld c,'.'
0031C6 32 D0 65 00         B   250    mcharset		ld (anim_wait_count),a
0031CA CD 43 1A 00         B   251    				call os_print_multiple_chars
0031CE CD DD 0F 00         B   252    				call home_cursor
                           B   253    				
0031D2 21 9B 65 00         B   254    				ld hl,serial_filename			0031D6 3E01                B   255    				ld a,1							0031D8 CD 07 4A 00         B   256    				call serial_get_header
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 116


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\rx.asm
0031DC C8                  B   257    				ret z
0031DD FE83                B   258    				cp 083h							0031DF C0                  B   259    				ret nz
0031E0 CD EC 49 00         B   260    				call os_get_key_press
0031E4 FE76                B   261    				cp 076h
0031E6 20 CB               B   262    				jr nz,get_hdr_loop
0031E8 3E80                B   263    				ld a,080h						0031EA B7                  B   264    notsto			or a
0031EB C9                  B   265    				ret								                           B   266    							
                           B   267    
                           B   268    ;----------------------------------------------
                           B   269    
0031EC                     B   270    clear_serial_filename
                           B   271    
0031EC E5                  B   272    				push hl							0031ED 21 9B 65 00         B   273    				ld hl,serial_filename
0031F1 01100000            B   274    				ld bc,16
0031F5 AF                  B   275    				xor a
0031F6 CD 7D 15 00         B   276    				call os_bchl_memfill
0031FA E1                  B   277    				pop hl
0031FB C9                  B   278    				ret
                           B   279    
                           B   280    ;----------------------------------------------
                           B   281    
                           B     0    	include 'commands\tx.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'TX' - Transmit binary file via serial port co
                           B     3    ;----------------------------------------------
                           B     4    
0031FC 7E                  B     5    os_cmd_tx		ld a,(hl)						0031FD B7                  B     6    				or a
0031FE CA F4 15 00         B     7    				jp z,os_no_fn_error
                           B     8    			
003202 E5                  B     9    				push hl							003203 21 9B 65 00         B    10    				ld hl,serial_filename
003207 01100000            B    11    				ld bc,16
00320B AF                  B    12    				xor a
00320C CD 7D 15 00         B    13    				call os_bchl_memfill
003210 E1                  B    14    				pop hl
                           B    15    			
003211 0610                B    16    				ld b,16							003213 11 9B 65 00         B    17    				ld de,serial_filename
003217 CD 82 12 00         B    18    				call os_copy_ascii_run			00321B 79                  B    19    				ld a,c
00321C 32 AD 65 00         B    20    				ld (serial_fn_length),a
003220 CD 29 10 00         B    21    				call os_scan_for_space
                           B    22    							
003224 CD 84 1C 00         B    23    				call hexword_or_bust			003228 CA FC 15 00         B    24    				jp z,os_no_start_addr			00322C ED53 92 65 00       B    25    				ld (serial_ez80_address),de
                           B    26    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 117


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\tx.asm
003231 CD 84 1C 00         B    27    				call hexword_or_bust			003235 CA 00 16 00         B    28    				jp z,os_no_filesize
003239 ED53 95 65 00       B    29    				ld (serial_file_length),de
00323E 21000000            B    30    				ld hl,0
003242 3E07                B    31    				ld a,07h						003244 B7                  B    32    				or a
003245 ED5A                B    33    				adc hl,de
003247 28 1D               B    34    				jr z,s_error
                           B    35    				
003249 21 A5 61 00         B    36    				ld hl,ser_send_msg
00324D CD 73 14 00         B    37    				call os_show_packed_text
                           B    38    			
003251 ED5B 95 65 00       B    39    				ld de,(serial_file_length)
003256 21 9B 65 00         B    40    				ld hl,serial_filename			00325A DD2A 92 65 00       B    41    				ld ix,(serial_ez80_address)
00325F CD 6B 4B 00         B    42    				call serial_send_file
003263 C0                  B    43    				ret nz			
                           B    44    			
003264 3E20                B    45    				ld a,020h						003266 B7                  B    46    s_error			or a
003267 C9                  B    47    				ret
                           B    48    				
                           B    49    			
                           B    50    ;----------------------------------------------
                           B     0    	include 'commands\t.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;'T' - Show memory as ascii text command. V0.02
                           B     3    ;----------------------------------------------
                           B     4    
003268 CD 84 1C 00         B     5    os_cmd_t		call hexword_or_bust			00326C 28 05               B     6    				jr z,t_no_hex					00326E ED53 C5 67 00       B     7    				ld (mem_mon_addr),de
                           B     8    							
003273 0610                B     9    t_no_hex		ld b,16
003275 C5                  B    10    smaalp			push bc
                           B    11    				
003276 21 B9 32 00         B    12    				ld hl,gtr_cmd_prefix			00327A CD 94 0F 00         B    13    				call os_print_string
00327E ED5B C5 67 00       B    14    				ld de,(mem_mon_addr)
003283 CD 74 13 00         B    15    				call os_show_hex_address
                           B    16    
003287 21 2F 68 00         B    17    				ld hl,output_line
00328B 3620                B    18    				ld (hl),' '
00328D 23                  B    19    				inc hl
00328E 3622                B    20    				ld (hl),022h
003290 0610                B    21    				ld b,16
003292 23                  B    22    mabllp			inc hl
003293 1A                  B    23    				ld a,(de)	
003294 FE20                B    24    				cp 020h
003296 38 04               B    25    				jr c,chchar
003298 FE7F                B    26    				cp 07fh
00329A 38 02               B    27    				jr c,nchchar
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 118


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\t.asm
00329C 3E7C                B    28    chchar			ld a,07ch
00329E 77                  B    29    nchchar			ld (hl),a
00329F 13                  B    30    				inc de
0032A0 10 F0               B    31    				djnz mabllp
                           B    32    
0032A2 ED53 C5 67 00       B    33    				ld (mem_mon_addr),de
0032A7 23                  B    34    				inc hl
0032A8 3622                B    35    				ld (hl),022h
0032AA 23                  B    36    				inc hl
0032AB 360B                B    37    				ld (hl),11
0032AD 23                  B    38    				inc hl
0032AE 3600                B    39    				ld (hl),0
0032B0 CD 9F 13 00         B    40    				call os_print_output_line
0032B4 C1                  B    41    				pop bc
0032B5 10 BE               B    42    				djnz smaalp
0032B7 AF                  B    43    				xor a
0032B8 C9                  B    44    				ret
                           B    45    	
                           B    46    ;----------------------------------------------
                           B    47    
0032B9 3E2000              B    48    gtr_cmd_prefix	db '> ',0
                           B    49    
                           B    50    ;----------------------------------------------
                           B     0    	include 'commands\mount.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; "MOUNT" = Re-mount and show drives v0.02 - AD
                           B     3    ;----------------------------------------------
                           B     4    
0032BC                     B     5    os_cmd_remount
                           B     6    
0032BC 3E00                B     7    				ld a,0							0032BE CD 28 18 00         B     8    				call os_mount_volumes
0032C2 CD 3C 14 00         B     9    				call os_new_line
0032C6 AF                  B    10    				xor a
0032C7 C9                  B    11    				ret
                           B    12    
                           B    13    ;----------------------------------------------
                           B    14    	
                           B     0    	include 'commands\vers.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; "Vers" = Show OS / Hardware version v0.03 - A
                           B     3    ;----------------------------------------------
                           B     4    
0032C8                     B     5    os_cmd_vers		
0032C8 E5                  B     6    				push hl
                           B     7    				
0032C9 21 3B 5C 00         B     8    				ld hl,os_version_txt
0032CD CD 94 0F 00         B     9    				call os_print_string
                           B    10    			
0032D1 CD 3B 46 00         B    11    				call hwsc_get_version
0032D5 22100100            B    12    				ld (scratch_pad+10h),hl
0032D9 ED531301 00         B    13    				ld (scratch_pad+13h),de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 119


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\vers.asm
0032DE D5                  B    14    				push de
0032DF EB                  B    15    				ex de,hl
0032E0 CD 93 13 00         B    16    				call os_show_hex_word
                           B    17    				
0032E4 21 56 5C 00         B    18    				ld hl,fwd_slash_txt
0032E8 CD 94 0F 00         B    19    				call os_print_string
                           B    20    				
0032EC 21 48 5C 00         B    21    				ld hl,hw_version_txt
0032F0 CD 94 0F 00         B    22    				call os_print_string
0032F4 D1                  B    23    				pop de
0032F5 CD 93 13 00         B    24    				call os_show_hex_word
                           B    25    				
0032F9 CD 3C 14 00         B    26    				call os_new_line
0032FD CD 3C 14 00         B    27    				call os_new_line	
                           B    28    				
003301 E1                  B    29    				pop hl
003302 7E                  B    30    				ld a,(hl)
003303 FE23                B    31    				cp '#'
003305 28 02               B    32    				jr z,vers_env
003307 AF                  B    33    				xor a
003308 C9                  B    34    				ret
                           B    35    				
003309 CD 48 3C 00         B    36    vers_env		call clear_output_envars
00330D DD211001 00         B    37    				ld ix,scratch_pad+10h
003312 0602                B    38    				ld b,2
003314 0E00                B    39    				ld c,0
003316 CD 15 3C 00         B    40    				call os_output_to_envars
00331A C9                  B    41    				ret
                           B    42    				
                           B    43    	
                           B    44    ;----------------------------------------------
                           B    45    	
                           B     0    	include 'commands\exec.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"exec" - execute script V0.04 - ADL mode
                           B     3    ;
                           B     4    ; Notes: Changing drives within a script not su
                           B     5    ;        Scripts cannot launch scripts as this 
                           B     6    ;		 Abort with CRTL + C
                           B     7    ;
                           B     8    ;        Supports: IF [CONDITION] jumps. Syntax
                           B     9    ;        
                           B    10    ;          "IF ENVAR = STRING LABEL" (or IF ENV
                           B    11    ;          (goto LABEL must be declared as [LAB
                           B    12    ;----------------------------------------------
                           B    13    
       00000010            B    14    max_if_chars		equ 16 ;(string size for en
                           B    15    
       00000000            B    16    scr_in_script		equ 0
       00000001            B    17    scr_find_new_line	equ 1
       00000002            B    18    scr_if_condition	equ 2
       00000003            B    19    scr_end				equ 3
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 120


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\exec.asm
                           B    20    
                           B    21    
00331B 21 96 68 00         B    22    os_cmd_exec		ld hl,script_flags				00331F CB46                B    23    				bit scr_in_script,(hl)
003321 C2 B2 34 00         B    24    				jp nz,script_error
003325 E5                  B    25    				push hl
003326 CD 2E 33 00         B    26    				call do_script
00332A E1                  B    27    				pop hl
00332B CB86                B    28    				res scr_in_script,(hl)
00332D C9                  B    29    				ret
                           B    30    				
00332E CBC6                B    31    do_script		set scr_in_script,(hl)
                           B    32    			
003330 2A 81 68 00         B    33    				ld hl,(os_args_loc)				003334 11 AE 67 00         B    34    				ld de,script_fn					003338 060D                B    35    				ld b,13
00333A CD 82 12 00         B    36    				call os_copy_ascii_run
00333E AF                  B    37    				xor a
00333F 12                  B    38    				ld (de),a
                           B    39    				
003340 CD 5B 1A 00         B    40    				call fs_get_dir_cluster			003344 ED53 8D 68 00       B    41    				ld (script_dir),de
                           B    42    				
003349 CD 84 16 00         B    43    				call os_check_volume_format		00334D C0                  B    44    				ret nz
                           B    45    				
00334E CD 7E 34 00         B    46    				call new_script
                           B    47    
                           B    48    ;----------------------------------------------
                           B    49    
                           B    50    
003352 3A F3 68 00         B    51    scrp_loop		ld a,(key_mod_flags)			003356 E602                B    52    				and 2
003358 28 12               B    53    				jr z,no_quit_script	
00335A CD EC 49 00         B    54    				call os_get_key_press
00335E FE21                B    55    				cp 021h							003360 20 0A               B    56    				jr nz,no_quit_script
                           B    57    
003362 21 B9 61 00         B    58    				ld hl,script_aborted_msg
003366 CD 73 14 00         B    59    				call os_show_packed_text
00336A AF                  B    60    				xor a							00336B C9                  B    61    				ret
                           B    62    					
                           B    63    
00336C CD 91 34 00         B    64    no_quit_script	call open_script				003370 C0                  B    65    				ret nz
003371 CD BC 34 00         B    66    				call read_script				003375 C0                  B    67    				ret nz
003376 21 96 68 00         B    68    				ld hl,script_flags				00337A CB5E                B    69    				bit scr_end,(hl)
00337C 28 02               B    70    				jr z,scr_to_do
00337E AF                  B    71    scr_done		xor a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 121


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\exec.asm
00337F C9                  B    72    				ret
                           B    73    				
003380 21 DD 67 00         B    74    scr_to_do		ld hl,commandstring				003384 7E                  B    75    				ld a,(hl)
003385 FE5B                B    76    				cp '['
003387 28 1C               B    77    				jr z,exec_scr_next
                           B    78    
003389 11 9B 5C 00         B    79    				ld de,if_command_txt			00338D 0603                B    80    				ld b,3
00338F CD 63 12 00         B    81    				call os_compare_strings
003393 28 18               B    82    				jr z,do_exec_if
                           B    83    				
003395 11 9E 5C 00         B    84    				ld de,end_command_txt			003399 0604                B    85    				ld b,4
00339B CD 63 12 00         B    86    				call os_compare_strings
00339F 28 DD               B    87    				jr z,scr_done
                           B    88    			
0033A1 CD A3 0C 00         B    89    				call os_parse_cmd_chk_ps		                           B    90    				
0033A5 21 96 68 00         B    91    exec_scr_next	ld hl,script_flags
0033A9 CBCE                B    92    				set scr_find_new_line,(hl)
0033AB 18 A5               B    93    				jr scrp_loop
                           B    94    	
                           B    95    ;----------------------------------------------
                           B    96    
                           B    97    ; Handle "IF" instructions in the format:
                           B    98    
                           B    99    ; "IF ENVAR = VALUE LABLE"
                           B   100    ; "IF ENVAR <> VALUE LABLE"
                           B   101    ;  (LABEL must be declared at start of a script
                           B   102    ;  square brackets ([label]) with no other data
                           B   103    
0033AD 21 DF 67 00         B   104    do_exec_if		ld hl,commandstring+2			0033B1 CD 32 10 00         B   105    				call os_scan_for_non_space
0033B5 CA B2 34 00         B   106    				jr z,script_error				0033B9 11 97 68 00         B   107    				ld de,if_name_txt
0033BD 0610                B   108    				ld b,max_if_chars
0033BF CD 82 12 00         B   109    				call os_copy_ascii_run			0033C3 AF                  B   110    				xor a
0033C4 12                  B   111    				ld (de),a
                           B   112    				
0033C5 CD 32 10 00         B   113    				call os_scan_for_non_space		0033C9 CA B2 34 00         B   114    				jr z,script_error
0033CD DD21 96 68 00       B   115    				ld ix,script_flags
0033D2 DDCB0096            B   116    				res scr_if_condition,(ix)
0033D6 7E                  B   117    				ld a,(hl)
0033D7 FE3D                B   118    				cp '='
0033D9 28 04               B   119    				jr z,if_equals
0033DB DDCB00D6            B   120    				set scr_if_condition,(ix)		                           B   121    
0033DF CD 29 10 00         B   122    if_equals		call os_scan_for_space			0033E3 CD 32 10 00         B   123    				call os_scan_for_non_space		Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 122


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\exec.asm
0033E7 CA B2 34 00         B   124    				jr z,script_error
0033EB 11 A9 68 00         B   125    				ld de,if_value_txt				0033EF 0610                B   126    				ld b,max_if_chars
0033F1 CD 82 12 00         B   127    				call os_copy_ascii_run
0033F5 AF                  B   128    				xor a
0033F6 12                  B   129    				ld (de),a
                           B   130    				
0033F7 CD 32 10 00         B   131    				call os_scan_for_non_space
0033FB CA B2 34 00         B   132    				jr z,script_error
0033FF 11 BB 68 00         B   133    				ld de,if_label_txt				003403 0610                B   134    				ld b,max_if_chars
003405 CD 82 12 00         B   135    				call os_copy_ascii_run			003409 AF                  B   136    				xor a
00340A 12                  B   137    				ld (de),a						                           B   138    								
00340B 21 97 68 00         B   139    				ld hl,if_name_txt				00340F CD 2A 1B 00         B   140    				call os_get_envar				003413 C2 A5 33 00         B   141    				jp nz,exec_scr_next				                           B   142    								
003417 21 A9 68 00         B   143    				ld hl,if_value_txt
00341B DD21 96 68 00       B   144    				ld ix,script_flags
003420 DDCB0056            B   145    				bit scr_if_condition,(ix)
003424 20 0A               B   146    				jr nz,if_cond_diff
003426 CD 63 12 00         B   147    				call os_compare_strings			00342A C2 A5 33 00         B   148    				jp nz,exec_scr_next				00342E 18 08               B   149    				jr if_cond_met
003430 CD 63 12 00         B   150    if_cond_diff	call os_compare_strings			003434 CA A5 33 00         B   151    				jp z,exec_scr_next				                           B   152    
003438 CD 7E 34 00         B   153    if_cond_met		call new_script					                           B   154    
00343C CD 91 34 00         B   155    find_if_label	call open_script				003440 C0                  B   156    				ret nz
                           B   157    
003441 CD BC 34 00         B   158    				call read_script
003445 C0                  B   159    				ret nz
003446 21 96 68 00         B   160    				ld hl,script_flags
00344A CB5E                B   161    				bit scr_end,(hl)
00344C C2 7E 33 00         B   162    				jp nz,scr_done
                           B   163    				
003450 21 DD 67 00         B   164    				ld hl,commandstring				003454 7E                  B   165    				ld a,(hl)
003455 FE5B                B   166    				cp '['
003457 20 1D               B   167    				jr nz,not_a_label				                           B   168    				
003459 23                  B   169    if_find_csb		inc hl
00345A 7E                  B   170    				ld a,(hl)
00345B B7                  B   171    				or a
00345C 28 18               B   172    				jr z,not_a_label				00345E FE5D                B   173    				cp ']'							003460 20 F7               B   174    				jr nz,if_find_csb
003462 3600                B   175    				ld (hl),0						Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 123


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\exec.asm
003464 21 DE 67 00         B   176    				ld hl,commandstring+1
003468 11 BB 68 00         B   177    				ld de,if_label_txt				00346C 0610                B   178    				ld b,max_if_chars
00346E CD 63 12 00         B   179    				call os_compare_strings
003472 CA A5 33 00         B   180    				jp z,exec_scr_next				                           B   181    
003476 21 96 68 00         B   182    not_a_label		ld hl,script_flags
00347A CBCE                B   183    				set scr_find_new_line,(hl)		00347C 18 BE               B   184    				jr find_if_label
                           B   185    											
                           B   186    ;----------------------------------------------
                           B   187    
00347E E5                  B   188    new_script		push hl
00347F 21000000            B   189    				ld hl,0
003483 22 90 68 00         B   190    				ld (script_file_offset),hl		003487 21 96 68 00         B   191    				ld hl,script_flags
00348B CB8E                B   192    				res scr_find_new_line,(hl)		00348D CB9E                B   193    				res scr_end,(hl)
00348F E1                  B   194    				pop hl
003490 C9                  B   195    				ret
                           B   196    								
                           B   197    ;----------------------------------------------
                           B   198    
003491 CD 5B 1A 00         B   199    open_script		call fs_get_dir_cluster			003495 D5                  B   200    				push de
003496 ED5B 8D 68 00       B   201    				ld de,(script_dir)				00349B CD 67 1A 00         B   202    				call fs_update_dir_cluster
                           B   203    				
00349F 21 AE 67 00         B   204    				ld hl,script_fn					0034A3 CD 1C 16 00         B   205    				call os_find_file				0034A7 ED53 93 68 00       B   206    				ld (script_length),de			0034AC D1                  B   207    				pop de
0034AD C0                  B   208    				ret nz
0034AE 79                  B   209    				ld a,c							0034AF B7                  B   210    				or a
0034B0 28 04               B   211    				jr z,scr_flok
                           B   212    				
0034B2 3E8C                B   213    script_error	ld a,08ch
0034B4 B7                  B   214    				or a
0034B5 C9                  B   215    				ret
                           B   216    				
0034B6 CD 67 1A 00         B   217    scr_flok		call fs_update_dir_cluster		0034BA AF                  B   218    				xor a
0034BB C9                  B   219    				ret
                           B   220    				
                           B   221    ;----------------------------------------------
                           B   222    
                           B   223    
0034BC 21 DD 67 00         B   224    read_script		ld hl,commandstring				0034C0 01500000            B   225    				ld bc,max_buffer_chars			0034C4 3E20                B   226    				ld a,32
0034C6 CD 7D 15 00         B   227    				call os_bchl_memfill
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 124


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\exec.asm
                           B   228    				
0034CA 11500000            B   229    				ld de,max_buffer_chars			0034CE CD 2B 16 00         B   230    				call os_set_load_length
                           B   231    				
0034D2 AF                  B   232    				xor a
0034D3 2A 93 68 00         B   233    				ld hl,(script_length)
0034D7 ED5B 90 68 00       B   234    				ld de,(script_file_offset)		0034DC 37                  B   235    				scf
0034DD ED52                B   236    				sbc hl,de						0034DF 30 08               B   237    				jr nc,not_eoscr					0034E1 21 96 68 00         B   238    				ld hl,script_flags
0034E5 CBDE                B   239    				set scr_end,(hl)				0034E7 AF                  B   240    				xor a
0034E8 C9                  B   241    				ret
0034E9 CD 33 16 00         B   242    not_eoscr		call os_set_file_pointer
                           B   243    
0034ED 21 DD 67 00         B   244    				ld hl,commandstring				0034F1 CD 49 16 00         B   245    				call os_read_bytes_from_file
0034F5 B7                  B   246    				or a			
0034F6 28 03               B   247    				jr z,scr_load_ok
0034F8 FECC                B   248    				cp 0cch							0034FA C0                  B   249    				ret nz							                           B   250    
0034FB 21 96 68 00         B   251    scr_load_ok		ld hl,script_flags
0034FF CB4E                B   252    				bit scr_find_new_line,(hl)		003501 20 17               B   253    				jr nz,scr_fnl					                           B   254    
003503 21 DD 67 00         B   255    				ld hl,commandstring				003507 0650                B   256    				ld b,max_buffer_chars
003509 7E                  B   257    scr_fcr			ld a,(hl)
00350A FE20                B   258    				cp 32
00350C 38 05               B   259    				jr c,scr_gotclcr
00350E 23                  B   260    				inc hl
00350F 10 F8               B   261    				djnz scr_fcr
003511 AF                  B   262    				xor a
003512 C9                  B   263    				ret
003513 3620                B   264    scr_gotclcr		ld (hl),32						003515 23                  B   265    				inc hl
003516 10 FB               B   266    				djnz scr_gotclcr
003518 AF                  B   267    				xor a
003519 C9                  B   268    				ret
                           B   269    
00351A FD2A 90 68 00       B   270    scr_fnl			ld iy,(script_file_offset)
00351F 21 DD 67 00         B   271    				ld hl,commandstring	
003523 7E                  B   272    scr_find_cr		ld a,(hl)						003524 B7                  B   273    				or a
003525 20 07               B   274    				jr nz,scr_neocl					003527 FD22 90 68 00       B   275    scr_eocl		ld (script_file_offset),iy
00352C 18 8E               B   276    				jr read_script				
00352E FE20                B   277    scr_neocl		cp 20h							003530 38 05               B   278    				jr c,scr_got_cr
003532 23                  B   279    				inc hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 125


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\exec.asm
003533 FD23                B   280    				inc iy
003535 18 EC               B   281    				jr scr_find_cr
                           B   282    				
003537 7E                  B   283    scr_got_cr		ld a,(hl)
003538 B7                  B   284    				or a							003539 28 EC               B   285    				jr z,scr_eocl					00353B FE20                B   286    				cp 20h
00353D 30 05               B   287    				jr nc,scr_got_ch				00353F 23                  B   288    				inc hl
003540 FD23                B   289    				inc iy
003542 18 F3               B   290    				jr scr_got_cr
                           B   291    
003544 FD22 90 68 00       B   292    scr_got_ch		ld (script_file_offset),iy
003549 21 96 68 00         B   293    				ld hl,script_flags				00354D CB8E                B   294    				res scr_find_new_line,(hl)
00354F C3 BC 34 00         B   295    				jr read_script
                           B   296    
                           B   297    
                           B   298    ;----------------------------------------------
                           B   299    
                           B   300    		
                           B   301    				
                           B   302    				
                           B   303    				
                           B   304    				
                           B   305    				
                           B     0    	include 'commands\ltn.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; OS "<" Command: Update mem hex bytes and re-d
                           B     3    ;
                           B     4    ; Not currently enabled in PROSE
                           B     5    ;----------------------------------------------
                           B     6    
003553                     B     7    os_cmd_ltn
                           B     8    
003553 AF                  B     9    				xor a
003554 C9                  B    10    				ret
                           B    11    
                           B    12    
                           B    13    ;----------------------------------------------
                           B    14    	
                           B     0    	include 'commands\pen.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"Pen" - Change attribute v0.03 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
003555                     B     5    os_cmd_pen
                           B     6    	
003555 0612                B     7    				ld b,18							003557 DD21 56 65 00       B     8    				ld ix,current_pen
                           B     9    				
00355C CD 84 1C 00         B    10    chpenlp			call hexword_or_bust			Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 126


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\pen.asm
003560 28 0D               B    11    				jr z,pendone					003562 23                  B    12    				inc hl
003563 DD7300              B    13    				ld (ix),e
003566 DD7201              B    14    				ld (ix+1),d
003569 DD23                B    15    				inc ix
00356B DD23                B    16    				inc ix
00356D 10 ED               B    17    				djnz chpenlp	
                           B    18    				
00356F 21 5A 65 00         B    19    pendone			ld hl,pen_palette				003573 CD B8 43 00         B    20    				call hswc_set_ui_colours
003577 AF                  B    21    				xor a
003578 C9                  B    22    				ret
                           B    23    
                           B    24    ;----------------------------------------------
                           B     0    	include 'commands\palette.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"Palette" - Change attribute v0.01 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
003579                     B     5    os_cmd_palette
                           B     6    
003579 0610                B     7    				ld b,16							00357B DD21 5A 65 00       B     8    				ld ix,pen_palette
                           B     9    				
003580 0E00                B    10    				ld c,0
003582 C5                  B    11    chcollp			push bc
003583 CD 84 1C 00         B    12    				call hexword_or_bust			003587 C1                  B    13    				pop bc
003588 28 0E               B    14    				jr z,colrdone					00358A 0C                  B    15    				inc c
00358B 23                  B    16    				inc hl
00358C DD7300              B    17    				ld (ix),e
00358F DD7201              B    18    				ld (ix+1),d
003592 DD23                B    19    				inc ix
003594 DD23                B    20    				inc ix
003596 10 EA               B    21    				djnz chcollp
                           B    22    			
003598 79                  B    23    colrdone		ld a,c
003599 B7                  B    24    				or a
00359A 20 04               B    25    				jr nz,pal_ok
00359C 3E81                B    26    				ld a,81h						00359E B7                  B    27    				or a
00359F C9                  B    28    				ret
0035A0 21 5A 65 00         B    29    pal_ok			ld hl,pen_palette
0035A4 CD B8 43 00         B    30    				call hswc_set_ui_colours	
0035A8 AF                  B    31    				xor a
0035A9 C9                  B    32    				ret
                           B    33    
                           B    34    ;----------------------------------------------
                           B     0    	include 'commands\mouse.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; "Mouse" = Reset / Enable Mouse Driver v0.05 -
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 127


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\mouse.asm
                           B     3    ;----------------------------------------------
                           B     4    
       00000280            B     5    window_width_pixels		equ 640
       000001E0            B     6    window_height_pixels	equ 480
                           B     7    
       00000064            B     8    default_sample_rate 	equ 100			; 100 s
       00000003            B     9    default_resolution		equ 03h			; 8 cou
       000000E6            B    10    default_scaling			equ 0e6h		; valid
                           B    11    
0035AA                     B    12    os_cmd_mouse
                           B    13    
                           B    14    		
0035AA CD C4 40 00         B    15    				call disable_ms_irq
                           B    16    
0035AE 21 1A 67 00         B    17    				ld hl,devices_connected
0035B2 CB8E                B    18    				res 1,(hl)
                           B    19    		
0035B4 CD 80 47 00         B    20    				call init_mouse
0035B8 C0                  B    21    				ret nz
                           B    22    			
0035B9 AF                  B    23    				xor a
0035BA 32 FC 68 00         B    24    				ld (mouse_packet_index),a
0035BE 32 FD 68 00         B    25    				ld (mouse_buttons),a
0035C2 21000000            B    26    				ld hl,0
0035C6 22 FE 68 00         B    27    				ld (mouse_disp_x),hl
0035CA 22 01 69 00         B    28    				ld (mouse_disp_y),hl
                           B    29    
0035CE 21800200            B    30    				ld hl,window_width_pixels
0035D2 11E00100            B    31    				ld de,window_height_pixels
0035D6 CD BD 14 00         B    32    				call os_set_mouse_window
                           B    33    
0035DA CD BE 40 00         B    34    				call enable_ms_irq
                           B    35    
0035DE 21 1A 67 00         B    36    				ld hl,devices_connected
0035E2 CBCE                B    37    				set 1,(hl)
0035E4 AF                  B    38    				xor a
0035E5 C9                  B    39    				ret				
                           B    40    				
                           B    41    ;----------------------------------------------
                           B    42    	
                           B     0    	include 'commands\vmode.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"vmode" - Change video mode - ADL mode 0.3
                           B     3    ;----------------------------------------------
                           B     4    
0035E6                     B     5    os_cmd_vmode
                           B     6    	
0035E6 CD 84 1C 00         B     7    				call hexword_or_bust			0035EA 20 04               B     8    				jr nz,vm_data					0035EC 3E81                B     9    				ld a,81h						0035EE B7                  B    10    				or a
0035EF C9                  B    11    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 128


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\vmode.asm
                           B    12    
0035F0 7B                  B    13    vm_data			ld a,e
0035F1 CD 56 15 00         B    14    				call os_set_vmode
0035F5 C9                  B    15    				ret
                           B    16    				
                           B    17    ;----------------------------------------------
                           B     0    	include 'commands\font.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"font" - replace font. V0.01 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
0035F6                     B     5    os_cmd_font
                           B     6    	
0035F6 CD 84 16 00         B     7    				call os_check_volume_format	
0035FA C0                  B     8    				ret nz
                           B     9    				
0035FB CD 06 29 00         B    10    				call filename_or_bust			0035FF 22000100            B    11    				ld (scratch_pad),hl
                           B    12    
003603 CD 5B 1A 00         B    13    				call fs_get_dir_cluster			003607 ED530301 00         B    14    				ld (scratch_pad+3),de
                           B    15    				
00360C CD E1 16 00         B    16    				call os_root_dir				003610 C0                  B    17    				ret nz
003611 21 7F 36 00         B    18    				ld hl,fonts_fn
003615 CD D1 16 00         B    19    				call os_change_dir
003619 20 1E               B    20    				jr nz,no_font
                           B    21    				
00361B 2A000100            B    22    				ld hl,(scratch_pad)
00361F CD 1C 16 00         B    23    				call os_find_file				003623 20 14               B    24    				jr nz,no_font
                           B    25    				
003625 11000800            B    26    				ld de,800h
003629 CD 2B 16 00         B    27    				call os_set_load_length			                           B    28    
00362D 21000080            B    29    				ld hl,vram_a_addr				003631 CD 49 16 00         B    30    				call os_read_bytes_from_file
003635 CD 45 36 00         B    31    				call convert_font
                           B    32    				
003639 F5                  B    33    no_font			push af
00363A ED5B0301 00         B    34    				ld de,(scratch_pad+3)			00363F CD 67 1A 00         B    35    				call fs_update_dir_cluster
003643 F1                  B    36    				pop af
003644 C9                  B    37    				ret
                           B    38    				
                           B    39    
                           B    40    ;----------------------------------------------
                           B    41    				
003645 1EFF                B    42    convert_font	ld e,255						003647 01080000            B    43    				ld bc,8
00364B 21F80780            B    44    				ld hl,vram_a_addr+07f8h	
00364F CD 5A 36 00         B    45    conv_allch		call char_to_font
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 129


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\font.asm
003653 AF                  B    46    				xor a
003654 ED42                B    47    				sbc hl,bc
003656 1D                  B    48    				dec e
003657 20 F6               B    49    				jr nz,conv_allch
003659 C9                  B    50    				ret
                           B    51    
                           B    52    ;----------------------------------------------
                           B    53    
                           B    54    ; set E = character number
                           B    55    ;     HL = character source def address
                           B    56    
00365A E5                  B    57    char_to_font	push hl
00365B C5                  B    58    				push bc
00365C 01400000            B    59    				ld bc,64
003660 43                  B    60    				ld b,e
003661 ED4C                B    61    				mlt bc
003663 DD210000 80         B    62    				ld ix,vram_a_addr
003668 DD09                B    63    				add ix,bc
00366A CD 72 36 00         B    64    				call conv_char
00366E C1                  B    65    				pop bc
00366F E1                  B    66    				pop hl
003670 AF                  B    67    				xor a
003671 C9                  B    68    				ret
                           B    69    	
                           B    70    ;----------------------------------------------
                           B    71    
003672 0608                B    72    conv_char		ld b,8
003674 7E                  B    73    bfontlp1		ld a,(hl)
003675 DD7700              B    74    				ld (ix),a
003678 23                  B    75    				inc hl
003679 ED3208              B    76    				lea ix,ix+8
00367C 10 F6               B    77    				djnz bfontlp1
00367E C9                  B    78    				ret	
                           B    79    				
                           B    80    ;----------------------------------------------
                           B    81    
00367F 666F6E74 7300       B    82    fonts_fn		db "fonts",0
                           B    83    
                           B    84    ;----------------------------------------------
                           B     0    	include 'commands\set.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"set" - set an environment variable v0.01
                           B     3    ;
                           B     4    ; Command should be in format: "SET BLAH=SOMETH
                           B     5    ;
                           B     6    ;----------------------------------------------
                           B     7    
003685 7E                  B     8    os_cmd_set		ld a,(hl)					; i
003686 B7                  B     9    				or a
003687 28 3B               B    10    				jr z,show_envars
                           B    11    
003689 11030100            B    12    				ld de,scratch_pad+3			; p
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 130


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\set.asm
00368D 7E                  B    13    evsalp1			ld a,(hl)
00368E 12                  B    14    				ld (de),a
00368F B7                  B    15    				or a
003690 28 2E               B    16    				jr z,set_bad_args
003692 FE3D                B    17    				cp '='
003694 28 04               B    18    				jr z,evsadone1
003696 23                  B    19    				inc hl
003697 13                  B    20    				inc de
003698 18 F3               B    21    				jr evsalp1
00369A AF                  B    22    evsadone1		xor a
00369B 12                  B    23    				ld (de),a
00369C 13                  B    24    				inc de
00369D 23                  B    25    				inc hl
00369E ED530001 00         B    26    				ld (scratch_pad),de
                           B    27    
0036A3 7E                  B    28    evsalp2			ld a,(hl)
0036A4 12                  B    29    				ld (de),a
0036A5 FE20                B    30    				cp ' '
0036A7 28 07               B    31    				jr z,evsadone2
0036A9 B7                  B    32    				or a
0036AA 28 14               B    33    				jr z,set_bad_args
0036AC 23                  B    34    				inc hl
0036AD 13                  B    35    				inc de
0036AE 18 F3               B    36    				jr evsalp2
0036B0 AF                  B    37    evsadone2		xor a
0036B1 12                  B    38    				ld (de),a
                           B    39    				
0036B2 21030100            B    40    				ld hl,scratch_pad+3
0036B6 ED5B0001 00         B    41    				ld de,(scratch_pad)
0036BB CD 6A 1B 00         B    42    				call os_set_envar
0036BF C9                  B    43    				ret
                           B    44    
0036C0 3E82                B    45    set_bad_args	ld a,82h
0036C2 B7                  B    46    				or a
0036C3 C9                  B    47    				ret
                           B    48    				
                           B    49    
0036C4 21 28 69 00         B    50    show_envars		ld hl,envar_list
                           B    51    				
0036C8 7E                  B    52    show_envlp		ld a,(hl)
0036C9 FEFF                B    53    				cp 0ffh
0036CB 28 12               B    54    				jr z,set_done
0036CD E5                  B    55    				push hl
0036CE CD 94 0F 00         B    56    				call os_print_string
0036D2 CD 3C 14 00         B    57    				call os_new_line
0036D6 E1                  B    58    				pop hl
                           B    59    				
0036D7 23                  B    60    set_fnl			inc hl
0036D8 7E                  B    61    				ld a,(hl)
0036D9 B7                  B    62    				or a
0036DA 20 FB               B    63    				jr nz,set_fnl
0036DC 23                  B    64    				inc hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 131


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\set.asm
0036DD 18 E9               B    65    				jr show_envlp
                           B    66    				
0036DF AF                  B    67    set_done		xor a
0036E0 C9                  B    68    				ret
                           B    69    								
                           B    70    ;----------------------------------------------
                           B     0    	include 'commands\dz.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; OS "DZ" Command: Z80-mode Disassemble V0.01
                           B     3    ;----------------------------------------------
                           B     4    
0036E1 FD21 7F 23 00       B     5    os_cmd_dz		ld iy,prefix_bits_loc
0036E6 FDCB 07 86          B     6    				res adl_dis,(iy+var_adl)
0036EA C3 A1 1D 00         B     7    				jp os_cmd_d_go
                           B     8    				
                           B     9    ;----------------------------------------------
                           B     0    	include 'commands\sound.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;"Sound" - Play a section of Audio RAM v1.00
                           B     3    ;----------------------------------------------
                           B     4    
0036EE 11FFFF00            B     5    os_cmd_sound	ld de,0ffffh					0036F2 ED53 81 37 00       B     6    				ld (aud_per),de
0036F7 3E40                B     7    				ld a,64
0036F9 32 83 37 00         B     8    				ld (aud_vol),a
0036FD 3E11                B     9    				ld a,11h
0036FF 32 84 37 00         B    10    				ld (aud_chans),a
                           B    11    				
003703 CD 84 1C 00         B    12    				call hexword_or_bust			003707 20 06               B    13    				jr nz,alocok					003709 CD 4B 49 00         B    14    				call hwsc_disable_audio			00370D AF                  B    15    				xor a
00370E C9                  B    16    				ret
00370F ED53 75 37 00       B    17    alocok			ld (aud_loc),de
003714 ED53 7B 37 00       B    18    				ld (aud_loc_loop),de
                           B    19    				
003719 CD 84 1C 00         B    20    				call hexword_or_bust
00371D 20 04               B    21    				jr nz,gotaudlen
00371F 3E8D                B    22    missaudpar		ld a,8dh						003721 B7                  B    23    				or a
003722 C9                  B    24    				ret				
003723 ED53 78 37 00       B    25    gotaudlen		ld (aud_len),de
003728 ED53 7E 37 00       B    26    				ld (aud_len_loop),de
                           B    27    				
00372D CD 84 1C 00         B    28    				call hexword_or_bust
003731 28 33               B    29    				jr z,play_sound
003733 7B                  B    30    				ld a,e
003734 32 81 37 00         B    31    				ld (aud_per),a
003738 7A                  B    32    				ld a,d
003739 32 82 37 00         B    33    				ld (aud_per+1),a
                           B    34    				
00373D CD 84 1C 00         B    35    				call hexword_or_bust
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 132


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\sound.asm
003741 28 23               B    36    				jr z,play_sound
003743 7B                  B    37    				ld a,e
003744 32 83 37 00         B    38    				ld (aud_vol),a
                           B    39    				
003748 CD 84 1C 00         B    40    				call hexword_or_bust
00374C 28 18               B    41    				jr z,play_sound
00374E 7B                  B    42    				ld a,e
00374F 32 84 37 00         B    43    				ld (aud_chans),a
                           B    44    				
003753 CD 84 1C 00         B    45    				call hexword_or_bust
003757 28 0D               B    46    				jr z,play_sound
003759 7B                  B    47    				ld a,e
00375A B7                  B    48    				or a
00375B 20 09               B    49    				jr nz,play_sound
00375D 11010000            B    50    				ld de,1
003761 ED53 7E 37 00       B    51    				ld (aud_len_loop),de
                           B    52    				
003766 21 75 37 00         B    53    play_sound		ld hl,audio_structure
00376A 3A 84 37 00         B    54    				ld a,(aud_chans)
00376E 4F                  B    55    				ld c,a
00376F CD FE 48 00         B    56    				call hwsc_play_audio
003773 AF                  B    57    				xor a
003774 C9                  B    58    				ret
                           B    59    				
                           B    60    
                           B    61    ;----------------------------------------------
                           B    62    
003775                     B    63    audio_structure
                           B    64    
003775 000000              B    65    aud_loc			dw24 0			;loc
003778 000000              B    66    aud_len			dw24 0			;len
00377B 000000              B    67    aud_loc_loop	dw24 0	  	    ;loop loc
00377E 000000              B    68    aud_len_loop	dw24 0		    ;loop len
                           B    69    
003781 FFFF                B    70    aud_per			dw 0ffffh		;per
003783 40                  B    71    aud_vol			db 64			;vol
                           B    72    
003784 11                  B    73    aud_chans		db 11h			;channels to pl
                           B    74    
                           B    75    ;----------------------------------------------
                           B    76    		
                           B     0    	include 'commands\avail.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; "Avail" = Show OS / Hardware version v0.02 - 
                           B     3    ;----------------------------------------------
                           B     4    
003785 7E                  B     5    os_cmd_avail	ld a,(hl)
003786 FE23                B     6    				cp '#'
003788 20 11               B     7    				jr nz,avnoenv
                           B     8    				
00378A CD 48 3C 00         B     9    				call clear_output_envars
00378E DD21 1B 67 00       B    10    				ld ix,free_sysram_base
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 133


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\avail.asm
003793 0606                B    11    				ld b,6
003795 0E00                B    12    				ld c,0
003797 CD 15 3C 00         B    13    				call os_output_to_envars
                           B    14    								
00379B DD21 1B 67 00       B    15    avnoenv			ld ix,free_sysram_base
0037A0 21 EA 37 00         B    16    				ld hl,sysram_txt
0037A4 CD 94 0F 00         B    17    				call os_print_string
0037A8 CD CE 37 00         B    18    				call show_range
                           B    19    				
0037AC 21 F9 37 00         B    20    				ld hl,vram_a_txt
0037B0 CD 94 0F 00         B    21    				call os_print_string
0037B4 CD CE 37 00         B    22    				call show_range
                           B    23    				
0037B8 21 07 38 00         B    24    				ld hl,vram_b_txt
0037BC CD 94 0F 00         B    25    				call os_print_string
0037C0 CD CE 37 00         B    26    				call show_range
                           B    27    				
0037C4 CD 3C 14 00         B    28    				call os_new_line
0037C8 CD 3C 14 00         B    29    				call os_new_line	
0037CC AF                  B    30    				xor a
0037CD C9                  B    31    				ret
                           B    32    				
                           B    33    				
0037CE DD1700              B    34    show_range		ld de,(ix)
0037D1 CD 74 13 00         B    35    				call os_show_hex_address
0037D5 3E2D                B    36    				ld a,'-'
0037D7 CD D6 0F 00         B    37    				call os_print_char
0037DB DD1703              B    38    				ld de,(ix+3)
0037DE CD 74 13 00         B    39    				call os_show_hex_address
0037E2 CD 3C 14 00         B    40    				call os_new_line
0037E6 ED3206              B    41    				lea ix,ix+6
0037E9 C9                  B    42    				ret
                           B    43    
                           B    44    			
                           B    45    
0037EA 0B537973 74656D20   B    46    sysram_txt		db 11,'System  RAM: ',0
0037F2 2052414D 3A2000 
0037F9 56696465 6F202020   B    47    vram_a_txt		db    'Video   RAM: ',0
003801 52414D3A 2000 
003807 5370722F 41756420   B    48    vram_b_txt		db    'Spr/Aud RAM: ',0
00380F 52414D3A 2000 
                           B    49    
                           B    50    
                           B    51    ;----------------------------------------------
                           B    52    	
                           B     0    	include 'commands\fi.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; "FI" = Show file info.  v0.01 - ADL mode
                           B     3    ;----------------------------------------------
                           B     4    
003815 CD 06 29 00         B     5    os_cmd_fi		call filename_or_bust			                           B     6    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 134


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\fi.asm
003819 E5                  B     7    				push hl
00381A CD 84 16 00         B     8    				call os_check_volume_format	
00381E E1                  B     9    				pop hl
00381F C0                  B    10    				ret nz
                           B    11    
003820 E5                  B    12    				push hl
003821 CD 1D 10 00         B    13    				call os_next_arg
003825 7E                  B    14    				ld a,(hl)	
003826 32220100            B    15    				ld (scratch_pad+34),a			00382A E1                  B    16    				pop hl
                           B    17    
00382B CD 1C 16 00         B    18    				call os_find_file				00382F 28 11               B    19    				jr z,fi_filexists
003831 F5                  B    20    				push af
003832 3A220100            B    21    				ld a,(scratch_pad+34)
003836 FE23                B    22    				cp '#'
003838 28 02               B    23    				jr z,fi_remove
00383A F1                  B    24    				pop af
00383B C9                  B    25    				ret
00383C CD 48 3C 00         B    26    fi_remove		call clear_output_envars
003840 F1                  B    27    				pop af
003841 C9                  B    28    				ret
                           B    29    				
003842 21260100            B    30    fi_filexists	ld hl,scratch_pad+38
003846 71                  B    31    				ld (hl),c
003847 ED532301 00         B    32    				ld (scratch_pad+35),de
                           B    33    				
00384C 11100000            B    34    				ld de,16
003850 CD 2B 16 00         B    35    				call os_set_load_length			                           B    36    				
003854 21100100            B    37    				ld hl,scratch_pad+16			003858 CD 49 16 00         B    38    				call os_read_bytes_from_file
00385C C0                  B    39    				ret nz
                           B    40    	
00385D CD EC 38 00         B    41    				call fi_show_length				                           B    42    				
003861 2A120100            B    43    				ld hl,(scratch_pad+16+2)		003865 AF                  B    44    				xor a
003866 1150524F            B    45    				ld de,04f5250h	
00386A ED52                B    46    				sbc hl,de
00386C 28 04               B    47    				jr z,ezp_file
00386E 0601                B    48    fi_nezp_hash	ld b,1
003870 18 36               B    49    				jr fi_envtest
                           B    50    				
                           B    51    				
003872 FD211501 00         B    52    ezp_file		ld iy,scratch_pad+16+5			003877 DD213001 00         B    53    				ld ix,scratch_pad+48			00387C 21 58 39 00         B    54    				ld hl,fi_txt2
003880 CD 0A 39 00         B    55    				call fi_show_w24				003884 CD 0A 39 00         B    56    				call fi_show_w24				003888 CD 25 39 00         B    57    				call fi_show_w16				00388C CD 25 39 00         B    58    				call fi_show_w16				Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 135


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\fi.asm
003890 CD 94 0F 00         B    59    				call os_print_string			003894 11000000            B    60    				ld de,0
003898 FD5E00              B    61    				ld e,(iy)
00389B DD1F00              B    62    				ld (ix),de
00389E CD 74 13 00         B    63    				call os_show_hex_address
0038A2 CD 3C 14 00         B    64    				call os_new_line
                           B    65    				
0038A6 0606                B    66    				ld b,6
0038A8 3A220100            B    67    fi_envtest		ld a,(scratch_pad+34)
0038AC FE23                B    68    				cp '#'
0038AE 28 02               B    69    				jr z,fi_envars
0038B0 AF                  B    70    				xor a
0038B1 C9                  B    71    				ret
                           B    72    				
0038B2 E5                  B    73    fi_envars		push hl
0038B3 CD 48 3C 00         B    74    				call clear_output_envars
0038B7 E1                  B    75    				pop hl	
                           B    76    
0038B8 C5                  B    77    				push bc
                           B    78    				
0038B9 11260100            B    79    				ld de,scratch_pad+38
0038BD 21280100            B    80    				ld hl,scratch_pad+40
0038C1 E5                  B    81    				push hl
0038C2 0604                B    82    				ld b,4
0038C4 CD D1 10 00         B    83    				call n_hexbytes_to_ascii
0038C8 D1                  B    84    				pop de
0038C9 DD21 F1 5C 00       B    85    				ld ix,envar_out_n_txt
0038CE DD360330            B    86    				ld (ix+3),'0'
0038D2 DD360430            B    87    				ld (ix+4),'0'
0038D6 DDE5                B    88    				push ix
0038D8 E1                  B    89    				pop hl
0038D9 CD 6A 1B 00         B    90    				call os_set_envar
                           B    91    				
0038DD C1                  B    92    				pop bc
0038DE 05                  B    93    				dec b
0038DF C8                  B    94    				ret z
                           B    95    				
0038E0 DD213001 00         B    96    				ld ix,scratch_pad+48
0038E5 0E01                B    97    				ld c,1
0038E7 CD 15 3C 00         B    98    				call os_output_to_envars		0038EB C9                  B    99    				ret
                           B   100    
                           B   101    
                           B   102    
0038EC 21 47 39 00         B   103    fi_show_length	ld hl,fi_txt
0038F0 CD 94 0F 00         B   104    				call os_print_string
0038F4 3A260100            B   105    				ld a,(scratch_pad+38)
0038F8 CD 88 13 00         B   106    				call os_show_hex_byte
0038FC ED5B2301 00         B   107    				ld de,(scratch_pad+35)
003901 CD 74 13 00         B   108    				call os_show_hex_address
003905 CD 3C 14 00         B   109    				call os_new_line
003909 C9                  B   110    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 136


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\commands\fi.asm
                           B   111    
                           B   112    
00390A CD 94 0F 00         B   113    fi_show_w24		call os_print_string
00390E FD1700              B   114    				ld de,(iy)
003911 DD1F00              B   115    				ld (ix),de
003914 E5                  B   116    				push hl
003915 CD 74 13 00         B   117    				call os_show_hex_address
003919 CD 3C 14 00         B   118    				call os_new_line
00391D E1                  B   119    				pop hl
00391E ED3203              B   120    				lea ix,ix+3
003921 ED3303              B   121    				lea iy,iy+3
003924 C9                  B   122    				ret
                           B   123    				
003925 CD 94 0F 00         B   124    fi_show_w16		call os_print_string
003929 11000000            B   125    				ld de,0
00392D FD5E00              B   126    				ld e,(iy)
003930 FD5601              B   127    				ld d,(iy+1)
003933 DD1F00              B   128    				ld (ix),de
003936 E5                  B   129    				push hl
003937 CD 74 13 00         B   130    				call os_show_hex_address
00393B CD 3C 14 00         B   131    				call os_new_line
00393F E1                  B   132    				pop hl
003940 ED3203              B   133    				lea ix,ix+3
003943 ED3302              B   134    				lea iy,iy+2
003946 C9                  B   135    				ret
                           B   136    				
                           B   137    ;----------------------------------------------
                           B   138    				
003947 546F7461 6C204C65   B   139    fi_txt			db "Total Length  : ",0
00394F 6E677468 20203A20 
003957 00 
003958 4C6F6164 204C6F63   B   140    fi_txt2			db "Load Location : ",0
003960 6174696F 6E203A20 
003968 00 
003969 5472756E 63617465   B   141    				db "Truncate to   : ",0
003971 20746F20 20203A20 
003979 00 
00397A 50524F53 45205265   B   142    				db "PROSE Reqd    : ",0
003982 71642020 20203A20 
00398A 00 
00398B 414D4F45 42412052   B   143    				db "AMOEBA Reqd   : ",0
003993 65716420 20203A20 
00399B 00 
00399C 41444C20 6D6F6465   B   144    				db "ADL mode      : ",0
0039A4 20202020 20203A20 
0039AC 00 
                           B   145    				
                           B   146    ;----------------------------------------------
                           B   147    	
                           A  3121    	
0039AD C9                  A  3122    os_cmd_unused	ret		; <- dummy command, sho
                           A  3123    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 137


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  3124    ;----------------------------------------------
                           A  3125    
0039AE                     A  3126    os_get_mem_base
                           A  3127    
0039AE 2A 1B 67 00         A  3128    		ld hl,(free_sysram_base)
0039B2 ED5B 21 67 00       A  3129    		ld de,(free_vram_a_base)
0039B7 ED4B 27 67 00       A  3130    		ld bc,(free_vram_b_base)
0039BC BF                  A  3131    		cp a
0039BD C9                  A  3132    		ret
                           A  3133    
                           A  3134    
0039BE                     A  3135    os_get_mem_top
                           A  3136    
0039BE 2A 1E 67 00         A  3137    		ld hl,(free_sysram_top)
0039C2 ED5B 24 67 00       A  3138    		ld de,(free_vram_a_top)
0039C7 ED4B 2A 67 00       A  3139    		ld bc,(free_vram_b_top)
0039CC BF                  A  3140    		cp a
0039CD C9                  A  3141    		ret
                           A  3142    
                           A  3143    ;----------------------------------------------
                           A  3144    
0039CE                     A  3145    ext_set_pointer
                           A  3146    
                           A  3147    ; Set D = 1: use default pointer, otherwise:
                           A  3148    
                           A  3149    ;  Set HL to location of sprite data in memory 
                           A  3150    ;  followed by:
                           A  3151    ;   $00 - palette offset
                           A  3152    ;   $00 - colour count
                           A  3153    ;  then.. palette data (starting from colour 1)
                           A  3154    
                           A  3155    ;   Set C to pointer height (max 32)
                           A  3156    ;   Set B to palette 0-3
                           A  3157    ;   Set E to enable/disable pointer sprite
                           A  3158    
                           A  3159    ;   Returns with Zero Flag set if mouse driver 
                           A  3160    				
0039CE CC A4 15 00         A  3161    				call z,mbase_hl
                           A  3162    
0039D2                     A  3163    os_set_pointer
                           A  3164    
0039D2 7B                  A  3165    				ld a,e
0039D3 B7                  A  3166    				or a
0039D4 CA 78 3A 00         A  3167    				jr z,disable_pointer
                           A  3168    				
0039D8 3A 1A 67 00         A  3169    				ld a,(devices_connected)		0039DC E602                A  3170    				and 2
0039DE 20 07               A  3171    				jr nz,ok_md_enabled
0039E0 CD 78 3A 00         A  3172    				call disable_pointer
0039E4 AF                  A  3173    				xor a
0039E5 3C                  A  3174    				inc a
0039E6 C9                  A  3175    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 138


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  3176    				
                           A  3177    				
0039E7 7A                  A  3178    ok_md_enabled	ld a,d
0039E8 E601                A  3179    				and 1
0039EA 28 27               A  3180    				jr z,user_def_pointer
                           A  3181    					
0039EC 21 17 6D 00         A  3182    				ld hl,default_pointer
0039F0 1100FEC7            A  3183    				ld de,vram_b_addr+vram_b_size-5
0039F4 01 AC 00 00         A  3184    				ld bc,default_pointer_colours-d
0039F8 CD C8 15 00         A  3185    				call unpack_rle
                           A  3186    					
0039FC 01000000            A  3187    				ld bc,0
003A00 0E 14               A  3188    				ld c,default_pointer_height
003A02 ED43 23 69 00       A  3189    				ld (os_pointer_height),bc
003A07 21 C3 6D 00         A  3190    				ld hl,default_pointer_colours
003A0B 3E03                A  3191    				ld a,3
003A0D 32 26 69 00         A  3192    				ld (os_pointer_palette),a		003A11 18 1F               A  3193    				jr copy_spr_pal
                           A  3194    				
003A13                     A  3195    user_def_pointer
003A13 78                  A  3196    				ld a,b
003A14 E603                A  3197    				and 3
003A16 32 26 69 00         A  3198    				ld (os_pointer_palette),a	
003A1A 79                  A  3199    				ld a,c
003A1B FE20                A  3200    				cp 020h
003A1D 38 02               A  3201    				jr c,pointhok
003A1F 3E20                A  3202    				ld a,020h
003A21 32 23 69 00         A  3203    pointhok		ld (os_pointer_height),a
003A25 01100000            A  3204    				ld bc,16
003A29 47                  A  3205    				ld b,a
003A2A ED4C                A  3206    				mlt bc							003A2C 1100FEC7            A  3207    				ld de,vram_b_addr+vram_b_size-5
003A30 EDB0                A  3208    				ldir							                           A  3209    							
003A32 E5                  A  3210    copy_spr_pal	push hl							003A33 01000000            A  3211    				ld bc,0
003A37 4E                  A  3212    				ld c,(hl)
003A38 CB21                A  3213    				sla c
003A3A CB10                A  3214    				rl b							003A3C 210000FF            A  3215    				ld hl,hw_palette			
003A40 09                  A  3216    				add hl,bc
003A41 3A 26 69 00         A  3217    				ld a,(os_pointer_palette)		003A45 CB27                A  3218    				sla a
003A47 47                  A  3219    				ld b,a
003A48 0E00                A  3220    				ld c,0
003A4A 09                  A  3221    				add hl,bc				
003A4B EB                  A  3222    				ex de,hl						003A4C E1                  A  3223    				pop hl							003A4D 23                  A  3224    				inc hl							003A4E 0600                A  3225    				ld b,0
003A50 4E                  A  3226    				ld c,(hl)
003A51 CB21                A  3227    				sla c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 139


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
003A53 CB10                A  3228    				rl b							003A55 23                  A  3229    				inc hl
003A56 EDB0                A  3230    				ldir							                           A  3231    				
003A58 21E07F00            A  3232    				ld hl,07fe0h
003A5C 22 20 69 00         A  3233    				ld (os_pointer_definition),hl	003A60 3E01                A  3234    				ld a,1
003A62 32 1F 69 00         A  3235    				ld (os_pointer_enable),a
003A66 320118FF            A  3236    				ld (sprite_control),a			003A6A 3A 26 69 00         A  3237    				ld a,(os_pointer_palette)
003A6E 320318FF            A  3238    				ld (sprite_palette_select),a	003A72 CD F6 45 00         A  3239    				call hwsc_update_pointer_sprite
003A76 AF                  A  3240    				xor a
003A77 C9                  A  3241    				ret
                           A  3242    
                           A  3243    
003A78                     A  3244    disable_pointer
                           A  3245    
003A78 AF                  A  3246    				xor a
003A79 32 1F 69 00         A  3247    				ld (os_pointer_enable),a
003A7D 320118FF            A  3248    				ld (sprite_control),a			003A81 C9                  A  3249    				ret
                           A  3250    				
                           A  3251    ;----------------------------------------------
                           A  3252    
003A82                     A  3253    test_amoeba_vers
                           A  3254    
003A82 CD 3B 46 00         A  3255    				call hwsc_get_version			003A86 21060100            A  3256    				ld hl,amoeba_version_required-1
003A8A AF                  A  3257    				xor a
003A8B ED52                A  3258    				sbc hl,de
003A8D D8                  A  3259    				ret c
                           A  3260    				
003A8E 21 B7 5C 00         A  3261    				ld hl,hw_warn_txt2
003A92 11070100            A  3262    				ld de,amoeba_version_required
003A96 CD 04 11 00         A  3263    				call hexword_to_ascii
                           A  3264    				
003A9A 21004080            A  3265    				ld hl,vram_a_addr+16384			003A9E 222010FF            A  3266    				ld (bitmap_parameters),hl		003AA2 3600                A  3267    				ld (hl),0
003AA4 E5                  A  3268    				push hl
003AA5 D1                  A  3269    				pop de
003AA6 13                  A  3270    				inc de
003AA7 01002C01            A  3271    				ld bc,320*240
003AAB EDB0                A  3272    				ldir
                           A  3273    					
003AAD DD2138D1 80         A  3274    				ld ix,vram_a_addr+16384+(320*11
003AB2 FD21 A2 5C 00       A  3275    				ld iy,hw_warn_txt1				003AB7 FD7E00              A  3276    nextwchar		ld a,(iy)
003ABA B7                  A  3277    				or a
003ABB 28 3B               A  3278    				jr z,wmsg_done
003ABD 21400000            A  3279    				ld hl,64
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 140


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
003AC1 67                  A  3280    				ld h,a
003AC2 ED6C                A  3281    				mlt hl
003AC4 11000080            A  3282    				ld de,vram_a_addr
003AC8 19                  A  3283    				add hl,de						003AC9 0E08                A  3284    				ld c,8
003ACB 7E                  A  3285    wpixlp2			ld a,(hl)
003ACC 0608                A  3286    				ld b,8
003ACE CB17                A  3287    wpixlp1			rl a
003AD0 30 06               A  3288    				jr nc,nowpix
003AD2 DD360001            A  3289    				ld (ix),1
003AD6 18 04               A  3290    				jr wpixd
003AD8 DD360000            A  3291    nowpix			ld (ix),0
003ADC DD23                A  3292    wpixd			inc ix
003ADE 10 EE               A  3293    				djnz wpixlp1
003AE0 11380100            A  3294    				ld de,320-8
003AE4 DD19                A  3295    				add ix,de
003AE6 11080000            A  3296    				ld de,8
003AEA 19                  A  3297    				add hl,de
003AEB 0D                  A  3298    				dec c
003AEC 20 DD               A  3299    				jr nz,wpixlp2
                           A  3300    				
003AEE 1108F6FF            A  3301    				ld de,8-(320*8)
003AF2 DD19                A  3302    				add ix,de
003AF4 FD23                A  3303    				inc iy
003AF6 18 BF               A  3304    				jr nextwchar
                           A  3305    
                           A  3306    
003AF8 CD 75 47 00         A  3307    wmsg_done		call purge_keyboard
003AFC CD 4F 40 00         A  3308    				call set_irq_vectors
003B00 CD A7 40 00         A  3309    				call enable_os_irqs
003B04 FB                  A  3310    				ei
                           A  3311    
003B05 CD 94 45 00         A  3312    wmsg_loop		call hwsc_wait_vrt			;	                           A  3313    				
003B09 11CC0C00            A  3314    				ld de,ccch
003B0D 21 C2 67 00         A  3315    				ld hl,cursorflashtimer
003B11 34                  A  3316    				inc (hl)
003B12 7E                  A  3317    				ld a,(hl)
003B13 E640                A  3318    				and 64
003B15 28 04               A  3319    				jr z,got_wcolour
003B17 11000000            A  3320    				ld de,000h
003B1B ED530200 FF         A  3321    got_wcolour		ld (hw_palette+2),de
                           A  3322    								
003B20 CD EC 49 00         A  3323    				call os_get_key_press
003B24 FE76                A  3324    				cp 76h
003B26 20 DD               A  3325    				jr nz,wmsg_loop
003B28 C3000000            A  3326    				jp 0
                           A  3327    
                           A  3328    ;----------------------------------------------
                           A  3329    
                           A  3330    
003B2C D5                  A  3331    relativize_hl	push de						
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 141


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
                           A  3332    
003B2D D1                  A  3333    				pop de
003B2E D1                  A  3334    				pop de						; P
003B2F 19                  A  3335    				add hl,de
003B30 11080000            A  3336    				ld de,8
003B34 B7                  A  3337    				or a
003B35 ED52                A  3338    				sbc hl,de
003B37 3B                  A  3339    				dec sp
003B38 3B                  A  3340    				dec sp
003B39 3B                  A  3341    				dec sp
003B3A 3B                  A  3342    				dec sp
003B3B 3B                  A  3343    				dec sp
003B3C 3B                  A  3344    				dec sp
003B3D D1                  A  3345    				pop de						; o
003B3E C9                  A  3346    				ret
                           A  3347    
                           A  3348    
003B3F D5                  A  3349    relative_call	push de						
                           A  3350    
003B40 D1                  A  3351    				pop de
003B41 D1                  A  3352    				pop de						; P
003B42 19                  A  3353    				add hl,de
003B43 11080000            A  3354    				ld de,8
003B47 B7                  A  3355    				or a
003B48 ED52                A  3356    				sbc hl,de
003B4A 3B                  A  3357    				dec sp
003B4B 3B                  A  3358    				dec sp
003B4C 3B                  A  3359    				dec sp
003B4D 3B                  A  3360    				dec sp
003B4E 3B                  A  3361    				dec sp
003B4F 3B                  A  3362    				dec sp
003B50 D1                  A  3363    				pop de						; o
003B51 E9                  A  3364    				jp (hl)
                           A  3365    
                           A  3366    
                           A  3367    ;----------------------------------------------
                           A  3368    
003B52                     A  3369    os_allocate_ram
                           A  3370    
                           A  3371    ; set BC = number of bytes to allocate
                           A  3372    ; set E = 0 sysram, E = 1 vram_a, E = 2 vram_b
                           A  3373    ; returns HL = address of allocated RAM
                           A  3374    ; ZF set if all OK
                           A  3375    
003B52 7B                  A  3376    				ld a,e
003B53 11060000            A  3377    				ld de,6
003B57 57                  A  3378    				ld d,a
003B58 ED5C                A  3379    				mlt de
003B5A DD21 1B 67 00       A  3380    				ld ix,free_sysram_base
003B5F DD19                A  3381    				add ix,de
                           A  3382    				
003B61 DD2703              A  3383    				ld hl,(ix+3)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 142


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
003B64 AF                  A  3384    				xor a
003B65 ED42                A  3385    				sbc hl,bc
003B67 38 0E               A  3386    				jr c,alloc_err
003B69 DD2F03              A  3387    				ld (ix+3),hl
                           A  3388    				
003B6C DD1700              A  3389    				ld de,(ix)
003B6F AF                  A  3390    				xor a
003B70 E5                  A  3391    				push hl
003B71 ED52                A  3392    				sbc hl,de
003B73 E1                  A  3393    				pop hl
003B74 23                  A  3394    				inc hl
003B75 30 04               A  3395    				jr nc,alloc_ok
003B77 3E8E                A  3396    alloc_err		ld a,8eh						003B79 B7                  A  3397    				or a
003B7A C9                  A  3398    				ret
                           A  3399    				
003B7B AF                  A  3400    alloc_ok		xor a
003B7C C9                  A  3401    				ret
                           A  3402    			
                           A  3403    
                           A  3404    
003B7D                     A  3405    os_deallocate_ram
                           A  3406    
                           A  3407    ; set BC = number of bytes to de-allocate
                           A  3408    ; set E = 0 sysram, E = 1 vram_a, E = 2 vram_b
                           A  3409    ; returns HL = address of allocated RAM
                           A  3410    ; ZF set if all OK		
                           A  3411    
003B7D D5                  A  3412    				push de
                           A  3413    				
003B7E 7B                  A  3414    				ld a,e
003B7F 11060000            A  3415    				ld de,6
003B83 57                  A  3416    				ld d,a
003B84 ED5C                A  3417    				mlt de
003B86 DD21 1B 67 00       A  3418    				ld ix,free_sysram_base
003B8B DD19                A  3419    				add ix,de
                           A  3420    				
003B8D DD2703              A  3421    				ld hl,(ix+3)
003B90 09                  A  3422    				add hl,bc
003B91 DD2F03              A  3423    				ld (ix+3),hl
                           A  3424    				
003B94 D1                  A  3425    				pop de							003B95 7B                  A  3426    				ld a,e
003B96 B7                  A  3427    				or a
003B97 20 0D               A  3428    				jr nz,dealloc_ok				                           A  3429    				
003B99 1100FE07            A  3430    				ld de,sysram_addr+sysram_size-s
003B9D AF                  A  3431    				xor a
003B9E ED52                A  3432    				sbc hl,de
003BA0 38 04               A  3433    				jr c,dealloc_ok
003BA2 1B                  A  3434    				dec de
003BA3 DD1F03              A  3435    				ld (ix+3),de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 143


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
003BA6 AF                  A  3436    dealloc_ok		xor a
003BA7 C9                  A  3437    				ret
                           A  3438    				
                           A  3439    				
                           A  3440    ;----------------------------------------------
                           A  3441    
003BA8                     A  3442    os_protected_ram_test
                           A  3443    
                           A  3444    ; set bc = start of range
                           A  3445    ; set de = end of range
                           A  3446    
                           A  3447    ; Returns ZF set if no collision
                           A  3448    
                           A  3449    
003BA8 DD21 1B 67 00       A  3450    				ld ix,free_sysram_base			003BAD DD2700              A  3451    				ld hl,(ix)
003BB0 AF                  A  3452    				xor a
003BB1 ED42                A  3453    				sbc hl,bc
003BB3 38 04               A  3454    				jr c,no_prose_hit
003BB5 3E26                A  3455    				ld a,26h						003BB7 B7                  A  3456    				or a
003BB8 C9                  A  3457    				ret
                           A  3458    				
003BB9 DD2706              A  3459    no_prose_hit	ld hl,(ix+6)					003BBC AF                  A  3460    				xor a
003BBD ED42                A  3461    				sbc hl,bc
003BBF 38 0D               A  3462    				jr c,no_vram_a_low_hit
003BC1 21000080            A  3463    				ld hl,800000h
003BC5 AF                  A  3464    				xor a
003BC6 ED52                A  3465    				sbc hl,de
003BC8 30 04               A  3466    				jr nc,no_vram_a_low_hit
003BCA 3E36                A  3467    				ld a,36h						003BCC B7                  A  3468    				or a
003BCD C9                  A  3469    				ret
                           A  3470    
003BCE                     A  3471    no_vram_a_low_hit
                           A  3472    				
003BCE CD E3 3B 00         A  3473    				call test_alloc
003BD2 C0                  A  3474    				ret nz
003BD3 ED3206              A  3475    				lea ix,ix+6
003BD6 CD E3 3B 00         A  3476    				call test_alloc
003BDA C0                  A  3477    				ret nz
003BDB ED3206              A  3478    				lea ix,ix+6
003BDE CD E3 3B 00         A  3479    				call test_alloc
003BE2 C9                  A  3480    				ret 
                           A  3481    				
003BE3 DD2703              A  3482    test_alloc		ld hl,(ix+3)					003BE6 AF                  A  3483    				xor a
003BE7 ED52                A  3484    				sbc hl,de
003BE9 30 0D               A  3485    				jr nc,no_colis
003BEB 21000008            A  3486    				ld hl,sysram_addr+sysram_size	003BEF AF                  A  3487    				xor a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 144


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
003BF0 ED42                A  3488    				sbc hl,bc
003BF2 38 04               A  3489    				jr c,no_colis
003BF4 3E35                A  3490    				ld a,35h						003BF6 B7                  A  3491    				or a
003BF7 C9                  A  3492    				ret
                           A  3493    				
003BF8 AF                  A  3494    no_colis		xor a
003BF9 C9                  A  3495    				ret
                           A  3496    				
                           A  3497    ;----------------------------------------------
                           A  3498    
003BFA                     A  3499    os_protected_ram_query
                           A  3500    
003BFA F5                  A  3501    				push af
003BFB 21 BC 5C 00         A  3502    				ld hl,pmq_txt
003BFF CD 94 0F 00         A  3503    				call os_print_string
003C03 CD 91 49 00         A  3504    				call os_wait_key_press
003C07 78                  A  3505    				ld a,b
003C08 FE79                A  3506    				cp 'y'
003C0A 28 06               A  3507    				jr z,ok_pmwrite
003C0C FE59                A  3508    				cp 'Y'
003C0E 28 02               A  3509    				jr z,ok_pmwrite
003C10 F1                  A  3510    				pop af
003C11 C9                  A  3511    				ret
                           A  3512    				
003C12 F1                  A  3513    ok_pmwrite		pop af
003C13 AF                  A  3514    				xor a
003C14 C9                  A  3515    				ret
                           A  3516    
                           A  3517    ;----------------------------------------------
                           A  3518    					
003C15                     A  3519    os_output_to_envars
                           A  3520    
                           A  3521    ; Set IX to location of first 24bit value to ou
                           A  3522    ; B = number of envars to make 
                           A  3523    ; C = Start envar number
                           A  3524    				
003C15 C5                  A  3525    out_to_envlp	push bc
003C16 79                  A  3526    				ld a,c
003C17 21 F4 5C 00         A  3527    				ld hl,envar_out_n_txt+3
003C1B CD DF 10 00         A  3528    				call hexbyte_to_ascii
                           A  3529    						
003C1F 21000100            A  3530    				ld hl,scratch_pad
003C23 ED1202              A  3531    				lea de,ix+2
003C26 0603                A  3532    				ld b,3
003C28 CD D1 10 00         A  3533    				call n_hexbytes_to_ascii
003C2C 3600                A  3534    				ld (hl),0
                           A  3535    				
003C2E 21 F1 5C 00         A  3536    				ld hl,envar_out_n_txt
003C32 11000100            A  3537    				ld de,scratch_pad
003C36 DDE5                A  3538    				push ix
003C38 CD 6A 1B 00         A  3539    				call os_set_envar
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 145


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_main.asm
003C3C DDE1                A  3540    				pop ix
003C3E C1                  A  3541    				pop bc
003C3F C0                  A  3542    				ret nz
                           A  3543    				
003C40 ED3203              A  3544    				lea ix,ix+3
003C43 0C                  A  3545    				inc c
003C44 10 CF               A  3546    				djnz out_to_envlp
003C46 AF                  A  3547    				xor a
003C47 C9                  A  3548    				ret			
                           A  3549    
                           A  3550    
003C48                     A  3551    clear_output_envars
                           A  3552    
003C48 0E00                A  3553    				ld c,0
003C4A C5                  A  3554    del_out_envlp	push bc
003C4B 79                  A  3555    				ld a,c
003C4C 21 F4 5C 00         A  3556    				ld hl,envar_out_n_txt+3
003C50 CD DF 10 00         A  3557    				call hexbyte_to_ascii
003C54 21 F1 5C 00         A  3558    				ld hl,envar_out_n_txt
003C58 CD C0 1B 00         A  3559    				call os_delete_envar
003C5C C1                  A  3560    				pop bc
003C5D C0                  A  3561    				ret nz
003C5E 0C                  A  3562    				inc c
003C5F 10 E9               A  3563    				djnz del_out_envlp
003C61 AF                  A  3564    				xor a
003C62 C9                  A  3565    				ret			
                           A  3566    
                           A  3567    ;----------------------------------------------
                           A  3568    ; Storage Device Drivers
                           A  3569    ;----------------------------------------------
                           A  3570    
                           B     0    	include		'prose_sdcard_driver_v110.asm'	                           B     1    ;----------------------------------------------
                           B     2    ; Low level Z80 MMC/SDC/SDHC card access routin
                           B     3    ;----------------------------------------------
                           B     4    ;
                           B     5    ; V1.10 - SDHC support added
                           B     6    ;
                           B     7    ; Limitations:
                           B     8    ; ------------
                           B     9    ; Does not check for block size
                           B    10    ;
                           B    11    ; Somewhat arbitrary timimg due to quirks of my
                           B    12    ; which means the data from the card following 
                           B    13    ; byte is skipped by the send_command routine.)
                           B    14    
                           B    15    
                           B    16    ;----------------------------------------------
                           B    17    ;
                           B    18    ; Key Routines:      Input Parameters          
                           B    19    ; -------------      ----------------          
                           B    20    ; sd_initialize		no arguments required      
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 146


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
                           B    21    ; sd_read_sector	[sector_lba0-3]				                           B    22    ; sd_write_sector	[sector_lba0-3]    			                           B    23    ;
                           B    24    ; (Assume all other registers are trashed.)
                           B    25    ;
                           B    26    ;----------------------------------------------
                           B    27    
                           B    28    ; Routines respond with Zero Flag set if operat
                           B    29    
                           B    30    ; $01 - SPI mode failed	 
                           B    31    ; $10 - MMC init failed	
                           B    32    ; $11 - SD init failed	
                           B    33    ; $12 - SDHC init failed	
                           B    34    ; $13 - voltage range bad	
                           B    35    ; $14 - check pattern bad
                           B    36    ; $20 - illegal command
                           B    37    ; $21 - bad command response
                           B    38    ; $22 - data token timeout
                           B    39    ; $23 - write timeout
                           B    40    ; $24 - write failed
                           B    41    ;
                           B    42    ;----------------------------------------------
                           B    43    
                           B    44    ; Define "sector_buffer" in main code (512 byte
                           B    45    
                           B    46    ;----------------------------------------------
                           B    47    
       00000041            B    48    CMD1	equ 40h + 1
       00000049            B    49    CMD9	equ 40h + 9
       0000004A            B    50    CMD10	equ 40h + 10
       0000004D            B    51    CMD13	equ 40h + 13
       00000051            B    52    CMD17	equ 40h + 17
       00000058            B    53    CMD24	equ 40h + 24
       00000069            B    54    ACMD41	equ 40h + 41
       00000077            B    55    CMD55	equ 40h + 55
       0000007A            B    56    CMD58	equ 40h + 58
                           B    57    
       00000001            B    58    sd_error_spi_mode_failed		equ 01h
                           B    59    
       00000010            B    60    sd_error_mmc_init_failed		equ 10h
       00000011            B    61    sd_error_sd_init_failed			equ 11h
       00000012            B    62    sd_error_sdhc_init_failed		equ 12h
       00000013            B    63    sd_error_vrange_bad				equ 13h
       00000014            B    64    sd_error_check_pattern_bad		equ 14h
                           B    65    
       00000020            B    66    sd_error_illegal_command		equ 20h
       00000021            B    67    sd_error_bad_command_response	equ 21h
       00000022            B    68    sd_error_data_token_timeout		equ 22h
       00000023            B    69    sd_error_write_timeout			equ 23h
       00000024            B    70    sd_error_write_failed			equ 24h
                           B    71    
                           B    72    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 147


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
                           B    73    ; PROSE STANDARD DRIVER HEADER
                           B    74    ;----------------------------------------------
                           B    75    
003C63 C3 77 3C 00         B    76    sd_card_driver	jp sd_initialize			; $
003C67 C3 99 3C 00         B    77    				jp sd_read_sector			; $
003C6B C3 9F 3C 00         B    78    				jp sd_write_sector			; $
003C6F 53445F43 41524400   B    79    				db "SD_CARD",0				; $
                           B    80    
                           B    81    ;----------------------------------------------
                           B    82    ; SD Card INITIALIZE code begins...
                           B    83    ;----------------------------------------------
                           B    84    
003C77 CD A5 3C 00         B    85    sd_initialize	call sd_init_main
003C7B B7                  B    86    				or a						; i
003C7C 28 05               B    87    				jr z,sd_inok
003C7E CD 36 40 00         B    88    				call sd_power_off			; i
003C82 C9                  B    89    				ret
                           B    90    
003C83 CD 3B 40 00         B    91    sd_inok			call sd_spi_port_fast		; o
                           B    92    
003C87 CD 07 3E 00         B    93    				call sd_read_cid			; a
003C8B 20 06               B    94    				jr nz,sd_done
003C8D E5                  B    95    				push hl						; c
003C8E CD 70 3D 00         B    96    				call sd_read_csd
003C92 E1                  B    97    				pop hl
                           B    98    
003C93 CD 1E 40 00         B    99    sd_done			call sd_deselect_card		; R
003C97 B7                  B   100    				or a						; I
003C98 C9                  B   101    				ret				 
                           B   102    
                           B   103    ;----------------------------------------------
                           B   104    		
003C99 CD 8B 3E 00         B   105    sd_read_sector	call sd_read_sector_main
003C9D 18 F4               B   106    				jr sd_done
                           B   107    
                           B   108    ;----------------------------------------------
                           B   109    	
003C9F CD B1 3E 00         B   110    sd_write_sector	call sd_write_sector_main
003CA3 18 EE               B   111    				jr sd_done
                           B   112    	
                           B   113    ;----------------------------------------------
                           B   114    	
003CA5 AF                  B   115    sd_init_main	xor a							003CA6 32 B5 3F 00         B   116    				ld (sd_card_info),a			
                           B   117    
003CAA CD 36 40 00         B   118    				call sd_power_off				                           B   119    				
003CAE 11004000            B   120    				ld de,16384						003CB2 CD 56 46 00         B   121    				call hwsc_time_delay
                           B   122    							
003CB6 CD 2A 40 00         B   123    				call sd_power_on				                           B   124    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 148


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
003CBA 11830000            B   125    				ld de,131						003CBE CD 56 46 00         B   126    				call hwsc_time_delay
                           B   127    				
003CC2 060A                B   128    				ld b,10							003CC4 CD 3A 3F 00         B   129    sd_ecilp		call sd_send_eight_clocks
003CC8 10 FA               B   130    				djnz sd_ecilp
                           B   131    				
003CCA 21 89 3F 00         B   132    				ld hl,CMD0_string				003CCE CD 52 3F 00         B   133    				call sd_send_command_string		003CD2 FE01                B   134    				cp 01h							003CD4 28 03               B   135    				jr z,sd_spi_mode_ok
                           B   136    				
003CD6 3E01                B   137    				ld a,sd_error_spi_mode_failed
003CD8 C9                  B   138    				ret		
                           B   139    
                           B   140    ; ---- CARD IS IN IDLE MODE -------------------
                           B   141    
003CD9 21 8F 3F 00         B   142    sd_spi_mode_ok	ld hl,CMD8_string				003CDD CD 52 3F 00         B   143    				call sd_send_command_string
003CE1 FE01                B   144    				cp 01h
003CE3 20 52               B   145    				jr nz,sd_sdc_init				                           B   146    
003CE5 0604                B   147    				ld b,4
003CE7 CD 7A 3F 00         B   148    				call sd_read_bytes_to_sector_bu
003CEB 3E01                B   149    				ld a,1
003CED 23                  B   150    				inc hl
003CEE 23                  B   151    				inc hl
003CEF BE                  B   152    				cp (hl)							003CF0 28 03               B   153    				jr z,sd_vrok
003CF2 3E13                B   154    				ld a,sd_error_vrange_bad
003CF4 C9                  B   155    				ret				
                           B   156    
003CF5 3EAA                B   157    sd_vrok			ld a,0aah
003CF7 23                  B   158    				inc hl
003CF8 BE                  B   159    				cp (hl)
003CF9 28 03               B   160    				jr z,sd_check_pattern_ok
003CFB 3E14                B   161    				ld a,sd_error_check_pattern_bad
003CFD C9                  B   162    				ret
                           B   163    				
003CFE                     B   164    sd_check_pattern_ok
                           B   165    
                           B   166    ;------ SDHC CARD CAN WORK AT 2.7v - 3.6v -----
                           B   167    	
003CFE 01401F00            B   168    				ld bc,8000						                           B   169    
003D02 3E77                B   170    sdhc_iwl		ld a,CMD55						003D04 CD 41 3F 00         B   171    				call sd_send_command_null_args
                           B   172    				
003D08 21 95 3F 00         B   173    				ld hl,ACMD41HCS_string			003D0C CD 52 3F 00         B   174    				call sd_send_command_string
003D10 28 0C               B   175    				jr z,sdhc_init_ok				003D12 CB57                B   176    				bit 2,a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 149


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
003D14 20 05               B   177    				jr nz,sdhc_if					                           B   178    				
003D16 0B                  B   179    				dec bc
003D17 78                  B   180    				ld a,b
003D18 B1                  B   181    				or c
003D19 20 E7               B   182    				jr nz,sdhc_iwl
                           B   183    				
003D1B 3E12                B   184    sdhc_if			ld a,sd_error_sdhc_init_failed	003D1D C9                  B   185    				ret
                           B   186    				
003D1E                     B   187    sdhc_init_ok
                           B   188    
                           B   189    ;------ SDHC CARD IS INITIALIZED --------------
                           B   190    
003D1E 3E7A                B   191    				ld a,CMD58						003D20 CD 41 3F 00         B   192    				call sd_send_command_null_args
                           B   193    					
003D24 0604                B   194    				ld b,4							003D26 CD 7A 3F 00         B   195    				call sd_read_bytes_to_sector_bu
003D2A 7E                  B   196    				ld a,(hl)
003D2B E640                B   197    				and 040h						003D2D 0F                  B   198    				rrca
003D2E 0F                  B   199    				rrca 
003D2F F602                B   200    				or 00000010b				
003D31 32 B5 3F 00         B   201    				ld (sd_card_info),a				003D35 AF                  B   202    				xor a							003D36 C9                  B   203    				ret
                           B   204    
                           B   205    	
                           B   206    ;-------- NOT AN SDHC CARD, TRY SD INIT -------
                           B   207    
003D37 01401F00            B   208    sd_sdc_init		ld bc,8000						                           B   209    
003D3B 3E77                B   210    sd_iwl			ld a,CMD55						003D3D CD 41 3F 00         B   211    				call sd_send_command_null_args
                           B   212    
003D41 3E69                B   213    				ld a,ACMD41						003D43 CD 41 3F 00         B   214    				call sd_send_command_null_args
003D47 28 0C               B   215    				jr z,sd_rdy						                           B   216    				
003D49 CB57                B   217    				bit 2,a				
003D4B 20 10               B   218    				jr nz,sd_mmc_init				                           B   219    							
003D4D 0B                  B   220    				dec bc
003D4E 78                  B   221    				ld a,b
003D4F B1                  B   222    				or c
003D50 20 E9               B   223    				jr nz,sd_iwl
                           B   224    				
003D52 3E11                B   225    				ld a,sd_error_sd_init_failed	003D54 C9                  B   226    				ret
                           B   227    				
003D55 3E01                B   228    sd_rdy			ld a,1
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 150


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
003D57 32 B5 3F 00         B   229    				ld (sd_card_info),a				003D5B AF                  B   230    				xor a							003D5C C9                  B   231    				ret	
                           B   232    
                           B   233    ;-------- NOT AN SDHC OR SD CARD, TRY MMC INIT 
                           B   234    
003D5D 01401F00            B   235    sd_mmc_init		ld bc,8000						                           B   236    
003D61 3E41                B   237    sdmmc_iwl		ld a,CMD1
003D63 CD 41 3F 00         B   238    				call sd_send_command_null_args	003D67 C8                  B   239    				ret z							                           B   240    				
003D68 0B                  B   241    sd_mnrdy		dec bc
003D69 78                  B   242    				ld a,b
003D6A B1                  B   243    				or c
003D6B 20 F4               B   244    				jr nz,sdmmc_iwl
                           B   245    				
003D6D 3E10                B   246    				ld a,sd_error_mmc_init_failed	003D6F C9                  B   247    				ret
                           B   248    	
                           B   249    ;----------------------------------------------
                           B   250    
                           B   251    ; Returns BC:DE = Total capacity of card (in se
                           B   252    
003D70                     B   253    sd_read_csd
                           B   254    				
003D70 3E49                B   255    				ld a,CMD9						003D72 CD 41 3F 00         B   256    				call sd_send_command_null_args	003D76 C2 97 3E 00         B   257    				jp nz,sd_bcr_error				                           B   258    
003D7A CD 25 3F 00         B   259    				call sd_wait_data_token			003D7E C2 A0 3E 00         B   260    				jp nz,sd_dt_timeout	
                           B   261    
003D82 0612                B   262    sd_id_ok		ld b,18							003D84 CD 7A 3F 00         B   263    				call sd_read_bytes_to_sector_bu
                           B   264    
003D88 DD210008 00         B   265    				ld ix,sector_buffer				003D8D DDCB0076            B   266    				bit 6,(ix)
003D91 28 19               B   267    				jr z,sd_csd_v1
                           B   268    
003D93 DD6E09              B   269    sd_csd_v2		ld l,(ix+9)						003D96 DD6608              B   270    				ld h,(ix+8)
003D99 23                  B   271    				inc hl
003D9A 3E0A                B   272    				ld a,10
003D9C 01000000            B   273    				ld bc,0
003DA0 4029                B   274    sd_csd2lp		add.sis hl,hl
003DA2 CB11                B   275    				rl c
003DA4 CB10                B   276    				rl b
003DA6 3D                  B   277    				dec a
003DA7 20 F7               B   278    				jr nz,sd_csd2lp
003DA9 EB                  B   279    				ex de,hl						003DAA AF                  B   280    				xor a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 151


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
003DAB C9                  B   281    				ret
                           B   282    				
003DAC DD7E06              B   283    sd_csd_v1		ld a,(ix+6)						003DAF E603                B   284    				and 00000011b
003DB1 57                  B   285    				ld d,a
003DB2 DD5E07              B   286    				ld e,(ix+7)
003DB5 DD7E08              B   287    				ld a,(ix+8)
003DB8 E6C0                B   288    				and 11000000b
003DBA CB27                B   289    				sla a
003DBC CB13                B   290    				rl e
003DBE CB12                B   291    				rl d
003DC0 CB27                B   292    				sla a
003DC2 CB13                B   293    				rl e
003DC4 CB12                B   294    				rl d							                           B   295    				
003DC6 DD7E09              B   296    				ld a,(ix+9)
003DC9 E603                B   297    				and 00000011b
003DCB 47                  B   298    				ld b,a
003DCC DD7E0A              B   299    				ld a,(ix+10)
003DCF E680                B   300    				and 10000000b
003DD1 CB27                B   301    				sla a
003DD3 CB10                B   302    				rl b							                           B   303    				
003DD5 04                  B   304    				inc b
003DD6 04                  B   305    				inc b
003DD7 21000000            B   306    				ld hl,0
003DDB CB23                B   307    sd_cmsh			sla e
003DDD CB12                B   308    				rl d
003DDF CB15                B   309    				rl l
003DE1 CB14                B   310    				rl h
003DE3 10 F6               B   311    				djnz sd_cmsh					                           B   312    				
003DE5 DD7E05              B   313    				ld a,(ix+5)
003DE8 E60F                B   314    				and 00001111b					003DEA 28 17               B   315    				jr z,sd_nbls
003DEC 47                  B   316    				ld b,a
003DED CB23                B   317    sd_blsh			sla e
003DEF CB12                B   318    				rl d
003DF1 CB15                B   319    				rl l
003DF3 CB14                B   320    				rl h
003DF5 10 F6               B   321    				djnz sd_blsh					                           B   322    				
003DF7 0609                B   323    				ld b,9							003DF9 CB3C                B   324    sd_cbsec		srl h
003DFB CB1D                B   325    				rr l
003DFD CB1A                B   326    				rr d
003DFF CB1B                B   327    				rr e
003E01 10 F6               B   328    				djnz sd_cbsec
                           B   329    
003E03 E5                  B   330    sd_nbls			push hl
003E04 C1                  B   331    				pop bc							003E05 AF                  B   332    				xor a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 152


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
003E06 C9                  B   333    				ret
                           B   334    
                           B   335    ;----------------------------------------------
                           B   336    
003E07                     B   337    sd_read_cid
                           B   338    	
                           B   339    ; Returns HL = Pointer to device ID string
                           B   340    
003E07 3E4A                B   341    				ld a,CMD10						003E09 CD 41 3F 00         B   342    				call sd_send_command_null_args
003E0D C2 97 3E 00         B   343    				jp nz,sd_bcr_error				                           B   344    
003E11 CD 25 3F 00         B   345    				call sd_wait_data_token			003E15 C2 A0 3E 00         B   346    				jp nz,sd_dt_timeout
                           B   347    					
003E19 0612                B   348    				ld b,18
003E1B CD 7A 3F 00         B   349    				call sd_read_bytes_to_sector_bu
                           B   350    				
003E1F 21030800            B   351    				ld hl,sector_buffer+03h			003E23 11200800            B   352    				ld de,sector_buffer+20h
003E27 01050000            B   353    				ld bc,5
003E2B 3A B5 3F 00         B   354    				ld a,(sd_card_info)
003E2F E60F                B   355    				and 0fh
003E31 20 01               B   356    				jr nz,sd_cn5
003E33 03                  B   357    				inc bc
003E34 EDB0                B   358    sd_cn5			ldir
003E36 E5                  B   359    				push hl
003E37 D5                  B   360    				push de
003E38 21 9B 3F 00         B   361    				ld hl,sd_vnchars
003E3C 01140000            B   362    				ld bc,20
003E40 EDB0                B   363    				ldir
003E42 D1                  B   364    				pop de
003E43 E1                  B   365    				pop hl
003E44 13                  B   366    				inc de
003E45 13                  B   367    				inc de
003E46 7E                  B   368    				ld a,(hl)
003E47 CB3F                B   369    				srl a
003E49 CB3F                B   370    				srl a
003E4B CB3F                B   371    				srl a
003E4D CB3F                B   372    				srl a
003E4F C630                B   373    				add a,30h						003E51 12                  B   374    				ld (de),a
003E52 13                  B   375    				inc de
003E53 13                  B   376    				inc de
003E54 7E                  B   377    				ld a,(hl)
003E55 E60F                B   378    				and 0fh
003E57 C630                B   379    				add a,30h
003E59 12                  B   380    				ld (de),a						003E5A 13                  B   381    				inc de
003E5B 13                  B   382    				inc de
003E5C 13                  B   383    				inc de
003E5D 13                  B   384    				inc de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 153


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
003E5E 13                  B   385    				inc de
003E5F 23                  B   386    				inc hl
003E60 0604                B   387    				ld b,4
003E62 7E                  B   388    sd_snulp		ld a,(hl)						003E63 CB3F                B   389    				srl a
003E65 CB3F                B   390    				srl a
003E67 CB3F                B   391    				srl a
003E69 CB3F                B   392    				srl a
003E6B C630                B   393    				add a,30h
003E6D FE3A                B   394    				cp 3ah
003E6F 38 02               B   395    				jr c,sd_hvl1
003E71 C607                B   396    				add a,07h
003E73 12                  B   397    sd_hvl1			ld (de),a
003E74 13                  B   398    				inc de
003E75 7E                  B   399    				ld a,(hl)
003E76 E60F                B   400    				and 0fh
003E78 C630                B   401    				add a,30h
003E7A FE3A                B   402    				cp 3ah
003E7C 38 02               B   403    				jr c,sd_hvl2
003E7E C607                B   404    				add a,07h
003E80 12                  B   405    sd_hvl2			ld (de),a
003E81 13                  B   406    				inc de
003E82 23                  B   407    				inc hl
003E83 10 DD               B   408    				djnz sd_snulp
                           B   409    				
003E85 21200800            B   410    				ld hl,sector_buffer+20h			003E89 AF                  B   411    				xor a
003E8A C9                  B   412    				ret
                           B   413    
                           B   414    ;----------------------------------------------
                           B   415    ; SD Card READ SECTOR code begins...
                           B   416    ;----------------------------------------------
                           B   417    	
003E8B                     B   418    sd_read_sector_main
                           B   419    
                           B   420    ; 512 bytes are returned in sector buffer
                           B   421    
003E8B CD FC 3E 00         B   422    				call sd_set_sector_addr
                           B   423    
003E8F 3E51                B   424    				ld a,CMD17						003E91 CD 4D 3F 00         B   425    				call sd_send_command_current_ar
003E95 28 03               B   426    				jr z,sd_rscr_ok					003E97 3E21                B   427    sd_bcr_error	ld a,sd_error_bad_command_respo
003E99 C9                  B   428    				ret
                           B   429    
003E9A CD 25 3F 00         B   430    sd_rscr_ok		call sd_wait_data_token			003E9E 28 03               B   431    				jr z,sd_dt_ok					003EA0 3E22                B   432    sd_dt_timeout	ld a,sd_error_data_token_timeou
003EA2 C9                  B   433    				ret
                           B   434    
003EA3 21000800            B   435    sd_dt_ok		ld hl,sector_buffer
003EA7 CD CB 3F 00         B   436    				call sd_read_513_bytes			Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 154


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
003EAB CD C3 3F 00         B   437    				call sd_get_byte
                           B   438    				
003EAF AF                  B   439    				xor a							003EB0 C9                  B   440    				ret
                           B   441    
                           B   442    ;----------------------------------------------
                           B   443    ; SD Card WRITE SECTOR code begins...
                           B   444    ;----------------------------------------------
                           B   445    
003EB1                     B   446    sd_write_sector_main
                           B   447    	
003EB1 CD FC 3E 00         B   448    				call sd_set_sector_addr
                           B   449    
003EB5 3E58                B   450    				ld a,CMD24						003EB7 CD 4D 3F 00         B   451    				call sd_send_command_current_ar
003EBB 20 DA               B   452    				jr nz,sd_bcr_error				                           B   453    				
003EBD CD 3A 3F 00         B   454    				call sd_send_eight_clocks		                           B   455    
003EC1 3EFE                B   456    				ld a,0feh
003EC3 CD B6 3F 00         B   457    				call sd_send_byte				                           B   458    
003EC7 21000800            B   459    				ld hl,sector_buffer
003ECB CD FA 3F 00         B   460    				call sd_write_512_bytes			003ECF CD 3A 3F 00         B   461    				call sd_send_eight_clocks		003ED3 CD 3A 3F 00         B   462    				call sd_send_eight_clocks		                           B   463    		
003ED7 CD C3 3F 00         B   464    				call sd_get_byte				003EDB E61F                B   465    				and 1fh
003EDD CB3F                B   466    				srl a
003EDF FE02                B   467    				cp 02h
003EE1 28 03               B   468    				jr z,sd_wr_ok
                           B   469    
003EE3 3E24                B   470    sd_write_fail	ld a,sd_error_write_failed
003EE5 C9                  B   471    				ret
                           B   472    
003EE6 01FFFF00            B   473    sd_wr_ok		ld bc,65535						003EEA CD C3 3F 00         B   474    sd_wcbsy		call sd_get_byte				003EEE FEFF                B   475    				cp 0ffh
003EF0 20 02               B   476    				jr nz,sd_busy
003EF2 AF                  B   477    				xor a							003EF3 C9                  B   478    				ret
                           B   479    				
003EF4 0B                  B   480    sd_busy			dec bc
003EF5 78                  B   481    				ld a,b
003EF6 B1                  B   482    				or c
003EF7 20 F1               B   483    				jr nz,sd_wcbsy
                           B   484    
003EF9                     B   485    sd_card_busy_timeout
                           B   486    
003EF9 3E23                B   487    				ld a,sd_error_write_timeout
003EFB C9                  B   488    				ret	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 155


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
                           B   489    
                           B   490    ;----------------------------------------------
                           B   491    
003EFC                     B   492    sd_set_sector_addr
                           B   493    				
003EFC 21 BB 67 00         B   494    				ld hl,sector_lba0
003F00 4E                  B   495    				ld c,(hl)
003F01 23                  B   496    				inc hl
003F02 5E                  B   497    				ld e,(hl)
003F03 23                  B   498    				inc hl
003F04 56                  B   499    				ld d,(hl)
003F05 23                  B   500    				inc hl
003F06 46                  B   501    				ld b,(hl)					; s
                           B   502    
003F07 3A B5 3F 00         B   503    				ld a,(sd_card_info)
003F0B E610                B   504    				and 10h
003F0D 20 0A               B   505    				jr nz,lbatoargs				; i
003F0F 69                  B   506    				ld l,c
003F10 63                  B   507    				ld h,e
003F11 7A                  B   508    				ld a,d						; o
003F12 4029                B   509    				add.sis hl,hl
003F14 8F                  B   510    				adc a,a	
003F15 EB                  B   511    				ex de,hl
003F16 47                  B   512    				ld b,a
003F17 0E00                B   513    				ld c,0
003F19 21 B0 3F 00         B   514    lbatoargs		ld hl,cmd_generic_args
003F1D 70                  B   515    				ld (hl),b
003F1E 23                  B   516    				inc hl
003F1F 72                  B   517    				ld (hl),d
003F20 23                  B   518    				inc hl
003F21 73                  B   519    				ld (hl),e
003F22 23                  B   520    				inc hl
003F23 71                  B   521    				ld (hl),c
003F24 C9                  B   522    				ret
                           B   523    	
                           B   524    	
                           B   525    ;----------------------------------------------
                           B   526    
003F25                     B   527    sd_wait_data_token
                           B   528    
003F25 C5                  B   529    				push bc
003F26 01401F00            B   530    				ld bc,8000				
003F2A CD C3 3F 00         B   531    sd_wdt			call sd_get_byte			; r
003F2E FEFE                B   532    				cp 0feh
003F30 28 06               B   533    				jr z,sd_gdt
003F32 0B                  B   534    				dec bc
003F33 78                  B   535    				ld a,b
003F34 B1                  B   536    				or c
003F35 20 F3               B   537    				jr nz,sd_wdt
003F37 0C                  B   538    				inc c						; d
003F38 C1                  B   539    sd_gdt			pop bc
003F39 C9                  B   540    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 156


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
                           B   541    
                           B   542    ;----------------------------------------------
                           B   543    
003F3A                     B   544    sd_send_eight_clocks
                           B   545    
003F3A 3EFF                B   546    				ld a,0ffh
003F3C CD B6 3F 00         B   547    				call sd_send_byte
003F40 C9                  B   548    				ret
                           B   549    
                           B   550    ;----------------------------------------------
                           B   551    
                           B   552    
003F41                     B   553    sd_send_command_null_args
                           B   554    
003F41 21000000            B   555    				ld hl,0
003F45 22 B0 3F 00         B   556    				ld (cmd_generic_args),hl	; c
003F49 22 B1 3F 00         B   557    				ld (cmd_generic_args+1),hl	
                           B   558    				
                           B   559    				
                           B   560    	
003F4D                     B   561    sd_send_command_current_args
                           B   562    	
003F4D 21 AF 3F 00         B   563    				ld hl,cmd_generic
003F51 77                  B   564    				ld (hl),a
                           B   565    
                           B   566    
                           B   567    
003F52                     B   568    sd_send_command_string
                           B   569    
                           B   570    ; set HL = location of 6 byte command string
                           B   571    ; returns command response in A (ZF set if $00)
                           B   572    
                           B   573    
003F52 CD 16 40 00         B   574    				call sd_select_card				                           B   575    						
003F56 CD 3A 3F 00         B   576    				call sd_send_eight_clocks		                           B   577    				
003F5A C5                  B   578    				push bc
003F5B 0606                B   579    				ld b,6
003F5D 7E                  B   580    sd_sclp			ld a,(hl)
003F5E CD B6 3F 00         B   581    				call sd_send_byte				003F62 23                  B   582    				inc hl
003F63 10 F8               B   583    				djnz sd_sclp
003F65 C1                  B   584    				pop bc
                           B   585    				
003F66 CD C3 3F 00         B   586    				call sd_get_byte				                           B   587    					
                           B   588    
003F6A                     B   589    sd_wait_valid_response
                           B   590    				
003F6A C5                  B   591    				push bc
003F6B 0600                B   592    				ld b,0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 157


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
003F6D CD C3 3F 00         B   593    sd_wncrl		call sd_get_byte				003F71 CB7F                B   594    				bit 7,a							003F73 28 02               B   595    				jr z,sd_gcr
003F75 10 F6               B   596    				djnz sd_wncrl
                           B   597    								
003F77 B7                  B   598    sd_gcr			or a							003F78 C1                  B   599    				pop bc
003F79 C9                  B   600    				ret
                           B   601    				
                           B   602    	
                           B   603    ;----------------------------------------------
                           B   604    
003F7A                     B   605    sd_read_bytes_to_sector_buffer
                           B   606    
003F7A 21000800            B   607    				ld hl,sector_buffer
                           B   608    	
003F7E                     B   609    sd_read_bytes
                           B   610    
                           B   611    ; set HL to dest address for data
                           B   612    ; set B to number of bytes required  
                           B   613    
003F7E E5                  B   614    				push hl
003F7F CD C3 3F 00         B   615    sd_rblp			call sd_get_byte
003F83 77                  B   616    				ld (hl),a
003F84 23                  B   617    				inc hl
003F85 10 F8               B   618    				djnz sd_rblp
003F87 E1                  B   619    				pop hl
003F88 C9                  B   620    				ret
                           B   621    	
                           B   622    ;----------------------------------------------
                           B   623    
                           B   624    ; This data can be placed in ROM:
                           B   625    
003F89 40000000 0095       B   626    CMD0_string			db 40h,00h,00h,00h,00h,95h
003F8F 48000001 AA87       B   627    CMD8_string			db 48h,00h,00h,01h,aah,87h
003F95 69400000 0001       B   628    ACMD41HCS_string	db 69h,40h,00h,00h,00h,01h
003F9B 2076782E 7820534E   B   629    sd_vnchars			db " vx.x SN:00000000 ",0,0
003FA3 3A303030 30303030 
003FAB 30200000 
                           B   630    
                           B   631    
                           B   632    ; The following variables need to be placed in 
                           B   633    
003FAF 00                  B   634    cmd_generic			db 00h
003FB0 00000000            B   635    cmd_generic_args	db 00h,00h,00h,00h
003FB4 01                  B   636    cmd_generic_crc		db 01h
                           B   637    
003FB5 00                  B   638    sd_card_info		db 0	; Bit [4] = CCS (bl
                           B   639    
                           B   640    
                           B   641    ;==============================================
                           B   642    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 158


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_sdcard_driver_v110.asm
                           B   643    ;----------------------------------------------
                           B   644    
                           C     0    include "ez80p_sdcard_code.asm"				;EZ
                           C     1    ;----------------------------------------------
                           C     2    ; eZ80P Specific SD card low-level routines v1.
                           C     3    ;----------------------------------------------
                           C     4    
003FB6                     C     5    sd_send_byte
                           C     6    
                           C     7    ;Put byte to send to card in A
                           C     8    
003FB6 ED3903              C     9    					out0 (port_sdc_data),a
003FB9 C5                  C    10    					push bc
003FBA 0E01                C    11    					ld c,port_hw_flags
003FBC ED7410              C    12    sd_wb_loop			tstio 1<<sdc_serializer_bus
003FBF 20 FB               C    13    					jr nz,sd_wb_loop			003FC1 C1                  C    14    					pop bc
003FC2 C9                  C    15    					ret
                           C    16    
                           C    17    ;----------------------------------------------
                           C    18    
003FC3                     C    19    sd_get_byte
                           C    20    
                           C    21    ; Returns byte read from card in A
                           C    22    
003FC3 CD 3A 3F 00         C    23    					call sd_send_eight_clocks
003FC7 ED3803              C    24    					in0 a,(port_sdc_data)
003FCA C9                  C    25    					ret
                           C    26    
                           C    27    ;----------------------------------------------
                           C    28    
003FCB                     C    29    sd_read_513_bytes
                           C    30    
                           C    31    ; optimized sector read
                           C    32    ; set hl = dest location for bytes
                           C    33    ; note: The last byte read (CRC) is not put int
                           C    34    
003FCB C5                  C    35    					push bc
003FCC D5                  C    36    					push de
003FCD 1EFF                C    37    					ld e,0ffh
003FCF ED1903              C    38    					out0 (port_sdc_data),e		003FD2 0E01                C    39    					ld c,port_hw_flags			003FD4 0600                C    40    					ld b,0						                           C    41    
003FD6 ED7410              C    42    sd_wser_loop1		tstio 1<<sdc_serializer_bus
003FD9 20 FB               C    43    					jr nz,sd_wser_loop1			003FDB DB03                C    44    					in a,(port_sdc_data)		                           C    45    					
003FDD ED1903              C    46    sd_512_loop			out0 (port_sdc_data),e		003FE0 77                  C    47    					ld (hl),a					003FE1 23                  C    48    					inc hl						                           C    49    					
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 159


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_sdcard_code.asm
003FE2 ED7410              C    50    sd_wser_loop2		tstio 1<<sdc_serializer_bus
003FE5 20 FB               C    51    					jr nz,sd_wser_loop2			003FE7 DB03                C    52    					in a,(port_sdc_data)		                           C    53    												003FE9 ED1903              C    54    					out0 (port_sdc_data),e		003FEC 77                  C    55    					ld (hl),a					003FED 23                  C    56    					inc hl						                           C    57    					
003FEE ED7410              C    58    sd_wser_loop3		tstio 1<<sdc_serializer_bus
003FF1 20 FB               C    59    					jr nz,sd_wser_loop3			003FF3 DB03                C    60    					in a,(port_sdc_data)		                           C    61    					
003FF5 10 E6               C    62    					djnz sd_512_loop
003FF7 D1                  C    63    					pop de
003FF8 C1                  C    64    					pop bc
003FF9 C9                  C    65    					ret
                           C    66    					
                           C    67    ;----------------------------------------------
                           C    68    					
003FFA                     C    69    sd_write_512_bytes
                           C    70    
                           C    71    ;optimized sector write
                           C    72    ;set hl = source location for bytes
                           C    73    
003FFA 0E01                C    74    					ld c,port_hw_flags			003FFC 0600                C    75    					ld b,0						003FFE 7E                  C    76    					ld a,(hl)
003FFF ED3903              C    77    sd_wr512_loop		out0 (port_sdc_data),a
004002 23                  C    78    					inc hl
004003 7E                  C    79    					ld a,(hl)
004004 ED7410              C    80    sd_wser_loop4		tstio 1<<sdc_serializer_bus
004007 20 FB               C    81    					jr nz,sd_wser_loop4			004009 ED3903              C    82    					out0 (port_sdc_data),a
00400C 23                  C    83    					inc hl
00400D 7E                  C    84    					ld a,(hl)
00400E ED7410              C    85    sd_wser_loop5		tstio 1<<sdc_serializer_bus
004011 20 FB               C    86    					jr nz,sd_wser_loop5
004013 10 EA               C    87    					djnz sd_wr512_loop
004015 C9                  C    88    					ret
                           C    89    
                           C    90    			
                           C    91    ;----------------------------------------------
                           C    92    ; SD Card control
                           C    93    ;----------------------------------------------
                           C    94    
004016 F5                  C    95    sd_select_card		push af
004017 3E02                C    96    					ld a,00h+(1<<sdc_cs)		004019 ED3902              C    97    sd_wr_sdc_ctrl		out0 (port_sdc_ctrl),a
00401C F1                  C    98    					pop af
00401D C9                  C    99    					ret
                           C   100    
                           C   101    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 160


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_sdcard_code.asm
00401E F5                  C   102    sd_deselect_card	push af
00401F 3E82                C   103    					ld a,080h+(1<<sdc_cs)		004021 ED3902              C   104    					out0 (port_sdc_ctrl),a
004024 CD 3A 3F 00         C   105    					call sd_send_eight_clocks	004028 F1                  C   106    					pop af
004029 C9                  C   107    					ret
                           C   108    
                           C   109    
00402A F5                  C   110    sd_power_on			push af
00402B 3A040000            C   111    					ld a,(1<<sdc_speed)			00402F ED3902              C   112    					out0 (port_sdc_ctrl),a		004032 3E83                C   113    					ld a,80h+(1<<sdc_power)+(1<
004034 18 E3               C   114    					jr sd_wr_sdc_ctrl			                           C   115    
                           C   116    
004036 F5                  C   117    sd_power_off		push af
004037 3E01                C   118    					ld a,00h+(1<<sdc_power)		004039 18 DE               C   119    					jr sd_wr_sdc_ctrl			                           C   120    
                           C   121    
00403B F5                  C   122    sd_spi_port_fast	push af
00403C 3E84                C   123    					ld a,80h+(1<<sdc_speed)		00403E 18 D9               C   124    					jr sd_wr_sdc_ctrl
                           C   125    
                           C   126    
                           C   127    ;----------------------------------------------
                           B   646    
                           B   647    ;----------------------------------------------
                           A  3572    	
                           A  3573    ; Additional storage device driver source can b
                           A  3574    ; Also add the driver's PROSE header address la
                           A  3575    
004040 633C00              A  3576    driver_table		dw24 sd_card_driver	; Stora
004043 000000              A  3577    					dw24 0 				; Stora
004046 000000              A  3578    					dw24 0				; Stora
004049 000000              A  3579    					dw24 0				; Stora
                           A  3580    					
00404C 000000              A  3581    					dw24 0				; Essen
                           A  3582    					
                           A  3583    ;----------------------------------------------
                           A  3584    ; IO routines
                           A  3585    ;----------------------------------------------
                           A  3586    
                           B     0    	include		'ez80p_interrupt_code.asm'		                           B     1    ;----------------------------------------------
                           B     2    ; ez80p interrupt code v0.06 (MADL mode)
                           B     3    ;----------------------------------------------
                           B     4    
00404F                     B     5    set_irq_vectors
                           B     6    		
00404F AF                  B     7    				xor a
004050 ED47                B     8    				ld i,a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 161


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
                           B     9    						
004052 DD216F00 00         B    10    				ld ix,06fh						004057 0623                B    11    				ld b,35
004059 DD3600C3            B    12    init_ivect_lp1	ld (ix),0c3h					00405D ED3204              B    13    				lea ix,ix+4
004060 10 F7               B    14    				djnz init_ivect_lp1
                           B    15    				
004062 216F0000            B    16    				ld hl,6fh						004066 DD210A00 00         B    17    				ld ix,0ah
00406B 11040000            B    18    				ld de,4
00406F 060B                B    19    				ld b,11							004071 DD7500              B    20    init_ivect_lp2	ld (ix),l
004074 DD7401              B    21    				ld (ix+1),h
004077 19                  B    22    				add hl,de
004078 ED3202              B    23    				lea ix,ix+2
00407B 10 F4               B    24    				djnz init_ivect_lp2
00407D DD213000 00         B    25    				ld ix,30h						004082 0619                B    26    				ld b,25
004084 DD7500              B    27    init_ivect_lp3	ld (ix),l
004087 DD7401              B    28    				ld (ix+1),h
00408A 19                  B    29    				add hl,de
00408B ED3202              B    30    				lea ix,ix+2
00408E 10 F4               B    31    				djnz init_ivect_lp3
                           B    32    				
004090 21 D0 40 00         B    33    				ld hl,int_routine				004094 229C0000            B    34    				ld (09ch),hl					                           B    35    
004098 3EC3                B    36    				ld a,0c3h						00409A 32660000            B    37    				ld (066h),a
00409E 21 64 42 00         B    38    				ld hl,nmi_routine				0040A2 22670000            B    39    				ld (067h),hl
0040A6 C9                  B    40    				ret
                           B    41    
                           B    42    
                           B    43    ;----------------------------------------------
                           B    44    
                           B    45    
0040A7 21 1A 67 00         B    46    enable_os_irqs	ld hl,devices_connected			0040AB CB46                B    47    				bit 0,(hl)
0040AD C4 B8 40 00         B    48    				call nz,enable_kb_irq
0040B1 CB4E                B    49    				bit 1,(hl)
0040B3 C4 BE 40 00         B    50    				call nz,enable_ms_irq
0040B7 C9                  B    51    				ret
                           B    52    
                           B    53    
0040B8 3E81                B    54    enable_kb_irq	ld a,10000001b
0040BA ED3905              B    55    				out0 (port_irq_ctrl),a			0040BD C9                  B    56    				ret
                           B    57    
0040BE 3E82                B    58    enable_ms_irq	ld a,10000010b
0040C0 ED3905              B    59    				out0 (port_irq_ctrl),a			0040C3 C9                  B    60    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 162


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
                           B    61    
0040C4 3E02                B    62    disable_ms_irq	ld a,00000010b
0040C6 ED3905              B    63    				out0 (port_irq_ctrl),a			0040C9 C9                  B    64    				ret
                           B    65    
0040CA 3E3F                B    66    disable_irqs	ld a,00111111b
0040CC ED3905              B    67    				out0 (port_irq_ctrl),a			0040CF C9                  B    68    				ret
                           B    69    			
                           B    70    ;----------------------------------------------
                           B    71    
                           B    72    
0040D0                     B    73    int_routine
0040D0 F5                  B    74    				push af							0040D1 ED3807              B    75    				in0 a,(port_ps2_ctrl)			0040D4 CB67                B    76    				bit 4,a
0040D6 C4 E8 40 00         B    77    				call nz,kb_interrupt_handler
0040DA ED3807              B    78    				in0 a,(port_ps2_ctrl)			0040DD CB6F                B    79    				bit 5,a
0040DF C4 8A 41 00         B    80    				call nz,ms_interrupt_handler
0040E3 F1                  B    81    				pop af
                           B    82    
0040E4 FB                  B    83    				ei								0040E5 5BED4D              B    84    				reti.l							                           B    85    
                           B    86    ;----------------------------------------------
                           B    87    ; Keyboard IRQ routine v0.03
                           B    88    ;----------------------------------------------
                           B    89    
0040E8                     B    90    kb_interrupt_handler
                           B    91    
                           B    92    ;--- irq test ---------------------------------
                           B    93    
                           B    94    ;				push bc
                           B    95    ;				ld a,0ffh
                           B    96    ;				ld (hw_palette),a
                           B    97    ;				ld b,0
                           B    98    ;testlp1		djnz testlp1
                           B    99    ;				ld a,0
                           B   100    ;				ld (hw_palette),a
                           B   101    ;				pop bc
                           B   102    				
                           B   103    ;--- end of test ------------------------------
                           B   104    
                           B   105    
0040E8 E5                  B   106    				push hl							0040E9 C5                  B   107    				push bc
                           B   108    				
0040EA ED3802              B   109    key_loop		in0 a,(port_keyboard_data)		0040ED 47                  B   110    				ld b,a
                           B   111    
0040EE 3A F1 68 00         B   112    				ld a,(key_release_mode)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 163


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
0040F2 B7                  B   113    				or a
0040F3 28 20               B   114    				jr z,key_pressed
                           B   115    			
0040F5 78                  B   116    				ld a,b							0040F6 FEE0                B   117    				cp 0e0h							0040F8 28 61               B   118    				jr z,kirq_done	
0040FA FEE1                B   119    				cp 0e1h
0040FC 28 5D               B   120    				jr z,kirq_done	
                           B   121    				
0040FE CD 65 41 00         B   122    				call qualifiers					004102 7D                  B   123    				ld a,l
004103 2F                  B   124    				cpl
004104 6F                  B   125    				ld l,a
004105 3A F3 68 00         B   126    				ld a,(key_mod_flags)
004109 A5                  B   127    				and l							00410A 32 F3 68 00         B   128    				ld (key_mod_flags),a
00410E AF                  B   129    				xor a
00410F 32 F1 68 00         B   130    				ld (key_release_mode),a
004113 18 46               B   131    				jr kirq_done
                           B   132    	
                           B   133    
004115 78                  B   134    key_pressed		ld a,b							004116 FEE0                B   135    				cp 0e0h							004118 28 41               B   136    				jr z,kirq_done	
00411A FEE1                B   137    				cp 0e1h
00411C 28 3D               B   138    				jr z,kirq_done	
                           B   139    			
00411E FEF0                B   140    				cp 0f0h							004120 20 08               B   141    				jr nz,not_krel
004122 3E01                B   142    				ld a,1							004124 32 F1 68 00         B   143    				ld (key_release_mode),a			004128 18 31               B   144    				jr kirq_done
                           B   145    	
                           B   146    	
00412A CD 65 41 00         B   147    not_krel		call qualifiers					00412E 3A F3 68 00         B   148    				ld a,(key_mod_flags)			004132 B5                  B   149    				or l
004133 32 F3 68 00         B   150    				ld (key_mod_flags),a			004137 68                  B   151    				ld l,b
004138 01000000            B   152    				ld bc,0
00413C 3A EF 68 00         B   153    				ld a,(key_buf_wr_idx)
004140 4F                  B   154    				ld c,a
004141 7D                  B   155    				ld a,l
004142 21 CF 68 00         B   156    				ld hl,scancode_buffer
004146 09                  B   157    				add hl,bc
004147 77                  B   158    				ld (hl),a						004148 0E10                B   159    				ld c,16
00414A 09                  B   160    				add hl,bc
00414B 3A F3 68 00         B   161    				ld a,(key_mod_flags)			00414F 77                  B   162    				ld (hl),a	
004150 3A EF 68 00         B   163    				ld a,(key_buf_wr_idx)
004154 3C                  B   164    				inc a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 164


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
004155 E60F                B   165    				and 15
004157 32 EF 68 00         B   166    				ld (key_buf_wr_idx),a			                           B   167    				
00415B ED3807              B   168    kirq_done		in0 a,(port_ps2_ctrl)			00415E CB67                B   169    				bit 4,a	
004160 20 88               B   170    				jr nz,key_loop
                           B   171    
004162 C1                  B   172    				pop bc
004163 E1                  B   173    				pop hl
004164 C9                  B   174    				ret
                           B   175    
                           B   176    
004165 2E40                B   177    qualifiers		ld l,040h		;apps
004167 FE2F                B   178    				cp 02fh
004169 C8                  B   179    				ret z
                           B   180    			
00416A 2E20                B   181    				ld l,020h		;r gui
00416C FE27                B   182    				cp 027h
00416E C8                  B   183    				ret z
                           B   184    			
00416F 2E10                B   185    				ld l,010h		;r shift
004171 FE59                B   186    				cp 059h
004173 C8                  B   187    				ret z
                           B   188    			
004174 2E08                B   189    				ld l,08h		; alt
004176 FE11                B   190    				cp 011h
004178 C8                  B   191    				ret z
                           B   192    			
004179 2E04                B   193    				ld l,04h		; l gui
00417B FE1F                B   194    				cp 01fh
                           B   195    			
00417D 2E02                B   196    				ld l,02h		;l ctrl / r ctr
00417F FE14                B   197    				cp 14h
004181 C8                  B   198    				ret z
                           B   199    			
004182 2E01                B   200    				ld l,01h		;l shift
004184 FE12                B   201    				cp 12h
004186 C8                  B   202    				ret z
                           B   203    				
004187 2E00                B   204    				ld l,0
004189 C9                  B   205    				ret
                           B   206    
                           B   207    ;----------------------------------------------
                           B   208    ; Mouse IRQ routine v0.03
                           B   209    ;----------------------------------------------
                           B   210    
00418A                     B   211    ms_interrupt_handler
                           B   212    
                           B   213    ;--- irq test ---------------------------------
                           B   214    
                           B   215    ;				push bc
                           B   216    ;				ld a,0ffh
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 165


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
                           B   217    ;				ld (hw_palette),a
                           B   218    ;				ld b,0
                           B   219    ;testlp1		djnz testlp1
                           B   220    ;				ld a,0
                           B   221    ;				ld (hw_palette),a
                           B   222    ;				pop bc
                           B   223    				
                           B   224    ;--- end of test ------------------------------
                           B   225    
                           B   226    
00418A C5                  B   227    				push bc							00418B D5                  B   228    				push de							00418C E5                  B   229    				push hl							                           B   230    							
00418D 11000000            B   231    ms_loop			ld de,0		
004191 3A FC 68 00         B   232    				ld a,(mouse_packet_index)		004195 5F                  B   233    				ld e,a
004196 21 F8 68 00         B   234    				ld hl,mouse_packet	
00419A 19                  B   235    				add hl,de
00419B ED3806              B   236    				in0 a,(port_mouse_data)
00419E 77                  B   237    				ld (hl),a
                           B   238    								
00419F 21 F7 68 00         B   239    				ld hl,mouse_packet_size
0041A3 1C                  B   240    				inc e							0041A4 7B                  B   241    				ld a,e
0041A5 BE                  B   242    				cp (hl)
0041A6 C2 4F 42 00         B   243    				jr nz,msubpkt
                           B   244    
0041AA 3A F8 68 00         B   245    				ld a,(mouse_packet)				0041AE 4F                  B   246    				ld c,a	
0041AF E607                B   247    				and 0111b
0041B1 32 FD 68 00         B   248    				ld (mouse_buttons),a
                           B   249    				
0041B5 11000000            B   250    				ld de,0							0041B9 CB61                B   251    				bit 4,c
0041BB 28 01               B   252    				jr z,mxsignpos
0041BD 1B                  B   253    				dec de
0041BE 3A F9 68 00         B   254    mxsignpos		ld a,(mouse_packet+1)
0041C2 5F                  B   255    				ld e,a
0041C3 2A FE 68 00         B   256    				ld hl,(mouse_disp_x)
0041C7 19                  B   257    				add hl,de
0041C8 22 FE 68 00         B   258    				ld (mouse_disp_x),hl
                           B   259    				
0041CC 2A 0C 69 00         B   260    				ld hl,(mouse_abs_x)				0041D0 19                  B   261    				add hl,de
0041D1 22 0C 69 00         B   262    				ld (mouse_abs_x),hl
0041D5 CB61                B   263    				bit 4,c
0041D7 20 12               B   264    				jr nz,m_abs_neg_x
0041D9 ED5B 06 69 00       B   265    				ld de,(mouse_window_size_x)
0041DE AF                  B   266    				xor a
0041DF ED52                B   267    				sbc hl,de
0041E1 38 13               B   268    				jr c,m_abs_x_ok
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 166


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
0041E3 1B                  B   269    				dec de
0041E4 ED53 0C 69 00       B   270    				ld (mouse_abs_x),de
0041E9 18 0B               B   271    				jr m_abs_x_ok
0041EB 29                  B   272    m_abs_neg_x		add hl,hl
0041EC 30 08               B   273    				jr nc,m_abs_x_ok
0041EE 21000000            B   274    				ld hl,0
0041F2 22 0C 69 00         B   275    				ld (mouse_abs_x),hl
                           B   276    				
                           B   277    				
0041F6 11000000            B   278    m_abs_x_ok		ld de,0							0041FA CB69                B   279    				bit 5,c
0041FC 28 01               B   280    				jr z,mysignpos
0041FE 1B                  B   281    				dec de
0041FF 3A FA 68 00         B   282    mysignpos		ld a,(mouse_packet+2)
004203 5F                  B   283    				ld e,a
004204 2A 01 69 00         B   284    				ld hl,(mouse_disp_y)			004208 AF                  B   285    				xor a							004209 ED52                B   286    				sbc hl,de
00420B 22 01 69 00         B   287    				ld (mouse_disp_y),hl
                           B   288    				
00420F 2A 0F 69 00         B   289    				ld hl,(mouse_abs_y)				004213 AF                  B   290    				xor a
004214 ED52                B   291    				sbc hl,de
004216 22 0F 69 00         B   292    				ld (mouse_abs_y),hl
00421A CB69                B   293    				bit 5,c
00421C 28 12               B   294    				jr z,m_abs_neg_y
00421E ED5B 09 69 00       B   295    				ld de,(mouse_window_size_y)
004223 AF                  B   296    				xor a
004224 ED52                B   297    				sbc hl,de
004226 38 13               B   298    				jr c,m_abs_y_ok
004228 1B                  B   299    				dec de
004229 ED53 0F 69 00       B   300    				ld (mouse_abs_y),de
00422E 18 0B               B   301    				jr m_abs_y_ok
004230 29                  B   302    m_abs_neg_y		add hl,hl
004231 30 08               B   303    				jr nc,m_abs_y_ok
004233 21000000            B   304    				ld hl,0
004237 22 0F 69 00         B   305    				ld (mouse_abs_y),hl
00423B                     B   306    m_abs_y_ok			
                           B   307    
00423B 21 FB 68 00         B   308    				ld hl,mouse_packet+3			00423F 3A 04 69 00         B   309    				ld a,(mouse_wheel)
004243 86                  B   310    				add a,(hl)
004244 32 04 69 00         B   311    				ld (mouse_wheel),a
                           B   312    				
004248 3E01                B   313    				ld a,1
00424A 32 05 69 00         B   314    				ld (mouse_updated),a			                           B   315    				
00424E AF                  B   316    				xor a
00424F 32 FC 68 00         B   317    msubpkt			ld (mouse_packet_index),a
                           B   318    				
004253 ED3807              B   319    				in0 a,(port_ps2_ctrl)			004256 CB6F                B   320    				bit 5,a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 167


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
004258 C2 8D 41 00         B   321    				jr nz,ms_loop				
                           B   322    				
00425C CD F6 45 00         B   323    				call hwsc_update_pointer_sprite
                           B   324    
004260 E1                  B   325    				pop hl
004261 D1                  B   326    				pop de
004262 C1                  B   327    				pop bc
004263 C9                  B   328    				ret
                           B   329    				
                           B   330    				
                           B   331    ;----------------------------------------------
                           B   332    ; ez80p NMI code v0.03
                           B   333    ;----------------------------------------------
                           B   334    
004264 F5                  B   335    nmi_routine		push af							004265 ED3805              B   336    				in0 a,(port_irq_flags)			004268 CB77                B   337    				bit 6,a							00426A 20 09               B   338    				jr nz,freeze
00426C 3E20                B   339    				ld a,00100000b					00426E ED3909              B   340    				out0 (port_clear_flags),a		004271 F1                  B   341    				pop af
004272 5BED45              B   342    				retn.l
                           B   343    				
004275 F1                  B   344    freeze			pop af
004276 CD B5 13 00         B   345    				call os_store_CPU_regs
                           B   346    				
00427A 21000000            B   347    				ld hl,0
00427E 39                  B   348    				add hl,sp
00427F 7E                  B   349    				ld a,(hl)						004280 E601                B   350    				and 1
004282 32 54 67 00         B   351    				ld (store_adl),a
004286 20 0A               B   352    				jr nz,adl_freeze
004288 23                  B   353    				inc hl
004289 5E                  B   354    				ld e,(hl)						00428A 23                  B   355    				inc hl
00428B 56                  B   356    				ld d,(hl)
00428C CD B5 15 00         B   357    				call mbase_de
004290 18 02               B   358    				jr got_pc
                           B   359    				
004292 33                  B   360    adl_freeze		inc sp
004293 D1                  B   361    				pop de							004294 ED53 4A 67 00       B   362    got_pc			ld (store_pc),de				                           B   363    				
004299 CD B7 42 00         B   364    				call disable_button_nmi
00429D 3E40                B   365    				ld a,01000000b
00429F ED3909              B   366    				out0 (port_clear_flags),a		0042A2 3E01                B   367    				ld a,1
0042A4 32 18 67 00         B   368    				ld (frozen),a
0042A8 C3 56 0A 00         B   369    				jp os_cold_start				                           B   370    
                           B   371    ;----------------------------------------------
                           B   372    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 168


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_interrupt_code.asm
                           B   373    ;nmi_routine
                           B   374    ;
                           B   375    ;				push af							                           B   376    ;				push bc
                           B   377    ;				ld a,0ffh
                           B   378    ;				ld (hw_palette),a
                           B   379    ;				ld b,0
                           B   380    ;nmi_testlp2		djnz nmi_testlp2
                           B   381    ;				ld a,0
                           B   382    ;				ld (hw_palette),a
                           B   383    ;				pop bc
                           B   384    ;				ld a,01100000b
                           B   385    ;				out0 (port_clear_flags)
                           B   386    ;				pop af
                           B   387    ;				retn.l							                           B   388    
                           B   389    
                           B   390    ;----------------------------------------------
                           B   391    
0042AC                     B   392    enable_button_nmi
                           B   393    
0042AC 3E40                B   394    				ld a,01000000b
0042AE ED3909              B   395    				out0 (port_clear_flags),a		0042B1 3EC0                B   396    				ld a,11000000b					0042B3 ED3905              B   397    				out0 (port_irq_ctrl),a			0042B6 C9                  B   398    				ret
                           B   399    
                           B   400    
0042B7                     B   401    disable_button_nmi
                           B   402    
0042B7 3E40                B   403    				ld a,01000000b					0042B9 ED3905              B   404    				out0 (port_irq_ctrl),a
0042BC C9                  B   405    				ret
                           B   406    
                           B   407    
0042BD                     B   408    disable_all_nmis
                           B   409    
0042BD 3E60                B   410    				ld a,01100000b					0042BF ED3905              B   411    				out0 (port_irq_ctrl),a
0042C2 C9                  B   412    				ret
                           B   413    				
                           B   414    ;----------------------------------------------
                           B   415    
                           B     0    	include		'ez80p_rs232_code.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; ez80p low level RS232 code v0.03 (ADL mode)
                           B     3    ;----------------------------------------------
                           B     4    		
0042C3                     B     5    receive_serial_byte
                           B     6    
                           B     7    ; If zero flag set on return OK, A = received b
                           B     8    ; Else timed out (and also A = error $83: time 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 169


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_rs232_code.asm
                           B     9    
0042C3 C5                  B    10    				push bc
0042C4 3A AE 65 00         B    11    				ld a,(serial_timeout)
0042C8 47                  B    12    				ld b,a
0042C9 3ECC                B    13    rx_set_timer	ld a,cch
0042CB ED3981              B    14    				out0 (TMR0_RR_L),a				0042CE 3E0C                B    15    				ld a,0ch
0042D0 ED3982              B    16    				out0 (TMR0_RR_H),a				0042D3 3E03                B    17    				ld a,00000011b					0042D5 ED3980              B    18    				out0 (TMR0_CTL),a				0042D8 ED3880              B    19    				in0 a,(TMR0_CTL)				                           B    20    				
0042DB 0EC5                B    21    rx_byte_lp		ld c,UART0_LSR					0042DD ED7401              B    22    				tstio 1							0042E0 20 0E               B    23    				jr nz,rx_in_buffer
0042E2 AF                  B    24    				xor a
0042E3 B0                  B    25    				or b
0042E4 28 13               B    26    				jr z,rx_time_out
0042E6 0E80                B    27    				ld c,TMR0_CTL	
0042E8 ED7480              B    28    				tstio 128						0042EB 28 EE               B    29    				jr z,rx_byte_lp		
0042ED 05                  B    30    				dec b
0042EE 18 D9               B    31    				jr rx_set_timer
                           B    32    
0042F0 01C00000            B    33    rx_in_buffer	ld bc,UART0_RBR
0042F4 ED78                B    34    				in a,(bc)						0042F6 C1                  B    35    				pop bc
0042F7 BF                  B    36    				cp a							0042F8 C9                  B    37    				ret
                           B    38    
0042F9 C1                  B    39    rx_time_out		pop bc
0042FA 3E83                B    40    				ld a,083h						0042FC B7                  B    41    				or a							0042FD C9                  B    42    				ret
                           B    43    
                           B    44    
                           B    45    
                           B    46    ;----------------------------------------------
                           B    47    
0042FE                     B    48    send_serial_byte
                           B    49    
                           B    50    ; set A to the byte to send
                           B    51    
0042FE C5                  B    52    				push bc
0042FF 0EC5                B    53    				ld c,UART0_LSR					004301 ED7420              B    54    rs232_swait		tstio 020h						004304 28 FB               B    55    				jr z,rs232_swait
004306 01C00000            B    56    				ld bc,UART0_THR
00430A ED79                B    57    				out (c),a						00430C C1                  B    58    				pop bc
00430D C9                  B    59    				ret
                           B    60    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 170


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_rs232_code.asm
                           B    61    ;----------------------------------------------
                           B    62    
00430E                     B    63    send_serial_bytes
                           B    64    
                           B    65    ; set D to the first byte to send
                           B    66    ; and E to the second byte to send
                           B    67    
00430E 7A                  B    68    				ld a,d
00430F CD FE 42 00         B    69    				call send_serial_byte
004313 7B                  B    70    				ld a,e
004314 CD FE 42 00         B    71    				call send_serial_byte
004318 C9                  B    72    				ret
                           B    73    
                           B    74    ;----------------------------------------------
                           B    75    
004319                     B    76    hwsc_flush_serial_buffer
                           B    77    
004319 C5                  B    78    				push bc
00431A 01C00000            B    79    				ld bc,UART0_RBR
00431E ED78                B    80    				in a,(bc)						004320 C1                  B    81    				pop bc
004321 C9                  B    82    				ret
                           B    83    
                           B    84    ;----------------------------------------------
                           B    85    		
                           B     0    	include		'ez80p_video_code.asm'
                           B     1    ;---------------------------------
                           B     2    ; ez80p-specific video code v0.10
                           B     3    ; Character Mode Routines
                           B     4    ;---------------------------------
                           B     5    
       00804000            B     6    charmap_addr	equ vram_a_addr+04000h			                           B     7    
004322                     B     8    set_charmap_parameters
                           B     9    
                           B    10    ;set
                           B    11    ; a = line/pixel doubling (bit 0 = line double,
                           B    12    ; b = columns
                           B    13    ; c = rows
                           B    14    
004322 E603                B    15    				and 3
004324 32 7F 65 00         B    16    				ld (video_doubling),a
004328 79                  B    17    				ld a,c
004329 32 80 65 00         B    18    				ld (charmap_rows),a
00432D 78                  B    19    				ld a,b
00432E 32 83 65 00         B    20    				ld (charmap_columns),a
004332 21000000            B    21    				ld hl,0
004336 69                  B    22    				ld l,c
004337 60                  B    23    				ld h,b
004338 ED6C                B    24    				mlt hl
00433A 29                  B    25    				add hl,hl
00433B 22 2D 67 00         B    26    				ld (charmap_size),hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 171


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
00433F 11004080            B    27    				ld de,charmap_addr
004343 19                  B    28    				add hl,de
004344 22 21 67 00         B    29    				ld (free_vram_a_base),hl		                           B    30    				
004348 CD 4E 43 00         B    31    				call os_set_video_hw_regs
00434C AF                  B    32    				xor a
00434D C9                  B    33    				ret
                           B    34    				
                           B    35    
00434E                     B    36    os_set_video_hw_regs
                           B    37    
00434E 3A 7F 65 00         B    38    				ld a,(video_doubling)
004352 CB27                B    39    				sla a
004354 F618                B    40    				or 00011000b
004356 320018FF            B    41    				ld (video_control),a			00435A AF                  B    42    				xor a
00435B 320218FF            B    43    				ld (bgnd_palette_select),a
00435F 3E63                B    44    				ld a,99
004361 320418FF            B    45    				ld (right_border_position),a
                           B    46    
004365 DD210010 FF         B    47    				ld ix,tilemap_parameters		00436A 21004080            B    48    				ld hl,charmap_addr
00436E DD2F00              B    49    				ld (ix),hl			   			                           B    50    
004371 21020000            B    51    				ld hl,2
004375 DD2F04              B    52    				ld (ix+04h),hl					                           B    53    				
004378 21000008            B    54    				ld hl,80000h
00437C 11000000            B    55    				ld de,0
004380 3A 83 65 00         B    56    				ld a,(charmap_columns)
004384 5F                  B    57    				ld e,a
004385 AF                  B    58    				xor a
004386 ED52                B    59    				sbc hl,de
004388 AF                  B    60    				xor a
004389 ED52                B    61    				sbc hl,de
00438B DD2F08              B    62    				ld (ix+08h),hl					                           B    63    				
00438E 21000000            B    64    				ld hl,0
004392 DD2F0C              B    65    				ld (ix+0ch),hl					                           B    66    				
004395 3A 83 65 00         B    67    				ld a,(charmap_columns)
004399 3D                  B    68    				dec a
00439A DD7710              B    69    				ld (ix+10h),a					                           B    70    				
00439D 3E00                B    71    				ld a,0
00439F DD7711              B    72    				ld (ix+11h),a					0043A2 DD7712              B    73    				ld (ix+12h),a					                           B    74    
0043A5 21 5A 65 00         B    75    				ld hl,pen_palette
0043A9 CD B8 43 00         B    76    				call hswc_set_ui_colours
                           B    77    				
0043AD CD E3 45 00         B    78    				call hwsc_reset_sprites
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 172


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
                           B    79    				
0043B1 AF                  B    80    				xor a
0043B2 32 1F 69 00         B    81    				ld (os_pointer_enable),a		                           B    82    				
0043B6 AF                  B    83    				xor a							0043B7 C9                  B    84    				ret
                           B    85    
                           B    86    ;----------------------------------------------
                           B    87    				
0043B8                     B    88    hswc_set_ui_colours
                           B    89    
0043B8 110000FF            B    90    				ld de,hw_palette
0043BC 01200000            B    91    				ld bc,16*2
0043C0 EDB0                B    92    				ldir
0043C2 AF                  B    93    				xor a							0043C3 C9                  B    94    				ret
                           B    95    
                           B    96    
                           B    97    ;----------------------------------------------
                           B    98    
0043C4                     B    99    hwsc_clear_screen
                           B   100    
0043C4 21004080            B   101    				ld hl,charmap_addr				0043C8 3620                B   102    				ld (hl),32						0043CA 23                  B   103    				inc hl
0043CB CD EA 43 00         B   104    				call get_fill_attr
0043CF 77                  B   105    				ld (hl),a
0043D0 23                  B   106    				inc hl
0043D1 EB                  B   107    				ex de,hl
0043D2 21004080            B   108    				ld hl,charmap_addr
0043D6 ED4B 2D 67 00       B   109    				ld bc,(charmap_size)
0043DB 0B                  B   110    				dec bc
0043DC 0B                  B   111    				dec bc
0043DD EDB0                B   112    				ldir
                           B   113    				
0043DF 01000000            B   114    				ld bc,0
0043E3 ED43 BF 67 00       B   115    				ld (cursor_y),bc
0043E8 AF                  B   116    				xor a							0043E9 C9                  B   117    				ret
                           B   118    				
                           B   119    				
0043EA D5                  B   120    get_fill_attr	push de
0043EB 3A 56 65 00         B   121    				ld a,(current_pen)
0043EF E60F                B   122    				and 0fh
0043F1 5F                  B   123    				ld e,a
0043F2 3A 58 65 00         B   124    				ld a,(background_colour)
0043F6 0F                  B   125    				rrca
0043F7 0F                  B   126    				rrca
0043F8 0F                  B   127    				rrca
0043F9 0F                  B   128    				rrca
0043FA E6F0                B   129    				and 0f0h
0043FC B3                  B   130    				or e
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 173


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
0043FD D1                  B   131    				pop de
0043FE C9                  B   132    				ret
                           B   133    				
                           B   134    
                           B   135    ;----------------------------------------------
                           B   136    
0043FF                     B   137    hwsc_scroll_up	
                           B   138    				
0043FF C5                  B   139    				push bc
004400 D5                  B   140    				push de
004401 E5                  B   141    				push hl
                           B   142    
004402 2A 2D 67 00         B   143    				ld hl,(charmap_size)
004406 ED5B 83 65 00       B   144    				ld de,(charmap_columns)
00440B AF                  B   145    				xor a
00440C ED52                B   146    				sbc hl,de
00440E ED52                B   147    				sbc hl,de						004410 E5                  B   148    				push hl
004411 C1                  B   149    				pop bc							004412 21004080            B   150    				ld hl,charmap_addr
004416 E5                  B   151    				push hl
004417 19                  B   152    				add hl,de
004418 19                  B   153    				add hl,de
004419 D1                  B   154    				pop de
00441A EDB0                B   155    				ldir
                           B   156    				
00441C EB                  B   157    				ex de,hl						00441D E5                  B   158    				push hl
00441E 3620                B   159    				ld (hl),32
004420 23                  B   160    				inc hl
004421 CD EA 43 00         B   161    				call get_fill_attr
004425 77                  B   162    				ld (hl),a
004426 2A 83 65 00         B   163    				ld hl,(charmap_columns)
00442A 2B                  B   164    				dec hl
00442B 29                  B   165    				add hl,hl
00442C E5                  B   166    				push hl
00442D C1                  B   167    				pop bc
00442E E1                  B   168    				pop hl
00442F E5                  B   169    				push hl
004430 D1                  B   170    				pop de
004431 13                  B   171    				inc de
004432 13                  B   172    				inc de
004433 EDB0                B   173    				ldir
                           B   174    				
004435 E1                  B   175    				pop hl
004436 D1                  B   176    				pop de
004437 C1                  B   177    				pop bc
004438 AF                  B   178    				xor a							004439 C9                  B   179    				ret
                           B   180    
                           B   181    
                           B   182    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 174


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
                           B   183    
00443A                     B   184    hwsc_plot_char
                           B   185    
                           B   186    ; Set:
                           B   187    ; ----
                           B   188    ; A = ascii char
                           B   189    ; B = x character coordinate 
                           B   190    ; C = y character coordinate
                           B   191    
00443A E5                  B   192    				push hl							00443B D5                  B   193    				push de
00443C F5                  B   194    				push af
                           B   195    
00443D 3A 80 65 00         B   196    				ld a,(charmap_rows)				004441 3D                  B   197    				dec a
004442 B9                  B   198    				cp c							004443 38 08               B   199    				jr c,win_err
004445 3A 83 65 00         B   200    				ld a,(charmap_columns)
004449 3D                  B   201    				dec a
00444A B8                  B   202    				cp b
00444B 30 07               B   203    				jr nc,win_ok
00444D F1                  B   204    win_err			pop af
00444E D1                  B   205    				pop de
00444F E1                  B   206    				pop hl
004450 3E88                B   207    				ld a,88h						004452 B7                  B   208    				or a
004453 C9                  B   209    				ret
                           B   210    				
004454 2A 83 65 00         B   211    win_ok			ld hl,(charmap_columns)			004458 61                  B   212    				ld h,c
004459 ED6C                B   213    				mlt hl
00445B 11000000            B   214    				ld de,0
00445F 58                  B   215    				ld e,b
004460 19                  B   216    				add hl,de
004461 29                  B   217    				add hl,hl
004462 11004080            B   218    				ld de,charmap_addr
004466 19                  B   219    				add hl,de
004467 F1                  B   220    				pop af
004468 77                  B   221    				ld (hl),a
004469 23                  B   222    				inc hl
00446A 3A 56 65 00         B   223    				ld a,(current_pen)
00446E 77                  B   224    				ld (hl),a
00446F D1                  B   225    				pop de
004470 E1                  B   226    				pop hl
004471 AF                  B   227    				xor a
004472 C9                  B   228    				ret
                           B   229    				
                           B   230    				
                           B   231    ;----------------------------------------------
                           B   232    
004473                     B   233    hwsc_remove_cursor
                           B   234    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 175


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
004473 3A 7C 65 00         B   235    				ld a,(cursor_present)			004477 B7                  B   236    				or a
004478 C8                  B   237    				ret z
004479 ED4B BF 67 00       B   238    				ld bc,(cursor_y)
00447E CD E1 44 00         B   239    				call hwsc_get_charmap_addr_xy
004482 3A 7B 65 00         B   240    				ld a,(char_under_cursor)
004486 77                  B   241    				ld (hl),a
004487 AF                  B   242    				xor a
004488 32 7C 65 00         B   243    				ld (cursor_present),a
00448C C9                  B   244    				ret
                           B   245    
                           B   246    
00448D                     B   247    hwsc_draw_cursor
                           B   248    								
00448D 3A 7C 65 00         B   249    				ld a,(cursor_present)			004491 B7                  B   250    				or a
004492 C0                  B   251    				ret nz
004493 3C                  B   252    				inc a
004494 32 7C 65 00         B   253    				ld (cursor_present),a
                           B   254    				
004498 ED4B BF 67 00       B   255    				ld bc,(cursor_y)
00449D CD E1 44 00         B   256    				call hwsc_get_charmap_addr_xy
0044A1 7E                  B   257    				ld a,(hl)						0044A2 32 7B 65 00         B   258    				ld (char_under_cursor),a		0044A6 36FF                B   259    				ld (hl),ffh						                           B   260    				
0044A8 11400000            B   261    				ld de,64						0044AC 57                  B   262    				ld d,a
0044AD ED5C                B   263    				mlt de
0044AF FD210000 80         B   264    				ld iy,vram_a_addr				0044B4 FD19                B   265    				add iy,de						                           B   266    				
0044B6 21400000            B   267    				ld hl,64
0044BA 3A 7E 65 00         B   268    				ld a,(cursor_image_char)
0044BE 67                  B   269    				ld h,a
0044BF ED6C                B   270    				mlt hl
0044C1 11000080            B   271    				ld de,vram_a_addr
0044C5 19                  B   272    				add hl,de
                           B   273    				
0044C6 DD21C03F 80         B   274    				ld ix,vram_a_addr+03fc0h
0044CB 11080000            B   275    				ld de,8
0044CF 0608                B   276    				ld b,8
0044D1 FD7E00              B   277    cur_loop		ld a,(iy)						0044D4 AE                  B   278    				xor (hl)						0044D5 DD7700              B   279    				ld (ix),a						0044D8 FD19                B   280    				add iy,de
0044DA DD19                B   281    				add ix,de
0044DC 19                  B   282    				add hl,de
0044DD 10 F2               B   283    				djnz cur_loop
                           B   284    				
0044DF AF                  B   285    				xor a
0044E0 C9                  B   286    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 176


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
                           B   287    				
                           B   288    
                           B   289    ;----------------------------------------------
                           B   290    
0044E1                     B   291    hwsc_get_charmap_addr_xy
                           B   292    
                           B   293    ; returns address of charmap in xHL for charact
                           B   294    ; and attrmap in xDE
                           B   295    				
0044E1 2A 83 65 00         B   296    				ld hl,(charmap_columns)			0044E5 61                  B   297    				ld h,c
0044E6 ED6C                B   298    				mlt hl
0044E8 11000000            B   299    				ld de,0
0044EC 58                  B   300    				ld e,b
0044ED 19                  B   301    				add hl,de
0044EE 29                  B   302    				add hl,hl
0044EF 11004080            B   303    				ld de,charmap_addr
0044F3 19                  B   304    				add hl,de
0044F4 E5                  B   305    				push hl
0044F5 D1                  B   306    				pop de
0044F6 13                  B   307    				inc de
0044F7 AF                  B   308    				xor a
0044F8 C9                  B   309    				ret
                           B   310    								
                           B   311    ;----------------------------------------------
                           B   312    
0044F9                     B   313    hwsc_chars_left
                           B   314    
                           B   315    ; moves characters (in character map) on the cu
                           B   316    
0044F9 E5                  B   317    				push hl
0044FA D5                  B   318    				push de
0044FB C5                  B   319    				push bc
                           B   320    				
0044FC 2A 83 65 00         B   321    				ld hl,(charmap_columns)
004500 3A BF 67 00         B   322    				ld a,(cursor_y)
004504 67                  B   323    				ld h,a
004505 ED6C                B   324    				mlt hl
004507 11000000            B   325    				ld de,0
00450B 58                  B   326    				ld e,b
00450C 19                  B   327    				add hl,de
00450D 29                  B   328    				add hl,hl
00450E 11004080            B   329    				ld de,charmap_addr
004512 19                  B   330    				add hl,de
                           B   331    				
004513 3A 83 65 00         B   332    				ld a,(charmap_columns)
004517 90                  B   333    				sub b
004518 CB27                B   334    				sla a
00451A 01000000            B   335    				ld bc,0
00451E 4F                  B   336    				ld c,a
00451F E5                  B   337    				push hl
004520 D1                  B   338    				pop de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 177


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
004521 1B                  B   339    				dec de
004522 1B                  B   340    				dec de
004523 EDB0                B   341    				ldir
                           B   342    				
004525 3E20                B   343    				ld a,32						;pu
004527 12                  B   344    				ld (de),a
004528 13                  B   345    				inc de
004529 CD EA 43 00         B   346    				call get_fill_attr
00452D 12                  B   347    				ld (de),a
                           B   348    				
00452E C1                  B   349    				pop bc
00452F D1                  B   350    				pop de
004530 E1                  B   351    				pop hl
004531 C9                  B   352    				ret
                           B   353    
                           B   354    
                           B   355    ;----------------------------------------------
                           B   356    
                           B   357    
004532                     B   358    hwsc_chars_right
                           B   359    
                           B   360    ; moves characters on current line right from c
                           B   361    
004532 C5                  B   362    				push bc
004533 D5                  B   363    				push de
004534 E5                  B   364    				push hl
                           B   365    	
004535 21 C0 67 00         B   366    				ld hl,cursor_x				
004539 3A 83 65 00         B   367    				ld a,(charmap_columns)
00453D 3D                  B   368    				dec a
00453E BE                  B   369    				cp (hl)			
00453F 28 30               B   370    				jr z,chright_end
004541 46                  B   371    				ld b,(hl)
                           B   372    				
004542 2A 83 65 00         B   373    				ld hl,(charmap_columns)
004546 3A BF 67 00         B   374    				ld a,(cursor_y)
00454A 3C                  B   375    				inc a							00454B 67                  B   376    				ld h,a
00454C ED6C                B   377    				mlt hl
00454E 29                  B   378    				add hl,hl
00454F 11004080            B   379    				ld de,charmap_addr
004553 19                  B   380    				add hl,de					
004554 2B                  B   381    				dec hl							004555 E5                  B   382    				push hl
004556 D1                  B   383    				pop de							004557 2B                  B   384    				dec hl
004558 2B                  B   385    				dec hl							004559 3A 83 65 00         B   386    				ld a,(charmap_columns)
00455D 90                  B   387    				sub b
00455E 3D                  B   388    				dec a
00455F CB27                B   389    				sla a
004561 01000000            B   390    				ld bc,0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 178


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
004565 4F                  B   391    				ld c,a							004566 EDB8                B   392    				lddr
004568 23                  B   393    				inc hl							004569 3620                B   394    				ld (hl),32
00456B 23                  B   395    				inc hl
00456C CD EA 43 00         B   396    				call get_fill_attr
004570 77                  B   397    				ld (hl),a
                           B   398    							
004571 E1                  B   399    chright_end		pop hl	
004572 D1                  B   400    				pop de
004573 C1                  B   401    				pop bc
004574 C9                  B   402    				ret
                           B   403    
                           B   404    ;----------------------------------------------
                           B   405    
                           B   406    
004575                     B   407    hwsc_charline_to_command_string	
                           B   408    				
                           B   409    				
004575 2A 83 65 00         B   410    				ld hl,(charmap_columns)			004579 3A BF 67 00         B   411    				ld a,(cursor_y)
00457D 67                  B   412    				ld h,a
00457E ED6C                B   413    				mlt hl
004580 29                  B   414    				add hl,hl
004581 11004080            B   415    				ld de,charmap_addr
004585 19                  B   416    				add hl,de
004586 11 DD 67 00         B   417    				ld de,commandstring
00458A 0650                B   418    				ld b,max_buffer_chars			00458C 7E                  B   419    copy_to_cmdline	ld a,(hl)
00458D 12                  B   420    				ld (de),a
00458E 13                  B   421    				inc de
00458F 23                  B   422    				inc hl
004590 23                  B   423    				inc hl
004591 10 F9               B   424    				djnz copy_to_cmdline
004593 C9                  B   425    				ret
                           B   426    
                           B   427    ;----------------------------------------------
                           B   428    
                           B   429    
004594 C5                  B   430    hwsc_wait_vrt	push bc
                           B   431    
004595 0E01                B   432    				ld c,1
004597 ED0909              B   433    				out0 (port_clear_flags),c
                           B   434    
00459A 0E01                B   435    				ld c,port_hw_flags
00459C ED7420              B   436    ewaitvrtlp1		tstio 1<<vrt
00459F 28 FB               B   437    				jr z,ewaitvrtlp1
                           B   438    				
0045A1 C1                  B   439    				pop bc
0045A2 BF                  B   440    				cp a							0045A3 C9                  B   441    				ret
                           B   442    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 179


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_video_code.asm
                           B   443    
                           B   444    ;----------------------------------------------
                           B   445    
                           B     0    	include		'ez80p_misc_code.asm'
                           B     1    ;----------------------------------------------
                           B     2    ;Misc eZ80p specific routines v0.05 (ADL versio
                           B     3    ;----------------------------------------------
                           B     4    
0045A4                     B     5    hwsc_default_hw_settings
                           B     6    
                           B     7    ; Set up eZ80 Wait states
                           B     8    
0045A4 3E48                B     9    					ld a,01001000b				0045A6 ED39AA              B    10    					out0 (CS0_CTL),a
0045A9 3E00                B    11    					ld a,000h					0045AB ED39A8              B    12    					out0 (CS0_LBR),a
0045AE 3EFF                B    13    					ld a,0ffh	
0045B0 ED39A9              B    14    					out0 (CS0_UBR),a			                           B    15    
0045B3 3E58                B    16    					ld a,01011000b
0045B5 ED39AD              B    17    					out0 (CS1_CTL),a			0045B8 3E00                B    18    					ld a,0
0045BA ED39AB              B    19    					out0 (CS1_LBR),a			                           B    20    
                           B    21    ;set up eZ80 GPIO ports
                           B    22    
0045BD 3EFF                B    23    					ld a,0ffh
0045BF ED399F              B    24    					out0 (PC_DDR),a				0045C2 AF                  B    25    					xor a
0045C3 ED39A0              B    26    					out0 (PC_ALT1),a
0045C6 ED39A1              B    27    					out0 (PC_ALT2),a
                           B    28    					
0045C9 3EFF                B    29    					ld a,0ffh					0045CB ED39A3              B    30    					out0 (PD_DDR),a				0045CE AF                  B    31    					xor a	
0045CF ED39A4              B    32    					out0 (PD_ALT1),a			0045D2 3E0F                B    33    					ld a,00fh				
0045D4 ED39A5              B    34    					out0 (PD_ALT2),a			                           B    35    
                           B    36    ;set up eZ80 timer
                           B    37    
0045D7 ED3892              B    38    					in0 a,(TMR_ISS)
0045DA E6FC                B    39    					and 11111100b
0045DC F601                B    40    					or  00000001b
0045DE ED3992              B    41    					out0 (TMR_ISS),a			                           B    42    					
0045E1 AF                  B    43    					xor a
0045E2 C9                  B    44    					ret
                           B    45    
                           B    46    
                           B    47    ;----------------------------------------------
                           B    48    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 180


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
0045E3 AF                  B    49    hwsc_reset_sprites	xor a
0045E4 320118FF            B    50    					ld (sprite_control),a		                           B    51    					
0045E8 210008FF            B    52    					ld hl,hw_sprite_registers	0045EC 01000100            B    53    					ld bc,8*32
0045F0 AF                  B    54    					xor a
0045F1 CD 7D 15 00         B    55    					call os_bchl_memfill
0045F5 C9                  B    56    					ret
                           B    57    					
                           B    58    ;----------------------------------------------
                           B    59    
                           B    60    
0045F6                     B    61    hwsc_update_pointer_sprite
                           B    62    					
0045F6 3A 1F 69 00         B    63    					ld a,(os_pointer_enable)	0045FA E601                B    64    					and 1
0045FC C8                  B    65    					ret z
                           B    66    
0045FD DDE5                B    67    					push ix
0045FF DD21F808 FF         B    68    					ld ix,hw_sprite_registers+(
004604 2A 0C 69 00         B    69    					ld hl,(mouse_abs_x)
004608 019A0000            B    70    					ld bc,x_display_offset
00460C 09                  B    71    					add hl,bc
00460D DD7500              B    72    					ld (ix),l
004610 DD7401              B    73    					ld (ix+1),h
004613 2A 0F 69 00         B    74    					ld hl,(mouse_abs_y)
004617 01250000            B    75    					ld bc,y_display_offset
00461B 09                  B    76    					add hl,bc
00461C DD7502              B    77    					ld (ix+2),l
00461F DD7403              B    78    					ld (ix+3),h
004622 ED4B 23 69 00       B    79    					ld bc,(os_pointer_height)
004627 DD7104              B    80    					ld (ix+4),c
00462A DD7005              B    81    					ld (ix+5),b
00462D ED4B 20 69 00       B    82    					ld bc,(os_pointer_definitio
004632 DD7106              B    83    					ld (ix+6),c
004635 DD7007              B    84    					ld (ix+7),b
004638 DDE1                B    85    					pop ix
00463A C9                  B    86    					ret
                           B    87    
                           B    88    
                           B    89    ;----------------------------------------------
                           B    90    				
                           B    91    
00463B 11000000            B    92    hwsc_get_version	ld de,0
00463F 0610                B    93    					ld b,16
004641 78                  B    94    gethwvlp			ld a,b
004642 3D                  B    95    					dec a
004643 ED3908              B    96    					out0 (port_selector),a		004646 DB01                B    97    					in a,(port_hw_flags)		004648 CB27                B    98    					sla a
00464A CB13                B    99    					rl e
00464C CB12                B   100    					rl d
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 181


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
00464E 10 F1               B   101    					djnz gethwvlp				                           B   102    									
004650 21380000            B   103    					ld hl,prose_version
004654 BF                  B   104    					cp a						004655 C9                  B   105    					ret
                           B   106    
                           B   107    
                           B   108    
                           B   109    ;----------------------------------------------
                           B   110    ; Timer related 
                           B   111    ;----------------------------------------------
                           B   112    
004656                     B   113    hwsc_time_delay
                           B   114    
                           B   115    ; set DE to 32768Hz ticks to wait
                           B   116    
004656 CD 62 46 00         B   117    					call hwsc_set_timeout
00465A CD 73 46 00         B   118    twaitlp				call hwsc_test_timeout
00465E 28 FA               B   119    					jr z,twaitlp
004660 AF                  B   120    					xor a						004661 C9                  B   121    					ret			
                           B   122    
                           B   123    ;----------------------------------------------
                           B   124    
                           B   125    ; Set DE to 32768 Hz ticks to allow before time
                           B   126    
004662 7B                  B   127    hwsc_set_timeout	ld a,e						004663 ED3981              B   128    					out0 (TMR0_RR_L),a			004666 7A                  B   129    					ld a,d
004667 ED3982              B   130    					out0 (TMR0_RR_H),a			00466A 3E03                B   131    					ld a,00000011b				00466C ED3980              B   132    					out0 (TMR0_CTL),a			00466F ED3880              B   133    					in0 a,(TMR0_CTL)			004672 C9                  B   134    					ret
                           B   135    			
004673 ED3880              B   136    hwsc_test_timeout	in0 a,(TMR0_CTL)			004676 CB7F                B   137    					bit 7,a
004678 C9                  B   138    					ret
                           B   139    			
                           B   140    ;----------------------------------------------
                           B   141    
004679                     B   142    hwsc_read_rtc
004679 D5                  B   143    					push de
00467A C5                  B   144    					push bc
00467B 0EE0                B   145    hwsc_rtc_rlp		ld c,RTC_SEC
00467D 0608                B   146    					ld b,8
00467F 21 11 67 00         B   147    					ld hl,time_data
004683 ED92                B   148    					inimr						004685 0EE0                B   149    					ld c,RTC_SEC
004687 0600                B   150    					ld b,0
004689 1E08                B   151    					ld e,8
00468B 21 11 67 00         B   152    					ld hl,time_data
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 182


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
00468F ED78                B   153    timevloop			in a,(bc)					004691 BE                  B   154    					cp (hl)						004692 20 E7               B   155    					jr nz,hwsc_rtc_rlp			004694 23                  B   156    					inc hl
004695 0C                  B   157    					inc c
004696 1D                  B   158    					dec e
004697 20 F6               B   159    					jr nz,timevloop
004699 21 11 67 00         B   160    					ld hl,time_data
00469D C1                  B   161    					pop bc
00469E D1                  B   162    					pop de
00469F BF                  B   163    					cp a						0046A0 C9                  B   164    					ret
                           B   165    
                           B   166    
0046A1                     B   167    hwsc_write_rtc	
                           B   168    
                           B   169    ; set HL to location of BCD data for RTC: sec/m
                           B   170    
0046A1 E5                  B   171    					push hl
0046A2 C5                  B   172    					push bc
0046A3 3E21                B   173    					ld a,00100001b				0046A5 ED39ED              B   174    					out0 (RTC_CTRL),a
0046A8 0EE0                B   175    					ld c,RTC_SEC
0046AA 0608                B   176    					ld b,8
0046AC ED93                B   177    					otimr
0046AE 3E20                B   178    					ld a,00100000b				0046B0 ED39ED              B   179    					out0 (RTC_CTRL),a
0046B3 C1                  B   180    					pop bc
0046B4 E1                  B   181    					pop hl
0046B5 BF                  B   182    					cp a						0046B6 C9                  B   183    					ret	
                           B   184    
                           B   185    
                           B   186    ;----------------------------------------------
                           B   187    ; INIT KEYBOARD ROUTINE 
                           B   188    ;----------------------------------------------
                           B   189    
                           B   190    ; ZF set and A = 0 if all OK, else error code i
                           B   191    
0046B7                     B   192    init_keyboard
                           B   193    
0046B7 11004000            B   194    			ld de,16384							0046BB CD 56 46 00         B   195    			call hwsc_time_delay
0046BF F3                  B   196    			di
0046C0 CD 75 47 00         B   197    			call purge_keyboard
0046C4 CD CE 46 00         B   198    			call rs_keyboard
0046C8 FB                  B   199    			ei
0046C9 D0                  B   200    			ret nc
0046CA 3E8B                B   201    			ld a,08bh							0046CC B7                  B   202    			or a
0046CD C9                  B   203    			ret
                           B   204    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 183


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B   205    			
0046CE                     B   206    rs_keyboard
                           B   207    
0046CE 3EFF                B   208    			ld a,0ffh
0046D0 CD ED 46 00         B   209    			call write_to_keyboard
0046D4 30 04               B   210    			jr nc,kb_connected
0046D6 3E8A                B   211    			ld a,08ah							0046D8 B7                  B   212    			or a
0046D9 C9                  B   213    			ret
                           B   214    
0046DA                     B   215    kb_connected
                           B   216    			
0046DA 0605                B   217    			ld b,5
0046DC C5                  B   218    kb_initlp	push bc
0046DD CD 59 47 00         B   219    			call wait_kb_byte					0046E1 C1                  B   220    			pop bc
0046E2 D8                  B   221    			ret c
0046E3 FEAA                B   222    			cp 0aah
0046E5 28 04               B   223    			jr z,kb_postok
0046E7 10 F3               B   224    			djnz kb_initlp						0046E9 37                  B   225    			scf									0046EA C9                  B   226    			ret
                           B   227    			
                           B   228    			
0046EB AF                  B   229    kb_postok	xor a
0046EC C9                  B   230    			ret
                           B   231    	
                           B   232    	
                           B   233    ;----------------------------------------------
                           B   234    				
0046ED                     B   235    write_to_keyboard
                           B   236    
                           B   237    ; Put byte to send to keyboard in A
                           B   238    
0046ED 4F                  B   239    			ld c,a								0046EE 3E01                B   240    			ld a,01b							0046F0 ED3907              B   241    			out0 (port_ps2_ctrl),a
                           B   242    
0046F3 110A0000            B   243    			ld de,10
0046F7 CD 56 46 00         B   244    			call hwsc_time_delay				                           B   245    
0046FB 3E03                B   246    			ld a,11b
0046FD ED3907              B   247    			out0 (port_ps2_ctrl),a				                           B   248    			
004700 3E02                B   249    			ld a,10b
004702 ED3907              B   250    			out0 (port_ps2_ctrl),a				                           B   251    			
004705 CD D5 48 00         B   252    			call wait_kb_clk_high
                           B   253    			
004709 1601                B   254    			ld d,1								00470B 0608                B   255    			ld b,8								00470D CD A8 48 00         B   256    kdoloop		call wait_kb_clk_low	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 184


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
004711 D8                  B   257    			ret c
004712 AF                  B   258    			xor a
004713 CBCF                B   259    			set 1,a
004715 CB41                B   260    			bit 0,c
004717 28 03               B   261    			jr z,kdbzero
004719 CB8F                B   262    			res 1,a
00471B 14                  B   263    			inc d
00471C ED3907              B   264    kdbzero		out0 (port_ps2_ctrl),a				00471F CD D5 48 00         B   265    			call wait_kb_clk_high
004723 D8                  B   266    			ret c
004724 CB19                B   267    			rr c
004726 10 E5               B   268    			djnz kdoloop
                           B   269    
004728 CD A8 48 00         B   270    			call wait_kb_clk_low
00472C D8                  B   271    			ret c
00472D AF                  B   272    			xor a
00472E CB42                B   273    			bit 0,d
004730 20 02               B   274    			jr nz,kparone
004732 CBCF                B   275    			set 1,a
004734 ED3907              B   276    kparone		out0 (port_ps2_ctrl),a				004737 CD D5 48 00         B   277    			call wait_kb_clk_high
00473B D8                  B   278    			ret c
                           B   279    			
00473C CD A8 48 00         B   280    			call wait_kb_clk_low
004740 D8                  B   281    			ret c
004741 AF                  B   282    			xor a
004742 ED3907              B   283    			out0 (port_ps2_ctrl),a				                           B   284    
004745 CD A4 48 00         B   285    			call wait_kb_data_low				004749 D8                  B   286    			ret c
00474A CD A8 48 00         B   287    			call wait_kb_clk_low				00474E D8                  B   288    			ret c
                           B   289    				
00474F CD D1 48 00         B   290    			call wait_kb_data_high				004753 D8                  B   291    			ret c
004754 CD D5 48 00         B   292    			call wait_kb_clk_high				004758 C9                  B   293    			ret 
                           B   294    
                           B   295    
                           B   296    ;----------------------------------------------
                           B   297    
                           B   298    
004759                     B   299    wait_kb_byte
                           B   300    
004759 11008000            B   301    			ld de,8000h
00475D CD 62 46 00         B   302    			call hwsc_set_timeout				                           B   303    
004761 ED3807              B   304    wait_kloop	in0 a,(port_ps2_ctrl)
004764 CB67                B   305    			bit 4,a
004766 20 08               B   306    			jr nz,rec_kbyte
                           B   307    			
004768 CD 73 46 00         B   308    			call hwsc_test_timeout
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 185


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
00476C 28 F3               B   309    			jr z,wait_kloop
00476E 37                  B   310    			scf									00476F C9                  B   311    			ret
                           B   312    			
004770 ED3802              B   313    rec_kbyte	in0 a,(port_keyboard_data)			004773 B7                  B   314    			or a
004774 C9                  B   315    			ret
                           B   316    
                           B   317    
                           B   318    ;----------------------------------------------
                           B   319    
004775                     B   320    purge_keyboard
                           B   321    			
004775 ED3807              B   322    			in0 a,(port_ps2_ctrl)
004778 CB67                B   323    			bit 4,a
00477A C8                  B   324    			ret z
00477B ED3802              B   325    			in0 a,(port_keyboard_data)			00477E 18 F5               B   326    			jr purge_keyboard
                           B   327    
                           B   328    
                           B   329    
                           B   330    ;----------------------------------------------
                           B   331    ; INIT MOUSE ROUTINE 
                           B   332    ;----------------------------------------------
                           B   333    
                           B   334    ; ZF set and A = 0 if all OK, else error code i
                           B   335    
004780                     B   336    init_mouse		
004780 F3                  B   337    			di
004781 CD 99 48 00         B   338    			call purge_mouse
004785 CD 8F 47 00         B   339    			call rs_mouse
004789 FB                  B   340    			ei
00478A D0                  B   341    			ret nc
00478B 3E8B                B   342    			ld a,08bh							00478D B7                  B   343    			or a
00478E C9                  B   344    			ret
                           B   345    
                           B   346    
00478F                     B   347    rs_mouse
00478F 3EFF                B   348    			ld a,0ffh							004791 CD 11 48 00         B   349    			call write_to_mouse		
004795 30 04               B   350    			jr nc,mouse_connected
004797 3E8A                B   351    			ld a,08ah							004799 B7                  B   352    			or a
00479A C9                  B   353    			ret
                           B   354    
                           B   355    
00479B                     B   356    mouse_connected
                           B   357    
00479B 0605                B   358    			ld b,5
00479D C5                  B   359    ms_initlp	push bc
00479E CD 7D 48 00         B   360    			call wait_mouse_byte				Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 186


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
0047A2 C1                  B   361    			pop bc
0047A3 D8                  B   362    			ret c
0047A4 FEAA                B   363    			cp 0aah
0047A6 28 04               B   364    			jr z,ms_postok
0047A8 10 F3               B   365    			djnz ms_initlp
0047AA 18 43               B   366    			jr bad_mouse
                           B   367    			
0047AC CD 7D 48 00         B   368    ms_postok	call wait_mouse_byte				0047B0 D8                  B   369    			ret c
0047B1 B7                  B   370    			or a
0047B2 20 3B               B   371    			jr nz,bad_mouse						                           B   372    			
0047B4 3E03                B   373    			ld a,3
0047B6 32 F7 68 00         B   374    			ld (mouse_packet_size),a
                           B   375    
0047BA 21 D1 65 00         B   376    			ld hl,intellimouse_seq
0047BE 0606                B   377    			ld b,6
0047C0 CD F3 47 00         B   378    			call mouse_sequence
0047C4 D8                  B   379    			ret c
                           B   380    			
0047C5 3EF2                B   381    			ld a,0f2h
0047C7 CD 02 48 00         B   382    			call write_mouse_wait_ack			0047CB D8                  B   383    			ret c
0047CC CD 7D 48 00         B   384    			call wait_mouse_byte				0047D0 D8                  B   385    			ret c
0047D1 32 F6 68 00         B   386    			ld (mouse_id),a
0047D5 B7                  B   387    			or a								0047D6 28 0A               B   388    			jr z,standard_mouse
0047D8 FE03                B   389    			cp 3
0047DA 20 13               B   390    			jr nz,bad_mouse						0047DC 3E04                B   391    			ld a,4
0047DE 32 F7 68 00         B   392    			ld (mouse_packet_size),a
                           B   393    
0047E2                     B   394    standard_mouse
                           B   395    		
0047E2 21 D7 65 00         B   396    			ld hl,mouse_settings_seq
0047E6 0606                B   397    			ld b,6
0047E8 CD F3 47 00         B   398    			call mouse_sequence
0047EC D8                  B   399    			ret c
0047ED AF                  B   400    			xor a								0047EE C9                  B   401    			ret
                           B   402    
                           B   403    
0047EF 3E89                B   404    bad_mouse	ld a,089h							0047F1 B7                  B   405    			or a
0047F2 C9                  B   406    			ret
                           B   407    
                           B   408    
0047F3                     B   409    mouse_sequence
                           B   410    
0047F3 7E                  B   411    mseqlp		ld a,(hl)
0047F4 E5                  B   412    			push hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 187


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
0047F5 C5                  B   413    			push bc
0047F6 CD 02 48 00         B   414    			call write_mouse_wait_ack
0047FA C1                  B   415    			pop bc
0047FB E1                  B   416    			pop hl
0047FC D8                  B   417    			ret c
0047FD 23                  B   418    			inc hl
0047FE 10 F3               B   419    			djnz mseqlp
004800 AF                  B   420    			xor a
004801 C9                  B   421    			ret
                           B   422    
                           B   423    
004802                     B   424    write_mouse_wait_ack
                           B   425    			
004802 CD 11 48 00         B   426    			call write_to_mouse
004806 D8                  B   427    			ret c
004807 CD 7D 48 00         B   428    			call wait_mouse_byte				00480B D8                  B   429    			ret c
00480C FEFA                B   430    			cp 0fah								00480E C8                  B   431    			ret z
00480F 37                  B   432    			scf
004810 C9                  B   433    			ret
                           B   434    			
                           B   435    ;----------------------------------------------
                           B   436    				
004811                     B   437    write_to_mouse
                           B   438    
                           B   439    ; Put byte to send to mouse in A
                           B   440    
004811 4F                  B   441    			ld c,a								004812 3E04                B   442    			ld a,0100b							004814 ED3907              B   443    			out0 (port_ps2_ctrl),a
                           B   444    
004817 110A0000            B   445    			ld de,10
00481B CD 56 46 00         B   446    			call hwsc_time_delay				                           B   447    
00481F 3E0C                B   448    			ld a,1100b
004821 ED3907              B   449    			out0 (port_ps2_ctrl),a				                           B   450    			
004824 3E08                B   451    			ld a,1000b
004826 ED3907              B   452    			out0 (port_ps2_ctrl),a				                           B   453    			
004829 CD DD 48 00         B   454    			call wait_mouse_clk_high
                           B   455    			
00482D 1601                B   456    			ld d,1								00482F 0608                B   457    			ld b,8								004831 CD B0 48 00         B   458    mdoloop		call wait_mouse_clk_low	
004835 D8                  B   459    			ret c
004836 AF                  B   460    			xor a
004837 CBDF                B   461    			set 3,a
004839 CB41                B   462    			bit 0,c
00483B 28 03               B   463    			jr z,mdbzero
00483D CB9F                B   464    			res 3,a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 188


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
00483F 14                  B   465    			inc d
004840 ED3907              B   466    mdbzero		out0 (port_ps2_ctrl),a				004843 CD DD 48 00         B   467    			call wait_mouse_clk_high
004847 D8                  B   468    			ret c
004848 CB19                B   469    			rr c
00484A 10 E5               B   470    			djnz mdoloop
                           B   471    
00484C CD B0 48 00         B   472    			call wait_mouse_clk_low
004850 D8                  B   473    			ret c
004851 AF                  B   474    			xor a
004852 CB42                B   475    			bit 0,d
004854 20 02               B   476    			jr nz,parone
004856 CBDF                B   477    			set 3,a
004858 ED3907              B   478    parone		out0 (port_ps2_ctrl),a				00485B CD DD 48 00         B   479    			call wait_mouse_clk_high
00485F D8                  B   480    			ret c
                           B   481    			
004860 CD B0 48 00         B   482    			call wait_mouse_clk_low
004864 D8                  B   483    			ret c
004865 AF                  B   484    			xor a
004866 ED3907              B   485    			out0 (port_ps2_ctrl),a				                           B   486    
004869 CD AC 48 00         B   487    			call wait_mouse_data_low			00486D D8                  B   488    			ret c
00486E CD B0 48 00         B   489    			call wait_mouse_clk_low				004872 D8                  B   490    			ret c
                           B   491    				
004873 CD D9 48 00         B   492    			call wait_mouse_data_high			004877 D8                  B   493    			ret c
004878 CD DD 48 00         B   494    			call wait_mouse_clk_high			00487C C9                  B   495    			ret 
                           B   496    
                           B   497    ;----------------------------------------------
                           B   498    
                           B   499    
00487D                     B   500    wait_mouse_byte
                           B   501    
00487D 11008000            B   502    			ld de,8000h
004881 CD 62 46 00         B   503    			call hwsc_set_timeout				                           B   504    
004885 ED3807              B   505    wait_mloop	in0 a,(port_ps2_ctrl)
004888 CB6F                B   506    			bit 5,a
00488A 20 08               B   507    			jr nz,rec_mbyte
                           B   508    			
00488C CD 73 46 00         B   509    			call hwsc_test_timeout
004890 28 F3               B   510    			jr z,wait_mloop
004892 37                  B   511    			scf									004893 C9                  B   512    			ret
                           B   513    			
004894 ED3806              B   514    rec_mbyte	in0 a,(port_mouse_data)				004897 B7                  B   515    			or a
004898 C9                  B   516    			ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 189


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B   517    
                           B   518    ;----------------------------------------------
                           B   519    
004899                     B   520    purge_mouse
                           B   521    			
004899 ED3807              B   522    			in0 a,(port_ps2_ctrl)
00489C CB6F                B   523    			bit 5,a
00489E C8                  B   524    			ret z
00489F ED3806              B   525    			in0 a,(port_mouse_data)			; r
0048A2 18 F5               B   526    			jr purge_mouse
                           B   527    
                           B   528    
                           B   529    ;----------------------------------------------
                           B   530    
                           B   531    
0048A4                     B   532    wait_kb_data_low
                           B   533    
0048A4 3E02                B   534    			ld a,2
0048A6 18 0A               B   535    			jr test_lo_ps2
                           B   536    			
0048A8                     B   537    wait_kb_clk_low
                           B   538    
0048A8 3E01                B   539    			ld a,1
0048AA 18 06               B   540    			jr test_lo_ps2			
                           B   541    
0048AC                     B   542    wait_mouse_data_low
                           B   543    
0048AC 3E08                B   544    			ld a,8
0048AE 18 02               B   545    			jr test_lo_ps2
                           B   546    
0048B0                     B   547    wait_mouse_clk_low
                           B   548    
0048B0 3E04                B   549    			ld a,4
                           B   550    
0048B2 C5                  B   551    test_lo_ps2	push bc
0048B3 D5                  B   552    			push de
0048B4 4F                  B   553    			ld c,a
0048B5 11004000            B   554    			ld de,04000h					; a
0048B9 CD 62 46 00         B   555    			call hwsc_set_timeout
                           B   556    
0048BD CD 73 46 00         B   557    nkb_lw		call hwsc_test_timeout			; t
0048C1 28 04               B   558    			jr z,nkb_lnto
0048C3 D1                  B   559    			pop de
0048C4 C1                  B   560    			pop bc
0048C5 37                  B   561    			scf								; c
0048C6 C9                  B   562    			ret
0048C7 ED3807              B   563    nkb_lnto	in0 a,(port_ps2_ctrl)
0048CA A1                  B   564    			and c
0048CB 20 F0               B   565    			jr nz,nkb_lw
                           B   566    					
0048CD D1                  B   567    			pop de
0048CE C1                  B   568    			pop bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 190


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
0048CF AF                  B   569    			xor a
0048D0 C9                  B   570    			ret					
                           B   571    
                           B   572    
                           B   573    
                           B   574    
0048D1                     B   575    wait_kb_data_high
                           B   576    
0048D1 3E02                B   577    			ld a,2
0048D3 18 0A               B   578    			jr test_hi_ps2
                           B   579    			
0048D5                     B   580    wait_kb_clk_high
                           B   581    
0048D5 3E01                B   582    			ld a,1
0048D7 18 06               B   583    			jr test_hi_ps2
                           B   584    
                           B   585    
0048D9                     B   586    wait_mouse_data_high
                           B   587    			
0048D9 3E08                B   588    			ld a,8
0048DB 18 02               B   589    			jr test_hi_ps2
                           B   590    			 
0048DD                     B   591    wait_mouse_clk_high
                           B   592    
0048DD 3E04                B   593    			ld a,4
                           B   594    
0048DF C5                  B   595    test_hi_ps2	push bc
0048E0 D5                  B   596    			push de
0048E1 4F                  B   597    			ld c,a
0048E2 11004000            B   598    			ld de,04000h					; a
0048E6 CD 62 46 00         B   599    			call hwsc_set_timeout
                           B   600    
0048EA CD 73 46 00         B   601    nkb_hw		call hwsc_test_timeout			; t
0048EE 28 04               B   602    			jr z,nkb_hnto
0048F0 D1                  B   603    			pop de
0048F1 C1                  B   604    			pop bc
0048F2 37                  B   605    			scf								; c
0048F3 C9                  B   606    			ret
0048F4 ED3807              B   607    nkb_hnto	in0 a,(port_ps2_ctrl)
0048F7 A1                  B   608    			and c
0048F8 28 F0               B   609    			jr z,nkb_hw
                           B   610    					
0048FA D1                  B   611    			pop de
0048FB C1                  B   612    			pop bc
0048FC AF                  B   613    			xor a							; c
0048FD C9                  B   614    			ret
                           B   615    
                           B   616    
                           B   617    ;==============================================
                           B   618    
0048FE                     B   619    hwsc_play_audio
                           B   620    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 191


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
                           B   621    ; set HL register to location of an audio data 
                           B   622    
                           B   623    ; 0 - start 
                           B   624    ; 3 - length
                           B   625    ; 6 - loop start
                           B   626    ; 9 - loop length
                           B   627    ; c - frequency constant
                           B   628    ; e - volume
                           B   629    
                           B   630    ; set C register to set channels wave is to pla
                           B   631    
0048FE E5                  B   632    				push hl
0048FF FDE1                B   633    				pop iy
004901 DD210014 FF         B   634    				ld ix,hw_audio_registers
004906 CD 3B 49 00         B   635    				call audio_reg_wait				                           B   636    				
00490A 0608                B   637    				ld b,8
00490C CB39                B   638    audchanloop		srl c
00490E 30 24               B   639    				jr nc,not_this_chan
                           B   640    				
004910 FD1700              B   641    				ld de,(iy)
004913 DD1F00              B   642    				ld (ix),de						                           B   643    
004916 FD1703              B   644    				ld de,(iy+3)
004919 DD1F04              B   645    				ld (ix+04h),de					                           B   646    				
00491C FD170C              B   647    				ld de,(iy+0ch)
00491F DD1F08              B   648    				ld (ix+08h),de					                           B   649    				
004922 FD5E0E              B   650    				ld e,(iy+0eh)
004925 DD1F0C              B   651    				ld (ix+0ch),de					                           B   652    				
004928 FD1706              B   653    				ld de,(iy+6)
00492B DD1F10              B   654    				ld (ix+10h),de					                           B   655    				
00492E FD1709              B   656    				ld de,(iy+9)
004931 DD1F14              B   657    				ld (ix+14h),de					                           B   658    
004934                     B   659    not_this_chan	
004934 ED3220              B   660    				lea ix,ix+20h			
004937 10 D3               B   661    				djnz audchanloop
004939 AF                  B   662    				xor a
00493A C9                  B   663    				ret
                           B   664    
                           B   665    
                           B   666    ;----------------------------------------------
                           B   667    
00493B                     B   668    audio_reg_wait	
                           B   669    
00493B 3E01                B   670    				ld a,1
00493D 320314FF            B   671    				ld (hw_audio_registers+3),a		                           B   672    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 192


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
004941 ED3801              B   673    wait_audreg		in0 a,(port_hw_flags)			004944 E640                B   674    				and 040h
004946 28 F9               B   675    				jr z,wait_audreg				004948 AF                  B   676    				xor a
004949 C9                  B   677    				ret
00494A C9                  B   678    				ret
                           B   679    
                           B   680    
                           B   681    ;----------------------------------------------
                           B   682    				
                           B   683    				
00494B                     B   684    hwsc_disable_audio
                           B   685    
00494B AF                  B   686    				xor a
00494C 320314FF            B   687    				ld (hw_audio_registers+3),a		                           B   688    				
004950 DD210014 FF         B   689    				ld ix,hw_audio_registers		004955 0608                B   690    				ld b,8
004957 11000000            B   691    				ld de,0
00495B DD1F0C              B   692    disaud_lp		ld (ix+0ch),de
00495E ED3220              B   693    				lea ix,ix+020h
004961 10 F8               B   694    				djnz disaud_lp
004963 C9                  B   695    				ret
                           B   696    				
                           B   697    ;----------------------------------------------
                           B   698    
004964                     B   699    hwsc_get_joysticks
                           B   700    
004964 ED389E              B   701    				in0 a,(PC_DR)				
004967 2F                  B   702    				cpl
004968 47                  B   703    				ld b,a
004969 E60F                B   704    				and 0fh
00496B 5F                  B   705    				ld e,a
00496C 78                  B   706    				ld a,b
00496D 0F                  B   707    				rrca
00496E 0F                  B   708    				rrca
00496F 0F                  B   709    				rrca
004970 0F                  B   710    				rrca
004971 E60F                B   711    				and 0fh
004973 57                  B   712    				ld d,a
                           B   713    				
004974 ED38A2              B   714    				in0 a,(PD_DR)	
004977 CB67                B   715    				bit 4,a						; f
004979 20 02               B   716    				jr nz,noj1b1
00497B CBEA                B   717    				set 5,d
                           B   718    
00497D CB6F                B   719    noj1b1			bit 5,a						; f
00497F 20 02               B   720    				jr nz,noj1b0
004981 CBE2                B   721    				set 4,d
                           B   722    				
004983 CB77                B   723    noj1b0			bit 6,a						; f
004985 20 02               B   724    				jr nz,noj0b1
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 193


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\ez80p_misc_code.asm
004987 CBEB                B   725    				set 5,e
                           B   726    
004989 CB7F                B   727    noj0b1			bit 7,a						; f
00498B 20 02               B   728    				jr nz,noj0b0
00498D CBE3                B   729    				set 4,e
                           B   730    
00498F AF                  B   731    noj0b0			xor a
004990 C9                  B   732    				ret
                           B   733    				
                           B   734    				
                           B   735    ;----------------------------------------------
                           B   736    			
                           B   737    				
                           B   738    				
                           A  3591    
                           B     0    	include		'prose_keyboard_routines.asm'	                           B     1    ;----------------------------------------------
                           B     2    ;PROSE KEYBOARD/MOUSE ROUTINES V0.04 (ADL mode)
                           B     3    ;----------------------------------------------
                           B     4    
004991                     B     5    os_wait_key_press
                           B     6    
                           B     7    ; Busy waits for a keypress.
                           B     8    ; Handles the following modifier keys (key_mod_
                           B     9    ; Returns scancode in A and ASCII code in B (B=
                           B    10    ; (ASCII code is modifed by shift / alt key sta
                           B    11    
                           B    12    
004991 D5                  B    13    				push de
004992 51                  B    14    				ld d,c
004993 E5                  B    15    				push hl
                           B    16    				
004994 CD FE 49 00         B    17    wait_kbuf		call get_kb_buffer_indexes		004998 BE                  B    18    				cp (hl)							004999 28 F9               B    19    				jr z,wait_kbuf		
                           B    20    			
00499B 01000000            B    21    new_key			ld bc,0							00499F 4F                  B    22    				ld c,a
0049A0 21 CF 68 00         B    23    				ld hl,scancode_buffer	
0049A4 09                  B    24    				add hl,bc
0049A5 7E                  B    25    				ld a,(hl)						                           B    26    
0049A6 0E10                B    27    				ld c,16
0049A8 09                  B    28    				add hl,bc						0049A9 4F                  B    29    				ld c,a							0049AA 7E                  B    30    				ld a,(hl)						                           B    31    
0049AB 1E00                B    32    				ld e,0							0049AD 21 2A 64 00         B    33    				ld hl,unshifted_keymap			                           B    34    
0049B1 CB4F                B    35    				bit 1,a
0049B3 28 04               B    36    				jr z,not_ctrl					Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 194


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_keyboard_routines.asm
0049B5 1E60                B    37    				ld e,96							0049B7 18 16               B    38    				jr got_keymap					                           B    39    							
0049B9 CB47                B    40    not_ctrl		bit 0,a
0049BB 20 04               B    41    				jr nz,shifted
0049BD CB67                B    42    				bit 4,a
0049BF 28 06               B    43    				jr z,not_shifted
0049C1 21 8C 64 00         B    44    shifted			ld hl,shifted_keymap			0049C5 18 08               B    45    				jr got_keymap
                           B    46    				
0049C7 CB5F                B    47    not_shifted		bit 3,a
0049C9 28 04               B    48    				jr z,got_keymap	
0049CB 21 EE 64 00         B    49    				ld hl,alted_keymap				                           B    50    
0049CF 79                  B    51    got_keymap		ld a,c							0049D0 FE62                B    52    				cp 062h
0049D2 30 07               B    53    				jr nc,gotkdone
0049D4 09                  B    54    				add hl,bc						0049D5 7E                  B    55    				ld a,(hl)						0049D6 93                  B    56    				sub a,e							0049D7 30 01               B    57    				jr nc,subkey_ok	
0049D9 AF                  B    58    				xor a							0049DA 47                  B    59    subkey_ok		ld b,a
                           B    60    				
0049DB 3A F0 68 00         B    61    gotkdone		ld a,(key_buf_rd_idx)			0049DF 3C                  B    62    				inc a							0049E0 E60F                B    63    				and 15
0049E2 32 F0 68 00         B    64    				ld (key_buf_rd_idx),a			0049E6 79                  B    65    				ld a,c							0049E7 E1                  B    66    				pop hl
0049E8 4A                  B    67    				ld c,d
0049E9 D1                  B    68    				pop de
0049EA BF                  B    69    				cp a							0049EB C9                  B    70    				ret
                           B    71    			
                           B    72    		
                           B    73    ;----------------------------------------------
                           B    74    			
0049EC                     B    75    os_get_key_press
                           B    76    				
                           B    77    ; Gets a keycode on-the-fly - If one is availab
                           B    78    ; On return, ZF is set if there is a new scanco
                           B    79    ; (ASCII code is modifed by shift key status), 
                           B    80    			
                           B    81    			
0049EC D5                  B    82    				push de
0049ED 51                  B    83    				ld d,c
0049EE E5                  B    84    				push hl
0049EF CD FE 49 00         B    85    				call get_kb_buffer_indexes		0049F3 BE                  B    86    				cp (hl)							0049F4 20 A5               B    87    				jr nz,new_key					0049F6 3E81                B    88    				ld a,81h			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 195


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_keyboard_routines.asm
0049F8 47                  B    89    				ld b,a
0049F9 B7                  B    90    				or a
0049FA E1                  B    91    				pop hl
0049FB 4A                  B    92    				ld c,d
0049FC D1                  B    93    				pop de
0049FD C9                  B    94    				ret
                           B    95    			
                           B    96    ;----------------------------------------------
                           B    97    			
0049FE                     B    98    get_kb_buffer_indexes
                           B    99    			
                           B   100    			
0049FE 21 EF 68 00         B   101    				ld hl,key_buf_wr_idx			004A02 3A F0 68 00         B   102    				ld a,(key_buf_rd_idx)			004A06 C9                  B   103    				ret
                           B   104    			
                           B   105    		
                           B   106    ;----------------------------------------------
                           B     0    	include		'prose_serial_routines.asm'
                           B     1    ;**********************************************
                           B     2    ; PROSE Serial File Transfer Routines V0.05 (AD
                           B     3    ;**********************************************
                           B     4    
                           B     5    ;----------------------------------------------
                           B     6    ; .---------------------.
                           B     7    ; ! Receive file header !
                           B     8    ; '---------------------'
                           B     9    ;
                           B    10    ; Before calling set:-
                           B    11    ;
                           B    12    ; HL = Filename ("*" if dont care)
                           B    13    ;  A = Time out in seconds
                           B    14    ;
                           B    15    ; If zero flag set, all OK. IX returns location
                           B    16    ;    Else A=$84 = memory address out of range, 
                           B    17    ;           $87 = Filename mismatch, $86 = chec
                           B    18    ;----------------------------------------------
                           B    19    	
                           B    20    
004A07                     B    21    serial_get_header
                           B    22    
004A07 32 AE 65 00         B    23    				ld (serial_timeout),a			004A0B 22 98 65 00         B    24    				ld (serial_fn_addr),hl
004A0F CD 19 43 00         B    25    				call hwsc_flush_serial_buffer	                           B    26    
004A13 CD F6 4A 00         B    27    				call s_getblock					004A17 28 0C               B    28    				jr z,s_gbfhok					004A19 F5                  B    29    				push af							004A1A 3A CF 65 00         B    30    				ld a,(serial_transfer_started)
004A1E B7                  B    31    				or a							004A1F C4 5D 4B 00         B    32    				call nz,s_badack				004A23 F1                  B    33    				pop af
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 196


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
004A24 C9                  B    34    				ret
                           B    35    	
004A25 21 C3 65 00         B    36    s_gbfhok		ld hl,serial_header_id			004A29 11140800            B    37    				ld de,sector_buffer+20			004A2D 060C                B    38    				ld b,12
004A2F CD 63 12 00         B    39    				call os_compare_strings
004A33 20 0F               B    40    				jr nz,s_nfhdr
004A35 06E0                B    41    				ld b,256-32						004A37 21200800            B    42    				ld hl,sector_buffer+32
004A3B 7E                  B    43    s_chdr			ld a,(hl)
004A3C 23                  B    44    				inc hl
004A3D B7                  B    45    				or a
004A3E 20 04               B    46    				jr nz,s_nfhdr
004A40 10 F9               B    47    				djnz s_chdr
004A42 18 08               B    48    				jr s_fhcsok
                           B    49    				
004A44 CD 5D 4B 00         B    50    s_nfhdr			call s_badack					004A48 3E85                B    51    				ld a,085h						004A4A B7                  B    52    				or a
004A4B C9                  B    53    				ret
                           B    54    		
004A4C 21100800            B    55    s_fhcsok		ld hl,sector_buffer+16			004A50 11 BF 65 00         B    56    				ld de,serial_fileheader+16
004A54 01040000            B    57    				ld bc,4
004A58 EDB0                B    58    				ldir
                           B    59    				
004A5A 21000800            B    60    				ld hl,sector_buffer
004A5E 11 AF 65 00         B    61    				ld de,serial_fileheader			004A62 0610                B    62    				ld b,16							004A64 7E                  B    63    s_tuclp			ld a,(hl)						004A65 B7                  B    64    				or a
004A66 28 0B               B    65    				jr z,s_ffhswz	
004A68 CD 9D 12 00         B    66    				call os_uppercasify
004A6C 12                  B    67    				ld (de),a
004A6D 23                  B    68    				inc hl
004A6E 13                  B    69    				inc de
004A6F 10 F3               B    70    				djnz s_tuclp
004A71 18 04               B    71    				jr s_tucdone
004A73 12                  B    72    s_ffhswz		ld (de),a
004A74 13                  B    73    				inc de
004A75 10 FC               B    74    				djnz s_ffhswz		
                           B    75    	
004A77 2A 98 65 00         B    76    s_tucdone		ld hl,(serial_fn_addr)			004A7B 7E                  B    77    				ld a,(hl)
004A7C FE2A                B    78    				cp '*'
004A7E 28 14               B    79    				jr z,s_rffns					004A80 11 AF 65 00         B    80    				ld de,serial_fileheader
004A84 0610                B    81    				ld b,16
004A86 CD 63 12 00         B    82    				call os_compare_strings
004A8A 28 08               B    83    				jr z,s_rffns
004A8C CD 5D 4B 00         B    84    s_rfnbad		call s_badack
004A90 3E87                B    85    				ld a,087h						Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 197


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
004A92 B7                  B    86    				or a
004A93 C9                  B    87    				ret
                           B    88    				
004A94 DD21 AF 65 00       B    89    s_rffns			ld ix,serial_fileheader			004A99 AF                  B    90    				xor a
004A9A C9                  B    91    				ret
                           B    92    
004A9B F5                  B    93    s_fail			push af				
004A9C CD 5D 4B 00         B    94    				call s_badack		 
004AA0 F1                  B    95    				pop af
004AA1 C9                  B    96    				ret
                           B    97    	
                           B    98    ;----------------------------------------------
                           B    99    ; .-------------------.
                           B   100    ; ! Receive file data !
                           B   101    ; '-------------------'
                           B   102    ;
                           B   103    ; Serial_get_header must be called first!
                           B   104    ;
                           B   105    ; Set:
                           B   106    ;
                           B   107    ; xHL = Address to load to [23:0]
                           B   108    ;
                           B   109    ; On return, if Zero flag is set, all OK (IX = 
                           B   110    ; Else A =  $84 = memory address out of range
                           B   111    ;           $85 = comms error
                           B   112    ;----------------------------------------------
                           B   113    
004AA2                     B   114    serial_receive_file
                           B   115    
004AA2 3E0A                B   116    				ld a,10							004AA4 32 AE 65 00         B   117    				ld (serial_timeout),a
004AA8 E5                  B   118    				push hl
004AA9 CD 4C 4B 00         B   119    				call s_goodack					004AAD DDE1                B   120    				pop ix							004AAF ED5B BF 65 00       B   121    				ld de,(serial_fileheader+16)	                           B   122    
004AB4 CD F6 4A 00         B   123    s_gbloop		call s_getblock
004AB8 20 E1               B   124    				jr nz,s_fail
004ABA 0E00                B   125    				ld c,0							004ABC FD210008 00         B   126    				ld iy,sector_buffer
004AC1 FD7E00              B   127    s_rfloop		ld a,(iy)
004AC4 DD7700              B   128    				ld (ix),a						004AC7 1B                  B   129    				dec de							004AC8 21000000            B   130    				ld hl,0
004ACC AF                  B   131    				xor a
004ACD ED5A                B   132    				adc hl,de						004ACF 28 1A               B   133    				jr z,s_rfabr					004AD1 C5                  B   134    				push bc
004AD2 01010000            B   135    				ld bc,1
004AD6 DD09                B   136    				add ix,bc						004AD8 C1                  B   137    				pop bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 198


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
004AD9 30 05               B   138    				jr nc,s_nbt
004ADB 3E84                B   139    				ld a,84h						004ADD B7                  B   140    				or a
004ADE 18 BB               B   141    				jr s_fail
004AE0 FD23                B   142    s_nbt			inc iy
004AE2 0D                  B   143    				dec c
004AE3 20 DC               B   144    				jr nz,s_rfloop
004AE5 CD 4C 4B 00         B   145    				call s_goodack					004AE9 18 C9               B   146    				jr s_gbloop
                           B   147    			
004AEB CD 4C 4B 00         B   148    s_rfabr			call s_goodack					004AEF DD21 AF 65 00       B   149    				ld ix,serial_fileheader			004AF4 AF                  B   150    				xor a							004AF5 C9                  B   151    				ret
                           B   152    			
                           B   153    ;----------------------------------------------
                           B   154    
004AF6                     B   155    s_getblock
                           B   156    
                           B   157    ; carry set on return if timed out
                           B   158    
004AF6 AF                  B   159    				xor a
004AF7 32 CF 65 00         B   160    				ld (serial_transfer_started),a	004AFB E5                  B   161    				push hl							004AFC D5                  B   162    				push de
004AFD C5                  B   163    				push bc
004AFE 21000800            B   164    				ld hl,sector_buffer				004B02 0600                B   165    				ld b,0
004B04 D9                  B   166    				exx
004B05 21FFFF00            B   167    				ld hl,0ffffh					004B09 D9                  B   168    				exx
004B0A CD C3 42 00         B   169    s_lgb			call receive_serial_byte
004B0E 20 38               B   170    				jr nz,s_gberr					004B10 F5                  B   171    				push af
004B11 3E01                B   172    				ld a,1
004B13 32 CF 65 00         B   173    				ld (serial_transfer_started),a
004B17 F1                  B   174    				pop af
004B18 77                  B   175    				ld (hl),a
004B19 D9                  B   176    				exx
004B1A AC                  B   177    				xor h							004B1B 67                  B   178    				ld h,a			
004B1C 0608                B   179    				ld b,8
004B1E 4029                B   180    rxcrcbyte		add.sis hl,hl					004B20 30 08               B   181    				jr nc,rxcrcnext
004B22 7C                  B   182    				ld a,h
004B23 EE10                B   183    				xor 10h
004B25 67                  B   184    				ld h,a
004B26 7D                  B   185    				ld a,l
004B27 EE21                B   186    				xor 21h
004B29 6F                  B   187    				ld l,a
004B2A 10 F2               B   188    rxcrcnext		djnz rxcrcbyte
004B2C D9                  B   189    				exx
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 199


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
004B2D 23                  B   190    				inc hl
004B2E 10 DA               B   191    				djnz s_lgb
004B30 D9                  B   192    				exx								                           B   193    			
004B31 CD C3 42 00         B   194    				call receive_serial_byte		004B35 20 11               B   195    				jr nz,s_gberr
004B37 4F                  B   196    				ld c,a
004B38 CD C3 42 00         B   197    				call receive_serial_byte
004B3C 20 0A               B   198    				jr nz,s_gberr		
004B3E 47                  B   199    				ld b,a
                           B   200    				
004B3F AF                  B   201    				xor a							004B40 52ED42              B   202    				sbc.s hl,bc						004B43 28 03               B   203    				jr z,s_gberr
                           B   204    			
004B45 3E86                B   205    				ld a,86h						004B47 B7                  B   206    				or a							004B48 C1                  B   207    s_gberr			pop bc
004B49 D1                  B   208    				pop de
004B4A E1                  B   209    				pop hl
004B4B C9                  B   210    				ret
                           B   211    				
                           B   212    ;----------------------------------------------
                           B   213    
004B4C C5                  B   214    s_goodack		push bc
004B4D 014F4B00            B   215    				ld bc,04b4fh					004B51 79                  B   216    ackbytes		ld a,c
004B52 CD FE 42 00         B   217    				call send_serial_byte
004B56 78                  B   218    				ld a,b
004B57 CD FE 42 00         B   219    				call send_serial_byte
004B5B C1                  B   220    				pop bc
004B5C C9                  B   221    				ret
                           B   222    
004B5D C5                  B   223    s_badack		push bc
004B5E 01585800            B   224    				ld bc,05858h					004B62 18 ED               B   225    				jr ackbytes
                           B   226    
004B64 C5                  B   227    s_holdack		push bc
004B65 01575700            B   228    				ld bc,05757h					004B69 18 E6               B   229    				jr ackbytes
                           B   230    				
                           B   231    ;==============================================
                           B   232    
                           B   233    ; .-----------.
                           B   234    ; ! Send file !
                           B   235    ; '-----------'
                           B   236    
                           B   237    ; Before calling set:-
                           B   238    
                           B   239    ;  xHL   = filename
                           B   240    ;  xDE   = length of file
                           B   241    ;  xIX   = Start address [23:0]
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 200


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
                           B   242    
                           B   243    ; On return, if zero flag is set, all OK. Else:
                           B   244    ; $81 = Save length is zero
                           B   245    ; $84 = memory address out of range
                           B   246    ; $85 = comms error
                           B   247    
                           B   248    
004B6B                     B   249    serial_send_file
                           B   250    			
004B6B 3E01                B   251    				ld a,1							004B6D 32 AE 65 00         B   252    				ld (serial_timeout),a
                           B   253    			
004B71 DD22 92 65 00       B   254    				ld (serial_ez80_address),ix
004B76 ED53 BF 65 00       B   255    				ld (serial_fileheader+10h),de	004B7B E5                  B   256    				push hl
004B7C 21000000            B   257    				ld hl,0
004B80 AF                  B   258    				xor a
004B81 ED5A                B   259    				adc hl,de
004B83 20 05               B   260    				jr nz,s_flok
004B85 E1                  B   261    				pop hl
004B86 3E81                B   262    				ld a,081h						004B88 B7                  B   263    				or a							004B89 C9                  B   264    				ret
                           B   265    			
004B8A 21 AF 65 00         B   266    s_flok			ld hl,serial_fileheader			004B8E 01100000            B   267    				ld bc,16
004B92 AF                  B   268    				xor a
004B93 CD 7D 15 00         B   269    				call os_bchl_memfill
004B97 E1                  B   270    				pop hl							004B98 11 AF 65 00         B   271    				ld de,serial_fileheader
004B9C 0610                B   272    				ld b,16
004B9E CD 82 12 00         B   273    				call os_copy_ascii_run
                           B   274    				
004BA2 21 C3 65 00         B   275    				ld hl,serial_header_id			004BA6 11 C3 65 00         B   276    				ld de,serial_fileheader+014h
004BAA 010C0000            B   277    				ld bc,12		
004BAE EDB0                B   278    				ldir
                           B   279    			
004BB0 DD21 AF 65 00       B   280    				ld ix,serial_fileheader			004BB5 11200000            B   281    				ld de,32
004BB9 CD EF 4B 00         B   282    				call s_makeblock			
004BBD C0                  B   283    				ret nz
004BBE CD 27 4C 00         B   284    				call s_sendblock
004BC2 C0                  B   285    				ret nz
004BC3 CD 54 4C 00         B   286    				call s_waitack					004BC7 C0                  B   287    				ret nz							                           B   288    				
004BC8 DD2A 92 65 00       B   289    				ld ix,(serial_ez80_address)
004BCD ED5B BF 65 00       B   290    				ld de,(serial_fileheader+16)	004BD2 CD EF 4B 00         B   291    s_sbloop		call s_makeblock				004BD6 38 16               B   292    				jr c,s_rerr
004BD8 CD 27 4C 00         B   293    				call s_sendblock				Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 201


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
004BDC 38 10               B   294    				jr c,s_rerr	
004BDE CD 54 4C 00         B   295    				call s_waitack					004BE2 38 0A               B   296    				jr c,s_rerr
004BE4 21000000            B   297    				ld hl,0
004BE8 AF                  B   298    				xor a
004BE9 ED5A                B   299    				adc hl,de
004BEB 20 E5               B   300    				jr nz,s_sbloop					004BED AF                  B   301    				xor a							004BEE C9                  B   302    s_rerr			ret
                           B   303    
                           B   304    ;----------------------------------------------
                           B   305    
004BEF                     B   306    s_makeblock
                           B   307    
                           B   308    ; set xIX = src addr
                           B   309    ; xDE = byte count
                           B   310    ; a=0 on return if all ok	
                           B   311    
004BEF 21000800            B   312    				ld hl,sector_buffer				004BF3 01000100            B   313    				ld bc,256						004BF7 AF                  B   314    				xor a							004BF8 CD 7D 15 00         B   315    				call os_bchl_memfill			                           B   316    				
004BFC 0600                B   317    				ld b,0							004BFE FD210008 00         B   318    				ld iy,sector_buffer	
004C03 DD7E00              B   319    s_sloop			ld a,(ix)
004C06 FD7700              B   320    				ld (iy),a
004C09 1B                  B   321    				dec de							004C0A 21000000            B   322    				ld hl,0
004C0E AF                  B   323    				xor a
004C0F ED5A                B   324    				adc hl,de
004C11 28 12               B   325    				jr z,s_mbend	
004C13 FD23                B   326    				inc iy							004C15 C5                  B   327    				push bc
004C16 01010000            B   328    				ld bc,1
004C1A DD09                B   329    				add ix,bc						004C1C C1                  B   330    				pop bc							004C1D 20 04               B   331    				jr nz,s_sbok
004C1F 3E84                B   332    				ld a,84h						004C21 B7                  B   333    				or a
004C22 C9                  B   334    				ret
004C23 10 DE               B   335    s_sbok			djnz s_sloop
004C25 AF                  B   336    s_mbend			xor a
004C26 C9                  B   337    				ret
                           B   338    
                           B   339    
                           B   340    
004C27                     B   341    s_sendblock
                           B   342    
004C27 E5                  B   343    				push hl
004C28 D5                  B   344    				push de							004C29 C5                  B   345    				push bc				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 202


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_serial_routines.asm
004C2A 21000800            B   346    				ld hl,sector_buffer			
004C2E 1E00                B   347    				ld e,0
004C30 7E                  B   348    s_sblklp		ld a,(hl)
004C31 CD FE 42 00         B   349    				call send_serial_byte
004C35 23                  B   350    				inc hl
004C36 1D                  B   351    				dec e
004C37 20 F7               B   352    				jr nz,s_sblklp
004C39 11000800            B   353    				ld de,sector_buffer
004C3D 01000000            B   354    				ld bc,0
004C41 CD 23 15 00         B   355    				call crc_checksum
004C45 7D                  B   356    				ld a,l
004C46 CD FE 42 00         B   357    				call send_serial_byte
004C4A 7C                  B   358    				ld a,h
004C4B CD FE 42 00         B   359    				call send_serial_byte
004C4F AF                  B   360    				xor a
004C50 C1                  B   361    s_popall		pop bc
004C51 D1                  B   362    				pop de
004C52 E1                  B   363    				pop hl
004C53 C9                  B   364    				ret
                           B   365    	
                           B   366    
004C54                     B   367    s_waitack
004C54 E5                  B   368    				push hl
004C55 D5                  B   369    				push de
004C56 C5                  B   370    				push bc
004C57 CD C3 42 00         B   371    				call receive_serial_byte		004C5B 20 F3               B   372    				jr nz,s_popall
004C5D 47                  B   373    				ld b,a
004C5E CD C3 42 00         B   374    				call receive_serial_byte
004C62 20 EC               B   375    				jr nz,s_popall
004C64 4F                  B   376    				ld c,a
004C65 264F                B   377    				ld h,'O'
004C67 2E4B                B   378    				ld l,'K'
004C69 AF                  B   379    				xor a
004C6A 52ED42              B   380    				sbc.s hl,bc						004C6D 28 E1               B   381    				jr z,s_popall					                           B   382    			
004C6F 3E85                B   383    				ld a,085h						004C71 B7                  B   384    				or a
004C72 18 DC               B   385    				jr s_popall
                           B   386    
                           B   387    	
                           B   388    ;----------------------------------------------
                           B     0    	include		'prose_fat16_code_v08.asm'
                           B     1    ;----------------------------------------------
                           B     2    ; eZ80 FAT16 File System code for PROSE by Phil
                           B     3    ;----------------------------------------------
                           B     4    ;
                           B     5    ; Changes:
                           B     6    ;
                           B     7    ; 0.08 - Speeded up reading of files (pre-calc 
                           B     8    ;        All routines return with ZF not set if
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 203


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
                           B     9    ;
                           B    10    ; 0.07 - Made compatible with v1.10 drivers (ZF
                           B    11    ; 0.06 - Fixed "fs_get_volume_label"
                           B    12    ; 0.05 - Fixed format command
                           B    13    ; 0.04 - File system error codes are now in the
                           B    14    ; 0.03 - ADL mode
                           B    15    ; 0.02 - removed references to banks, added 24 
                           B    16    ; 0.01 - first version based on FLOS routines v
                           B    17    ;
                           B    18    ; Known limitations:
                           B    19    ; ------------------
                           B    20    ; If a disk full error is returned during a fil
                           B    21    ; Allows a file to be created in root even if t
                           B    22    ;        
                           B    23    ;----------------------------------------------
                           B    24    ;
                           B    25    ; All routines return carry clear / zero flag s
                           B    26    ;
                           B    27    ; If carry set there was a driver error, A = Er
                           B    28    ; Check for "carry set" first!
                           B    29    ; If carry clear, check zero flag. If not set: 
                           B    30    ;
                           B    31    ;					$c1  - Disk full
                           B    32    ;					$c2  - file not found
                           B    33    ;             	    $c3  - (root) dir table is 
                           B    34    ;					$c4  - directory requested 
                           B    35    ;             	    $c5  - cant delete dir, it 
                           B    36    ;					$c6  - not a file
                           B    37    ;					$c7  - file length is zero
                           B    38    ;              	    $c8  - out of memory
                           B    39    ;					$c9  - filename already exi
                           B    40    ;					$ca  - already at root dire
                           B    41    ;                  	$cb  - directory not found
                           B    42    ;					$cc  - requested bytes beyo
                           B    43    ;					$cd  - invalid filename
                           B    44    ;					$ce  - unknown/incorrect di
                           B    45    ;					$cf  - invalid volume
                           B    46    ;                 	$d0  - device not present	                           B    47    ;					$d1  - directory not found	                           B    48    ;                 	$d2  - end of directory lis
                           B    49    ;                 	$d3  - device does not use 
                           B    50    ;                  	$d4  - cant find volume lab
                           B    51    ;                   $d5  - sector out of range
                           B    52    
                           B    53    ;----------------------------------------------
                           B    54    ; Main routines called by external programs
                           B    55    ;----------------------------------------------
                           B    56    
004C74                     B    57    fs_format_device_command
                           B    58    
                           B    59    ; Creates a single partition (truncated to 2GB)
                           B    60    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 204


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
                           B    61    
004C74 3A E0 65 00         B    62    				ld a,(device_count)				004C78 47                  B    63    				ld b,a							004C79 DD21 8A 66 00       B    64    				ld ix,host_device_hardware_info
004C7E 3A DF 65 00         B    65    fdevinfo		ld a,(current_driver)
004C82 DDBE00              B    66    				cp (ix)
004C85 28 09               B    67    				jr z,got_dev_info
004C87 ED3220              B    68    				lea ix,ix+32
004C8A 10 F2               B    69    				djnz fdevinfo
004C8C 3ED0                B    70    				ld a,0d0h						004C8E B7                  B    71    				or a
004C8F C9                  B    72    				ret	
                           B    73    	
004C90 CD 64 57 00         B    74    got_dev_info	call fs_clear_sector_buffer		004C94 11000000            B    75    				ld de,0							004C98 CD 88 4D 00         B    76    form_ws			call set_lba_and_write_sector
004C9C D8                  B    77    				ret c
004C9D 13                  B    78    				inc de
004C9E 7A                  B    79    				ld a,d
004C9F FE03                B    80    				cp 3
004CA1 20 F5               B    81    				jr nz,form_ws
                           B    82    	
004CA3 21 40 5A 00         B    83    				ld hl,bootsector_stub			004CA7 11000800            B    84    				ld de,sector_buffer				004CAB 013F0000            B    85    				ld bc,03fh
004CAF EDB0                B    86    				ldir
                           B    87    	
004CB1 DD7E04              B    88    				ld a,(ix+4)						004CB4 B7                  B    89    				or a
004CB5 20 0C               B    90    				jr nz,above_2gb
004CB7 2100003F            B    91    				ld hl,3f0000h					004CBB DD1701              B    92    				ld de,(ix+1)					004CBE AF                  B    93    				xor a			
004CBF ED52                B    94    				sbc hl,de						004CC1 30 08               B    95    				jr nc,lessthan2gb				004CC3 3E40                B    96    above_2gb		ld a,40h						004CC5 1100003F            B    97    				ld de,3f0000h					004CC9 18 11               B    98    				jr spcvalok
                           B    99    
004CCB DD4E03              B   100    lessthan2gb		ld c,(ix+3)						004CCE 0C                  B   101    				inc c							004CCF 3E01                B   102    spc_loop		ld a,1							004CD1 B9                  B   103    spc_comp		cp c							004CD2 28 08               B   104    				jr z,spcvalok
004CD4 07                  B   105    				rlca
004CD5 FE80                B   106    				cp 080h							004CD7 20 F8               B   107    				jr nz,spc_comp
004CD9 0C                  B   108    				inc c			
004CDA 18 F3               B   109    				jr spc_loop						                           B   110    							
004CDC DD210008 00         B   111    spcvalok		ld ix,sector_buffer
004CE1 DD770D              B   112    				ld (ix+0dh),a					Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 205


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
                           B   113    				
004CE4 CD 9A 15 00         B   114    				call os_get_xde_msb				004CE8 4F                  B   115    				ld c,a							004CE9 B7                  B   116    				or a							004CEA 20 08               B   117    				jr nz,ts_dword					004CEC DD7313              B   118    				ld (ix+13h),e					004CEF DD7214              B   119    				ld (ix+14h),d
004CF2 18 07               B   120    				jr ts_done
004CF4 DD1F20              B   121    ts_dword		ld (ix+20h),de					004CF7 DD362300            B   122    				ld (ix+23h),0
                           B   123    
004CFB EB                  B   124    ts_done			ex de,hl						004CFC 11000000            B   125    				ld de,0						
004D00 DD560D              B   126    				ld d,(ix+0dh)					004D03 01000000            B   127    				ld bc,0							004D07 AF                  B   128    div_tscls		xor a							004D08 ED52                B   129    				sbc hl,de
004D0A 28 05               B   130    				jr z,gotfats
004D0C 38 03               B   131    				jr c,gotfats	
004D0E 03                  B   132    				inc bc
004D0F 18 F6               B   133    				jr div_tscls
004D11 03                  B   134    gotfats			inc bc
004D12 DD7116              B   135    				ld (ix+16h),c					004D15 DD7017              B   136    				ld (ix+17h),b
004D18 ED43 90 5A 00       B   137    				ld (fs_sectors_per_fat),bc
                           B   138    				
004D1D 010055AA            B   139    				ld bc,0aa5500h
004D21 ED43FD09 00         B   140    				ld (sector_buffer+1fdh),bc		004D26 11000000            B   141    				ld de,0
004D2A CD 88 4D 00         B   142    				call set_lba_and_write_sector	004D2E D8                  B   143    				ret c
                           B   144    				
004D2F 21000000            B   145    				ld hl,0
004D33 DD6E0E              B   146    				ld l,(ix+0eh)					004D36 DD660F              B   147    				ld h,(ix+0fh)
004D39 19                  B   148    				add hl,de
004D3A EB                  B   149    				ex de,hl						                           B   150    				
004D3B CD 64 57 00         B   151    				call fs_clear_sector_buffer		004D3F DD3600FF            B   152    				ld (ix+0),0ffh
004D43 DD3601F8            B   153    				ld (ix+1),0f8h
004D47 DD3602FF            B   154    				ld (ix+2),0ffh
004D4B DD3603FF            B   155    				ld (ix+3),0ffh
004D4F CD 88 4D 00         B   156    				call set_lba_and_write_sector	004D53 D8                  B   157    				ret c
                           B   158    
004D54 2A 90 5A 00         B   159    				ld hl,(fs_sectors_per_fat)	
004D58 19                  B   160    				add hl,de
004D59 EB                  B   161    				ex de,hl
004D5A CD 88 4D 00         B   162    				call set_lba_and_write_sector 	004D5E D8                  B   163    				ret c	
                           B   164    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 206


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
004D5F D5                  B   165    				push de							004D60 CD 64 57 00         B   166    				call fs_clear_sector_buffer
004D64 21 96 5A 00         B   167    				ld hl,fs_sought_filename
004D68 11000800            B   168    				ld de,sector_buffer
004D6C 010B0000            B   169    				ld bc,11
004D70 EDB0                B   170    				ldir							004D72 D1                  B   171    				pop de							004D73 DD360B08            B   172    				ld (ix+0bh),8					004D77 DD361821            B   173    				ld (ix+018h),021h				004D7B 2A 90 5A 00         B   174    				ld hl,(fs_sectors_per_fat)		004D7F 19                  B   175    				add hl,de
004D80 EB                  B   176    				ex de,hl
004D81 CD 88 4D 00         B   177    				call set_lba_and_write_sector	004D85 D8                  B   178    				ret c	
                           B   179    			
004D86 AF                  B   180    				xor a							004D87 C9                  B   181    				ret
                           B   182    	
                           B   183    
                           B   184    
004D88                     B   185    set_lba_and_write_sector
                           B   186    
004D88 DDE5                B   187    				push ix
004D8A DD21 BB 67 00       B   188    				ld ix,sector_lba0				004D8F DD1F00              B   189    				ld (ix),de						004D92 DD360300            B   190    				ld (ix+3),0
004D96 DDE1                B   191    				pop ix
004D98 CD 07 5A 00         B   192    				call fs_write_sector
004D9C C9                  B   193    				ret
                           B   194    				
                           B   195    				
                           B   196    ;----------------------------------------------
                           B   197    
004D9D                     B   198    fs_get_partition_info
                           B   199    
                           B   200    ; Set A to partition: $00 to $03
                           B   201    ; On return: If A = $00, xHL = Address of reque
                           B   202    ;            If A = $25, A partition table is n
                           B   203    ;            If A = $13, Disk format is bad 
                           B   204    ;            If carry flag set, there was a har
                           B   205    
                           B   206    
004D9D 32 0D 67 00         B   207    				ld (partition_temp),a
                           B   208    				
004DA1 21000000            B   209    				ld hl,0							004DA5 22 BB 67 00         B   210    				ld (sector_lba0),hl
004DA9 7D                  B   211    				ld a,l
004DAA 32 BE 67 00         B   212    				ld (sector_lba3),a
004DAE CD DE 59 00         B   213    				call fs_read_sector
004DB2 D8                  B   214    				ret c
                           B   215    			
004DB3 CD EE 4D 00         B   216    				call fs_check_fat_sig			Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 207


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
004DB7 20 42               B   217    				jr nz,formbad
                           B   218    			
004DB9 CD DF 4D 00         B   219    				call check_fat16_id				004DBD 28 1C               B   220    				jr z,at_pbs						                           B   221    				
004DBF 3AC20900            B   222    				ld a,(sector_buffer+01c2h)		004DC3 E604                B   223    				and 4							004DC5 28 34               B   224    				jr z,formbad	
004DC7 11000000            B   225    				ld de,0
004DCB 3A 0D 67 00         B   226    				ld a,(partition_temp)
004DCF 5F                  B   227    				ld e,a
004DD0 1610                B   228    				ld d,16
004DD2 ED5C                B   229    				mlt de
004DD4 21BE0900            B   230    				ld hl,sector_buffer+01beh
004DD8 19                  B   231    				add hl,de						004DD9 AF                  B   232    				xor a
004DDA C9                  B   233    				ret
                           B   234    					
004DDB 3ED3                B   235    at_pbs			ld a,0d3h						004DDD B7                  B   236    				or a
004DDE C9                  B   237    				ret
                           B   238    
                           B   239    
                           B   240    
004DDF                     B   241    check_fat16_id
                           B   242    		
004DDF 21360800            B   243    				ld hl,sector_buffer+036h		004DE3 11 98 5F 00         B   244    				ld de,fat16_txt			
004DE7 0605                B   245    				ld b,5
004DE9 CD 63 12 00         B   246    				call os_compare_strings
004DED C9                  B   247    				ret
                           B   248    				
                           B   249    ;----------------------------------------------
                           B   250    
                           B   251    
004DEE                     B   252    fs_check_fat_sig
                           B   253    
004DEE 2AFE0900            B   254    				ld hl,(sector_buffer+01feh)		004DF2 1155AA00            B   255    				ld de,0aa55h
004DF6 AF                  B   256    				xor a
004DF7 52ED52              B   257    				sbc.s hl,de						004DFA C9                  B   258    				ret
                           B   259    			
                           B   260    			
                           B   261    			
004DFB 3ECE                B   262    formbad			ld a,0ceh						004DFD B7                  B   263    				or a
004DFE C9                  B   264    				ret
                           B   265    
                           B   266    ;----------------------------------------------
                           B   267    
                           B   268    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 208


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
004DFF                     B   269    fs_check_disk_format
                           B   270    
                           B   271    ; ensures disk is FAT16, sets up constants..
                           B   272    	
004DFF C5                  B   273    				push bc
004E00 D5                  B   274    				push de
004E01 E5                  B   275    				push hl
004E02 CD 0A 4E 00         B   276    				call go_checkf
004E06 E1                  B   277    				pop hl
004E07 D1                  B   278    				pop de
004E08 C1                  B   279    				pop bc
004E09 C9                  B   280    				ret
                           B   281    				
004E0A CD D1 4E 00         B   282    go_checkf		call fs_read_partition_bootsect
004E0E D8                  B   283    				ret c
004E0F B7                  B   284    				or a
004E10 C0                  B   285    				ret nz
                           B   286    				
004E11 CD EE 4D 00         B   287    				call fs_check_fat_sig			004E15 20 E4               B   288    				jr nz,formbad		
                           B   289    			
004E17 CD DF 4D 00         B   290    				call check_fat16_id				004E1B 20 DE               B   291    				jr nz,formbad
                           B   292    			
004E1D DD210008 00         B   293    				ld ix,sector_buffer
004E22 DD270B              B   294    				ld hl,(ix+0bh)					004E25 11000200            B   295    				ld de,512						004E29 AF                  B   296    				xor a
004E2A 52ED52              B   297    				sbc.s hl,de						004E2D 20 CC               B   298    				jr nz,formbad
                           B   299    			
004E2F DD7E0D              B   300    				ld a,(ix+0dh)					004E32 32 7F 5A 00         B   301    				ld (fs_cluster_size),a
004E36 CB27                B   302    				sla a
004E38 32 81 5A 00         B   303    				ld (fs_bytes_per_cluster+1),a
                           B   304    							
004E3C 21000000            B   305    				ld hl,0
004E40 DD6E0E              B   306    				ld l,(ix+0eh)					004E43 DD660F              B   307    				ld h,(ix+0fh)
004E46 22 83 5A 00         B   308    				ld (fs_fat1_position),hl		004E4A 11000000            B   309    				ld de,0
004E4E DD5E16              B   310    				ld e,(ix+16h)					004E51 DD5617              B   311    				ld d,(ix+17h)
004E54 ED53 90 5A 00       B   312    				ld (fs_sectors_per_fat),de
004E59 19                  B   313    				add hl,de
004E5A 22 86 5A 00         B   314    				ld (fs_fat2_position),hl		004E5E 19                  B   315    				add hl,de
004E5F 22 89 5A 00         B   316    				ld (fs_root_dir_position),hl 	004E63 EB                  B   317    				ex de,hl
004E64 DD6E11              B   318    				ld l,(ix+11h)					004E67 DD6612              B   319    				ld h,(ix+12h)					004E6A 7C                  B   320    				ld a,h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 209


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
004E6B B5                  B   321    				or l
004E6C 28 8D               B   322    				jr z,formbad					004E6E 29                  B   323    				add hl,hl						004E6F 29                  B   324    				add hl,hl						004E70 29                  B   325    				add hl,hl
004E71 29                  B   326    				add hl,hl
004E72 EB                  B   327    				ex de,hl
004E73 7A                  B   328    				ld a,d
004E74 32 8F 5A 00         B   329    				ld (fs_root_dir_sectors),a		004E78 01000000            B   330    				ld bc,0
004E7C 4A                  B   331    				ld c,d
004E7D 09                  B   332    				add hl,bc				
004E7E 22 8C 5A 00         B   333    				ld (fs_data_area),hl			                           B   334    												004E82 21000000            B   335    				ld hl,0
004E86 01000000            B   336    				ld bc,0
004E8A DD4E22              B   337    				ld c,(ix+022h)					004E8D DD4623              B   338    				ld b,(ix+023h)
004E90 DD6E13              B   339    				ld l,(ix+013h)					004E93 DD6614              B   340    				ld h,(ix+014h)
004E96 7C                  B   341    				ld a,h							004E97 B5                  B   342    				or l
004E98 20 06               B   343    				jr nz,got_tsfbs
004E9A DD6E20              B   344    				ld l,(ix+020h)					004E9D DD6621              B   345    				ld h,(ix+021h)
004EA0 ED5B 8C 5A 00       B   346    got_tsfbs 		ld de,(fs_data_area)
004EA5 AF                  B   347    				xor a							004EA6 52ED52              B   348    				sbc.s hl,de						004EA9 30 02               B   349    				jr nc,nomxcb
004EAB 520B                B   350    				dec.s bc
004EAD 3A 7F 5A 00         B   351    nomxcb			ld a,(fs_cluster_size)
004EB1 CB3F                B   352    fmaxcl			srl a
004EB3 28 08               B   353    				jr z,got_cmaxc					004EB5 CB39                B   354    				srl c				
004EB7 CB1C                B   355    				rr h
004EB9 CB1D                B   356    				rr l
004EBB 18 F4               B   357    				jr fmaxcl
004EBD E5                  B   358    got_cmaxc		push hl							004EBE 11F0FF00            B   359    				ld de,0fff0h
004EC2 AF                  B   360    				xor a
004EC3 52ED52              B   361    				sbc.s hl,de						004EC6 38 02               B   362    				jr c,cmaxok
004EC8 E1                  B   363    				pop hl
004EC9 D5                  B   364    				push de
004ECA E1                  B   365    cmaxok			pop hl
004ECB 22 93 5A 00         B   366    				ld (fs_max_data_clusters),hl
004ECF AF                  B   367    				xor a
004ED0 C9                  B   368    				ret				
                           B   369    
                           B   370    ;----------------------------------------------
                           B   371    
004ED1                     B   372    fs_read_partition_bootsector
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 210


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
                           B   373    
004ED1 CD 95 1A 00         B   374    				call fs_calc_volume_offset		004ED5 21 0A 66 00         B   375    				ld hl,volume_mount_list
004ED9 19                  B   376    				add hl,de
004EDA 7E                  B   377    				ld a,(hl)
004EDB B7                  B   378    				or a							004EDC 20 04               B   379    				jr nz,fs_volpre
004EDE 3ECF                B   380    				ld a,0cfh						004EE0 B7                  B   381    				or a
004EE1 C9                  B   382    				ret
                           B   383    			
004EE2 11080000            B   384    fs_volpre		ld de,8							004EE6 19                  B   385    				add hl,de
004EE7 11 BB 67 00         B   386    				ld de,sector_lba0
004EEB 01040000            B   387    				ld bc,4
004EEF EDB0                B   388    				ldir
004EF1 CD DE 59 00         B   389    				call fs_read_sector
004EF5 C9                  B   390    				ret	
                           B   391    
                           B   392    ;----------------------------------------------
                           B   393    
004EF6                     B   394    fs_calc_free_space
                           B   395    
                           B   396    ;returns free space in KB in HL:DE
                           B   397    
004EF6 ED5B 93 5A 00       B   398    				ld de,(fs_max_data_clusters)
004EFB 13                  B   399    				inc de
004EFC 13                  B   400    				inc de							004EFD D5                  B   401    				push de
004EFE DDE1                B   402    				pop ix
                           B   403    			
004F00 AF                  B   404    				xor a
004F01 32 D8 5A 00         B   405    cfs_lp2			ld (fs_working_sector),a
004F05 2A 83 5A 00         B   406    				ld hl,(fs_fat1_position)
004F09 CD B4 59 00         B   407    				call set_abs_lba_and_read_secto
004F0D D8                  B   408    				ret c
                           B   409    				
004F0E 21000800            B   410    				ld hl,sector_buffer
004F12 0600                B   411    				ld b,0
004F14 AF                  B   412    cfs_lp1			xor a
004F15 B6                  B   413    				or a,(hl)						004F16 23                  B   414    				inc hl							004F17 20 03               B   415    				jr nz,cfs_ciu					004F19 B6                  B   416    				or a,(hl)
004F1A 28 02               B   417    				jr z,cfs_ddcc
004F1C DD2B                B   418    cfs_ciu			dec ix							004F1E 23                  B   419    cfs_ddcc		inc hl
004F1F 1B                  B   420    				dec de
004F20 7A                  B   421    				ld a,d
004F21 B3                  B   422    				or e
004F22 28 09               B   423    				jr z,cfs_ok						004F24 10 EE               B   424    				djnz cfs_lp1
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 211


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
004F26 3A D8 5A 00         B   425    				ld a,(fs_working_sector)
004F2A 3C                  B   426    				inc a
004F2B 18 D4               B   427    				jr cfs_lp2
                           B   428    				
004F2D 3A 7F 5A 00         B   429    cfs_ok			ld a,(fs_cluster_size)			004F31 CB3F                B   430    cltoslp			srl a
004F33 28 04               B   431    				jr z,powdone
004F35 DD29                B   432    				add ix,ix
004F37 18 F8               B   433    				jr cltoslp	
004F39 FD21 D7 67 00       B   434    powdone			ld iy,xrr_temp
004F3E FD3E00              B   435    				ld (iy),ix						004F41 FDCB023E            B   436    				srl (iy+2)
004F45 FDCB011E            B   437    				rr (iy+1)
004F49 FDCB001E            B   438    				rr (iy+0)						004F4D FD1700              B   439    				ld de,(iy)						004F50 AF                  B   440    				xor a
004F51 C9                  B   441    				ret
                           B   442    
                           B   443    ;----------------------------------------------
                           B   444    
004F52                     B   445    fs_change_dir_command
                           B   446    
                           B   447    ; INPUT: HL = directory name ascii (zero/space 
                           B   448    			
                           B   449    			
004F52 CD 76 57 00         B   450    				call fs_find_filename			004F56 D8                  B   451    				ret c							004F57 FEC2                B   452    				cp 0c2h							004F59 20 04               B   453    				jr nz,founddir
004F5B 3ED1                B   454    				ld a,0d1h						004F5D B7                  B   455    				or a
004F5E C9                  B   456    				ret
                           B   457    
004F5F DDCB0B66            B   458    founddir		bit 4,(ix+0bh)
004F63 20 04               B   459    				jr nz,fs_isadir
004F65 3EC4                B   460    				ld a,0c4h
004F67 B7                  B   461    				or a
004F68 C9                  B   462    				ret
                           B   463    				
004F69 11000000            B   464    fs_isadir		ld de,0
004F6D DD5E1A              B   465    				ld e,(ix+01ah)
004F70 DD561B              B   466    				ld d,(ix+01bh)					004F73 CD 67 1A 00         B   467    				call fs_update_dir_cluster
004F77 AF                  B   468    				xor a
004F78 C9                  B   469    				ret
                           B   470    
                           B   471    
                           B   472    ;----------------------------------------------
                           B   473    	
                           B   474    	
004F79                     B   475    fs_goto_root_dir_command
                           B   476    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 212


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
004F79 D5                  B   477    				push de
004F7A 11000000            B   478    				ld de,0
004F7E CD 67 1A 00         B   479    				call fs_update_dir_cluster
004F82 D1                  B   480    				pop de
004F83 AF                  B   481    				xor a
004F84 C9                  B   482    				ret
                           B   483    
                           B   484    ;----------------------------------------------
                           B   485    	
                           B   486    	
004F85                     B   487    fs_parent_dir_command
                           B   488    
004F85 CD 5B 1A 00         B   489    				call fs_get_dir_cluster
004F89 7A                  B   490    				ld a,d
004F8A B3                  B   491    				or e
004F8B 20 03               B   492    				jr nz,pdnaroot
004F8D 3ECA                B   493    				ld a,0cah						004F8F C9                  B   494    				ret
004F90 212E2E20            B   495    pdnaroot		ld hl,0202e2eh					004F94 22 96 5A 00         B   496    				ld (fs_sought_filename),hl		004F98 21 99 5A 00         B   497    				ld hl,fs_sought_filename+3		004F9C 3E20                B   498    				ld a,32
004F9E 01080000            B   499    				ld bc,8
004FA2 CD 7D 15 00         B   500    				call os_bchl_memfill
004FA6 18 AA               B   501    				jr fs_change_dir_command
                           B   502    				
                           B   503    		
                           B   504    ;----------------------------------------------
                           B   505    		
004FA8                     B   506    fs_open_file_command
                           B   507    
                           B   508    ; INPUT: xHL = directory name ascii (zero/space
                           B   509    ; OUTPUT: C:xDE  = File length
                           B   510    ;            HL  = Start cluster of file
                           B   511    ;            Internal vars (file pointer reset 
                           B   512    
                           B   513    			
004FA8 CD 76 57 00         B   514    				call fs_find_filename			004FAC D8                  B   515    				ret c							004FAD C0                  B   516    				ret nz							                           B   517    								
004FAE 3EC6                B   518    				ld a,0c6h						004FB0 DDCB0B66            B   519    				bit 4,(ix+0bh)
004FB4 C0                  B   520    				ret nz
                           B   521    
004FB5 AF                  B   522    				xor a
004FB6 32 EC 5A 00         B   523    				ld (fs_filepointer_valid),a		004FBA 21000000            B   524    				ld hl,0
004FBE 22 BA 5A 00         B   525    				ld (fs_file_pointer),hl			004FC2 32 BD 5A 00         B   526    				ld (fs_file_pointer+3),a		004FC6 22 F8 5A 00         B   527    				ld (fs_sector_last_read_lba0),h
004FCA 32 FB 5A 00         B   528    				ld (fs_sector_last_read_lba0+3)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 213


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
                           B   529    
004FCE DD171C              B   530    				ld de,(ix+01ch)
004FD1 D5                  B   531    				push de
004FD2 E1                  B   532    				pop hl
004FD3 DD4E1F              B   533    				ld c,(ix+01fh)					004FD6 ED53 BE 5A 00       B   534    				ld (fs_file_length),de			004FDB 79                  B   535    				ld a,c
004FDC 32 C1 5A 00         B   536    				ld (fs_file_length+3),a			004FE0 B7                  B   537    				or a							004FE1 28 04               B   538    				jr z,fs_dflsm					004FE3 21FFFFFF            B   539    				ld hl,0ffffffh
004FE7 22 C6 5A 00         B   540    fs_dflsm		ld (fs_file_transfer_length),hl
                           B   541    				
004FEB 21000000            B   542    				ld hl,0
004FEF DD6E1A              B   543    				ld l,(ix+01ah)		
004FF2 DD661B              B   544    				ld h,(ix+01bh)
004FF5 22 C9 5A 00         B   545    				ld (fs_file_start_cluster),hl	                           B   546    				
004FF9 AF                  B   547    				xor a
004FFA C9                  B   548    				ret
                           B   549    
                           B   550    
                           B   551    ;----------------------------------------------
                           B   552    
004FFB                     B   553    fs_read_data_command		
                           B   554    
                           B   555    ;*******************************************
                           B   556    ;*** 'fs_open_file' must be called first ***
                           B   557    ;*******************************************
                           B   558    		
004FFB CD 3A 51 00         B   559    fs_load			call fs_test_transfer_length	004FFF 20 04               B   560    				jr nz,fs_btrok
                           B   561    
005001 3EC7                B   562    fs_fliz			ld a,0c7h						005003 B7                  B   563    				or a
005004 C9                  B   564    				ret
                           B   565    			 
005005 2A CF 5A 00         B   566    fs_btrok		ld hl,(fs_ez80_address)			005009 22 D2 5A 00         B   567    				ld (fs_ez80_working_address),hl
                           B   568    			
00500D 2A BA 5A 00         B   569    				ld hl,(fs_file_pointer)			005011 3A BD 5A 00         B   570    				ld a,(fs_file_pointer+3)		005015 11010000            B   571    				ld de,1							005019 19                  B   572    				add hl,de
00501A CE00                B   573    				adc a,0
00501C 4F                  B   574    				ld c,a
00501D EB                  B   575    				ex de,hl						00501E 2A BE 5A 00         B   576    				ld hl,(fs_file_length)			005022 3A C1 5A 00         B   577    				ld a,(fs_file_length+3)			005026 B7                  B   578    				or a							005027 ED52                B   579    				sbc hl,de						005029 99                  B   580    				sbc a,c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 214


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
00502A DA 8B 50 00         B   581    				jp c,fs_rd_eof
                           B   582    					
00502E 3A EC 5A 00         B   583    fs_fpok			ld a,(fs_filepointer_valid)		005032 B7                  B   584    				or a							005033 20 46               B   585    				jr nz,fs_get_sector_if_necessar
                           B   586    			
005035 3E01                B   587    seek_strt		ld a,1
005037 32 EC 5A 00         B   588    				ld (fs_filepointer_valid),a
00503B 2A C9 5A 00         B   589    				ld hl,(fs_file_start_cluster)	00503F 22 CC 5A 00         B   590    				ld (fs_file_working_cluster),hl
                           B   591    			
005043 3A BD 5A 00         B   592    				ld a,(fs_file_pointer+3)		005047 2A BA 5A 00         B   593    				ld hl,(fs_file_pointer)			00504B ED4B 80 5A 00       B   594    fs_fpblp		ld bc,(fs_bytes_per_cluster)
005050 AF                  B   595    				xor a
005051 ED42                B   596    				sbc hl,bc						005053 DE00                B   597    				sbc a,0
005055 38 14               B   598    				jr c,fs_fpgbo
005057 E5                  B   599    				push hl				
005058 2A CC 5A 00         B   600    				ld hl,(fs_file_working_cluster)
00505C CD 86 58 00         B   601    				call get_fat_entry_for_cluster
005060 30 02               B   602    				jr nc,fs_ghok					005062 E1                  B   603    				pop hl
005063 C9                  B   604    				ret
005064 22 CC 5A 00         B   605    fs_ghok			ld (fs_file_working_cluster),hl
005068 E1                  B   606    				pop hl
005069 18 E0               B   607    				jr fs_fpblp
                           B   608    			
00506B 09                  B   609    fs_fpgbo		add hl,bc						00506C 7C                  B   610    				ld a,h
00506D CB3F                B   611    				srl a							00506F 32 ED 5A 00         B   612    				ld (fs_sector_pos_cnt),a
005073 7C                  B   613    				ld a,h
005074 E601                B   614    				and 01h
005076 67                  B   615    				ld h,a
005077 22 D5 5A 00         B   616    				ld (fs_in_sector_offset),hl		                           B   617    
                           B   618    				
                           B   619    
00507B                     B   620    fs_get_sector_if_necessary
                           B   621    				
00507B CD 3A 51 00         B   622    				call fs_test_transfer_length	00507F 28 64               B   623    				jr z,fs_read_done	
                           B   624    				
005081 2A CC 5A 00         B   625    				ld hl,(fs_file_working_cluster)
005085 CD 2F 56 00         B   626    				call fs_compare_hl_fff8			005089 38 04               B   627    				jr c,fs_rd_noteof		
00508B 3ECC                B   628    fs_rd_eof		ld a,0cch						00508D B7                  B   629    				or a
00508E C9                  B   630    				ret
                           B   631    				
00508F 2A CC 5A 00         B   632    fs_rd_noteof	ld hl,(fs_file_working_cluster)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 215


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
005093 3A ED 5A 00         B   633    				ld a,(fs_sector_pos_cnt)		005097 CD 5D 59 00         B   634    				call cluster_and_offset_to_lba
00509B CD 23 5A 00         B   635    				call fs_is_same_sector_in_buffe
00509F 28 05               B   636    				jr z,fs_same_sector
0050A1 CD DE 59 00         B   637    				call fs_read_sector				0050A5 D8                  B   638    				ret c							                           B   639    			
0050A6 21000200            B   640    fs_same_sector	ld hl,512
0050AA ED5B D5 5A 00       B   641    				ld de,(fs_in_sector_offset)
0050AF AF                  B   642    				xor a
0050B0 ED52                B   643    				sbc hl,de						0050B2 E5                  B   644    				push hl
0050B3 C1                  B   645    				pop bc							                           B   646    				
0050B4 ED5B C6 5A 00       B   647    				ld de,(fs_file_transfer_length)
0050B9 AF                  B   648    				xor a
0050BA ED52                B   649    				sbc hl,de
0050BC 38 02               B   650    				jr c,fs_got_bc					0050BE D5                  B   651    				push de							0050BF C1                  B   652    				pop bc
                           B   653    
0050C0 21000800            B   654    fs_got_bc		ld hl,sector_buffer
0050C4 ED5B D5 5A 00       B   655    				ld de,(fs_in_sector_offset)		0050C9 19                  B   656    				add hl,de
0050CA ED5B D2 5A 00       B   657    				ld de,(fs_ez80_working_address)
0050CF C5                  B   658    				push bc
0050D0 EDB0                B   659    				ldir							0050D2 ED53 D2 5A 00       B   660    				ld (fs_ez80_working_address),de
0050D7 C1                  B   661    				pop bc
0050D8 CD 0E 51 00         B   662    				call fs_adjust_fp_tl_so
0050DC 2A D5 5A 00         B   663    				ld hl,(fs_in_sector_offset)
0050E0 7C                  B   664    				ld a,h
0050E1 FE02                B   665    				cp 02h							0050E3 28 02               B   666    				jr z,fs_new_sec
0050E5 AF                  B   667    fs_read_done	xor a
0050E6 C9                  B   668    				ret
                           B   669    
0050E7 21000000            B   670    fs_new_sec		ld hl,0
0050EB 22 D5 5A 00         B   671    				ld (fs_in_sector_offset),hl		0050EF 21 ED 5A 00         B   672    				ld hl,fs_sector_pos_cnt			0050F3 34                  B   673    				inc (hl)
0050F4 3A 7F 5A 00         B   674    				ld a,(fs_cluster_size)
0050F8 BE                  B   675    				cp (hl)
0050F9 20 80               B   676    				jr nz,fs_get_sector_if_necessar
                           B   677    				
0050FB 3600                B   678    				ld (hl),0						0050FD 2A CC 5A 00         B   679    				ld hl,(fs_file_working_cluster)
005101 CD 86 58 00         B   680    				call get_fat_entry_for_cluster	005105 D8                  B   681    				ret c							005106 22 CC 5A 00         B   682    				ld (fs_file_working_cluster),hl
00510A C3 7B 50 00         B   683    				jr fs_get_sector_if_necessary
                           B   684    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 216


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
                           B   685    ;----------------------------------------------
                           B   686    
00510E                     B   687    fs_adjust_fp_tl_so
                           B   688    
                           B   689    ; advance / reduce by BC
                           B   690    
00510E C5                  B   691    				push bc
00510F E5                  B   692    				push hl
005110 2A BA 5A 00         B   693    				ld hl,(fs_file_pointer)			005114 09                  B   694    				add hl,bc
005115 22 BA 5A 00         B   695    				ld (fs_file_pointer),hl			005119 3A BD 5A 00         B   696    				ld a,(fs_file_pointer+3)		00511D CE00                B   697    				adc a,0
00511F 32 BA 5A 00         B   698    				ld (fs_file_pointer),a		
                           B   699    				
005123 2A C6 5A 00         B   700    				ld hl,(fs_file_transfer_length)
005127 AF                  B   701    				xor a
005128 ED42                B   702    				sbc hl,bc
00512A 22 C6 5A 00         B   703    				ld (fs_file_transfer_length),hl
                           B   704    				
00512E 2A D5 5A 00         B   705    				ld hl,(fs_in_sector_offset)
005132 09                  B   706    				add hl,bc
005133 22 D5 5A 00         B   707    				ld (fs_in_sector_offset),hl
                           B   708    				
005137 E1                  B   709    				pop hl
005138 C1                  B   710    				pop bc
005139 C9                  B   711    				ret
                           B   712    				
                           B   713    				
00513A                     B   714    fs_test_transfer_length
                           B   715    				
00513A C5                  B   716    				push bc
00513B E5                  B   717    				push hl
00513C 21000000            B   718    				ld hl,0
005140 ED4B C6 5A 00       B   719    				ld bc,(fs_file_transfer_length)
005145 AF                  B   720    				xor a
005146 ED4A                B   721    				adc hl,bc
005148 E1                  B   722    				pop hl
005149 C1                  B   723    				pop bc
00514A C9                  B   724    				ret
                           B   725    				
                           B   726    ;----------------------------------------------
                           B   727    
00514B                     B   728    fs_make_dir_command		
                           B   729    				
00514B CD 76 57 00         B   730    				call fs_find_filename			00514F D8                  B   731    				ret c
005150 FEC2                B   732    				cp 0c2h							005152 28 04               B   733    				jr z,mdirfnde
005154 3EC9                B   734    				ld a,0c9h						005156 B7                  B   735    				or a
005157 C9                  B   736    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 217


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
                           B   737    			
005158 CD 3C 56 00         B   738    mdirfnde		call fs_find_free_cluster		00515C D8                  B   739    				ret c							00515D C0                  B   740    				ret nz							                           B   741    							
00515E 2A DC 5A 00         B   742    				ld hl,(fs_free_cluster)
005162 22 DF 5A 00         B   743    				ld (fs_new_file_cluster),hl
                           B   744    			
005166 CD 8D 56 00         B   745    				call fs_find_free_dir_entry		00516A D8                  B   746    				ret c							00516B C0                  B   747    				ret nz							                           B   748    			
00516C DDE5                B   749    				push ix							00516E D1                  B   750    				pop de
00516F 21 96 5A 00         B   751    				ld hl,fs_sought_filename
005173 010B0000            B   752    				ld bc,11
005177 EDB0                B   753    				ldir
005179 AF                  B   754    				xor a							00517A 0615                B   755    				ld b,21
00517C 12                  B   756    clrdiren		ld (de),a
00517D 13                  B   757    				inc de
00517E 10 FC               B   758    				djnz clrdiren
005180 DD360B10            B   759    				ld (ix+0bh),010h				005184 DD361821            B   760    				ld (ix+018h),021h				005188 ED5B DF 5A 00       B   761    				ld de,(fs_new_file_cluster)
00518D DD731A              B   762    				ld (ix+01ah),e					005190 DD721B              B   763    				ld (ix+01bh),d
005193 CD 07 5A 00         B   764    				call fs_write_sector			005197 D8                  B   765    				ret c							                           B   766    				
005198 CD 64 57 00         B   767    				call fs_clear_sector_buffer
00519C DD210008 00         B   768    				ld ix,sector_buffer				0051A1 DD36002E            B   769    				ld (ix+00h),02eh				0051A5 DD360120            B   770    				ld (ix+01h),020h
0051A9 DD36202E            B   771    				ld (ix+020h),02eh
0051AD DD36212E            B   772    				ld (ix+021h),02eh
0051B1 DD360B10            B   773    				ld (ix+0bh),010h
0051B5 DD362B10            B   774    				ld (ix+02bh),010h
0051B9 ED5B DF 5A 00       B   775    				ld de,(fs_new_file_cluster)		0051BE DD731A              B   776    				ld (ix+01ah),e
0051C1 DD721B              B   777    				ld (ix+01bh),d
0051C4 CD 5B 1A 00         B   778    				call fs_get_dir_cluster			0051C8 DD733A              B   779    				ld (ix+03ah),e
0051CB DD723B              B   780    				ld (ix+03bh),d
0051CE DD361821            B   781    				ld (ix+018h),021h				0051D2 DD363821            B   782    				ld (ix+038h),021h				0051D6 0609                B   783    				ld b,9
0051D8 DD360220            B   784    mndelp			ld (ix+002h),32
0051DC DD362220            B   785    				ld (ix+022h),32
0051E0 DD23                B   786    				inc ix
0051E2 10 F4               B   787    				djnz mndelp
0051E4 2A DF 5A 00         B   788    				ld hl,(fs_new_file_cluster)		Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 218


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
0051E8 AF                  B   789    				xor a
0051E9 CD 5D 59 00         B   790    				call cluster_and_offset_to_lba
0051ED CD 07 5A 00         B   791    				call fs_write_sector
0051F1 D8                  B   792    				ret c							                           B   793    			
0051F2 CD 64 57 00         B   794    				call fs_clear_sector_buffer		0051F6 AF                  B   795    				xor a
0051F7 3C                  B   796    wroslp			inc a
0051F8 32 D8 5A 00         B   797    				ld (fs_working_sector),a
0051FC 21 7F 5A 00         B   798    				ld hl,fs_cluster_size
005200 BE                  B   799    				cp (hl)
005201 28 13               B   800    				jr z,allsclr
005203 2A DF 5A 00         B   801    				ld hl,(fs_new_file_cluster)
005207 CD 5D 59 00         B   802    				call cluster_and_offset_to_lba
00520B CD 07 5A 00         B   803    				call fs_write_sector
00520F D8                  B   804    				ret c
005210 3A D8 5A 00         B   805    				ld a,(fs_working_sector)
005214 18 E1               B   806    				jr wroslp
                           B   807    			
005216 2A DF 5A 00         B   808    allsclr			ld hl,(fs_new_file_cluster)		00521A 11FFFF00            B   809    				ld de,0ffffh
00521E CD B2 58 00         B   810    				call update_fat_entry_for_clust
005222 AF                  B   811    				xor a
005223 C9                  B   812    				ret
                           B   813    
                           B   814    
                           B   815    
                           B   816    ;----------------------------------------------
                           B   817    
005224                     B   818    fs_delete_dir_command
                           B   819    
005224 CD 76 57 00         B   820    				call fs_find_filename			005228 D8                  B   821    				ret c
005229 28 04               B   822    				jr z,ddc_gotd
00522B 3ED1                B   823    				ld a,0d1h						00522D B7                  B   824    				or a
00522E C9                  B   825    				ret
                           B   826    				
00522F DDCB0B66            B   827    ddc_gotd		bit 4,(ix+0bh)					005233 20 04               B   828    				jr nz,okdeldir
005235 3EC4                B   829    				ld a,0c4h						005237 B7                  B   830    				or a
005238 C9                  B   831    				ret
                           B   832    				
005239 DD22 E2 5A 00       B   833    okdeldir		ld (fs_fname_in_sector_addr),ix
00523E CD BC 59 00         B   834    				call backup_sector_lba
005242 DD6E1A              B   835    				ld l,(ix+01ah)					005245 DD661B              B   836    				ld h,(ix+01bh)
                           B   837    				
005248 3A 7F 5A 00         B   838    fs_ddecl		ld a,(fs_cluster_size)
00524C 47                  B   839    				ld b,a							00524D 0E00                B   840    				ld c,0			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 219


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
00524F 79                  B   841    fs_cne2 		ld a,c
005250 CD 5D 59 00         B   842    				call cluster_and_offset_to_lba
005254 CD DE 59 00         B   843    				call fs_read_sector
005258 D8                  B   844    				ret c							                           B   845    				
005259 C5                  B   846    				push bc
00525A 0610                B   847    				ld b,16							00525C DD210008 00         B   848    				ld ix,sector_buffer
005261 11200000            B   849    				ld de,020h
005265 DD7E00              B   850    fs_cne1			ld a,(ix)
005268 B7                  B   851    				or a
005269 28 0D               B   852    				jr z,fs_chnde
00526B FEE5                B   853    				cp 0e5h
00526D 28 09               B   854    				jr z,fs_chnde
00526F FE2E                B   855    				cp '.'
005271 28 05               B   856    				jr z,fs_chnde
005273 C1                  B   857    				pop bc
005274 3EC5                B   858    				ld a,0c5h						005276 B7                  B   859    				or a
005277 C9                  B   860    				ret
                           B   861    			
005278 DD19                B   862    fs_chnde		add ix,de
00527A 10 E9               B   863    				djnz fs_cne1
00527C C1                  B   864    				pop bc
00527D 0C                  B   865    				inc c
00527E 10 CF               B   866    				djnz fs_cne2
                           B   867    			
005280 CD 86 58 00         B   868    				call get_fat_entry_for_cluster	005284 D8                  B   869    				ret c
005285 CD 2F 56 00         B   870    				call fs_compare_hl_fff8
005289 38 BD               B   871    				jr c,fs_ddecl
                           B   872    			
00528B CD D1 59 00         B   873    dir_empty		call restore_sector_lba			00528F CD DE 59 00         B   874    				call fs_read_sector
005293 D8                  B   875    				ret c							005294 2A E2 5A 00         B   876    				ld hl,(fs_fname_in_sector_addr)
005298 36E5                B   877    fs_delco		ld (hl),0e5h					00529A CD 07 5A 00         B   878    				call fs_write_sector
00529E D8                  B   879    				ret c
                           B   880    			
00529F E5                  B   881    				push hl
0052A0 DDE1                B   882    				pop ix
0052A2 DD6E1A              B   883    				ld l,(ix+01ah)
0052A5 DD661B              B   884    				ld h,(ix+01bh)
0052A8 22 D9 5A 00         B   885    				ld (fs_working_cluster),hl
0052AC 7C                  B   886    				ld a,h							0052AD B5                  B   887    				or l							0052AE C8                  B   888    				ret z							                           B   889    				
0052AF 2A D9 5A 00         B   890    clrfatlp		ld hl,(fs_working_cluster)
0052B3 CD 86 58 00         B   891    				call get_fat_entry_for_cluster
0052B7 D8                  B   892    				ret c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 220


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
0052B8 EB                  B   893    				ex de,hl
                           B   894    				
0052B9 2A D9 5A 00         B   895    				ld hl,(fs_working_cluster)
0052BD ED53 D9 5A 00       B   896    				ld (fs_working_cluster),de
0052C2 11000000            B   897    				ld de,0
0052C6 CD B2 58 00         B   898    				call update_fat_entry_for_clust
0052CA D8                  B   899    				ret c
                           B   900    				
0052CB CD 2F 56 00         B   901    				call fs_compare_hl_fff8			0052CF 38 DE               B   902    				jr c,clrfatlp
0052D1 AF                  B   903    				xor a
0052D2 C9                  B   904    				ret
                           B   905    
                           B   906    
                           B   907    ;----------------------------------------------
                           B   908    
0052D3                     B   909    fs_create_file_command
                           B   910    
                           B   911    ; Note: As per FAT standard, creating a file (0
                           B   912    ; only a directory entry (FAT is only updated w
                           B   913    
0052D3 CD 76 57 00         B   914    				call fs_find_filename			0052D7 D8                  B   915    				ret c
0052D8 FEC2                B   916    				cp 0c2h							0052DA 28 04               B   917    				jr z,mfilefnde
                           B   918    				
0052DC 3EC9                B   919    				ld a,0c9h						0052DE B7                  B   920    				or a
0052DF C9                  B   921    				ret
                           B   922    			
0052E0 CD 8D 56 00         B   923    mfilefnde		call fs_find_free_dir_entry		0052E4 D8                  B   924    				ret c							0052E5 C0                  B   925    				ret nz							                           B   926    			
0052E6 DDE5                B   927    				push ix							0052E8 D1                  B   928    				pop de
0052E9 21 96 5A 00         B   929    				ld hl,fs_sought_filename
0052ED 010B0000            B   930    				ld bc,11
0052F1 EDB0                B   931    				ldir
0052F3 AF                  B   932    				xor a							0052F4 0615                B   933    				ld b,21
0052F6 12                  B   934    clrfnen			ld (de),a
0052F7 13                  B   935    				inc de
0052F8 10 FC               B   936    				djnz clrfnen
0052FA DD361821            B   937    				ld (ix+018h),021h				0052FE CD 07 5A 00         B   938    				call fs_write_sector			005302 D8                  B   939    				ret c							005303 AF                  B   940    				xor a
005304 C9                  B   941    				ret								                           B   942    
                           B   943    
                           B   944    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 221


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
                           B   945    
005305                     B   946    fs_write_bytes_to_file_command
                           B   947    	
                           B   948    ; *********************************************
                           B   949    ; * set up: fs_file_transfer_length (new data),
                           B   950    ; * before calling                             
                           B   951    ; *********************************************
                           B   952    
                           B   953    				
005305 ED5B C6 5A 00       B   954    				ld de,(fs_file_transfer_length)
00530A 21000000            B   955    				ld hl,0
00530E AF                  B   956    				xor a
00530F ED5A                B   957    				adc hl,de
005311 CA 01 50 00         B   958    				jp z,fs_fliz					                           B   959    				 
005315 CD 76 57 00         B   960    				call fs_find_filename			005319 D8                  B   961    				ret c							00531A FEC2                B   962    				cp 0c2h				
00531C 20 02               B   963    				jr nz,fs_fetwt					00531E B7                  B   964    				or a
00531F C9                  B   965    				ret
005320 DDCB0B66            B   966    fs_fetwt		bit 4,(ix+0bh)					005324 28 04               B   967    				jr z,fs_oknad					005326 3EC6                B   968    				ld a,0c6h						005328 B7                  B   969    				or a
005329 C9                  B   970    				ret
                           B   971    
00532A CD BC 59 00         B   972    fs_oknad		call backup_sector_lba
00532E DD22 E2 5A 00       B   973    				ld (fs_fname_in_sector_addr),ix
                           B   974    
005333 DD311C              B   975    				ld iy,(ix+01ch)					005336 DD7E1F              B   976    				ld a,(ix+01fh)
005339 FD22 C2 5A 00       B   977    				ld (fs_existing_file_length),iy
00533E 32 C2 5A 00         B   978    				ld (fs_existing_file_length),a
005342 ED5B C6 5A 00       B   979    				ld de,(fs_file_transfer_length)
005347 FD19                B   980    				add iy,de						005349 CE00                B   981    				adc a,0
00534B DD3E1C              B   982    				ld (ix+01ch),iy					00534E DD771F              B   983    				ld (ix+01fh),a					005351 30 04               B   984    				jr nc,nfsizeok
005353 3EC7                B   985    				ld a,0c7h						005355 B7                  B   986    				or a
005356 C9                  B   987    				ret
                           B   988    
005357 11000000            B   989    nfsizeok		ld de,0
00535B DD5E1A              B   990    				ld e,(ix+01ah)					00535E DD561B              B   991    				ld d,(ix+01bh)					005361 ED53 CC 5A 00       B   992    				ld (fs_file_working_cluster),de
005366 CD 07 5A 00         B   993    				call fs_write_sector			00536A D8                  B   994    				ret c
00536B 7A                  B   995    				ld a,d
00536C B3                  B   996    				or e
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 222


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
00536D 20 35               B   997    				jr nz,apenclch	
                           B   998    				
00536F CD 3C 56 00         B   999    				call fs_find_free_cluster		005373 D8                  B  1000    				ret c
005374 C0                  B  1001    				ret nz
005375 2A DC 5A 00         B  1002    				ld hl,(fs_free_cluster)
005379 22 CC 5A 00         B  1003    				ld (fs_file_working_cluster),hl
00537D 11FFFF00            B  1004    				ld de,0ffffh
005381 CD B2 58 00         B  1005    				call update_fat_entry_for_clust
005385 D8                  B  1006    				ret c
                           B  1007    			
005386 CD D1 59 00         B  1008    				call restore_sector_lba			00538A CD DE 59 00         B  1009    				call fs_read_sector
00538E D8                  B  1010    				ret c
00538F DD2A E2 5A 00       B  1011    				ld ix,(fs_fname_in_sector_addr)
005394 ED5B CC 5A 00       B  1012    				ld de,(fs_file_working_cluster)
005399 DD731A              B  1013    				ld (ix+01ah),e
00539C DD721B              B  1014    				ld (ix+01bh),d
00539F CD 07 5A 00         B  1015    				call fs_write_sector			0053A3 D8                  B  1016    				ret c
                           B  1017    				
                           B  1018    					
0053A4 2A CC 5A 00         B  1019    apenclch		ld hl,(fs_file_working_cluster)
0053A8 CD 86 58 00         B  1020    				call get_fat_entry_for_cluster
0053AC D8                  B  1021    				ret c
0053AD CD 2F 56 00         B  1022    				call fs_compare_hl_fff8
0053B1 30 1C               B  1023    				jr nc,atlclif
0053B3 22 CC 5A 00         B  1024    				ld (fs_file_working_cluster),hl
0053B7 01000000            B  1025    				ld bc,0
0053BB 3A 7F 5A 00         B  1026    				ld a,(fs_cluster_size)
0053BF CB27                B  1027    				sla a
0053C1 47                  B  1028    				ld b,a
0053C2 2A C2 5A 00         B  1029    				ld hl,(fs_existing_file_length)
0053C6 AF                  B  1030    				xor a							0053C7 ED42                B  1031    				sbc hl,bc						0053C9 22 C2 5A 00         B  1032    				ld (fs_existing_file_length),hl
0053CD 18 D5               B  1033    				jr apenclch
                           B  1034    				
0053CF ED4B C2 5A 00       B  1035    atlclif			ld bc,(fs_existing_file_length)
0053D4 CB38                B  1036    				srl b				
0053D6 48                  B  1037    				ld c,b							0053D7 3A 7F 5A 00         B  1038    				ld a,(fs_cluster_size)
0053DB 91                  B  1039    				sub c
0053DC 47                  B  1040    				ld b,a							0053DD 28 79               B  1041    				jr z,fs_sfncl					                           B  1042    				
0053DF 2A CC 5A 00         B  1043    				ld hl,(fs_file_working_cluster)
0053E3 79                  B  1044    				ld a,c
0053E4 CD 5D 59 00         B  1045    				call cluster_and_offset_to_lba
0053E8 CD DE 59 00         B  1046    				call fs_read_sector
0053EC D8                  B  1047    				ret c
0053ED C5                  B  1048    				push bc							Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 223


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
                           B  1049    				
0053EE 11000000            B  1050    				ld de,0
0053F2 3A C2 5A 00         B  1051    				ld a,(fs_existing_file_length)
0053F6 5F                  B  1052    				ld e,a
0053F7 3A C3 5A 00         B  1053    				ld a,(fs_existing_file_length+1
0053FB E601                B  1054    				and 1
0053FD 57                  B  1055    				ld d,a							0053FE 21000200            B  1056    				ld hl,512	
005402 AF                  B  1057    				xor a
005403 ED52                B  1058    				sbc hl,de						005405 E5                  B  1059    				push hl
005406 C1                  B  1060    				pop bc							005407 21000800            B  1061    				ld hl,sector_buffer
00540B 19                  B  1062    				add hl,de
00540C EB                  B  1063    				ex de,hl						00540D 7C                  B  1064    				ld a,h			
00540E B5                  B  1065    				or l
00540F 20 04               B  1066    				jr nz,fs_dcsb					005411 CD 64 57 00         B  1067    fs_dbfil		call fs_clear_sector_buffer
005415 2A CF 5A 00         B  1068    fs_dcsb			ld hl,(fs_ez80_address)			005419 EDA0                B  1069    fs_cbsb			ldi								00541B 7C                  B  1070    				ld a,h							00541C B5                  B  1071    				or l
00541D 20 0D               B  1072    				jr nz,fs_srcadok
00541F 22 CF 5A 00         B  1073    				ld (fs_ez80_address),hl
005423 3A D1 5A 00         B  1074    				ld a,(fs_ez80_address+2)
005427 B7                  B  1075    				or a
005428 CA 97 54 00         B  1076    				jp z,fs_mem_error
00542C CD E6 58 00         B  1077    fs_srcadok		call transfer_length_countdown
005430 28 54               B  1078    				jr z,fs_lbof					005432 78                  B  1079    fs_sadok		ld a,b							005433 B1                  B  1080    				or c
005434 20 E3               B  1081    				jr nz,fs_cbsb					                           B  1082    
005436 22 CF 5A 00         B  1083    				ld (fs_ez80_address),hl			00543A C1                  B  1084    				pop bc							00543B 79                  B  1085    				ld a,c
00543C 2A CC 5A 00         B  1086    				ld hl,(fs_file_working_cluster)
005440 CD 5D 59 00         B  1087    				call cluster_and_offset_to_lba
005444 CD 07 5A 00         B  1088    				call fs_write_sector			005448 D8                  B  1089    				ret c							005449 0C                  B  1090    				inc c							00544A 05                  B  1091    				dec b
00544B 28 0B               B  1092    				jr z,fs_sfncl					00544D C5                  B  1093    fs_sfns			push bc				
00544E 01000200            B  1094    				ld bc,512						005452 11000800            B  1095    				ld de,sector_buffer				005456 18 B9               B  1096    				jr fs_dbfil						                           B  1097    				
005458 CD 3C 56 00         B  1098    fs_sfncl		call fs_find_free_cluster		00545C D8                  B  1099    				ret c							00545D C0                  B  1100    				ret nz							Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 224


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
00545E 2A CC 5A 00         B  1101    				ld hl,(fs_file_working_cluster)
005462 ED5B DC 5A 00       B  1102    				ld de,(fs_free_cluster)
005467 CD B2 58 00         B  1103    				call update_fat_entry_for_clust
00546B D8                  B  1104    				ret c
00546C 2A DC 5A 00         B  1105    				ld hl,(fs_free_cluster)
005470 22 CC 5A 00         B  1106    				ld (fs_file_working_cluster),hl
005474 11FFFF00            B  1107    				ld de,0ffffh
005478 CD B2 58 00         B  1108    				call update_fat_entry_for_clust
00547C D8                  B  1109    				ret c
00547D 3A 7F 5A 00         B  1110    				ld a,(fs_cluster_size)
005481 47                  B  1111    				ld b,a							005482 0E00                B  1112    				ld c,0							005484 18 C7               B  1113    				jr fs_sfns						                           B  1114    				
005486 C1                  B  1115    fs_lbof			pop bc
005487 79                  B  1116    				ld a,c							005488 2A CC 5A 00         B  1117    				ld hl,(fs_file_working_cluster)
00548C CD 5D 59 00         B  1118    				call cluster_and_offset_to_lba
005490 CD 07 5A 00         B  1119    				call fs_write_sector	
005494 D8                  B  1120    				ret c
005495 AF                  B  1121    				xor a							005496 C9                  B  1122    				ret
                           B  1123    
                           B  1124    
005497 3EC8                B  1125    fs_mem_error	ld a,0c8h						005499 C1                  B  1126    fs_flerr		pop bc
00549A B7                  B  1127    				or a							00549B C9                  B  1128    				ret			
                           B  1129    
                           B  1130    ;----------------------------------------------
                           B  1131    
00549C                     B  1132    fs_erase_file_command
                           B  1133    
                           B  1134    
00549C CD 76 57 00         B  1135    				call fs_find_filename			0054A0 D8                  B  1136    				ret c
0054A1 C0                  B  1137    				ret nz
                           B  1138    				
0054A2 DDCB0B66            B  1139    				bit 4,(ix+0bh)					0054A6 28 04               B  1140    				jr z,okdelf
0054A8 3EC6                B  1141    				ld a,0c6h						0054AA B7                  B  1142    				or a
0054AB C9                  B  1143    				ret
                           B  1144    				
0054AC DDE5                B  1145    okdelf			push ix
0054AE E1                  B  1146    				pop hl
0054AF C3 98 52 00         B  1147    				jp fs_delco						                           B  1148    					
                           B  1149    
                           B  1150    ;----------------------------------------------
                           B  1151    
                           B  1152    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 225


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
0054B3                     B  1153    fs_rename_command
                           B  1154    
0054B3 CD 76 57 00         B  1155    				call fs_find_filename			0054B7 D8                  B  1156    				ret c							0054B8 FEC2                B  1157    				cp 0c2h							0054BA 28 04               B  1158    				jr z,fs_nfnok					0054BC 3EC9                B  1159    				ld a,0c9h						0054BE B7                  B  1160    				or a
0054BF C9                  B  1161    				ret
                           B  1162    			
0054C0 21 96 5A 00         B  1163    fs_nfnok		ld hl,fs_sought_filename		0054C4 11 AE 5A 00         B  1164    				ld de,fs_filename_buffer
0054C8 010B0000            B  1165    				ld bc,11
0054CC EDB0                B  1166    				ldir
0054CE 21 A2 5A 00         B  1167    				ld hl,fs_alt_filename			0054D2 11 96 5A 00         B  1168    				ld de,fs_sought_filename
0054D6 010B0000            B  1169    				ld bc,11
0054DA EDB0                B  1170    				ldir
0054DC CD 76 57 00         B  1171    				call fs_find_filename			0054E0 D8                  B  1172    				ret c
0054E1 FEC2                B  1173    				cp 0c2h
0054E3 C8                  B  1174    				ret z							                           B  1175    				
0054E4 DDE5                B  1176    				push ix
0054E6 D1                  B  1177    				pop de
0054E7 21 AE 5A 00         B  1178    				ld hl,fs_filename_buffer	 	0054EB 010B0000            B  1179    				ld bc,11
0054EF EDB0                B  1180    				ldir							0054F1 CD 07 5A 00         B  1181    				call fs_write_sector			                           B  1182    				
0054F5 AF                  B  1183    fs_rndone		xor a
0054F6 C9                  B  1184    				ret
                           B  1185    				
                           B  1186    
                           B  1187    ;----------------------------------------------
                           B  1188    
                           B  1189    
0054F7                     B  1190    fs_goto_first_dir_entry
                           B  1191    
0054F7 CD 5B 1A 00         B  1192    				call fs_get_dir_cluster
0054FB ED53 E5 5A 00       B  1193    				ld (fs_dir_entry_cluster),de
005500 AF                  B  1194    				xor a
005501 32 EB 5A 00         B  1195    				ld (fs_dir_entry_sector),a		005505 11000000            B  1196    				ld de,0
005509 ED53 E8 5A 00       B  1197    				ld (fs_dir_entry_line_offset),d
                           B  1198    				
                           B  1199    
                           B  1200    
00550E                     B  1201    fs_get_dir_entry
                           B  1202    
                           B  1203    ; No input parameters.
                           B  1204    ;
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 226


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
                           B  1205    ; Returns HL    = Location of null terminated f
                           B  1206    ;         IX:IY = Length of file (if applicable
                           B  1207    ;         B     = File flag (1 = directory, 0 =
                           B  1208    ;         A     = Error code
                           B  1209    ;         Carry = Set if hardware error encount
                           B  1210    
                           B  1211    
00550E 3A EB 5A 00         B  1212    				ld a,(fs_dir_entry_sector)		005512 4F                  B  1213    				ld c,a
005513 2A E5 5A 00         B  1214    				ld hl,(fs_dir_entry_cluster)	005517 CD 5D 59 00         B  1215    				call cluster_and_offset_to_lba
                           B  1216    			
00551B 7C                  B  1217    				ld a,h							00551C B5                  B  1218    				or l							00551D 20 09               B  1219    				jr nz,nr_read					00551F 2A 89 5A 00         B  1220    				ld hl,(fs_root_dir_position)	005523 79                  B  1221    				ld a,c
005524 CD A3 59 00         B  1222    				call set_absolute_lba
                           B  1223    				
005528 CD DE 59 00         B  1224    nr_read			call fs_read_sector				00552C D8                  B  1225    				ret c							                           B  1226    				
00552D ED5B E8 5A 00       B  1227    				ld de,(fs_dir_entry_line_offset
005532 DD210008 00         B  1228    dscan_int_loop	ld ix,sector_buffer
005537 DD19                B  1229    				add ix,de
005539 DD7E00              B  1230    ds_int_loop		ld a,(ix)
00553C B7                  B  1231    				or a							00553D 28 0E               B  1232    				jr z,fs_dir_entry_free		
00553F FEE5                B  1233    				cp 0e5h							005541 28 0A               B  1234    				jr z,fs_dir_entry_free	
005543 FE05                B  1235    				cp 05h							005545 28 06               B  1236    				jr z,fs_dir_entry_free	
005547 DDCB0B5E            B  1237    				bit 3,(ix+0bh)					00554B 28 0D               B  1238    				jr z,fs_dir_entry_in_use		                           B  1239    
00554D                     B  1240    fs_dir_entry_free
                           B  1241    
00554D EB                  B  1242    				ex de,hl
00554E 11200000            B  1243    				ld de,32
005552 19                  B  1244    				add hl,de
005553 EB                  B  1245    				ex de,hl
005554 CB4A                B  1246    				bit 1,d
005556 28 DA               B  1247    				jr z,dscan_int_loop
005558 18 54               B  1248    				jr dscan_new_sect
                           B  1249    
00555A                     B  1250    fs_dir_entry_in_use
                           B  1251    				
00555A ED53 E8 5A 00       B  1252    				ld (fs_dir_entry_line_offset),d
00555F DDE5                B  1253    				push ix
005561 E1                  B  1254    				pop hl
005562 CD A9 10 00         B  1255    				call os_clear_output_line
005566 0608                B  1256    				ld b,8							Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 227


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
005568 11 2F 68 00         B  1257    				ld de,output_line
00556C 7E                  B  1258    dcopyn			ld a,(hl)
00556D FE20                B  1259    				cp ' '							00556F 28 02               B  1260    				jr z,digchar
005571 12                  B  1261    				ld (de),a
005572 13                  B  1262    				inc de
005573 23                  B  1263    digchar			inc hl
005574 10 F6               B  1264    				djnz dcopyn
005576 7E                  B  1265    				ld a,(hl)						005577 FE20                B  1266    				cp ' '							005579 28 0A               B  1267    				jr z,dirnoex
00557B 3E2E                B  1268    				ld a,'.'						00557D 12                  B  1269    				ld (de),a
00557E 13                  B  1270    				inc de	
00557F 01030000            B  1271    				ld bc,3							005583 EDB0                B  1272    				ldir
005585 AF                  B  1273    dirnoex			xor a 
005586 12                  B  1274    				ld (de),a						                           B  1275    				
005587 47                  B  1276    				ld b,a
005588 DDCB0B66            B  1277    				bit 4,(ix+0bh)					00558C 28 01               B  1278    				jr z,fs_fniaf		
00558E 04                  B  1279    				inc b							00558F DD171C              B  1280    fs_fniaf		ld de,(ix+01ch)					005592 DD4E1F              B  1281    				ld c,(ix+01fh)
005595 21 2F 68 00         B  1282    				ld hl,output_line				005599 AF                  B  1283    				xor a
00559A C9                  B  1284    				ret
                           B  1285    
                           B  1286    
                           B  1287    
                           B  1288    
00559B                     B  1289    fs_goto_next_dir_entry
                           B  1290    
00559B 11200000            B  1291    				ld de,32
00559F 2A E8 5A 00         B  1292    				ld hl,(fs_dir_entry_line_offset
0055A3 19                  B  1293    				add hl,de
0055A4 22 E8 5A 00         B  1294    				ld (fs_dir_entry_line_offset),h
0055A8 CB4C                B  1295    				bit 1,h
0055AA CA 0E 55 00         B  1296    				jp z,fs_get_dir_entry
                           B  1297    
0055AE 21000000            B  1298    dscan_new_sect	ld hl,0				
0055B2 22 E8 5A 00         B  1299    				ld (fs_dir_entry_line_offset),h
                           B  1300    			
0055B6 21 EB 5A 00         B  1301    				ld hl,fs_dir_entry_sector
0055BA 34                  B  1302    				inc (hl)						                           B  1303    			
0055BB ED5B E5 5A 00       B  1304    				ld de,(fs_dir_entry_cluster)
0055C0 7A                  B  1305    				ld a,d
0055C1 B3                  B  1306    				or e							0055C2 20 0B               B  1307    				jr nz,nonroot2
0055C4 3A 8F 5A 00         B  1308    				ld a,(fs_root_dir_sectors)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 228


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
0055C8 BE                  B  1309    				cp (hl)
0055C9 28 23               B  1310    				jr z,endofdir			
0055CB C3 0E 55 00         B  1311    				jp fs_get_dir_entry
                           B  1312    												0055CF 3A 7F 5A 00         B  1313    nonroot2		ld a,(fs_cluster_size)		
0055D3 BE                  B  1314    				cp (hl)							0055D4 C2 0E 55 00         B  1315    				jp nz,fs_get_dir_entry
0055D8 3600                B  1316    				ld (hl),0						0055DA 2A E5 5A 00         B  1317    				ld hl,(fs_dir_entry_cluster)
0055DE CD 86 58 00         B  1318    				call get_fat_entry_for_cluster
0055E2 22 E5 5A 00         B  1319    				ld (fs_dir_entry_cluster),hl
0055E6 CD 2F 56 00         B  1320    				call fs_compare_hl_fff8			0055EA DA 0E 55 00         B  1321    				jp c,fs_get_dir_entry
                           B  1322    	
0055EE 3ED2                B  1323    endofdir		ld a,0d2h
0055F0 B7                  B  1324    				or a							0055F1 C9                  B  1325    				ret	
                           B  1326    				
                           B  1327    ;----------------------------------------------
                           B  1328    
0055F2                     B  1329    fs_get_volume_label
                           B  1330    
                           B  1331    
                           B  1332    ; On return HL = volume label
                           B  1333    
                           B  1334    
0055F2 2A 89 5A 00         B  1335    				ld hl,(fs_root_dir_position)
0055F6 0E00                B  1336    				ld c,0
0055F8 AF                  B  1337    gvl_nrsec		xor a
0055F9 CD B4 59 00         B  1338    				call set_abs_lba_and_read_secto
0055FD D8                  B  1339    				ret c
0055FE 0610                B  1340    				ld b,16							005600 DD210008 00         B  1341    				ld ix,sector_buffer
005605 DD7E0B              B  1342    find_vl			ld a,(ix+0bh)
005608 FE08                B  1343    				cp 08h
00560A 28 1A               B  1344    				jr z,got_label
00560C ED3220              B  1345    				lea ix,ix+32					00560F 10 F4               B  1346    				djnz find_vl					005611 23                  B  1347    				inc hl
005612 0C                  B  1348    				inc c
005613 3A 8F 5A 00         B  1349    				ld a,(fs_root_dir_sectors)		005617 B9                  B  1350    				cp c							005618 20 DE               B  1351    				jr nz,gvl_nrsec
                           B  1352    			
00561A CD D1 4E 00         B  1353    				call fs_read_partition_bootsect
00561E D8                  B  1354    				ret c
00561F B7                  B  1355    				or a
005620 C0                  B  1356    				ret nz
005621 DD212B08 00         B  1357    				ld ix,sector_buffer+02bh
                           B  1358    				
005626 DD360B00            B  1359    got_label		ld (ix+0bh),0					00562A DDE5                B  1360    				push ix
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 229


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
00562C E1                  B  1361    				pop hl
00562D AF                  B  1362    				xor a
00562E C9                  B  1363    				ret
                           B  1364    				
                           B  1365    				
                           B  1366    ;----------------------------------------------
                           B  1367    ; Internal subroutines
                           B  1368    ;----------------------------------------------
                           B  1369    
00562F                     B  1370    fs_compare_hl_fff8
                           B  1371    
                           B  1372    ;INPUT HL = value to compare with fff8
                           B  1373    ;OUTPUT CARRY set if < $fff8, ZERO FLAG set if 
                           B  1374    	
                           B  1375    	
00562F E5                  B  1376    				push hl
005630 D5                  B  1377    				push de
005631 11F8FF00            B  1378    				ld de,0fff8h			
005635 B7                  B  1379    				or a							005636 52ED52              B  1380    				sbc.s hl,de						005639 D1                  B  1381    				pop de
00563A E1                  B  1382    				pop hl
00563B C9                  B  1383    				ret
                           B  1384    
                           B  1385    ;----------------------------------------------
                           B  1386    
                           B  1387    
00563C                     B  1388    fs_find_free_cluster
                           B  1389    	
00563C DD210000 00         B  1390    				ld ix,0							005641 ED5B 83 5A 00       B  1391    				ld de,(fs_fat1_position)		005646 AF                  B  1392    				xor a				
005647 32 D8 5A 00         B  1393    fs_ffcl2		ld (fs_working_sector),a	
00564B D5                  B  1394    				push de
00564C E1                  B  1395    				pop hl
00564D 3A D8 5A 00         B  1396    				ld a,(fs_working_sector)
005651 CD B4 59 00         B  1397    				call set_abs_lba_and_read_secto
005655 D8                  B  1398    				ret c
005656 21000800            B  1399    				ld hl,sector_buffer
00565A 0600                B  1400    				ld b,0
00565C 7E                  B  1401    fs_ffcl1		ld a,(hl)						00565D 23                  B  1402    				inc hl
00565E B6                  B  1403    				or (hl)
00565F 23                  B  1404    				inc hl
005660 28 14               B  1405    				jr z,fs_gotfc
005662 DD23                B  1406    				inc ix
005664 10 F6               B  1407    				djnz fs_ffcl1
                           B  1408    				
005666 2A 90 5A 00         B  1409    				ld hl,(fs_sectors_per_fat)
00566A 3A D8 5A 00         B  1410    				ld a,(fs_working_sector)		00566E 3C                  B  1411    				inc a				
00566F BD                  B  1412    				cp l		
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 230


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
005670 20 D5               B  1413    				jr nz,fs_ffcl2					005672 3EC1                B  1414    fs_dfull		ld a,c1h						005674 B7                  B  1415    				or a							005675 C9                  B  1416    				ret
                           B  1417    			
005676 DDE5                B  1418    fs_gotfc		push ix							005678 E1                  B  1419    				pop hl							005679 2B                  B  1420    				dec hl							00567A 2B                  B  1421    				dec hl							00567B ED5B 93 5A 00       B  1422    				ld de,(fs_max_data_clusters)
005680 AF                  B  1423    				xor a
005681 52ED52              B  1424    				sbc.s hl,de						005684 30 EC               B  1425    				jr nc,fs_dfull
                           B  1426    			
005686 DD22 DC 5A 00       B  1427    				ld (fs_free_cluster),ix
00568B AF                  B  1428    				xor a
00568C C9                  B  1429    				ret
                           B  1430    	
                           B  1431    	
                           B  1432    ;----------------------------------------------
                           B  1433    	
                           B  1434    	
00568D                     B  1435    fs_find_free_dir_entry
                           B  1436    
                           B  1437    
                           B  1438    ; OUTPUT IX start of 32 byte dir entry in secto
                           B  1439    
                           B  1440    			
00568D CD 5B 1A 00         B  1441    				call fs_get_dir_cluster			005691 EB                  B  1442    				ex de,hl
005692 22 CC 5A 00         B  1443    ffenxtclu		ld (fs_file_working_cluster),hl
005696 AF                  B  1444    				xor a
005697 32 D8 5A 00         B  1445    				ld (fs_working_sector),a
                           B  1446    			
00569B 2A 89 5A 00         B  1447    ffenxtsec		ld hl,(fs_root_dir_position)	00569F 3A D8 5A 00         B  1448    				ld a,(fs_working_sector)
0056A3 CD A3 59 00         B  1449    				call set_absolute_lba
                           B  1450    				
0056A7 CD 5B 1A 00         B  1451    				call fs_get_dir_cluster			0056AB 7A                  B  1452    				ld a,d
0056AC B3                  B  1453    				or e
0056AD 28 0C               B  1454    				jr z,at_rootd
0056AF 2A CC 5A 00         B  1455    				ld hl,(fs_file_working_cluster)
0056B3 3A D8 5A 00         B  1456    				ld a,(fs_working_sector)
0056B7 CD 5D 59 00         B  1457    				call cluster_and_offset_to_lba
                           B  1458    				
0056BB CD DE 59 00         B  1459    at_rootd		call fs_read_sector
0056BF D8                  B  1460    				ret c
0056C0 0610                B  1461    				ld b,16							0056C2 11200000            B  1462    				ld de,32
0056C6 DD210008 00         B  1463    				ld ix,sector_buffer
0056CB DD7E00              B  1464    scdirfe			ld a,(ix)						Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 231


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
0056CE B7                  B  1465    				or a
0056CF 28 65               B  1466    				jr z,got_fde
0056D1 FEE5                B  1467    				cp 0e5h
0056D3 28 61               B  1468    				jr z,got_fde
0056D5 DD19                B  1469    				add ix,de						0056D7 10 F2               B  1470    				djnz scdirfe					                           B  1471    				
0056D9 21 D8 5A 00         B  1472    				ld hl,fs_working_sector			0056DD 34                  B  1473    				inc (hl)
                           B  1474    				
0056DE CD 5B 1A 00         B  1475    				call fs_get_dir_cluster			0056E2 7A                  B  1476    				ld a,d
0056E3 B3                  B  1477    				or e
0056E4 20 0B               B  1478    				jr nz,ffenotroo
0056E6 3A 8F 5A 00         B  1479    				ld a,(fs_root_dir_sectors)		0056EA BE                  B  1480    				cp (hl)							0056EB 20 AE               B  1481    				jr nz,ffenxtsec
0056ED 3EC3                B  1482    fenotfnd		ld a,0c3h						0056EF B7                  B  1483    				or a
0056F0 C9                  B  1484    				ret
                           B  1485    			
0056F1 3A 7F 5A 00         B  1486    ffenotroo		ld a,(fs_cluster_size)			0056F5 BE                  B  1487    				cp (hl)
0056F6 20 A3               B  1488    				jr nz,ffenxtsec
0056F8 2A CC 5A 00         B  1489    				ld hl,(fs_file_working_cluster)
0056FC CD 86 58 00         B  1490    				call get_fat_entry_for_cluster	005700 D8                  B  1491    				ret c
005701 CD 2F 56 00         B  1492    				call fs_compare_hl_fff8			005705 38 8B               B  1493    				jr c,ffenxtclu
                           B  1494    			
005707 CD 3C 56 00         B  1495    				call fs_find_free_cluster		00570B D8                  B  1496    				ret c							00570C C0                  B  1497    				ret nz							00570D ED5B DC 5A 00       B  1498    				ld de,(fs_free_cluster)
005712 2A CC 5A 00         B  1499    				ld hl,(fs_file_working_cluster)
005716 CD B2 58 00         B  1500    				call update_fat_entry_for_clust
00571A D8                  B  1501    				ret c
00571B EB                  B  1502    				ex de,hl						00571C 11FFFF00            B  1503    				ld de,0ffffh
005720 CD B2 58 00         B  1504    				call update_fat_entry_for_clust
005724 D8                  B  1505    				ret c
                           B  1506    			
005725 2A DC 5A 00         B  1507    				ld hl,(fs_free_cluster)			005729 CD 38 57 00         B  1508    				call fs_clear_cluster			00572D D8                  B  1509    				ret c
00572E 2A DC 5A 00         B  1510    				ld hl,(fs_free_cluster)			005732 C3 92 56 00         B  1511    				jp ffenxtclu					                           B  1512    			
005736 AF                  B  1513    got_fde			xor a
005737 C9                  B  1514    				ret
                           B  1515    					
                           B  1516    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 232


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
                           B  1517    ;----------------------------------------------
                           B  1518    
005738                     B  1519    fs_clear_cluster
                           B  1520    
                           B  1521    ;INPUT HL = cluster to clear
                           B  1522    
005738 22 D9 5A 00         B  1523    				ld (fs_working_cluster),hl
                           B  1524    			
00573C CD 64 57 00         B  1525    				call fs_clear_sector_buffer
                           B  1526    					
005740 AF                  B  1527    				xor a				
005741 32 D8 5A 00         B  1528    				ld (fs_working_sector),a		005745 3A D8 5A 00         B  1529    wipeclulp		ld a,(fs_working_sector)		005749 2A D9 5A 00         B  1530    				ld hl,(fs_working_cluster)		00574D CD 5D 59 00         B  1531    				call cluster_and_offset_to_lba	005751 CD 07 5A 00         B  1532    				call fs_write_sector
005755 D8                  B  1533    				ret c
005756 21 D8 5A 00         B  1534    				ld hl,fs_working_sector
00575A 34                  B  1535    				inc (hl)
00575B 3A 7F 5A 00         B  1536    				ld a,(fs_cluster_size)
00575F BE                  B  1537    				cp (hl)
005760 20 E3               B  1538    				jr nz,wipeclulp
005762 AF                  B  1539    				xor a
005763 C9                  B  1540    				ret
                           B  1541    			
                           B  1542    			
005764                     B  1543    fs_clear_sector_buffer
                           B  1544    			
005764 E5                  B  1545    				push hl
005765 C5                  B  1546    				push bc
005766 21000800            B  1547    				ld hl,sector_buffer			
00576A 01000200            B  1548    				ld bc,512				
00576E AF                  B  1549    				xor a				
00576F CD 7D 15 00         B  1550    				call os_bchl_memfill	
005773 C1                  B  1551    				pop bc
005774 E1                  B  1552    				pop hl
005775 C9                  B  1553    				ret
                           B  1554    				
                           B  1555    
                           B  1556    	
                           B  1557    ;----------------------------------------------
                           B  1558    	
005776                     B  1559    fs_find_filename
                           B  1560    
005776 AF                  B  1561    				xor a
                           B  1562    
005777                     B  1563    fs_search	
                           B  1564    				
005777 32 F3 5A 00         B  1565    				ld (fs_search_type),a
                           B  1566    			
                           B  1567    ; OUTPUT IX start of 32 byte dir entry
                           B  1568    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 233


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
00577B CD 5B 1A 00         B  1569    				call fs_get_dir_cluster
00577F ED53 CC 5A 00       B  1570    ffnnxtclu		ld (fs_file_working_cluster),de
005784 AF                  B  1571    				xor a
005785 32 D8 5A 00         B  1572    				ld (fs_working_sector),a
                           B  1573    			
005789 2A 89 5A 00         B  1574    ffnnxtsec		ld hl,(fs_root_dir_position)	00578D 3A D8 5A 00         B  1575    				ld a,(fs_working_sector)
005791 CD A3 59 00         B  1576    				call set_absolute_lba
                           B  1577    				
005795 CD 5B 1A 00         B  1578    				call fs_get_dir_cluster			005799 7A                  B  1579    				ld a,d
00579A B3                  B  1580    				or e
00579B 28 0C               B  1581    				jr z,at_rootd2
00579D 2A CC 5A 00         B  1582    				ld hl,(fs_file_working_cluster)
0057A1 3A D8 5A 00         B  1583    				ld a,(fs_working_sector)
0057A5 CD 5D 59 00         B  1584    				call cluster_and_offset_to_lba	                           B  1585    				
0057A9 CD DE 59 00         B  1586    at_rootd2		call fs_read_sector
0057AD D8                  B  1587    				ret c
0057AE 0E10                B  1588    				ld c,16							0057B0 DD210008 00         B  1589    				ld ix,sector_buffer
0057B5 DDE5                B  1590    ndirentr		push ix
0057B7 D1                  B  1591    				pop de
0057B8 3A F3 5A 00         B  1592    				ld a,(fs_search_type)
0057BC B7                  B  1593    				or a
0057BD 28 1E               B  1594    				jr z,fs_ststr
                           B  1595    			
0057BF DD7E00              B  1596    				ld a,(ix)						0057C2 FE80                B  1597    				cp 080h							0057C4 30 35               B  1598    				jr nc,fnnotsame
0057C6 FE20                B  1599    				cp 020h
0057C8 38 31               B  1600    				jr c,fnnotsame
0057CA ED5B F0 5A 00       B  1601    				ld de,(fs_stash_dir_block)		0057CF DD7E1A              B  1602    				ld a,(ix+01ah)
0057D2 BB                  B  1603    				cp e
0057D3 20 26               B  1604    				jr nz,fnnotsame
0057D5 DD7E1B              B  1605    				ld a,(ix+01bh)
0057D8 BA                  B  1606    				cp d
0057D9 28 1E               B  1607    				jr z,fs_found
0057DB 18 1E               B  1608    				jr fnnotsame
                           B  1609    				
0057DD FD21 96 5A 00       B  1610    fs_ststr		ld iy,fs_sought_filename		0057E2 060B                B  1611    				ld b,11							0057E4 1A                  B  1612    cmpfnlp			ld a,(de)						0057E5 CD 9D 12 00         B  1613    				call os_uppercasify				0057E9 6F                  B  1614    				ld l,a
0057EA FD7E00              B  1615    				ld a,(iy)
0057ED CD 9D 12 00         B  1616    				call os_uppercasify
0057F1 BD                  B  1617    				cp l				
0057F2 20 07               B  1618    				jr nz,fnnotsame
0057F4 FD23                B  1619    				inc iy
0057F6 13                  B  1620    				inc de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 234


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
0057F7 10 EB               B  1621    				djnz cmpfnlp
0057F9 AF                  B  1622    fs_found		xor a							0057FA C9                  B  1623    				ret
                           B  1624    			
0057FB 11200000            B  1625    fnnotsame		ld de,32						0057FF DD19                B  1626    				add ix,de
005801 0D                  B  1627    				dec c
005802 20 B1               B  1628    				jr nz,ndirentr					                           B  1629    				
005804 21 D8 5A 00         B  1630    				ld hl,fs_working_sector			005808 34                  B  1631    				inc (hl)
                           B  1632    				
005809 CD 5B 1A 00         B  1633    				call fs_get_dir_cluster			00580D 7A                  B  1634    				ld a,d
00580E B3                  B  1635    				or e
00580F 20 0D               B  1636    				jr nz,notrootdir
005811 3A 8F 5A 00         B  1637    				ld a,(fs_root_dir_sectors)		005815 BE                  B  1638    				cp (hl)							005816 C2 89 57 00         B  1639    				jp nz,ffnnxtsec
00581A 3EC2                B  1640    fnnotfnd		ld a,0c2h						00581C B7                  B  1641    				or a
00581D C9                  B  1642    				ret
                           B  1643    			
00581E                     B  1644    notrootdir
                           B  1645    				
00581E 3A 7F 5A 00         B  1646    				ld a,(fs_cluster_size)			005822 BE                  B  1647    				cp (hl)
005823 C2 89 57 00         B  1648    				jp nz,ffnnxtsec
                           B  1649    				
005827 2A CC 5A 00         B  1650    				ld hl,(fs_file_working_cluster)
00582B CD 86 58 00         B  1651    				call get_fat_entry_for_cluster
00582F D8                  B  1652    				ret c
005830 CD 2F 56 00         B  1653    				call fs_compare_hl_fff8			005834 30 E4               B  1654    				jr nc,fnnotfnd					005836 EB                  B  1655    				ex de,hl						005837 C3 7F 57 00         B  1656    				jp ffnnxtclu					                           B  1657    				
                           B  1658    
                           B  1659    ;----------------------------------------------
                           B  1660    
00583B                     B  1661    fs_hl_to_alt_filename
                           B  1662    
00583B 11 A2 5A 00         B  1663    				ld de,fs_alt_filename
00583F 18 04               B  1664    				jr hltofngo
                           B  1665    
                           B  1666    
005841                     B  1667    fs_hl_to_filename
                           B  1668    
                           B  1669    ;INPUT: HL = address of filename (null / space 
                           B  1670    ;OUTPUT HL = address of first character after f
                           B  1671    ;        C = number of characters in filename
                           B  1672    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 235


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
005841 11 96 5A 00         B  1673    				ld de,fs_sought_filename
005845 CD 50 59 00         B  1674    hltofngo		call fs_clear_filename			005849 D5                  B  1675    				push de			
00584A DDE1                B  1676    				pop ix							                           B  1677    				
00584C 0E00                B  1678    				ld c,0
00584E 0608                B  1679    				ld b,8
005850 7E                  B  1680    csfnlp2			ld a,(hl)						005851 B7                  B  1681    				or a
005852 C8                  B  1682    				ret z							005853 FE20                B  1683    				cp 32
005855 C8                  B  1684    				ret z							005856 FE2F                B  1685    				cp 02fh
005858 C8                  B  1686    				ret z							005859 FE2E                B  1687    				cp '.'
00585B 28 16               B  1688    				jr z,dofn_ext					00585D 12                  B  1689    				ld (de),a
00585E 13                  B  1690    				inc de
00585F 23                  B  1691    				inc hl
005860 0C                  B  1692    				inc c							005861 10 ED               B  1693    				djnz csfnlp2					005863 7E                  B  1694    find_ext		ld a,(hl)
005864 FE2E                B  1695    				cp '.'							005866 28 0B               B  1696    				jr z,dofn_ext	
005868 FE20                B  1697    				cp ' '							00586A C8                  B  1698    				ret z
00586B FE2F                B  1699    				cp 02fh
00586D C8                  B  1700    				ret z
00586E B7                  B  1701    				or a
00586F C8                  B  1702    				ret z
005870 23                  B  1703    				inc hl
005871 18 F0               B  1704    				jr find_ext
                           B  1705    				
005873 23                  B  1706    dofn_ext		inc hl							005874 0603                B  1707    				ld b,3				
005876 7E                  B  1708    fnextlp			ld a,(hl)						005877 B7                  B  1709    				or a
005878 C8                  B  1710    				ret z							005879 FE20                B  1711    				cp 32
00587B C8                  B  1712    				ret z
00587C DD7708              B  1713    				ld (ix+8),a
00587F DD23                B  1714    				inc ix
005881 23                  B  1715    				inc hl
005882 0C                  B  1716    				inc c
005883 10 F1               B  1717    				djnz fnextlp
005885 C9                  B  1718    				ret
                           B  1719    				
                           B  1720    ;----------------------------------------------
                           B  1721    
                           B  1722    
005886                     B  1723    get_fat_entry_for_cluster
                           B  1724    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 236


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
                           B  1725    ; INPUT: HL = cluster in question, OUTPUT: HL =
                           B  1726    
005886 C5                  B  1727    				push bc
005887 D5                  B  1728    				push de
005888 01000000            B  1729    				ld bc,0
00588C 4D                  B  1730    				ld c,l
00588D 7C                  B  1731    				ld a,h
00588E 2A 83 5A 00         B  1732    				ld hl,(fs_fat1_position)
005892 CD B4 59 00         B  1733    				call set_abs_lba_and_read_secto
005896 38 17               B  1734    				jr c,hwerr
005898 DDE5                B  1735    				push ix
00589A DD210008 00         B  1736    				ld ix,sector_buffer
00589F DD09                B  1737    				add ix,bc
0058A1 DD09                B  1738    				add ix,bc
0058A3 21000000            B  1739    				ld hl,0
0058A7 DD6E00              B  1740    				ld l,(ix)
0058AA DD6601              B  1741    				ld h,(ix+1)
0058AD DDE1                B  1742    				pop ix
0058AF D1                  B  1743    hwerr			pop de
0058B0 C1                  B  1744    				pop bc
0058B1 C9                  B  1745    				ret
                           B  1746    
                           B  1747    
                           B  1748    ;----------------------------------------------
                           B  1749    
                           B  1750    
0058B2                     B  1751    update_fat_entry_for_cluster
                           B  1752    
                           B  1753    ; INPUT: HL = cluster in question
                           B  1754    ;        DE = new value to put in FAT tables
                           B  1755    			
0058B2 C5                  B  1756    				push bc
0058B3 E5                  B  1757    				push hl
0058B4 01000000            B  1758    				ld bc,0
0058B8 4D                  B  1759    				ld c,l
0058B9 7C                  B  1760    				ld a,h
0058BA 2A 83 5A 00         B  1761    				ld hl,(fs_fat1_position)		0058BE CD D2 58 00         B  1762    				call fat_upd
0058C2 38 0B               B  1763    				jr c,fup_end
                           B  1764    			
0058C4 E1                  B  1765    				pop hl
0058C5 E5                  B  1766    				push hl
0058C6 7C                  B  1767    				ld a,h
0058C7 2A 86 5A 00         B  1768    				ld hl,(fs_fat2_position)		0058CB CD D2 58 00         B  1769    				call fat_upd
0058CF E1                  B  1770    fup_end			pop hl
0058D0 C1                  B  1771    				pop bc
0058D1 C9                  B  1772    				ret
                           B  1773    			
                           B  1774    			
0058D2 CD B4 59 00         B  1775    fat_upd			call set_abs_lba_and_read_secto
0058D6 38 0D               B  1776    				jr c,ufehwerr
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 237


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
0058D8 21000800            B  1777    				ld hl,sector_buffer
0058DC 09                  B  1778    				add hl,bc
0058DD 09                  B  1779    				add hl,bc
0058DE 73                  B  1780    				ld (hl),e
0058DF 23                  B  1781    				inc hl
0058E0 72                  B  1782    				ld (hl),d
0058E1 CD 07 5A 00         B  1783    				call fs_write_sector
0058E5 C9                  B  1784    ufehwerr		ret
                           B  1785    				
                           B  1786    	
                           B  1787    ;----------------------------------------------
                           B  1788    
0058E6                     B  1789    transfer_length_countdown
                           B  1790    
0058E6 E5                  B  1791    				push hl							0058E7 C5                  B  1792    				push bc
                           B  1793    			
0058E8 0604                B  1794    				ld b,4
0058EA 21 BA 5A 00         B  1795    				ld hl,fs_file_pointer			0058EE 34                  B  1796    fpinclp			inc (hl)
0058EF 20 03               B  1797    				jr nz,fs_fpino
0058F1 23                  B  1798    				inc hl
0058F2 10 FA               B  1799    				djnz fpinclp
                           B  1800    				
0058F4 2A C6 5A 00         B  1801    fs_fpino		ld hl,(fs_file_transfer_length)
0058F8 2B                  B  1802    				dec hl
0058F9 22 C6 5A 00         B  1803    				ld (fs_file_transfer_length),hl
0058FD 01000000            B  1804    				ld bc,0
005901 B7                  B  1805    				or a
005902 ED4A                B  1806    				adc hl,bc						                           B  1807    				
005904 C1                  B  1808    				pop bc
005905 E1                  B  1809    				pop hl
005906 C9                  B  1810    				ret
                           B  1811    
                           B  1812    ;----------------------------------------------
                           B  1813    
005907                     B  1814    fs_get_current_dir_name
                           B  1815    
                           B  1816    ;returns current dir name - location at HL
                           B  1817    
005907 CD 5B 1A 00         B  1818    				call fs_get_dir_cluster			00590B 7A                  B  1819    				ld a,d
00590C B3                  B  1820    				or e
00590D 20 10               B  1821    				jr nz,fs_dnnr
00590F 21 E3 65 00         B  1822    				ld hl,vol_txt+1					005913 3A DE 65 00         B  1823    				ld a,(current_volume)
005917 C630                B  1824    				add a,030h
005919 32 E6 65 00         B  1825    				ld (vol_txt+4),a
00591D AF                  B  1826    				xor a
00591E C9                  B  1827    				ret
                           B  1828    					
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 238


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
00591F ED53 F0 5A 00       B  1829    fs_dnnr			ld (fs_stash_dir_block),de
005924 CD 85 4F 00         B  1830    				call fs_parent_dir_command		005928 D8                  B  1831    				ret c
005929 B7                  B  1832    				or a
00592A C0                  B  1833    				ret nz
00592B 3E01                B  1834    				ld a,1
00592D CD 77 57 00         B  1835    				call fs_search					005931 D8                  B  1836    				ret c
005932 C0                  B  1837    				ret nz
                           B  1838    					
005933 DDE5                B  1839    fs_gdbn			push ix
005935 E1                  B  1840    				pop hl
005936 060B                B  1841    				ld b,11							005938 7E                  B  1842    ntdirn			ld a,(hl)
005939 FE20                B  1843    				cp ' '
00593B 28 03               B  1844    				jr z,rdirfsp
00593D 23                  B  1845    				inc hl
00593E 10 F8               B  1846    rdirnsp			djnz ntdirn
                           B  1847    				
005940 3600                B  1848    rdirfsp			ld (hl),0
005942 DDE5                B  1849    				push ix
005944 ED5B F0 5A 00       B  1850    				ld de,(fs_stash_dir_block)
005949 CD 67 1A 00         B  1851    				call fs_update_dir_cluster		00594D E1                  B  1852    				pop hl	
00594E AF                  B  1853    				xor a							00594F C9                  B  1854    				ret
                           B  1855    
                           B  1856    			
                           B  1857    ;----------------------------------------------
                           B  1858    
005950                     B  1859    fs_clear_filename
                           B  1860    
005950 D5                  B  1861    				push de							005951 C5                  B  1862    				push bc
005952 060C                B  1863    				ld b,12
005954 3E20                B  1864    				ld a,' '
005956 12                  B  1865    clrfnlp			ld (de),a
005957 13                  B  1866    				inc de
005958 10 FC               B  1867    				djnz clrfnlp
00595A C1                  B  1868    				pop bc
00595B D1                  B  1869    				pop de
00595C C9                  B  1870    				ret
                           B  1871    				
                           B  1872    ;----------------------------------------------
                           B  1873    
                           B  1874    
00595D                     B  1875    cluster_and_offset_to_lba
                           B  1876    
                           B  1877    ; INPUT: HL = cluster, A = sector offset, OUTPU
                           B  1878    
00595D C5                  B  1879    				push bc
00595E D5                  B  1880    				push de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 239


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
00595F E5                  B  1881    				push hl
005960 DDE5                B  1882    				push ix
                           B  1883    
005962 2B                  B  1884    				dec hl							005963 2B                  B  1885    				dec hl							005964 11000000            B  1886    				ld de,0							005968 01000000            B  1887    				ld bc,0
00596C 5F                  B  1888    				ld e,a
00596D 3A 7F 5A 00         B  1889    				ld a,(fs_cluster_size)			005971 CB3F                B  1890    caotllp			srl a
005973 28 03               B  1891    				jr z,clusdone
005975 29                  B  1892    				add hl,hl						005976 18 F9               B  1893    				jr caotllp
                           B  1894    			
005978 ED4B 8C 5A 00       B  1895    clusdone		ld bc,(fs_data_area)			00597D 09                  B  1896    				add hl,bc						00597E 19                  B  1897    				add hl,de						                           B  1898    				
00597F E5                  B  1899    add_ptn_offset	push hl							005980 CD 95 1A 00         B  1900    				call fs_calc_volume_offset
005984 DD21 0A 66 00       B  1901    				ld ix,volume_mount_list
005989 DD19                B  1902    				add ix,de
00598B E1                  B  1903    				pop hl
00598C DD0708              B  1904    				ld bc,(ix+08h)					00598F DD7E0B              B  1905    				ld a,(ix+0bh)
005992 09                  B  1906    				add hl,bc
005993 CE00                B  1907    				adc a,0
005995 22 BB 67 00         B  1908    				ld (sector_lba0),hl				005999 32 BE 67 00         B  1909    				ld (sector_lba3),a				                           B  1910    				
00599D DDE1                B  1911    				pop ix
00599F E1                  B  1912    				pop hl
0059A0 D1                  B  1913    				pop de
0059A1 C1                  B  1914    				pop bc
0059A2 C9                  B  1915    				ret
                           B  1916    				
                           B  1917    
                           B  1918    ;----------------------------------------------
                           B  1919    
0059A3                     B  1920    set_absolute_lba
                           B  1921    
                           B  1922    ; set A to sector offset, HL to sectors from st
                           B  1923    
0059A3 C5                  B  1924    				push bc							0059A4 D5                  B  1925    				push de							0059A5 E5                  B  1926    				push hl							0059A6 DDE5                B  1927    				push ix							0059A8 01000000            B  1928    				ld bc,0
0059AC 11000000            B  1929    				ld de,0
0059B0 5F                  B  1930    				ld e,a
0059B1 19                  B  1931    				add hl,de
0059B2 18 CB               B  1932    				jr add_ptn_offset		
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 240


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
                           B  1933    				
                           B  1934    
0059B4                     B  1935    set_abs_lba_and_read_sector
                           B  1936    
0059B4 CD A3 59 00         B  1937    				call set_absolute_lba
0059B8 C3 DE 59 00         B  1938    				jp fs_read_sector
                           B  1939    				
                           B  1940    ;----------------------------------------------
                           B  1941    
                           B  1942    
0059BC                     B  1943    backup_sector_lba
                           B  1944    
0059BC C5                  B  1945    				push bc
0059BD D5                  B  1946    				push de
0059BE E5                  B  1947    				push hl
0059BF 21 BB 67 00         B  1948    				ld hl,sector_lba0
0059C3 11 F4 5A 00         B  1949    				ld de,fs_backed_up_sector_lba0
0059C7 01040000            B  1950    lbabur			ld bc,4
0059CB EDB0                B  1951    				ldir
0059CD E1                  B  1952    				pop hl
0059CE D1                  B  1953    				pop de
0059CF C1                  B  1954    				pop bc
0059D0 C9                  B  1955    				ret
                           B  1956    
                           B  1957    
0059D1                     B  1958    restore_sector_lba
                           B  1959    
0059D1 C5                  B  1960    				push bc
0059D2 D5                  B  1961    				push de
0059D3 E5                  B  1962    				push hl
0059D4 21 F4 5A 00         B  1963    				ld hl,fs_backed_up_sector_lba0
0059D8 11 BB 67 00         B  1964    				ld de,sector_lba0
0059DC 18 E9               B  1965    				jr lbabur	
                           B  1966    					
                           B  1967    ;----------------------------------------------
                           B  1968    
0059DE                     B  1969    fs_read_sector
                           B  1970    			
0059DE C5                  B  1971    				push bc
0059DF D5                  B  1972    				push de
0059E0 E5                  B  1973    				push hl
0059E1 DDE5                B  1974    				push ix
0059E3 FDE5                B  1975    				push iy
0059E5 01040000            B  1976    				ld bc,04h						0059E9 CD 18 5A 00         B  1977    				call sector_access_redirect
0059ED 2A BB 67 00         B  1978    secaccend		ld hl,(sector_lba0)
0059F1 22 F8 5A 00         B  1979    				ld (fs_sector_last_read_lba0),h
0059F5 3A BE 67 00         B  1980    				ld a,(sector_lba0+3)
0059F9 32 FB 5A 00         B  1981    				ld (fs_sector_last_read_lba0+3)
0059FD FDE1                B  1982    				pop iy
0059FF DDE1                B  1983    				pop ix
005A01 E1                  B  1984    				pop hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 241


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
005A02 D1                  B  1985    				pop de
005A03 C1                  B  1986    				pop bc
005A04 C8                  B  1987    				ret z							005A05 37                  B  1988    				scf								005A06 C9                  B  1989    				ret								                           B  1990    
                           B  1991    
005A07                     B  1992    fs_write_sector	
                           B  1993    				
005A07 C5                  B  1994    				push bc
005A08 D5                  B  1995    				push de
005A09 E5                  B  1996    				push hl
005A0A DDE5                B  1997    				push ix
005A0C FDE5                B  1998    				push iy
005A0E 01080000            B  1999    				ld bc,08h						005A12 CD 18 5A 00         B  2000    				call sector_access_redirect
005A16 18 D5               B  2001    				jr secaccend
                           B  2002    
                           B  2003    
                           B  2004    
005A18                     B  2005    sector_access_redirect
                           B  2006    
                           B  2007    	
005A18 3A DF 65 00         B  2008    				ld a,(current_driver)			005A1C CD 2D 1A 00         B  2009    				call locate_driver_base			005A20 EB                  B  2010    				ex de,hl
005A21 09                  B  2011    				add hl,bc						005A22 E9                  B  2012    				jp (hl)
                           B  2013    
                           B  2014    ;----------------------------------------------
                           B  2015    
005A23                     B  2016    fs_is_same_sector_in_buffer
                           B  2017    				
005A23 E5                  B  2018    				push hl
005A24 D5                  B  2019    				push de
005A25 2A BB 67 00         B  2020    				ld hl,(sector_lba0)
005A29 ED5B F8 5A 00       B  2021    				ld de,(fs_sector_last_read_lba0
005A2E AF                  B  2022    				xor a
005A2F ED52                B  2023    				sbc hl,de
005A31 20 0A               B  2024    				jr nz,fs_notsamsec
005A33 3A BE 67 00         B  2025    				ld a,(sector_lba0+3)
005A37 6F                  B  2026    				ld l,a
005A38 3A FB 5A 00         B  2027    				ld a,(fs_sector_last_read_lba0+
005A3C BD                  B  2028    				cp l
005A3D D1                  B  2029    fs_notsamsec	pop de
005A3E E1                  B  2030    				pop hl
005A3F C9                  B  2031    				ret
                           B  2032    
                           B  2033    ;----------------------------------------------
                           B  2034    	
005A40                     B  2035    bootsector_stub
                           B  2036    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 242


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
005A40 EB3C904D 53444F53   B  2037    				db  0EBh,03Ch,090h,04Dh,053h,04
005A48 352E3000 02004000 
005A50 02000200 00F8F200   B  2038    				db  002h,000h,002h,000h,000h,0F
005A58 3F00FF00 00000000 
005A60 00000000 000029C4   B  2039    				db  000h,000h,000h,000h,000h,00
005A68 E636984E 4F204E41 
005A70 4D452020 20204641   B  2040    				db  04Dh,045h,020h,020h,020h,02
005A78 54313620 2020C3 
                           B  2041    
                           B  2042    ;----------------------------------------------
                           B  2043    
005A7F 00                  B  2044    fs_cluster_size				db 0
005A80 000000              B  2045    fs_bytes_per_cluster		dw24 0
005A83 000000              B  2046    fs_fat1_position			dw24 0		; offse
005A86 000000              B  2047    fs_fat2_position			dw24 0		; offse
005A89 000000              B  2048    fs_root_dir_position		dw24 0		; offse
005A8C 000000              B  2049    fs_data_area				dw24 0		; offse
005A8F 00                  B  2050    fs_root_dir_sectors			db 0
                           B  2051    
005A90 000000              B  2052    fs_sectors_per_fat			dw24 0
005A93 000000              B  2053    fs_max_data_clusters		dw24 0
                           B  2054    
005A96 00 00 00 00 00 00   B  2055    fs_sought_filename			blkb 12,0
005A9C 00 00 00 00 00 00 
005AA2 00 00 00 00 00 00   B  2056    fs_alt_filename				blkb 12,0
005AA8 00 00 00 00 00 00 
005AAE 00 00 00 00 00 00   B  2057    fs_filename_buffer			blkb 12,0
005AB4 00 00 00 00 00 00 
                           B  2058    
005ABA 00000000            B  2059    fs_file_pointer				dw 0,0		; 32 bi
005ABE 00000000            B  2060    fs_file_length				dw 0,0		; 32 bi
005AC2 00000000            B  2061    fs_existing_file_length 	dw 0,0		; 32 bi
                           B  2062    
005AC6 000000              B  2063    fs_file_transfer_length		dw24 0		; 24 bi
                           B  2064    
005AC9 000000              B  2065    fs_file_start_cluster		dw24 0
005ACC 000000              B  2066    fs_file_working_cluster		dw24 0
                           B  2067    
005ACF 000000              B  2068    fs_ez80_address				dw24 0
005AD2 000000              B  2069    fs_ez80_working_address		dw24 0
                           B  2070    
005AD5 000000              B  2071    fs_in_sector_offset			dw24 0
005AD8 00                  B  2072    fs_working_sector			db 0
                           B  2073    
005AD9 000000              B  2074    fs_working_cluster			dw24 0
005ADC 000000              B  2075    fs_free_cluster				dw24 0
005ADF 000000              B  2076    fs_new_file_cluster			dw24 0
                           B  2077    
005AE2 000000              B  2078    fs_fname_in_sector_addr		dw24 0
                           B  2079    
005AE5 000000              B  2080    fs_dir_entry_cluster		dw24 0
005AE8 000000              B  2081    fs_dir_entry_line_offset	dw24 0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 243


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_fat16_code_v08.asm
005AEB 00                  B  2082    fs_dir_entry_sector			db 0
                           B  2083    
005AEC 00                  B  2084    fs_filepointer_valid		db 0
005AED 000000              B  2085    fs_sector_pos_cnt			dw24 0
                           B  2086    
005AF0 000000              B  2087    fs_stash_dir_block	 		dw24 0
                           B  2088    
005AF3 00                  B  2089    fs_search_type				db 0
                           B  2090    
005AF4 00000000            B  2091    fs_backed_up_sector_lba0	db 0,0,0,0
                           B  2092    
005AF8 00000000            B  2093    fs_sector_last_read_lba0	db 0,0,0,0
                           B  2094    
                           B  2095    ;----------------------------------------------
                           B  2096    
                           A  3595    
                           A  3596    ;----------------------------------------------
                           A  3597    ; OS Data 
                           A  3598    ;----------------------------------------------
                           A  3599    
                           A  3600    
                           B     0    	include		'prose_data.asm'				                           B     1    ;**************
                           B     2    ;* PROSE DATA *
                           B     3    ;**************
                           B     4    
                           B     5    ;----------------------------------------------
                           B     6    ; kernal routine locations
                           B     7    ;----------------------------------------------
                           B     8    
005AFC                     B     9    kernal_table
                           B    10    
005AFC 271800              B    11    	dw24 ext_mount_volumes			;00		
005AFF CD1700              B    12    	dw24 os_get_device_info			;01		
005B02 841600              B    13    	dw24 os_check_volume_format		;02		
005B05 B61A00              B    14    	dw24 ext_change_volume			;03		
005B08 E01700              B    15    	dw24 os_get_volume_info			;04		
005B0B 8D1600              B    16    	dw24 ext_format					;05		
005B0E BF1600              B    17    	dw24 ext_make_dir				;06		
005B11 CD1600              B    18    	dw24 ext_change_dir				;07		
005B14 DB1600              B    19    	dw24 os_parent_dir				;08		
005B17 E11600              B    20    	dw24 os_root_dir				;09		
005B1A 291700              B    21    	dw24 ext_delete_dir				;0a		
005B1D 181600              B    22    	dw24 ext_find_file				;0b		
005B20 321600              B    23    	dw24 ext_set_file_pointer		;0c		
005B23 2B1600              B    24    	dw24 os_set_load_length			;0d		
005B26 451600              B    25    	dw24 ext_read_bytes_from_file	;0e		
005B29 E71600              B    26    	dw24 ext_erase_file				;0f		
005B2C 0F1700              B    27    	dw24 ext_rename_file			;10		
005B2F 541600              B    28    	dw24 ext_create_file			;11		
005B32 651600              B    29    	dw24 ext_write_bytes_to_file	;12		
005B35 841A00              B    30    	dw24 fs_get_total_sectors		;13		
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 244


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005B38 F51600              B    31    	dw24 os_goto_first_dir_entry	;14		 
005B3B FB1600              B    32    	dw24 os_get_dir_entry			;15		
005B3E 011700              B    33    	dw24 os_goto_next_dir_entry		;16		
005B41 391700              B    34    	dw24 ext_read_sector			;17		
005B44 671700              B    35    	dw24 ext_write_sector			;18		
005B47 F11A00              B    36    	dw24 ext_file_sector_list		;19		
005B4A 5B1A00              B    37    	dw24 fs_get_dir_cluster			;1a		
005B4D 671A00              B    38    	dw24 fs_update_dir_cluster		;1b		
005B50 071700              B    39    	dw24 os_get_current_dir_name	;1c		
                           B    40    
005B53 914900              B    41    	dw24 os_wait_key_press			;1d		
005B56 EC4900              B    42    	dw24 os_get_key_press			;1e		
005B59 3F1500              B    43    	dw24 os_get_key_mod_flags		;1f		
                           B    44    
005B5C EE1700              B    45    	dw24 ext_serial_get_header		;20		
005B5F FB1700              B    46    	dw24 ext_serial_receive_file	;21		 
005B62 041800              B    47    	dw24 ext_serial_send_file		;22		 
005B65 161800              B    48    	dw24 ext_serial_tx				;23		
005B68 1D1800              B    49    	dw24 ext_serial_rx				;24		
                           B    50    
005B6B 890F00              B    51    	dw24 ext_print_string			;25		
005B6E C44300              B    52    	dw24 hwsc_clear_screen			;26		
005B71 944500              B    53    	dw24 hwsc_wait_vrt				;27		
005B74 471400              B    54    	dw24 os_set_cursor_position		;28		
005B77 561A00              B    55    	dw24 ext_plot_char				;29		
005B7A 851500              B    56    	dw24 ext_set_pen				;2a		
005B7D 921500              B    57    	dw24 ext_background_colours		;2b		
005B80 8D4400              B    58    	dw24 hwsc_draw_cursor			;2c		
005B83 8C1500              B    59    	dw24 os_get_pen					;2d		
005B86 FF4300              B    60    	dw24 hwsc_scroll_up				;2e		
005B89 4E4300              B    61    	dw24 os_set_video_hw_regs		;2f		
005B8C 451500              B    62    	dw24 os_get_vmode				;30			005B8F E14400              B    63    	dw24 hwsc_get_charmap_addr_xy	;31		
005B92 671400              B    64    	dw24 os_get_cursor_position		;32		 
                           B    65    
005B95 621B00              B    66    	dw24 ext_set_envar				;33		
005B98 261B00              B    67    	dw24 ext_get_envar				;34		
005B9B BC1B00              B    68    	dw24 ext_delete_envar			;35		
                           B    69    
005B9E BD1400              B    70    	dw24 os_set_mouse_window		;36		
005BA1 031500              B    71    	dw24 os_get_mouse_position		;37		
005BA4 DA1400              B    72    	dw24 os_get_mouse_motion		;38		
                           B    73    
005BA7 564600              B    74    	dw24 hwsc_time_delay			;39		
005BAA 5B1200              B    75    	dw24 ext_compare_strings		;3a		
005BAD DA1000              B    76    	dw24 ext_hexbyte_to_ascii		;3b		
005BB0 0F1100              B    77    	dw24 ext_ascii_to_hexword		;3c		
005BB3 641100              B    78    	dw24 ext_user_input				;3d		
                           B    79    
005BB6 3B4600              B    80    	dw24 hwsc_get_version			;3e		
005BB9 311400              B    81    	dw24 os_dont_store_registers	;3f		
005BBC AD3900              B    82    	dw24 os_cmd_unused				;40 		Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 245


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005BBF 794600              B    83    	dw24 hwsc_read_rtc				;41     
005BC2 A14600              B    84    	dw24 hwsc_write_rtc				;42		 
005BC5 0D1C00              B    85    	dw24 os_get_keymap_location		;43		 
005BC8 AE3900              B    86    	dw24 os_get_mem_base			;44
005BCB 131C00              B    87    	dw24 ext_play_audio				;45
005BCE 4B4900              B    88    	dw24 hwsc_disable_audio			;46
005BD1 644900              B    89    	dw24 hwsc_get_joysticks			;47
005BD4 551500              B    90    	dw24 ext_set_vmode				;48
005BD7 161000              B    91    	dw24 ext_set_cursor_image		;49
005BDA 734400              B    92    	dw24 hwsc_remove_cursor			;4a
005BDD 5A3600              B    93    	dw24 char_to_font				;4b
005BE0 0D1B00              B    94    	dw24 os_get_disk_sector_ptr		;4c
005BE3 624600              B    95    	dw24 hwsc_set_timeout			;4d
005BE6 734600              B    96    	dw24 hwsc_test_timeout			;4e
                           B    97    	
005BE9 CE3900              B    98    	dw24 ext_set_pointer			;4f
005BEC 523B00              B    99    	dw24 os_allocate_ram			;50
005BEF 7D3B00              B   100    	dw24 os_deallocate_ram			;51
005BF2 BE3900              B   101    	dw24 os_get_mem_top				;52
                           B   102    
                           B   103    ;----------------------------------------------
                           B   104    ; Non-packed Text Strings
                           B   105    ;----------------------------------------------
                           B   106    
005BF5 50524F53 4520666F   B   107    welcome_message			db "PROSE for EZ80P by 
005BFD 7220455A 38305020 
005C05 62792050 68696C20 
005C0D 52757374 6F6E2032 
005C15 3031310B 0B00 
005C1B 44726976 65733A0B   B   108    storage_txt				db "Drives:",11,0
005C23 00 
005C24 434F4D4D 414E4453   B   109    os_dos_cmds_txt			db "COMMANDS",0
005C2C 00 
005C2D 53544152 5455502E   B   110    startup_script_fn		db "STARTUP.SCR",0
005C35 53435200 
005C39 2400                B   111    os_hex_prefix_txt		db "$",0
005C3B 50524F53 45205665   B   112    os_version_txt			db "PROSE Ver: $",0		005C43 723A2024 00 
005C48 414D4F45 42412056   B   113    hw_version_txt			db "AMOEBA Ver: $",0
005C50 65723A20 2400 
005C56 202F2000            B   114    fwd_slash_txt			db " / ",0
005C5A 4C6F6164 696E672E   B   115    loading_txt				db "Loading..",11,0
005C62 2E0B00 
005C65 53617669 6E672E2E   B   116    saving_txt				db "Saving..",11,0
005C6D 0B00 
005C6F 2E657A70 20         B   117    ezp_extension_txt		db ".ezp",32
005C74 0B4D6F72 653F0B0B   B   118    os_more_txt				db 11,"More?",11,11,0
005C7C 00 
005C7D 52656769 73746572   B   119    nmi_freeze_txt			db "Register Dump:"
005C85 2044756D 703A 
005C8B 0B0B00              B   120    crlfx2_txt				db 11,11,0
005C8E 7800                B   121    rep_char_txt			db "x",0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 246


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005C90 20746F20 00         B   122    to_txt					db " to ",0
005C95 4552524F 5200       B   123    error_txt				db "ERROR",0
005C9B 494620              B   124    if_command_txt			db "IF "
005C9E 454E4420            B   125    end_command_txt			db "END "
005CA2 4F532052 45515549   B   126    hw_warn_txt1			db "OS REQUIRES AMOEBA 
005CAA 52455320 414D4F45 
005CB2 42412056 3A 
005CB7 2D2D2D2D 00         B   127    hw_warn_txt2			db "----",0
005CBC 54686973 2077696C   B   128    pmq_txt					db "This will overwrite
005CC4 6C206F76 65727772 
005CCC 69746520 70726F74 
005CD4 65637465 64205241 
005CDC 4D2E2043 6F6E7469 
005CE4 6E756520 28792F6E 
005CEC 293F200B 00 
005CF1 4F555478 7800       B   129    envar_out_n_txt			db "OUTxx",0
                           B   130    
                           B   131    ;----------------------------------------------
                           B   132    ; Packed text section
                           B   133    ;----------------------------------------------
                           B   134    
005CF7 00444542 5547       B   135    dictionary				db 0,"DEBUG"			005CFD 002D2D2D 2D2D       B   136    						db 0,"-----"			005D03 00494F              B   137    						db 0,"IO"				005D06 002D2D              B   138    						db 0,"--"				005D09 004D4953 43         B   139    						db 0,"MISC"				005D0E 002D2D2D 2D         B   140    						db 0,"----"				005D13 00616464 72         B   141    						db 0,"addr"				005D18 0050524F 5345       B   142    						db 0,"PROSE"			005D1E 00612062 2063       B   143    						db 0,"a b c"			005D24 00416464 72657373   B   144    						db 0,"Address"			005D2C 00427974 6573       B   145    						db 0,"Bytes"			005D32 00457865 63757461   B   146    						db 0,"Executable"		005D3A 626C65 
005D3D 0048756E 74         B   147    						db 0,"Hunt"				005D42 0046696C 6C         B   148    						db 0,"Fill"				005D47 00476F74 6F         B   149    						db 0,"Goto"				                           B   150    						
005D4C 0053686F 77         B   151    						db 0,"Show"				005D51 00435055            B   152    						db 0,"CPU"				005D55 00526567 69737465   B   153    						db 0,"Registers"		005D5D 7273 
005D5F 004173              B   154    						db 0,"As"				005D62 00415343 4949       B   155    						db 0,"ASCII"			005D68 00436C65 6172       B   156    						db 0,"Clear"			005D6E 00536372 65656E     B   157    						db 0,"Screen"			005D75 00446973 61737365   B   158    						db 0,"Disassemble"		005D7D 6D626C65 
005D81 00537769 746368     B   159    						db 0,"Switch"			005D88 00436F70 79         B   160    						db 0,"Copy"				005D8D 00446576 696365     B   161    						db 0,"Device"			005D94 00436861 6E6765     B   162    						db 0,"Change"			Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 247


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005D9B 00447269 7665       B   163    						db 0,"Drive"			005DA1 00446972            B   164    						db 0,"Dir"				005DA5 002F                B   165    						db 0,"/"				005DA7 00666E              B   166    						db 0,"fn"				                           B   167    						
005DAA 0044656C 657465     B   168    						db 0,"Delete"			005DB1 0046696C 65         B   169    						db 0,"File"				005DB6 00496E66 6F         B   170    						db 0,"Info"				005DBB 00564F4C 783A       B   171    						db 0,"VOLx:"			005DC1 004D616B 65         B   172    						db 0,"Make"				005DC6 0052656D 6F756E74   B   173    						db 0,"Remount"			005DCE 00537461 7274       B   174    						db 0,"Start"			005DD4 00576172 6E696E67   B   175    						db 0,"Warning!"			005DDC 21 
005DDD 00416C6C            B   176    						db 0,"All"				005DE1 0052656D 6F7665     B   177    						db 0,"Remove"			005DE8 0052656E 616D65     B   178    						db 0,"Rename"			005DEF 004F72              B   179    						db 0,"Or"				005DF2 00526563 65697665   B   180    						db 0,"Receive"			005DFA 00536176 65         B   181    						db 0,"Save"				005DFF 00547261 6E736D69   B   182    						db 0,"Transmit"			005E07 74 
005E08 004C6F61 64         B   183    						db 0,"Load"				                           B   184    						
005E0D 004F532F 4857       B   185    						db 0,"OS/HW"			005E13 00566572 73696F6E   B   186    						db 0,"Version"			005E1B 005B7065 6E207061   B   187    						db 0,"[pen paper]"		005E23 7065725D 
005E27 803A                B   188    						db 80h,":"				005E29 813E                B   189    						db 81h,">"				005E2B 82534F55 4E44       B   190    						db 82h,"SOUND"			005E31 00566F6C 756D6573   B   191    						db 0,"Volumes"			005E39 8343                B   192    						db 83h,"C"				005E3B 844344              B   193    						db 84h,"CD"				005E3E 85434C53            B   194    						db 85h,"CLS"			005E42 8650454E            B   195    						db 86h,"PEN"			005E46 8744                B   196    						db 87h,"D"				005E48 8844454C            B   197    						db 88h,"DEL"			005E4C 89444952            B   198    						db 89h,"DIR"			005E50 8A48                B   199    						db 8ah,"H"				005E52 8B46                B   200    						db 8bh,"F"				                           B   201    						
005E54 004F6E              B   202    						db 0,"On"				005E57 8C464F52 4D4154     B   203    						db 8ch,"FORMAT"			005E5E 0047                B   204    						db 0,"G"				005E60 8D4C42              B   205    						db 8dh,"LB"				005E63 8E4D                B   206    						db 8eh,"M"				005E65 8F4D4F55 4E54       B   207    						db 8fh,"MOUNT"			005E6B 004265              B   208    						db 0,"Be"				005E6E 9052                B   209    						db 90h,"R"				005E70 915244              B   210    						db 91h,"RD"				005E73 92524E              B   211    						db 92h,"RN"				Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 248


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005E76 935258              B   212    						db 93h,"RX"				005E79 945342              B   213    						db 94h,"SB"				005E7C 9554                B   214    						db 95h,"T"				005E7E 965458              B   215    						db 96h,"TX"				005E81 97564552 53         B   216    						db 97h,"VERS"			005E86 00577269 7465       B   217    						db 0,"Write"			                           B   218    						
005E8C 004D656D 6F7279     B   219    						db 0,"Memory"			005E93 00227478 7422       B   220    						db 0,22h,"txt",22h		005E99 0057696C 6C         B   221    						db 0,"Will"				005E9E 00526174 65         B   222    						db 0,"Rate"				005EA3 0061                B   223    						db 0,"a"				005EA5 00507265 70         B   224    						db 0,"Prep"				005EAA 984D44              B   225    						db 98h,"MD"				005EAD 00447269 766573     B   226    						db 0,"Drives"			005EB4 006F6C64 666E       B   227    						db 0,"oldfn"			005EBA 006E6577 666E       B   228    						db 0,"newfn"			005EC0 006C656E            B   229    						db 0,"len"				005EC4 00436F6C 6F757273   B   230    						db 0,"Colours"			005ECC 993F                B   231    						db 99h,"?"				005ECE 00436F6D 6D616E64   B   232    						db 0,"Commands"			005ED6 73 
005ED7 0020                B   233    						db 0," "				005ED9 002D                B   234    						db 0,"-"				                           B   235    						
005EDB 00566F6C 756D65     B   236    						db 0,"Volume"			005EE2 0046756C 6C         B   237    						db 0,"Full"				005EE7 004E6F74            B   238    						db 0,"Not"				005EEB 00466F75 6E64       B   239    						db 0,"Found"			005EF1 004C656E 677468     B   240    						db 0,"Length"			005EF8 005A6572 6F         B   241    						db 0,"Zero"				005EFD 004F7574            B   242    						db 0,"Out"				005F01 004F66              B   243    						db 0,"Of"				005F04 0052616E 6765       B   244    						db 0,"Range"			005F0A 00416C72 65616479   B   245    						db 0,"Already"			005F12 00457869 737473     B   246    						db 0,"Exists"			005F19 004174              B   247    						db 0,"At"				005F1C 00526F6F 74         B   248    						db 0,"Root"				005F21 004D6973 6D617463   B   249    						db 0,"Mismatch"			005F29 68 
005F2A 00526571 75657374   B   250    						db 0,"Request"			005F32 00446174 61         B   251    						db 0,"Data"				                           B   252    				
005F37 00454F46            B   253    						db 0,"EOF"				005F3B 00416674 6572       B   254    						db 0,"After"			005F41 00556E6B 6E6F776E   B   255    						db 0,"Unknown"			005F49 00436F6D 6D616E64   B   256    						db 0,"Command"			005F51 00426164            B   257    						db 0,"Bad"				005F55 00486578            B   258    						db 0,"Hex"				005F59 004E6F              B   259    						db 0,"No"				005F5C 0041626F 72746564   B   260    						db 0,"Aborted"			005F64 00507265 73656E74   B   261    						db 0,"Present"			Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 249


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
005F6C 00436865 636B7375   B   262    						db 0,"Checksum"			005F74 6D 
005F75 004C6F61 646564     B   263    						db 0,"Loaded"			005F7C 00436F6D 6D73       B   264    						db 0,"Comms"			005F82 00457272 6F72       B   265    						db 0,"Error"			005F88 00417267 756D656E   B   266    						db 0,"Arguments"		005F90 7473 
005F92 004C6F73 74         B   267    						db 0,"Lost"				                           B   268    						
005F97 00                  B   269    						db 0
005F98 46415431 36         B   270    fat16_txt				db "FAT16"				                           B   271    
005F9D 00536572 69616C     B   272    						db 0,"Serial"			005FA4 0054696D 65         B   273    						db 0,"Time"				005FA9 00466F6E 74         B   274    						db 0,"Font"				005FAE 00546F6F            B   275    						db 0,"Too"				005FB2 004C6F6E 67         B   276    						db 0,"Long"				005FB7 00446573 74696E61   B   277    						db 0,"Destination"		005FBF 74696F6E 
005FC3 0053656C 65637465   B   278    						db 0,"Selected"			005FCB 64 
005FCC 00496E76 616C6964   B   279    						db 0,"Invalid"			005FD4 004D6973 73696E67   B   280    						db 0,"Missing"			005FDC 004F4B              B   281    						db 0,"OK"				005FDF 004F53              B   282    						db 0,"OS"				005FE2 0050726F 74656374   B   283    						db 0,"Protected"		005FEA 6564 
005FEC 0041                B   284    						db 0,"A"				005FEE 004973              B   285    						db 0,"Is"				005FF1 00456D70 7479       B   286    						db 0,"Empty"			005FF7 00456E64            B   287    						db 0,"End"				                           B   288    						
005FFB 0024                B   289    						db 0,"$"
005FFD 7878                B   290    hex_byte_txt			db "xx"					                           B   291    						
005FFF 00417070 656E64     B   292    						db 0,"Append"			006006 003F                B   293    						db 0,"?"				006008 0024                B   294    						db 0,"$"				00600A 00417761 6974696E   B   295    						db 0,"Awaiting"			006012 67 
006013 00526563 65697669   B   296    						db 0,"Receiving"		00601B 6E67 
00601D 0053656E 64696E67   B   297    						db 0,"Sending"			006025 000B                B   298    						db 0,11					006027 002E2E              B   299    						db 0,".."				00602A 004E616D 65         B   300    						db 0,"Name"				00602F 00204279 746573     B   301    						db 0," Bytes"			006036 00507265 7373       B   302    						db 0,"Press"			00603C 00416E79            B   303    						db 0,"Any"				006040 004B6579            B   304    						db 0,"Key"				006044 00456E74 6572       B   305    						db 0,"Enter"			00604A 9A455845 43         B   306    						db 9ah,"EXEC"			Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 250


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   307    				
00604F 0052756E            B   308    						db 0,"Run"				006053 00536372 697074     B   309    						db 0,"Script"			00605A 00594553            B   310    yes_txt					db 0,"YES" 				00605E 00546F              B   311    						db 0,"To"				006061 00536574            B   312    						db 0,"Set"				006065 00436F6E 74696E75   B   313    						db 0,"Continue"			00606D 65 
00606E 004E6F6E 65         B   314    						db 0,"None"				006073 00447269 766572     B   315    						db 0,"Driver"			00607A 9B3C                B   316    						db 9bh,"<"				00607C 004E6577 6572       B   317    						db 0,"Newer"			006082 00526571 75697265   B   318    						db 0,"Required"			00608A 64 
00608B 00465047 4120636F   B   319    						db 0,"FPGA config"		006093 6E666967 
006097 00556E63 68616E67   B   320    						db 0,"Unchanged"		00609F 6564 
0060A1 006C6F63 206C656E   B   321    						db 0,"loc len [per vol 
0060A9 205B7065 7220766F 
0060B1 6C206368 616E7320 
0060B9 6C6F6F70 3F5D20 
0060C0 9C50414C 45545445   B   322    						db 9ch,"PALETTE"		0060C8 0070616C 65747465   B   323    						db 0,"palette"			                           B   324    						
0060D0 9D4D4F55 5345       B   325    						db 9dh,"MOUSE"			0060D6 00456E61 626C65     B   326    						db 0,"Enable"			0060DD 004B6579 626F6172   B   327    						db 0,"Keyboard"			0060E5 64 
0060E6 00446574 65637465   B   328    						db 0,"Detected"			0060EE 64 
0060EF 004D6F75 7365       B   329    						db 0,"Mouse"			0060F5 00536563 746F72     B   330    						db 0,"Sector"			0060FC 00496E63 6F727265   B   331    						db 0,"Incorrect"		006104 6374 
006106 9E564D4F 4445       B   332    						db 9eh,"VMODE"			00610C 00566964 656F       B   333    						db 0,"Video"			006112 004D6F64 65         B   334    						db 0,"Mode"				006117 9F464F4E 54         B   335    						db 9fh,"FONT"			00611C 00416E64            B   336    						db 0,"And"				006120 00536176 696E67     B   337    						db 0,"Saving"			006127 00556E73 7570706F   B   338    						db 0,"Unsupported"		00612F 72746564 
006133 A0534554            B   339    						db 0a0h,"SET"			006137 005B7661 723D7374   B   340    						db 0,"[var=string]"		00613F 72696E67 5D 
                           B   341    
006144 00456E76 6172       B   342    						db 0,"Envar"			00614A A1445A              B   343    						db 0a1h,"DZ"			00614D 0041444C            B   344    						db 0,"ADL"				006151 005A3830            B   345    						db 0,"Z80"				006155 00506C61 79         B   346    						db 0,"Play"				Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 251


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
00615A 00417564 696F       B   347    						db 0,"Audio"			006160 A2415641 494C       B   348    						db 0a2h,"AVAIL"			006166 00467265 65         B   349    						db 0,"Free"				00616B 0043616E 6E6F74     B   350    						db 0,"Cannot"			006172 00416C6C 6F636174   B   351    						db 0,"Allocate"			00617A 65 
00617B 00416C6C 6F636174   B   352    						db 0,"Allocated"		006183 6564 
006185 A34649              B   353    						db 0a3h,"FI"			                           B   354    						
006188 0001                B   355    						db 0,1					                           B   356    
                           B   357    
                           B   358    
                           B   359    
                           B   360    
00618A 2199696A 5F916F92   B   361    save_append_msg			db 021h,099h,069h,06ah,
006192 9700 
006194 2F0A9300            B   362    os_loadaddress_msg 		db 02fh,00ah,093h,0		006198 21649300            B   363    os_filesize_msg			db 021h,064h,093h,0		00619C 94219700            B   364    ser_rec_msg				db 094h,021h,097h,0		0061A0 956F9897 00         B   365    ser_rec2_msg			db 095h,06fh,098h,097h,
0061A5 966F9897 00         B   366    ser_send_msg			db 096h,06fh,098h,097h,
0061AA 9521BBBC 989700     B   367    ser_recsave_msg			db 095h,021h,0bbh,0bch,
0061B1 A77C9097 00         B   368    hw_err_msg				db 0a7h,07ch,090h,097h,
0061B6 607C00              B   369    disk_err_msg			db 060h,07ch,0			0061B9 A1779797 00         B   370    script_aborted_msg		db 0a1h,077h,097h,097h,
0061BE 76B2B397 00         B   371    no_keyboard_msg			db 076h,0b2h,0b3h,097h,
                           B   372    
0061C3 9700                B   373    packed_help1				db 097h,0
0061C5 0100                B   374    							db 001h,0			0061C7 0200                B   375    							db 002h,0			0061C9 3307095F 4F500B00   B   376    							db 033h,007h,009h,0
0061D1 3407515F 4F1400     B   377    							db 034h,007h,051h,0
0061D8 37070707 5F195000   B   378    							db 037h,007h,007h,0
0061E0 3B075FC2 1700       B   379    							db 03bh,007h,05fh,0
0061E6 C1075FC3 1700       B   380    							db 0c1h,007h,05fh,0
0061EC 3F070754 5F0E5000   B   381    							db 03fh,007h,007h,0
0061F4 42075F0F 0A00       B   382    							db 042h,007h,05fh,0
0061FA 3E070709 5F0D5000   B   383    							db 03eh,007h,007h,0
006202 44075F10 500B00     B   384    							db 044h,007h,05fh,0
006209 475F1011 1200       B   385    							db 047h,05fh,010h,0
00620F 4C075F10 50131400   B   386    							db 04ch,007h,05fh,0
                           B   387    	
006217 9700                B   388    							db 097h,0
006219 0300                B   389    							db 003h,0			00621B 0400                B   390    							db 004h,0			00621D 38231E1D 5F1B601E   B   391    							db 038h,023h,01eh,0
006225 1D00 
006227 3C1F5F20 2100       B   392    							db 03ch,01fh,05fh,0
00622D 3D5F101D 00         B   393    							db 03dh,05fh,010h,0
006232 CB1F5F21 2200       B   394    							db 0cbh,01fh,05fh,0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 252


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
006238 411A995F 551C00     B   395    							db 041h,01ah,099h,0
00623F 431F075F 2F2100     B   396    							db 043h,01fh,007h,0
006246 561D5F24 1D00       B   397    							db 056h,01dh,05fh,0
00624C 455F2557 00         B   398    							db 045h,05fh,025h,0
006251 481D5F29 1D00       B   399    							db 048h,01dh,05fh,0
006257 4958595F 2A2100     B   400    							db 049h,058h,059h,0
00625E 4A1F075F 2C2100     B   401    							db 04ah,01fh,007h,0
006265 4B1F075A 5F2D2100   B   402    							db 04bh,01fh,007h,0
00626D 4D1F075A 5F2E2100   B   403    							db 04dh,01fh,007h,0
006275 235F1860 00         B   404    							db 023h,05fh,018h,0
                           B   405    
00627A 9700                B   406    							db 097h,0
00627C 0500                B   407    							db 005h,0			00627E 0600                B   408    							db 006h,0			006280 C65F10C7 5000       B   409    							db 0c6h,05fh,010h,0
006286 395F1516 00         B   410    							db 039h,05fh,015h,0
00628B 9F1F5FA0 A100       B   411    							db 09fh,01fh,05fh,0
006291 BA1F5F1B 8200       B   412    							db 0bah,01fh,05fh,0
006297 B05FB1B0 A700       B   413    							db 0b0h,05fh,0b1h,0
00629D AE095F1B AF00       B   414    							db 0aeh,09h,05fh,01
0062A3 3A325F1B 5B00       B   415    							db 03ah,032h,05fh,0
0062A9 BEBF5FA4 C000       B   416    							db 0beh,0bfh,05fh,0
0062AF 35AD5FC4 5013C500   B   417    							db 035h,0adh,05fh,0
0062B7 4E5F1030 3100       B   418    							db 04eh,05fh,010h,0
0062BD B7095F1B B8B900     B   419    							db 0b7h,09h,5fh,01b
0062C4 5C5F105D 00         B   420    							db 05ch,05fh,010h,0
0062C9 9700                B   421    							db 097h,0
0062CB FF                  B   422    							db 0ffh
                           B   423    
                           B   424    
                           B   425    
                           B   426    
0062CC 7E1D00              B   427    os_cmd_locs					dw24 os_cmd_colon	0062CF A32C00              B   428    							dw24 os_cmd_gtr		0062D2 EE3600              B   429    							dw24 os_cmd_sound	0062D5 251C00              B   430    							dw24 os_cmd_c		0062D8 921C00              B   431    							dw24 os_cmd_cd		0062DB 781D00              B   432    							dw24 os_cmd_cls		0062DE 553500              B   433    							dw24 os_cmd_pen		0062E1 981D00              B   434    							dw24 os_cmd_d		                           B   435    					
0062E4 F92800              B   436    							dw24 os_cmd_del		0062E7 0E2900              B   437    							dw24 os_cmd_dir		0062EA D12B00              B   438    							dw24 os_cmd_h		0062ED 4A2A00              B   439    							dw24 os_cmd_f		0062F0 722A00              B   440    							dw24 os_cmd_format	0062F3 D72C00              B   441    							dw24 os_cmd_lb		0062F6 6A2D00              B   442    							dw24 os_cmd_m		0062F9 BC3200              B   443    							dw24 os_cmd_remount
                           B   444    
0062FC C12D00              B   445    							dw24 os_cmd_r		0062FF F22E00              B   446    							dw24 os_cmd_rd		Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 253


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
006302 FF2E00              B   447    							dw24 os_cmd_rn		006305 832F00              B   448    							dw24 os_cmd_rx		006308 1B2F00              B   449    							dw24 os_cmd_sb		00630B 683200              B   450    							dw24 os_cmd_t		00630E FC3100              B   451    							dw24 os_cmd_tx		006311 C83200              B   452    							dw24 os_cmd_vers	                           B   453    							
006314 B42D00              B   454    							dw24 os_cmd_md		006317 7F2C00              B   455    							dw24 os_cmd_help	00631A 1B3300              B   456    							dw24 os_cmd_exec	00631D 533500              B   457    							dw24 os_cmd_ltn		006320 793500              B   458    							dw24 os_cmd_palette
006323 AA3500              B   459    							dw24 os_cmd_mouse	006326 E63500              B   460    							dw24 os_cmd_vmode	006329 F63500              B   461    							dw24 os_cmd_font	                           B   462    							
00632C 853600              B   463    							dw24 os_cmd_set		00632F E13600              B   464    							dw24 os_cmd_dz		006332 853700              B   465    							dw24 os_cmd_avail	006335 153800              B   466    							dw24 os_cmd_fi		                           B   467    							
                           B   468    								
006338 00                  B   469    packed_msg_list				db 0				                           B   470    		
006339 606100              B   471    							db 060h,061h,0		00633C 21626300            B   472    							db 021h,062h,063h,0
006340 1D6100              B   473    							db 01dh,061h,0		006343 628C1D00            B   474    							db 062h,08ch,01dh,0
006347 1D8D628E 00         B   475    							db 01dh,08dh,062h,0
00634C 628C2100            B   476    							db 062h,08ch,021h,0
006350 21648D65 00         B   477    							db 021h,064h,08dh,0
006355 0A666768 00         B   478    							db 00ah,066h,067h,0
00635A 2199696A 00         B   479    							db 021h,099h,069h,0
00635F 696B6C00            B   480    							db 069h,06bh,06ch,0
                           B   481    					
006363 727300              B   482    							db 072h,073h,0		006366 877500              B   483    							db 087h,075h,0		006369 76219900            B   484    							db 076h,021h,099h,0
                           B   485    					
00636D 87B500              B   486    							db 087h,0b5h,0		006370 797400              B   487    							db 079h,074h,0		006373 9A7A00              B   488    bytes_loaded_msg			db 09ah,07ah,0		006376 7B7C00              B   489    							db 07bh,07ch,0		006379 747D00              B   490    							db 074h,07dh,0		                           B   491    
00637C 627F00              B   492    format_err_msg				db 062h,07fh,0		                           B   493    
00637F 816600              B   494    							db 081h,066h,0		006382 21998384 00         B   495    							db 021h,099h,083h,0
006387 76260A00            B   496    							db 076h,026h,00ah,0
00638B 76216400            B   497    							db 076h,021h,064h,0
00638F 2D7700              B   498    							db 02dh,077h,0		Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 254


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
006392 2D7C6B85 00         B   499    							db 02dh,07ch,06bh,0
006397 628C080C 00         B   500    							db 062h,08ch,08h,0c
00639C A9316708 AA00       B   501    							db 0a9h,031h,067h,0
0063A2 768F0A00            B   502    							db 076h,08fh,00ah,0
0063A6 76850A00            B   503    							db 076h,085h,00ah,0
                           B   504    					
0063AA 746800              B   505    							db 074h,068h,0		0063AD 887D00              B   506    							db 088h,07dh,0		0063B0 8900                B   507    ok_msg						db 089h,0			                           B   508    					
0063B2 876000              B   509    							db 087h,060h,0		0063B5 1A627800            B   510    							db 01ah,062h,078h,0
                           B   511    					
0063B9 1D626300            B   512    							db 01dh,062h,063h,0
0063BD 7700                B   513    							db 077h,0			                           B   514    					
0063BF 21996D00            B   515    							db 021h,099h,06dh,0
0063C3 8A508B00            B   516    							db 08ah,050h,08bh,0
0063C7 6F71706E 00         B   517    							db 06fh,071h,070h,0
0063CC 763600              B   518    no_vols_msg					db 076h,036h,0		0063CF 97A66300            B   519    none_found_msg				db 097h,0a6h,063h,0
                           B   520    							
0063D3 B62100              B   521    							db 0b6h,021h,0		0063D6 A9316708 AA00       B   522    							db 0a9h,031h,067h,0
0063DC 21AC00              B   523    							db 021h,0ach,0		                           B   524    							
0063DF 766F00              B   525    							db 076h,06fh,0		0063E2 746F00              B   526    							db 074h,06fh,0		0063E5 66676800            B   527    							db 066h,067h,068h,0
0063E9 BD1A00              B   528    							db 0bdh,01ah,0		0063EC 1A62B300            B   529    							db 01ah,062h,0b3h,0
0063F0 1A7C00              B   530    							db 01ah,07ch,0		0063F3 817C00              B   531    							db 081h,07ch,0		0063F6 C8C95000            B   532    							db 0c8h,0c9h,050h,0
0063FA CA508B00            B   533    							db 0cah,050h,08bh,0
0063FE B8508B00            B   534    							db 0b8h,050h,08bh,0
                           B   535    							
006402 FF                  B   536    							db 0ffh				                           B   537    
                           B   538    ;----------------------------------------------
                           B   539    
006403                     B   540    kernal_error_code_translation
                           B   541    
006403 242D2E14 08110F2A   B   542    					db 24h,2dh,2eh,14h, 08h,11h
00640B 2F303132 331F34 
                           B   543    					
006412                     B   544    fs_error_code_translation
                           B   545    
006412 00010203 04050607   B   546    					db 00h,01h,02h,03h, 04h,05h
00641A 08090A23 270D1321 
006422 22232425 260E0000   B   547    					db 22h,23h,24h,25h, 26h,0eh
                           B   548    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 255


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   549    
                           B   550    ;----------------------------------------------
                           B   551    ; Scancode to ASCII keymaps
                           B   552    ;----------------------------------------------
                           B   553    
                           C     0    include	'UK_keymap.asm'
00642A                     C     1    keymap:
00642A 00000000 00000000   C     2                    db 000h,000h,000h,000h,000h,000
006432 00000000 00006000 
00643A 00000000 00713100   C     3                    db 000h,000h,000h,000h,000h,071
006442 00007A73 61773200 
00644A 00637864 65343300   C     4                    db 000h,063h,078h,064h,065h,034
006452 00207666 74723500 
00645A 006E6268 67793600   C     5                    db 000h,06Eh,062h,068h,067h,079
006462 00006D6A 75373800 
00646A 002C6B69 6F303900   C     6                    db 000h,02Ch,06Bh,069h,06Fh,030
006472 002E2F6C 3B702D00 
00647A 00002700 5B3D0000   C     7                    db 000h,000h,027h,000h,05Bh,03D
006482 0000005D 00230000 
00648A 005C0000 00000000   C     8                    db 000h,05Ch,000h,000h,000h,000
006492 00000000 00000000 
00649A AC000000 00000051   C     9                    db 0ACh,000h,000h,000h,000h,000
0064A2 21000000 5A534157 
0064AA 22000043 58444524   C    10                    db 022h,000h,000h,043h,058h,044
0064B2 A3000020 56465452 
0064BA 2500004E 42484759   C    11                    db 025h,000h,000h,04Eh,042h,048
0064C2 5E000000 4D4A5526 
0064CA 2A00003C 4B494F29   C    12                    db 02Ah,000h,000h,03Ch,04Bh,049
0064D2 2800003E 3F4C3A50 
0064DA 5F000000 40007B2B   C    13                    db 05Fh,000h,000h,000h,040h,000
0064E2 00000000 007D007E 
0064EA 0000007C 00000000   C    14                    db 000h,000h,000h,07Ch,000h,000
0064F2 00000000 00000000 
0064FA 00000000 00000000   C    15                    db 000h,000h,000h,000h,000h,000
006502 00000000 00000000 
00650A 00000000 00000000   C    16                    db 000h,000h,000h,000h,000h,000
006512 00000000 00000000 
00651A 00000000 00000000   C    17                    db 000h,000h,000h,000h,000h,000
006522 00000000 00000000 
00652A 00000000 00000000   C    18                    db 000h,000h,000h,000h,000h,000
006532 00000000 00000000 
00653A 00000000 00000000   C    19                    db 000h,000h,000h,000h,000h,000
006542 00000000 00000000 
00654A 00000000 0000       C    20                    db 000h,000h,000h,000h,000h,000
                           B   555    
       0000642A            B   556    unshifted_keymap equ keymap+00h
       0000648C            B   557    shifted_keymap   equ keymap+62h
       000064EE            B   558    alted_keymap	 equ keymap+c4h
                           B   559    	
                           B   560    ;----------------------------------------------
                           B   561    
006550 00                  B   562    ui_index				db 0				; u
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 256


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
006551 00                  B   563    ui_maxchars				db 0				; "
006552 000000              B   564    ui_string_addr			dw24 0				; "
                           B   565    
                           B   566    ;----------------------------------------------
                           B   567    ; OS Display parameters
                           B   568    ;----------------------------------------------
                           B   569    
006555 00                  B   570    video_mode				db 0
006556 0700                B   571    current_pen				dw 07h				; C
006558 0000                B   572    background_colour		dw 00h				; F
                           B   573    
00655A 00000F00 000F0F0F   B   574    pen_palette				dw 0000h,000fh,0f00h,0f
006562 F000FF00 F00FFF0F 
00656A 55059909 CC0C710F   B   575    						dw 0555h,0999h,0ccch,0f
006572 7F00F80D 40088C03 
                           B   576    
00657A 00                  B   577    plotchar_colour			db 0				; c
                           B   578    
00657B 00                  B   579    char_under_cursor		db 0			
00657C 00                  B   580    cursor_present			db 0				; 1
00657D 00                  B   581    overwrite_mode			db 0
00657E 00                  B   582    cursor_image_char		db 0
                           B   583    
                           B   584    ;----------------------------------------------
                           B   585    
00657F                     B   586    display_parameters
                           B   587    
00657F 00                  B   588    video_doubling			db 0
006580 000000              B   589    charmap_rows			dw24 0					006583 000000              B   590    charmap_columns			dw24 0				
                           B   591    
                           B   592    ;----------------------------------------------
                           B   593    
006586                     B   594    vmode_parameter_list
                           B   595    
006586 00503C              B   596    				db 00b, 80,60	; vmode 0 (vide
006589 01501E              B   597    				db 01b, 80,30	; vmode 1
00658C 02283C              B   598    				db 10b, 40,60	; vmode 2	
00658F 03281E              B   599    				db 11b, 40,30	; vmode 3
                           B   600    				
                           B   601    ;==============================================
                           B   602    ;  Serial Routine Data
                           B   603    ;==============================================
                           B   604    
006592 000000              B   605    serial_ez80_address		dw24 0
006595 000000              B   606    serial_file_length		dw24 0
006598 000000              B   607    serial_fn_addr			dw24 0
00659B 00 00 00 00 00 00   B   608    serial_filename			blkb 18,0		
0065A1 00 00 00 00 00 00 
0065A7 00 00 00 00 00 00 
0065AD 00                  B   609    serial_fn_length		db 0
0065AE 00                  B   610    serial_timeout			db 0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 257


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   611    
0065AF 00 00 00 00 00 00   B   612    serial_fileheader		blkb 20,0
0065B5 00 00 00 00 00 00 
0065BB 00 00 00 00 00 00 
0065C1 00 00 
0065C3 5A383050 2E464845   B   613    serial_header_id		db "Z80P.FHEADER"		0065CB 41444552 
0065CF 00                  B   614    serial_transfer_started	db 0
                           B   615    
0065D0 00                  B   616    anim_wait_count			db 0
                           B   617    
                           B   618    ;==============================================
                           B   619    
0065D1 F3C8                B   620    intellimouse_seq	db 0f3h,200
0065D3 F364                B   621    					db 0f3h,100
0065D5 F350                B   622    					db 0f3h,80
                           B   623    
0065D7 E803                B   624    mouse_settings_seq	db 0e8h,default_resolution
0065D9 E6                  B   625    					db default_scaling
0065DA F364                B   626    					db 0f3h,default_sample_rate
0065DC F4                  B   627    					db 0f4h
                           B   628    					
                           B   629    ;----------------------------------------------
                           B   630    ; FILE SYSTEM RELATED VARIABLES
                           B   631    ;----------------------------------------------
                           B   632    
0065DD 00                  B   633    boot_drive			db 0
                           B   634    
0065DE 00                  B   635    current_volume		db 0
                           B   636    	
0065DF 00                  B   637    current_driver		db 0			;normally u
                           B   638    
0065E0 00                  B   639    device_count		db 0			;IE: the nu
                           B   640    
0065E1 00                  B   641    volume_count		db 0
                           B   642    				
0065E2 20564F4C 303A00     B   643    vol_txt				db " VOL0:",0	;space pref
0065E9 44455630 3A00       B   644    dev_txt				db "DEV0:",0
                           B   645    
0065EF 000000              B   646    sector_rd_wr_addr	dw24 0
                           B   647    
                           B   648    
                           B   649    ;==============================================
                           B   650    
0065F2                     B   651    volume_dir_clusters
                           B   652    
0065F2 00 00 00 00 00 00   B   653    					blkb max_volumes*3,0
0065F8 00 00 00 00 00 00 
0065FE 00 00 00 00 00 00 
006604 00 00 00 00 00 00 
                           B   654    	
00660A                     B   655    volume_mount_list
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 258


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   656    
00660A 00 00 00 00 00 00   B   657    					blkb max_volumes*16,0
006610 00 00 00 00 00 00 
006616 00 00 00 00 00 00 
00661C 00 00 00 00 00 00 
006622 00 00 00 00 00 00 
006628 00 00 00 00 00 00 
00662E 00 00 00 00 00 00 
006634 00 00 00 00 00 00 
00663A 00 00 00 00 00 00 
006640 00 00 00 00 00 00 
006646 00 00 00 00 00 00 
00664C 00 00 00 00 00 00 
006652 00 00 00 00 00 00 
006658 00 00 00 00 00 00 
00665E 00 00 00 00 00 00 
006664 00 00 00 00 00 00 
00666A 00 00 00 00 00 00 
006670 00 00 00 00 00 00 
006676 00 00 00 00 00 00 
00667C 00 00 00 00 00 00 
006682 00 00 00 00 00 00 
006688 00 00 
                           B   658    
                           B   659    ; Each entry is 16 bytes in the form:
                           B   660    
                           B   661    ; OFFSETS
                           B   662    ; -------
                           B   663    ; $00 - Volume is present (0/1)
                           B   664    ; $01 - Volume's host driver number (1 byte)	                           B   665    ; $02 - [reserved]
                           B   666    ; $03 - [reserved]
                           B   667    ; $04 - Volume's capacity in sectors (3 bytes)
                           B   668    ; $07 - Partition number on host drive (0/1/2/3
                           B   669    ; $08 - Offset in sectors from MBR to partition
                           B   670    ; $0c - [reserved]
                           B   671    ; $0d - [reserved]	
                           B   672    ; $0e - [reserved]
                           B   673    ; $0f - [reserved]
                           B   674    
                           B   675    ;==============================================
                           B   676    
00668A                     B   677    host_device_hardware_info
                           B   678    
00668A 00 00 00 00 00 00   B   679    					blkb 32*4,0
006690 00 00 00 00 00 00 
006696 00 00 00 00 00 00 
00669C 00 00 00 00 00 00 
0066A2 00 00 00 00 00 00 
0066A8 00 00 00 00 00 00 
0066AE 00 00 00 00 00 00 
0066B4 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 259


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
0066BA 00 00 00 00 00 00 
0066C0 00 00 00 00 00 00 
0066C6 00 00 00 00 00 00 
0066CC 00 00 00 00 00 00 
0066D2 00 00 00 00 00 00 
0066D8 00 00 00 00 00 00 
0066DE 00 00 00 00 00 00 
0066E4 00 00 00 00 00 00 
0066EA 00 00 00 00 00 00 
0066F0 00 00 00 00 00 00 
0066F6 00 00 00 00 00 00 
0066FC 00 00 00 00 00 00 
006702 00 00 00 00 00 00 
006708 00 00 
                           B   680    
                           B   681    ; Each entry is 32 bytes..
                           B   682    ;
                           B   683    ; OFFSETS
                           B   684    ; -------
                           B   685    ; $00 - Device driver number
                           B   686    ; $01 - Device's TOTAL capacity in sectors (4 b
                           B   687    ; $05 - Zero terminated hardware name (22 ASCII
                           B   688    ; (remaining bytes to $1F currently unused)
                           B   689    
                           B   690    ;----------------------------------------------
                           B   691    
00670A 000000              B   692    dhwn_temp_pointer		dw24 0
                           B   693    
00670D 00                  B   694    partition_temp			db 0
00670E 00                  B   695    vols_on_device_temp		db 0
00670F 00                  B   696    sys_driver_backup		db 0
006710 00                  B   697    os_quiet_mode			db 0
                           B   698    
                           B   699    ;----------------------------------------------
                           B   700    
006711 00 00 00 00 00 00   B   701    time_data				blkb	7,0
006717 00 
                           B   702    
006718 00                  B   703    frozen					db 0
006719 01                  B   704    first_run				db 1
00671A 01                  B   705    devices_connected		db 1					                           B   706    
                           B   707    ;----------------------------------------------
                           B   708    
00671B C96D00              B   709    free_sysram_base		dw24 os_max_addr
00671E FFFF07              B   710    free_sysram_top			dw24 sysram_addr+sysram
                           B   711    
006721 000080              B   712    free_vram_a_base		dw24 vram_a_addr
006724 FFFF87              B   713    free_vram_a_top			dw24 vram_a_addr+7ffffh
                           B   714    
006727 0000C0              B   715    free_vram_b_base		dw24 vram_b_addr
00672A FFFFC7              B   716    free_vram_b_top			dw24 vram_b_addr+7ffffh
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 260


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
                           B   717    
00672D 000000              B   718    charmap_size			dw24 0
                           B   719    
                           B   720    ;----------------------------------------------
                           B   721    
006730 00                  B   722    store_a1				db 0		
006731 000000              B   723    store_bc1				dw24 0
006734 000000              B   724    store_de1				dw24 0
006737 000000              B   725    store_hl1				dw24 0
00673A 00                  B   726    store_a2				db 0
00673B 000000              B   727    store_bc2				dw24 0
00673E 000000              B   728    store_de2				dw24 0
006741 000000              B   729    store_hl2				dw24 0
006744 000000              B   730    store_ix				dw24 0
006747 000000              B   731    store_iy				dw24 0
00674A 000000              B   732    store_pc				dw24 0		;only relev
00674D 000000              B   733    store_spl				dw24 0
006750 0000                B   734    store_sps				dw 0
006752 00                  B   735    store_mbase				db 0
006753 00                  B   736    store_f	 				db 0
006754 00                  B   737    store_adl				db 0
                           B   738    
                           B   739    ;----------------------------------------------
006755                     B   740    os_variables
                           B   741    ;----------------------------------------------
                           B   742    
006755 000000              B   743    kernal_ix_cache			dw24 0
                           B   744    
006758 00                  B   745    store_registers			db 0
006759 000000              B   746    com_start_addr			dw24 0
                           B   747    
00675C 00 00 00 00 00 00   B   748    temp_string				blkb max_buffer_chars+2
006762 00 00 00 00 00 00 
006768 00 00 00 00 00 00 
00676E 00 00 00 00 00 00 
006774 00 00 00 00 00 00 
00677A 00 00 00 00 00 00 
006780 00 00 00 00 00 00 
006786 00 00 00 00 00 00 
00678C 00 00 00 00 00 00 
006792 00 00 00 00 00 00 
006798 00 00 00 00 00 00 
00679E 00 00 00 00 00 00 
0067A4 00 00 00 00 00 00 
0067AA 00 00 00 00 
0067AE 00 00 00 00 00 00   B   749    script_fn				blkb 13,0
0067B4 00 00 00 00 00 00 
0067BA 00 
                           B   750    
0067BB 00                  B   751    sector_lba0				db 0			; keep 
0067BC 00                  B   752    sector_lba1				db 0
0067BD 00                  B   753    sector_lba2				db 0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 261


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
0067BE 00                  B   754    sector_lba3				db 0
                           B   755    
                           B   756    ;----------------------------------------------
                           B   757    
0067BF 000000              B   758    cursor_pos				dw24 0			; 3rd b
                           B   759    
       000067BF            B   760    cursor_y 				equ cursor_pos
       000067C0            B   761    cursor_x 				equ cursor_pos+1
                           B   762    						
0067C2 00                  B   763    cursorflashtimer		db 0
0067C3 00                  B   764    cursor_status			db 0
0067C4 00                  B   765    os_linecount			db 0
                           B   766    		
0067C5 000000              B   767    mem_mon_addr			dw24 0
0067C8 000000              B   768    cmdop_start_address		dw24 0
0067CB 000000              B   769    cmdop_end_address		dw24 0
0067CE 000000              B   770    copy_dest_address		dw24 0
0067D1 000000              B   771    hex_address				dw24 0
                           B   772    
0067D4 000000              B   773    find_hexstringascii 	dw24 0
0067D7 000000              B   774    xrr_temp				dw24 0
0067DA 00                  B   775    temphex					db 0
0067DB 00                  B   776    fillbyte				db 0 
0067DC 00                  B   777    ui_im_cache				db 0
                           B   778    
0067DD 00 00 00 00 00 00   B   779    commandstring			blkb max_buffer_chars+2
0067E3 00 00 00 00 00 00 
0067E9 00 00 00 00 00 00 
0067EF 00 00 00 00 00 00 
0067F5 00 00 00 00 00 00 
0067FB 00 00 00 00 00 00 
006801 00 00 00 00 00 00 
006807 00 00 00 00 00 00 
00680D 00 00 00 00 00 00 
006813 00 00 00 00 00 00 
006819 00 00 00 00 00 00 
00681F 00 00 00 00 00 00 
006825 00 00 00 00 00 00 
00682B 00 00 00 00 
00682F 00 00 00 00 00 00   B   780    output_line				blkb max_buffer_chars+2
006835 00 00 00 00 00 00 
00683B 00 00 00 00 00 00 
006841 00 00 00 00 00 00 
006847 00 00 00 00 00 00 
00684D 00 00 00 00 00 00 
006853 00 00 00 00 00 00 
006859 00 00 00 00 00 00 
00685F 00 00 00 00 00 00 
006865 00 00 00 00 00 00 
00686B 00 00 00 00 00 00 
006871 00 00 00 00 00 00 
006877 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 262


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
00687D 00 00 00 00 
                           B   781    				
006881 000000              B   782    os_args_loc				dw24 0
006884 000000              B   783    os_args_pos_cache		dw24 0
                           B   784    
006887 000000              B   785    os_dir_block_cache  	dw24 0
00688A 000000              B   786    os_extcmd_jmp_addr		dw24 0
                           B   787    
                           B   788    
00688D 000000              B   789    script_dir				dw24 0
006890 000000              B   790    script_file_offset		dw24 0
006893 000000              B   791    script_length			dw24 0
                           B   792    
006896 00                  B   793    script_flags			db 0
                           B   794    
006897 00 00 00 00 00 00   B   795    if_name_txt				blkb max_if_chars+2,0
00689D 00 00 00 00 00 00 
0068A3 00 00 00 00 00 00 
0068A9 00 00 00 00 00 00   B   796    if_value_txt			blkb max_if_chars+2,0
0068AF 00 00 00 00 00 00 
0068B5 00 00 00 00 00 00 
0068BB 00 00 00 00 00 00   B   797    if_label_txt			blkb max_if_chars+2,0
0068C1 00 00 00 00 00 00 
0068C7 00 00 00 00 00 00 
                           B   798    
                           B   799    
0068CD 0000                B   800    char_to_print			db 0,0	; zero terminat
                           B   801    
                           B   802    ;----------------------------------------------
                           B   803    ; Keyboard buffer and registers
                           B   804    ;----------------------------------------------
                           B   805    
0068CF 00 00 00 00 00 00   B   806    scancode_buffer			blkb 32,0
0068D5 00 00 00 00 00 00 
0068DB 00 00 00 00 00 00 
0068E1 00 00 00 00 00 00 
0068E7 00 00 00 00 00 00 
0068ED 00 00 
                           B   807    
0068EF 00                  B   808    key_buf_wr_idx			db 0
0068F0 00                  B   809    key_buf_rd_idx			db 0
0068F1 00                  B   810    key_release_mode		db 0		
0068F2 00                  B   811    not_currently_used		db 0
0068F3 00                  B   812    key_mod_flags			db 0
0068F4 00                  B   813    current_scancode		db 0
0068F5 00                  B   814    current_asciicode		db 0
                           B   815    
                           B   816    ;----------------------------------------------
                           B   817    ; Mouse related registers
                           B   818    ;----------------------------------------------
                           B   819    
0068F6 00                  B   820    mouse_id				db 0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 263


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
0068F7 00                  B   821    mouse_packet_size		db 0
                           B   822    
0068F8 00 00 00 00         B   823    mouse_packet			blkb 4,0			; t
0068FC 00                  B   824    mouse_packet_index		db 0				;
0068FD 00                  B   825    mouse_buttons			db 0				;
0068FE 000000              B   826    mouse_disp_x			dw24 0				; c
006901 000000              B   827    mouse_disp_y			dw24 0				; c
006904 00                  B   828    mouse_wheel				db 0				; m
006905 00                  B   829    mouse_updated			db 0
                           B   830    
006906 000000              B   831    mouse_window_size_x		dw24 0				; t
006909 000000              B   832    mouse_window_size_y		dw24 0
00690C 000000              B   833    mouse_abs_x				dw24 0
00690F 000000              B   834    mouse_abs_y				dw24 0
006912 000000              B   835    mouse_disp_x_old		dw24 0
006915 000000              B   836    mouse_disp_y_old		dw24 0
006918 000000              B   837    mouse_disp_x_buffer		dw24 0
00691B 000000              B   838    mouse_disp_y_buffer		dw24 0
00691E 00                  B   839    mouse_new_window		db 0
                           B   840    
00691F 00                  B   841    os_pointer_enable		db 0
006920 000000              B   842    os_pointer_definition	dw24 0				
006923 000000              B   843    os_pointer_height		dw24 0
006926 00                  B   844    os_pointer_palette		db 0
                           B   845    
                           B   846    ;----------------------------------------------
       000067BF            B   847    first_os_var			equ cursor_y
006927 00                  B   848    last_os_var				db 0
                           B   849    ;----------------------------------------------
                           B   850    
                           B   851    ;==============================================
                           B   852    ; Environment variables
                           B   853    ;==============================================
                           B   854    
006928 4552524F 523D3030   B   855    envar_list				db "ERROR=00",0
006930 00 
006931 FF                  B   856    first_ext_ev_entry		db 0ffh
006932 00 00 00 00 00 00   B   857    						blkb envar_buffer_size,
006938 00 00 00 00 00 00 
00693E 00 00 00 00 00 00 
006944 00 00 00 00 00 00 
00694A 00 00 00 00 00 00 
006950 00 00 00 00 00 00 
006956 00 00 00 00 00 00 
00695C 00 00 00 00 00 00 
006962 00 00 00 00 00 00 
006968 00 00 00 00 00 00 
00696E 00 00 00 00 00 00 
006974 00 00 00 00 00 00 
00697A 00 00 00 00 00 00 
006980 00 00 00 00 00 00 
006986 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 264


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\prose_data.asm
00698C 00 00 00 00 00 00 
006992 00 00 00 00 00 00 
006998 00 00 00 00 00 00 
00699E 00 00 00 00 00 00 
0069A4 00 00 00 00 00 00 
0069AA 00 00 00 00 00 00 
0069B0 00 00 00 00 00 00 
0069B6 00 00 00 00 00 00 
0069BC 00 00 00 00 00 00 
0069C2 00 00 00 00 00 00 
0069C8 00 00 00 00 00 00 
0069CE 00 00 00 00 00 00 
0069D4 00 00 00 00 00 00 
0069DA 00 00 00 00 00 00 
0069E0 00 00 00 00 00 00 
0069E6 00 00 00 00 00 00 
0069EC 00 00 00 00 00 00 
0069F2 00 00 00 00 00 00 
0069F8 00 00 00 00 00 00 
0069FE 00 00 00 00 00 00 
006A04 00 00 00 00 00 00 
006A0A 00 00 00 00 00 00 
006A10 00 00 00 00 00 00 
006A16 00 00 00 00 00 00 
006A1C 00 00 00 00 00 00 
006A22 00 00 00 00 00 00 
006A28 00 00 00 00 00 00 
006A2E 00 00 00 00 
                           B   858    
006A32 316900              B   859    envar_top_loc			dw24 first_ext_ev_entry
                           B   860    
                           B   861    ;==============================================
                           B   862    
                           B     0    	include		'phil_font_packed.asm'			006A35                     B     1    packed_font_start
006A35 010100FF 01000918   B     2    				db 001h,001h,000h,0FFh,001h,000
006A3D 3C3C1800 181800EE 
006A45 EE660100 056C6CFE   B     3                    db 0EEh,066h,001h,000h,005h,06C
006A4D 6CFE6C6C 00187EE0 
006A55 7C0EFC18 00C6CE1C   B     4                    db 07Ch,00Eh,0FCh,018h,000h,0C6
006A5D 3870E6C6 0078ECEC 
006A65 78EDEE7D 000C1C18   B     5                    db 078h,0EDh,0EEh,07Dh,000h,00C
006A6D 01000518 30016003 
006A75 30180030 18010C03   B     6                    db 030h,018h,000h,030h,018h,001
006A7D 18300010 5438FE38 
006A85 54100000 18187E18   B     7                    db 054h,010h,000h,000h,018h,018
006A8D 18010007 38387001 
006A95 00037E01 00091818   B     8                    db 000h,003h,07Eh,001h,000h,009
006A9D 0000060E 1C3870E0 
006AA5 007CE6EE FEF6E67C   B     9                    db 000h,07Ch,0E6h,0EEh,0FEh,0F6
006AAD 00387801 38047C00 
006AB5 7CEE0E7C E0E0FE00   B    10                    db 07Ch,0EEh,00Eh,07Ch,0E0h,0E0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 265


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\phil_font_packed.asm
006ABD FE0C180C 0ECE7C00 
006AC5 1E3E76E6 FF060600   B    11                    db 01Eh,03Eh,076h,0E6h,0FFh,006
006ACD FEE0FC01 0E03FC00 
006AD5 7EE0FC01 E6037C00   B    12                    db 07Eh,0E0h,0FCh,001h,0E6h,003
006ADD FE060C18 01380300 
006AE5 7CE6E67C E6E67C00   B    13                    db 07Ch,0E6h,0E6h,07Ch,0E6h,0E6
006AED 7C01CE03 7E0E7C01 
006AF5 00031818 00181801   B    14                    db 000h,003h,018h,018h,000h,018
006AFD 00033030 00303060 
006B05 0E1C3870 381C0E01   B    15                    db 00Eh,01Ch,038h,070h,038h,01C
006B0D 00037E00 7E010003 
006B15 70381C0E 1C387000   B    16                    db 070h,038h,01Ch,00Eh,01Ch,038
006B1D 7CEE0E3C 38003800 
006B25 7CE601EE 03E07C00   B    17                    db 07Ch,0E6h,001h,0EEh,003h,0E0
006B2D 7CE6E6FE 01E60300 
006B35 FCE6E6FC E6E6FC00   B    18                    db 0FCh,0E6h,0E6h,0FCh,0E6h,0E6
006B3D 7CE601E0 03E67C00 
006B45 FC01E605 FC00FEE0   B    19                    db 0FCh,001h,0E6h,005h,0FCh,000
006B4D E0F8E0E0 FE00FEE0 
006B55 E0F801E0 03007CE6   B    20                    db 0E0h,0F8h,001h,0E0h,003h,000
006B5D E0EEE6E6 7C0001E6 
006B65 03FE01E6 03007C01   B    21                    db 003h,0FEh,001h,0E6h,003h,000
006B6D 38057C00 7E011C04 
006B75 DC7800E6 ECF8EC01   B    22                    db 0DCh,078h,000h,0E6h,0ECh,0F8
006B7D E6030001 E006FE00 
006B85 C6EEFED6 01C60300   B    23                    db 0C6h,0EEh,0FEh,0D6h,001h,0C6
006B8D E6F6FEFE EEE6E600 
006B95 7C01E605 7C00FC01   B    24                    db 07Ch,001h,0E6h,005h,07Ch,000
006B9D E603FCE0 E0007C01 
006BA5 E603EAEC 7600FC01   B    25                    db 0E6h,003h,0EAh,0ECh,076h,000
006BAD E603FCE6 E6007CEE 
006BB5 E07C0EEE 7C00FE01   B    26                    db 0E0h,07Ch,00Eh,0EEh,07Ch,000
006BBD 38060001 E6067C00 
006BC5 01E60574 380001C6   B    27                    db 001h,0E6h,005h,074h,038h,000
006BCD 04D6FE6C 00E6E66C 
006BD5 3874E6E6 0001E604   B    28                    db 038h,074h,0E6h,0E6h,000h,001
006BDD 7E06FC00 FE0E1C38 
006BE5 70E0FE00 3C013005   B    29                    db 070h,0E0h,0FEh,000h,03Ch,001
006BED 3C00C0E0 70381C0E 
006BF5 06007801 18057800   B    30                    db 006h,000h,078h,001h,018h,005
006BFD 10386CC6 01000BFE 
006C05 381C0100 087C067E   B    31                    db 038h,01Ch,001h,000h,008h,07C
006C0D E67E0000 E0E0FCE6 
006C15 E6FC0100 037C01E0   B    32                    db 0E6h,0FCh,001h,000h,003h,07C
006C1D 037C0000 06067EE6 
006C25 E67E0100 037CE6FE   B    33                    db 0E6h,07Eh,001h,000h,003h,07C
006C2D E07C0000 3E70FC01 
006C35 70030100 037EE6E6   B    34                    db 070h,003h,001h,000h,003h,07E
006C3D 7E067C00 E0E0FC01 
006C45 E6030000 38007838   B    35                    db 0E6h,003h,000h,000h,038h,000
006C4D 387C0000 1C00011C 
006C55 047800E0 EEECF8EC   B    36                    db 004h,078h,000h,0E0h,0EEh,0EC
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 266


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\phil_font_packed.asm
006C5D EE000078 0138047C 
006C65 010003EC FED6C6C6   B    37                    db 001h,000h,003h,0ECh,0FEh,0D6
006C6D 010003FC 01E60401 
006C75 00037C01 E6037C01   B    38                    db 000h,003h,07Ch,001h,0E6h,003
006C7D 0003FCE6 E6FCE0E0 
006C85 00007EE6 E67E0606   B    39                    db 000h,000h,07Eh,0E6h,0E6h,07E
006C8D 0000DCE6 01E00301 
006C95 00037EF0 7C1EFC00   B    40                    db 000h,003h,07Eh,0F0h,07Ch,01E
006C9D 00387E01 38031E01 
006CA5 000301E6 047E0100   B    41                    db 000h,003h,001h,0E6h,004h,07E
006CAD 0301E603 6C380100 
006CB5 03E2EAFE 7C340100   B    42                    db 003h,0E2h,0EAh,0FEh,07Ch,034
006CBD 03E67C38 7CE60100 
006CC5 0301E603 7E0CF800   B    43                    db 003h,001h,0E6h,003h,07Eh,00C
006CCD 00FE1C38 70FE003C 
006CD5 30306030 303C0001   B    44                    db 030h,030h,060h,030h,030h,03C
006CDD 18070078 18180C18 
006CE5 18780033 7ECC0100   B    45                    db 018h,078h,000h,033h,07Eh,0CC
006CED 0501FE07 0100FF01 
006CF5 001A1C3A 70FC70F2   B    46                    db 000h,01Ah,01Ch,03Ah,070h,0FC
006CFD BC010029 7CC6BAA2 
006D05 BAC67C01 00147E06   B    47                    db 0BAh,0C6h,07Ch,001h,000h,014
006D0D 060100FF 0100FF01 
006D15 009C                B    48                    db 000h,09Ch
006D17                     B    49    packed_font_end
                           A  3603    
                           A  3604    
       00000014            A  3605    default_pointer_height equ 20
                           A  3606    
                           B     0    	include		'default_pointer_packed.asm'	006D17                     B     1    default_pointer:
006D17 03010103 000E0301   B     2                    db 003h,001h,001h,003h,000h,00E
006D1F 0303000D 01020101 
006D27 03000C01 02020101   B     3                    db 003h,000h,00Ch,001h,002h,002
006D2F 03000B01 03020301 
006D37 0103000A 01030204   B     4                    db 001h,003h,000h,00Ah,001h,003
006D3F 01010300 09010302 
006D47 05010103 00080103   B     5                    db 005h,001h,001h,003h,000h,008
006D4F 02060101 03000701 
006D57 03020701 01030006   B     6                    db 003h,002h,007h,001h,001h,003
006D5F 01030208 01010300 
006D67 05010302 09010103   B     7                    db 005h,001h,003h,002h,009h,001
006D6F 00040103 020A0101 
006D77 03000301 03020603   B     8                    db 003h,000h,003h,001h,003h,002
006D7F 01060300 03010302 
006D87 03010202 01010300   B     9                    db 003h,001h,002h,002h,001h,001
006D8F 07010202 01000102 
006D97 02010300 07010201   B    10                    db 002h,001h,003h,000h,007h,001
006D9F 00000102 02010103 
006DA7 00060101 03000401   B    11                    db 000h,006h,001h,001h,003h,000
006DAF 02020103 000C0102 
006DB7 02010103 000C0301   B    12                    db 002h,001h,001h,003h,000h,00C
Zilog eZ80 Macro Assembler Version 4.1 (10060805)27-Aug-11     14:44:35     page: 267


PC     Object              I  Line    Source E:\My_Own_Files\Coding\ez80p\Code\PROSE\src\default_pointer_packed.asm
006DBF 04030015 
                           A  3608    
006DC3 0102                A  3609    default_pointer_colours	db 1,2					006DC5 0000FF0F            A  3610    						dw 000h,0fffh
                           A  3611    
                           A  3612    ;==============================================
                           A  3613    	
006DC9 00                  A  3614    os_max_addr		db 0							                           A  3615    	
                           A  3616    
                           A  3617    ;==============================================
                           A  3618    
                           A  3619    				end	
                           A  3620    				
                           A  3621    ;==============================================
                           A  3622    	


Errors: 0
Warnings: 0
Lines Assembled: 13456
