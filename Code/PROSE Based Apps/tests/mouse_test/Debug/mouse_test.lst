Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-May-11     17:25:39     page:   1


PC     Object              I  Line    Source 
                           A     1    ; Mouse test
                           A     2    ;----------------------------------------------
                           A     3    
       00000000            A     4    amoeba_version_req	equ	0				; 0 = d
       00000000            A     5    prose_version_req	equ 0				; 0 = d
       00000001            A     6    ADL_mode			equ 1				; 0 if 
       00010000            A     7    load_location		equ 10000h			; anywh
                           A     8    
                           B     0    			include	'PROSE_header.asm'
                           B     1    ;--- EZ80 Internal CPU Ports ------------------
                           B     2    
       0000009A            B     3    PB_DR			equ 09ah
       0000009B            B     4    PB_DDR			equ 09bh
       0000009C            B     5    PB_ALT1			equ 09ch
       0000009D            B     6    PB_ALT2			equ 09dh
                           B     7    
       0000009E            B     8    PC_DR			equ 09eh
       0000009F            B     9    PC_DDR			equ 09fh
       000000A0            B    10    PC_ALT1			equ 0a0h
       000000A1            B    11    PC_ALT2			equ 0a1h
                           B    12    
       000000A2            B    13    PD_DR			equ 0a2h
       000000A3            B    14    PD_DDR			equ 0a3h
       000000A4            B    15    PD_ALT1			equ 0a4h
       000000A5            B    16    PD_ALT2			equ 0a5h
                           B    17    
       000000C0            B    18    UART0_RBR		equ 0c0h
       000000C0            B    19    UART0_THR		equ 0c0h
       000000C0            B    20    UART0_BRG_L		equ 0c0h
       000000C1            B    21    UART0_BRG_H		equ 0c1h
       000000C1            B    22    UART0_IER		equ 0c1h
       000000C2            B    23    UART0_FCTL		equ 0c2h
       000000C3            B    24    UART0_LCTL		equ 0c3h
       000000C4            B    25    UART0_MCTL		equ 0c4h
       000000C5            B    26    UART0_LSR		equ 0c5h
       000000C6            B    27    UART0_MSR		equ 0c6h
                           B    28    
       000000A8            B    29    CS0_LBR			equ 0a8h			;eZ80 wait 
       000000A9            B    30    CS0_UBR			equ 0a9h
       000000AA            B    31    CS0_CTL			equ 0aah			
       000000AB            B    32    CS1_LBR			equ 0abh			;eZ80 wait 
       000000AC            B    33    CS1_UBR			equ 0ach
       000000AD            B    34    CS1_CTL			equ 0adh
       000000AE            B    35    CS2_LBR			equ 0aeh			;eZ80 wait 
       000000AF            B    36    CS2_UBR			equ 0afh
       000000B0            B    37    CS2_CTL			equ 0b0h
       000000B1            B    38    CS3_LBR			equ 0b1h			;eZ80 wait 
       000000B2            B    39    CS3_UBR			equ 0b2h
       000000B3            B    40    CS3_CTL			equ 0b3h
                           B    41    
       00000080            B    42    TMR0_CTL		equ 080h			;timer 0 eq
       00000081            B    43    TMR0_DR_L		equ 081h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-May-11     17:25:39     page:   2


PC     Object              I  Line    Source ..\..\..\Includes\PROSE_header.asm
       00000081            B    44    TMR0_RR_L		equ 081h
       00000082            B    45    TMR0_DR_H		equ 082h
       00000082            B    46    TMR0_RR_H		equ 082h
       00000092            B    47    TMR_ISS			equ 092h
                           B    48    
       000000ED            B    49    RTC_CTRL		equ 0edh			;RTC equate
       000000EC            B    50    RTC_ACTRL		equ 0ech
       000000E0            B    51    RTC_SEC			equ 0e0h
       000000E1            B    52    RTC_MIN			equ 0e1h
       000000E2            B    53    RTC_HRS			equ 0e2h
       000000E3            B    54    RTC_DOW			equ 0e3h
       000000E4            B    55    RTC_DOM			equ 0e4h
       000000E5            B    56    RTC_MON			equ 0e5h
       000000E6            B    57    RTC_YR			equ 0e6h
       000000E7            B    58    RTC_CEN			equ 0e7h
                           B    59    
                           B    60    ;-- EZ80P Hardware equates --------------------
                           B    61    
       00000000            B    62    port_pic_data  			equ 000h
       00000001            B    63    port_pic_ctrl			equ 001h
       00000001            B    64    port_hw_flags			equ 001h
       00000002            B    65    port_sdc_ctrl			equ 002h	; this is a
       00000002            B    66    port_keyboard_data		equ 002h
       00000003            B    67    port_sdc_data		 	equ 003h	
       00000004            B    68    port_memory_paging		equ 004h
       00000005            B    69    port_irq_ctrl			equ 005h
       00000006            B    70    port_nmi_ack			equ 006h
       00000007            B    71    port_ps2_ctrl			equ 007h
       00000008            B    72    port_selector			equ 008h
       00000006            B    73    port_mouse_data			equ 006h
       00000009            B    74    port_clear_flags		equ 009h
                           B    75    
       00000000            B    76    sdc_power				equ 0		;(port_sd_c
       00000001            B    77    sdc_cs					equ 1		;(port_sd_c
       00000002            B    78    sdc_speed				equ 2 		;(port_sd_c
                           B    79    
       00000004            B    80    sdc_serializer_busy		equ 4 		;(port_hw_f
       00000005            B    81    vrt						equ 5		;(port_hw_f
                           B    82    
                           B    83    
                           B    84    ;-- Memory locations --------------------------
                           B    85    
       00800000            B    86    vram_a_addr				equ 0800000h
       00C00000            B    87    vram_b_addr				equ 0c00000h
                           B    88    
                           B    89    ;-- Hardware registers ------------------------
                           B    90    
       00FF0000            B    91    hw_palette				equ 0ff0000h
       00FF0800            B    92    hw_sprite_registers		equ 0ff0800h
       00FF1000            B    93    hw_video_parameters		equ 0ff1000h
       00FF1400            B    94    hw_audio_registers		equ 0ff1400h
       00FF1800            B    95    hw_video_settings		equ 0ff1800h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-May-11     17:25:39     page:   3


PC     Object              I  Line    Source ..\..\..\Includes\PROSE_header.asm
                           B    96    
       00FF1000            B    97    tilemap_parameters		equ hw_video_parameters
       00FF1020            B    98    bitmap_parameters		equ hw_video_parameters
                           B    99    
       00FF1800            B   100    video_control			equ hw_video_settings+0
       00FF1801            B   101    sprite_control			equ hw_video_settings+0
       00FF1802            B   102    bgnd_palette_select		equ hw_video_settings+0
       00FF1803            B   103    sprite_palette_select	equ hw_video_settings+0
       00FF1804            B   104    right_border_position	equ hw_video_settings+0
                           B   105    
                           B   106    ;----------------------------------------------
                           B   107    
       00000A00            B   108    os_start 	equ 0a00h
                           B   109    
       00000A14            B   110    prose_return equ os_start+14h
       00000A20            B   111    prose_kernal equ os_start+20h
                           B   112    
                           B   113    ;----------------------------------------------
                           B   114    ; Kernal Jump Table values for mode PROSE
                           B   115    ;----------------------------------------------
                           B   116    		
       00000000            B   117    kr_mount_volumes				equ 00h	
       00000001            B   118    kr_get_device_info				equ 01h	
       00000002            B   119    kr_check_volume_format			equ 02h	
       00000003            B   120    kr_change_volume				equ 03h	
       00000004            B   121    kr_get_volume_info				equ 04h	
       00000005            B   122    kr_format_device				equ 05h	
       00000006            B   123    kr_make_dir						equ 06h
                           B   124    
       00000007            B   125    kr_change_dir					equ 07h	
       00000008            B   126    kr_parent_dir					equ 08h	
       00000009            B   127    kr_root_dir						equ 09h
       0000000A            B   128    kr_delete_dir					equ 0ah
       0000000B            B   129    kr_find_file					equ 0bh
       0000000C            B   130    kr_set_file_pointer				equ 0ch
       0000000D            B   131    kr_set_load_length				equ 0dh
       0000000E            B   132    kr_read_file					equ 0eh
                           B   133    
       0000000F            B   134    kr_erase_file					equ 0fh
       00000010            B   135    kr_rename_file					equ 10h
       00000011            B   136    kr_create_file					equ 11h
       00000012            B   137    kr_write_file					equ 12h
       00000013            B   138    kr_get_total_sectors			equ 13h
       00000014            B   139    kr_dir_list_first_entry			equ 14h
       00000015            B   140    kr_dir_list_get_entry			equ 15h
       00000016            B   141    kr_dir_list_next_entry			equ 16h
                           B   142    
       00000017            B   143    kr_read_sector					equ 17h
       00000018            B   144    kr_write_sector					equ 18h
       00000019            B   145    kr_file_sector_list				equ 19h
       0000001A            B   146    kr_get_dir_cluster				equ 1ah
       0000001B            B   147    kr_set_dir_cluster				equ 1bh
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-May-11     17:25:39     page:   4


PC     Object              I  Line    Source ..\..\..\Includes\PROSE_header.asm
       0000001C            B   148    kr_get_dir_name					equ 1ch
       0000001D            B   149    kr_wait_key						equ 1dh
       0000001E            B   150    kr_get_key						equ 1eh
                           B   151    
       0000001F            B   152    kr_get_key_mod_flags			equ 1fh
       00000020            B   153    kr_serial_receive_header		equ 20h
       00000021            B   154    kr_serial_receive_file			equ 21h
       00000022            B   155    kr_serial_send_file				equ 22h
       00000023            B   156    kr_serial_tx_byte				equ 23h
       00000024            B   157    kr_serial_rx_byte				equ 24h
                           B   158    
       00000025            B   159    kr_print_string					equ 25h
       00000026            B   160    kr_clear_screen					equ 26h
       00000027            B   161    kr_wait_vrt						equ 27h
       00000028            B   162    kr_set_cursor_position			equ 28h
       00000029            B   163    kr_plot_char					equ 29h
       0000002A            B   164    kr_set_pen						equ 2ah
       0000002B            B   165    kr_background_colours			equ 2bh
       0000002C            B   166    kr_draw_cursor					equ 2ch
       0000002D            B   167    kr_get_pen						equ 2dh
       0000002E            B   168    kr_scroll_up					equ 2eh
       0000002F            B   169    kr_os_display					equ 2fh
       00000030            B   170    kr_get_display_size				equ 30h
       00000031            B   171    kr_get_charmap_addr_xy			equ 31h
       00000032            B   172    kr_get_cursor_position			equ 32h
                           B   173    
       00000033            B   174    kr_set_envar					equ 33h
       00000034            B   175    kr_get_envar					equ 34h
       00000035            B   176    kr_delete_envar					equ 35h
                           B   177    
       00000036            B   178    kr_set_mouse_window				equ 36h
       00000037            B   179    kr_get_mouse_position			equ 37h
       00000038            B   180    kr_get_mouse_motion				equ 38h
                           B   181    
       00000039            B   182    kr_time_delay					equ 39h
       0000003A            B   183    kr_compare_strings				equ 3ah
       0000003B            B   184    kr_hex_byte_to_ascii			equ 3bh
       0000003C            B   185    kr_ascii_to_hex_word			equ 3ch
       0000003D            B   186    kr_get_string					equ 3dh
                           B   187    
       0000003E            B   188    kr_get_version					equ 3eh
       0000003F            B   189    kr_dont_store_registers			equ 3fh
       00000040            B   190    kr_get_font_info				equ 40h
       00000041            B   191    kr_read_rtc						equ 41h
       00000042            B   192    kr_write_rtc					equ 42h
                           B   193    
       00000043            B   194    kr_get_keymap_location			equ 43h
       00000044            B   195    kr_get_os_high_mem				equ 44h
                           B   196    
                           B   197    ;----------------------------------------------
                           B   198    ; Standard PROSE executable header
                           B   199    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-May-11     17:25:39     page:   5


PC     Object              I  Line    Source ..\..\..\Includes\PROSE_header.asm
                           B   200    
                           B   201    
                           B   202    	IF ADL_mode = 0
                           B   203    		org load_location&0ffffh	; if Z80 mo
                           B   204    	ELSE
010000                     B   205    		org load_location			; otherwise
                           B   206    	ENDIF
                           B   207    	
                           B   208    		.assume ADL = 1				; All PROSE
                           B   209    
010000 18 0E               B   210    		jr skip_header				; $0 - Jump
010002 50524F              B   211    		db 'PRO'					; $2 - ASCI
010005 000001              B   212    mb_loc	dw24 load_location			; $5 - Desi
010008 000000              B   213    		dw24 0						; $8 - If >
01000B 0000                B   214    		dw prose_version_req		; $B - If >
01000D 0000                B   215    		dw amoeba_version_req		; $D - If >
01000F 01                  B   216    		db ADL_mode					; $F - Z80 
                           B   217    
010010                     B   218    skip_header
                           B   219    	
                           B   220    	IF ADL_mode = 0 
                           B   221    		
                           B   222    mbase_offset equ load_location & 0ff0000h
                           B   223    
                           B   224    		ld a,load_location/65536	; Additiona
                           B   225    		ld MB,a						; Set MBASE
                           B   226    		jp.sis go_z80_mode			; switches 
                           B   227    
                           B   228    go_z80_mode
                           B   229    
                           B   230    		.assume ADL = 0
                           B   231    
                           B   232    	ENDIF
                           B   233    	
                           B   234    ;----------------------------------------------
                           B   235    	
                           A    10    
                           A    11    ;----------------------------------------------
                           A    12    ; ADL-mode user program follows..
                           A    13    ;----------------------------------------------
                           A    14    
010010 CD 1A 00 01         A    15    				call my_prog
                           A    16    				
010014 AF                  A    17    				xor a
010015 5BC3140A 00         A    18    				jp.lil prose_return				                           A    19    
                           A    20    ;----------------------------------------------
                           A    21    ; Displays mouse coordinates and mouse displace
                           A    22    ;----------------------------------------------
                           A    23    
01001A 21800200            A    24    my_prog			ld hl,640
01001E 11E00100            A    25    				ld de,480
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-May-11     17:25:39     page:   6


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSEA~1\MOUSE_~1\src\mouse_test.asm
010022 3E36                A    26    				ld a,kr_set_mouse_window
010024 5BCD200A 00         A    27    				call.lil prose_kernal
                           A    28    
010029 3E26                A    29    				ld a,kr_clear_screen
01002B 5BCD200A 00         A    30    				call.lil prose_kernal
                           A    31    					
010030 3E37                A    32    lp1				ld a,kr_get_mouse_position
010032 5BCD200A 00         A    33    				call.lil prose_kernal
010037 20 76               A    34    				jr nz,ms_error					                           A    35    
010039 EB                  A    36    				ex de,hl
01003A F5                  A    37    				push af
01003B E5                  A    38    				push hl
01003C 21 EA 00 01         A    39    				ld hl,text1
010040 7A                  A    40    				ld a,d
010041 CD BC 00 01         A    41    				call hex_byte_to_ascii
010045 7B                  A    42    				ld a,e
010046 CD BC 00 01         A    43    				call hex_byte_to_ascii
01004A E1                  A    44    				pop hl
01004B EB                  A    45    				ex de,hl
01004C 21 F9 00 01         A    46    				ld hl,text2
010050 7A                  A    47    				ld a,d
010051 CD BC 00 01         A    48    				call hex_byte_to_ascii
010055 7B                  A    49    				ld a,e
010056 CD BC 00 01         A    50    				call hex_byte_to_ascii
01005A F1                  A    51    				pop af
01005B 21 0E 01 01         A    52    				ld hl,text3
01005F CD BC 00 01         A    53    				call hex_byte_to_ascii
                           A    54    					
                           A    55    					
010063 3E38                A    56    				ld a,kr_get_mouse_motion
010065 5BCD200A 00         A    57    				call.lil prose_kernal
01006A 20 43               A    58    				jr nz,ms_error
                           A    59    				
01006C EB                  A    60    				ex de,hl
01006D E5                  A    61    				push hl
01006E 21 1B 01 01         A    62    				ld hl,disp1
010072 7A                  A    63    				ld a,d
010073 CD BC 00 01         A    64    				call hex_byte_to_ascii
010077 7B                  A    65    				ld a,e
010078 CD BC 00 01         A    66    				call hex_byte_to_ascii
01007C E1                  A    67    				pop hl
01007D EB                  A    68    				ex de,hl
01007E 21 29 01 01         A    69    				ld hl,disp2
010082 7A                  A    70    				ld a,d
010083 CD BC 00 01         A    71    				call hex_byte_to_ascii
010087 7B                  A    72    				ld a,e
010088 CD BC 00 01         A    73    				call hex_byte_to_ascii
                           A    74    
01008C 01000000            A    75    				ld bc,0
010090 3E28                A    76    				ld a,kr_set_cursor_position
010092 5BCD200A 00         A    77    				call.lil prose_kernal
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-May-11     17:25:39     page:   7


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSEA~1\MOUSE_~1\src\mouse_test.asm
010097 21 E0 00 01         A    78    				ld hl,mytext
01009B 3E25                A    79    				ld a,kr_print_string			01009D 5BCD200A 00         A    80    				call.lil prose_kernal	
                           A    81    
0100A2 3E1E                A    82    				ld a,kr_get_key
0100A4 5BCD200A 00         A    83    				call.lil prose_kernal
0100A9 FE76                A    84    				cp 076h
0100AB 20 83               A    85    				jr nz,lp1
0100AD AF                  A    86    				xor a
0100AE C9                  A    87    				ret
                           A    88    
0100AF 21 30 01 01         A    89    ms_error		ld hl,error_txt
0100B3 3E25                A    90    				ld a,kr_print_string
0100B5 5BCD200A 00         A    91    				call.lil prose_kernal
0100BA AF                  A    92    				xor a
0100BB C9                  A    93    				ret
                           A    94    
                           A    95    ;----------------------------------------------
                           A    96    
0100BC                     A    97    hex_byte_to_ascii
                           A    98    
0100BC C5                  A    99    				push bc
0100BD 47                  A   100    				ld b,a						;pu
0100BE CB3F                A   101    				srl a						;th
0100C0 CB3F                A   102    				srl a
0100C2 CB3F                A   103    				srl a
0100C4 CB3F                A   104    				srl a
0100C6 CD D7 00 01         A   105    				call hxdigconv
0100CA 77                  A   106    				ld (hl),a
0100CB 23                  A   107    				inc hl
0100CC 78                  A   108    				ld a,b
0100CD E60F                A   109    				and 0fh
0100CF CD D7 00 01         A   110    				call hxdigconv
0100D3 77                  A   111    				ld (hl),a
0100D4 23                  A   112    				inc hl
0100D5 C1                  A   113    				pop bc
0100D6 C9                  A   114    				ret
                           A   115    
0100D7 C630                A   116    hxdigconv		add a,30h
0100D9 FE3A                A   117    				cp 3ah
0100DB 38 02               A   118    				jr c,hxdone
0100DD C607                A   119    				add a,7
0100DF C9                  A   120    hxdone			ret
                           A   121    
                           A   122    ;----------------------------------------------
                           A   123    
0100E0 4D6F7573 6520783A   A   124    mytext		db "Mouse x: $"
0100E8 2024 
0100EA 78787878 0B4D6F75   A   125    text1		db "xxxx",11,"Mouse y: $"
0100F2 73652079 3A2024 
0100F9 79797979 0B4D6F75   A   126    text2		db "yyyy",11,"Mouse buttons :$"
010101 73652062 7574746F 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-May-11     17:25:39     page:   8


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSEA~1\MOUSE_~1\src\mouse_test.asm
010109 6E73203A 24 
01010E 62620B0B            A   127    text3		db "bb",11,11
                           A   128    
010112 44697370 20783A20   A   129    			db "Disp x: $"
01011A 24 
01011B 78787878 0B446973   A   130    disp1		db "xxxx",11,"Disp y: $"
010123 7020793A 2024 
010129 79797979 0B0B00     A   131    disp2		db "yyyy",11,11,0 
                           A   132    
                           A   133    
010130 4D6F7573 65206E6F   A   134    error_txt	db "Mouse not installed.",11,11,0
010138 7420696E 7374616C 
010140 6C65642E 0B0B00 
                           A   135    
                           A   136    ;----------------------------------------------
                           A   137    
                           A   138    
                           A   139    
                           A   140    
                           A   141    
                           A   142    
                           A   143    
                           A   144    
                           A   145    
                           A   146    
                           A   147    ;----------------------------------------------
                           A   148    
010147                     A   149    message_txt
                           A   150    
010147 48656C6C 6F202841   A   151    		db 'Hello (ADL mode) world!',11,0
01014F 444C206D 6F646529 
010157 20776F72 6C64210B 
01015F 00 
                           A   152    
                           A   153    ;----------------------------------------------
                           A   154    		
                           A   155    		


Errors: 0
Warnings: 0
Lines Assembled: 391
