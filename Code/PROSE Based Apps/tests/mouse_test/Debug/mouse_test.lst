Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jun-11     20:53:03     page:   1


PC     Object              I  Line    Source 
                           A     1    ; Mouse test v0.02
                           A     2    ;----------------------------------------------
                           A     3    
       00000000            A     4    amoeba_version_req	equ	0				; 0 = d
       00000027            A     5    prose_version_req	equ 27h				; 0 = d
       00000001            A     6    ADL_mode			equ 1				; 0 if 
       00010000            A     7    load_location		equ 10000h			; anywh
                           A     8    
                           B     0    			include	'PROSE_header.asm'
                           B     1    ;--- EZ80 Internal CPU Ports ------------------
                           B     2    
       0000009A            B     3    PB_DR			equ 09ah
       0000009B            B     4    PB_DDR			equ 09bh
       0000009C            B     5    PB_ALT1			equ 09ch
       0000009D            B     6    PB_ALT2			equ 09dh
                           B     7    
       0000009E            B     8    PC_DR			equ 09eh
       0000009F            B     9    PC_DDR			equ 09fh
       000000A0            B    10    PC_ALT1			equ 0a0h
       000000A1            B    11    PC_ALT2			equ 0a1h
                           B    12    
       000000A2            B    13    PD_DR			equ 0a2h
       000000A3            B    14    PD_DDR			equ 0a3h
       000000A4            B    15    PD_ALT1			equ 0a4h
       000000A5            B    16    PD_ALT2			equ 0a5h
                           B    17    
       000000C0            B    18    UART0_RBR		equ 0c0h
       000000C0            B    19    UART0_THR		equ 0c0h
       000000C0            B    20    UART0_BRG_L		equ 0c0h
       000000C1            B    21    UART0_BRG_H		equ 0c1h
       000000C1            B    22    UART0_IER		equ 0c1h
       000000C2            B    23    UART0_FCTL		equ 0c2h
       000000C3            B    24    UART0_LCTL		equ 0c3h
       000000C4            B    25    UART0_MCTL		equ 0c4h
       000000C5            B    26    UART0_LSR		equ 0c5h
       000000C6            B    27    UART0_MSR		equ 0c6h
                           B    28    
       000000A8            B    29    CS0_LBR			equ 0a8h			;eZ80 wait 
       000000A9            B    30    CS0_UBR			equ 0a9h
       000000AA            B    31    CS0_CTL			equ 0aah			
       000000AB            B    32    CS1_LBR			equ 0abh			;eZ80 wait 
       000000AC            B    33    CS1_UBR			equ 0ach
       000000AD            B    34    CS1_CTL			equ 0adh
       000000AE            B    35    CS2_LBR			equ 0aeh			;eZ80 wait 
       000000AF            B    36    CS2_UBR			equ 0afh
       000000B0            B    37    CS2_CTL			equ 0b0h
       000000B1            B    38    CS3_LBR			equ 0b1h			;eZ80 wait 
       000000B2            B    39    CS3_UBR			equ 0b2h
       000000B3            B    40    CS3_CTL			equ 0b3h
                           B    41    
       00000080            B    42    TMR0_CTL		equ 080h			;timer 0 eq
       00000081            B    43    TMR0_DR_L		equ 081h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jun-11     20:53:03     page:   2


PC     Object              I  Line    Source ..\..\..\..\Includes\PROSE_header.asm
       00000081            B    44    TMR0_RR_L		equ 081h
       00000082            B    45    TMR0_DR_H		equ 082h
       00000082            B    46    TMR0_RR_H		equ 082h
       00000092            B    47    TMR_ISS			equ 092h
                           B    48    
       000000ED            B    49    RTC_CTRL		equ 0edh			;RTC equate
       000000EC            B    50    RTC_ACTRL		equ 0ech
       000000E0            B    51    RTC_SEC			equ 0e0h
       000000E1            B    52    RTC_MIN			equ 0e1h
       000000E2            B    53    RTC_HRS			equ 0e2h
       000000E3            B    54    RTC_DOW			equ 0e3h
       000000E4            B    55    RTC_DOM			equ 0e4h
       000000E5            B    56    RTC_MON			equ 0e5h
       000000E6            B    57    RTC_YR			equ 0e6h
       000000E7            B    58    RTC_CEN			equ 0e7h
                           B    59    
                           B    60    ;-- EZ80P Hardware equates --------------------
                           B    61    
       00000000            B    62    port_pic_data  			equ 000h
       00000001            B    63    port_pic_ctrl			equ 001h
       00000001            B    64    port_hw_flags			equ 001h
       00000002            B    65    port_sdc_ctrl			equ 002h	; this is a
       00000002            B    66    port_keyboard_data		equ 002h
       00000003            B    67    port_sdc_data		 	equ 003h	
       00000004            B    68    port_memory_paging		equ 004h
       00000005            B    69    port_irq_ctrl			equ 005h
       00000006            B    70    port_nmi_ack			equ 006h
       00000007            B    71    port_ps2_ctrl			equ 007h
       00000008            B    72    port_selector			equ 008h
       00000006            B    73    port_mouse_data			equ 006h
       00000009            B    74    port_clear_flags		equ 009h
                           B    75    
       00000000            B    76    sdc_power				equ 0		;(port_sd_c
       00000001            B    77    sdc_cs					equ 1		;(port_sd_c
       00000002            B    78    sdc_speed				equ 2 		;(port_sd_c
                           B    79    
       00000004            B    80    sdc_serializer_busy		equ 4 		;(port_hw_f
       00000005            B    81    vrt						equ 5		;(port_hw_f
                           B    82    
                           B    83    
                           B    84    ;-- Memory locations --------------------------
                           B    85    
       00000000            B    86    sysram_addr				equ 0000000h
       00800000            B    87    vram_a_addr				equ 0800000h
       00C00000            B    88    vram_b_addr				equ 0c00000h
                           B    89    
                           B    90    ;-- Hardware registers ------------------------
                           B    91    
       00FF0000            B    92    hw_palette				equ 0ff0000h
       00FF0800            B    93    hw_sprite_registers		equ 0ff0800h
       00FF1000            B    94    hw_video_parameters		equ 0ff1000h
       00FF1400            B    95    hw_audio_registers		equ 0ff1400h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jun-11     20:53:03     page:   3


PC     Object              I  Line    Source ..\..\..\..\Includes\PROSE_header.asm
       00FF1800            B    96    hw_video_settings		equ 0ff1800h
                           B    97    
       00FF1000            B    98    tilemap_parameters		equ hw_video_parameters
       00FF1020            B    99    bitmap_parameters		equ hw_video_parameters
                           B   100    
       00FF1800            B   101    video_control			equ hw_video_settings+0
       00FF1801            B   102    sprite_control			equ hw_video_settings+0
       00FF1802            B   103    bgnd_palette_select		equ hw_video_settings+0
       00FF1803            B   104    sprite_palette_select	equ hw_video_settings+0
       00FF1804            B   105    right_border_position	equ hw_video_settings+0
                           B   106    
                           B   107    ;----------------------------------------------
                           B   108    
       00000A00            B   109    os_start 	equ 0a00h
                           B   110    
       00000A14            B   111    prose_return equ os_start+14h
       00000A20            B   112    prose_kernal equ os_start+20h
                           B   113    
                           B   114    ;----------------------------------------------
                           B   115    ; Kernal Jump Table values for mode PROSE
                           B   116    ;----------------------------------------------
                           B   117    		
       00000000            B   118    kr_mount_volumes				equ 00h	
       00000001            B   119    kr_get_device_info				equ 01h	
       00000002            B   120    kr_check_volume_format			equ 02h	
       00000003            B   121    kr_change_volume				equ 03h	
       00000004            B   122    kr_get_volume_info				equ 04h	
       00000005            B   123    kr_format_device				equ 05h	
       00000006            B   124    kr_make_dir						equ 06h
                           B   125    
       00000007            B   126    kr_change_dir					equ 07h	
       00000008            B   127    kr_parent_dir					equ 08h	
       00000009            B   128    kr_root_dir						equ 09h
       0000000A            B   129    kr_delete_dir					equ 0ah
       0000000B            B   130    kr_find_file					equ 0bh
       0000000C            B   131    kr_set_file_pointer				equ 0ch
       0000000D            B   132    kr_set_load_length				equ 0dh
       0000000E            B   133    kr_read_file					equ 0eh
                           B   134    
       0000000F            B   135    kr_erase_file					equ 0fh
       00000010            B   136    kr_rename_file					equ 10h
       00000011            B   137    kr_create_file					equ 11h
       00000012            B   138    kr_write_file					equ 12h
       00000013            B   139    kr_get_total_sectors			equ 13h
       00000014            B   140    kr_dir_list_first_entry			equ 14h
       00000015            B   141    kr_dir_list_get_entry			equ 15h
       00000016            B   142    kr_dir_list_next_entry			equ 16h
                           B   143    
       00000017            B   144    kr_read_sector					equ 17h
       00000018            B   145    kr_write_sector					equ 18h
       00000019            B   146    kr_file_sector_list				equ 19h
       0000001A            B   147    kr_get_dir_cluster				equ 1ah
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jun-11     20:53:03     page:   4


PC     Object              I  Line    Source ..\..\..\..\Includes\PROSE_header.asm
       0000001B            B   148    kr_set_dir_cluster				equ 1bh
       0000001C            B   149    kr_get_dir_name					equ 1ch
       0000001D            B   150    kr_wait_key						equ 1dh
       0000001E            B   151    kr_get_key						equ 1eh
                           B   152    
       0000001F            B   153    kr_get_key_mod_flags			equ 1fh
       00000020            B   154    kr_serial_receive_header		equ 20h
       00000021            B   155    kr_serial_receive_file			equ 21h
       00000022            B   156    kr_serial_send_file				equ 22h
       00000023            B   157    kr_serial_tx_byte				equ 23h
       00000024            B   158    kr_serial_rx_byte				equ 24h
                           B   159    
       00000025            B   160    kr_print_string					equ 25h
       00000026            B   161    kr_clear_screen					equ 26h
       00000027            B   162    kr_wait_vrt						equ 27h
       00000028            B   163    kr_set_cursor_position			equ 28h
       00000029            B   164    kr_plot_char					equ 29h
       0000002A            B   165    kr_set_pen						equ 2ah
       0000002B            B   166    kr_background_colours			equ 2bh
       0000002C            B   167    kr_draw_cursor					equ 2ch
       0000002D            B   168    kr_get_pen						equ 2dh
       0000002E            B   169    kr_scroll_up					equ 2eh
       0000002F            B   170    kr_os_display					equ 2fh
       00000030            B   171    kr_get_display_size				equ 30h
       00000031            B   172    kr_get_charmap_addr_xy			equ 31h
       00000032            B   173    kr_get_cursor_position			equ 32h
                           B   174    
       00000033            B   175    kr_set_envar					equ 33h
       00000034            B   176    kr_get_envar					equ 34h
       00000035            B   177    kr_delete_envar					equ 35h
                           B   178    
       00000036            B   179    kr_set_mouse_window				equ 36h
       00000037            B   180    kr_get_mouse_position			equ 37h
       00000038            B   181    kr_get_mouse_motion				equ 38h
                           B   182    
       00000039            B   183    kr_time_delay					equ 39h
       0000003A            B   184    kr_compare_strings				equ 3ah
       0000003B            B   185    kr_hex_byte_to_ascii			equ 3bh
       0000003C            B   186    kr_ascii_to_hex_word			equ 3ch
       0000003D            B   187    kr_get_string					equ 3dh
                           B   188    
       0000003E            B   189    kr_get_version					equ 3eh
       0000003F            B   190    kr_dont_store_registers			equ 3fh
       00000040            B   191    kr_get_font_info				equ 40h
       00000041            B   192    kr_read_rtc						equ 41h
       00000042            B   193    kr_write_rtc					equ 42h
                           B   194    
       00000043            B   195    kr_get_keymap_location			equ 43h
       00000044            B   196    kr_get_os_high_mem				equ 44h
                           B   197    
                           B   198    ;----------------------------------------------
                           B   199    ; Standard PROSE executable header
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jun-11     20:53:03     page:   5


PC     Object              I  Line    Source ..\..\..\..\Includes\PROSE_header.asm
                           B   200    ;----------------------------------------------
                           B   201    
                           B   202    
                           B   203    	IF ADL_mode = 0
                           B   204    		org load_location&0ffffh	; if Z80 mo
                           B   205    	ELSE
010000                     B   206    		org load_location			; otherwise
                           B   207    	ENDIF
                           B   208    	
                           B   209    		.assume ADL = 1				; All PROSE
                           B   210    
010000 18 0E               B   211    		jr skip_header				; $0 - Jump
010002 50524F              B   212    		db 'PRO'					; $2 - ASCI
010005 000001              B   213    mb_loc	dw24 load_location			; $5 - Desi
010008 000000              B   214    		dw24 0						; $8 - If >
01000B 2700                B   215    		dw prose_version_req		; $B - If >
01000D 0000                B   216    		dw amoeba_version_req		; $D - If >
01000F 01                  B   217    		db ADL_mode					; $F - Z80 
                           B   218    
010010                     B   219    skip_header
                           B   220    	
                           B   221    	IF ADL_mode = 0 
                           B   222    		
                           B   223    mbase_offset equ load_location & 0ff0000h
                           B   224    
                           B   225    		ld a,load_location/65536	; Additiona
                           B   226    		ld MB,a						; Set MBASE
                           B   227    		jp.sis go_z80_mode			; switches 
                           B   228    
                           B   229    go_z80_mode
                           B   230    
                           B   231    		.assume ADL = 0
                           B   232    
                           B   233    	ENDIF
                           B   234    	
                           B   235    ;----------------------------------------------
                           B   236    	
                           A    10    
                           A    11    ;----------------------------------------------
                           A    12    ; ADL-mode user program follows..
                           A    13    ;----------------------------------------------
                           A    14    
010010 CD 1A 00 01         A    15    				call my_prog
                           A    16    				
010014 AF                  A    17    				xor a
010015 5BC3140A 00         A    18    				jp.lil prose_return				                           A    19    
                           A    20    ;----------------------------------------------
                           A    21    ; Displays mouse coordinates and mouse displace
                           A    22    ;----------------------------------------------
                           A    23    
01001A 21800200            A    24    my_prog			ld hl,640
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jun-11     20:53:03     page:   6


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\ez80p\Code\PROSEB~1\tests\MOUSE_~1\src\mouse_test.asm
01001E 11E00100            A    25    				ld de,480
010022 3E36                A    26    				ld a,kr_set_mouse_window
010024 5BCD200A 00         A    27    				call.lil prose_kernal
                           A    28    
010029 3E26                A    29    				ld a,kr_clear_screen
01002B 5BCD200A 00         A    30    				call.lil prose_kernal
                           A    31    					
010030 3E37                A    32    lp1				ld a,kr_get_mouse_position
010032 5BCD200A 00         A    33    				call.lil prose_kernal
010037 C2 BE 00 01         A    34    				jr nz,ms_error					                           A    35    
01003B EB                  A    36    				ex de,hl
01003C C5                  A    37    				push bc
01003D F5                  A    38    				push af
01003E E5                  A    39    				push hl
01003F 21 F9 00 01         A    40    				ld hl,text1
010043 7A                  A    41    				ld a,d
010044 CD CB 00 01         A    42    				call hex_byte_to_ascii
010048 7B                  A    43    				ld a,e
010049 CD CB 00 01         A    44    				call hex_byte_to_ascii
01004D E1                  A    45    				pop hl
01004E EB                  A    46    				ex de,hl
01004F 21 08 01 01         A    47    				ld hl,text2
010053 7A                  A    48    				ld a,d
010054 CD CB 00 01         A    49    				call hex_byte_to_ascii
010058 7B                  A    50    				ld a,e
010059 CD CB 00 01         A    51    				call hex_byte_to_ascii
01005D F1                  A    52    				pop af
01005E 21 17 01 01         A    53    				ld hl,text3
010062 CD CB 00 01         A    54    				call hex_byte_to_ascii
010066 C1                  A    55    				pop bc
010067 78                  A    56    				ld a,b
010068 21 22 01 01         A    57    				ld hl,text5
01006C CD CB 00 01         A    58    				call hex_byte_to_ascii
                           A    59    				
                           A    60    					
010070 3E38                A    61    				ld a,kr_get_mouse_motion
010072 5BCD200A 00         A    62    				call.lil prose_kernal
010077 20 45               A    63    				jr nz,ms_error
                           A    64    				
010079 EB                  A    65    				ex de,hl
01007A E5                  A    66    				push hl
01007B 21 2F 01 01         A    67    				ld hl,disp1
01007F 7A                  A    68    				ld a,d
010080 CD CB 00 01         A    69    				call hex_byte_to_ascii
010084 7B                  A    70    				ld a,e
010085 CD CB 00 01         A    71    				call hex_byte_to_ascii
010089 E1                  A    72    				pop hl
01008A EB                  A    73    				ex de,hl
01008B 21 3D 01 01         A    74    				ld hl,disp2
01008F 7A                  A    75    				ld a,d
010090 CD CB 00 01         A    76    				call hex_byte_to_ascii
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jun-11     20:53:03     page:   7


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\ez80p\Code\PROSEB~1\tests\MOUSE_~1\src\mouse_test.asm
010094 7B                  A    77    				ld a,e
010095 CD CB 00 01         A    78    				call hex_byte_to_ascii
                           A    79    
010099 01000000            A    80    				ld bc,0
01009D 3E28                A    81    				ld a,kr_set_cursor_position
01009F 5BCD200A 00         A    82    				call.lil prose_kernal
0100A4 21 EF 00 01         A    83    				ld hl,mytext
0100A8 3E25                A    84    				ld a,kr_print_string			0100AA 5BCD200A 00         A    85    				call.lil prose_kernal	
                           A    86    
0100AF 3E1E                A    87    				ld a,kr_get_key
0100B1 5BCD200A 00         A    88    				call.lil prose_kernal
0100B6 FE76                A    89    				cp 076h
0100B8 C2 30 00 01         A    90    				jr nz,lp1
0100BC AF                  A    91    				xor a
0100BD C9                  A    92    				ret
                           A    93    
0100BE 21 44 01 01         A    94    ms_error		ld hl,error_txt
0100C2 3E25                A    95    				ld a,kr_print_string
0100C4 5BCD200A 00         A    96    				call.lil prose_kernal
0100C9 AF                  A    97    				xor a
0100CA C9                  A    98    				ret
                           A    99    
                           A   100    ;----------------------------------------------
                           A   101    
0100CB                     A   102    hex_byte_to_ascii
                           A   103    
0100CB C5                  A   104    				push bc
0100CC 47                  A   105    				ld b,a						;pu
0100CD CB3F                A   106    				srl a						;th
0100CF CB3F                A   107    				srl a
0100D1 CB3F                A   108    				srl a
0100D3 CB3F                A   109    				srl a
0100D5 CD E6 00 01         A   110    				call hxdigconv
0100D9 77                  A   111    				ld (hl),a
0100DA 23                  A   112    				inc hl
0100DB 78                  A   113    				ld a,b
0100DC E60F                A   114    				and 0fh
0100DE CD E6 00 01         A   115    				call hxdigconv
0100E2 77                  A   116    				ld (hl),a
0100E3 23                  A   117    				inc hl
0100E4 C1                  A   118    				pop bc
0100E5 C9                  A   119    				ret
                           A   120    
0100E6 C630                A   121    hxdigconv		add a,30h
0100E8 FE3A                A   122    				cp 3ah
0100EA 38 02               A   123    				jr c,hxdone
0100EC C607                A   124    				add a,7
0100EE C9                  A   125    hxdone			ret
                           A   126    
                           A   127    ;----------------------------------------------
                           A   128    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)13-Jun-11     20:53:03     page:   8


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\ez80p\Code\PROSEB~1\tests\MOUSE_~1\src\mouse_test.asm
0100EF 4D6F7573 6520783A   A   129    mytext		db "Mouse x: $"
0100F7 2024 
0100F9 78787878 0B4D6F75   A   130    text1		db "xxxx",11,"Mouse y: $"
010101 73652079 3A2024 
010108 79797979 0B427574   A   131    text2		db "yyyy",11,"Buttons: $"
010110 746F6E73 3A2024 
010117 62620B              A   132    text3		db "bb",11
01011A 57686565 6C3A2024   A   133    text4		db "Wheel: $"
010122 77770B0B            A   134    text5		db "ww",11,11
                           A   135    
010126 44697370 20783A20   A   136    			db "Disp x: $"
01012E 24 
01012F 78787878 0B446973   A   137    disp1		db "xxxx",11,"Disp y: $"
010137 7020793A 2024 
01013D 79797979 0B0B00     A   138    disp2		db "yyyy",11,11,0 
                           A   139    
                           A   140    
010144 4D6F7573 65206E6F   A   141    error_txt	db "Mouse not installed.",11,11,0
01014C 7420696E 7374616C 
010154 6C65642E 0B0B00 
                           A   142    
                           A   143    ;----------------------------------------------
                           A   144    
                           A   145    
                           A   146    
                           A   147    
                           A   148    
                           A   149    
                           A   150    
                           A   151    
                           A   152    
                           A   153    
                           A   154    ;----------------------------------------------
                           A   155    
01015B                     A   156    message_txt
                           A   157    
01015B 48656C6C 6F202841   A   158    		db 'Hello (ADL mode) world!',11,0
010163 444C206D 6F646529 
01016B 20776F72 6C64210B 
010173 00 
                           A   159    
                           A   160    ;----------------------------------------------
                           A   161    		
                           A   162    		


Errors: 0
Warnings: 0
Lines Assembled: 399
