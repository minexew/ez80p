Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-May-11     15:28:33     page:   1


PC     Object              I  Line    Source 
                           A     1    ;**********************************************
                           A     2    ; FPGACFG v0.03 COMMAND LINE APP for PROSE/EZ80
                           A     3    ;**********************************************
                           A     4    
                           A     5    ;----------------------------------------------
                           A     6    
       00000000            A     7    amoeba_version_req	equ	0				; 0 = d
       00000000            A     8    prose_version_req	equ 0				; 0 = d
       00000001            A     9    ADL_mode			equ 1				; 0 if 
       00010000            A    10    load_location		equ 10000h			; anywh
                           A    11    
                           B     0    			include	'PROSE_header.asm'
                           B     1    ;--- EZ80 Internal CPU Ports ------------------
                           B     2    
       0000009A            B     3    PB_DR			equ 09ah
       0000009B            B     4    PB_DDR			equ 09bh
       0000009C            B     5    PB_ALT1			equ 09ch
       0000009D            B     6    PB_ALT2			equ 09dh
                           B     7    
       0000009E            B     8    PC_DR			equ 09eh
       0000009F            B     9    PC_DDR			equ 09fh
       000000A0            B    10    PC_ALT1			equ 0a0h
       000000A1            B    11    PC_ALT2			equ 0a1h
                           B    12    
       000000A2            B    13    PD_DR			equ 0a2h
       000000A3            B    14    PD_DDR			equ 0a3h
       000000A4            B    15    PD_ALT1			equ 0a4h
       000000A5            B    16    PD_ALT2			equ 0a5h
                           B    17    
       000000C0            B    18    UART0_RBR		equ 0c0h
       000000C0            B    19    UART0_THR		equ 0c0h
       000000C0            B    20    UART0_BRG_L		equ 0c0h
       000000C1            B    21    UART0_BRG_H		equ 0c1h
       000000C1            B    22    UART0_IER		equ 0c1h
       000000C2            B    23    UART0_FCTL		equ 0c2h
       000000C3            B    24    UART0_LCTL		equ 0c3h
       000000C4            B    25    UART0_MCTL		equ 0c4h
       000000C5            B    26    UART0_LSR		equ 0c5h
       000000C6            B    27    UART0_MSR		equ 0c6h
                           B    28    
       000000A8            B    29    CS0_LBR			equ 0a8h			;eZ80 wait 
       000000A9            B    30    CS0_UBR			equ 0a9h
       000000AA            B    31    CS0_CTL			equ 0aah			
       000000AB            B    32    CS1_LBR			equ 0abh			;eZ80 wait 
       000000AC            B    33    CS1_UBR			equ 0ach
       000000AD            B    34    CS1_CTL			equ 0adh
       000000AE            B    35    CS2_LBR			equ 0aeh			;eZ80 wait 
       000000AF            B    36    CS2_UBR			equ 0afh
       000000B0            B    37    CS2_CTL			equ 0b0h
       000000B1            B    38    CS3_LBR			equ 0b1h			;eZ80 wait 
       000000B2            B    39    CS3_UBR			equ 0b2h
       000000B3            B    40    CS3_CTL			equ 0b3h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-May-11     15:28:33     page:   2


PC     Object              I  Line    Source ..\..\..\Includes\PROSE_header.asm
                           B    41    
       00000080            B    42    TMR0_CTL		equ 080h			;timer 0 eq
       00000081            B    43    TMR0_DR_L		equ 081h
       00000081            B    44    TMR0_RR_L		equ 081h
       00000082            B    45    TMR0_DR_H		equ 082h
       00000082            B    46    TMR0_RR_H		equ 082h
       00000092            B    47    TMR_ISS			equ 092h
                           B    48    
       000000ED            B    49    RTC_CTRL		equ 0edh			;RTC equate
       000000EC            B    50    RTC_ACTRL		equ 0ech
       000000E0            B    51    RTC_SEC			equ 0e0h
       000000E1            B    52    RTC_MIN			equ 0e1h
       000000E2            B    53    RTC_HRS			equ 0e2h
       000000E3            B    54    RTC_DOW			equ 0e3h
       000000E4            B    55    RTC_DOM			equ 0e4h
       000000E5            B    56    RTC_MON			equ 0e5h
       000000E6            B    57    RTC_YR			equ 0e6h
       000000E7            B    58    RTC_CEN			equ 0e7h
                           B    59    
                           B    60    ;-- EZ80P Hardware equates --------------------
                           B    61    
       00000000            B    62    port_pic_data  			equ 000h
       00000001            B    63    port_pic_ctrl			equ 001h
       00000001            B    64    port_hw_flags			equ 001h
       00000002            B    65    port_sdc_ctrl			equ 002h	; this is a
       00000002            B    66    port_keyboard_data		equ 002h
       00000003            B    67    port_sdc_data		 	equ 003h	
       00000004            B    68    port_memory_paging		equ 004h
       00000005            B    69    port_irq_ctrl			equ 005h
       00000006            B    70    port_nmi_ack			equ 006h
       00000007            B    71    port_ps2_ctrl			equ 007h
       00000008            B    72    port_selector			equ 008h
       00000006            B    73    port_mouse_data			equ 006h
       00000009            B    74    port_clear_flags		equ 009h
                           B    75    
       00000000            B    76    sdc_power				equ 0		;(port_sd_c
       00000001            B    77    sdc_cs					equ 1		;(port_sd_c
       00000002            B    78    sdc_speed				equ 2 		;(port_sd_c
                           B    79    
       00000004            B    80    sdc_serializer_busy		equ 4 		;(port_hw_f
       00000005            B    81    vrt						equ 5		;(port_hw_f
                           B    82    
                           B    83    
                           B    84    ;-- Memory locations --------------------------
                           B    85    
       00000000            B    86    sysram_addr				equ 0000000h
       00800000            B    87    vram_a_addr				equ 0800000h
       00C00000            B    88    vram_b_addr				equ 0c00000h
                           B    89    
                           B    90    ;-- Hardware registers ------------------------
                           B    91    
       00FF0000            B    92    hw_palette				equ 0ff0000h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-May-11     15:28:33     page:   3


PC     Object              I  Line    Source ..\..\..\Includes\PROSE_header.asm
       00FF0800            B    93    hw_sprite_registers		equ 0ff0800h
       00FF1000            B    94    hw_video_parameters		equ 0ff1000h
       00FF1400            B    95    hw_audio_registers		equ 0ff1400h
       00FF1800            B    96    hw_video_settings		equ 0ff1800h
                           B    97    
       00FF1000            B    98    tilemap_parameters		equ hw_video_parameters
       00FF1020            B    99    bitmap_parameters		equ hw_video_parameters
                           B   100    
       00FF1800            B   101    video_control			equ hw_video_settings+0
       00FF1801            B   102    sprite_control			equ hw_video_settings+0
       00FF1802            B   103    bgnd_palette_select		equ hw_video_settings+0
       00FF1803            B   104    sprite_palette_select	equ hw_video_settings+0
       00FF1804            B   105    right_border_position	equ hw_video_settings+0
                           B   106    
                           B   107    ;----------------------------------------------
                           B   108    
       00000A00            B   109    os_start 	equ 0a00h
                           B   110    
       00000A14            B   111    prose_return equ os_start+14h
       00000A20            B   112    prose_kernal equ os_start+20h
                           B   113    
                           B   114    ;----------------------------------------------
                           B   115    ; Kernal Jump Table values for mode PROSE
                           B   116    ;----------------------------------------------
                           B   117    		
       00000000            B   118    kr_mount_volumes				equ 00h	
       00000001            B   119    kr_get_device_info				equ 01h	
       00000002            B   120    kr_check_volume_format			equ 02h	
       00000003            B   121    kr_change_volume				equ 03h	
       00000004            B   122    kr_get_volume_info				equ 04h	
       00000005            B   123    kr_format_device				equ 05h	
       00000006            B   124    kr_make_dir						equ 06h
                           B   125    
       00000007            B   126    kr_change_dir					equ 07h	
       00000008            B   127    kr_parent_dir					equ 08h	
       00000009            B   128    kr_root_dir						equ 09h
       0000000A            B   129    kr_delete_dir					equ 0ah
       0000000B            B   130    kr_find_file					equ 0bh
       0000000C            B   131    kr_set_file_pointer				equ 0ch
       0000000D            B   132    kr_set_load_length				equ 0dh
       0000000E            B   133    kr_read_file					equ 0eh
                           B   134    
       0000000F            B   135    kr_erase_file					equ 0fh
       00000010            B   136    kr_rename_file					equ 10h
       00000011            B   137    kr_create_file					equ 11h
       00000012            B   138    kr_write_file					equ 12h
       00000013            B   139    kr_get_total_sectors			equ 13h
       00000014            B   140    kr_dir_list_first_entry			equ 14h
       00000015            B   141    kr_dir_list_get_entry			equ 15h
       00000016            B   142    kr_dir_list_next_entry			equ 16h
                           B   143    
       00000017            B   144    kr_read_sector					equ 17h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-May-11     15:28:33     page:   4


PC     Object              I  Line    Source ..\..\..\Includes\PROSE_header.asm
       00000018            B   145    kr_write_sector					equ 18h
       00000019            B   146    kr_file_sector_list				equ 19h
       0000001A            B   147    kr_get_dir_cluster				equ 1ah
       0000001B            B   148    kr_set_dir_cluster				equ 1bh
       0000001C            B   149    kr_get_dir_name					equ 1ch
       0000001D            B   150    kr_wait_key						equ 1dh
       0000001E            B   151    kr_get_key						equ 1eh
                           B   152    
       0000001F            B   153    kr_get_key_mod_flags			equ 1fh
       00000020            B   154    kr_serial_receive_header		equ 20h
       00000021            B   155    kr_serial_receive_file			equ 21h
       00000022            B   156    kr_serial_send_file				equ 22h
       00000023            B   157    kr_serial_tx_byte				equ 23h
       00000024            B   158    kr_serial_rx_byte				equ 24h
                           B   159    
       00000025            B   160    kr_print_string					equ 25h
       00000026            B   161    kr_clear_screen					equ 26h
       00000027            B   162    kr_wait_vrt						equ 27h
       00000028            B   163    kr_set_cursor_position			equ 28h
       00000029            B   164    kr_plot_char					equ 29h
       0000002A            B   165    kr_set_pen						equ 2ah
       0000002B            B   166    kr_background_colours			equ 2bh
       0000002C            B   167    kr_draw_cursor					equ 2ch
       0000002D            B   168    kr_get_pen						equ 2dh
       0000002E            B   169    kr_scroll_up					equ 2eh
       0000002F            B   170    kr_os_display					equ 2fh
       00000030            B   171    kr_get_display_size				equ 30h
       00000031            B   172    kr_get_charmap_addr_xy			equ 31h
       00000032            B   173    kr_get_cursor_position			equ 32h
                           B   174    
       00000033            B   175    kr_set_envar					equ 33h
       00000034            B   176    kr_get_envar					equ 34h
       00000035            B   177    kr_delete_envar					equ 35h
                           B   178    
       00000036            B   179    kr_set_mouse_window				equ 36h
       00000037            B   180    kr_get_mouse_position			equ 37h
       00000038            B   181    kr_get_mouse_motion				equ 38h
                           B   182    
       00000039            B   183    kr_time_delay					equ 39h
       0000003A            B   184    kr_compare_strings				equ 3ah
       0000003B            B   185    kr_hex_byte_to_ascii			equ 3bh
       0000003C            B   186    kr_ascii_to_hex_word			equ 3ch
       0000003D            B   187    kr_get_string					equ 3dh
                           B   188    
       0000003E            B   189    kr_get_version					equ 3eh
       0000003F            B   190    kr_dont_store_registers			equ 3fh
       00000040            B   191    kr_get_font_info				equ 40h
       00000041            B   192    kr_read_rtc						equ 41h
       00000042            B   193    kr_write_rtc					equ 42h
                           B   194    
       00000043            B   195    kr_get_keymap_location			equ 43h
       00000044            B   196    kr_get_os_high_mem				equ 44h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-May-11     15:28:33     page:   5


PC     Object              I  Line    Source ..\..\..\Includes\PROSE_header.asm
                           B   197    
                           B   198    ;----------------------------------------------
                           B   199    ; Standard PROSE executable header
                           B   200    ;----------------------------------------------
                           B   201    
                           B   202    
                           B   203    	IF ADL_mode = 0
                           B   204    		org load_location&0ffffh	; if Z80 mo
                           B   205    	ELSE
010000                     B   206    		org load_location			; otherwise
                           B   207    	ENDIF
                           B   208    	
                           B   209    		.assume ADL = 1				; All PROSE
                           B   210    
010000 18 0E               B   211    		jr skip_header				; $0 - Jump
010002 50524F              B   212    		db 'PRO'					; $2 - ASCI
010005 000001              B   213    mb_loc	dw24 load_location			; $5 - Desi
010008 000000              B   214    		dw24 0						; $8 - If >
01000B 0000                B   215    		dw prose_version_req		; $B - If >
01000D 0000                B   216    		dw amoeba_version_req		; $D - If >
01000F 01                  B   217    		db ADL_mode					; $F - Z80 
                           B   218    
010010                     B   219    skip_header
                           B   220    	
                           B   221    	IF ADL_mode = 0 
                           B   222    		
                           B   223    mbase_offset equ load_location & 0ff0000h
                           B   224    
                           B   225    		ld a,load_location/65536	; Additiona
                           B   226    		ld MB,a						; Set MBASE
                           B   227    		jp.sis go_z80_mode			; switches 
                           B   228    
                           B   229    go_z80_mode
                           B   230    
                           B   231    		.assume ADL = 0
                           B   232    
                           B   233    	ENDIF
                           B   234    	
                           B   235    ;----------------------------------------------
                           B   236    	
                           A    13    
                           A    14    ;----------------------------------------------
                           A    15    
010010 22 AB 09 01         A    16    				ld (command_line_arg_ptr),hl
                           A    17    				
010014 ED3800              A    18    				in0 a,(port_pic_data)			010017 CD 6E 05 01         A    19    				call short_pause
                           A    20    
01001B CD 4E 08 01         A    21    				call get_slot_count				01001F 28 06               A    22    				jr z,slc_ok
010021 21 9C 0B 01         A    23    				ld hl,slot_count_error_txt
010025 18 57               A    24    				jr quit_string
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-May-11     15:28:33     page:   6


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSEA~1\fpgacfg\src\fpgacfg.asm
                           A    25    					
010027 2A AB 09 01         A    26    slc_ok			ld hl,(command_line_arg_ptr)
01002B 7E                  A    27    				ld a,(hl)						01002C B7                  A    28    				or a				
01002D CA 87 00 01         A    29    				jp z,show_usage
                           A    30    
010031 7E                  A    31    				ld a,(hl)
010032 FE57                A    32    				cp 'W'
010034 CA 4D 01 01         A    33    				jp z,write_slot_cmd
010038 FE77                A    34    				cp 'w'
01003A CA 4D 01 01         A    35    				jp z,write_slot_cmd
01003E FE42                A    36    				cp 'B'
010040 CA E0 03 01         A    37    				jp z,set_boot_slot_cmd
010044 FE62                A    38    				cp 'b'
010046 CA E0 03 01         A    39    				jp z,set_boot_slot_cmd
01004A FE45                A    40    				cp 'E'
01004C CA 81 03 01         A    41    				jp z,erase_slot_cmd
010050 FE65                A    42    				cp 'e'
010052 CA 81 03 01         A    43    				jp z,erase_slot_cmd
010056 FE4C                A    44    				cp 'L'
010058 CA 8F 00 01         A    45    				jp z,list_slots_cmd
01005C FE6C                A    46    				cp 'l'
01005E CA 8F 00 01         A    47    				jp z,list_slots_cmd
010062 FE50                A    48    				cp 'P'
010064 CA 31 01 01         A    49    				jp z,show_pic_fw_cmd
010068 FE70                A    50    				cp 'p'
01006A CA 31 01 01         A    51    				jp z,show_pic_fw_cmd
01006E FE43                A    52    				cp 'C'
010070 CA 9C 04 01         A    53    				jp z,configure_cmd
010074 FE63                A    54    				cp 'c'
010076 CA 9C 04 01         A    55    				jp z,configure_cmd
                           A    56    				
01007A 21 AA 0A 01         A    57    				ld hl,unknown_arg_txt
01007E CD 5A 05 01         A    58    quit_string		call print_string
010082 AF                  A    59    				xor a
010083 C3140A00            A    60    				jp prose_return
                           A    61    
                           A    62    
                           A    63    ;----------------------------------------------
                           A    64    
                           A    65    
010087 21 D1 09 01         A    66    show_usage		ld hl,usage_txt
01008B C3 7E 00 01         A    67    				jp quit_string
                           A    68    
                           A    69    
                           A    70    ;----------------------------------------------
                           A    71    
                           A    72    
01008F 21 AA 0D 01         A    73    list_slots_cmd	ld hl,slots_txt
010093 CD 5A 05 01         A    74    				call print_string
                           A    75    
010097 AF                  A    76    				xor a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-May-11     15:28:33     page:   7


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSEA~1\fpgacfg\src\fpgacfg.asm
010098 32 CA 09 01         A    77    id_loop			ld (working_slot),a
01009C 5F                  A    78    				ld e,a
01009D 21 CB 0D 01         A    79    				ld hl,slot_hex+1
0100A1 3E3B                A    80    				ld a,kr_hex_byte_to_ascii
0100A3 5BCD200A 00         A    81    				call.lil prose_kernal
0100A8 21 CA 0D 01         A    82    				ld hl,slot_hex
0100AC CD 5A 05 01         A    83    				call print_string
0100B0 21000000            A    84    				ld hl,0
0100B4 3A CA 09 01         A    85    				ld a,(working_slot)				0100B8 67                  A    86    				ld h,a
0100B9 29                  A    87    				add hl,hl
0100BA 11FF0100            A    88    				ld de,01ffh
0100BE 19                  A    89    				add hl,de
0100BF EB                  A    90    				ex de,hl
0100C0 CD 45 07 01         A    91    				call read_eeprom_page
0100C4 DA AC 05 01         A    92    				jp c,pic_error
0100C8 21 93 0E 01         A    93    				ld hl,buffer+090h				0100CC 7E                  A    94    				ld a,(hl)
0100CD B7                  A    95    				or a
0100CE 28 04               A    96    				jr z,unk_id
0100D0 CB7F                A    97    				bit 7,a
0100D2 28 0C               A    98    				jr z,id_ok
0100D4 21 D1 0D 01         A    99    unk_id			ld hl,unknown_txt
0100D8 CD 5A 05 01         A   100    				call print_string
0100DC 0E00                A   101    				ld c,0
0100DE 18 06               A   102    				jr nxtslot
0100E0 CD 5A 05 01         A   103    id_ok			call print_string
0100E4 0E01                A   104    				ld c,1
0100E6 3A CA 09 01         A   105    nxtslot			ld a,(working_slot)
0100EA 11000000            A   106    				ld de,0
0100EE 5F                  A   107    				ld e,a
0100EF 21 E3 0D 01         A   108    				ld hl,slots_valid
0100F3 19                  A   109    				add hl,de
0100F4 71                  A   110    				ld (hl),c
0100F5 21 C9 09 01         A   111    				ld hl,slot_count
0100F9 3C                  A   112    				inc a
0100FA BE                  A   113    				cp (hl)
0100FB 20 9B               A   114    				jr nz,id_loop
                           A   115    			
0100FD 21 7F 0C 01         A   116    				ld hl,boot_slot_txt				010101 CD 5A 05 01         A   117    				call print_string
010105 CD 65 08 01         A   118    				call get_boot_slot
010109 DA 94 05 01         A   119    				jp c,timeout
01010D CD 3C 05 01         A   120    				call show_hex_byte
010111 CD 51 05 01         A   121    				call new_line
                           A   122    				
010115 21 99 0C 01         A   123    				ld hl,last_cfg_txt				010119 CD 5A 05 01         A   124    				call print_string
01011D CD 76 08 01         A   125    				call get_last_cfg_slot
010121 DA 94 05 01         A   126    				jp c,timeout
010125 CD 3C 05 01         A   127    				call show_hex_byte
                           A   128    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-May-11     15:28:33     page:   8


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSEA~1\fpgacfg\src\fpgacfg.asm
010129 21 E1 0D 01         A   129    				ld hl,cr_txt
01012D C3 7E 00 01         A   130    				jp quit_string	
                           A   131    
                           A   132    
                           A   133    ;----------------------------------------------
                           A   134    		
                           A   135    
010131 21 B1 0C 01         A   136    show_pic_fw_cmd	ld hl,firmware_txt				010135 CD 5A 05 01         A   137    				call print_string
010139 CD 9A 09 01         A   138    				call get_fw_version
01013D DA 94 05 01         A   139    				jp c,timeout
010141 CD 3C 05 01         A   140    				call show_hex_byte
010145 21 E1 0D 01         A   141    				ld hl,cr_txt
010149 C3 7E 00 01         A   142    				jp quit_string	
                           A   143    
                           A   144    			
                           A   145    ;----------------------------------------------
                           A   146    
                           A   147    
01014D 21 03 0E 01         A   148    write_slot_cmd	ld hl,buffer
010151 01000004            A   149    				ld bc,256*1024
010155 3EFF                A   150    				ld a,0ffh
010157 77                  A   151    clbuflp			ld (hl),a
010158 EDA1                A   152    				cpi
01015A EA 57 01 01         A   153    				jp pe,clbuflp
                           A   154    
01015E CD 21 05 01         A   155    				call find_next_argument			010162 CA B4 05 01         A   156    				jp z,missing_arg
                           A   157    				
010166 3E3C                A   158    				ld a,kr_ascii_to_hex_word		010168 5BCD200A 00         A   159    				call.lil prose_kernal
01016D C2 BC 05 01         A   160    				jp nz,bad_hex
010171 7B                  A   161    				ld a,e
010172 32 C8 09 01         A   162    				ld (target_slot),a
010176 21 C9 09 01         A   163    				ld hl,slot_count
01017A BE                  A   164    				cp (hl)
01017B D2 8C 05 01         A   165    				jp nc,invalid_slot
                           A   166    				
01017F CD 21 05 01         A   167    				call find_next_argument			010183 CA CA 01 01         A   168    				jp z,serial_cfg_load
010187 11 B0 09 01         A   169    				ld de,filename
01018B 0610                A   170    				ld b,16
01018D 7E                  A   171    cpy_fn			ld a,(hl)
01018E B7                  A   172    				or a
01018F 28 09               A   173    				jr z,fn_done
010191 FE20                A   174    				cp ' '
010193 28 05               A   175    				jr z,fn_done
010195 12                  A   176    				ld (de),a
010196 23                  A   177    				inc hl
010197 13                  A   178    				inc de
010198 10 F3               A   179    				djnz cpy_fn
01019A AF                  A   180    fn_done			xor a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-May-11     15:28:33     page:   9


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSEA~1\fpgacfg\src\fpgacfg.asm
01019B 12                  A   181    				ld (de),a
                           A   182    				
01019C 21 B0 09 01         A   183    				ld hl,filename
0101A0 22 C2 09 01         A   184    				ld (fn_addr),hl
0101A4 3E0B                A   185    				ld a,kr_find_file
0101A6 5BCD200A 00         A   186    				call.lil prose_kernal
0101AB C2 A4 05 01         A   187    				jp nz,load_error
                           A   188    				
0101AF 21 DA 0C 01         A   189    				ld hl,loading_txt
0101B3 CD 5A 05 01         A   190    				call print_string
                           A   191    				
0101B7 21 03 0E 01         A   192    				ld hl,buffer
0101BB 3E0E                A   193    				ld a,kr_read_file
0101BD 5BCD200A 00         A   194    				call.lil prose_kernal
0101C2 C2 A4 05 01         A   195    				jp nz,load_error
0101C6 C3 17 02 01         A   196    				jp dl_done
                           A   197    				
                           A   198    
0101CA 21 E6 0C 01         A   199    serial_cfg_load	ld hl,download
0101CE CD 5A 05 01         A   200    				call print_string
                           A   201    
0101D2 1E01                A   202    get_hdr_loop	ld e,1							0101D4 21 AE 09 01         A   203    				ld hl,dl_filename
0101D8 3E20                A   204    				ld a,kr_serial_receive_header
0101DA 5BCD200A 00         A   205    				call.lil prose_kernal
0101DF B7                  A   206    				or a
0101E0 28 19               A   207    				jr z,got_header
                           A   208    				
0101E2 FE83                A   209    				cp 083h							0101E4 C2 9C 05 01         A   210    				jr nz,comms_error
0101E8 3E1E                A   211    				ld a,kr_get_key
0101EA 5BCD200A 00         A   212    				call.lil prose_kernal
0101EF FE76                A   213    				cp 076h							0101F1 20 DF               A   214    				jr nz,get_hdr_loop
0101F3 21 22 0C 01         A   215    				ld hl,aborted_txt
0101F7 C3 7E 00 01         A   216    				jp quit_string
                           A   217    				
0101FB DD22 C2 09 01       A   218    got_header		ld (fn_addr),ix
010200 21 1D 0D 01         A   219    				ld hl,receiving					010204 CD 5A 05 01         A   220    				call print_string
                           A   221    
010208 3E21                A   222    				ld a,kr_serial_receive_file
01020A 21 03 0E 01         A   223    				ld hl,buffer
01020E 5BCD200A 00         A   224    				call.lil prose_kernal
010213 C2 9C 05 01         A   225    				jp nz,comms_error
                           A   226    
010217 2A C2 09 01         A   227    dl_done			ld hl,(fn_addr)
01021B 11 93 0D 03         A   228    				ld de,buffer+01ff90h			01021F 0610                A   229    				ld b,16
010221 7E                  A   230    cfnlp			ld a,(hl)
010222 12                  A   231    				ld (de),a
010223 B7                  A   232    				or a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-May-11     15:28:33     page:  10


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSEA~1\fpgacfg\src\fpgacfg.asm
010224 28 06               A   233    				jr z,cfnd
010226 23                  A   234    				inc hl
010227 13                  A   235    				inc de
010228 10 F7               A   236    				djnz cfnlp
01022A AF                  A   237    				xor a
01022B 12                  A   238    				ld (de),a
01022C                     A   239    cfnd
                           A   240    
01022C 21 40 0C 01         A   241    				ld hl,write_txt
010230 CD 5A 05 01         A   242    				call print_string
010234 3A C8 09 01         A   243    				ld a,(target_slot)
010238 CD 3C 05 01         A   244    				call show_hex_byte
01023C CD 7A 05 01         A   245    				call confirm
010240 C2 DC 05 01         A   246    				jp nz,aborted
                           A   247    
010244 CD 98 08 01         A   248    				call erase_slot
010248 DA 94 05 01         A   249    				jp c,timeout
01024C FE00                A   250    				cp 0
01024E C2 E4 05 01         A   251    				jp nz,bad_pic_response
010252 CD 03 09 01         A   252    				call check_erasure
010256 DA 94 05 01         A   253    				jp c,timeout
01025A C2 C4 05 01         A   254    				jp nz,bad_erase
                           A   255    				
                           A   256    
                           A   257    
01025E CD EE 07 01         A   258    				call enable_pic_writes
010262 D8                  A   259    				ret c
010263 FE00                A   260    				cp 0
010265 C0                  A   261    				ret nz
                           A   262    
010266 21 63 0D 01         A   263    				ld hl,writing					01026A CD 5A 05 01         A   264    				call print_string
01026E 21 03 0E 01         A   265    				ld hl,buffer
010272 11000000            A   266    				ld de,0
010276 3A C8 09 01         A   267    				ld a,(target_slot)
01027A CB27                A   268    				sla a
01027C 57                  A   269    				ld d,a							01027D 01000200            A   270    				ld bc,0200h						010281 D5                  A   271    lp1				push de
010282 C5                  A   272    				push bc
010283 CD F7 05 01         A   273    				call write_eeprom_page
010287 C1                  A   274    				pop bc
010288 D1                  A   275    				pop de
010289 DA 94 05 01         A   276    				jp c,timeout
01028D FE00                A   277    				cp 0
01028F C2 E4 05 01         A   278    				jp nz,bad_pic_response
010293 13                  A   279    				inc de							010294 0B                  A   280    				dec bc
010295 78                  A   281    				ld a,b
010296 B1                  A   282    				or c
010297 20 E8               A   283    				jr nz,lp1
                           A   284    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-May-11     15:28:33     page:  11


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSEA~1\fpgacfg\src\fpgacfg.asm
010299 CD 0B 08 01         A   285    				call disable_pic_writes
01029D DA 94 05 01         A   286    				jp c,timeout
0102A1 FE00                A   287    				cp 0
0102A3 C2 E4 05 01         A   288    				jp nz,bad_pic_response
                           A   289    			
                           A   290    
                           A   291    
                           A   292    
                           A   293    
0102A7 3E88                A   294    				ld a,088h						0102A9 CD 3D 08 01         A   295    				call send_byte_to_pic
0102AD 3ED4                A   296    				ld a,0d4h
0102AF CD 3D 08 01         A   297    				call send_byte_to_pic
0102B3 3E00                A   298    				ld a,000h			
0102B5 CD 3D 08 01         A   299    				call send_byte_to_pic			0102B9 3E00                A   300    				ld a,000h	
0102BB CD 3D 08 01         A   301    				call send_byte_to_pic			0102BF 3A C8 09 01         A   302    				ld a,(target_slot)
0102C3 CB27                A   303    				sla a
0102C5 CD 3D 08 01         A   304    				call send_byte_to_pic			                           A   305    
0102C9 CD 1C 08 01         A   306    				call get_byte_from_pic			0102CD DA 94 05 01         A   307    				jp c,timeout
0102D1 FE00                A   308    				cp 0
0102D3 C2 E4 05 01         A   309    				jp nz,bad_pic_response
                           A   310    
0102D7 3E88                A   311    				ld a,088h						0102D9 CD 3D 08 01         A   312    				call send_byte_to_pic
0102DD 3EE2                A   313    				ld a,0e2h
0102DF CD 3D 08 01         A   314    				call send_byte_to_pic
0102E3 3E00                A   315    				ld a,00h			
0102E5 CD 3D 08 01         A   316    				call send_byte_to_pic			0102E9 3E00                A   317    				ld a,00h	
0102EB CD 3D 08 01         A   318    				call send_byte_to_pic			0102EF 3E02                A   319    				ld a,02h
0102F1 CD 3D 08 01         A   320    				call send_byte_to_pic			                           A   321    	
0102F5 CD 1C 08 01         A   322    				call get_byte_from_pic			0102F9 DA 94 05 01         A   323    				jp c,timeout
0102FD FE00                A   324    				cp 0
0102FF C2 E4 05 01         A   325    				jp nz,bad_pic_response
                           A   326    
010303 21 7D 0D 01         A   327    				ld hl,verifying					010307 CD 5A 05 01         A   328    				call print_string
                           A   329    
01030B 3E88                A   330    				ld a,088h						01030D CD 3D 08 01         A   331    				call send_byte_to_pic
010311 3EC0                A   332    				ld a,0c0h
010313 CD 3D 08 01         A   333    				call send_byte_to_pic
010317 CD 1C 08 01         A   334    				call get_byte_from_pic			01031B DA 94 05 01         A   335    				jp c,timeout
01031F FE00                A   336    				cp 0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-May-11     15:28:33     page:  12


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSEA~1\fpgacfg\src\fpgacfg.asm
010321 C2 E4 05 01         A   337    				jp nz,bad_pic_response
                           A   338    
010325 21 03 0E 03         A   339    				ld hl,buffer+020000h
010329 11000000            A   340    				ld de,0
01032D 3E01                A   341    lp2				ld a,01h
01032F 01010000            A   342    				ld bc,port_pic_ctrl
010333 ED79                A   343    				out (bc),a						010335 CD 1C 08 01         A   344    				call get_byte_from_pic
010339 DA 94 05 01         A   345    				jp c,timeout
01033D 77                  A   346    				ld (hl),a
01033E 23                  A   347    				inc hl
                           A   348    
01033F 3E00                A   349    				ld a,00h
010341 01010000            A   350    				ld bc,port_pic_ctrl
010345 ED79                A   351    				out (bc),a						010347 CD 1C 08 01         A   352    				call get_byte_from_pic
01034B DA 94 05 01         A   353    				jp c,timeout
01034F 77                  A   354    				ld (hl),a
010350 23                  A   355    				inc hl
010351 1B                  A   356    				dec de
010352 7A                  A   357    				ld a,d
010353 B3                  A   358    				or e
010354 20 D7               A   359    				jr nz,lp2
                           A   360    
                           A   361    
                           A   362    
                           A   363    
010356 21 03 0E 01         A   364    				ld hl,buffer					01035A 11 03 0E 03         A   365    				ld de,buffer+020000h
01035E 0600                A   366    				ld b,0
010360 C5                  A   367    lp4				push bc
010361 01000000            A   368    				ld bc,0h
010365 1A                  A   369    lp3				ld a,(de)
010366 BE                  A   370    				cp (hl)
010367 C2 CC 05 01         A   371    				jp nz,ver_bad
01036B 23                  A   372    				inc hl
01036C 13                  A   373    				inc de
01036D 03                  A   374    				inc bc
01036E 78                  A   375    				ld	a,b
01036F B1                  A   376    				or c
010370 20 F3               A   377    				jr nz,lp3
010372 C1                  A   378    				pop bc
010373 04                  A   379    				inc b
010374 78                  A   380    				ld a,b
010375 FE02                A   381    				cp 2
010377 20 E7               A   382    				jr nz,lp4
                           A   383    
010379 21 CC 09 01         A   384    				ld hl,ok_txt
01037D C3 7E 00 01         A   385    				jp quit_string
                           A   386    								
                           A   387    
                           A   388    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-May-11     15:28:33     page:  13


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSEA~1\fpgacfg\src\fpgacfg.asm
                           A   389    
                           A   390    
010381 CD 21 05 01         A   391    erase_slot_cmd	call find_next_argument			010385 CA B4 05 01         A   392    				jp z,missing_arg
                           A   393    				
010389 3E3C                A   394    				ld a,kr_ascii_to_hex_word		01038B 5BCD200A 00         A   395    				call.lil prose_kernal
010390 C2 BC 05 01         A   396    				jp nz,bad_hex
010394 7B                  A   397    				ld a,e
010395 32 C8 09 01         A   398    				ld (target_slot),a
010399 21 C9 09 01         A   399    				ld hl,slot_count
01039D BE                  A   400    				cp (hl)
01039E D2 8C 05 01         A   401    				jp nc,invalid_slot
                           A   402    
0103A2 21 2C 0C 01         A   403    				ld hl,erase_txt
0103A6 CD 5A 05 01         A   404    				call print_string
0103AA 3A C8 09 01         A   405    				ld a,(target_slot)
0103AE CD 3C 05 01         A   406    				call show_hex_byte
0103B2 CD 7A 05 01         A   407    				call confirm
0103B6 C2 DC 05 01         A   408    				jp nz,aborted
                           A   409    				
0103BA CD 98 08 01         A   410    				call erase_slot
0103BE DA 94 05 01         A   411    				jp c,timeout
0103C2 FE00                A   412    				cp 0
0103C4 C2 E4 05 01         A   413    				jp nz,bad_pic_response
                           A   414    				
0103C8 CD 03 09 01         A   415    				call check_erasure
0103CC DA 94 05 01         A   416    				jp c,timeout
0103D0 21 CC 09 01         A   417    				ld hl,ok_txt
0103D4 CA 7E 00 01         A   418    				jp z,quit_string
                           A   419    				
0103D8 21 11 0B 01         A   420    				ld hl,erase_failed_txt
0103DC C3 7E 00 01         A   421    				jp quit_string
                           A   422    
                           A   423    
                           A   424    ;----------------------------------------------
                           A   425    
                           A   426    
0103E0                     A   427    set_boot_slot_cmd
                           A   428    
0103E0 CD 21 05 01         A   429    				call find_next_argument			0103E4 CA B4 05 01         A   430    				jp z,missing_arg
                           A   431    				
0103E8 3E3C                A   432    				ld a,kr_ascii_to_hex_word		0103EA 5BCD200A 00         A   433    				call.lil prose_kernal
0103EF C2 BC 05 01         A   434    				jp nz,bad_hex
0103F3 7B                  A   435    				ld a,e
0103F4 32 C8 09 01         A   436    				ld (target_slot),a
0103F8 21 C9 09 01         A   437    				ld hl,slot_count
0103FC BE                  A   438    				cp (hl)
0103FD D2 8C 05 01         A   439    				jp nc,invalid_slot
                           A   440    	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-May-11     15:28:33     page:  14


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSEA~1\fpgacfg\src\fpgacfg.asm
010401 21 57 0C 01         A   441    				ld hl,new_boot_txt
010405 CD 5A 05 01         A   442    				call print_string
010409 3A C8 09 01         A   443    				ld a,(target_slot)
01040D CD 3C 05 01         A   444    				call show_hex_byte
010411 CD 7A 05 01         A   445    				call confirm
010415 C2 DC 05 01         A   446    				jp nz,aborted
                           A   447    
010419 3E88                A   448    				ld a,088h						01041B CD 3D 08 01         A   449    				call send_byte_to_pic
01041F 3EB8                A   450    				ld a,0b8h
010421 CD 3D 08 01         A   451    				call send_byte_to_pic
010425 3E16                A   452    				ld a,016h		
010427 CD 3D 08 01         A   453    				call send_byte_to_pic
01042B 3A C8 09 01         A   454    				ld a,(target_slot)	
01042F CD 3D 08 01         A   455    				call send_byte_to_pic
010433 CD 1C 08 01         A   456    				call get_byte_from_pic
010437 DA 94 05 01         A   457    				jp c,timeout
01043B FE00                A   458    				cp 0
01043D C2 E4 05 01         A   459    				jp nz,bad_pic_response
                           A   460    
010441 CD EE 07 01         A   461    				call enable_pic_writes
010445 DA 94 05 01         A   462    				jp c,timeout
010449 FE00                A   463    				cp 0
01044B C2 E4 05 01         A   464    				jp nz,bad_pic_response
                           A   465    				
01044F 3E88                A   466    				ld a,088h						010451 CD 3D 08 01         A   467    				call send_byte_to_pic
010455 3E37                A   468    				ld a,037h
010457 CD 3D 08 01         A   469    				call send_byte_to_pic
01045B 3ED8                A   470    				ld a,0d8h		
01045D CD 3D 08 01         A   471    				call send_byte_to_pic
010461 3E06                A   472    				ld a,006h		
010463 CD 3D 08 01         A   473    				call send_byte_to_pic
010467 CD 1C 08 01         A   474    				call get_byte_from_pic
01046B DA 94 05 01         A   475    				jp c,timeout
01046F FE00                A   476    				cp 0
010471 C2 E4 05 01         A   477    				jp nz,bad_pic_response
                           A   478    				
010475 CD 0B 08 01         A   479    				call disable_pic_writes
010479 DA 94 05 01         A   480    				jp c,timeout
01047D FE00                A   481    				cp 0
01047F C2 E4 05 01         A   482    				jp nz,bad_pic_response
                           A   483    				
010483 CD 65 08 01         A   484    				call get_boot_slot				010487 DA 94 05 01         A   485    				jp c,timeout
01048B 21 C8 09 01         A   486    				ld hl,target_slot
01048F BE                  A   487    				cp (hl)
010490 C2 D4 05 01         A   488    				jp nz,boot_slot_error
                           A   489    				
010494 21 CC 09 01         A   490    				ld hl,ok_txt
010498 C3 7E 00 01         A   491    				jp quit_string
                           A   492    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-May-11     15:28:33     page:  15


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSEA~1\fpgacfg\src\fpgacfg.asm
                           A   493    
                           A   494    ;----------------------------------------------
                           A   495    
                           A   496    
01049C                     A   497    configure_cmd	
01049C CD 21 05 01         A   498    				call find_next_argument			0104A0 CA B4 05 01         A   499    				jp z,missing_arg
0104A4 3E3C                A   500    				ld a,kr_ascii_to_hex_word		0104A6 5BCD200A 00         A   501    				call.lil prose_kernal
0104AB C2 BC 05 01         A   502    				jp nz,bad_hex
0104AF 7B                  A   503    				ld a,e
0104B0 32 C8 09 01         A   504    				ld (target_slot),a
0104B4 21 C9 09 01         A   505    				ld hl,slot_count
0104B8 BE                  A   506    				cp (hl)
0104B9 D2 8C 05 01         A   507    				jp nc,invalid_slot
                           A   508    
0104BD 21 C2 0C 01         A   509    				ld hl,reconfigure_txt
0104C1 CD 5A 05 01         A   510    				call print_string
0104C5 3A C8 09 01         A   511    				ld a,(target_slot)
0104C9 CD 3C 05 01         A   512    				call show_hex_byte
0104CD CD 7A 05 01         A   513    				call confirm
0104D1 C2 DC 05 01         A   514    				jp nz,aborted
                           A   515    				
0104D5 3E88                A   516    				ld a,088h						0104D7 CD 3D 08 01         A   517    				call send_byte_to_pic
0104DB 3EB8                A   518    				ld a,0b8h
0104DD CD 3D 08 01         A   519    				call send_byte_to_pic
0104E1 3E16                A   520    				ld a,016h		
0104E3 CD 3D 08 01         A   521    				call send_byte_to_pic
0104E7 3A C8 09 01         A   522    				ld a,(target_slot)	
0104EB CD 3D 08 01         A   523    				call send_byte_to_pic
0104EF CD 1C 08 01         A   524    				call get_byte_from_pic
0104F3 DA 94 05 01         A   525    				jp c,timeout
0104F7 FE00                A   526    				cp 0
0104F9 C2 E4 05 01         A   527    				jp nz,bad_pic_response
                           A   528    
0104FD 3E88                A   529    				ld a,088h						0104FF CD 3D 08 01         A   530    				call send_byte_to_pic
010503 3EA1                A   531    				ld a,0a1h
010505 CD 3D 08 01         A   532    				call send_byte_to_pic
010509 3E3F                A   533    				ld a,03fh		
01050B CD 3D 08 01         A   534    				call send_byte_to_pic
01050F 3E62                A   535    				ld a,062h	
010511 CD 3D 08 01         A   536    				call send_byte_to_pic
010515 CD 62 05 01         A   537    				call pause
010519 21 CC 09 01         A   538    				ld hl,ok_txt					01051D C3 7E 00 01         A   539    				jp quit_string
                           A   540    
                           A   541    
                           A   542    ;----------------------------------------------
                           A   543    
                           A   544    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-May-11     15:28:33     page:  16


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSEA~1\fpgacfg\src\fpgacfg.asm
010521                     A   545    find_next_argument
                           A   546    
010521 2A AB 09 01         A   547    				ld hl,(command_line_arg_ptr)
010525 23                  A   548    findspc			inc hl
010526 7E                  A   549    				ld a,(hl)
010527 B7                  A   550    				or a
010528 28 0D               A   551    				jr z,endofargs
01052A FE20                A   552    				cp ' '
01052C 20 F7               A   553    				jr nz,findspc
                           A   554    								
01052E 23                  A   555    find_args		inc hl							01052F 7E                  A   556    				ld a,(hl)
010530 B7                  A   557    				or a
010531 28 04               A   558    				jr z,endofargs
010533 FE20                A   559    				cp ' '
010535 28 F7               A   560    				jr z,find_args
                           A   561    				
010537 22 AB 09 01         A   562    endofargs		ld (command_line_arg_ptr),hl
01053B C9                  A   563    				ret
                           A   564    
                           A   565    ;----------------------------------------------
                           A   566    
                           A   567    
01053C 5F                  A   568    show_hex_byte	ld e,a
01053D 3E3B                A   569    				ld a,kr_hex_byte_to_ascii
01053F 21 A7 0D 01         A   570    				ld hl,ascii_hex
010543 5BCD200A 00         A   571    				call.lil prose_kernal
010548 21 A7 0D 01         A   572    				ld hl,ascii_hex
01054C CD 5A 05 01         A   573    				call print_string
010550 C9                  A   574    				ret
                           A   575    
                           A   576    
010551 21 E1 0D 01         A   577    new_line		ld hl,cr_txt
010555 CD 5A 05 01         A   578    				call print_string
010559 C9                  A   579    				ret
                           A   580    				
                           A   581    				
                           A   582    ;----------------------------------------------
                           A   583    
                           A   584    
01055A 3E25                A   585    print_string	ld a,kr_print_string
01055C 5BCD200A 00         A   586    				call.lil prose_kernal
010561 C9                  A   587    				ret
                           A   588    
                           A   589    
                           A   590    ;----------------------------------------------
                           A   591    
                           A   592    
010562 11008000            A   593    pause			ld de,32768						010566 3E39                A   594    				ld a,kr_time_delay
010568 5BCD200A 00         A   595    				call.lil prose_kernal
01056D C9                  A   596    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-May-11     15:28:33     page:  17


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSEA~1\fpgacfg\src\fpgacfg.asm
                           A   597    
                           A   598    
                           A   599    ;----------------------------------------------
                           A   600    
                           A   601    
01056E 11002000            A   602    short_pause		ld de,8192						010572 3E39                A   603    				ld a,kr_time_delay
010574 5BCD200A 00         A   604    				call.lil prose_kernal
010579 C9                  A   605    				ret	
                           A   606    				
                           A   607    ;----------------------------------------------
                           A   608    
                           A   609    
01057A 21 6F 0C 01         A   610    confirm			ld hl,sure_txt
01057E CD 5A 05 01         A   611    				call print_string
010582 3E1D                A   612    				ld a,kr_wait_key
010584 5BCD200A 00         A   613    				call.lil prose_kernal
010589 FE35                A   614    				cp 035h							01058B C9                  A   615    				ret
                           A   616    
                           A   617    
                           A   618    ;----------------------------------------------
                           A   619    
01058C 21 4B 0B 01         A   620    invalid_slot	ld hl,invalid_slot_txt
010590 C3 7E 00 01         A   621    				jp quit_string
                           A   622    
                           A   623    
010594 21 F7 0B 01         A   624    timeout			ld hl,timeout_msg
010598 C3 7E 00 01         A   625    				jp quit_string
                           A   626    
                           A   627    
01059C 21 C0 0B 01         A   628    comms_error		ld hl,com_error_txt
0105A0 C3 7E 00 01         A   629    				jp quit_string
                           A   630    
                           A   631    
0105A4 21 DE 0B 01         A   632    load_error		ld hl,load_error_txt
0105A8 C3 7E 00 01         A   633    				jp quit_string
                           A   634    
                           A   635    
0105AC 21 62 0B 01         A   636    pic_error		ld hl,pic_error_txt
0105B0 C3 7E 00 01         A   637    				jp quit_string
                           A   638    
                           A   639    
0105B4 21 C8 0A 01         A   640    missing_arg		ld hl,missing_arg_txt
0105B8 C3 7E 00 01         A   641    				jp quit_string
                           A   642    
                           A   643    
0105BC 21 E3 0A 01         A   644    bad_hex			ld hl,bad_hex_txt
0105C0 C3 7E 00 01         A   645    				jp quit_string
                           A   646    
                           A   647    
0105C4 21 11 0B 01         A   648    bad_erase		ld hl,erase_failed_txt
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-May-11     15:28:33     page:  18


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSEA~1\fpgacfg\src\fpgacfg.asm
0105C8 C3 7E 00 01         A   649    				jp quit_string
                           A   650    
                           A   651    
0105CC 21 84 0B 01         A   652    ver_bad			ld hl,verify_failed_txt
0105D0 C3 7E 00 01         A   653    				jp quit_string
                           A   654    
                           A   655    
0105D4 21 28 0B 01         A   656    boot_slot_error	ld hl,boot_slot_error_txt
0105D8 C3 7E 00 01         A   657    				jp quit_string
                           A   658    				
                           A   659    
0105DC 21 22 0C 01         A   660    aborted			ld hl,aborted_txt
0105E0 C3 7E 00 01         A   661    				jp quit_string
                           A   662    				
                           A   663    				
0105E4                     A   664    bad_pic_response
                           A   665    				
0105E4 21 A7 0D 01         A   666    				ld hl,ascii_hex
0105E8 3E3B                A   667    				ld a,kr_hex_byte_to_ascii
0105EA 5BCD200A 00         A   668    				call.lil prose_kernal
0105EF 21 8F 0D 01         A   669    				ld hl,report_byte
0105F3 C3 7E 00 01         A   670    				jp quit_string
                           A   671    				
                           A   672    ;----------------------------------------------
                           A   673    ;--------- EEPROM SUBROUTINES -----------------
                           A   674    ;----------------------------------------------
                           A   675    
0105F7                     A   676    write_eeprom_page
                           A   677    
0105F7 7A                  A   678    				ld a,d
0105F8 32 C5 09 01         A   679    				ld (page_hi),a
0105FC 7B                  A   680    				ld a,e
0105FD 32 C6 09 01         A   681    				ld (page_med),a
                           A   682    
010601 3E88                A   683    				ld a,088h						010603 CD 3D 08 01         A   684    				call send_byte_to_pic
010607 3E98                A   685    				ld a,098h
010609 CD 3D 08 01         A   686    				call send_byte_to_pic
01060D 3E00                A   687    				ld a,000h			
01060F CD 3D 08 01         A   688    				call send_byte_to_pic			010613 3A C6 09 01         A   689    				ld a,(page_med)	
010617 CD 3D 08 01         A   690    				call send_byte_to_pic			01061B 3A C5 09 01         A   691    				ld a,(page_hi)
01061F CD 3D 08 01         A   692    				call send_byte_to_pic			                           A   693    
010623 0640                A   694    				ld b,64							010625 7E                  A   695    wdplp1			ld a,(hl)
010626 CD 3D 08 01         A   696    				call send_byte_to_pic
01062A 23                  A   697    				inc hl
01062B 10 F8               A   698    				djnz wdplp1
01062D CD 1C 08 01         A   699    				call get_byte_from_pic			010631 D8                  A   700    				ret c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-May-11     15:28:33     page:  19


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSEA~1\fpgacfg\src\fpgacfg.asm
010632 B7                  A   701    				or a
010633 C0                  A   702    				ret nz
                           A   703    
010634 3E88                A   704    				ld a,088h						010636 CD 3D 08 01         A   705    				call send_byte_to_pic
01063A 3E98                A   706    				ld a,098h
01063C CD 3D 08 01         A   707    				call send_byte_to_pic
010640 3E40                A   708    				ld a,040h			
010642 CD 3D 08 01         A   709    				call send_byte_to_pic			010646 3A C6 09 01         A   710    				ld a,(page_med)	
01064A CD 3D 08 01         A   711    				call send_byte_to_pic			01064E 3A C5 09 01         A   712    				ld a,(page_hi)
010652 CD 3D 08 01         A   713    				call send_byte_to_pic			                           A   714     
010656 0640                A   715    				ld b,64							010658 7E                  A   716    wdplp2			ld a,(hl)
010659 CD 3D 08 01         A   717    				call send_byte_to_pic
01065D 23                  A   718    				inc hl
01065E 10 F8               A   719    				djnz wdplp2
010660 CD 1C 08 01         A   720    				call get_byte_from_pic			010664 D8                  A   721    				ret c
010665 B7                  A   722    				or a
010666 C0                  A   723    				ret nz
                           A   724    
010667 3E88                A   725    				ld a,088h						010669 CD 3D 08 01         A   726    				call send_byte_to_pic
01066D 3E98                A   727    				ld a,098h
01066F CD 3D 08 01         A   728    				call send_byte_to_pic	
010673 3E80                A   729    				ld a,080h			
010675 CD 3D 08 01         A   730    				call send_byte_to_pic			010679 3A C6 09 01         A   731    				ld a,(page_med)	
01067D CD 3D 08 01         A   732    				call send_byte_to_pic			010681 3A C5 09 01         A   733    				ld a,(page_hi)
010685 CD 3D 08 01         A   734    				call send_byte_to_pic			                           A   735    
010689 0640                A   736    				ld b,64							01068B 7E                  A   737    wdplp3			ld a,(hl)
01068C CD 3D 08 01         A   738    				call send_byte_to_pic
010690 23                  A   739    				inc hl
010691 10 F8               A   740    				djnz wdplp3
010693 CD 1C 08 01         A   741    				call get_byte_from_pic			010697 D8                  A   742    				ret c
010698 B7                  A   743    				or a
010699 C0                  A   744    				ret nz
                           A   745    
01069A 3E88                A   746    				ld a,088h						01069C CD 3D 08 01         A   747    				call send_byte_to_pic
0106A0 3E98                A   748    				ld a,098h
0106A2 CD 3D 08 01         A   749    				call send_byte_to_pic
0106A6 3EC0                A   750    				ld a,0c0h			
0106A8 CD 3D 08 01         A   751    				call send_byte_to_pic			0106AC 3A C6 09 01         A   752    				ld a,(page_med)	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-May-11     15:28:33     page:  20


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSEA~1\fpgacfg\src\fpgacfg.asm
0106B0 CD 3D 08 01         A   753    				call send_byte_to_pic			0106B4 3A C5 09 01         A   754    				ld a,(page_hi)
0106B8 CD 3D 08 01         A   755    				call send_byte_to_pic			                           A   756    
0106BC 0640                A   757    				ld b,64							0106BE 7E                  A   758    wdplp4			ld a,(hl)
0106BF CD 3D 08 01         A   759    				call send_byte_to_pic
0106C3 23                  A   760    				inc hl
0106C4 10 F8               A   761    				djnz wdplp4
0106C6 CD 1C 08 01         A   762    				call get_byte_from_pic			0106CA C9                  A   763    				ret
                           A   764    				
                           A   765    ;----------------------------------------------
                           A   766    
0106CB                     A   767    new_write_eeprom_page
                           A   768    
0106CB 7A                  A   769    				ld a,d
0106CC 32 C5 09 01         A   770    				ld (page_hi),a
0106D0 7B                  A   771    				ld a,e
0106D1 32 C6 09 01         A   772    				ld (page_med),a
                           A   773    
0106D5 3E88                A   774    				ld a,088h						0106D7 CD 3D 08 01         A   775    				call send_byte_to_pic
0106DB 3E99                A   776    				ld a,099h
0106DD CD 3D 08 01         A   777    				call send_byte_to_pic
0106E1 3E00                A   778    				ld a,000h			
0106E3 CD 3D 08 01         A   779    				call send_byte_to_pic			0106E7 3A C6 09 01         A   780    				ld a,(page_med)	
0106EB CD 3D 08 01         A   781    				call send_byte_to_pic			0106EF 3A C5 09 01         A   782    				ld a,(page_hi)
0106F3 CD 3D 08 01         A   783    				call send_byte_to_pic			0106F7 3E80                A   784    				ld a,128
0106F9 CD 3D 08 01         A   785    				call send_byte_to_pic			                           A   786    
0106FD 0680                A   787    				ld b,128						0106FF 7E                  A   788    nwdplp1			ld a,(hl)
010700 CD 3D 08 01         A   789    				call send_byte_to_pic
010704 23                  A   790    				inc hl
010705 10 F8               A   791    				djnz nwdplp1
010707 CD 1C 08 01         A   792    				call get_byte_from_pic			01070B D8                  A   793    				ret c
01070C B7                  A   794    				or a
01070D C0                  A   795    				ret nz
                           A   796    
01070E 3E88                A   797    				ld a,088h						010710 CD 3D 08 01         A   798    				call send_byte_to_pic
010714 3E99                A   799    				ld a,099h
010716 CD 3D 08 01         A   800    				call send_byte_to_pic
01071A 3E80                A   801    				ld a,080h			
01071C CD 3D 08 01         A   802    				call send_byte_to_pic			010720 3A C6 09 01         A   803    				ld a,(page_med)	
010724 CD 3D 08 01         A   804    				call send_byte_to_pic			Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-May-11     15:28:33     page:  21


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSEA~1\fpgacfg\src\fpgacfg.asm
010728 3A C5 09 01         A   805    				ld a,(page_hi)
01072C CD 3D 08 01         A   806    				call send_byte_to_pic			010730 3E80                A   807    				ld a,128
010732 CD 3D 08 01         A   808    				call send_byte_to_pic			                           A   809    
010736 0680                A   810    				ld b,128						010738 7E                  A   811    nwdplp2			ld a,(hl)
010739 CD 3D 08 01         A   812    				call send_byte_to_pic
01073D 23                  A   813    				inc hl
01073E 10 F8               A   814    				djnz nwdplp2
010740 CD 1C 08 01         A   815    				call get_byte_from_pic			010744 C9                  A   816    				ret 
                           A   817    
                           A   818    
                           A   819    ;----------------------------------------------
                           A   820    
010745                     A   821    read_eeprom_page
                           A   822    
010745 E5                  A   823    				push hl							010746 D5                  A   824    				push de
010747 C5                  A   825    				push bc
                           A   826    	
010748 7A                  A   827    				ld a,d
010749 32 C5 09 01         A   828    				ld (page_hi),a
01074D 7B                  A   829    				ld a,e
01074E 32 C6 09 01         A   830    				ld (page_med),a
                           A   831    		
010752 3E88                A   832    				ld a,88h						010754 CD 3D 08 01         A   833    				call send_byte_to_pic
010758 3ED4                A   834    				ld a,0d4h
01075A CD 3D 08 01         A   835    				call send_byte_to_pic
01075E 3E00                A   836    				ld a,0			
010760 CD 3D 08 01         A   837    				call send_byte_to_pic			010764 3A C6 09 01         A   838    				ld a,(page_med)	
010768 CD 3D 08 01         A   839    				call send_byte_to_pic			01076C 3A C5 09 01         A   840    				ld a,(page_hi)
010770 CD 3D 08 01         A   841    				call send_byte_to_pic			010774 CD 1C 08 01         A   842    				call get_byte_from_pic			010778 38 6E               A   843    				jr c,t_o
01077A FE00                A   844    				cp 0
01077C 20 65               A   845    				jr nz,bpr
                           A   846    		
01077E 3E88                A   847    				ld a,88h						010780 CD 3D 08 01         A   848    				call send_byte_to_pic
010784 3EE2                A   849    				ld a,0e2h
010786 CD 3D 08 01         A   850    				call send_byte_to_pic
01078A 3E00                A   851    				ld a,00			
01078C CD 3D 08 01         A   852    				call send_byte_to_pic			010790 3E01                A   853    				ld a,01		
010792 CD 3D 08 01         A   854    				call send_byte_to_pic			010796 3E00                A   855    				ld a,00
010798 CD 3D 08 01         A   856    				call send_byte_to_pic			Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-May-11     15:28:33     page:  22


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSEA~1\fpgacfg\src\fpgacfg.asm
01079C CD 1C 08 01         A   857    				call get_byte_from_pic			0107A0 38 46               A   858    				jr c,t_o
0107A2 FE00                A   859    				cp 0
0107A4 20 3D               A   860    				jr nz,bpr
                           A   861    
                           A   862    			
0107A6 3E88                A   863    				ld a,88h						0107A8 CD 3D 08 01         A   864    				call send_byte_to_pic
0107AC 3EC0                A   865    				ld a,0c0h
0107AE CD 3D 08 01         A   866    				call send_byte_to_pic
0107B2 CD 1C 08 01         A   867    				call get_byte_from_pic			0107B6 38 30               A   868    				jr c,t_o
0107B8 FE00                A   869    				cp 0
0107BA 20 27               A   870    				jr nz,bpr
                           A   871    
                           A   872    			
0107BC 21 03 0E 01         A   873    				ld hl,buffer
0107C0 0680                A   874    				ld b,128
0107C2 3E01                A   875    rplp2			ld a,01h
0107C4 ED3901              A   876    				out0 (port_pic_ctrl),a			0107C7 CD 1C 08 01         A   877    				call get_byte_from_pic
0107CB 38 1B               A   878    				jr c,t_o
0107CD 77                  A   879    				ld (hl),a
0107CE 23                  A   880    				inc hl
0107CF 3E00                A   881    				ld a,00h
0107D1 ED3901              A   882    				out0 (port_pic_ctrl),a			0107D4 CD 1C 08 01         A   883    				call get_byte_from_pic
0107D8 38 0E               A   884    				jr c,t_o
0107DA 77                  A   885    				ld (hl),a
0107DB 23                  A   886    				inc hl
0107DC 10 E4               A   887    				djnz rplp2
                           A   888    
0107DE AF                  A   889    				xor a
0107DF C1                  A   890    				pop bc
0107E0 D1                  A   891    				pop de
0107E1 E1                  A   892    				pop hl
0107E2 C9                  A   893    				ret
                           A   894    
0107E3 37                  A   895    bpr				scf
0107E4 C1                  A   896    				pop bc
0107E5 D1                  A   897    				pop de
0107E6 E1                  A   898    				pop hl
0107E7 C9                  A   899    				ret
                           A   900    
0107E8 AF                  A   901    t_o				xor a
0107E9 37                  A   902    				scf
0107EA C1                  A   903    				pop bc
0107EB D1                  A   904    				pop de
0107EC E1                  A   905    				pop hl
0107ED C9                  A   906    				ret	
                           A   907    				
                           A   908    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-May-11     15:28:33     page:  23


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSEA~1\fpgacfg\src\fpgacfg.asm
                           A   909    ;----------------------------------------------
                           A   910    
0107EE                     A   911    enable_pic_writes
                           A   912    
0107EE 3E88                A   913    				ld a,088h						0107F0 CD 3D 08 01         A   914    				call send_byte_to_pic
0107F4 3E25                A   915    				ld a,025h
0107F6 CD 3D 08 01         A   916    				call send_byte_to_pic
0107FA 3EFA                A   917    				ld a,0fah
0107FC CD 3D 08 01         A   918    				call send_byte_to_pic
010800 3E99                A   919    				ld a,099h
010802 CD 3D 08 01         A   920    				call send_byte_to_pic
                           A   921    
010806 CD 1C 08 01         A   922    				call get_byte_from_pic			01080A C9                  A   923    				ret
                           A   924    
                           A   925    ;----------------------------------------------
                           A   926    
01080B                     A   927    disable_pic_writes
                           A   928    
01080B 3E88                A   929    				ld a,088h						01080D CD 3D 08 01         A   930    				call send_byte_to_pic
010811 3E1F                A   931    				ld a,01fh
010813 CD 3D 08 01         A   932    				call send_byte_to_pic
                           A   933    
010817 CD 1C 08 01         A   934    				call get_byte_from_pic			01081B C9                  A   935    				ret
                           A   936    				
                           A   937    ;----------------------------------------------
                           A   938    	
01081C                     A   939    get_byte_from_pic
                           A   940    
                           A   941    ; Returns byte in A. If carry set, wait timed o
                           A   942    
01081C D5                  A   943    				push de
01081D C5                  A   944    				push bc
01081E 0620                A   945    				ld b,32
010820 11000000            A   946    				ld de,0
010824 ED3801              A   947    pcwbib			in0 a,(port_hw_flags)
010827 E601                A   948    				and 1							010829 20 0B               A   949    				jr nz,pcbib
01082B 1B                  A   950    				dec de
01082C 7A                  A   951    				ld a,d
01082D B3                  A   952    				or e
01082E 20 F4               A   953    				jr nz,pcwbib
010830 10 F2               A   954    				djnz pcwbib
010832 C1                  A   955    				pop bc
010833 D1                  A   956    				pop de
010834 37                  A   957    				scf								010835 C9                  A   958    				ret
                           A   959    
010836 ED3800              A   960    pcbib			in0 a,(port_pic_data)			Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-May-11     15:28:33     page:  24


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSEA~1\fpgacfg\src\fpgacfg.asm
010839 B7                  A   961    				or a							01083A C1                  A   962    				pop bc
01083B D1                  A   963    				pop de
01083C C9                  A   964    				ret
                           A   965    
                           A   966    ;----------------------------------------------
                           A   967    
01083D                     A   968    send_byte_to_pic
                           A   969    
                           A   970    ; put byte to send in A
                           A   971    						
                           A   972    												01083D F5                  A   973    				push af
01083E AF                  A   974    				xor a
01083F ED3901              A   975    				out0 (port_pic_ctrl),a			                           A   976    
010842 ED3801              A   977    wpbusy			in0 a,(port_hw_flags)			010845 E604                A   978    				and 4
010847 20 F9               A   979    				jr nz,wpbusy
                           A   980    
010849 F1                  A   981    				pop af
01084A ED3900              A   982    				out0 (port_pic_data),a
01084D C9                  A   983    				ret
                           A   984    
                           A   985    
                           A   986    ;----------------------------------------------
                           A   987    
01084E                     A   988    get_slot_count
                           A   989    	
01084E 3E88                A   990    				ld a,088h						010850 CD 3D 08 01         A   991    				call send_byte_to_pic
010854 3E5C                A   992    				ld a,5ch
010856 CD 3D 08 01         A   993    				call send_byte_to_pic
01085A CD 1C 08 01         A   994    				call get_byte_from_pic			01085E 32 C9 09 01         A   995    				ld (slot_count),a
010862 CB7F                A   996    				bit 7,a
010864 C9                  A   997    				ret
                           A   998    
                           A   999    
                           A  1000    ;----------------------------------------------
                           A  1001    
010865                     A  1002    get_boot_slot				
010865 3E88                A  1003    				ld a,088h						010867 CD 3D 08 01         A  1004    				call send_byte_to_pic
01086B 3E76                A  1005    				ld a,76h
01086D CD 3D 08 01         A  1006    				call send_byte_to_pic
010871 CD 1C 08 01         A  1007    				call get_byte_from_pic			010875 C9                  A  1008    				ret
                           A  1009    
                           A  1010    ;----------------------------------------------
                           A  1011    
010876                     A  1012    get_last_cfg_slot				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-May-11     15:28:33     page:  25


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSEA~1\fpgacfg\src\fpgacfg.asm
                           A  1013    	
010876 3E88                A  1014    				ld a,088h						010878 CD 3D 08 01         A  1015    				call send_byte_to_pic
01087C 3E71                A  1016    				ld a,71h
01087E CD 3D 08 01         A  1017    				call send_byte_to_pic
010882 CD 1C 08 01         A  1018    				call get_byte_from_pic			010886 C9                  A  1019    				ret
                           A  1020    
                           A  1021    ;----------------------------------------------
                           A  1022    
010887                     A  1023    get_sr				
010887 3E88                A  1024    				ld a,088h						010889 CD 3D 08 01         A  1025    				call send_byte_to_pic
01088D 3E06                A  1026    				ld a,06h
01088F CD 3D 08 01         A  1027    				call send_byte_to_pic
010893 CD 1C 08 01         A  1028    				call get_byte_from_pic			010897 C9                  A  1029    				ret				
                           A  1030    
                           A  1031    ;----------------------------------------------
                           A  1032    
010898 21 3F 0D 01         A  1033    erase_slot		ld hl,erase						01089C CD 5A 05 01         A  1034    				call print_string
                           A  1035    				
0108A0 CD EE 07 01         A  1036    				call enable_pic_writes
0108A4 D8                  A  1037    				ret c
0108A5 FE00                A  1038    				cp 0
0108A7 C0                  A  1039    				ret nz
                           A  1040    				
0108A8 3E88                A  1041    				ld a,088h						0108AA CD 3D 08 01         A  1042    				call send_byte_to_pic
0108AE 3EF5                A  1043    				ld a,0f5h
0108B0 CD 3D 08 01         A  1044    				call send_byte_to_pic
0108B4 3E00                A  1045    				ld a,000h		
0108B6 CD 3D 08 01         A  1046    				call send_byte_to_pic			0108BA 3E00                A  1047    				ld a,000h		
0108BC CD 3D 08 01         A  1048    				call send_byte_to_pic			0108C0 3A C8 09 01         A  1049    				ld a,(target_slot)
0108C4 CB27                A  1050    				sla a
0108C6 CD 3D 08 01         A  1051    				call send_byte_to_pic			0108CA CD 1C 08 01         A  1052    				call get_byte_from_pic			0108CE D8                  A  1053    				ret c
0108CF FE00                A  1054    				cp 0
0108D1 C0                  A  1055    				ret nz
                           A  1056    
0108D2 3E88                A  1057    				ld a,088h						0108D4 CD 3D 08 01         A  1058    				call send_byte_to_pic
0108D8 3EF5                A  1059    				ld a,0f5h
0108DA CD 3D 08 01         A  1060    				call send_byte_to_pic
0108DE 3E00                A  1061    				ld a,000h			
0108E0 CD 3D 08 01         A  1062    				call send_byte_to_pic			0108E4 3E00                A  1063    				ld a,000h		
0108E6 CD 3D 08 01         A  1064    				call send_byte_to_pic			Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-May-11     15:28:33     page:  26


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSEA~1\fpgacfg\src\fpgacfg.asm
0108EA 3A C8 09 01         A  1065    				ld a,(target_slot)
0108EE CB27                A  1066    				sla a
0108F0 F601                A  1067    				or 1
0108F2 CD 3D 08 01         A  1068    				call send_byte_to_pic			0108F6 CD 1C 08 01         A  1069    				call get_byte_from_pic			0108FA D8                  A  1070    				ret c 
0108FB FE00                A  1071    				cp 0
0108FD C0                  A  1072    				ret nz
                           A  1073    
0108FE CD 0B 08 01         A  1074    				call disable_pic_writes
010902 C9                  A  1075    				ret
                           A  1076    				
                           A  1077    ;----------------------------------------------
                           A  1078    
010903                     A  1079    check_erasure
                           A  1080    
010903 21 4F 0D 01         A  1081    				ld hl,chkerase					010907 CD 5A 05 01         A  1082    				call print_string
                           A  1083    
01090B 3E88                A  1084    				ld a,088h						01090D CD 3D 08 01         A  1085    				call send_byte_to_pic
010911 3ED4                A  1086    				ld a,0d4h
010913 CD 3D 08 01         A  1087    				call send_byte_to_pic
010917 3E00                A  1088    				ld a,000h			
010919 CD 3D 08 01         A  1089    				call send_byte_to_pic			01091D 3E00                A  1090    				ld a,000h	
01091F CD 3D 08 01         A  1091    				call send_byte_to_pic			010923 3A C8 09 01         A  1092    				ld a,(target_slot)
010927 CB27                A  1093    				sla a
010929 CD 3D 08 01         A  1094    				call send_byte_to_pic			                           A  1095    
01092D CD 1C 08 01         A  1096    				call get_byte_from_pic			010931 D8                  A  1097    				ret c
010932 FE00                A  1098    				cp 0
010934 C0                  A  1099    				ret nz
                           A  1100    
010935 3E88                A  1101    				ld a,088h						010937 CD 3D 08 01         A  1102    				call send_byte_to_pic
01093B 3EE2                A  1103    				ld a,0e2h
01093D CD 3D 08 01         A  1104    				call send_byte_to_pic
010941 3E00                A  1105    				ld a,00h			
010943 CD 3D 08 01         A  1106    				call send_byte_to_pic			010947 3E00                A  1107    				ld a,00h	
010949 CD 3D 08 01         A  1108    				call send_byte_to_pic			01094D 3E02                A  1109    				ld a,02h
01094F CD 3D 08 01         A  1110    				call send_byte_to_pic			                           A  1111    	
010953 CD 1C 08 01         A  1112    				call get_byte_from_pic			010957 D8                  A  1113    				ret c
010958 FE00                A  1114    				cp 0
01095A C0                  A  1115    				ret nz
                           A  1116    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-May-11     15:28:33     page:  27


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSEA~1\fpgacfg\src\fpgacfg.asm
                           A  1117    
01095B 3E88                A  1118    				ld a,088h						01095D CD 3D 08 01         A  1119    				call send_byte_to_pic
010961 3EC0                A  1120    				ld a,0c0h
010963 CD 3D 08 01         A  1121    				call send_byte_to_pic
010967 CD 1C 08 01         A  1122    				call get_byte_from_pic			01096B D8                  A  1123    				ret c
01096C FE00                A  1124    				cp 0
01096E C0                  A  1125    				ret nz
                           A  1126    
01096F 11000000            A  1127    				ld de,0
010973 3E01                A  1128    lpve			ld a,01h
010975 01010000            A  1129    				ld bc,port_pic_ctrl
010979 ED79                A  1130    				out (bc),a						01097B CD 1C 08 01         A  1131    				call get_byte_from_pic
01097F D8                  A  1132    				ret c
010980 FEFF                A  1133    				cp 0ffh
010982 C0                  A  1134    				ret nz
                           A  1135    
010983 3E00                A  1136    				ld a,00h
010985 01010000            A  1137    				ld bc,port_pic_ctrl
010989 ED79                A  1138    				out (bc),a						01098B CD 1C 08 01         A  1139    				call get_byte_from_pic
01098F D8                  A  1140    				ret c
010990 FEFF                A  1141    				cp 0ffh
010992 C0                  A  1142    				ret nz
                           A  1143    
010993 1B                  A  1144    				dec de
010994 7A                  A  1145    				ld a,d
010995 B3                  A  1146    				or e
010996 20 DB               A  1147    				jr nz,lpve
010998 AF                  A  1148    				xor a
010999 C9                  A  1149    				ret
                           A  1150    
                           A  1151    ;----------------------------------------------
                           A  1152    
                           A  1153    
01099A 3E88                A  1154    get_fw_version	ld a,088h						01099C CD 3D 08 01         A  1155    				call send_byte_to_pic
0109A0 3E4E                A  1156    				ld a,04eh
0109A2 CD 3D 08 01         A  1157    				call send_byte_to_pic
0109A6 CD 1C 08 01         A  1158    				call get_byte_from_pic			0109AA C9                  A  1159    				ret
                           A  1160    
                           A  1161    
                           A  1162    ;==============================================
                           A  1163    
0109AB 000000              A  1164    command_line_arg_ptr	dw24 0
                           A  1165    
0109AE 2A00                A  1166    dl_filename				db '*',0
                           A  1167    
0109B0 00 00 00 00 00 00   A  1168    filename				blkb 18,0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-May-11     15:28:33     page:  28


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSEA~1\fpgacfg\src\fpgacfg.asm
0109B6 00 00 00 00 00 00 
0109BC 00 00 00 00 00 00 
                           A  1169    
0109C2 000000              A  1170    fn_addr					dw24 0
                           A  1171    
0109C5 00                  A  1172    page_hi					db 0
0109C6 00                  A  1173    page_med				db 0
0109C7 00                  A  1174    page_lo					db 0
                           A  1175    
0109C8 00                  A  1176    target_slot				db 0
0109C9 01                  A  1177    slot_count				db 1
0109CA 00                  A  1178    working_slot			db 0
0109CB 00                  A  1179    boot_slot				db 0
                           A  1180    
0109CC 4F4B2E0B 00         A  1181    ok_txt					db "OK.",11,0
                           A  1182    
0109D1 0B557361 67653A20   A  1183    usage_txt				db 11,"Usage: FPGACFG [
0109D9 46504741 43464720 
0109E1 5B572F45 2F422F4C 
0109E9 2F432F50 5D205B53 
0109F1 4C4F545D 205B4649 
0109F9 4C454E41 4D455D0B 
010A01 0B 
010A02 57202D20 57726974   A  1184    						db "W - Write new confi
010A0A 65206E65 7720636F 
010A12 6E666967 20746F20 
010A1A 736C6F74 0B 
010A1F 45202D20 45726173   A  1185    						db "E - Erase slot",11
010A27 6520736C 6F740B 
010A2E 42202D20 53657420   A  1186    						db "B - Set boot slot",
010A36 626F6F74 20736C6F 
010A3E 740B 
010A40 4C202D20 4C697374   A  1187    						db "L - List slot conte
010A48 20736C6F 7420636F 
010A50 6E74656E 74730B 
010A57 43202D20 436F6E66   A  1188    						db "C - Configure from 
010A5F 69677572 65206672 
010A67 6F6D2073 6C6F740B 
010A6F 50202D20 53686F77   A  1189    						db "P - Show PIC firwar
010A77 20504943 20666972 
010A7F 77617265 20766572 
010A87 73696F6E 0B0B 
010A8D 28465047 41434647   A  1190    						db "(FPGACFG.EZP Versio
010A95 2E455A50 20566572 
010A9D 73696F6E 20302E30 
010AA5 33290B0B 00 
                           A  1191    
010AAA 4552524F 52202D20   A  1192    unknown_arg_txt			db "ERROR - Unexpected 
010AB2 556E6578 70656374 
010ABA 65642061 7267756D 
010AC2 656E742E 0B00 
                           A  1193    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-May-11     15:28:33     page:  29


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSEA~1\fpgacfg\src\fpgacfg.asm
010AC8 4552524F 52202D20   A  1194    missing_arg_txt			db "ERROR - Missing arg
010AD0 4D697373 696E6720 
010AD8 61726775 6D656E74 
010AE0 2E0B00 
                           A  1195    
010AE3 4552524F 52202D20   A  1196    bad_hex_txt				db "ERROR - Bad argumen
010AEB 42616420 61726775 
010AF3 6D656E74 202D2068 
010AFB 65786164 6563696D 
010B03 616C2065 78706563 
010B0B 7465642E 0B00 
                           A  1197    
010B11 4552524F 52202D20   A  1198    erase_failed_txt		db "ERROR - Erase faile
010B19 45726173 65206661 
010B21 696C6564 2E0B00 
                           A  1199    
010B28 4552524F 52202D20   A  1200    boot_slot_error_txt		db "ERROR - Boot slot d
010B30 426F6F74 20736C6F 
010B38 74206469 64206E6F 
010B40 74207570 64617465 
010B48 2E0B00 
                           A  1201    
010B4B 4552524F 52202D20   A  1202    invalid_slot_txt		db "ERROR - Invalid slo
010B53 496E7661 6C696420 
010B5B 736C6F74 2E0B00 
                           A  1203    
010B62 4552524F 52202D20   A  1204    pic_error_txt			db "ERROR - Unexpected 
010B6A 556E6578 70656374 
010B72 65642050 49432072 
010B7A 6573706F 6E73652E 
010B82 0B00 
                           A  1205    
010B84 4552524F 52202D20   A  1206    verify_failed_txt		db "ERROR - Verify fail
010B8C 56657269 66792066 
010B94 61696C65 642E0B00 
                           A  1207    
010B9C 4552524F 52202D20   A  1208    slot_count_error_txt	db "ERROR - Failed read
010BA4 4661696C 65642072 
010BAC 65616469 6E672045 
010BB4 4550524F 4D207369 
010BBC 7A650B00 
                           A  1209    
010BC0 4552524F 52202D20   A  1210    com_error_txt			db "ERROR - Serial comm
010BC8 53657269 616C2063 
010BD0 6F6D6D73 2070726F 
010BD8 626C656D 0B00 
                           A  1211    
010BDE 4552524F 52202D20   A  1212    load_error_txt			db "ERROR - File not fo
010BE6 46696C65 206E6F74 
010BEE 20666F75 6E643F0B 
010BF6 00 
                           A  1213    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-May-11     15:28:33     page:  30


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSEA~1\fpgacfg\src\fpgacfg.asm
010BF7 4552524F 52202D20   A  1214    timeout_msg 			db "ERROR - Timed out."
010BFF 54696D65 64206F75 
010C07 742E0B00 
                           A  1215    
010C0B 436F6E66 69726D65   A  1216    erase_ok_txt			db "Confirmed: Erased O
010C13 643A2045 72617365 
010C1B 64204F4B 2E0B00 
                           A  1217    
010C22 41626F72 7465642E   A  1218    aborted_txt				db "Aborted.",11,0
010C2A 0B00 
                           A  1219    
010C2C 45726173 65204545   A  1220    erase_txt				db "Erase EEPROM slot $
010C34 50524F4D 20736C6F 
010C3C 74202400 
                           A  1221    
010C40 57726974 6520746F   A  1222    write_txt				db "Write to EEPROM slo
010C48 20454550 524F4D20 
010C50 736C6F74 202400 
                           A  1223    
010C57 53657420 46504741   A  1224    new_boot_txt			db "Set FPGA boot slot 
010C5F 20626F6F 7420736C 
010C67 6F742074 6F202400 
                           A  1225    
010C6F 202D2053 7572653F   A  1226    sure_txt				db " - Sure? (y/n)",11,
010C77 2028792F 6E290B00 
                           A  1227    
010C7F 0B0B506F 7765722D   A  1228    boot_slot_txt			db 11,11,'Power-on boot
010C87 6F6E2062 6F6F7420 
010C8F 736C6F74 20203A20 
010C97 2400 
                           A  1229    
010C99 436F6E66 69677572   A  1230    last_cfg_txt			db 'Configured from slo
010CA1 65642066 726F6D20 
010CA9 736C6F74 3A202400 
                           A  1231    
010CB1 50494320 4669726D   A  1232    firmware_txt			db "PIC Firmware : $",0
010CB9 77617265 203A2024 
010CC1 00 
                           A  1233    
010CC2 5265636F 6E666967   A  1234    reconfigure_txt			db "Reconfigure from sl
010CCA 75726520 66726F6D 
010CD2 20736C6F 74202400 
                           A  1235    
010CDA 4C6F6164 696E672E   A  1236    loading_txt				db "Loading.. ",11,0
010CE2 2E200B00 
                           A  1237    
010CE6 57616974 696E6720   A  1238    download				db "Waiting for config 
010CEE 666F7220 636F6E66 
010CF6 69672066 696C6520 
010CFE 76696120 73657269 
010D06 616C206C 696E6B20 
010D0E 5B457363 20746F20 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)29-May-11     15:28:33     page:  31


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSEA~1\fpgacfg\src\fpgacfg.asm
010D16 71756974 5D0B00 
010D1D 52656365 6976696E   A  1239    receiving				db "Receiving file..",1
010D25 67206669 6C652E2E 
010D2D 0B00 
010D2F 46696C65 20726563   A  1240    received				db "File received.",11,
010D37 65697665 642E0B00 
010D3F 45726173 696E6720   A  1241    erase					db "Erasing Slot..",11,
010D47 536C6F74 2E2E0B00 
010D4F 43686563 6B696E67   A  1242    chkerase				db "Checking Erasure.."
010D57 20457261 73757265 
010D5F 2E2E0B00 
010D63 57726974 696E6720   A  1243    writing   	  			db "Writing data to EEP
010D6B 64617461 20746F20 
010D73 45455052 4F4D2E2E 
010D7B 0B00 
010D7D 56657269 6679696E   A  1244    verifying				db "Verifying data..",1
010D85 67206461 74612E2E 
010D8D 0B00 
010D8F 0B457272 6F72202D   A  1245    report_byte				db 11,"Error - Received
010D97 20526563 65697665 
010D9F 64206279 74652024 
010DA7 787800              A  1246    ascii_hex				db "xx",0
                           A  1247    
010DAA 0B536C6F 7420636F   A  1248    slots_txt				db 11,'Slot contents:',
010DB2 6E74656E 74733A0B 
010DBA 2D2D2D2D 2D2D2D2D   A  1249    						db '--------------',11,
010DC2 2D2D2D2D 2D2D0B00 
010DCA 0B787820 2D2000     A  1250    slot_hex				db 11,'xx - ',0
010DD1 556E6B6E 6F776E20   A  1251    unknown_txt				db 'Unknown / Blank',0
010DD9 2F20426C 616E6B00 
                           A  1252    
010DE1 0B00                A  1253    cr_txt					db 11,0
                           A  1254    
010DE3 00 00 00 00 00 00   A  1255    slots_valid				blkb 32,0
010DE9 00 00 00 00 00 00 
010DEF 00 00 00 00 00 00 
010DF5 00 00 00 00 00 00 
010DFB 00 00 00 00 00 00 
010E01 00 00 
                           A  1256    
                           A  1257    ;----------------------------------------------
010E03 00                  A  1258    buffer					db 0					                           A  1259    ;----------------------------------------------
                           A  1260    


Errors: 0
Warnings: 0
Lines Assembled: 1497
