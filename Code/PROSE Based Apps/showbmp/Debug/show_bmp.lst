Zilog eZ80 Macro Assembler Version 4.1 (10060805)30-May-11     19:36:41     page:   1


PC     Object              I  Line    Source 
                           A     1    ; Show_BMP command, v 0.01 - By Phil Ruston
                           A     2    
                           A     3    ;----------------------------------------------
                           A     4    ; ADL mode PROSE executable header
                           A     5    ;----------------------------------------------
                           A     6    
       00000000            A     7    amoeba_version_req	equ	0				; 0 = d
       00000000            A     8    prose_version_req	equ 0				; 0 = d
       00000001            A     9    ADL_mode			equ 1				; 0 if 
       00010000            A    10    load_location		equ 10000h			; anywh
                           A    11    
                           B     0    			include	'PROSE_header.asm'
                           B     1    ;--- EZ80 Internal CPU Ports ------------------
                           B     2    
       0000009A            B     3    PB_DR			equ 09ah
       0000009B            B     4    PB_DDR			equ 09bh
       0000009C            B     5    PB_ALT1			equ 09ch
       0000009D            B     6    PB_ALT2			equ 09dh
                           B     7    
       0000009E            B     8    PC_DR			equ 09eh
       0000009F            B     9    PC_DDR			equ 09fh
       000000A0            B    10    PC_ALT1			equ 0a0h
       000000A1            B    11    PC_ALT2			equ 0a1h
                           B    12    
       000000A2            B    13    PD_DR			equ 0a2h
       000000A3            B    14    PD_DDR			equ 0a3h
       000000A4            B    15    PD_ALT1			equ 0a4h
       000000A5            B    16    PD_ALT2			equ 0a5h
                           B    17    
       000000C0            B    18    UART0_RBR		equ 0c0h
       000000C0            B    19    UART0_THR		equ 0c0h
       000000C0            B    20    UART0_BRG_L		equ 0c0h
       000000C1            B    21    UART0_BRG_H		equ 0c1h
       000000C1            B    22    UART0_IER		equ 0c1h
       000000C2            B    23    UART0_FCTL		equ 0c2h
       000000C3            B    24    UART0_LCTL		equ 0c3h
       000000C4            B    25    UART0_MCTL		equ 0c4h
       000000C5            B    26    UART0_LSR		equ 0c5h
       000000C6            B    27    UART0_MSR		equ 0c6h
                           B    28    
       000000A8            B    29    CS0_LBR			equ 0a8h			;eZ80 wait 
       000000A9            B    30    CS0_UBR			equ 0a9h
       000000AA            B    31    CS0_CTL			equ 0aah			
       000000AB            B    32    CS1_LBR			equ 0abh			;eZ80 wait 
       000000AC            B    33    CS1_UBR			equ 0ach
       000000AD            B    34    CS1_CTL			equ 0adh
       000000AE            B    35    CS2_LBR			equ 0aeh			;eZ80 wait 
       000000AF            B    36    CS2_UBR			equ 0afh
       000000B0            B    37    CS2_CTL			equ 0b0h
       000000B1            B    38    CS3_LBR			equ 0b1h			;eZ80 wait 
       000000B2            B    39    CS3_UBR			equ 0b2h
       000000B3            B    40    CS3_CTL			equ 0b3h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)30-May-11     19:36:41     page:   2


PC     Object              I  Line    Source ..\..\..\Includes\PROSE_header.asm
                           B    41    
       00000080            B    42    TMR0_CTL		equ 080h			;timer 0 eq
       00000081            B    43    TMR0_DR_L		equ 081h
       00000081            B    44    TMR0_RR_L		equ 081h
       00000082            B    45    TMR0_DR_H		equ 082h
       00000082            B    46    TMR0_RR_H		equ 082h
       00000092            B    47    TMR_ISS			equ 092h
                           B    48    
       000000ED            B    49    RTC_CTRL		equ 0edh			;RTC equate
       000000EC            B    50    RTC_ACTRL		equ 0ech
       000000E0            B    51    RTC_SEC			equ 0e0h
       000000E1            B    52    RTC_MIN			equ 0e1h
       000000E2            B    53    RTC_HRS			equ 0e2h
       000000E3            B    54    RTC_DOW			equ 0e3h
       000000E4            B    55    RTC_DOM			equ 0e4h
       000000E5            B    56    RTC_MON			equ 0e5h
       000000E6            B    57    RTC_YR			equ 0e6h
       000000E7            B    58    RTC_CEN			equ 0e7h
                           B    59    
                           B    60    ;-- EZ80P Hardware equates --------------------
                           B    61    
       00000000            B    62    port_pic_data  			equ 000h
       00000001            B    63    port_pic_ctrl			equ 001h
       00000001            B    64    port_hw_flags			equ 001h
       00000002            B    65    port_sdc_ctrl			equ 002h	; this is a
       00000002            B    66    port_keyboard_data		equ 002h
       00000003            B    67    port_sdc_data		 	equ 003h	
       00000004            B    68    port_memory_paging		equ 004h
       00000005            B    69    port_irq_ctrl			equ 005h
       00000006            B    70    port_nmi_ack			equ 006h
       00000007            B    71    port_ps2_ctrl			equ 007h
       00000008            B    72    port_selector			equ 008h
       00000006            B    73    port_mouse_data			equ 006h
       00000009            B    74    port_clear_flags		equ 009h
                           B    75    
       00000000            B    76    sdc_power				equ 0		;(port_sd_c
       00000001            B    77    sdc_cs					equ 1		;(port_sd_c
       00000002            B    78    sdc_speed				equ 2 		;(port_sd_c
                           B    79    
       00000004            B    80    sdc_serializer_busy		equ 4 		;(port_hw_f
       00000005            B    81    vrt						equ 5		;(port_hw_f
                           B    82    
                           B    83    
                           B    84    ;-- Memory locations --------------------------
                           B    85    
       00000000            B    86    sysram_addr				equ 0000000h
       00800000            B    87    vram_a_addr				equ 0800000h
       00C00000            B    88    vram_b_addr				equ 0c00000h
                           B    89    
                           B    90    ;-- Hardware registers ------------------------
                           B    91    
       00FF0000            B    92    hw_palette				equ 0ff0000h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)30-May-11     19:36:41     page:   3


PC     Object              I  Line    Source ..\..\..\Includes\PROSE_header.asm
       00FF0800            B    93    hw_sprite_registers		equ 0ff0800h
       00FF1000            B    94    hw_video_parameters		equ 0ff1000h
       00FF1400            B    95    hw_audio_registers		equ 0ff1400h
       00FF1800            B    96    hw_video_settings		equ 0ff1800h
                           B    97    
       00FF1000            B    98    tilemap_parameters		equ hw_video_parameters
       00FF1020            B    99    bitmap_parameters		equ hw_video_parameters
                           B   100    
       00FF1800            B   101    video_control			equ hw_video_settings+0
       00FF1801            B   102    sprite_control			equ hw_video_settings+0
       00FF1802            B   103    bgnd_palette_select		equ hw_video_settings+0
       00FF1803            B   104    sprite_palette_select	equ hw_video_settings+0
       00FF1804            B   105    right_border_position	equ hw_video_settings+0
                           B   106    
                           B   107    ;----------------------------------------------
                           B   108    
       00000A00            B   109    os_start 	equ 0a00h
                           B   110    
       00000A14            B   111    prose_return equ os_start+14h
       00000A20            B   112    prose_kernal equ os_start+20h
                           B   113    
                           B   114    ;----------------------------------------------
                           B   115    ; Kernal Jump Table values for mode PROSE
                           B   116    ;----------------------------------------------
                           B   117    		
       00000000            B   118    kr_mount_volumes				equ 00h	
       00000001            B   119    kr_get_device_info				equ 01h	
       00000002            B   120    kr_check_volume_format			equ 02h	
       00000003            B   121    kr_change_volume				equ 03h	
       00000004            B   122    kr_get_volume_info				equ 04h	
       00000005            B   123    kr_format_device				equ 05h	
       00000006            B   124    kr_make_dir						equ 06h
                           B   125    
       00000007            B   126    kr_change_dir					equ 07h	
       00000008            B   127    kr_parent_dir					equ 08h	
       00000009            B   128    kr_root_dir						equ 09h
       0000000A            B   129    kr_delete_dir					equ 0ah
       0000000B            B   130    kr_find_file					equ 0bh
       0000000C            B   131    kr_set_file_pointer				equ 0ch
       0000000D            B   132    kr_set_load_length				equ 0dh
       0000000E            B   133    kr_read_file					equ 0eh
                           B   134    
       0000000F            B   135    kr_erase_file					equ 0fh
       00000010            B   136    kr_rename_file					equ 10h
       00000011            B   137    kr_create_file					equ 11h
       00000012            B   138    kr_write_file					equ 12h
       00000013            B   139    kr_get_total_sectors			equ 13h
       00000014            B   140    kr_dir_list_first_entry			equ 14h
       00000015            B   141    kr_dir_list_get_entry			equ 15h
       00000016            B   142    kr_dir_list_next_entry			equ 16h
                           B   143    
       00000017            B   144    kr_read_sector					equ 17h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)30-May-11     19:36:41     page:   4


PC     Object              I  Line    Source ..\..\..\Includes\PROSE_header.asm
       00000018            B   145    kr_write_sector					equ 18h
       00000019            B   146    kr_file_sector_list				equ 19h
       0000001A            B   147    kr_get_dir_cluster				equ 1ah
       0000001B            B   148    kr_set_dir_cluster				equ 1bh
       0000001C            B   149    kr_get_dir_name					equ 1ch
       0000001D            B   150    kr_wait_key						equ 1dh
       0000001E            B   151    kr_get_key						equ 1eh
                           B   152    
       0000001F            B   153    kr_get_key_mod_flags			equ 1fh
       00000020            B   154    kr_serial_receive_header		equ 20h
       00000021            B   155    kr_serial_receive_file			equ 21h
       00000022            B   156    kr_serial_send_file				equ 22h
       00000023            B   157    kr_serial_tx_byte				equ 23h
       00000024            B   158    kr_serial_rx_byte				equ 24h
                           B   159    
       00000025            B   160    kr_print_string					equ 25h
       00000026            B   161    kr_clear_screen					equ 26h
       00000027            B   162    kr_wait_vrt						equ 27h
       00000028            B   163    kr_set_cursor_position			equ 28h
       00000029            B   164    kr_plot_char					equ 29h
       0000002A            B   165    kr_set_pen						equ 2ah
       0000002B            B   166    kr_background_colours			equ 2bh
       0000002C            B   167    kr_draw_cursor					equ 2ch
       0000002D            B   168    kr_get_pen						equ 2dh
       0000002E            B   169    kr_scroll_up					equ 2eh
       0000002F            B   170    kr_os_display					equ 2fh
       00000030            B   171    kr_get_display_size				equ 30h
       00000031            B   172    kr_get_charmap_addr_xy			equ 31h
       00000032            B   173    kr_get_cursor_position			equ 32h
                           B   174    
       00000033            B   175    kr_set_envar					equ 33h
       00000034            B   176    kr_get_envar					equ 34h
       00000035            B   177    kr_delete_envar					equ 35h
                           B   178    
       00000036            B   179    kr_set_mouse_window				equ 36h
       00000037            B   180    kr_get_mouse_position			equ 37h
       00000038            B   181    kr_get_mouse_motion				equ 38h
                           B   182    
       00000039            B   183    kr_time_delay					equ 39h
       0000003A            B   184    kr_compare_strings				equ 3ah
       0000003B            B   185    kr_hex_byte_to_ascii			equ 3bh
       0000003C            B   186    kr_ascii_to_hex_word			equ 3ch
       0000003D            B   187    kr_get_string					equ 3dh
                           B   188    
       0000003E            B   189    kr_get_version					equ 3eh
       0000003F            B   190    kr_dont_store_registers			equ 3fh
       00000040            B   191    kr_get_font_info				equ 40h
       00000041            B   192    kr_read_rtc						equ 41h
       00000042            B   193    kr_write_rtc					equ 42h
                           B   194    
       00000043            B   195    kr_get_keymap_location			equ 43h
       00000044            B   196    kr_get_os_high_mem				equ 44h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)30-May-11     19:36:41     page:   5


PC     Object              I  Line    Source ..\..\..\Includes\PROSE_header.asm
                           B   197    
                           B   198    ;----------------------------------------------
                           B   199    ; Standard PROSE executable header
                           B   200    ;----------------------------------------------
                           B   201    
                           B   202    
                           B   203    	IF ADL_mode = 0
                           B   204    		org load_location&0ffffh	; if Z80 mo
                           B   205    	ELSE
010000                     B   206    		org load_location			; otherwise
                           B   207    	ENDIF
                           B   208    	
                           B   209    		.assume ADL = 1				; All PROSE
                           B   210    
010000 18 0E               B   211    		jr skip_header				; $0 - Jump
010002 50524F              B   212    		db 'PRO'					; $2 - ASCI
010005 000001              B   213    mb_loc	dw24 load_location			; $5 - Desi
010008 000000              B   214    		dw24 0						; $8 - If >
01000B 0000                B   215    		dw prose_version_req		; $B - If >
01000D 0000                B   216    		dw amoeba_version_req		; $D - If >
01000F 01                  B   217    		db ADL_mode					; $F - Z80 
                           B   218    
010010                     B   219    skip_header
                           B   220    	
                           B   221    	IF ADL_mode = 0 
                           B   222    		
                           B   223    mbase_offset equ load_location & 0ff0000h
                           B   224    
                           B   225    		ld a,load_location/65536	; Additiona
                           B   226    		ld MB,a						; Set MBASE
                           B   227    		jp.sis go_z80_mode			; switches 
                           B   228    
                           B   229    go_z80_mode
                           B   230    
                           B   231    		.assume ADL = 0
                           B   232    
                           B   233    	ENDIF
                           B   234    	
                           B   235    ;----------------------------------------------
                           B   236    	
                           A    13    
                           A    14    ;----------------------------------------------
                           A    15    ; ADL-mode user program follows..
                           A    16    ;----------------------------------------------
                           A    17    
                           A    18    ;			ld hl,test_fn
                           A    19    					
010010 7E                  A    20    			ld a,(hl)						; g
010011 B7                  A    21    			or a
010012 28 32               A    22    			jr z,no_args
                           A    23    			
010014 CD 6B 00 01         A    24    			call load_header
Zilog eZ80 Macro Assembler Version 4.1 (10060805)30-May-11     19:36:41     page:   6


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSEB~1\showbmp\source\show_bmp.asm
010018 20 32               A    25    			jr nz,load_error
                           A    26    			
01001A CD AF 00 01         A    27    			call test_bmp_parameters
01001E 20 32               A    28    			jr nz,bmp_bad
                           A    29    			
010020 CD 8A 00 01         A    30    			call load_pic
010024 20 26               A    31    			jr nz,load_error
                           A    32    			
010026 CD 42 01 01         A    33    			call clear_vram_buffer
                           A    34    			
01002A CD 53 01 01         A    35    			call copy_pic_to_vram
                           A    36    			
01002E CD C6 01 01         A    37    			call set_video_mode
                           A    38    			
010032 3E1D                A    39    			ld a,kr_wait_key
010034 5BCD200A 00         A    40    			call.lil prose_kernal
                           A    41    			
010039 3E2F                A    42    			ld a,kr_os_display
01003B 5BCD200A 00         A    43    			call.lil prose_kernal
                           A    44    			
010040 AF                  A    45    			xor a							; R
010041 5BC3140A 00         A    46    			jp.lil prose_return			
                           A    47    
                           A    48    
                           A    49    ;----------------------------------------------
                           A    50    
010046 21 10 03 01         A    51    no_args		ld hl,no_args_em
01004A 18 16               A    52    			jr text_exit
                           A    53    
                           A    54    
01004C                     A    55    load_error
01004C 21 F2 02 01         A    56    			ld hl,load_em
010050 18 10               A    57    			jr text_exit
                           A    58    
                           A    59    
                           A    60    
010052 1E03                A    61    bmp_bad		ld e,3							;sh
010054 3D                  A    62    			dec a
010055 57                  A    63    			ld d,a
010056 ED5C                A    64    			mlt de
010058 DD21 D5 02 01       A    65    			ld ix,err_msg_table
01005D DD19                A    66    			add ix,de
01005F DD2700              A    67    			ld hl,(ix)
                           A    68    
010062 3E25                A    69    text_exit	ld a,kr_print_string
010064 5BCD200A 00         A    70    			call.lil prose_kernal
010069 AF                  A    71    			xor a
01006A C9                  A    72    			ret
                           A    73    			
                           A    74    ;----------------------------------------------
                           A    75    
                           A    76    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)30-May-11     19:36:41     page:   7


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSEB~1\showbmp\source\show_bmp.asm
01006B 3E0B                A    77    load_header	ld a,kr_find_file				; l
01006D 5BCD200A 00         A    78    			call.lil prose_kernal
010072 C0                  A    79    			ret nz
                           A    80    
010073 11360400            A    81    			ld de,1024+54					; j
010077 3E0D                A    82    			ld a,kr_set_load_length
010079 5BCD200A 00         A    83    			call.lil prose_kernal
                           A    84    
01007E 21 68 03 01         A    85    			ld hl,pic_buffer				; l
010082 3E0E                A    86    			ld a,kr_read_file
010084 5BCD200A 00         A    87    			call.lil prose_kernal
010089 C9                  A    88    			ret
                           A    89    
                           A    90    
01008A 21 E7 02 01         A    91    load_pic	ld hl,loading_txt					01008E 3E25                A    92    			ld a,kr_print_string
010090 5BCD200A 00         A    93    			call.lil prose_kernal
                           A    94    
010095 1100B004            A    95    			ld de,640*480					; l
010099 3E0D                A    96    			ld a,kr_set_load_length
01009B 5BCD200A 00         A    97    			call.lil prose_kernal
                           A    98    			
0100A0 21 68 03 01         A    99    			ld hl,pic_buffer				; l
0100A4 3E0E                A   100    			ld a,kr_read_file
0100A6 5BCD200A 00         A   101    			call.lil prose_kernal
0100AB C8                  A   102    			ret z
0100AC FECC                A   103    			cp 0cch							; w
0100AE C9                  A   104    			ret								; t
                           A   105    
                           A   106    ;----------------------------------------------
                           A   107    
0100AF                     A   108    test_bmp_parameters
                           A   109    
0100AF 2A 68 03 01         A   110    			ld hl,(pic_buffer)			; check
0100B3 11424D00            A   111    			ld de,04d42h
0100B7 AF                  A   112    			xor a
0100B8 40ED52              A   113    			sbc.sis hl,de
0100BB CA C2 00 01         A   114    			jp z,bmp_id_ok
0100BF 3E01                A   115    			ld a,1						;error 
0100C1 C9                  A   116    			ret
                           A   117    
0100C2 2A 84 03 01         A   118    bmp_id_ok	ld hl,(pic_buffer+28)
0100C6 11080000            A   119    			ld de,8
0100CA AF                  A   120    			xor a
0100CB 40ED52              A   121    			sbc.sis hl,de
0100CE 28 03               A   122    			jr z,coldep_ok
0100D0 3E02                A   123    			ld a,2						;error 
0100D2 C9                  A   124    			ret
                           A   125    			
0100D3 2A 86 03 01         A   126    coldep_ok	ld hl,(pic_buffer+30)
0100D7 7C                  A   127    			ld a,h
0100D8 B5                  A   128    			or l
Zilog eZ80 Macro Assembler Version 4.1 (10060805)30-May-11     19:36:41     page:   8


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSEB~1\showbmp\source\show_bmp.asm
0100D9 28 03               A   129    			jr z,cmpr_ok
0100DB 3E03                A   130    			ld a,3						;error 
0100DD C9                  A   131    			ret
                           A   132    
0100DE 2A 7A 03 01         A   133    cmpr_ok		ld hl,(pic_buffer+18)
0100E2 22 14 02 01         A   134    			ld (pic_width),hl
0100E6 7D                  A   135    			ld a,l	
0100E7 E607                A   136    			and 7
0100E9 28 03               A   137    			jr z,wmult8_ok
0100EB 3E04                A   138    			ld a,4						;error 
0100ED C9                  A   139    			ret
                           A   140    
0100EE 2A 14 02 01         A   141    wmult8_ok	ld hl,(pic_width)
0100F2 11810200            A   142    			ld de,641
0100F6 AF                  A   143    			xor a
0100F7 40ED52              A   144    			sbc.sis hl,de
0100FA 38 04               A   145    			jr c,width_ok
0100FC 3E05                A   146    			ld a,5						;error 
0100FE B7                  A   147    			or a
0100FF C9                  A   148    			ret
                           A   149    			
010100 2A 7E 03 01         A   150    width_ok	ld hl,(pic_buffer+22)
010104 22 11 02 01         A   151    			ld (pic_height),hl
010108 11E10100            A   152    			ld de,481
01010C AF                  A   153    			xor a
01010D 40ED52              A   154    			sbc.sis hl,de
010110 38 04               A   155    			jr c,height_ok
010112 3E06                A   156    			ld a,6						;error 
010114 B7                  A   157    			or a
010115 C9                  A   158    			ret
                           A   159    
010116                     A   160    height_ok	
                           A   161    
010116 110002FF            A   162    			ld de,hw_palette+(2*256)	;conver
01011A 21 9E 03 01         A   163    			ld hl,pic_buffer+54			;start 
01011E 0600                A   164    			ld b,0						;256 co
010120 4E                  A   165    palclp		ld c,(hl)
010121 23                  A   166    			inc hl
010122 CB39                A   167    			srl c
010124 CB39                A   168    			srl c
010126 CB39                A   169    			srl c
010128 CB39                A   170    			srl c						;12 bit
01012A 7E                  A   171    			ld a,(hl)
01012B 23                  A   172    			inc hl
01012C E6F0                A   173    			and 0f0h					;12 bit
01012E B1                  A   174    			or c
01012F 12                  A   175    			ld (de),a
010130 13                  A   176    			inc de
010131 7E                  A   177    			ld a,(hl)
010132 23                  A   178    			inc hl
010133 23                  A   179    			inc hl
010134 CB3F                A   180    			srl a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)30-May-11     19:36:41     page:   9


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSEB~1\showbmp\source\show_bmp.asm
010136 CB3F                A   181    			srl a
010138 CB3F                A   182    			srl a
01013A CB3F                A   183    			srl a
01013C 12                  A   184    			ld (de),a
01013D 13                  A   185    			inc de
01013E 10 E0               A   186    			djnz palclp
                           A   187    
010140 AF                  A   188    			xor a
010141 C9                  A   189    			ret
                           A   190    
                           A   191    ;----------------------------------------------
                           A   192    
010142                     A   193    clear_vram_buffer
                           A   194    
010142 21 00 50 83         A   195    			ld hl,bm_base
010146 3600                A   196    			ld (hl),0
010148 E5                  A   197    			push hl
010149 D1                  A   198    			pop de
01014A 13                  A   199    			inc de
01014B 0100B004            A   200    			ld bc,640*480
01014F 0B                  A   201    			dec bc
010150 EDB0                A   202    			ldir
010152 C9                  A   203    			ret
                           A   204    			
                           A   205    
010153                     A   206    copy_pic_to_vram
                           A   207    
010153 21400100            A   208    			ld hl,640/2					;find o
010157 ED5B 14 02 01       A   209    			ld de,(pic_width)
01015C CB3A                A   210    			srl d
01015E CB1B                A   211    			rr e
010160 AF                  A   212    			xor a
010161 40ED52              A   213    			sbc.sis hl,de
010164 01000000            A   214    			ld bc,0
010168 4D                  A   215    			ld c,l
010169 44                  A   216    			ld b,h
                           A   217    
01016A 21F00000            A   218    			ld hl,480/2					;find o
01016E ED5B 11 02 01       A   219    			ld de,(pic_height)
010173 CB3A                A   220    			srl d
010175 CB1B                A   221    			rr e
010177 AF                  A   222    			xor a
010178 40ED52              A   223    			sbc.sis hl,de
                           A   224    			
01017B 2650                A   225    			ld h,640/8					;calcul
01017D ED6C                A   226    			mlt hl
01017F 29                  A   227    			add hl,hl
010180 29                  A   228    			add hl,hl
010181 29                  A   229    			add hl,hl
010182 09                  A   230    			add hl,bc
010183 01 00 50 83         A   231    			ld bc,bm_base
010187 09                  A   232    			add hl,bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)30-May-11     19:36:41     page:  10


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSEB~1\showbmp\source\show_bmp.asm
010188 E5                  A   233    			push hl						;vram d
                           A   234    						
010189 21 68 03 01         A   235    			ld hl,pic_buffer			;start 
01018D ED5B 14 02 01       A   236    			ld de,(pic_width)
010192 ED4B 11 02 01       A   237    			ld bc,(pic_height)
010197 0B                  A   238    			dec bc
010198 19                  A   239    lp1			add hl,de
010199 0B                  A   240    			dec bc
01019A 78                  A   241    			ld a,b
01019B B1                  A   242    			or c
01019C 20 FA               A   243    			jr nz,lp1
                           A   244    			
01019E D1                  A   245    			pop de						;hl = s
01019F ED4B 11 02 01       A   246    			ld bc,(pic_height)
0101A4 C5                  A   247    ctvlp		push bc
0101A5 ED4B 14 02 01       A   248    			ld bc,(pic_width)
0101AA D5                  A   249    			push de
0101AB E5                  A   250    			push hl
0101AC EDB0                A   251    			ldir
0101AE E1                  A   252    			pop hl
0101AF D1                  A   253    			pop de
0101B0 ED4B 14 02 01       A   254    			ld bc,(pic_width)
0101B5 AF                  A   255    			xor a
0101B6 ED42                A   256    			sbc hl,bc
0101B8 EB                  A   257    			ex de,hl
0101B9 01800200            A   258    			ld bc,640
0101BD 09                  A   259    			add hl,bc					;next l
0101BE EB                  A   260    			ex de,hl
0101BF C1                  A   261    			pop bc
0101C0 0B                  A   262    			dec bc
0101C1 78                  A   263    			ld a,b
0101C2 B1                  A   264    			or c
0101C3 20 DF               A   265    			jr nz,ctvlp
0101C5 C9                  A   266    			ret
                           A   267    		
                           A   268    
                           A   269    ;----------------------------------------------
                           A   270    
       00000280            A   271    bm_datafetch	equ 640
       00000000            A   272    bm_modulo		equ 0
       00000001            A   273    bm_pixel_step	equ 1
       00835000            A   274    bm_base			equ vram_a_addr+35000h
                           A   275    
0101C6                     A   276    set_video_mode
                           A   277    
0101C6 3E27                A   278    			ld a,kr_wait_vrt					0101C8 5BCD200A 00         A   279    			call.lil prose_kernal
                           A   280    			
0101CD 3E00                A   281    			ld a,0000b							0101CF 320018FF            A   282    			ld (video_control),a				0101D3 3E01                A   283    			ld a,1
0101D5 320218FF            A   284    			ld (bgnd_palette_select),a			Zilog eZ80 Macro Assembler Version 4.1 (10060805)30-May-11     19:36:41     page:  11


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSEB~1\showbmp\source\show_bmp.asm
0101D9 3E63                A   285    			ld a,99
0101DB 320418FF            A   286    			ld (right_border_position),a		                           A   287    				
0101DF DD212010 FF         A   288    			ld ix,bitmap_parameters				0101E4 21005083            A   289    			ld hl,bm_base
0101E8 DD2F00              A   290    			ld (ix),hl
0101EB 21010000            A   291    			ld hl,bm_pixel_step
0101EF DD2F04              A   292    			ld (ix+04h),hl
0101F2 21000000            A   293    			ld hl,0
0101F6 DD2F08              A   294    			ld (ix+08h),hl
0101F9 21000000            A   295    			ld hl,bm_modulo
0101FD DD2F0C              A   296    			ld (ix+0ch),hl
010200 DD36104F            A   297    			ld (ix+10h),0+(bm_datafetch/8)-1	010204 C9                  A   298    			ret
                           A   299    			
                           A   300    
                           A   301    ;----------------------------------------------
                           A   302    
010205 36343078 3438302E   A   303    test_fn			db "640x480.bmp",0
01020D 626D7000 
                           A   304    
010211 000000              A   305    pic_height		dw24 0
010214 000000              A   306    pic_width		dw24 0
                           A   307    
010217 4E6F7420 61202E42   A   308    em1				db "Not a .BMP file",11,0
01021F 4D502066 696C650B 
010227 00 
010228 4E6F7420 61203235   A   309    em2				db "Not a 256 colour .BMP file"
010230 3620636F 6C6F7572 
010238 202E424D 50206669 
010240 6C650B00 
010244 43616E6E 6F742064   A   310    em3				db "Cannot display compressed .
01024C 6973706C 61792063 
010254 6F6D7072 65737365 
01025C 64202E42 4D502066 
010264 696C6573 0B00 
01026A 50696320 6D757374   A   311    em4				db "Pic must be multiple of 8 p
010272 20626520 6D756C74 
01027A 69706C65 206F6620 
010282 38207069 78656C73 
01028A 20776964 650B00 
010291 50696320 69732074   A   312    em5				db "Pic is too wide (640 pixels
010299 6F6F2077 69646520 
0102A1 28363430 20706978 
0102A9 656C7320 6D617829 
0102B1 0B00 
0102B3 50696320 69732074   A   313    em6				db "Pic is too tall (480 pixels
0102BB 6F6F2074 616C6C20 
0102C3 28343830 20706978 
0102CB 656C7320 6D617829 
0102D3 0B00 
                           A   314    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)30-May-11     19:36:41     page:  12


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSEB~1\showbmp\source\show_bmp.asm
0102D5 170201 280201       A   315    err_msg_table	dw24 em1,em2,em3,em4,em5,em6
0102DB 440201 6A0201 
0102E1 910201 B30201 
                           A   316    
0102E7 4C6F6164 696E672E   A   317    loading_txt		db "Loading..",11,0
0102EF 2E0B00 
                           A   318    
0102F2 4C6F6164 20657272   A   319    load_em			db "Load error - file not found
0102FA 6F72202D 2066696C 
010302 65206E6F 7420666F 
01030A 756E643F 0B00 
                           A   320    
010310 0B53484F 57424D50   A   321    no_args_em		db 11,"SHOWBMP.EZP - V0.01. Dis
010318 2E455A50 202D2056 
010320 302E3031 2E204469 
010328 73706C61 7973202E 
010330 424D5020 666F726D 
010338 61742067 72617068 
010340 69637320 66696C65 
010348 732E0B0B 
01034C 55736167 653A0B53   A   322    				db "Usage:",11,"SHOWBMP [filena
010354 484F5742 4D50205B 
01035C 66696C65 6E616D65 
010364 5D0B0B00 
                           A   323    
010368 00                  A   324    pic_buffer		db 0
                           A   325    
                           A   326    ;----------------------------------------------


Errors: 0
Warnings: 0
Lines Assembled: 563
