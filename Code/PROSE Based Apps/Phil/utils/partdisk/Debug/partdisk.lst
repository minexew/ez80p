Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     16:17:20     page:   1


PC     Object              I  Line    Source 
                           A     1    ; ******************************************
                           A     2    ; * DISK PARTITIONER V0.02 by P.Ruston 2011*
                           A     3    ; ******************************************
                           A     4    
                           A     5    ; Essentially, a Z80-mode port of the FLOS app 
                           A     6    ; the Format option (as PROSE is able to format
                           A     7    
                           A     8    ;----------------------------------------------
                           A     9    
       00000000            A    10    amoeba_version_req	equ	0				; 0 = d
       0000003B            A    11    prose_version_req	equ 3bh				; 0 = d
       00000000            A    12    ADL_mode			equ 0				; 0 if 
       00010000            A    13    load_location		equ 10000h			; anywh
                           A    14    
                           B     0    			include	'PROSE_header.asm'
                           B     1    
                           B     2    ;----------------------------------------------
                           B     3    
                           C     0    include "ez80_cpu_equates.asm"
                           C     1    ;--- EZ80 Internal Ports ----------------------
                           C     2    
       0000009A            C     3    PB_DR			equ 09ah
       0000009B            C     4    PB_DDR			equ 09bh
       0000009C            C     5    PB_ALT1			equ 09ch
       0000009D            C     6    PB_ALT2			equ 09dh
                           C     7    
       0000009E            C     8    PC_DR			equ 09eh
       0000009F            C     9    PC_DDR			equ 09fh
       000000A0            C    10    PC_ALT1			equ 0a0h
       000000A1            C    11    PC_ALT2			equ 0a1h
                           C    12    
       000000A2            C    13    PD_DR			equ 0a2h
       000000A3            C    14    PD_DDR			equ 0a3h
       000000A4            C    15    PD_ALT1			equ 0a4h
       000000A5            C    16    PD_ALT2			equ 0a5h
                           C    17    
       000000C0            C    18    UART0_RBR		equ 0c0h
       000000C0            C    19    UART0_THR		equ 0c0h
       000000C0            C    20    UART0_BRG_L		equ 0c0h
       000000C1            C    21    UART0_BRG_H		equ 0c1h
       000000C1            C    22    UART0_IER		equ 0c1h
       000000C2            C    23    UART0_FCTL		equ 0c2h
       000000C3            C    24    UART0_LCTL		equ 0c3h
       000000C4            C    25    UART0_MCTL		equ 0c4h
       000000C5            C    26    UART0_LSR		equ 0c5h
       000000C6            C    27    UART0_MSR		equ 0c6h
                           C    28    
       000000A8            C    29    CS0_LBR			equ 0a8h			;eZ80 wait 
       000000A9            C    30    CS0_UBR			equ 0a9h
       000000AA            C    31    CS0_CTL			equ 0aah			
       000000AB            C    32    CS1_LBR			equ 0abh			;eZ80 wait 
       000000AC            C    33    CS1_UBR			equ 0ach
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     16:17:20     page:   2


PC     Object              I  Line    Source ..\..\..\..\..\Includes\ez80_cpu_equates.asm
       000000AD            C    34    CS1_CTL			equ 0adh
       000000AE            C    35    CS2_LBR			equ 0aeh			;eZ80 wait 
       000000AF            C    36    CS2_UBR			equ 0afh
       000000B0            C    37    CS2_CTL			equ 0b0h
       000000B1            C    38    CS3_LBR			equ 0b1h			;eZ80 wait 
       000000B2            C    39    CS3_UBR			equ 0b2h
       000000B3            C    40    CS3_CTL			equ 0b3h
                           C    41    
       00000080            C    42    TMR0_CTL		equ 080h			;timer 0 eq
       00000081            C    43    TMR0_DR_L		equ 081h
       00000081            C    44    TMR0_RR_L		equ 081h
       00000082            C    45    TMR0_DR_H		equ 082h
       00000082            C    46    TMR0_RR_H		equ 082h
       00000092            C    47    TMR_ISS			equ 092h
                           C    48    
       00000083            C    49    TMR1_CTL		equ 083h 
       00000084            C    50    TMR1_RR_L		equ 084h
       00000085            C    51    TMR1_RR_H		equ 085h
                           C    52    
       000000ED            C    53    RTC_CTRL		equ 0edh			;RTC equate
       000000EC            C    54    RTC_ACTRL		equ 0ech
       000000E0            C    55    RTC_SEC			equ 0e0h
       000000E1            C    56    RTC_MIN			equ 0e1h
       000000E2            C    57    RTC_HRS			equ 0e2h
       000000E3            C    58    RTC_DOW			equ 0e3h
       000000E4            C    59    RTC_DOM			equ 0e4h
       000000E5            C    60    RTC_MON			equ 0e5h
       000000E6            C    61    RTC_YR			equ 0e6h
       000000E7            C    62    RTC_CEN			equ 0e7h
                           C    63    
                           C    64    ;----------------------------------------------
                           B     5    
                           B     6    
                           C     0    include "amoeba_hardware_equates.asm"
                           C     1    ;-- AMOEBA Hardware equates -------------------
                           C     2    
       00000000            C     3    port_pic_data  			equ 000h
       00000001            C     4    port_pic_ctrl			equ 001h
       00000001            C     5    port_hw_flags			equ 001h
       00000002            C     6    port_sdc_ctrl			equ 002h	; this is a
       00000002            C     7    port_keyboard_data		equ 002h
       00000003            C     8    port_sdc_data		 	equ 003h	
       00000004            C     9    port_memory_paging		equ 004h
       00000005            C    10    port_irq_ctrl			equ 005h
       00000005            C    11    port_irq_flags			equ 005h
       00000006            C    12    port_nmi_ack			equ 006h
       00000007            C    13    port_ps2_ctrl			equ 007h
       00000008            C    14    port_selector			equ 008h
       00000006            C    15    port_mouse_data			equ 006h
       00000009            C    16    port_clear_flags		equ 009h
                           C    17    
       00000000            C    18    sdc_power				equ 0		;(port_sd_c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     16:17:20     page:   3


PC     Object              I  Line    Source ..\..\..\..\..\Includes\amoeba_hardware_equates.asm
       00000001            C    19    sdc_cs					equ 1		;(port_sd_c
       00000002            C    20    sdc_speed				equ 2 		;(port_sd_c
                           C    21    
       00000004            C    22    sdc_serializer_busy		equ 4 		;(port_hw_f
       00000005            C    23    vrt						equ 5		;(port_hw_f
                           C    24    
                           C    25    
                           C    26    ;-- Memory locations --------------------------
                           C    27    
       00000000            C    28    sysram_addr				equ 0000000h
       00800000            C    29    vram_a_addr				equ 0800000h
       00C00000            C    30    vram_b_addr				equ 0c00000h
                           C    31    
                           C    32    ;-- Hardware registers ------------------------
                           C    33    
       00FF0000            C    34    hw_palette				equ 0ff0000h
       00FF0800            C    35    hw_sprite_registers		equ 0ff0800h
       00FF1000            C    36    hw_video_parameters		equ 0ff1000h
       00FF1400            C    37    hw_audio_registers		equ 0ff1400h
       00FF1800            C    38    hw_video_settings		equ 0ff1800h
                           C    39    
       00FF1000            C    40    tilemap_parameters		equ hw_video_parameters
       00FF1020            C    41    bitmap_parameters		equ hw_video_parameters
                           C    42    
       00FF1800            C    43    video_control			equ hw_video_settings+0
       00FF1801            C    44    sprite_control			equ hw_video_settings+0
       00FF1802            C    45    bgnd_palette_select		equ hw_video_settings+0
       00FF1803            C    46    sprite_palette_select	equ hw_video_settings+0
       00FF1804            C    47    right_border_position	equ hw_video_settings+0
       00FF1805            C    48    irq_line_lo				equ hw_video_settings+0
       00FF1806            C    49    irq_line_hi				equ hw_video_settings+0
                           C    50    
                           C    51    ;----------------------------------------------
                           B     8    
                           B     9    
                           C     0    include "prose_kernal_labels.asm"
                           C     1    ;--------- PROSE Kernal Routine labels --------
                           C     2    		
       00000000            C     3    kr_mount_volumes				equ 00h	
       00000001            C     4    kr_get_device_info				equ 01h	
       00000002            C     5    kr_check_volume_format			equ 02h	
       00000003            C     6    kr_change_volume				equ 03h	
       00000004            C     7    kr_get_volume_info				equ 04h	
       00000005            C     8    kr_format_device				equ 05h	
       00000006            C     9    kr_make_dir						equ 06h
                           C    10    
       00000007            C    11    kr_change_dir					equ 07h	
       00000008            C    12    kr_parent_dir					equ 08h	
       00000009            C    13    kr_root_dir						equ 09h
       0000000A            C    14    kr_delete_dir					equ 0ah
                           C    15    
       0000000B            C    16    kr_find_file					equ 0bh
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     16:17:20     page:   4


PC     Object              I  Line    Source ..\..\..\..\..\Includes\prose_kernal_labels.asm
       0000000B            C    17    kr_open_file					equ 0bh		; p
                           C    18    
       0000000C            C    19    kr_set_file_pointer				equ 0ch
       0000000D            C    20    kr_set_load_length				equ 0dh
       0000000E            C    21    kr_read_file					equ 0eh
                           C    22    
       0000000F            C    23    kr_erase_file					equ 0fh
       00000010            C    24    kr_rename_file					equ 10h
       00000011            C    25    kr_create_file					equ 11h
       00000012            C    26    kr_write_file					equ 12h
       00000013            C    27    kr_get_total_sectors			equ 13h
       00000014            C    28    kr_dir_list_first_entry			equ 14h
       00000015            C    29    kr_dir_list_get_entry			equ 15h
       00000016            C    30    kr_dir_list_next_entry			equ 16h
                           C    31    
       00000017            C    32    kr_read_sector					equ 17h
       00000018            C    33    kr_write_sector					equ 18h
       00000019            C    34    kr_file_sector_list				equ 19h
       0000001A            C    35    kr_get_dir_cluster				equ 1ah
       0000001B            C    36    kr_set_dir_cluster				equ 1bh
       0000001C            C    37    kr_get_dir_name					equ 1ch
       0000001D            C    38    kr_wait_key						equ 1dh
       0000001E            C    39    kr_get_key						equ 1eh
                           C    40    
       0000001F            C    41    kr_get_key_mod_flags			equ 1fh
       00000020            C    42    kr_serial_receive_header		equ 20h
       00000021            C    43    kr_serial_receive_file			equ 21h
       00000022            C    44    kr_serial_send_file				equ 22h
       00000023            C    45    kr_serial_tx_byte				equ 23h
       00000024            C    46    kr_serial_rx_byte				equ 24h
                           C    47    
       00000025            C    48    kr_print_string					equ 25h
       00000026            C    49    kr_clear_screen					equ 26h
       00000027            C    50    kr_wait_vrt						equ 27h
       00000028            C    51    kr_set_cursor_position			equ 28h
       00000029            C    52    kr_plot_char					equ 29h
       0000002A            C    53    kr_set_pen						equ 2ah
       0000002B            C    54    kr_background_colours			equ 2bh
       0000002C            C    55    kr_draw_cursor					equ 2ch
       0000002D            C    56    kr_get_pen						equ 2dh
       0000002E            C    57    kr_scroll_up					equ 2eh
       0000002F            C    58    kr_os_display					equ 2fh
                           C    59    
       00000030            C    60    kr_get_display_size				equ 30h	
       00000030            C    61    kr_get_video_mode				equ 30h		;pr
                           C    62    
       00000031            C    63    kr_get_charmap_addr_xy			equ 31h
       00000032            C    64    kr_get_cursor_position			equ 32h
                           C    65    
       00000033            C    66    kr_set_envar					equ 33h
       00000034            C    67    kr_get_envar					equ 34h
       00000035            C    68    kr_delete_envar					equ 35h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     16:17:20     page:   5


PC     Object              I  Line    Source ..\..\..\..\..\Includes\prose_kernal_labels.asm
                           C    69    
       00000036            C    70    kr_init_mouse					equ 36h 	; n
                           C    71    
       00000037            C    72    kr_get_mouse_position			equ 37h
                           C    73    
       00000038            C    74    kr_get_mouse_motion				equ 38h
       00000038            C    75    kr_get_mouse_counters			equ 38h		;pr
                           C    76    
       00000039            C    77    kr_time_delay					equ 39h
       0000003A            C    78    kr_compare_strings				equ 3ah
       0000003B            C    79    kr_hex_byte_to_ascii			equ 3bh
       0000003C            C    80    kr_ascii_to_hex_word			equ 3ch
       0000003D            C    81    kr_get_string					equ 3dh
                           C    82    
       0000003E            C    83    kr_get_version					equ 3eh
       0000003F            C    84    kr_dont_store_registers			equ 3fh
       00000040            C    85    kr_get_font_info				equ 40h
       00000041            C    86    kr_read_rtc						equ 41h
       00000042            C    87    kr_write_rtc					equ 42h
                           C    88    
       00000043            C    89    kr_get_keymap_location			equ 43h
                           C    90    
       00000044            C    91    kr_get_os_high_mem				equ 44h
       00000044            C    92    kr_get_mem_base					equ 44h		
       00000044            C    93    kr_get_ram_base					equ 44h		;pr
                           C    94    
       00000045            C    95    kr_play_audio					equ 45h
       00000046            C    96    kr_disable_audio				equ 46h
       00000047            C    97    kr_get_joysticks				equ 47h
       00000048            C    98    kr_set_video_mode				equ 48h
       00000049            C    99    kr_set_cursor_image				equ 49h
       0000004A            C   100    kr_remove_cursor				equ 4ah
       0000004B            C   101    kr_char_to_font					equ 4bh
                           C   102    
       0000004C            C   103    kr_get_disk_sector_ptr			equ 4ch
       0000004D            C   104    kr_set_timeout					equ 4dh
       0000004E            C   105    kr_test_timeout					equ 4eh
       0000004F            C   106    kr_set_pointer					equ 4fh
       00000050            C   107    kr_allocate_ram					equ 50h
       00000051            C   108    kr_deallocate_ram				equ 51h
                           C   109    
       00000052            C   110    kr_get_mem_top					equ 52h
       00000052            C   111    kr_get_ram_top					equ 52h		;pr
                           C   112    
       00000053            C   113    kr_init_msec_counter			equ 53h
       00000054            C   114    kr_read_msec_counter			equ 54h
       00000055            C   115    kr_parse_path					equ 55h
                           C   116    
                           C   117    ;----------------------------------------------
                           B    11    
                           B    12    
                           C     0    include "misc_system_equates.asm"
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     16:17:20     page:   6


PC     Object              I  Line    Source ..\..\..\..\..\Includes\misc_system_equates.asm
                           C     1    
                           C     2    ;-- System Equates ----------------------------
                           C     3    
       00000A00            C     4    os_location			equ 0a00h
                           C     5    
       00000A14            C     6    prose_return 		equ os_location + 14h
       00000A18            C     7    prose_relativize_hl	equ os_location + 18h
       00000A1C            C     8    prose_relative_call	equ os_location + 1ch
                           C     9    
       00000A20            C    10    prose_kernal 		equ os_location + 20h
                           C    11    
                           C    12    ;----------------------------------------------
                           C    13    
                           C    14    ; Add to sprite locations to position a 0,0 spr
                           C    15    
       0000009A            C    16    x_display_offset	equ 09ah
       00000025            C    17    y_display_offset	equ 025h
                           C    18    
                           C    19    ;----------------------------------------------
                           B    14    
                           B    15    
                           B    16    ;----------------------------------------------
                           B    17    ; Standard PROSE executable header
                           B    18    ;----------------------------------------------
                           B    19    
                           B    20    
                           B    21    	IF ADL_mode = 0
000000                     B    22    		org load_location&0ffffh	; if Z80 mo
                           B    23    	ELSE
                           B    24    		org load_location			; otherwise
                           B    25    	ENDIF
                           B    26    	
                           B    27    		.assume ADL = 1				; All PROSE
                           B    28    
000000 18 0E               B    29    		jr skip_header				; $0 - Jump
000002 50524F              B    30    		db 'PRO'					; $2 - ASCI
000005 000001              B    31    mb_loc	dw24 load_location			; $5 - Desi
000008 000000              B    32    		dw24 0						; $8 - If >
00000B 3B00                B    33    		dw prose_version_req		; $B - If >
00000D 0000                B    34    		dw amoeba_version_req		; $D - If >
00000F 00                  B    35    		db ADL_mode					; $F - Z80 
                           B    36    
000010                     B    37    skip_header
                           B    38    	
                           B    39    	IF ADL_mode = 0 
                           B    40    		
       00010000            B    41    mbase_offset equ load_location & 0ff0000h
                           B    42    
000010 3E01                B    43    		ld a,load_location/65536	; Additiona
000012 ED6D                B    44    		ld MB,a						; Set MBASE
000014 40C3 18 00          B    45    		jp.sis go_z80_mode			; switches 
                           B    46    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     16:17:20     page:   7


PC     Object              I  Line    Source ..\..\..\..\..\Includes\PROSE_header.asm
000018                     B    47    go_z80_mode
                           B    48    
                           B    49    		.assume ADL = 0
                           B    50    
                           B    51    	ENDIF
                           B    52    	
                           B    53    ;----------------------------------------------
                           B    54    	
                           A    16    
                           A    17    ;----------------------------------------------
                           A    18    
000018 21 B6 0E            A    19    				ld hl,scan_txt
00001B CD EA 05            A    20    				call print_string
                           A    21    				
00001E 1E01                A    22    				ld e,1
000020 3E00                A    23    				ld a,kr_mount_volumes
000022 5BCD200A 00         A    24    				call.lil prose_kernal
                           A    25    		
000027 3E26                A    26    begin			ld a,kr_clear_screen
000029 5BCD200A 00         A    27    				call.lil prose_kernal
                           A    28    				
00002E 21 57 08            A    29    				ld hl,app_banner
000031 CD EA 05            A    30    				call print_string
                           A    31    							
000034 3A 78 08            A    32    				ld a,(device)
000037 C630                A    33    				add a,30h
000039 32 8E 08            A    34    				ld (dev_number_text),a
00003C 21 87 08            A    35    				ld hl,device_txt
00003F CD EA 05            A    36    				call print_string
                           A    37    				
000042 3E01                A    38    				ld a,kr_get_device_info
000044 5BCD200A 00         A    39    				call.lil prose_kernal
000049 5BE5                A    40    				push.lil hl
00004B 5BDDE1              A    41    				pop.lil ix
00004E 5BD5                A    42    				push.lil de
000050 5BE1                A    43    				pop.lil hl
000052 3A 78 08            A    44    				ld a,(device)				;sh
000055 5B012000 00         A    45    				ld.lil bc,32
00005A 47                  A    46    				ld b,a
00005B ED4C                A    47    				mlt bc
00005D 5BDD09              A    48    				add.lil ix,bc				;st
000060 5BDDE5              A    49    				push.lil ix
000063 5BFDE1              A    50    				pop.lil iy
000066 5B010300 00         A    51    				ld.lil bc,3
00006B 5BDD4600            A    52    				ld.lil b,(ix)				;dr
00006F ED4C                A    53    				mlt bc
000071 5B09                A    54    				add.lil hl,bc
000073 5BED17              A    55    				ld.lil de,(hl)				;de
000076 5BD5                A    56    				push.lil de
000078 5BE1                A    57    				pop.lil hl
00007A 5B010C00 00         A    58    				ld.lil bc,0ch
00007F 5B09                A    59    				add.lil hl,bc				;na
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     16:17:20     page:   8


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\ez80p\Code\PROSEB~1\Phil\utils\partdisk\src\partdisk.asm
000081 11 93 0E            A    60    				ld de,temp_string
000084 3E5B                A    61    				ld a,'['
000086 12                  A    62    				ld (de),a
000087 13                  A    63    				inc de 
000088 061E                A    64    				ld b,30
00008A 5B7E                A    65    cpydnlp			ld.lil a,(hl)
00008C 12                  A    66    				ld (de),a
00008D B7                  A    67    				or a
00008E 28 05               A    68    				jr z,dndone
000090 4923                A    69    				inc.l hl
000092 13                  A    70    				inc de
000093 10 F5               A    71    				djnz cpydnlp
000095 21 93 0E            A    72    dndone			ld hl,temp_string
000098 CD EA 05            A    73    				call print_string
00009B 21 B3 0E            A    74    				ld hl,close_space_txt
00009E CD EA 05            A    75    				call print_string
                           A    76    				
0000A1 5BED2305            A    77    				lea.lil hl,iy+5
0000A5 11 93 0E            A    78    				ld de,temp_string			;ca
0000A8 0620                A    79    				ld b,32						;in
0000AA 5B7E                A    80    ckdlp			ld.lil a,(hl)
0000AC 12                  A    81    				ld (de),a
0000AD 4923                A    82    				inc.l hl
0000AF 13                  A    83    				inc de
0000B0 10 F8               A    84    				djnz ckdlp
0000B2 21 93 0E            A    85    				ld hl,temp_string
0000B5 CD EA 05            A    86    				call print_string
0000B8 CD E3 05            A    87    				call new_line
                           A    88    				
0000BB 21 93 08            A    89    				ld hl,total_cap_txt
0000BE CD EA 05            A    90    				call print_string
                           A    91    
0000C1 AF                  A    92    				xor a
0000C2 32 86 08            A    93    				ld (mbr_present),a
                           A    94    
0000C5 5BDD4604            A    95    				ld.lil b,(ix+4)				;mu
0000C9 5BDD4E03            A    96    				ld.lil c,(ix+3)
0000CD 5BDD5602            A    97    				ld.lil d,(ix+2)
0000D1 5BDD5E01            A    98    				ld.lil e,(ix+1)
0000D5 ED53 7B 08          A    99    				ld (total_sectors),de
0000D9 ED43 7D 08          A   100    				ld (total_sectors+2),bc
                           A   101    				
0000DD 5A                  A   102    				ld e,d
0000DE 51                  A   103    				ld d,c
0000DF 48                  A   104    				ld c,b
0000E0 CB39                A   105    				srl c
0000E2 CB1A                A   106    				rr d
0000E4 CB1B                A   107    				rr e
0000E6 CB39                A   108    				srl c
0000E8 CB1A                A   109    				rr d
0000EA CB1B                A   110    				rr e
0000EC CB39                A   111    				srl c
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     16:17:20     page:   9


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\ez80p\Code\PROSEB~1\Phil\utils\partdisk\src\partdisk.asm
0000EE CB1A                A   112    				rr d
0000F0 CB1B                A   113    				rr e
0000F2 EB                  A   114    				ex de,hl
0000F3 CD 56 05            A   115    				call show_hexword_as_decimal
0000F6 21 A0 08            A   116    				ld hl,mb_txt
0000F9 CD EA 05            A   117    				call print_string
0000FC CD E3 05            A   118    				call new_line
0000FF CD E3 05            A   119    				call new_line
                           A   120    
000102 21 C0 08            A   121    				ld hl,partitions_txt			000105 CD EA 05            A   122    				call print_string
                           A   123    
000108 CD F2 05            A   124    				call read_mbr					00010B C2 40 05            A   125    				jp nz,disk_error
                           A   126    				
00010E 2A D6 10            A   127    				ld hl,(my_sector_buffer+1feh)	000111 1155AA              A   128    				ld de,0aa55h
000114 AF                  A   129    				xor a
000115 ED52                A   130    				sbc hl,de
000117 C2 3D 02            A   131    				jp nz,no_mbr
00011A 21 D8 0E            A   132    				ld hl,my_sector_buffer			00011D 113600              A   133    				ld de,36h
000120 19                  A   134    				add hl,de
000121 11 E5 08            A   135    				ld de,fat16_txt			
000124 0605                A   136    				ld b,5
000126 3E3A                A   137    				ld a,kr_compare_strings
000128 5BCD200A 00         A   138    				call.lil prose_kernal
00012D CA 3D 02            A   139    				jp z,no_mbr
000130 21 D8 0E            A   140    				ld hl,my_sector_buffer			000133 113600              A   141    				ld de,36h
000136 19                  A   142    				add hl,de
000137 11 EA 08            A   143    				ld de,fat32_txt			
00013A 0605                A   144    				ld b,5
00013C 3E3A                A   145    				ld a,kr_compare_strings
00013E 5BCD200A 00         A   146    				call.lil prose_kernal
000143 CA 3D 02            A   147    				jp z,no_mbr
                           A   148    
000146 3E01                A   149    				ld a,1							000148 32 86 08            A   150    				ld (mbr_present),a
00014B DD21 96 10          A   151    				ld ix,my_sector_buffer+1beh
00014F AF                  A   152    				xor a
000150 32 85 08            A   153    fptnlp			ld (partition_count),a
000153 C630                A   154    				add a,30h
000155 32 14 09            A   155    				ld (ptnum_txt),a
000158 DD7E04              A   156    				ld a,(ix+4)						00015B B7                  A   157    				or a							00015C CA E4 01 00         A   158    				jr z,last_ptn
                           A   159    
000160 DD6E08              A   160    				ld l,(ix+08h)					000163 DD6609              A   161    				ld h,(ix+09h)					000166 DD5E0C              A   162    				ld e,(ix+0ch)
000169 DD560D              A   163    				ld d,(ix+0dh)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     16:17:20     page:  10


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\ez80p\Code\PROSEB~1\Phil\utils\partdisk\src\partdisk.asm
00016C 19                  A   164    				add hl,de
00016D EB                  A   165    				ex de,hl
00016E DD6E0A              A   166    				ld l,(ix+0ah)
000171 DD660B              A   167    				ld h,(ix+0bh)
000174 DD4E0E              A   168    				ld c,(ix+0eh)
000177 DD460F              A   169    				ld b,(ix+0fh)
00017A ED4A                A   170    				adc hl,bc
00017C ED53 7F 08          A   171    				ld (first_free_sector),de
000180 22 81 08            A   172    				ld (first_free_sector+2),hl
                           A   173    
000183 21 14 09            A   174    				ld hl,ptnum_txt		
000186 CD EA 05            A   175    				call print_string
                           A   176    				
000189 21 29 09            A   177    				ld hl,fat32ptn_txt
00018C DD7E04              A   178    				ld a,(ix+4)
00018F FE0B                A   179    				cp 0bh							000191 28 16               A   180    				jr z,gotpart_type
000193 FE0C                A   181    				cp 0ch
000195 28 12               A   182    				jr z,gotpart_type
000197 21 18 09            A   183    				ld hl,fat16ptn_txt
00019A FE04                A   184    				cp 4
00019C 28 0B               A   185    				jr z,gotpart_type
00019E FE06                A   186    				cp 6
0001A0 28 07               A   187    				jr z,gotpart_type
0001A2 FE0E                A   188    				cp 0eh
0001A4 28 03               A   189    				jr z,gotpart_type				0001A6 21 3A 09            A   190    				ld hl,unknownptn_txt
0001A9 CD EA 05            A   191    gotpart_type	call print_string
                           A   192    				
0001AC DD4E0F              A   193    				ld c,(ix+0fh)					0001AF DD660E              A   194    				ld h,(ix+0eh)
0001B2 DD6E0D              A   195    				ld l,(ix+0dh)
0001B5 CB39                A   196    				srl c
0001B7 CB1C                A   197    				rr h
0001B9 CB1D                A   198    				rr l
0001BB CB39                A   199    				srl c
0001BD CB1C                A   200    				rr h
0001BF CB1D                A   201    				rr l
0001C1 CB39                A   202    				srl c
0001C3 CB1C                A   203    				rr h
0001C5 CB1D                A   204    				rr l				
0001C7 CD 56 05            A   205    				call show_hexword_as_decimal	                           A   206    				
0001CA 21 A0 08            A   207    				ld hl,mb_txt
0001CD CD EA 05            A   208    				call print_string
0001D0 CD E3 05            A   209    				call new_line 
                           A   210    
0001D3 111000              A   211    nxtptn			ld de,16
0001D6 DD19                A   212    				add ix,de
0001D8 3A 85 08            A   213    				ld a,(partition_count)
0001DB 3C                  A   214    				inc a
0001DC FE04                A   215    				cp 4
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     16:17:20     page:  11


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\ez80p\Code\PROSEB~1\Phil\utils\partdisk\src\partdisk.asm
0001DE C2 50 01            A   216    				jp nz,fptnlp
0001E1 32 85 08            A   217    				ld (partition_count),a
                           A   218    				
0001E4 3A 85 08            A   219    last_ptn		ld a,(partition_count)
0001E7 B7                  A   220    				or a
0001E8 20 0F               A   221    				jr nz,ptnsdone
                           A   222    
0001EA 21 5D 09            A   223    noptns			ld hl,none_defined_txt
0001ED CD EA 05            A   224    				call print_string
0001F0 210000              A   225    				ld hl,0
0001F3 22 7F 08            A   226    				ld (first_free_sector),hl
0001F6 22 81 08            A   227    				ld (first_free_sector+2),hl
                           A   228    				
0001F9 21 84 09            A   229    ptnsdone		ld hl,free_txt					0001FC CD EA 05            A   230    				call print_string
0001FF 2A 7B 08            A   231    				ld hl,(total_sectors)
000202 ED5B 7F 08          A   232    				ld de,(first_free_sector)
000206 AF                  A   233    				xor a
000207 ED52                A   234    				sbc hl,de
000209 EB                  A   235    				ex de,hl
00020A 2A 7D 08            A   236    				ld hl,(total_sectors+2)
00020D ED4B 81 08          A   237    				ld bc,(first_free_sector+2)
000211 ED42                A   238    				sbc hl,bc
000213 5A                  A   239    				ld e,d
000214 55                  A   240    				ld d,l
000215 6C                  A   241    				ld l,h
000216 CB3D                A   242    				srl l
000218 CB1A                A   243    				rr d
00021A CB1B                A   244    				rr e
00021C CB3D                A   245    				srl l
00021E CB1A                A   246    				rr d
000220 CB1B                A   247    				rr e
000222 CB3D                A   248    				srl l
000224 CB1A                A   249    				rr d
000226 CB1B                A   250    				rr e
000228 EB                  A   251    				ex de,hl
000229 22 83 08            A   252    				ld (unallocated_mb),hl
00022C CD 56 05            A   253    				call show_hexword_as_decimal
00022F 21 A0 08            A   254    				ld hl,mb_txt
000232 CD EA 05            A   255    				call print_string
000235 CD E3 05            A   256    				call new_line
000238 CD E3 05            A   257    				call new_line
00023B 18 06               A   258    				jr menu
                           A   259    
00023D 21 EF 08            A   260    no_mbr			ld hl,nombr_txt
000240 CD EA 05            A   261    				call print_string
                           A   262    
                           A   263    ;----------------------------------------------
                           A   264    
000243 21 99 09            A   265    menu			ld hl,menu_txt
000246 CD EA 05            A   266    				call print_string
                           A   267    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     16:17:20     page:  12


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\ez80p\Code\PROSEB~1\Phil\utils\partdisk\src\partdisk.asm
000249 3E1D                A   268    waitkey			ld a,kr_wait_key
00024B 5BCD200A 00         A   269    				call.lil prose_kernal
000250 FE76                A   270    				cp 076h
000252 28 1E               A   271    				jr z,quit
                           A   272    
000254 78                  A   273    				ld a,b
000255 B7                  A   274    				or a
000256 28 F1               A   275    				jr z,waitkey
000258 FE30                A   276    				cp '0'
00025A 28 2A               A   277    				jr z,init_mbr
00025C FE31                A   278    				cp '1'
00025E CA E8 02            A   279    				jp z,make_part
000261 FE32                A   280    				cp '2'
000263 CA 47 04            A   281    				jp z,delete_part
000266 FE33                A   282    				cp '3'
000268 CA F8 04            A   283    				jp z,remount_devs
00026B FE34                A   284    				cp '4'
00026D CA 04 05            A   285    				jp z,change_device
                           A   286    				
000270 18 D7               A   287    				jr waitkey
                           A   288    				
000272 CD E3 05            A   289    quit			call new_line
000275 CD E3 05            A   290    				call new_line
000278 1E00                A   291    				ld e,0
00027A 3E00                A   292    				ld a,kr_mount_volumes
00027C 5BCD200A 00         A   293    				call.lil prose_kernal
                           A   294    				
000281 5BC3140A 00         A   295    				jp.lil prose_return
                           A   296    				
                           A   297    				
                           A   298    ;----------------------------------------------
                           A   299    
000286 21 2E 0A            A   300    init_mbr		ld hl,mbr_warn_txt
000289 CD EA 05            A   301    				call print_string
00028C 21 25 0E            A   302    				ld hl,response_txt
00028F 1E02                A   303    				ld e,2
000291 3E3D                A   304    				ld a,kr_get_string
000293 5BCD200A 00         A   305    				call.lil prose_kernal			000298 21 25 0E            A   306    				ld hl,response_txt
00029B B7                  A   307    				or a
00029C CA 27 00            A   308    				jp z,begin
00029F 7E                  A   309    				ld a,(hl)
0002A0 FE79                A   310    				cp 'y'
0002A2 28 05               A   311    				jr z,go_initmbr
0002A4 FE59                A   312    				cp 'Y'
0002A6 C2 27 00            A   313    				jp nz,begin
                           A   314    
0002A9 21 7F 0C            A   315    go_initmbr		ld hl,working_txt
0002AC CD EA 05            A   316    				call print_string
                           A   317    
0002AF 21 57 06            A   318    				ld hl,mbr_data					0002B2 11 D8 0E            A   319    				ld de,my_sector_buffer
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     16:17:20     page:  13


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\ez80p\Code\PROSEB~1\Phil\utils\partdisk\src\partdisk.asm
0002B5 010002              A   320    				ld bc,512
0002B8 EDB0                A   321    				ldir
                           A   322    
0002BA CD 08 06            A   323    				call write_mbr					0002BD C2 40 05            A   324    				jp nz,disk_error
                           A   325    				
0002C0 CD 3D 06            A   326    				call clear_sector_buffer
                           A   327    									
0002C3 010000              A   328    				ld bc,0							0002C6 110100              A   329    				ld de,1
0002C9 C5                  A   330    mbrilp			push bc
0002CA D5                  A   331    				push de
0002CB CD 1E 06            A   332    				call write_sector
0002CE D1                  A   333    				pop de
0002CF C1                  A   334    				pop bc
0002D0 C2 40 05            A   335    				jp nz,disk_error
0002D3 13                  A   336    				inc de
0002D4 CB42                A   337    				bit 0,d
0002D6 28 F1               A   338    				jr z,mbrilp
                           A   339    				
0002D8 21 8B 0C            A   340    done			ld hl,done_txt
0002DB CD EA 05            A   341    				call print_string
0002DE 3E1D                A   342    				ld a,kr_wait_key
0002E0 5BCD200A 00         A   343    				call.lil prose_kernal
0002E5 C3 27 00            A   344    				jp begin
                           A   345    				
                           A   346    ;----------------------------------------------
                           A   347    
0002E8 21 73 0B            A   348    make_part		ld hl,makepart_txt
0002EB CD EA 05            A   349    				call print_string
                           A   350    				
0002EE 3A 86 08            A   351    				ld a,(mbr_present)
0002F1 B7                  A   352    				or a
0002F2 20 10               A   353    				jr nz,mbrok
0002F4 21 D2 0B            A   354    				ld hl,mpartnombr_txt
0002F7 CD EA 05            A   355    nombrerr		call print_string
0002FA 3E1D                A   356    				ld a,kr_wait_key
0002FC 5BCD200A 00         A   357    				call.lil prose_kernal
000301 C3 27 00            A   358    				jp begin
                           A   359    					
000304 3A 85 08            A   360    mbrok			ld a,(partition_count)
000307 FE04                A   361    				cp 4
000309 20 10               A   362    				jr nz,makeptn
00030B 21 9D 0B            A   363    				ld hl,ptntfull_txt
00030E CD EA 05            A   364    				call print_string
000311 3E1D                A   365    				ld a,kr_wait_key
000313 5BCD200A 00         A   366    				call.lil prose_kernal
000318 C3 27 00            A   367    				jp begin
                           A   368    					
00031B 21 54 0C            A   369    makeptn			ld hl,sizereq_txt
00031E CD EA 05            A   370    				call print_string
000321 1E05                A   371    				ld e,5
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     16:17:20     page:  14


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\ez80p\Code\PROSEB~1\Phil\utils\partdisk\src\partdisk.asm
000323 21 25 0E            A   372    				ld hl,response_txt
000326 3E3D                A   373    				ld a,kr_get_string
000328 5BCD200A 00         A   374    				call.lil prose_kernal
00032D 21 25 0E            A   375    				ld hl,response_txt
000330 B7                  A   376    				or a
000331 CA 27 00            A   377    				jp z,begin
000334 CD 93 05            A   378    				call ascii_decimal_to_hex
000337 C2 38 04            A   379    				jp nz,badfigs
00033A E5                  A   380    				push hl							00033B 112000              A   381    				ld de,32						00033E AF                  A   382    				xor a
00033F ED52                A   383    				sbc hl,de
000341 E1                  A   384    				pop hl
000342 DA 28 04            A   385    				jp c,ptoosmall
000345 E5                  A   386    				push hl
000346 110108              A   387    				ld de,801h
000349 AF                  A   388    				xor a
00034A ED52                A   389    				sbc hl,de
00034C E1                  A   390    				pop hl
00034D D2 42 04            A   391    				jp nc,pmaxsize
000350 E5                  A   392    				push hl
000351 2B                  A   393    				dec hl
000352 ED5B 83 08          A   394    				ld de,(unallocated_mb)
000356 AF                  A   395    				xor a
000357 ED52                A   396    				sbc hl,de
000359 E1                  A   397    				pop hl
00035A D2 3D 04            A   398    				jp nc,ptoobig
00035D 22 A6 08            A   399    				ld (new_ptn_size_mb),hl
                           A   400    				
000360 CD F2 05            A   401    				call read_mbr					000363 C2 40 05            A   402    				jp nz,disk_error
                           A   403    
000366 21 B0 08            A   404    				ld hl,first_partition_info
000369 3A 85 08            A   405    				ld a,(partition_count)			00036C B7                  A   406    				or a							00036D 28 10               A   407    				jr z,mfirstp
00036F 3D                  A   408    				dec a
000370 6F                  A   409    				ld l,a
000371 2600                A   410    				ld h,0
000373 29                  A   411    				add hl,hl
000374 29                  A   412    				add hl,hl
000375 29                  A   413    				add hl,hl
000376 29                  A   414    				add hl,hl	
000377 11 D8 0E            A   415    				ld de,my_sector_buffer
00037A 19                  A   416    				add hl,de
00037B 11BE01              A   417    				ld de,01beh
00037E 19                  A   418    				add hl,de
00037F E5                  A   419    mfirstp			push hl
000380 DDE1                A   420    				pop ix
000382 DD6E08              A   421    				ld l,(ix+08h)					000385 DD6609              A   422    				ld h,(ix+09h)
000388 DD5E0C              A   423    				ld e,(ix+0ch)					Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     16:17:20     page:  15


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\ez80p\Code\PROSEB~1\Phil\utils\partdisk\src\partdisk.asm
00038B DD560D              A   424    				ld d,(ix+0dh)
00038E 19                  A   425    				add hl,de						00038F EB                  A   426    				ex de,hl	
000390 DD6E0A              A   427    				ld l,(ix+0ah)					000393 DD660B              A   428    				ld h,(ix+0bh)
000396 DD4E0E              A   429    				ld c,(ix+0eh)					000399 DD460F              A   430    				ld b,(ix+0fh)
00039C ED4A                A   431    				adc hl,bc
00039E E5                  A   432    				push hl							                           A   433    					
00039F 3A 85 08            A   434    				ld a,(partition_count)			0003A2 6F                  A   435    				ld l,a
0003A3 2600                A   436    				ld h,0
0003A5 29                  A   437    				add hl,hl
0003A6 29                  A   438    				add hl,hl
0003A7 29                  A   439    				add hl,hl
0003A8 29                  A   440    				add hl,hl	
0003A9 01 D8 0E            A   441    				ld bc,my_sector_buffer
0003AC 09                  A   442    				add hl,bc
0003AD 01BE01              A   443    				ld bc,01beh
0003B0 09                  A   444    				add hl,bc
0003B1 E5                  A   445    				push hl
0003B2 DDE1                A   446    				pop ix
0003B4 DD7308              A   447    				ld (ix+08h),e					0003B7 DD7209              A   448    				ld (ix+09h),d
0003BA D1                  A   449    				pop de
0003BB DD730A              A   450    				ld (ix+0ah),e					0003BE DD720B              A   451    				ld (ix+0bh),d
                           A   452    				
0003C1 2A A6 08            A   453    				ld hl,(new_ptn_size_mb)			0003C4 1E00                A   454    				ld e,0
0003C6 29                  A   455    				add hl,hl
0003C7 CB13                A   456    				rl e
0003C9 29                  A   457    				add hl,hl
0003CA CB13                A   458    				rl e
0003CC 29                  A   459    				add hl,hl
0003CD CB13                A   460    				rl e
0003CF DD360C00            A   461    				ld (ix+0ch),0					0003D3 DD750D              A   462    				ld (ix+0dh),l
0003D6 DD740E              A   463    				ld (ix+0eh),h
0003D9 DD730F              A   464    				ld (ix+0fh),e
                           A   465    				
0003DC DD36040E            A   466    				ld (ix+04h),0eh					                           A   467    
0003E0 DD360000            A   468    				ld (ix+0h),0					                           A   469    				
0003E4 DD360100            A   470    				ld (ix+01h),0					0003E8 DD360200            A   471    				ld (ix+02h),0
0003EC DD360300            A   472    				ld (ix+03h),0
                           A   473    				
0003F0 DD360500            A   474    				ld (ix+05h),0					0003F4 DD360600            A   475    				ld (ix+06h),0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     16:17:20     page:  16


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\ez80p\Code\PROSEB~1\Phil\utils\partdisk\src\partdisk.asm
0003F8 DD360700            A   476    				ld (ix+07h),0
                           A   477    
0003FC DD5E08              A   478    				ld e,(ix+08h)					0003FF DD5609              A   479    				ld d,(ix+09h)
000402 DD4E0A              A   480    				ld c,(ix+0ah)
000405 DD460B              A   481    				ld b,(ix+0bh)
000408 ED53 A8 08          A   482    				ld (partition_base),de
00040C ED43 AA 08          A   483    				ld (partition_base+2),bc
                           A   484    
000410 CD 08 06            A   485    				call write_mbr					000413 C2 40 05            A   486    				jp nz,disk_error
                           A   487    
000416 CD 3D 06            A   488    				call clear_sector_buffer		000419 210000              A   489    				ld hl,0			
00041C CD 49 05            A   490    				call get_bcde_lba
00041F CD 1E 06            A   491    				call write_sector		
000422 C2 40 05            A   492    				jp nz,disk_error
                           A   493    
000425 C3 D8 02            A   494    				jp done
                           A   495    					
                           A   496    
000428                     A   497    ptoosmall
                           A   498    
000428 21 A1 0C            A   499    				ld hl,ptoosmall_txt
00042B CD EA 05            A   500    mp_err			call print_string
00042E 3E1D                A   501    				ld a,kr_wait_key
000430 5BCD200A 00         A   502    				call.lil prose_kernal
000435 C3 27 00            A   503    				jp begin
                           A   504    				
000438 21 DA 0C            A   505    badfigs			ld hl,badfigs_txt
00043B 18 EE               A   506    				jr mp_err
                           A   507    				
00043D 21 12 0D            A   508    ptoobig			ld hl,ptoobig_txt
000440 18 E9               A   509    				jr mp_err
                           A   510    				
000442 21 64 0D            A   511    pmaxsize		ld hl,pmaxsize_txt
000445 18 E4               A   512    				jr mp_err
                           A   513    				
                           A   514    ;----------------------------------------------
                           A   515    
000447 21 AE 0A            A   516    delete_part		ld hl,delpart_txt
00044A CD EA 05            A   517    				call print_string
                           A   518    				
00044D 21 3C 0B            A   519    				ld hl,dp_nmbr_txt
000450 3A 86 08            A   520    				ld a,(mbr_present)
000453 B7                  A   521    				or a
000454 CA F7 02            A   522    				jp z,nombrerr
                           A   523    
000457 3A 85 08            A   524    				ld a,(partition_count)			00045A B7                  A   525    				or a
00045B 20 10               A   526    				jr nz,ptdel
00045D 21 08 0B            A   527    				ld hl,noparts_txt
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     16:17:20     page:  17


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\ez80p\Code\PROSEB~1\Phil\utils\partdisk\src\partdisk.asm
000460 CD EA 05            A   528    				call print_string
000463 3E1D                A   529    				ld a,kr_wait_key
000465 5BCD200A 00         A   530    				call.lil prose_kernal
00046A C3 27 00            A   531    				jp begin
                           A   532    				
00046D F5                  A   533    ptdel			push af
00046E 21 DE 0A            A   534    				ld hl,delconfirm_txt
000471 CD EA 05            A   535    				call print_string
000474 F1                  A   536    				pop af
000475 C62F                A   537    				add a,02fh
000477 32 AB 0A            A   538    				ld (delp_number_txt),a
00047A 21 AB 0A            A   539    				ld hl,delp_number_txt
00047D CD EA 05            A   540    				call print_string
000480 CD E3 05            A   541    				call new_line
000483 CD E3 05            A   542    				call new_line
000486 21 01 0B            A   543    				ld hl,yesno_txt
000489 CD EA 05            A   544    				call print_string
                           A   545    					
00048C 3E3D                A   546    				ld a,kr_get_string
00048E 21 25 0E            A   547    				ld hl,response_txt
000491 1E02                A   548    				ld e,2
000493 5BCD200A 00         A   549    				call.lil prose_kernal			000498 21 25 0E            A   550    				ld hl,response_txt
00049B B7                  A   551    				or a
00049C CA 27 00            A   552    				jp z,begin
00049F 7E                  A   553    				ld a,(hl)
0004A0 FE79                A   554    				cp 'y'
0004A2 28 05               A   555    				jr z,go_delpart
0004A4 FE59                A   556    				cp 'Y'
0004A6 C2 27 00            A   557    				jp nz,begin
                           A   558    
0004A9 CD F2 05            A   559    go_delpart		call read_mbr					0004AC C2 40 05            A   560    				jp nz,disk_error
                           A   561    
0004AF 3A 85 08            A   562    				ld a,(partition_count)			0004B2 3D                  A   563    				dec a	
0004B3 6F                  A   564    				ld l,a
0004B4 2600                A   565    				ld h,0
0004B6 29                  A   566    				add hl,hl
0004B7 29                  A   567    				add hl,hl
0004B8 29                  A   568    				add hl,hl
0004B9 29                  A   569    				add hl,hl	
0004BA 11 D8 0E            A   570    				ld de,my_sector_buffer
0004BD 19                  A   571    				add hl,de
0004BE 11BE01              A   572    				ld de,01beh
0004C1 19                  A   573    				add hl,de
0004C2 E5                  A   574    				push hl
0004C3 DDE1                A   575    				pop ix
0004C5 DD5E08              A   576    				ld e,(ix+08h)					0004C8 DD5609              A   577    				ld d,(ix+09h)
0004CB DD4E0A              A   578    				ld c,(ix+0ah)
0004CE DD460B              A   579    				ld b,(ix+0bh)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     16:17:20     page:  18


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\ez80p\Code\PROSEB~1\Phil\utils\partdisk\src\partdisk.asm
0004D1 ED53 A8 08          A   580    				ld (partition_base),de
0004D5 ED43 AA 08          A   581    				ld (partition_base+2),bc
0004D9 0610                A   582    				ld b,16
0004DB 3600                A   583    fill_loop1		ld (hl),0
0004DD 23                  A   584    				inc hl
0004DE 10 FB               A   585    				djnz fill_loop1
                           A   586    				
0004E0 CD 08 06            A   587    				call write_mbr					0004E3 C2 40 05            A   588    				jp nz,disk_error
                           A   589    
0004E6 CD 3D 06            A   590    				call clear_sector_buffer		0004E9 210000              A   591    				ld hl,0			
0004EC CD 49 05            A   592    				call get_bcde_lba
0004EF CD 1E 06            A   593    				call write_sector		
0004F2 C2 40 05            A   594    				jp nz,disk_error
0004F5 C3 D8 02            A   595    				jp done
                           A   596    				
                           A   597    				
                           A   598    ;----------------------------------------------
                           A   599    
0004F8                     A   600    remount_devs
                           A   601    
0004F8 1E01                A   602    				ld e,1
0004FA 3E00                A   603    				ld a,kr_mount_volumes
0004FC 5BCD200A 00         A   604    				call.lil prose_kernal
000501 C3 27 00            A   605    				jp begin
                           A   606    
                           A   607    ;----------------------------------------------
                           A   608    
000504                     A   609    change_device
000504 21 00 0E            A   610    				ld hl,enter_dev_txt
000507 CD EA 05            A   611    				call print_string
                           A   612    					
00050A 21 25 0E            A   613    				ld hl,response_txt
00050D 1E02                A   614    				ld e,2
00050F 3E3D                A   615    				ld a,kr_get_string
000511 5BCD200A 00         A   616    				call.lil prose_kernal			000516 B7                  A   617    				or a
000517 CA 27 00            A   618    				jp z,begin
00051A 3A 25 0E            A   619    				ld a,(response_txt)
00051D D630                A   620    				sub 30h
00051F DA 3A 05            A   621    				jp c,bad_dev
000522 FE09                A   622    				cp 9
000524 D2 3A 05            A   623    				jp nc,bad_dev
000527 F5                  A   624    				push af
000528 3E01                A   625    				ld a,kr_get_device_info
00052A 5BCD200A 00         A   626    				call.lil prose_kernal
00052F F1                  A   627    				pop af
000530 B8                  A   628    				cp b
000531 D2 3A 05            A   629    				jp nc,bad_dev
000534 32 78 08            A   630    				ld (device),a
000537 C3 27 00            A   631    				jp begin
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     16:17:20     page:  19


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\ez80p\Code\PROSEB~1\Phil\utils\partdisk\src\partdisk.asm
                           A   632    
00053A 21 75 0E            A   633    bad_dev			ld hl,bad_dev_txt
00053D C3 2B 04            A   634    				jp mp_err
                           A   635    				
                           A   636    ;----------------------------------------------
                           A   637    
                           A   638    
000540                     A   639    disk_error
                           A   640    
000540 21 4D 09            A   641    				ld hl,disk_error_txt
000543 CD EA 05            A   642    				call print_string	
000546 C3 72 02            A   643    				jp quit
                           A   644    
                           A   645    
                           A   646    ;----------------------------------------------
                           A   647    				
000549                     A   648    get_bcde_lba
                           A   649    
000549 ED5B A8 08          A   650    				ld de,(partition_base)		;in
00054D ED4B AA 08          A   651    				ld bc,(partition_base+2)
000551 19                  A   652    				add hl,de
000552 EB                  A   653    				ex de,hl
000553 D0                  A   654    				ret nc
000554 03                  A   655    				inc bc
000555 C9                  A   656    				ret				
                           A   657    				
                           A   658    				
                           A   659    ;----------------------------------------------
                           A   660    
000556                     A   661    show_hexword_as_decimal
                           A   662    
                           A   663    
                           A   664    
000556 11 51 06            A   665    				ld de,decimal_output
000559 D5                  A   666    				push de
00055A CD 62 05            A   667    				call hex2dec
00055D E1                  A   668    				pop hl
00055E CD 85 05            A   669    				call showdec
000561 C9                  A   670    				ret
                           A   671    				
                           A   672    				
000562                     A   673    hex2dec
                           A   674    
                           A   675    ; INPUT  : HL hex word to convert, DE = locatio
                           A   676    				
000562 01F0D8              A   677    				ld	bc,-10000
000565 CD 7A 05            A   678    				call	Num1
000568 0118FC              A   679    				ld	bc,-1000
00056B CD 7A 05            A   680    				call	Num1
00056E 019CFF              A   681    				ld	bc,-100
000571 CD 7A 05            A   682    				call	Num1
000574 0EF6                A   683    				ld	c,-10
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     16:17:20     page:  20


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\ez80p\Code\PROSEB~1\Phil\utils\partdisk\src\partdisk.asm
000576 CD 7A 05            A   684    				call	Num1
000579 48                  A   685    				ld	c,b
                           A   686    
00057A 3E2F                A   687    Num1			ld	a,'0'-1
00057C 3C                  A   688    Num2			inc	a
00057D 09                  A   689    				add	hl,bc
00057E 38 FC               A   690    				jr	c,Num2
000580 ED42                A   691    				sbc	hl,bc
                           A   692    
000582 12                  A   693    				ld	(de),a
000583 13                  A   694    				inc	de
000584 C9                  A   695    				ret
                           A   696    
                           A   697    
                           A   698    
000585                     A   699    showdec
                           A   700    
                           A   701    ; INPUT HL = location for most significant digi
                           A   702    
000585 0604                A   703    				ld b,4			;can only skip 
000587 7E                  A   704    shdeclp			ld a,(hl)
000588 FE30                A   705    				cp '0'
00058A 20 03               A   706    				jr nz,dnzd
00058C 23                  A   707    				inc hl
00058D 10 F8               A   708    				djnz shdeclp
00058F CD EA 05            A   709    dnzd			call print_string
000592 C9                  A   710    				ret
                           A   711    				
                           A   712    
                           A   713    ;----------------------------------------------
                           A   714    
000593                     A   715    ascii_decimal_to_hex
                           A   716    
                           A   717    ; INPUT:  HL = MSB ascii digit of decimal figur
                           A   718    ; OUTPUT: HL = hex value (if ZF is not set: Err
                           A   719    
000593 0600                A   720    				ld b,0						;fi
000595 7E                  A   721    fdlsb			ld a,(hl)
000596 B7                  A   722    				or a
000597 28 12               A   723    				jr z,dnumend
000599 FE30                A   724    				cp 30h
00059B 38 12               A   725    				jr c,dnumbad
00059D FE3A                A   726    				cp 3ah
00059F 30 0E               A   727    				jr nc,dnumbad
0005A1 23                  A   728    				inc hl
0005A2 04                  A   729    				inc b						;b 
0005A3 78                  A   730    				ld a,b
0005A4 FE06                A   731    				cp 6						;5 
0005A6 20 ED               A   732    				jr nz,fdlsb
0005A8 AF                  A   733    				xor a
0005A9 3C                  A   734    				inc a
0005AA C9                  A   735    				ret
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     16:17:20     page:  21


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\ez80p\Code\PROSEB~1\Phil\utils\partdisk\src\partdisk.asm
                           A   736    				
0005AB 78                  A   737    dnumend			ld a,b
0005AC B7                  A   738    				or a
0005AD 20 03               A   739    				jr nz,dnumok
0005AF AF                  A   740    dnumbad			xor a						;ze
0005B0 3C                  A   741    				inc a
0005B1 C9                  A   742    				ret
                           A   743    
0005B2 2B                  A   744    dnumok			dec hl
0005B3 E5                  A   745    				push hl
0005B4 FDE1                A   746    				pop iy						;iy
0005B6 21 D9 05            A   747    				ld hl,declist
0005B9 DD210000            A   748    				ld ix,0						;ta
0005BD 5E                  A   749    d2hlp2			ld e,(hl)
0005BE 23                  A   750    				inc hl
0005BF 56                  A   751    				ld d,(hl)
0005C0 23                  A   752    				inc hl
0005C1 FD7E00              A   753    				ld a,(iy)
0005C4 D630                A   754    				sub 030h
0005C6 28 07               A   755    				jr z,nxtdd
0005C8 DD19                A   756    d2hlp1			add ix,de
0005CA 38 E3               A   757    				jr c,dnumbad
0005CC 3D                  A   758    				dec a
0005CD 20 F9               A   759    				jr nz,d2hlp1
0005CF FD2B                A   760    nxtdd			dec iy
0005D1 10 EA               A   761    				djnz d2hlp2
0005D3 DDE5                A   762    				push ix
0005D5 E1                  A   763    				pop hl
0005D6 AF                  A   764    				xor a
0005D7 C9                  A   765    				ret
                           A   766    				
                           A   767    
0005D8 C9                  A   768    				ret
                           A   769    				
0005D9 01000A00 6400E803   A   770    declist	dw 1,10,100,1000,10000
0005E1 1027 
                           A   771    
                           A   772    ;----------------------------------------------
                           A   773    
                           A   774    
0005E3 21 A4 08            A   775    new_line		ld hl,newline_txt
0005E6 CD EA 05            A   776    				call print_string
0005E9 C9                  A   777    				ret
                           A   778    
                           A   779    ;----------------------------------------------
                           A   780    				
0005EA 3E25                A   781    print_string	ld a,kr_print_string
0005EC 5BCD200A 00         A   782    				call.lil prose_kernal
0005F1 C9                  A   783    				ret				
                           A   784    
                           A   785    ;----------------------------------------------
                           A   786    	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     16:17:20     page:  22


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\ez80p\Code\PROSEB~1\Phil\utils\partdisk\src\partdisk.asm
0005F2 3A 78 08            A   787    read_mbr		ld a,(device)			
0005F5 47                  A   788    				ld b,a
0005F6 0E00                A   789    				ld c,0							0005F8 5B110000 00         A   790    				ld.lil de,0
0005FD 21 D8 0E            A   791    				ld hl,my_sector_buffer
000600 3E17                A   792    				ld a,kr_read_sector
000602 5BCD200A 00         A   793    				call.lil prose_kernal
000607 C9                  A   794    				ret
                           A   795    				
000608 3A 78 08            A   796    write_mbr		ld a,(device)
00060B 47                  A   797    				ld b,a
00060C 0E00                A   798    				ld c,0							00060E 5B110000 00         A   799    				ld.lil de,0
000613 21 D8 0E            A   800    				ld hl,my_sector_buffer
000616 3E18                A   801    				ld a,kr_write_sector
000618 5BCD200A 00         A   802    				call.lil prose_kernal
00061D C9                  A   803    				ret
                           A   804    
00061E 69                  A   805    write_sector	ld l,c							00061F C5                  A   806    				push bc
000620 0610                A   807    				ld b,16
000622 5B29                A   808    shhllp			add.lil hl,hl
000624 10 FC               A   809    				djnz shhllp
000626 62                  A   810    				ld h,d
000627 6B                  A   811    				ld l,e
000628 5BE5                A   812    				push.lil hl
00062A 5BD1                A   813    				pop.lil de
00062C C1                  A   814    				pop bc
00062D 48                  A   815    				ld c,b
00062E 3A 78 08            A   816    				ld a,(device)
000631 47                  A   817    				ld b,a
000632 21 D8 0E            A   818    				ld hl,my_sector_buffer
000635 3E18                A   819    				ld a,kr_write_sector
000637 5BCD200A 00         A   820    				call.lil prose_kernal
00063C C9                  A   821    				ret
                           A   822    
                           A   823    
                           A   824    
00063D                     A   825    clear_sector_buffer
                           A   826    
                           A   827    
00063D E5                  A   828    				push hl
00063E D5                  A   829    				push de
00063F C5                  A   830    				push bc
000640 21 D8 0E            A   831    				ld hl,my_sector_buffer			000643 01FF01              A   832    				ld bc,511	
000646 3600                A   833    				ld (hl),0
000648 E5                  A   834    				push hl
000649 D1                  A   835    				pop de
00064A 13                  A   836    				inc de
00064B EDB0                A   837    				ldir
00064D C1                  A   838    				pop bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     16:17:20     page:  23


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\ez80p\Code\PROSEB~1\Phil\utils\partdisk\src\partdisk.asm
00064E D1                  A   839    				pop de
00064F E1                  A   840    				pop hl
000650 C9                  A   841    				ret
                           A   842    				
                           A   843    ;----------------------------------------------
                           A   844    
000651 00 00 00 00 00 00   A   845    decimal_output	blkb 6,0
                           A   846    
000657                     B     0    mbr_data		include "mbr_data.asm"
000657 FAB80010 8ED0BC00   B     1                    db 0FAh,0B8h,000h,010h,08Eh,0D0
00065F B0B80000 8ED88EC0 
000667 FBBE007C BF0006B9   B     2                    db 0FBh,0BEh,000h,07Ch,0BFh,000
00066F 0002F3A4 EA210600 
000677 00BEBE07 3804750B   B     3                    db 000h,0BEh,0BEh,007h,038h,004
00067F 83C61081 FEFE0775 
000687 F3EB16B4 02B001BB   B     4                    db 0F3h,0EBh,016h,0B4h,002h,0B0
00068F 007CB280 8A74018B 
000697 4C02CD13 EA007C00   B     5                    db 04Ch,002h,0CDh,013h,0EAh,000
00069F 00EBFE00 00000000 
0006A7 00000000 00000000   B     6                    db 000h,000h,000h,000h,000h,000
0006AF 00000000 00000000 
0006B7 00000000 00000000   B     7                    db 000h,000h,000h,000h,000h,000
0006BF 00000000 00000000 
0006C7 00000000 00000000   B     8                    db 000h,000h,000h,000h,000h,000
0006CF 00000000 00000000 
0006D7 00000000 00000000   B     9                    db 000h,000h,000h,000h,000h,000
0006DF 00000000 00000000 
0006E7 00000000 00000000   B    10                    db 000h,000h,000h,000h,000h,000
0006EF 00000000 00000000 
0006F7 00000000 00000000   B    11                    db 000h,000h,000h,000h,000h,000
0006FF 00000000 00000000 
000707 00000000 00000000   B    12                    db 000h,000h,000h,000h,000h,000
00070F 00000000 00000000 
000717 00000000 00000000   B    13                    db 000h,000h,000h,000h,000h,000
00071F 00000000 00000000 
000727 00000000 00000000   B    14                    db 000h,000h,000h,000h,000h,000
00072F 00000000 00000000 
000737 00000000 00000000   B    15                    db 000h,000h,000h,000h,000h,000
00073F 00000000 00000000 
000747 00000000 00000000   B    16                    db 000h,000h,000h,000h,000h,000
00074F 00000000 00000000 
000757 00000000 00000000   B    17                    db 000h,000h,000h,000h,000h,000
00075F 00000000 00000000 
000767 00000000 00000000   B    18                    db 000h,000h,000h,000h,000h,000
00076F 00000000 00000000 
000777 00000000 00000000   B    19                    db 000h,000h,000h,000h,000h,000
00077F 00000000 00000000 
000787 00000000 00000000   B    20                    db 000h,000h,000h,000h,000h,000
00078F 00000000 00000000 
000797 00000000 00000000   B    21                    db 000h,000h,000h,000h,000h,000
00079F 00000000 00000000 
0007A7 00000000 00000000   B    22                    db 000h,000h,000h,000h,000h,000
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     16:17:20     page:  24


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\ez80p\Code\PROSEB~1\Phil\utils\partdisk\src\mbr_data.asm
0007AF 00000000 00000000 
0007B7 00000000 00000000   B    23                    db 000h,000h,000h,000h,000h,000
0007BF 00000000 00000000 
0007C7 00000000 00000000   B    24                    db 000h,000h,000h,000h,000h,000
0007CF 00000000 00000000 
0007D7 00000000 00000000   B    25                    db 000h,000h,000h,000h,000h,000
0007DF 00000000 00000000 
0007E7 00000000 00000000   B    26                    db 000h,000h,000h,000h,000h,000
0007EF 00000000 00000000 
0007F7 00000000 00000000   B    27                    db 000h,000h,000h,000h,000h,000
0007FF 00000000 00000000 
000807 00000000 00000000   B    28                    db 000h,000h,000h,000h,000h,000
00080F 22820D00 00000000 
000817 00000000 00000000   B    29                    db 000h,000h,000h,000h,000h,000
00081F 00000000 00000000 
000827 00000000 00000000   B    30                    db 000h,000h,000h,000h,000h,000
00082F 00000000 00000000 
000837 00000000 00000000   B    31                    db 000h,000h,000h,000h,000h,000
00083F 00000000 00000000 
000847 00000000 00000000   B    32                    db 000h,000h,000h,000h,000h,000
00084F 00000000 000055AA 
                           A   848    
                           A   849    ;----------------------------------------------
                           A   850    
000857 0B504152 54444953   A   851    app_banner			db 11,"PARTDISK V0.02",11
00085F 4B205630 2E30320B 
000867 3D3D3D3D 3D3D3D3D   A   852    					db    "==============",11,1
00086F 3D3D3D3D 3D3D0B0B 
000877 00 
                           A   853    	
000878 00                  A   854    device				db 0
                           A   855    
                           A   856    
                           A   857    
000879 0000                A   858    device_info_table	dw 0
                           A   859    
00087B 00000000            A   860    total_sectors		dw 0,0
                           A   861    	
00087F 00000000            A   862    first_free_sector	dw 0,0
                           A   863    		
000883 0000                A   864    unallocated_mb		dw 0
                           A   865    
000885 00                  A   866    partition_count		db 0
                           A   867    
000886 00                  A   868    mbr_present			db 0
                           A   869    		
000887 44657669 636520     A   870    device_txt			db    "Device "
00088E 78203A20 00         A   871    dev_number_text		db "x : ",0
                           A   872    
000893 0B436170 61636974   A   873    total_cap_txt		db 11,"Capacity : ",0
00089B 79203A20 00 
                           A   874    	
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     16:17:20     page:  25


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\ez80p\Code\PROSEB~1\Phil\utils\partdisk\src\partdisk.asm
0008A0 204D4200            A   875    mb_txt				db " MB",0
                           A   876    	
0008A4 0B00                A   877    newline_txt			db 11,0
                           A   878    
0008A6 0000                A   879    new_ptn_size_mb		dw 0
                           A   880    	
0008A8 00000000            A   881    partition_base		dw 0,0
0008AC 00000000            A   882    partition_size		dw 0,0
                           A   883    
                           A   884    
0008B0                     A   885    first_partition_info
                           A   886    
0008B0 00000000 00000000   A   887    				db 0,0,0,0, 0,0,0,0, 00h,00h,00
0008B8 00000000 3E000000 
                           A   888    
                           A   889    	
0008C0                     A   890    partitions_txt
                           A   891    
0008C0 0B506172 74697469   A   892    				db 11,"Partition Table:",11
0008C8 6F6E2054 61626C65 
0008D0 3A0B 
0008D2 2D2D2D2D 2D2D2D2D   A   893    				db "----------------",11,11,0
0008DA 2D2D2D2D 2D2D2D2D 
0008E2 0B0B00 
                           A   894    
                           A   895    
0008E5 46415431 36         A   896    fat16_txt		db "FAT16"
                           A   897    
0008EA 46415433 32         A   898    fat32_txt		db "FAT32"
                           A   899    
0008EF 44657669 63652069   A   900    nombr_txt		db "Device is not partitioned (
0008F7 73206E6F 74207061 
0008FF 72746974 696F6E65 
000907 6420284E 6F204D42 
00090F 52290B0B 00 
                           A   901    
000914 783A2000            A   902    ptnum_txt		db 'x: ',0
                           A   903    
000918 46415431 36207061   A   904    fat16ptn_txt	db "FAT16 partition ",0
000920 72746974 696F6E20 
000928 00 
000929 46415433 32207061   A   905    fat32ptn_txt	db "FAT32 partition ",0
000931 72746974 696F6E20 
000939 00 
00093A 556E6B6E 6F776E20   A   906    unknownptn_txt	db "Unknown partition ",0
000942 70617274 6974696F 
00094A 6E2000 
                           A   907    
00094D 0B0B4469 736B2045   A   908    disk_error_txt	db 11,11,"Disk Error!",11,11,0
000955 72726F72 210B0B00 
                           A   909    
00095D 4E6F2070 61727469   A   910    none_defined_txt	db "No partitions are defin
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     16:17:20     page:  26


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\ez80p\Code\PROSEB~1\Phil\utils\partdisk\src\partdisk.asm
000965 74696F6E 73206172 
00096D 65206465 66696E65 
000975 6420696E 20746865 
00097D 204D4252 2E0B00 
                           A   911    
000984 0B556E61 6C6C6F63   A   912    free_txt			db 11,"Unallocated Space: "
00098C 61746564 20537061 
000994 63653A20 00 
                           A   913    
                           A   914    
                           A   915    
000999 0B4F7074 696F6E73   A   916    menu_txt		db 11,"Options:",11
0009A1 3A0B 
0009A3 2D2D2D2D 2D2D2D2D   A   917    				db "--------",11,11
0009AB 0B0B 
0009AD 3020203A 20496E69   A   918    				db "0  : Initialize MBR",11
0009B5 7469616C 697A6520 
0009BD 4D42520B 
0009C1 3120203A 204D616B   A   919    				db "1  : Make new partition",11
0009C9 65206E65 77207061 
0009D1 72746974 696F6E0B 
0009D9 3220203A 2044656C   A   920    				db "2  : Delete last partition"
0009E1 65746520 6C617374 
0009E9 20706172 74697469 
0009F1 6F6E0B 
0009F4 3320203A 2052656D   A   921    				db "3  : Remount devices",11
0009FC 6F756E74 20646576 
000A04 69636573 0B 
000A09 3420203A 20436861   A   922    				db "4  : Change target device",
000A11 6E676520 74617267 
000A19 65742064 65766963 
000A21 650B 
000A23 0B455343 3A205175   A   923    				db 11,"ESC: Quit",0
000A2B 697400 
                           A   924    		
                           A   925    
                           A   926    
                           A   927    
000A2E 0B0B494E 49544941   A   928    mbr_warn_txt	db 11,11,"INITIALIZE MBR",11
000A36 4C495A45 204D4252 
000A3E 0B 
000A3F 2D2D2D2D 2D2D2D2D   A   929    				db "--------------",11,11
000A47 2D2D2D2D 2D2D0B0B 
000A4F 5741524E 494E4721   A   930    				db "WARNING! This will erase an
000A57 20546869 73207769 
000A5F 6C6C2065 72617365 
000A67 20616E79 20657869 
000A6F 7374696E 670B 
000A75 70617274 6974696F   A   931    				db "partitions. Are you sure yo
000A7D 6E732E20 41726520 
000A85 796F7520 73757265 
000A8D 20796F75 2077616E 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     16:17:20     page:  27


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\ez80p\Code\PROSEB~1\Phil\utils\partdisk\src\partdisk.asm
000A95 7420746F 0B 
000A9A 70726F63 6565643F   A   932    				db "proceed?",11,11,"(y/n) ",0
000AA2 0B0B2879 2F6E2920 
000AAA 00 
                           A   933    
000AAB 783F00              A   934    delp_number_txt	db "x?",0
                           A   935    
                           A   936    
                           A   937    
                           A   938    
000AAE 0B0B4445 4C455445   A   939    delpart_txt		db 11,11,"DELETE LAST PARTITION
000AB6 204C4153 54205041 
000ABE 52544954 494F4E0B 
000AC6 2D2D2D2D 2D2D2D2D   A   940    				db "---------------------",11,1
000ACE 2D2D2D2D 2D2D2D2D 
000AD6 2D2D2D2D 2D0B0B00 
                           A   941    		
000ADE 53757265 20796F75   A   942    delconfirm_txt	db "Sure you want to delete par
000AE6 2077616E 7420746F 
000AEE 2064656C 65746520 
000AF6 70617274 6974696F 
000AFE 6E2000 
000B01 28792F6E 292000     A   943    yesno_txt		db "(y/n) ",0
                           A   944    
000B08 54686572 65206172   A   945    noparts_txt		db "There are no partitions to 
000B10 65206E6F 20706172 
000B18 74697469 6F6E7320 
000B20 746F2064 656C6574 
000B28 65210B0B 
000B2C 50726573 7320616E   A   946    				db "Press any key..",0
000B34 79206B65 792E2E00 
                           A   947    
000B3C 4572726F 7221204E   A   948    dp_nmbr_txt		db "Error! No partitions define
000B44 6F207061 72746974 
000B4C 696F6E73 20646566 
000B54 696E6564 20284E6F 
000B5C 204D4252 290B0B 
000B63 50726573 7320616E   A   949    				db "Press any key..",0
000B6B 79206B65 792E2E00 
                           A   950    
                           A   951    
                           A   952    
                           A   953    
000B73 0B0B4D41 4B45204E   A   954    makepart_txt	db 11,11,"MAKE NEW PARTITION",1
000B7B 45572050 41525449 
000B83 54494F4E 0B 
000B88 2D2D2D2D 2D2D2D2D   A   955    				db "------------------",11,11,0
000B90 2D2D2D2D 2D2D2D2D 
000B98 2D2D0B0B 00 
                           A   956    		
000B9D 4552524F 52212054   A   957    ptntfull_txt	db "ERROR! The partition table 
000BA5 68652070 61727469 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     16:17:20     page:  28


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\ez80p\Code\PROSEB~1\Phil\utils\partdisk\src\partdisk.asm
000BAD 74696F6E 20746162 
000BB5 6C652069 73206675 
000BBD 6C6C2E0B 0B 
000BC2 50726573 7320616E   A   958    				db "Press any key..",0
000BCA 79206B65 792E2E00 
                           A   959    
000BD2 4552524F 52212043   A   960    mpartnombr_txt	db "ERROR! Cannot make a partit
000BDA 616E6E6F 74206D61 
000BE2 6B652061 20706172 
000BEA 74697469 6F6E206F 
000BF2 6E20610B 
000BF6 64657669 63652077   A   961    				db "device without a Master Boo
000BFE 6974686F 75742061 
000C06 204D6173 74657220 
000C0E 426F6F74 20526563 
000C16 6F72642E 0B0B 
000C1C 506C6561 73652075   A   962    				db "Please use Option 0 to init
000C24 7365204F 7074696F 
000C2C 6E203020 746F2069 
000C34 6E697469 616C697A 
000C3C 65204D42 522E0B0B 
000C44 50726573 7320616E   A   963    				db "Press any key..",0
000C4C 79206B65 792E2E00 
                           A   964    
000C54 456E7465 72207369   A   965    sizereq_txt		db "Enter size of desired parti
000C5C 7A65206F 66206465 
000C64 73697265 64207061 
000C6C 72746974 696F6E20 
000C74 28696E20 4D42290B 
000C7C 0B3A00 
                           A   966    
000C7F 0B0B576F 726B696E   A   967    working_txt		db 11,11,"Working..",0
000C87 672E2E00 
000C8B 0B0B446F 6E652120   A   968    done_txt		db 11,11,"Done! Press a key..",
000C93 50726573 73206120 
000C9B 6B65792E 2E00 
                           A   969    
000CA1 0B0B4552 524F5221   A   970    ptoosmall_txt	db 11,11,"ERROR! Minimum partit
000CA9 204D696E 696D756D 
000CB1 20706172 74697469 
000CB9 6F6E2073 697A6520 
000CC1 69732033 324D420B 
000CC9 0B 
000CCA 50726573 7320616E   A   971    				db "Press any key..",0
000CD2 79206B65 792E2E00 
                           A   972    
000CDA 0B0B4552 524F5221   A   973    badfigs_txt		db 11,11, "ERROR! Invalid numer
000CE2 20496E76 616C6964 
000CEA 206E756D 65726963 
000CF2 20646174 6120656E 
000CFA 74657265 642E0B0B 
000D02 50726573 7320616E   A   974    				db "Press any key..",0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     16:17:20     page:  29


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\ez80p\Code\PROSEB~1\Phil\utils\partdisk\src\partdisk.asm
000D0A 79206B65 792E2E00 
                           A   975    		
000D12 0B0B4552 524F5221   A   976    ptoobig_txt		db 11,11, "ERROR! Not enough fr
000D1A 204E6F74 20656E6F 
000D22 75676820 66726565 
000D2A 20737061 63652066 
000D32 6F722074 68650B 
000D39 72657175 65737465   A   977    				db "requested partition size.",
000D41 64207061 72746974 
000D49 696F6E20 73697A65 
000D51 2E0B0B 
000D54 50726573 7320616E   A   978    				db "Press any key..",0
000D5C 79206B65 792E2E00 
                           A   979    
000D64 0B0B4552 524F5221   A   980    pmaxsize_txt	db 11,11, "ERROR! Maximum parti
000D6C 204D6178 696D756D 
000D74 20706172 74697469 
000D7C 6F6E2073 697A6520 
000D84 69732032 3034384D 
000D8C 420B0B 
000D8F 50726573 7320616E   A   981    				db "Press any key..",0
000D97 79206B65 792E2E00 
                           A   982    		
000D9F 24787800            A   983    byte_ascii_txt	db "$xx",0
                           A   984    
000DA3 24787878 7800       A   985    word_ascii_txt	db "$xxxx",0
                           A   986    	
000DA9 436C7573 74657220   A   987    clustersize_txt	db "Cluster size: ",0
000DB1 73697A65 3A2000 
                           A   988    
000DB8 53656374 6F727320   A   989    sectorsperfat_txt	db "Sectors per fat: ",0
000DC0 70657220 6661743A 
000DC8 2000 
                           A   990    		
                           A   991    		
000DCA 4552524F 52212054   A   992    nonfatptn_txt	db "ERROR! The partition type i
000DD2 68652070 61727469 
000DDA 74696F6E 20747970 
000DE2 65206973 206E6F74 
000DEA 20464154 0B0B 
000DF0 50726573 7320616E   A   993    				db "Press any key..",0
000DF8 79206B65 792E2E00 
                           A   994    
000E00 0B0B456E 74657220   A   995    enter_dev_txt	db 11,11,"Enter the target Devi
000E08 74686520 74617267 
000E10 65742044 65766963 
000E18 65206E75 6D626572 
000E20 2E2E0B0B 00 
                           A   996    
000E25 00 00 00 00 00 00   A   997    response_txt	blkb 80,0
000E2B 00 00 00 00 00 00 
000E31 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     16:17:20     page:  30


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\ez80p\Code\PROSEB~1\Phil\utils\partdisk\src\partdisk.asm
000E37 00 00 00 00 00 00 
000E3D 00 00 00 00 00 00 
000E43 00 00 00 00 00 00 
000E49 00 00 00 00 00 00 
000E4F 00 00 00 00 00 00 
000E55 00 00 00 00 00 00 
000E5B 00 00 00 00 00 00 
000E61 00 00 00 00 00 00 
000E67 00 00 00 00 00 00 
000E6D 00 00 00 00 00 00 
000E73 00 00 
                           A   998    
000E75 0B0B496E 76616C69   A   999    bad_dev_txt		db 11,11,"Invalid device select
000E7D 64206465 76696365 
000E85 2073656C 65637469 
000E8D 6F6E210B 0B00 
                           A  1000    
000E93 00 00 00 00 00 00   A  1001    temp_string		blkb 32,0
000E99 00 00 00 00 00 00 
000E9F 00 00 00 00 00 00 
000EA5 00 00 00 00 00 00 
000EAB 00 00 00 00 00 00 
000EB1 00 00 
                           A  1002    
000EB3 5D2000              A  1003    close_space_txt	db "] ",0
                           A  1004    
000EB6 0B536361 6E6E696E   A  1005    scan_txt		db 11,"Scanning devices. Please
000EBE 67206465 76696365 
000EC6 732E2050 6C656173 
000ECE 65207761 69742E2E 
000ED6 0B00 
                           A  1006    
000ED8 00 00 00 00 00 00   A  1007    my_sector_buffer	blkb 512,0
000EDE 00 00 00 00 00 00 
000EE4 00 00 00 00 00 00 
000EEA 00 00 00 00 00 00 
000EF0 00 00 00 00 00 00 
000EF6 00 00 00 00 00 00 
000EFC 00 00 00 00 00 00 
000F02 00 00 00 00 00 00 
000F08 00 00 00 00 00 00 
000F0E 00 00 00 00 00 00 
000F14 00 00 00 00 00 00 
000F1A 00 00 00 00 00 00 
000F20 00 00 00 00 00 00 
000F26 00 00 00 00 00 00 
000F2C 00 00 00 00 00 00 
000F32 00 00 00 00 00 00 
000F38 00 00 00 00 00 00 
000F3E 00 00 00 00 00 00 
000F44 00 00 00 00 00 00 
000F4A 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     16:17:20     page:  31


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\ez80p\Code\PROSEB~1\Phil\utils\partdisk\src\partdisk.asm
000F50 00 00 00 00 00 00 
000F56 00 00 00 00 00 00 
000F5C 00 00 00 00 00 00 
000F62 00 00 00 00 00 00 
000F68 00 00 00 00 00 00 
000F6E 00 00 00 00 00 00 
000F74 00 00 00 00 00 00 
000F7A 00 00 00 00 00 00 
000F80 00 00 00 00 00 00 
000F86 00 00 00 00 00 00 
000F8C 00 00 00 00 00 00 
000F92 00 00 00 00 00 00 
000F98 00 00 00 00 00 00 
000F9E 00 00 00 00 00 00 
000FA4 00 00 00 00 00 00 
000FAA 00 00 00 00 00 00 
000FB0 00 00 00 00 00 00 
000FB6 00 00 00 00 00 00 
000FBC 00 00 00 00 00 00 
000FC2 00 00 00 00 00 00 
000FC8 00 00 00 00 00 00 
000FCE 00 00 00 00 00 00 
000FD4 00 00 00 00 00 00 
000FDA 00 00 00 00 00 00 
000FE0 00 00 00 00 00 00 
000FE6 00 00 00 00 00 00 
000FEC 00 00 00 00 00 00 
000FF2 00 00 00 00 00 00 
000FF8 00 00 00 00 00 00 
000FFE 00 00 00 00 00 00 
001004 00 00 00 00 00 00 
00100A 00 00 00 00 00 00 
001010 00 00 00 00 00 00 
001016 00 00 00 00 00 00 
00101C 00 00 00 00 00 00 
001022 00 00 00 00 00 00 
001028 00 00 00 00 00 00 
00102E 00 00 00 00 00 00 
001034 00 00 00 00 00 00 
00103A 00 00 00 00 00 00 
001040 00 00 00 00 00 00 
001046 00 00 00 00 00 00 
00104C 00 00 00 00 00 00 
001052 00 00 00 00 00 00 
001058 00 00 00 00 00 00 
00105E 00 00 00 00 00 00 
001064 00 00 00 00 00 00 
00106A 00 00 00 00 00 00 
001070 00 00 00 00 00 00 
001076 00 00 00 00 00 00 
00107C 00 00 00 00 00 00 
001082 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     16:17:20     page:  32


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\ez80p\Code\PROSEB~1\Phil\utils\partdisk\src\partdisk.asm
001088 00 00 00 00 00 00 
00108E 00 00 00 00 00 00 
001094 00 00 00 00 00 00 
00109A 00 00 00 00 00 00 
0010A0 00 00 00 00 00 00 
0010A6 00 00 00 00 00 00 
0010AC 00 00 00 00 00 00 
0010B2 00 00 00 00 00 00 
0010B8 00 00 00 00 00 00 
0010BE 00 00 00 00 00 00 
0010C4 00 00 00 00 00 00 
0010CA 00 00 00 00 00 00 
0010D0 00 00 00 00 00 00 
0010D6 00 00 
                           A  1008    				
                           A  1009    ;----------------------------------------------
                           A  1010    	


Errors: 0
Warnings: 0
Lines Assembled: 1348
