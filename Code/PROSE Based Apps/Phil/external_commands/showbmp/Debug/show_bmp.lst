Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     15:44:47     page:   1


PC     Object              I  Line    Source 
                           A     1    ; Show_BMP command, v 0.02 - By Phil Ruston
                           A     2    
                           A     3    ;----------------------------------------------
                           A     4    ; ADL mode PROSE executable header
                           A     5    ;----------------------------------------------
                           A     6    
       00000000            A     7    amoeba_version_req	equ	0				; 0 = d
       0000003B            A     8    prose_version_req	equ 03bh			; 0 = d
       00000001            A     9    ADL_mode			equ 1				; 0 if 
       00010000            A    10    load_location		equ 10000h			; anywh
                           A    11    
                           B     0    			include	'PROSE_header.asm'
                           B     1    
                           B     2    ;----------------------------------------------
                           B     3    
                           C     0    include "ez80_cpu_equates.asm"
                           C     1    ;--- EZ80 Internal Ports ----------------------
                           C     2    
       0000009A            C     3    PB_DR			equ 09ah
       0000009B            C     4    PB_DDR			equ 09bh
       0000009C            C     5    PB_ALT1			equ 09ch
       0000009D            C     6    PB_ALT2			equ 09dh
                           C     7    
       0000009E            C     8    PC_DR			equ 09eh
       0000009F            C     9    PC_DDR			equ 09fh
       000000A0            C    10    PC_ALT1			equ 0a0h
       000000A1            C    11    PC_ALT2			equ 0a1h
                           C    12    
       000000A2            C    13    PD_DR			equ 0a2h
       000000A3            C    14    PD_DDR			equ 0a3h
       000000A4            C    15    PD_ALT1			equ 0a4h
       000000A5            C    16    PD_ALT2			equ 0a5h
                           C    17    
       000000C0            C    18    UART0_RBR		equ 0c0h
       000000C0            C    19    UART0_THR		equ 0c0h
       000000C0            C    20    UART0_BRG_L		equ 0c0h
       000000C1            C    21    UART0_BRG_H		equ 0c1h
       000000C1            C    22    UART0_IER		equ 0c1h
       000000C2            C    23    UART0_FCTL		equ 0c2h
       000000C3            C    24    UART0_LCTL		equ 0c3h
       000000C4            C    25    UART0_MCTL		equ 0c4h
       000000C5            C    26    UART0_LSR		equ 0c5h
       000000C6            C    27    UART0_MSR		equ 0c6h
                           C    28    
       000000A8            C    29    CS0_LBR			equ 0a8h			;eZ80 wait 
       000000A9            C    30    CS0_UBR			equ 0a9h
       000000AA            C    31    CS0_CTL			equ 0aah			
       000000AB            C    32    CS1_LBR			equ 0abh			;eZ80 wait 
       000000AC            C    33    CS1_UBR			equ 0ach
       000000AD            C    34    CS1_CTL			equ 0adh
       000000AE            C    35    CS2_LBR			equ 0aeh			;eZ80 wait 
       000000AF            C    36    CS2_UBR			equ 0afh
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     15:44:47     page:   2


PC     Object              I  Line    Source ..\..\..\..\..\Includes\ez80_cpu_equates.asm
       000000B0            C    37    CS2_CTL			equ 0b0h
       000000B1            C    38    CS3_LBR			equ 0b1h			;eZ80 wait 
       000000B2            C    39    CS3_UBR			equ 0b2h
       000000B3            C    40    CS3_CTL			equ 0b3h
                           C    41    
       00000080            C    42    TMR0_CTL		equ 080h			;timer 0 eq
       00000081            C    43    TMR0_DR_L		equ 081h
       00000081            C    44    TMR0_RR_L		equ 081h
       00000082            C    45    TMR0_DR_H		equ 082h
       00000082            C    46    TMR0_RR_H		equ 082h
       00000092            C    47    TMR_ISS			equ 092h
                           C    48    
       00000083            C    49    TMR1_CTL		equ 083h 
       00000084            C    50    TMR1_RR_L		equ 084h
       00000085            C    51    TMR1_RR_H		equ 085h
                           C    52    
       000000ED            C    53    RTC_CTRL		equ 0edh			;RTC equate
       000000EC            C    54    RTC_ACTRL		equ 0ech
       000000E0            C    55    RTC_SEC			equ 0e0h
       000000E1            C    56    RTC_MIN			equ 0e1h
       000000E2            C    57    RTC_HRS			equ 0e2h
       000000E3            C    58    RTC_DOW			equ 0e3h
       000000E4            C    59    RTC_DOM			equ 0e4h
       000000E5            C    60    RTC_MON			equ 0e5h
       000000E6            C    61    RTC_YR			equ 0e6h
       000000E7            C    62    RTC_CEN			equ 0e7h
                           C    63    
                           C    64    ;----------------------------------------------
                           B     5    
                           B     6    
                           C     0    include "amoeba_hardware_equates.asm"
                           C     1    ;-- AMOEBA Hardware equates -------------------
                           C     2    
       00000000            C     3    port_pic_data  			equ 000h
       00000001            C     4    port_pic_ctrl			equ 001h
       00000001            C     5    port_hw_flags			equ 001h
       00000002            C     6    port_sdc_ctrl			equ 002h	; this is a
       00000002            C     7    port_keyboard_data		equ 002h
       00000003            C     8    port_sdc_data		 	equ 003h	
       00000004            C     9    port_memory_paging		equ 004h
       00000005            C    10    port_irq_ctrl			equ 005h
       00000005            C    11    port_irq_flags			equ 005h
       00000006            C    12    port_nmi_ack			equ 006h
       00000007            C    13    port_ps2_ctrl			equ 007h
       00000008            C    14    port_selector			equ 008h
       00000006            C    15    port_mouse_data			equ 006h
       00000009            C    16    port_clear_flags		equ 009h
                           C    17    
       00000000            C    18    sdc_power				equ 0		;(port_sd_c
       00000001            C    19    sdc_cs					equ 1		;(port_sd_c
       00000002            C    20    sdc_speed				equ 2 		;(port_sd_c
                           C    21    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     15:44:47     page:   3


PC     Object              I  Line    Source ..\..\..\..\..\Includes\amoeba_hardware_equates.asm
       00000004            C    22    sdc_serializer_busy		equ 4 		;(port_hw_f
       00000005            C    23    vrt						equ 5		;(port_hw_f
                           C    24    
                           C    25    
                           C    26    ;-- Memory locations --------------------------
                           C    27    
       00000000            C    28    sysram_addr				equ 0000000h
       00800000            C    29    vram_a_addr				equ 0800000h
       00C00000            C    30    vram_b_addr				equ 0c00000h
                           C    31    
                           C    32    ;-- Hardware registers ------------------------
                           C    33    
       00FF0000            C    34    hw_palette				equ 0ff0000h
       00FF0800            C    35    hw_sprite_registers		equ 0ff0800h
       00FF1000            C    36    hw_video_parameters		equ 0ff1000h
       00FF1400            C    37    hw_audio_registers		equ 0ff1400h
       00FF1800            C    38    hw_video_settings		equ 0ff1800h
                           C    39    
       00FF1000            C    40    tilemap_parameters		equ hw_video_parameters
       00FF1020            C    41    bitmap_parameters		equ hw_video_parameters
                           C    42    
       00FF1800            C    43    video_control			equ hw_video_settings+0
       00FF1801            C    44    sprite_control			equ hw_video_settings+0
       00FF1802            C    45    bgnd_palette_select		equ hw_video_settings+0
       00FF1803            C    46    sprite_palette_select	equ hw_video_settings+0
       00FF1804            C    47    right_border_position	equ hw_video_settings+0
       00FF1805            C    48    irq_line_lo				equ hw_video_settings+0
       00FF1806            C    49    irq_line_hi				equ hw_video_settings+0
                           C    50    
                           C    51    ;----------------------------------------------
                           B     8    
                           B     9    
                           C     0    include "prose_kernal_labels.asm"
                           C     1    ;--------- PROSE Kernal Routine labels --------
                           C     2    		
       00000000            C     3    kr_mount_volumes				equ 00h	
       00000001            C     4    kr_get_device_info				equ 01h	
       00000002            C     5    kr_check_volume_format			equ 02h	
       00000003            C     6    kr_change_volume				equ 03h	
       00000004            C     7    kr_get_volume_info				equ 04h	
       00000005            C     8    kr_format_device				equ 05h	
       00000006            C     9    kr_make_dir						equ 06h
                           C    10    
       00000007            C    11    kr_change_dir					equ 07h	
       00000008            C    12    kr_parent_dir					equ 08h	
       00000009            C    13    kr_root_dir						equ 09h
       0000000A            C    14    kr_delete_dir					equ 0ah
                           C    15    
       0000000B            C    16    kr_find_file					equ 0bh
       0000000B            C    17    kr_open_file					equ 0bh		; p
                           C    18    
       0000000C            C    19    kr_set_file_pointer				equ 0ch
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     15:44:47     page:   4


PC     Object              I  Line    Source ..\..\..\..\..\Includes\prose_kernal_labels.asm
       0000000D            C    20    kr_set_load_length				equ 0dh
       0000000E            C    21    kr_read_file					equ 0eh
                           C    22    
       0000000F            C    23    kr_erase_file					equ 0fh
       00000010            C    24    kr_rename_file					equ 10h
       00000011            C    25    kr_create_file					equ 11h
       00000012            C    26    kr_write_file					equ 12h
       00000013            C    27    kr_get_total_sectors			equ 13h
       00000014            C    28    kr_dir_list_first_entry			equ 14h
       00000015            C    29    kr_dir_list_get_entry			equ 15h
       00000016            C    30    kr_dir_list_next_entry			equ 16h
                           C    31    
       00000017            C    32    kr_read_sector					equ 17h
       00000018            C    33    kr_write_sector					equ 18h
       00000019            C    34    kr_file_sector_list				equ 19h
       0000001A            C    35    kr_get_dir_cluster				equ 1ah
       0000001B            C    36    kr_set_dir_cluster				equ 1bh
       0000001C            C    37    kr_get_dir_name					equ 1ch
       0000001D            C    38    kr_wait_key						equ 1dh
       0000001E            C    39    kr_get_key						equ 1eh
                           C    40    
       0000001F            C    41    kr_get_key_mod_flags			equ 1fh
       00000020            C    42    kr_serial_receive_header		equ 20h
       00000021            C    43    kr_serial_receive_file			equ 21h
       00000022            C    44    kr_serial_send_file				equ 22h
       00000023            C    45    kr_serial_tx_byte				equ 23h
       00000024            C    46    kr_serial_rx_byte				equ 24h
                           C    47    
       00000025            C    48    kr_print_string					equ 25h
       00000026            C    49    kr_clear_screen					equ 26h
       00000027            C    50    kr_wait_vrt						equ 27h
       00000028            C    51    kr_set_cursor_position			equ 28h
       00000029            C    52    kr_plot_char					equ 29h
       0000002A            C    53    kr_set_pen						equ 2ah
       0000002B            C    54    kr_background_colours			equ 2bh
       0000002C            C    55    kr_draw_cursor					equ 2ch
       0000002D            C    56    kr_get_pen						equ 2dh
       0000002E            C    57    kr_scroll_up					equ 2eh
       0000002F            C    58    kr_os_display					equ 2fh
                           C    59    
       00000030            C    60    kr_get_display_size				equ 30h	
       00000030            C    61    kr_get_video_mode				equ 30h		;pr
                           C    62    
       00000031            C    63    kr_get_charmap_addr_xy			equ 31h
       00000032            C    64    kr_get_cursor_position			equ 32h
                           C    65    
       00000033            C    66    kr_set_envar					equ 33h
       00000034            C    67    kr_get_envar					equ 34h
       00000035            C    68    kr_delete_envar					equ 35h
                           C    69    
       00000036            C    70    kr_init_mouse					equ 36h 	; n
                           C    71    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     15:44:47     page:   5


PC     Object              I  Line    Source ..\..\..\..\..\Includes\prose_kernal_labels.asm
       00000037            C    72    kr_get_mouse_position			equ 37h
                           C    73    
       00000038            C    74    kr_get_mouse_motion				equ 38h
       00000038            C    75    kr_get_mouse_counters			equ 38h		;pr
                           C    76    
       00000039            C    77    kr_time_delay					equ 39h
       0000003A            C    78    kr_compare_strings				equ 3ah
       0000003B            C    79    kr_hex_byte_to_ascii			equ 3bh
       0000003C            C    80    kr_ascii_to_hex_word			equ 3ch
       0000003D            C    81    kr_get_string					equ 3dh
                           C    82    
       0000003E            C    83    kr_get_version					equ 3eh
       0000003F            C    84    kr_dont_store_registers			equ 3fh
       00000040            C    85    kr_get_font_info				equ 40h
       00000041            C    86    kr_read_rtc						equ 41h
       00000042            C    87    kr_write_rtc					equ 42h
                           C    88    
       00000043            C    89    kr_get_keymap_location			equ 43h
                           C    90    
       00000044            C    91    kr_get_os_high_mem				equ 44h
       00000044            C    92    kr_get_mem_base					equ 44h		
       00000044            C    93    kr_get_ram_base					equ 44h		;pr
                           C    94    
       00000045            C    95    kr_play_audio					equ 45h
       00000046            C    96    kr_disable_audio				equ 46h
       00000047            C    97    kr_get_joysticks				equ 47h
       00000048            C    98    kr_set_video_mode				equ 48h
       00000049            C    99    kr_set_cursor_image				equ 49h
       0000004A            C   100    kr_remove_cursor				equ 4ah
       0000004B            C   101    kr_char_to_font					equ 4bh
                           C   102    
       0000004C            C   103    kr_get_disk_sector_ptr			equ 4ch
       0000004D            C   104    kr_set_timeout					equ 4dh
       0000004E            C   105    kr_test_timeout					equ 4eh
       0000004F            C   106    kr_set_pointer					equ 4fh
       00000050            C   107    kr_allocate_ram					equ 50h
       00000051            C   108    kr_deallocate_ram				equ 51h
                           C   109    
       00000052            C   110    kr_get_mem_top					equ 52h
       00000052            C   111    kr_get_ram_top					equ 52h		;pr
                           C   112    
       00000053            C   113    kr_init_msec_counter			equ 53h
       00000054            C   114    kr_read_msec_counter			equ 54h
       00000055            C   115    kr_parse_path					equ 55h
                           C   116    
                           C   117    ;----------------------------------------------
                           B    11    
                           B    12    
                           C     0    include "misc_system_equates.asm"
                           C     1    
                           C     2    ;-- System Equates ----------------------------
                           C     3    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     15:44:47     page:   6


PC     Object              I  Line    Source ..\..\..\..\..\Includes\misc_system_equates.asm
       00000A00            C     4    os_location			equ 0a00h
                           C     5    
       00000A14            C     6    prose_return 		equ os_location + 14h
       00000A18            C     7    prose_relativize_hl	equ os_location + 18h
       00000A1C            C     8    prose_relative_call	equ os_location + 1ch
                           C     9    
       00000A20            C    10    prose_kernal 		equ os_location + 20h
                           C    11    
                           C    12    ;----------------------------------------------
                           C    13    
                           C    14    ; Add to sprite locations to position a 0,0 spr
                           C    15    
       0000009A            C    16    x_display_offset	equ 09ah
       00000025            C    17    y_display_offset	equ 025h
                           C    18    
                           C    19    ;----------------------------------------------
                           B    14    
                           B    15    
                           B    16    ;----------------------------------------------
                           B    17    ; Standard PROSE executable header
                           B    18    ;----------------------------------------------
                           B    19    
                           B    20    
                           B    21    	IF ADL_mode = 0
                           B    22    		org load_location&0ffffh	; if Z80 mo
                           B    23    	ELSE
010000                     B    24    		org load_location			; otherwise
                           B    25    	ENDIF
                           B    26    	
                           B    27    		.assume ADL = 1				; All PROSE
                           B    28    
010000 18 0E               B    29    		jr skip_header				; $0 - Jump
010002 50524F              B    30    		db 'PRO'					; $2 - ASCI
010005 000001              B    31    mb_loc	dw24 load_location			; $5 - Desi
010008 000000              B    32    		dw24 0						; $8 - If >
01000B 3B00                B    33    		dw prose_version_req		; $B - If >
01000D 0000                B    34    		dw amoeba_version_req		; $D - If >
01000F 01                  B    35    		db ADL_mode					; $F - Z80 
                           B    36    
010010                     B    37    skip_header
                           B    38    	
                           B    39    	IF ADL_mode = 0 
                           B    40    		
                           B    41    mbase_offset equ load_location & 0ff0000h
                           B    42    
                           B    43    		ld a,load_location/65536	; Additiona
                           B    44    		ld MB,a						; Set MBASE
                           B    45    		jp.sis go_z80_mode			; switches 
                           B    46    
                           B    47    go_z80_mode
                           B    48    
                           B    49    		.assume ADL = 0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     15:44:47     page:   7


PC     Object              I  Line    Source ..\..\..\..\..\Includes\PROSE_header.asm
                           B    50    
                           B    51    	ENDIF
                           B    52    	
                           B    53    ;----------------------------------------------
                           B    54    	
                           A    13    
                           A    14    ;----------------------------------------------
                           A    15    ; ADL-mode user program follows..
                           A    16    ;----------------------------------------------
                           A    17    
010010 E5                  A    18    			push hl
010011 3E04                A    19    			ld a,kr_get_volume_info		;store 
010013 5BCD200A 00         A    20    			call.lil prose_kernal
010018 32 4C 00 01         A    21    			ld (orig_volume),a
01001C 3E1A                A    22    			ld a,kr_get_dir_cluster
01001E 5BCD200A 00         A    23    			call.lil prose_kernal
010023 ED53 4D 00 01       A    24    			ld (orig_dir_cluster),de
010028 E1                  A    25     			pop hl
                           A    26    			
010029 CD 50 00 01         A    27    			call my_prog
                           A    28    			
01002D F5                  A    29    			push af						;restor
01002E 3A 4C 00 01         A    30    			ld a,(orig_volume)
010032 5F                  A    31    			ld e,a
010033 3E03                A    32    			ld a,kr_change_volume
010035 5BCD200A 00         A    33    			call.lil prose_kernal
01003A ED5B 4D 00 01       A    34    			ld de,(orig_dir_cluster)
01003F 3E1B                A    35    			ld a,kr_set_dir_cluster
010041 5BCD200A 00         A    36    			call.lil prose_kernal
010046 F1                  A    37    			pop af
010047 5BC3140A 00         A    38    			jp.lil prose_return
                           A    39    
                           A    40    
01004C 00                  A    41    orig_volume			db 0
01004D 000000              A    42    orig_dir_cluster	dw24 0
                           A    43    
                           A    44    ;----------------------------------------------
                           A    45    					
010050 7E                  A    46    my_prog		ld a,(hl)						; g
010051 B7                  A    47    			or a
010052 28 37               A    48    			jr z,no_args
                           A    49    			
010054 1E00                A    50    			ld e,0
010056 3E55                A    51    			ld a,kr_parse_path
010058 5BCD200A 00         A    52    			call.lil prose_kernal
                           A    53    			
01005D CD B0 00 01         A    54    			call load_header
010061 20 2E               A    55    			jr nz,load_error
                           A    56    			
010063 CD F4 00 01         A    57    			call test_bmp_parameters
010067 20 2E               A    58    			jr nz,bmp_bad
                           A    59    			
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     15:44:47     page:   8


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\ez80p\Code\PROSEB~1\Phil\EXTERN~1\showbmp\source\show_bmp.asm
010069 CD CF 00 01         A    60    			call load_pic
01006D 20 22               A    61    			jr nz,load_error
                           A    62    			
01006F CD 87 01 01         A    63    			call clear_vram_buffer
                           A    64    			
010073 CD 98 01 01         A    65    			call copy_pic_to_vram
                           A    66    			
010077 CD 0B 02 01         A    67    			call set_video_mode
                           A    68    			
01007B 3E1D                A    69    			ld a,kr_wait_key
01007D 5BCD200A 00         A    70    			call.lil prose_kernal
                           A    71    			
010082 3E2F                A    72    			ld a,kr_os_display
010084 5BCD200A 00         A    73    			call.lil prose_kernal
                           A    74    			
010089 AF                  A    75    			xor a				
01008A C9                  A    76    			ret			
                           A    77    
                           A    78    
                           A    79    ;----------------------------------------------
                           A    80    
01008B 21 55 03 01         A    81    no_args		ld hl,no_args_em
01008F 18 16               A    82    			jr text_exit
                           A    83    
                           A    84    
010091                     A    85    load_error
010091 21 37 03 01         A    86    			ld hl,load_em
010095 18 10               A    87    			jr text_exit
                           A    88    
                           A    89    
                           A    90    
010097 1E03                A    91    bmp_bad		ld e,3							;sh
010099 3D                  A    92    			dec a
01009A 57                  A    93    			ld d,a
01009B ED5C                A    94    			mlt de
01009D DD21 1A 03 01       A    95    			ld ix,err_msg_table
0100A2 DD19                A    96    			add ix,de
0100A4 DD2700              A    97    			ld hl,(ix)
                           A    98    
0100A7 3E25                A    99    text_exit	ld a,kr_print_string
0100A9 5BCD200A 00         A   100    			call.lil prose_kernal
0100AE AF                  A   101    			xor a
0100AF C9                  A   102    			ret
                           A   103    			
                           A   104    ;----------------------------------------------
                           A   105    
                           A   106    
0100B0 3E0B                A   107    load_header	ld a,kr_find_file				; l
0100B2 5BCD200A 00         A   108    			call.lil prose_kernal
0100B7 C0                  A   109    			ret nz
                           A   110    
0100B8 11360400            A   111    			ld de,1024+54					; j
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     15:44:47     page:   9


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\ez80p\Code\PROSEB~1\Phil\EXTERN~1\showbmp\source\show_bmp.asm
0100BC 3E0D                A   112    			ld a,kr_set_load_length
0100BE 5BCD200A 00         A   113    			call.lil prose_kernal
                           A   114    
0100C3 21 AD 03 01         A   115    			ld hl,pic_buffer				; l
0100C7 3E0E                A   116    			ld a,kr_read_file
0100C9 5BCD200A 00         A   117    			call.lil prose_kernal
0100CE C9                  A   118    			ret
                           A   119    
                           A   120    
0100CF 21 2C 03 01         A   121    load_pic	ld hl,loading_txt					0100D3 3E25                A   122    			ld a,kr_print_string
0100D5 5BCD200A 00         A   123    			call.lil prose_kernal
                           A   124    
0100DA 1100B004            A   125    			ld de,640*480					; l
0100DE 3E0D                A   126    			ld a,kr_set_load_length
0100E0 5BCD200A 00         A   127    			call.lil prose_kernal
                           A   128    			
0100E5 21 AD 03 01         A   129    			ld hl,pic_buffer				; l
0100E9 3E0E                A   130    			ld a,kr_read_file
0100EB 5BCD200A 00         A   131    			call.lil prose_kernal
0100F0 C8                  A   132    			ret z
0100F1 FECC                A   133    			cp 0cch							; w
0100F3 C9                  A   134    			ret								; t
                           A   135    
                           A   136    ;----------------------------------------------
                           A   137    
0100F4                     A   138    test_bmp_parameters
                           A   139    
0100F4 2A AD 03 01         A   140    			ld hl,(pic_buffer)			; check
0100F8 11424D00            A   141    			ld de,04d42h
0100FC AF                  A   142    			xor a
0100FD 40ED52              A   143    			sbc.sis hl,de
010100 CA 07 01 01         A   144    			jp z,bmp_id_ok
010104 3E01                A   145    			ld a,1						;error 
010106 C9                  A   146    			ret
                           A   147    
010107 2A C9 03 01         A   148    bmp_id_ok	ld hl,(pic_buffer+28)
01010B 11080000            A   149    			ld de,8
01010F AF                  A   150    			xor a
010110 40ED52              A   151    			sbc.sis hl,de
010113 28 03               A   152    			jr z,coldep_ok
010115 3E02                A   153    			ld a,2						;error 
010117 C9                  A   154    			ret
                           A   155    			
010118 2A CB 03 01         A   156    coldep_ok	ld hl,(pic_buffer+30)
01011C 7C                  A   157    			ld a,h
01011D B5                  A   158    			or l
01011E 28 03               A   159    			jr z,cmpr_ok
010120 3E03                A   160    			ld a,3						;error 
010122 C9                  A   161    			ret
                           A   162    
010123 2A BF 03 01         A   163    cmpr_ok		ld hl,(pic_buffer+18)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     15:44:47     page:  10


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\ez80p\Code\PROSEB~1\Phil\EXTERN~1\showbmp\source\show_bmp.asm
010127 22 59 02 01         A   164    			ld (pic_width),hl
01012B 7D                  A   165    			ld a,l	
01012C E607                A   166    			and 7
01012E 28 03               A   167    			jr z,wmult8_ok
010130 3E04                A   168    			ld a,4						;error 
010132 C9                  A   169    			ret
                           A   170    
010133 2A 59 02 01         A   171    wmult8_ok	ld hl,(pic_width)
010137 11810200            A   172    			ld de,641
01013B AF                  A   173    			xor a
01013C 40ED52              A   174    			sbc.sis hl,de
01013F 38 04               A   175    			jr c,width_ok
010141 3E05                A   176    			ld a,5						;error 
010143 B7                  A   177    			or a
010144 C9                  A   178    			ret
                           A   179    			
010145 2A C3 03 01         A   180    width_ok	ld hl,(pic_buffer+22)
010149 22 56 02 01         A   181    			ld (pic_height),hl
01014D 11E10100            A   182    			ld de,481
010151 AF                  A   183    			xor a
010152 40ED52              A   184    			sbc.sis hl,de
010155 38 04               A   185    			jr c,height_ok
010157 3E06                A   186    			ld a,6						;error 
010159 B7                  A   187    			or a
01015A C9                  A   188    			ret
                           A   189    
01015B                     A   190    height_ok	
                           A   191    
01015B 110002FF            A   192    			ld de,hw_palette+(2*256)	;conver
01015F 21 E3 03 01         A   193    			ld hl,pic_buffer+54			;start 
010163 0600                A   194    			ld b,0						;256 co
010165 4E                  A   195    palclp		ld c,(hl)
010166 23                  A   196    			inc hl
010167 CB39                A   197    			srl c
010169 CB39                A   198    			srl c
01016B CB39                A   199    			srl c
01016D CB39                A   200    			srl c						;12 bit
01016F 7E                  A   201    			ld a,(hl)
010170 23                  A   202    			inc hl
010171 E6F0                A   203    			and 0f0h					;12 bit
010173 B1                  A   204    			or c
010174 12                  A   205    			ld (de),a
010175 13                  A   206    			inc de
010176 7E                  A   207    			ld a,(hl)
010177 23                  A   208    			inc hl
010178 23                  A   209    			inc hl
010179 CB3F                A   210    			srl a
01017B CB3F                A   211    			srl a
01017D CB3F                A   212    			srl a
01017F CB3F                A   213    			srl a
010181 12                  A   214    			ld (de),a
010182 13                  A   215    			inc de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     15:44:47     page:  11


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\ez80p\Code\PROSEB~1\Phil\EXTERN~1\showbmp\source\show_bmp.asm
010183 10 E0               A   216    			djnz palclp
                           A   217    
010185 AF                  A   218    			xor a
010186 C9                  A   219    			ret
                           A   220    
                           A   221    ;----------------------------------------------
                           A   222    
010187                     A   223    clear_vram_buffer
                           A   224    
010187 21 00 50 83         A   225    			ld hl,bm_base
01018B 3600                A   226    			ld (hl),0
01018D E5                  A   227    			push hl
01018E D1                  A   228    			pop de
01018F 13                  A   229    			inc de
010190 0100B004            A   230    			ld bc,640*480
010194 0B                  A   231    			dec bc
010195 EDB0                A   232    			ldir
010197 C9                  A   233    			ret
                           A   234    			
                           A   235    
010198                     A   236    copy_pic_to_vram
                           A   237    
010198 21400100            A   238    			ld hl,640/2					;find o
01019C ED5B 59 02 01       A   239    			ld de,(pic_width)
0101A1 CB3A                A   240    			srl d
0101A3 CB1B                A   241    			rr e
0101A5 AF                  A   242    			xor a
0101A6 40ED52              A   243    			sbc.sis hl,de
0101A9 01000000            A   244    			ld bc,0
0101AD 4D                  A   245    			ld c,l
0101AE 44                  A   246    			ld b,h
                           A   247    
0101AF 21F00000            A   248    			ld hl,480/2					;find o
0101B3 ED5B 56 02 01       A   249    			ld de,(pic_height)
0101B8 CB3A                A   250    			srl d
0101BA CB1B                A   251    			rr e
0101BC AF                  A   252    			xor a
0101BD 40ED52              A   253    			sbc.sis hl,de
                           A   254    			
0101C0 2650                A   255    			ld h,640/8					;calcul
0101C2 ED6C                A   256    			mlt hl
0101C4 29                  A   257    			add hl,hl
0101C5 29                  A   258    			add hl,hl
0101C6 29                  A   259    			add hl,hl
0101C7 09                  A   260    			add hl,bc
0101C8 01 00 50 83         A   261    			ld bc,bm_base
0101CC 09                  A   262    			add hl,bc
0101CD E5                  A   263    			push hl						;vram d
                           A   264    						
0101CE 21 AD 03 01         A   265    			ld hl,pic_buffer			;start 
0101D2 ED5B 59 02 01       A   266    			ld de,(pic_width)
0101D7 ED4B 56 02 01       A   267    			ld bc,(pic_height)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     15:44:47     page:  12


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\ez80p\Code\PROSEB~1\Phil\EXTERN~1\showbmp\source\show_bmp.asm
0101DC 0B                  A   268    			dec bc
0101DD 19                  A   269    lp1			add hl,de
0101DE 0B                  A   270    			dec bc
0101DF 78                  A   271    			ld a,b
0101E0 B1                  A   272    			or c
0101E1 20 FA               A   273    			jr nz,lp1
                           A   274    			
0101E3 D1                  A   275    			pop de						;hl = s
0101E4 ED4B 56 02 01       A   276    			ld bc,(pic_height)
0101E9 C5                  A   277    ctvlp		push bc
0101EA ED4B 59 02 01       A   278    			ld bc,(pic_width)
0101EF D5                  A   279    			push de
0101F0 E5                  A   280    			push hl
0101F1 EDB0                A   281    			ldir
0101F3 E1                  A   282    			pop hl
0101F4 D1                  A   283    			pop de
0101F5 ED4B 59 02 01       A   284    			ld bc,(pic_width)
0101FA AF                  A   285    			xor a
0101FB ED42                A   286    			sbc hl,bc
0101FD EB                  A   287    			ex de,hl
0101FE 01800200            A   288    			ld bc,640
010202 09                  A   289    			add hl,bc					;next l
010203 EB                  A   290    			ex de,hl
010204 C1                  A   291    			pop bc
010205 0B                  A   292    			dec bc
010206 78                  A   293    			ld a,b
010207 B1                  A   294    			or c
010208 20 DF               A   295    			jr nz,ctvlp
01020A C9                  A   296    			ret
                           A   297    		
                           A   298    
                           A   299    ;----------------------------------------------
                           A   300    
       00000280            A   301    bm_datafetch	equ 640
       00000000            A   302    bm_modulo		equ 0
       00000001            A   303    bm_pixel_step	equ 1
       00835000            A   304    bm_base			equ vram_a_addr+35000h
                           A   305    
01020B                     A   306    set_video_mode
                           A   307    
01020B 3E27                A   308    			ld a,kr_wait_vrt					01020D 5BCD200A 00         A   309    			call.lil prose_kernal
                           A   310    			
010212 3E00                A   311    			ld a,0000b							010214 320018FF            A   312    			ld (video_control),a				010218 3E01                A   313    			ld a,1
01021A 320218FF            A   314    			ld (bgnd_palette_select),a			01021E 3E63                A   315    			ld a,99
010220 320418FF            A   316    			ld (right_border_position),a		                           A   317    				
010224 DD212010 FF         A   318    			ld ix,bitmap_parameters				010229 21005083            A   319    			ld hl,bm_base
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     15:44:47     page:  13


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\ez80p\Code\PROSEB~1\Phil\EXTERN~1\showbmp\source\show_bmp.asm
01022D DD2F00              A   320    			ld (ix),hl
010230 21010000            A   321    			ld hl,bm_pixel_step
010234 DD2F04              A   322    			ld (ix+04h),hl
010237 21000000            A   323    			ld hl,0
01023B DD2F08              A   324    			ld (ix+08h),hl
01023E 21000000            A   325    			ld hl,bm_modulo
010242 DD2F0C              A   326    			ld (ix+0ch),hl
010245 DD36104F            A   327    			ld (ix+10h),0+(bm_datafetch/8)-1	010249 C9                  A   328    			ret
                           A   329    			
                           A   330    
                           A   331    ;----------------------------------------------
                           A   332    
01024A 36343078 3438302E   A   333    test_fn			db "640x480.bmp",0
010252 626D7000 
                           A   334    
010256 000000              A   335    pic_height		dw24 0
010259 000000              A   336    pic_width		dw24 0
                           A   337    
01025C 4E6F7420 61202E42   A   338    em1				db "Not a .BMP file",11,0
010264 4D502066 696C650B 
01026C 00 
01026D 4E6F7420 61203235   A   339    em2				db "Not a 256 colour .BMP file"
010275 3620636F 6C6F7572 
01027D 202E424D 50206669 
010285 6C650B00 
010289 43616E6E 6F742064   A   340    em3				db "Cannot display compressed .
010291 6973706C 61792063 
010299 6F6D7072 65737365 
0102A1 64202E42 4D502066 
0102A9 696C6573 0B00 
0102AF 50696320 6D757374   A   341    em4				db "Pic must be multiple of 8 p
0102B7 20626520 6D756C74 
0102BF 69706C65 206F6620 
0102C7 38207069 78656C73 
0102CF 20776964 650B00 
0102D6 50696320 69732074   A   342    em5				db "Pic is too wide (640 pixels
0102DE 6F6F2077 69646520 
0102E6 28363430 20706978 
0102EE 656C7320 6D617829 
0102F6 0B00 
0102F8 50696320 69732074   A   343    em6				db "Pic is too tall (480 pixels
010300 6F6F2074 616C6C20 
010308 28343830 20706978 
010310 656C7320 6D617829 
010318 0B00 
                           A   344    
01031A 5C0201 6D0201       A   345    err_msg_table	dw24 em1,em2,em3,em4,em5,em6
010320 890201 AF0201 
010326 D60201 F80201 
                           A   346    
01032C 4C6F6164 696E672E   A   347    loading_txt		db "Loading..",11,0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     15:44:47     page:  14


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\ez80p\Code\PROSEB~1\Phil\EXTERN~1\showbmp\source\show_bmp.asm
010334 2E0B00 
                           A   348    
010337 4C6F6164 20657272   A   349    load_em			db "Load error - file not found
01033F 6F72202D 2066696C 
010347 65206E6F 7420666F 
01034F 756E643F 0B00 
                           A   350    
010355 0B53484F 57424D50   A   351    no_args_em		db 11,"SHOWBMP.EZP - V0.01. Dis
01035D 2E455A50 202D2056 
010365 302E3031 2E204469 
01036D 73706C61 7973202E 
010375 424D5020 666F726D 
01037D 61742067 72617068 
010385 69637320 66696C65 
01038D 732E0B0B 
010391 55736167 653A0B53   A   352    				db "Usage:",11,"SHOWBMP [filena
010399 484F5742 4D50205B 
0103A1 66696C65 6E616D65 
0103A9 5D0B0B00 
                           A   353    
0103AD 00                  A   354    pic_buffer		db 0
                           A   355    
                           A   356    ;----------------------------------------------


Errors: 0
Warnings: 0
Lines Assembled: 662
