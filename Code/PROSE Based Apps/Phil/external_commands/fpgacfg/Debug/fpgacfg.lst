Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     15:42:43     page:   1


PC     Object              I  Line    Source 
                           A     1    ;**********************************************
                           A     2    ; FPGACFG v0.04 COMMAND LINE APP for PROSE/EZ80
                           A     3    ;**********************************************
                           A     4    
                           A     5    ;----------------------------------------------
                           A     6    
       00000000            A     7    amoeba_version_req	equ	0h				; 0 = d
       0000003B            A     8    prose_version_req	equ 03bh			; 0 = d
       00000001            A     9    ADL_mode			equ 1				; 0 if 
       00010000            A    10    load_location		equ 10000h			; anywh
                           A    11    
                           B     0    			include	'PROSE_header.asm'
                           B     1    
                           B     2    ;----------------------------------------------
                           B     3    
                           C     0    include "ez80_cpu_equates.asm"
                           C     1    ;--- EZ80 Internal Ports ----------------------
                           C     2    
       0000009A            C     3    PB_DR			equ 09ah
       0000009B            C     4    PB_DDR			equ 09bh
       0000009C            C     5    PB_ALT1			equ 09ch
       0000009D            C     6    PB_ALT2			equ 09dh
                           C     7    
       0000009E            C     8    PC_DR			equ 09eh
       0000009F            C     9    PC_DDR			equ 09fh
       000000A0            C    10    PC_ALT1			equ 0a0h
       000000A1            C    11    PC_ALT2			equ 0a1h
                           C    12    
       000000A2            C    13    PD_DR			equ 0a2h
       000000A3            C    14    PD_DDR			equ 0a3h
       000000A4            C    15    PD_ALT1			equ 0a4h
       000000A5            C    16    PD_ALT2			equ 0a5h
                           C    17    
       000000C0            C    18    UART0_RBR		equ 0c0h
       000000C0            C    19    UART0_THR		equ 0c0h
       000000C0            C    20    UART0_BRG_L		equ 0c0h
       000000C1            C    21    UART0_BRG_H		equ 0c1h
       000000C1            C    22    UART0_IER		equ 0c1h
       000000C2            C    23    UART0_FCTL		equ 0c2h
       000000C3            C    24    UART0_LCTL		equ 0c3h
       000000C4            C    25    UART0_MCTL		equ 0c4h
       000000C5            C    26    UART0_LSR		equ 0c5h
       000000C6            C    27    UART0_MSR		equ 0c6h
                           C    28    
       000000A8            C    29    CS0_LBR			equ 0a8h			;eZ80 wait 
       000000A9            C    30    CS0_UBR			equ 0a9h
       000000AA            C    31    CS0_CTL			equ 0aah			
       000000AB            C    32    CS1_LBR			equ 0abh			;eZ80 wait 
       000000AC            C    33    CS1_UBR			equ 0ach
       000000AD            C    34    CS1_CTL			equ 0adh
       000000AE            C    35    CS2_LBR			equ 0aeh			;eZ80 wait 
       000000AF            C    36    CS2_UBR			equ 0afh
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     15:42:43     page:   2


PC     Object              I  Line    Source ..\..\..\..\..\Includes\ez80_cpu_equates.asm
       000000B0            C    37    CS2_CTL			equ 0b0h
       000000B1            C    38    CS3_LBR			equ 0b1h			;eZ80 wait 
       000000B2            C    39    CS3_UBR			equ 0b2h
       000000B3            C    40    CS3_CTL			equ 0b3h
                           C    41    
       00000080            C    42    TMR0_CTL		equ 080h			;timer 0 eq
       00000081            C    43    TMR0_DR_L		equ 081h
       00000081            C    44    TMR0_RR_L		equ 081h
       00000082            C    45    TMR0_DR_H		equ 082h
       00000082            C    46    TMR0_RR_H		equ 082h
       00000092            C    47    TMR_ISS			equ 092h
                           C    48    
       00000083            C    49    TMR1_CTL		equ 083h 
       00000084            C    50    TMR1_RR_L		equ 084h
       00000085            C    51    TMR1_RR_H		equ 085h
                           C    52    
       000000ED            C    53    RTC_CTRL		equ 0edh			;RTC equate
       000000EC            C    54    RTC_ACTRL		equ 0ech
       000000E0            C    55    RTC_SEC			equ 0e0h
       000000E1            C    56    RTC_MIN			equ 0e1h
       000000E2            C    57    RTC_HRS			equ 0e2h
       000000E3            C    58    RTC_DOW			equ 0e3h
       000000E4            C    59    RTC_DOM			equ 0e4h
       000000E5            C    60    RTC_MON			equ 0e5h
       000000E6            C    61    RTC_YR			equ 0e6h
       000000E7            C    62    RTC_CEN			equ 0e7h
                           C    63    
                           C    64    ;----------------------------------------------
                           B     5    
                           B     6    
                           C     0    include "amoeba_hardware_equates.asm"
                           C     1    ;-- AMOEBA Hardware equates -------------------
                           C     2    
       00000000            C     3    port_pic_data  			equ 000h
       00000001            C     4    port_pic_ctrl			equ 001h
       00000001            C     5    port_hw_flags			equ 001h
       00000002            C     6    port_sdc_ctrl			equ 002h	; this is a
       00000002            C     7    port_keyboard_data		equ 002h
       00000003            C     8    port_sdc_data		 	equ 003h	
       00000004            C     9    port_memory_paging		equ 004h
       00000005            C    10    port_irq_ctrl			equ 005h
       00000005            C    11    port_irq_flags			equ 005h
       00000006            C    12    port_nmi_ack			equ 006h
       00000007            C    13    port_ps2_ctrl			equ 007h
       00000008            C    14    port_selector			equ 008h
       00000006            C    15    port_mouse_data			equ 006h
       00000009            C    16    port_clear_flags		equ 009h
                           C    17    
       00000000            C    18    sdc_power				equ 0		;(port_sd_c
       00000001            C    19    sdc_cs					equ 1		;(port_sd_c
       00000002            C    20    sdc_speed				equ 2 		;(port_sd_c
                           C    21    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     15:42:43     page:   3


PC     Object              I  Line    Source ..\..\..\..\..\Includes\amoeba_hardware_equates.asm
       00000004            C    22    sdc_serializer_busy		equ 4 		;(port_hw_f
       00000005            C    23    vrt						equ 5		;(port_hw_f
                           C    24    
                           C    25    
                           C    26    ;-- Memory locations --------------------------
                           C    27    
       00000000            C    28    sysram_addr				equ 0000000h
       00800000            C    29    vram_a_addr				equ 0800000h
       00C00000            C    30    vram_b_addr				equ 0c00000h
                           C    31    
                           C    32    ;-- Hardware registers ------------------------
                           C    33    
       00FF0000            C    34    hw_palette				equ 0ff0000h
       00FF0800            C    35    hw_sprite_registers		equ 0ff0800h
       00FF1000            C    36    hw_video_parameters		equ 0ff1000h
       00FF1400            C    37    hw_audio_registers		equ 0ff1400h
       00FF1800            C    38    hw_video_settings		equ 0ff1800h
                           C    39    
       00FF1000            C    40    tilemap_parameters		equ hw_video_parameters
       00FF1020            C    41    bitmap_parameters		equ hw_video_parameters
                           C    42    
       00FF1800            C    43    video_control			equ hw_video_settings+0
       00FF1801            C    44    sprite_control			equ hw_video_settings+0
       00FF1802            C    45    bgnd_palette_select		equ hw_video_settings+0
       00FF1803            C    46    sprite_palette_select	equ hw_video_settings+0
       00FF1804            C    47    right_border_position	equ hw_video_settings+0
       00FF1805            C    48    irq_line_lo				equ hw_video_settings+0
       00FF1806            C    49    irq_line_hi				equ hw_video_settings+0
                           C    50    
                           C    51    ;----------------------------------------------
                           B     8    
                           B     9    
                           C     0    include "prose_kernal_labels.asm"
                           C     1    ;--------- PROSE Kernal Routine labels --------
                           C     2    		
       00000000            C     3    kr_mount_volumes				equ 00h	
       00000001            C     4    kr_get_device_info				equ 01h	
       00000002            C     5    kr_check_volume_format			equ 02h	
       00000003            C     6    kr_change_volume				equ 03h	
       00000004            C     7    kr_get_volume_info				equ 04h	
       00000005            C     8    kr_format_device				equ 05h	
       00000006            C     9    kr_make_dir						equ 06h
                           C    10    
       00000007            C    11    kr_change_dir					equ 07h	
       00000008            C    12    kr_parent_dir					equ 08h	
       00000009            C    13    kr_root_dir						equ 09h
       0000000A            C    14    kr_delete_dir					equ 0ah
                           C    15    
       0000000B            C    16    kr_find_file					equ 0bh
       0000000B            C    17    kr_open_file					equ 0bh		; p
                           C    18    
       0000000C            C    19    kr_set_file_pointer				equ 0ch
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     15:42:43     page:   4


PC     Object              I  Line    Source ..\..\..\..\..\Includes\prose_kernal_labels.asm
       0000000D            C    20    kr_set_load_length				equ 0dh
       0000000E            C    21    kr_read_file					equ 0eh
                           C    22    
       0000000F            C    23    kr_erase_file					equ 0fh
       00000010            C    24    kr_rename_file					equ 10h
       00000011            C    25    kr_create_file					equ 11h
       00000012            C    26    kr_write_file					equ 12h
       00000013            C    27    kr_get_total_sectors			equ 13h
       00000014            C    28    kr_dir_list_first_entry			equ 14h
       00000015            C    29    kr_dir_list_get_entry			equ 15h
       00000016            C    30    kr_dir_list_next_entry			equ 16h
                           C    31    
       00000017            C    32    kr_read_sector					equ 17h
       00000018            C    33    kr_write_sector					equ 18h
       00000019            C    34    kr_file_sector_list				equ 19h
       0000001A            C    35    kr_get_dir_cluster				equ 1ah
       0000001B            C    36    kr_set_dir_cluster				equ 1bh
       0000001C            C    37    kr_get_dir_name					equ 1ch
       0000001D            C    38    kr_wait_key						equ 1dh
       0000001E            C    39    kr_get_key						equ 1eh
                           C    40    
       0000001F            C    41    kr_get_key_mod_flags			equ 1fh
       00000020            C    42    kr_serial_receive_header		equ 20h
       00000021            C    43    kr_serial_receive_file			equ 21h
       00000022            C    44    kr_serial_send_file				equ 22h
       00000023            C    45    kr_serial_tx_byte				equ 23h
       00000024            C    46    kr_serial_rx_byte				equ 24h
                           C    47    
       00000025            C    48    kr_print_string					equ 25h
       00000026            C    49    kr_clear_screen					equ 26h
       00000027            C    50    kr_wait_vrt						equ 27h
       00000028            C    51    kr_set_cursor_position			equ 28h
       00000029            C    52    kr_plot_char					equ 29h
       0000002A            C    53    kr_set_pen						equ 2ah
       0000002B            C    54    kr_background_colours			equ 2bh
       0000002C            C    55    kr_draw_cursor					equ 2ch
       0000002D            C    56    kr_get_pen						equ 2dh
       0000002E            C    57    kr_scroll_up					equ 2eh
       0000002F            C    58    kr_os_display					equ 2fh
                           C    59    
       00000030            C    60    kr_get_display_size				equ 30h	
       00000030            C    61    kr_get_video_mode				equ 30h		;pr
                           C    62    
       00000031            C    63    kr_get_charmap_addr_xy			equ 31h
       00000032            C    64    kr_get_cursor_position			equ 32h
                           C    65    
       00000033            C    66    kr_set_envar					equ 33h
       00000034            C    67    kr_get_envar					equ 34h
       00000035            C    68    kr_delete_envar					equ 35h
                           C    69    
       00000036            C    70    kr_init_mouse					equ 36h 	; n
                           C    71    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     15:42:43     page:   5


PC     Object              I  Line    Source ..\..\..\..\..\Includes\prose_kernal_labels.asm
       00000037            C    72    kr_get_mouse_position			equ 37h
                           C    73    
       00000038            C    74    kr_get_mouse_motion				equ 38h
       00000038            C    75    kr_get_mouse_counters			equ 38h		;pr
                           C    76    
       00000039            C    77    kr_time_delay					equ 39h
       0000003A            C    78    kr_compare_strings				equ 3ah
       0000003B            C    79    kr_hex_byte_to_ascii			equ 3bh
       0000003C            C    80    kr_ascii_to_hex_word			equ 3ch
       0000003D            C    81    kr_get_string					equ 3dh
                           C    82    
       0000003E            C    83    kr_get_version					equ 3eh
       0000003F            C    84    kr_dont_store_registers			equ 3fh
       00000040            C    85    kr_get_font_info				equ 40h
       00000041            C    86    kr_read_rtc						equ 41h
       00000042            C    87    kr_write_rtc					equ 42h
                           C    88    
       00000043            C    89    kr_get_keymap_location			equ 43h
                           C    90    
       00000044            C    91    kr_get_os_high_mem				equ 44h
       00000044            C    92    kr_get_mem_base					equ 44h		
       00000044            C    93    kr_get_ram_base					equ 44h		;pr
                           C    94    
       00000045            C    95    kr_play_audio					equ 45h
       00000046            C    96    kr_disable_audio				equ 46h
       00000047            C    97    kr_get_joysticks				equ 47h
       00000048            C    98    kr_set_video_mode				equ 48h
       00000049            C    99    kr_set_cursor_image				equ 49h
       0000004A            C   100    kr_remove_cursor				equ 4ah
       0000004B            C   101    kr_char_to_font					equ 4bh
                           C   102    
       0000004C            C   103    kr_get_disk_sector_ptr			equ 4ch
       0000004D            C   104    kr_set_timeout					equ 4dh
       0000004E            C   105    kr_test_timeout					equ 4eh
       0000004F            C   106    kr_set_pointer					equ 4fh
       00000050            C   107    kr_allocate_ram					equ 50h
       00000051            C   108    kr_deallocate_ram				equ 51h
                           C   109    
       00000052            C   110    kr_get_mem_top					equ 52h
       00000052            C   111    kr_get_ram_top					equ 52h		;pr
                           C   112    
       00000053            C   113    kr_init_msec_counter			equ 53h
       00000054            C   114    kr_read_msec_counter			equ 54h
       00000055            C   115    kr_parse_path					equ 55h
                           C   116    
                           C   117    ;----------------------------------------------
                           B    11    
                           B    12    
                           C     0    include "misc_system_equates.asm"
                           C     1    
                           C     2    ;-- System Equates ----------------------------
                           C     3    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     15:42:43     page:   6


PC     Object              I  Line    Source ..\..\..\..\..\Includes\misc_system_equates.asm
       00000A00            C     4    os_location			equ 0a00h
                           C     5    
       00000A14            C     6    prose_return 		equ os_location + 14h
       00000A18            C     7    prose_relativize_hl	equ os_location + 18h
       00000A1C            C     8    prose_relative_call	equ os_location + 1ch
                           C     9    
       00000A20            C    10    prose_kernal 		equ os_location + 20h
                           C    11    
                           C    12    ;----------------------------------------------
                           C    13    
                           C    14    ; Add to sprite locations to position a 0,0 spr
                           C    15    
       0000009A            C    16    x_display_offset	equ 09ah
       00000025            C    17    y_display_offset	equ 025h
                           C    18    
                           C    19    ;----------------------------------------------
                           B    14    
                           B    15    
                           B    16    ;----------------------------------------------
                           B    17    ; Standard PROSE executable header
                           B    18    ;----------------------------------------------
                           B    19    
                           B    20    
                           B    21    	IF ADL_mode = 0
                           B    22    		org load_location&0ffffh	; if Z80 mo
                           B    23    	ELSE
010000                     B    24    		org load_location			; otherwise
                           B    25    	ENDIF
                           B    26    	
                           B    27    		.assume ADL = 1				; All PROSE
                           B    28    
010000 18 0E               B    29    		jr skip_header				; $0 - Jump
010002 50524F              B    30    		db 'PRO'					; $2 - ASCI
010005 000001              B    31    mb_loc	dw24 load_location			; $5 - Desi
010008 000000              B    32    		dw24 0						; $8 - If >
01000B 3B00                B    33    		dw prose_version_req		; $B - If >
01000D 0000                B    34    		dw amoeba_version_req		; $D - If >
01000F 01                  B    35    		db ADL_mode					; $F - Z80 
                           B    36    
010010                     B    37    skip_header
                           B    38    	
                           B    39    	IF ADL_mode = 0 
                           B    40    		
                           B    41    mbase_offset equ load_location & 0ff0000h
                           B    42    
                           B    43    		ld a,load_location/65536	; Additiona
                           B    44    		ld MB,a						; Set MBASE
                           B    45    		jp.sis go_z80_mode			; switches 
                           B    46    
                           B    47    go_z80_mode
                           B    48    
                           B    49    		.assume ADL = 0
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     15:42:43     page:   7


PC     Object              I  Line    Source ..\..\..\..\..\Includes\PROSE_header.asm
                           B    50    
                           B    51    	ENDIF
                           B    52    	
                           B    53    ;----------------------------------------------
                           B    54    	
                           A    13    
                           A    14    ;----------------------------------------------
                           A    15    
010010 E5                  A    16    			push hl
010011 3E04                A    17    			ld a,kr_get_volume_info		;store 
010013 5BCD200A 00         A    18    			call.lil prose_kernal
010018 32 4C 00 01         A    19    			ld (orig_volume),a
01001C 3E1A                A    20    			ld a,kr_get_dir_cluster
01001E 5BCD200A 00         A    21    			call.lil prose_kernal
010023 ED53 4D 00 01       A    22    			ld (orig_dir_cluster),de
010028 E1                  A    23     			pop hl
                           A    24    			
010029 CD 50 00 01         A    25    			call my_prog
                           A    26    			
01002D F5                  A    27    			push af						;restor
01002E 3A 4C 00 01         A    28    			ld a,(orig_volume)
010032 5F                  A    29    			ld e,a
010033 3E03                A    30    			ld a,kr_change_volume
010035 5BCD200A 00         A    31    			call.lil prose_kernal
01003A ED5B 4D 00 01       A    32    			ld de,(orig_dir_cluster)
01003F 3E1B                A    33    			ld a,kr_set_dir_cluster
010041 5BCD200A 00         A    34    			call.lil prose_kernal
010046 F1                  A    35    			pop af
010047 5BC3140A 00         A    36    			jp.lil prose_return
                           A    37    
                           A    38    
01004C 00                  A    39    orig_volume			db 0
01004D 000000              A    40    orig_dir_cluster	dw24 0
                           A    41    
                           A    42    ;----------------------------------------------
                           A    43    
010050 22 F1 09 01         A    44    my_prog			ld (command_line_arg_ptr),hl
                           A    45    				
010054 ED3800              A    46    				in0 a,(port_pic_data)			010057 CD B4 05 01         A    47    				call short_pause
                           A    48    
01005B CD 94 08 01         A    49    				call get_slot_count				01005F 28 06               A    50    				jr z,slc_ok
010061 21 E2 0B 01         A    51    				ld hl,slot_count_error_txt
010065 18 57               A    52    				jr quit_string
                           A    53    					
010067 2A F1 09 01         A    54    slc_ok			ld hl,(command_line_arg_ptr)
01006B 7E                  A    55    				ld a,(hl)						01006C B7                  A    56    				or a				
01006D CA C4 00 01         A    57    				jp z,show_usage
                           A    58    
010071 7E                  A    59    				ld a,(hl)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     15:42:43     page:   8


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\ez80p\Code\PROSEB~1\Phil\EXTERN~1\fpgacfg\src\fpgacfg.asm
010072 FE57                A    60    				cp 'W'
010074 CA 8A 01 01         A    61    				jp z,write_slot_cmd
010078 FE77                A    62    				cp 'w'
01007A CA 8A 01 01         A    63    				jp z,write_slot_cmd
01007E FE42                A    64    				cp 'B'
010080 CA 26 04 01         A    65    				jp z,set_boot_slot_cmd
010084 FE62                A    66    				cp 'b'
010086 CA 26 04 01         A    67    				jp z,set_boot_slot_cmd
01008A FE45                A    68    				cp 'E'
01008C CA C7 03 01         A    69    				jp z,erase_slot_cmd
010090 FE65                A    70    				cp 'e'
010092 CA C7 03 01         A    71    				jp z,erase_slot_cmd
010096 FE4C                A    72    				cp 'L'
010098 CA CC 00 01         A    73    				jp z,list_slots_cmd
01009C FE6C                A    74    				cp 'l'
01009E CA CC 00 01         A    75    				jp z,list_slots_cmd
0100A2 FE50                A    76    				cp 'P'
0100A4 CA 6E 01 01         A    77    				jp z,show_pic_fw_cmd
0100A8 FE70                A    78    				cp 'p'
0100AA CA 6E 01 01         A    79    				jp z,show_pic_fw_cmd
0100AE FE43                A    80    				cp 'C'
0100B0 CA E2 04 01         A    81    				jp z,configure_cmd
0100B4 FE63                A    82    				cp 'c'
0100B6 CA E2 04 01         A    83    				jp z,configure_cmd
                           A    84    				
0100BA 21 F0 0A 01         A    85    				ld hl,unknown_arg_txt
0100BE CD A0 05 01         A    86    quit_string		call print_string
0100C2 AF                  A    87    				xor a
0100C3 C9                  A    88    				ret
                           A    89    
                           A    90    
                           A    91    ;----------------------------------------------
                           A    92    
                           A    93    
0100C4 21 17 0A 01         A    94    show_usage		ld hl,usage_txt
0100C8 C3 BE 00 01         A    95    				jp quit_string
                           A    96    
                           A    97    
                           A    98    ;----------------------------------------------
                           A    99    
                           A   100    
0100CC 21 F0 0D 01         A   101    list_slots_cmd	ld hl,slots_txt
0100D0 CD A0 05 01         A   102    				call print_string
                           A   103    
0100D4 AF                  A   104    				xor a
0100D5 32 10 0A 01         A   105    id_loop			ld (working_slot),a
0100D9 5F                  A   106    				ld e,a
0100DA 21 11 0E 01         A   107    				ld hl,slot_hex+1
0100DE 3E3B                A   108    				ld a,kr_hex_byte_to_ascii
0100E0 5BCD200A 00         A   109    				call.lil prose_kernal
0100E5 21 10 0E 01         A   110    				ld hl,slot_hex
0100E9 CD A0 05 01         A   111    				call print_string
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     15:42:43     page:   9


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\ez80p\Code\PROSEB~1\Phil\EXTERN~1\fpgacfg\src\fpgacfg.asm
0100ED 21000000            A   112    				ld hl,0
0100F1 3A 10 0A 01         A   113    				ld a,(working_slot)				0100F5 67                  A   114    				ld h,a
0100F6 29                  A   115    				add hl,hl
0100F7 11FF0100            A   116    				ld de,01ffh
0100FB 19                  A   117    				add hl,de
0100FC EB                  A   118    				ex de,hl
0100FD CD 8B 07 01         A   119    				call read_eeprom_page
010101 DA F2 05 01         A   120    				jp c,pic_error
010105 21 D9 0E 01         A   121    				ld hl,buffer+090h				010109 7E                  A   122    				ld a,(hl)
01010A B7                  A   123    				or a
01010B 28 04               A   124    				jr z,unk_id
01010D CB7F                A   125    				bit 7,a
01010F 28 0C               A   126    				jr z,id_ok
010111 21 17 0E 01         A   127    unk_id			ld hl,unknown_txt
010115 CD A0 05 01         A   128    				call print_string
010119 0E00                A   129    				ld c,0
01011B 18 06               A   130    				jr nxtslot
01011D CD A0 05 01         A   131    id_ok			call print_string
010121 0E01                A   132    				ld c,1
010123 3A 10 0A 01         A   133    nxtslot			ld a,(working_slot)
010127 11000000            A   134    				ld de,0
01012B 5F                  A   135    				ld e,a
01012C 21 29 0E 01         A   136    				ld hl,slots_valid
010130 19                  A   137    				add hl,de
010131 71                  A   138    				ld (hl),c
010132 21 0F 0A 01         A   139    				ld hl,slot_count
010136 3C                  A   140    				inc a
010137 BE                  A   141    				cp (hl)
010138 20 9B               A   142    				jr nz,id_loop
                           A   143    			
01013A 21 C5 0C 01         A   144    				ld hl,boot_slot_txt				01013E CD A0 05 01         A   145    				call print_string
010142 CD AB 08 01         A   146    				call get_boot_slot
010146 DA DA 05 01         A   147    				jp c,timeout
01014A CD 82 05 01         A   148    				call show_hex_byte
01014E CD 97 05 01         A   149    				call new_line
                           A   150    				
010152 21 DF 0C 01         A   151    				ld hl,last_cfg_txt				010156 CD A0 05 01         A   152    				call print_string
01015A CD BC 08 01         A   153    				call get_last_cfg_slot
01015E DA DA 05 01         A   154    				jp c,timeout
010162 CD 82 05 01         A   155    				call show_hex_byte
                           A   156    				
010166 21 27 0E 01         A   157    				ld hl,cr_txt
01016A C3 BE 00 01         A   158    				jp quit_string	
                           A   159    
                           A   160    
                           A   161    ;----------------------------------------------
                           A   162    		
                           A   163    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     15:42:43     page:  10


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\ez80p\Code\PROSEB~1\Phil\EXTERN~1\fpgacfg\src\fpgacfg.asm
01016E 21 F7 0C 01         A   164    show_pic_fw_cmd	ld hl,firmware_txt				010172 CD A0 05 01         A   165    				call print_string
010176 CD E0 09 01         A   166    				call get_fw_version
01017A DA DA 05 01         A   167    				jp c,timeout
01017E CD 82 05 01         A   168    				call show_hex_byte
010182 21 27 0E 01         A   169    				ld hl,cr_txt
010186 C3 BE 00 01         A   170    				jp quit_string	
                           A   171    
                           A   172    			
                           A   173    ;----------------------------------------------
                           A   174    
                           A   175    
01018A 21 49 0E 01         A   176    write_slot_cmd	ld hl,buffer
01018E 01000004            A   177    				ld bc,256*1024
010192 3EFF                A   178    				ld a,0ffh
010194 77                  A   179    clbuflp			ld (hl),a
010195 EDA1                A   180    				cpi
010197 EA 94 01 01         A   181    				jp pe,clbuflp
                           A   182    
01019B CD 67 05 01         A   183    				call find_next_argument			01019F CA FA 05 01         A   184    				jp z,missing_arg
                           A   185    				
0101A3 3E3C                A   186    				ld a,kr_ascii_to_hex_word		0101A5 5BCD200A 00         A   187    				call.lil prose_kernal
0101AA C2 02 06 01         A   188    				jp nz,bad_hex
0101AE 7B                  A   189    				ld a,e
0101AF 32 0E 0A 01         A   190    				ld (target_slot),a
0101B3 21 0F 0A 01         A   191    				ld hl,slot_count
0101B7 BE                  A   192    				cp (hl)
0101B8 D2 D2 05 01         A   193    				jp nc,invalid_slot
                           A   194    				
0101BC CD 67 05 01         A   195    				call find_next_argument			0101C0 CA 10 02 01         A   196    				jp z,serial_cfg_load
                           A   197    				
0101C4 1E00                A   198    				ld e,0
0101C6 3E55                A   199    				ld a,kr_parse_path
0101C8 5BCD200A 00         A   200    				call.lil prose_kernal
                           A   201    				
0101CD 11 F6 09 01         A   202    				ld de,filename
0101D1 0610                A   203    				ld b,16
0101D3 7E                  A   204    cpy_fn			ld a,(hl)
0101D4 B7                  A   205    				or a
0101D5 28 09               A   206    				jr z,fn_done
0101D7 FE20                A   207    				cp ' '
0101D9 28 05               A   208    				jr z,fn_done
0101DB 12                  A   209    				ld (de),a
0101DC 23                  A   210    				inc hl
0101DD 13                  A   211    				inc de
0101DE 10 F3               A   212    				djnz cpy_fn
0101E0 AF                  A   213    fn_done			xor a
0101E1 12                  A   214    				ld (de),a
                           A   215    				
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     15:42:43     page:  11


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\ez80p\Code\PROSEB~1\Phil\EXTERN~1\fpgacfg\src\fpgacfg.asm
0101E2 21 F6 09 01         A   216    				ld hl,filename
0101E6 22 08 0A 01         A   217    				ld (fn_addr),hl
0101EA 3E0B                A   218    				ld a,kr_find_file
0101EC 5BCD200A 00         A   219    				call.lil prose_kernal
0101F1 C2 EA 05 01         A   220    				jp nz,load_error
                           A   221    				
0101F5 21 20 0D 01         A   222    				ld hl,loading_txt
0101F9 CD A0 05 01         A   223    				call print_string
                           A   224    				
0101FD 21 49 0E 01         A   225    				ld hl,buffer
010201 3E0E                A   226    				ld a,kr_read_file
010203 5BCD200A 00         A   227    				call.lil prose_kernal
010208 C2 EA 05 01         A   228    				jp nz,load_error
01020C C3 5D 02 01         A   229    				jp dl_done
                           A   230    				
                           A   231    
010210 21 2C 0D 01         A   232    serial_cfg_load	ld hl,download
010214 CD A0 05 01         A   233    				call print_string
                           A   234    
010218 1E01                A   235    get_hdr_loop	ld e,1							01021A 21 F4 09 01         A   236    				ld hl,dl_filename
01021E 3E20                A   237    				ld a,kr_serial_receive_header
010220 5BCD200A 00         A   238    				call.lil prose_kernal
010225 B7                  A   239    				or a
010226 28 19               A   240    				jr z,got_header
                           A   241    				
010228 FE83                A   242    				cp 083h							01022A C2 E2 05 01         A   243    				jr nz,comms_error
01022E 3E1E                A   244    				ld a,kr_get_key
010230 5BCD200A 00         A   245    				call.lil prose_kernal
010235 FE76                A   246    				cp 076h							010237 20 DF               A   247    				jr nz,get_hdr_loop
010239 21 68 0C 01         A   248    				ld hl,aborted_txt
01023D C3 BE 00 01         A   249    				jp quit_string
                           A   250    				
010241 ED53 08 0A 01       A   251    got_header		ld (fn_addr),de
010246 21 63 0D 01         A   252    				ld hl,receiving					01024A CD A0 05 01         A   253    				call print_string
                           A   254    
01024E 3E21                A   255    				ld a,kr_serial_receive_file
010250 21 49 0E 01         A   256    				ld hl,buffer
010254 5BCD200A 00         A   257    				call.lil prose_kernal
010259 C2 E2 05 01         A   258    				jp nz,comms_error
                           A   259    
01025D 2A 08 0A 01         A   260    dl_done			ld hl,(fn_addr)
010261 11 D9 0D 03         A   261    				ld de,buffer+01ff90h			010265 0610                A   262    				ld b,16
010267 7E                  A   263    cfnlp			ld a,(hl)
010268 12                  A   264    				ld (de),a
010269 B7                  A   265    				or a
01026A 28 06               A   266    				jr z,cfnd
01026C 23                  A   267    				inc hl
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     15:42:43     page:  12


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\ez80p\Code\PROSEB~1\Phil\EXTERN~1\fpgacfg\src\fpgacfg.asm
01026D 13                  A   268    				inc de
01026E 10 F7               A   269    				djnz cfnlp
010270 AF                  A   270    				xor a
010271 12                  A   271    				ld (de),a
010272                     A   272    cfnd
                           A   273    
010272 21 86 0C 01         A   274    				ld hl,write_txt
010276 CD A0 05 01         A   275    				call print_string
01027A 3A 0E 0A 01         A   276    				ld a,(target_slot)
01027E CD 82 05 01         A   277    				call show_hex_byte
010282 CD C0 05 01         A   278    				call confirm
010286 C2 22 06 01         A   279    				jp nz,aborted
                           A   280    
01028A CD DE 08 01         A   281    				call erase_slot
01028E DA DA 05 01         A   282    				jp c,timeout
010292 FE00                A   283    				cp 0
010294 C2 2A 06 01         A   284    				jp nz,bad_pic_response
010298 CD 49 09 01         A   285    				call check_erasure
01029C DA DA 05 01         A   286    				jp c,timeout
0102A0 C2 0A 06 01         A   287    				jp nz,bad_erase
                           A   288    				
                           A   289    
                           A   290    
0102A4 CD 34 08 01         A   291    				call enable_pic_writes
0102A8 D8                  A   292    				ret c
0102A9 FE00                A   293    				cp 0
0102AB C0                  A   294    				ret nz
                           A   295    
0102AC 21 A9 0D 01         A   296    				ld hl,writing					0102B0 CD A0 05 01         A   297    				call print_string
0102B4 21 49 0E 01         A   298    				ld hl,buffer
0102B8 11000000            A   299    				ld de,0
0102BC 3A 0E 0A 01         A   300    				ld a,(target_slot)
0102C0 CB27                A   301    				sla a
0102C2 57                  A   302    				ld d,a							0102C3 01000200            A   303    				ld bc,0200h						0102C7 D5                  A   304    lp1				push de
0102C8 C5                  A   305    				push bc
0102C9 CD 3D 06 01         A   306    				call write_eeprom_page
0102CD C1                  A   307    				pop bc
0102CE D1                  A   308    				pop de
0102CF DA DA 05 01         A   309    				jp c,timeout
0102D3 FE00                A   310    				cp 0
0102D5 C2 2A 06 01         A   311    				jp nz,bad_pic_response
0102D9 13                  A   312    				inc de							0102DA 0B                  A   313    				dec bc
0102DB 78                  A   314    				ld a,b
0102DC B1                  A   315    				or c
0102DD 20 E8               A   316    				jr nz,lp1
                           A   317    
0102DF CD 51 08 01         A   318    				call disable_pic_writes
0102E3 DA DA 05 01         A   319    				jp c,timeout
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     15:42:43     page:  13


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\ez80p\Code\PROSEB~1\Phil\EXTERN~1\fpgacfg\src\fpgacfg.asm
0102E7 FE00                A   320    				cp 0
0102E9 C2 2A 06 01         A   321    				jp nz,bad_pic_response
                           A   322    			
                           A   323    
                           A   324    
                           A   325    
                           A   326    
0102ED 3E88                A   327    				ld a,088h						0102EF CD 83 08 01         A   328    				call send_byte_to_pic
0102F3 3ED4                A   329    				ld a,0d4h
0102F5 CD 83 08 01         A   330    				call send_byte_to_pic
0102F9 3E00                A   331    				ld a,000h			
0102FB CD 83 08 01         A   332    				call send_byte_to_pic			0102FF 3E00                A   333    				ld a,000h	
010301 CD 83 08 01         A   334    				call send_byte_to_pic			010305 3A 0E 0A 01         A   335    				ld a,(target_slot)
010309 CB27                A   336    				sla a
01030B CD 83 08 01         A   337    				call send_byte_to_pic			                           A   338    
01030F CD 62 08 01         A   339    				call get_byte_from_pic			010313 DA DA 05 01         A   340    				jp c,timeout
010317 FE00                A   341    				cp 0
010319 C2 2A 06 01         A   342    				jp nz,bad_pic_response
                           A   343    
01031D 3E88                A   344    				ld a,088h						01031F CD 83 08 01         A   345    				call send_byte_to_pic
010323 3EE2                A   346    				ld a,0e2h
010325 CD 83 08 01         A   347    				call send_byte_to_pic
010329 3E00                A   348    				ld a,00h			
01032B CD 83 08 01         A   349    				call send_byte_to_pic			01032F 3E00                A   350    				ld a,00h	
010331 CD 83 08 01         A   351    				call send_byte_to_pic			010335 3E02                A   352    				ld a,02h
010337 CD 83 08 01         A   353    				call send_byte_to_pic			                           A   354    	
01033B CD 62 08 01         A   355    				call get_byte_from_pic			01033F DA DA 05 01         A   356    				jp c,timeout
010343 FE00                A   357    				cp 0
010345 C2 2A 06 01         A   358    				jp nz,bad_pic_response
                           A   359    
010349 21 C3 0D 01         A   360    				ld hl,verifying					01034D CD A0 05 01         A   361    				call print_string
                           A   362    
010351 3E88                A   363    				ld a,088h						010353 CD 83 08 01         A   364    				call send_byte_to_pic
010357 3EC0                A   365    				ld a,0c0h
010359 CD 83 08 01         A   366    				call send_byte_to_pic
01035D CD 62 08 01         A   367    				call get_byte_from_pic			010361 DA DA 05 01         A   368    				jp c,timeout
010365 FE00                A   369    				cp 0
010367 C2 2A 06 01         A   370    				jp nz,bad_pic_response
                           A   371    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     15:42:43     page:  14


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\ez80p\Code\PROSEB~1\Phil\EXTERN~1\fpgacfg\src\fpgacfg.asm
01036B 21 49 0E 03         A   372    				ld hl,buffer+020000h
01036F 11000000            A   373    				ld de,0
010373 3E01                A   374    lp2				ld a,01h
010375 01010000            A   375    				ld bc,port_pic_ctrl
010379 ED79                A   376    				out (bc),a						01037B CD 62 08 01         A   377    				call get_byte_from_pic
01037F DA DA 05 01         A   378    				jp c,timeout
010383 77                  A   379    				ld (hl),a
010384 23                  A   380    				inc hl
                           A   381    
010385 3E00                A   382    				ld a,00h
010387 01010000            A   383    				ld bc,port_pic_ctrl
01038B ED79                A   384    				out (bc),a						01038D CD 62 08 01         A   385    				call get_byte_from_pic
010391 DA DA 05 01         A   386    				jp c,timeout
010395 77                  A   387    				ld (hl),a
010396 23                  A   388    				inc hl
010397 1B                  A   389    				dec de
010398 7A                  A   390    				ld a,d
010399 B3                  A   391    				or e
01039A 20 D7               A   392    				jr nz,lp2
                           A   393    
                           A   394    
                           A   395    
                           A   396    
01039C 21 49 0E 01         A   397    				ld hl,buffer					0103A0 11 49 0E 03         A   398    				ld de,buffer+020000h
0103A4 0600                A   399    				ld b,0
0103A6 C5                  A   400    lp4				push bc
0103A7 01000000            A   401    				ld bc,0h
0103AB 1A                  A   402    lp3				ld a,(de)
0103AC BE                  A   403    				cp (hl)
0103AD C2 12 06 01         A   404    				jp nz,ver_bad
0103B1 23                  A   405    				inc hl
0103B2 13                  A   406    				inc de
0103B3 03                  A   407    				inc bc
0103B4 78                  A   408    				ld	a,b
0103B5 B1                  A   409    				or c
0103B6 20 F3               A   410    				jr nz,lp3
0103B8 C1                  A   411    				pop bc
0103B9 04                  A   412    				inc b
0103BA 78                  A   413    				ld a,b
0103BB FE02                A   414    				cp 2
0103BD 20 E7               A   415    				jr nz,lp4
                           A   416    
0103BF 21 12 0A 01         A   417    				ld hl,ok_txt
0103C3 C3 BE 00 01         A   418    				jp quit_string
                           A   419    								
                           A   420    
                           A   421    ;----------------------------------------------
                           A   422    
                           A   423    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     15:42:43     page:  15


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\ez80p\Code\PROSEB~1\Phil\EXTERN~1\fpgacfg\src\fpgacfg.asm
0103C7 CD 67 05 01         A   424    erase_slot_cmd	call find_next_argument			0103CB CA FA 05 01         A   425    				jp z,missing_arg
                           A   426    				
0103CF 3E3C                A   427    				ld a,kr_ascii_to_hex_word		0103D1 5BCD200A 00         A   428    				call.lil prose_kernal
0103D6 C2 02 06 01         A   429    				jp nz,bad_hex
0103DA 7B                  A   430    				ld a,e
0103DB 32 0E 0A 01         A   431    				ld (target_slot),a
0103DF 21 0F 0A 01         A   432    				ld hl,slot_count
0103E3 BE                  A   433    				cp (hl)
0103E4 D2 D2 05 01         A   434    				jp nc,invalid_slot
                           A   435    
0103E8 21 72 0C 01         A   436    				ld hl,erase_txt
0103EC CD A0 05 01         A   437    				call print_string
0103F0 3A 0E 0A 01         A   438    				ld a,(target_slot)
0103F4 CD 82 05 01         A   439    				call show_hex_byte
0103F8 CD C0 05 01         A   440    				call confirm
0103FC C2 22 06 01         A   441    				jp nz,aborted
                           A   442    				
010400 CD DE 08 01         A   443    				call erase_slot
010404 DA DA 05 01         A   444    				jp c,timeout
010408 FE00                A   445    				cp 0
01040A C2 2A 06 01         A   446    				jp nz,bad_pic_response
                           A   447    				
01040E CD 49 09 01         A   448    				call check_erasure
010412 DA DA 05 01         A   449    				jp c,timeout
010416 21 12 0A 01         A   450    				ld hl,ok_txt
01041A CA BE 00 01         A   451    				jp z,quit_string
                           A   452    				
01041E 21 57 0B 01         A   453    				ld hl,erase_failed_txt
010422 C3 BE 00 01         A   454    				jp quit_string
                           A   455    
                           A   456    
                           A   457    ;----------------------------------------------
                           A   458    
                           A   459    
010426                     A   460    set_boot_slot_cmd
                           A   461    
010426 CD 67 05 01         A   462    				call find_next_argument			01042A CA FA 05 01         A   463    				jp z,missing_arg
                           A   464    				
01042E 3E3C                A   465    				ld a,kr_ascii_to_hex_word		010430 5BCD200A 00         A   466    				call.lil prose_kernal
010435 C2 02 06 01         A   467    				jp nz,bad_hex
010439 7B                  A   468    				ld a,e
01043A 32 0E 0A 01         A   469    				ld (target_slot),a
01043E 21 0F 0A 01         A   470    				ld hl,slot_count
010442 BE                  A   471    				cp (hl)
010443 D2 D2 05 01         A   472    				jp nc,invalid_slot
                           A   473    	
010447 21 9D 0C 01         A   474    				ld hl,new_boot_txt
01044B CD A0 05 01         A   475    				call print_string
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     15:42:43     page:  16


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\ez80p\Code\PROSEB~1\Phil\EXTERN~1\fpgacfg\src\fpgacfg.asm
01044F 3A 0E 0A 01         A   476    				ld a,(target_slot)
010453 CD 82 05 01         A   477    				call show_hex_byte
010457 CD C0 05 01         A   478    				call confirm
01045B C2 22 06 01         A   479    				jp nz,aborted
                           A   480    
01045F 3E88                A   481    				ld a,088h						010461 CD 83 08 01         A   482    				call send_byte_to_pic
010465 3EB8                A   483    				ld a,0b8h
010467 CD 83 08 01         A   484    				call send_byte_to_pic
01046B 3E16                A   485    				ld a,016h		
01046D CD 83 08 01         A   486    				call send_byte_to_pic
010471 3A 0E 0A 01         A   487    				ld a,(target_slot)	
010475 CD 83 08 01         A   488    				call send_byte_to_pic
010479 CD 62 08 01         A   489    				call get_byte_from_pic
01047D DA DA 05 01         A   490    				jp c,timeout
010481 FE00                A   491    				cp 0
010483 C2 2A 06 01         A   492    				jp nz,bad_pic_response
                           A   493    
010487 CD 34 08 01         A   494    				call enable_pic_writes
01048B DA DA 05 01         A   495    				jp c,timeout
01048F FE00                A   496    				cp 0
010491 C2 2A 06 01         A   497    				jp nz,bad_pic_response
                           A   498    				
010495 3E88                A   499    				ld a,088h						010497 CD 83 08 01         A   500    				call send_byte_to_pic
01049B 3E37                A   501    				ld a,037h
01049D CD 83 08 01         A   502    				call send_byte_to_pic
0104A1 3ED8                A   503    				ld a,0d8h		
0104A3 CD 83 08 01         A   504    				call send_byte_to_pic
0104A7 3E06                A   505    				ld a,006h		
0104A9 CD 83 08 01         A   506    				call send_byte_to_pic
0104AD CD 62 08 01         A   507    				call get_byte_from_pic
0104B1 DA DA 05 01         A   508    				jp c,timeout
0104B5 FE00                A   509    				cp 0
0104B7 C2 2A 06 01         A   510    				jp nz,bad_pic_response
                           A   511    				
0104BB CD 51 08 01         A   512    				call disable_pic_writes
0104BF DA DA 05 01         A   513    				jp c,timeout
0104C3 FE00                A   514    				cp 0
0104C5 C2 2A 06 01         A   515    				jp nz,bad_pic_response
                           A   516    				
0104C9 CD AB 08 01         A   517    				call get_boot_slot				0104CD DA DA 05 01         A   518    				jp c,timeout
0104D1 21 0E 0A 01         A   519    				ld hl,target_slot
0104D5 BE                  A   520    				cp (hl)
0104D6 C2 1A 06 01         A   521    				jp nz,boot_slot_error
                           A   522    				
0104DA 21 12 0A 01         A   523    				ld hl,ok_txt
0104DE C3 BE 00 01         A   524    				jp quit_string
                           A   525    
                           A   526    
                           A   527    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     15:42:43     page:  17


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\ez80p\Code\PROSEB~1\Phil\EXTERN~1\fpgacfg\src\fpgacfg.asm
                           A   528    
                           A   529    
0104E2                     A   530    configure_cmd	
0104E2 CD 67 05 01         A   531    				call find_next_argument			0104E6 CA FA 05 01         A   532    				jp z,missing_arg
0104EA 3E3C                A   533    				ld a,kr_ascii_to_hex_word		0104EC 5BCD200A 00         A   534    				call.lil prose_kernal
0104F1 C2 02 06 01         A   535    				jp nz,bad_hex
0104F5 7B                  A   536    				ld a,e
0104F6 32 0E 0A 01         A   537    				ld (target_slot),a
0104FA 21 0F 0A 01         A   538    				ld hl,slot_count
0104FE BE                  A   539    				cp (hl)
0104FF D2 D2 05 01         A   540    				jp nc,invalid_slot
                           A   541    
010503 21 08 0D 01         A   542    				ld hl,reconfigure_txt
010507 CD A0 05 01         A   543    				call print_string
01050B 3A 0E 0A 01         A   544    				ld a,(target_slot)
01050F CD 82 05 01         A   545    				call show_hex_byte
010513 CD C0 05 01         A   546    				call confirm
010517 C2 22 06 01         A   547    				jp nz,aborted
                           A   548    				
01051B 3E88                A   549    				ld a,088h						01051D CD 83 08 01         A   550    				call send_byte_to_pic
010521 3EB8                A   551    				ld a,0b8h
010523 CD 83 08 01         A   552    				call send_byte_to_pic
010527 3E16                A   553    				ld a,016h		
010529 CD 83 08 01         A   554    				call send_byte_to_pic
01052D 3A 0E 0A 01         A   555    				ld a,(target_slot)	
010531 CD 83 08 01         A   556    				call send_byte_to_pic
010535 CD 62 08 01         A   557    				call get_byte_from_pic
010539 DA DA 05 01         A   558    				jp c,timeout
01053D FE00                A   559    				cp 0
01053F C2 2A 06 01         A   560    				jp nz,bad_pic_response
                           A   561    
010543 3E88                A   562    				ld a,088h						010545 CD 83 08 01         A   563    				call send_byte_to_pic
010549 3EA1                A   564    				ld a,0a1h
01054B CD 83 08 01         A   565    				call send_byte_to_pic
01054F 3E3F                A   566    				ld a,03fh		
010551 CD 83 08 01         A   567    				call send_byte_to_pic
010555 3E62                A   568    				ld a,062h	
010557 CD 83 08 01         A   569    				call send_byte_to_pic
01055B CD A8 05 01         A   570    				call pause
01055F 21 12 0A 01         A   571    				ld hl,ok_txt					010563 C3 BE 00 01         A   572    				jp quit_string
                           A   573    
                           A   574    
                           A   575    ;----------------------------------------------
                           A   576    
                           A   577    
010567                     A   578    find_next_argument
                           A   579    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     15:42:43     page:  18


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\ez80p\Code\PROSEB~1\Phil\EXTERN~1\fpgacfg\src\fpgacfg.asm
010567 2A F1 09 01         A   580    				ld hl,(command_line_arg_ptr)
01056B 23                  A   581    findspc			inc hl
01056C 7E                  A   582    				ld a,(hl)
01056D B7                  A   583    				or a
01056E 28 0D               A   584    				jr z,endofargs
010570 FE20                A   585    				cp ' '
010572 20 F7               A   586    				jr nz,findspc
                           A   587    								
010574 23                  A   588    find_args		inc hl							010575 7E                  A   589    				ld a,(hl)
010576 B7                  A   590    				or a
010577 28 04               A   591    				jr z,endofargs
010579 FE20                A   592    				cp ' '
01057B 28 F7               A   593    				jr z,find_args
                           A   594    				
01057D 22 F1 09 01         A   595    endofargs		ld (command_line_arg_ptr),hl
010581 C9                  A   596    				ret
                           A   597    
                           A   598    ;----------------------------------------------
                           A   599    
                           A   600    
010582 5F                  A   601    show_hex_byte	ld e,a
010583 3E3B                A   602    				ld a,kr_hex_byte_to_ascii
010585 21 ED 0D 01         A   603    				ld hl,ascii_hex
010589 5BCD200A 00         A   604    				call.lil prose_kernal
01058E 21 ED 0D 01         A   605    				ld hl,ascii_hex
010592 CD A0 05 01         A   606    				call print_string
010596 C9                  A   607    				ret
                           A   608    
                           A   609    
010597 21 27 0E 01         A   610    new_line		ld hl,cr_txt
01059B CD A0 05 01         A   611    				call print_string
01059F C9                  A   612    				ret
                           A   613    				
                           A   614    				
                           A   615    ;----------------------------------------------
                           A   616    
                           A   617    
0105A0 3E25                A   618    print_string	ld a,kr_print_string
0105A2 5BCD200A 00         A   619    				call.lil prose_kernal
0105A7 C9                  A   620    				ret
                           A   621    
                           A   622    
                           A   623    ;----------------------------------------------
                           A   624    
                           A   625    
0105A8 11008000            A   626    pause			ld de,32768						0105AC 3E39                A   627    				ld a,kr_time_delay
0105AE 5BCD200A 00         A   628    				call.lil prose_kernal
0105B3 C9                  A   629    				ret
                           A   630    
                           A   631    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     15:42:43     page:  19


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\ez80p\Code\PROSEB~1\Phil\EXTERN~1\fpgacfg\src\fpgacfg.asm
                           A   632    ;----------------------------------------------
                           A   633    
                           A   634    
0105B4 11002000            A   635    short_pause		ld de,8192						0105B8 3E39                A   636    				ld a,kr_time_delay
0105BA 5BCD200A 00         A   637    				call.lil prose_kernal
0105BF C9                  A   638    				ret	
                           A   639    				
                           A   640    ;----------------------------------------------
                           A   641    
                           A   642    
0105C0 21 B5 0C 01         A   643    confirm			ld hl,sure_txt
0105C4 CD A0 05 01         A   644    				call print_string
0105C8 3E1D                A   645    				ld a,kr_wait_key
0105CA 5BCD200A 00         A   646    				call.lil prose_kernal
0105CF FE35                A   647    				cp 035h							0105D1 C9                  A   648    				ret
                           A   649    
                           A   650    
                           A   651    ;----------------------------------------------
                           A   652    
0105D2 21 91 0B 01         A   653    invalid_slot	ld hl,invalid_slot_txt
0105D6 C3 BE 00 01         A   654    				jp quit_string
                           A   655    
                           A   656    
0105DA 21 3D 0C 01         A   657    timeout			ld hl,timeout_msg
0105DE C3 BE 00 01         A   658    				jp quit_string
                           A   659    
                           A   660    
0105E2 21 06 0C 01         A   661    comms_error		ld hl,com_error_txt
0105E6 C3 BE 00 01         A   662    				jp quit_string
                           A   663    
                           A   664    
0105EA 21 24 0C 01         A   665    load_error		ld hl,load_error_txt
0105EE C3 BE 00 01         A   666    				jp quit_string
                           A   667    
                           A   668    
0105F2 21 A8 0B 01         A   669    pic_error		ld hl,pic_error_txt
0105F6 C3 BE 00 01         A   670    				jp quit_string
                           A   671    
                           A   672    
0105FA 21 0E 0B 01         A   673    missing_arg		ld hl,missing_arg_txt
0105FE C3 BE 00 01         A   674    				jp quit_string
                           A   675    
                           A   676    
010602 21 29 0B 01         A   677    bad_hex			ld hl,bad_hex_txt
010606 C3 BE 00 01         A   678    				jp quit_string
                           A   679    
                           A   680    
01060A 21 57 0B 01         A   681    bad_erase		ld hl,erase_failed_txt
01060E C3 BE 00 01         A   682    				jp quit_string
                           A   683    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     15:42:43     page:  20


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\ez80p\Code\PROSEB~1\Phil\EXTERN~1\fpgacfg\src\fpgacfg.asm
                           A   684    
010612 21 CA 0B 01         A   685    ver_bad			ld hl,verify_failed_txt
010616 C3 BE 00 01         A   686    				jp quit_string
                           A   687    
                           A   688    
01061A 21 6E 0B 01         A   689    boot_slot_error	ld hl,boot_slot_error_txt
01061E C3 BE 00 01         A   690    				jp quit_string
                           A   691    				
                           A   692    
010622 21 68 0C 01         A   693    aborted			ld hl,aborted_txt
010626 C3 BE 00 01         A   694    				jp quit_string
                           A   695    				
                           A   696    				
01062A                     A   697    bad_pic_response
                           A   698    				
01062A 21 ED 0D 01         A   699    				ld hl,ascii_hex
01062E 3E3B                A   700    				ld a,kr_hex_byte_to_ascii
010630 5BCD200A 00         A   701    				call.lil prose_kernal
010635 21 D5 0D 01         A   702    				ld hl,report_byte
010639 C3 BE 00 01         A   703    				jp quit_string
                           A   704    				
                           A   705    ;----------------------------------------------
                           A   706    ;--------- EEPROM SUBROUTINES -----------------
                           A   707    ;----------------------------------------------
                           A   708    
01063D                     A   709    write_eeprom_page
                           A   710    
01063D 7A                  A   711    				ld a,d
01063E 32 0B 0A 01         A   712    				ld (page_hi),a
010642 7B                  A   713    				ld a,e
010643 32 0C 0A 01         A   714    				ld (page_med),a
                           A   715    
010647 3E88                A   716    				ld a,088h						010649 CD 83 08 01         A   717    				call send_byte_to_pic
01064D 3E98                A   718    				ld a,098h
01064F CD 83 08 01         A   719    				call send_byte_to_pic
010653 3E00                A   720    				ld a,000h			
010655 CD 83 08 01         A   721    				call send_byte_to_pic			010659 3A 0C 0A 01         A   722    				ld a,(page_med)	
01065D CD 83 08 01         A   723    				call send_byte_to_pic			010661 3A 0B 0A 01         A   724    				ld a,(page_hi)
010665 CD 83 08 01         A   725    				call send_byte_to_pic			                           A   726    
010669 0640                A   727    				ld b,64							01066B 7E                  A   728    wdplp1			ld a,(hl)
01066C CD 83 08 01         A   729    				call send_byte_to_pic
010670 23                  A   730    				inc hl
010671 10 F8               A   731    				djnz wdplp1
010673 CD 62 08 01         A   732    				call get_byte_from_pic			010677 D8                  A   733    				ret c
010678 B7                  A   734    				or a
010679 C0                  A   735    				ret nz
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     15:42:43     page:  21


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\ez80p\Code\PROSEB~1\Phil\EXTERN~1\fpgacfg\src\fpgacfg.asm
                           A   736    
01067A 3E88                A   737    				ld a,088h						01067C CD 83 08 01         A   738    				call send_byte_to_pic
010680 3E98                A   739    				ld a,098h
010682 CD 83 08 01         A   740    				call send_byte_to_pic
010686 3E40                A   741    				ld a,040h			
010688 CD 83 08 01         A   742    				call send_byte_to_pic			01068C 3A 0C 0A 01         A   743    				ld a,(page_med)	
010690 CD 83 08 01         A   744    				call send_byte_to_pic			010694 3A 0B 0A 01         A   745    				ld a,(page_hi)
010698 CD 83 08 01         A   746    				call send_byte_to_pic			                           A   747     
01069C 0640                A   748    				ld b,64							01069E 7E                  A   749    wdplp2			ld a,(hl)
01069F CD 83 08 01         A   750    				call send_byte_to_pic
0106A3 23                  A   751    				inc hl
0106A4 10 F8               A   752    				djnz wdplp2
0106A6 CD 62 08 01         A   753    				call get_byte_from_pic			0106AA D8                  A   754    				ret c
0106AB B7                  A   755    				or a
0106AC C0                  A   756    				ret nz
                           A   757    
0106AD 3E88                A   758    				ld a,088h						0106AF CD 83 08 01         A   759    				call send_byte_to_pic
0106B3 3E98                A   760    				ld a,098h
0106B5 CD 83 08 01         A   761    				call send_byte_to_pic	
0106B9 3E80                A   762    				ld a,080h			
0106BB CD 83 08 01         A   763    				call send_byte_to_pic			0106BF 3A 0C 0A 01         A   764    				ld a,(page_med)	
0106C3 CD 83 08 01         A   765    				call send_byte_to_pic			0106C7 3A 0B 0A 01         A   766    				ld a,(page_hi)
0106CB CD 83 08 01         A   767    				call send_byte_to_pic			                           A   768    
0106CF 0640                A   769    				ld b,64							0106D1 7E                  A   770    wdplp3			ld a,(hl)
0106D2 CD 83 08 01         A   771    				call send_byte_to_pic
0106D6 23                  A   772    				inc hl
0106D7 10 F8               A   773    				djnz wdplp3
0106D9 CD 62 08 01         A   774    				call get_byte_from_pic			0106DD D8                  A   775    				ret c
0106DE B7                  A   776    				or a
0106DF C0                  A   777    				ret nz
                           A   778    
0106E0 3E88                A   779    				ld a,088h						0106E2 CD 83 08 01         A   780    				call send_byte_to_pic
0106E6 3E98                A   781    				ld a,098h
0106E8 CD 83 08 01         A   782    				call send_byte_to_pic
0106EC 3EC0                A   783    				ld a,0c0h			
0106EE CD 83 08 01         A   784    				call send_byte_to_pic			0106F2 3A 0C 0A 01         A   785    				ld a,(page_med)	
0106F6 CD 83 08 01         A   786    				call send_byte_to_pic			0106FA 3A 0B 0A 01         A   787    				ld a,(page_hi)
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     15:42:43     page:  22


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\ez80p\Code\PROSEB~1\Phil\EXTERN~1\fpgacfg\src\fpgacfg.asm
0106FE CD 83 08 01         A   788    				call send_byte_to_pic			                           A   789    
010702 0640                A   790    				ld b,64							010704 7E                  A   791    wdplp4			ld a,(hl)
010705 CD 83 08 01         A   792    				call send_byte_to_pic
010709 23                  A   793    				inc hl
01070A 10 F8               A   794    				djnz wdplp4
01070C CD 62 08 01         A   795    				call get_byte_from_pic			010710 C9                  A   796    				ret
                           A   797    				
                           A   798    ;----------------------------------------------
                           A   799    
010711                     A   800    new_write_eeprom_page
                           A   801    
010711 7A                  A   802    				ld a,d
010712 32 0B 0A 01         A   803    				ld (page_hi),a
010716 7B                  A   804    				ld a,e
010717 32 0C 0A 01         A   805    				ld (page_med),a
                           A   806    
01071B 3E88                A   807    				ld a,088h						01071D CD 83 08 01         A   808    				call send_byte_to_pic
010721 3E99                A   809    				ld a,099h
010723 CD 83 08 01         A   810    				call send_byte_to_pic
010727 3E00                A   811    				ld a,000h			
010729 CD 83 08 01         A   812    				call send_byte_to_pic			01072D 3A 0C 0A 01         A   813    				ld a,(page_med)	
010731 CD 83 08 01         A   814    				call send_byte_to_pic			010735 3A 0B 0A 01         A   815    				ld a,(page_hi)
010739 CD 83 08 01         A   816    				call send_byte_to_pic			01073D 3E80                A   817    				ld a,128
01073F CD 83 08 01         A   818    				call send_byte_to_pic			                           A   819    
010743 0680                A   820    				ld b,128						010745 7E                  A   821    nwdplp1			ld a,(hl)
010746 CD 83 08 01         A   822    				call send_byte_to_pic
01074A 23                  A   823    				inc hl
01074B 10 F8               A   824    				djnz nwdplp1
01074D CD 62 08 01         A   825    				call get_byte_from_pic			010751 D8                  A   826    				ret c
010752 B7                  A   827    				or a
010753 C0                  A   828    				ret nz
                           A   829    
010754 3E88                A   830    				ld a,088h						010756 CD 83 08 01         A   831    				call send_byte_to_pic
01075A 3E99                A   832    				ld a,099h
01075C CD 83 08 01         A   833    				call send_byte_to_pic
010760 3E80                A   834    				ld a,080h			
010762 CD 83 08 01         A   835    				call send_byte_to_pic			010766 3A 0C 0A 01         A   836    				ld a,(page_med)	
01076A CD 83 08 01         A   837    				call send_byte_to_pic			01076E 3A 0B 0A 01         A   838    				ld a,(page_hi)
010772 CD 83 08 01         A   839    				call send_byte_to_pic			Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     15:42:43     page:  23


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\ez80p\Code\PROSEB~1\Phil\EXTERN~1\fpgacfg\src\fpgacfg.asm
010776 3E80                A   840    				ld a,128
010778 CD 83 08 01         A   841    				call send_byte_to_pic			                           A   842    
01077C 0680                A   843    				ld b,128						01077E 7E                  A   844    nwdplp2			ld a,(hl)
01077F CD 83 08 01         A   845    				call send_byte_to_pic
010783 23                  A   846    				inc hl
010784 10 F8               A   847    				djnz nwdplp2
010786 CD 62 08 01         A   848    				call get_byte_from_pic			01078A C9                  A   849    				ret 
                           A   850    
                           A   851    
                           A   852    ;----------------------------------------------
                           A   853    
01078B                     A   854    read_eeprom_page
                           A   855    
01078B E5                  A   856    				push hl							01078C D5                  A   857    				push de
01078D C5                  A   858    				push bc
                           A   859    	
01078E 7A                  A   860    				ld a,d
01078F 32 0B 0A 01         A   861    				ld (page_hi),a
010793 7B                  A   862    				ld a,e
010794 32 0C 0A 01         A   863    				ld (page_med),a
                           A   864    		
010798 3E88                A   865    				ld a,88h						01079A CD 83 08 01         A   866    				call send_byte_to_pic
01079E 3ED4                A   867    				ld a,0d4h
0107A0 CD 83 08 01         A   868    				call send_byte_to_pic
0107A4 3E00                A   869    				ld a,0			
0107A6 CD 83 08 01         A   870    				call send_byte_to_pic			0107AA 3A 0C 0A 01         A   871    				ld a,(page_med)	
0107AE CD 83 08 01         A   872    				call send_byte_to_pic			0107B2 3A 0B 0A 01         A   873    				ld a,(page_hi)
0107B6 CD 83 08 01         A   874    				call send_byte_to_pic			0107BA CD 62 08 01         A   875    				call get_byte_from_pic			0107BE 38 6E               A   876    				jr c,t_o
0107C0 FE00                A   877    				cp 0
0107C2 20 65               A   878    				jr nz,bpr
                           A   879    		
0107C4 3E88                A   880    				ld a,88h						0107C6 CD 83 08 01         A   881    				call send_byte_to_pic
0107CA 3EE2                A   882    				ld a,0e2h
0107CC CD 83 08 01         A   883    				call send_byte_to_pic
0107D0 3E00                A   884    				ld a,00			
0107D2 CD 83 08 01         A   885    				call send_byte_to_pic			0107D6 3E01                A   886    				ld a,01		
0107D8 CD 83 08 01         A   887    				call send_byte_to_pic			0107DC 3E00                A   888    				ld a,00
0107DE CD 83 08 01         A   889    				call send_byte_to_pic			0107E2 CD 62 08 01         A   890    				call get_byte_from_pic			0107E6 38 46               A   891    				jr c,t_o
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     15:42:43     page:  24


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\ez80p\Code\PROSEB~1\Phil\EXTERN~1\fpgacfg\src\fpgacfg.asm
0107E8 FE00                A   892    				cp 0
0107EA 20 3D               A   893    				jr nz,bpr
                           A   894    
                           A   895    			
0107EC 3E88                A   896    				ld a,88h						0107EE CD 83 08 01         A   897    				call send_byte_to_pic
0107F2 3EC0                A   898    				ld a,0c0h
0107F4 CD 83 08 01         A   899    				call send_byte_to_pic
0107F8 CD 62 08 01         A   900    				call get_byte_from_pic			0107FC 38 30               A   901    				jr c,t_o
0107FE FE00                A   902    				cp 0
010800 20 27               A   903    				jr nz,bpr
                           A   904    
                           A   905    			
010802 21 49 0E 01         A   906    				ld hl,buffer
010806 0680                A   907    				ld b,128
010808 3E01                A   908    rplp2			ld a,01h
01080A ED3901              A   909    				out0 (port_pic_ctrl),a			01080D CD 62 08 01         A   910    				call get_byte_from_pic
010811 38 1B               A   911    				jr c,t_o
010813 77                  A   912    				ld (hl),a
010814 23                  A   913    				inc hl
010815 3E00                A   914    				ld a,00h
010817 ED3901              A   915    				out0 (port_pic_ctrl),a			01081A CD 62 08 01         A   916    				call get_byte_from_pic
01081E 38 0E               A   917    				jr c,t_o
010820 77                  A   918    				ld (hl),a
010821 23                  A   919    				inc hl
010822 10 E4               A   920    				djnz rplp2
                           A   921    
010824 AF                  A   922    				xor a
010825 C1                  A   923    				pop bc
010826 D1                  A   924    				pop de
010827 E1                  A   925    				pop hl
010828 C9                  A   926    				ret
                           A   927    
010829 37                  A   928    bpr				scf
01082A C1                  A   929    				pop bc
01082B D1                  A   930    				pop de
01082C E1                  A   931    				pop hl
01082D C9                  A   932    				ret
                           A   933    
01082E AF                  A   934    t_o				xor a
01082F 37                  A   935    				scf
010830 C1                  A   936    				pop bc
010831 D1                  A   937    				pop de
010832 E1                  A   938    				pop hl
010833 C9                  A   939    				ret	
                           A   940    				
                           A   941    				
                           A   942    ;----------------------------------------------
                           A   943    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     15:42:43     page:  25


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\ez80p\Code\PROSEB~1\Phil\EXTERN~1\fpgacfg\src\fpgacfg.asm
010834                     A   944    enable_pic_writes
                           A   945    
010834 3E88                A   946    				ld a,088h						010836 CD 83 08 01         A   947    				call send_byte_to_pic
01083A 3E25                A   948    				ld a,025h
01083C CD 83 08 01         A   949    				call send_byte_to_pic
010840 3EFA                A   950    				ld a,0fah
010842 CD 83 08 01         A   951    				call send_byte_to_pic
010846 3E99                A   952    				ld a,099h
010848 CD 83 08 01         A   953    				call send_byte_to_pic
                           A   954    
01084C CD 62 08 01         A   955    				call get_byte_from_pic			010850 C9                  A   956    				ret
                           A   957    
                           A   958    ;----------------------------------------------
                           A   959    
010851                     A   960    disable_pic_writes
                           A   961    
010851 3E88                A   962    				ld a,088h						010853 CD 83 08 01         A   963    				call send_byte_to_pic
010857 3E1F                A   964    				ld a,01fh
010859 CD 83 08 01         A   965    				call send_byte_to_pic
                           A   966    
01085D CD 62 08 01         A   967    				call get_byte_from_pic			010861 C9                  A   968    				ret
                           A   969    				
                           A   970    ;----------------------------------------------
                           A   971    	
010862                     A   972    get_byte_from_pic
                           A   973    
                           A   974    ; Returns byte in A. If carry set, wait timed o
                           A   975    
010862 D5                  A   976    				push de
010863 C5                  A   977    				push bc
010864 0620                A   978    				ld b,32
010866 11000000            A   979    				ld de,0
01086A ED3801              A   980    pcwbib			in0 a,(port_hw_flags)
01086D E601                A   981    				and 1							01086F 20 0B               A   982    				jr nz,pcbib
010871 1B                  A   983    				dec de
010872 7A                  A   984    				ld a,d
010873 B3                  A   985    				or e
010874 20 F4               A   986    				jr nz,pcwbib
010876 10 F2               A   987    				djnz pcwbib
010878 C1                  A   988    				pop bc
010879 D1                  A   989    				pop de
01087A 37                  A   990    				scf								01087B C9                  A   991    				ret
                           A   992    
01087C ED3800              A   993    pcbib			in0 a,(port_pic_data)			01087F B7                  A   994    				or a							010880 C1                  A   995    				pop bc
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     15:42:43     page:  26


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\ez80p\Code\PROSEB~1\Phil\EXTERN~1\fpgacfg\src\fpgacfg.asm
010881 D1                  A   996    				pop de
010882 C9                  A   997    				ret
                           A   998    
                           A   999    ;----------------------------------------------
                           A  1000    
010883                     A  1001    send_byte_to_pic
                           A  1002    
                           A  1003    ; put byte to send in A
                           A  1004    						
                           A  1005    												010883 F5                  A  1006    				push af
010884 AF                  A  1007    				xor a
010885 ED3901              A  1008    				out0 (port_pic_ctrl),a			                           A  1009    
010888 ED3801              A  1010    wpbusy			in0 a,(port_hw_flags)			01088B E604                A  1011    				and 4
01088D 20 F9               A  1012    				jr nz,wpbusy
                           A  1013    
01088F F1                  A  1014    				pop af
010890 ED3900              A  1015    				out0 (port_pic_data),a
010893 C9                  A  1016    				ret
                           A  1017    
                           A  1018    
                           A  1019    ;----------------------------------------------
                           A  1020    
010894                     A  1021    get_slot_count
                           A  1022    	
010894 3E88                A  1023    				ld a,088h						010896 CD 83 08 01         A  1024    				call send_byte_to_pic
01089A 3E5C                A  1025    				ld a,5ch
01089C CD 83 08 01         A  1026    				call send_byte_to_pic
0108A0 CD 62 08 01         A  1027    				call get_byte_from_pic			0108A4 32 0F 0A 01         A  1028    				ld (slot_count),a
0108A8 CB7F                A  1029    				bit 7,a
0108AA C9                  A  1030    				ret
                           A  1031    
                           A  1032    
                           A  1033    ;----------------------------------------------
                           A  1034    
0108AB                     A  1035    get_boot_slot				
0108AB 3E88                A  1036    				ld a,088h						0108AD CD 83 08 01         A  1037    				call send_byte_to_pic
0108B1 3E76                A  1038    				ld a,76h
0108B3 CD 83 08 01         A  1039    				call send_byte_to_pic
0108B7 CD 62 08 01         A  1040    				call get_byte_from_pic			0108BB C9                  A  1041    				ret
                           A  1042    
                           A  1043    ;----------------------------------------------
                           A  1044    
0108BC                     A  1045    get_last_cfg_slot				
                           A  1046    	
0108BC 3E88                A  1047    				ld a,088h						Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     15:42:43     page:  27


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\ez80p\Code\PROSEB~1\Phil\EXTERN~1\fpgacfg\src\fpgacfg.asm
0108BE CD 83 08 01         A  1048    				call send_byte_to_pic
0108C2 3E71                A  1049    				ld a,71h
0108C4 CD 83 08 01         A  1050    				call send_byte_to_pic
0108C8 CD 62 08 01         A  1051    				call get_byte_from_pic			0108CC C9                  A  1052    				ret
                           A  1053    
                           A  1054    ;----------------------------------------------
                           A  1055    
0108CD                     A  1056    get_sr				
0108CD 3E88                A  1057    				ld a,088h						0108CF CD 83 08 01         A  1058    				call send_byte_to_pic
0108D3 3E06                A  1059    				ld a,06h
0108D5 CD 83 08 01         A  1060    				call send_byte_to_pic
0108D9 CD 62 08 01         A  1061    				call get_byte_from_pic			0108DD C9                  A  1062    				ret				
                           A  1063    
                           A  1064    ;----------------------------------------------
                           A  1065    
0108DE 21 85 0D 01         A  1066    erase_slot		ld hl,erase						0108E2 CD A0 05 01         A  1067    				call print_string
                           A  1068    				
0108E6 CD 34 08 01         A  1069    				call enable_pic_writes
0108EA D8                  A  1070    				ret c
0108EB FE00                A  1071    				cp 0
0108ED C0                  A  1072    				ret nz
                           A  1073    				
0108EE 3E88                A  1074    				ld a,088h						0108F0 CD 83 08 01         A  1075    				call send_byte_to_pic
0108F4 3EF5                A  1076    				ld a,0f5h
0108F6 CD 83 08 01         A  1077    				call send_byte_to_pic
0108FA 3E00                A  1078    				ld a,000h		
0108FC CD 83 08 01         A  1079    				call send_byte_to_pic			010900 3E00                A  1080    				ld a,000h		
010902 CD 83 08 01         A  1081    				call send_byte_to_pic			010906 3A 0E 0A 01         A  1082    				ld a,(target_slot)
01090A CB27                A  1083    				sla a
01090C CD 83 08 01         A  1084    				call send_byte_to_pic			010910 CD 62 08 01         A  1085    				call get_byte_from_pic			010914 D8                  A  1086    				ret c
010915 FE00                A  1087    				cp 0
010917 C0                  A  1088    				ret nz
                           A  1089    
010918 3E88                A  1090    				ld a,088h						01091A CD 83 08 01         A  1091    				call send_byte_to_pic
01091E 3EF5                A  1092    				ld a,0f5h
010920 CD 83 08 01         A  1093    				call send_byte_to_pic
010924 3E00                A  1094    				ld a,000h			
010926 CD 83 08 01         A  1095    				call send_byte_to_pic			01092A 3E00                A  1096    				ld a,000h		
01092C CD 83 08 01         A  1097    				call send_byte_to_pic			010930 3A 0E 0A 01         A  1098    				ld a,(target_slot)
010934 CB27                A  1099    				sla a
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     15:42:43     page:  28


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\ez80p\Code\PROSEB~1\Phil\EXTERN~1\fpgacfg\src\fpgacfg.asm
010936 F601                A  1100    				or 1
010938 CD 83 08 01         A  1101    				call send_byte_to_pic			01093C CD 62 08 01         A  1102    				call get_byte_from_pic			010940 D8                  A  1103    				ret c 
010941 FE00                A  1104    				cp 0
010943 C0                  A  1105    				ret nz
                           A  1106    
010944 CD 51 08 01         A  1107    				call disable_pic_writes
010948 C9                  A  1108    				ret
                           A  1109    				
                           A  1110    ;----------------------------------------------
                           A  1111    
010949                     A  1112    check_erasure
                           A  1113    
010949 21 95 0D 01         A  1114    				ld hl,chkerase					01094D CD A0 05 01         A  1115    				call print_string
                           A  1116    
010951 3E88                A  1117    				ld a,088h						010953 CD 83 08 01         A  1118    				call send_byte_to_pic
010957 3ED4                A  1119    				ld a,0d4h
010959 CD 83 08 01         A  1120    				call send_byte_to_pic
01095D 3E00                A  1121    				ld a,000h			
01095F CD 83 08 01         A  1122    				call send_byte_to_pic			010963 3E00                A  1123    				ld a,000h	
010965 CD 83 08 01         A  1124    				call send_byte_to_pic			010969 3A 0E 0A 01         A  1125    				ld a,(target_slot)
01096D CB27                A  1126    				sla a
01096F CD 83 08 01         A  1127    				call send_byte_to_pic			                           A  1128    
010973 CD 62 08 01         A  1129    				call get_byte_from_pic			010977 D8                  A  1130    				ret c
010978 FE00                A  1131    				cp 0
01097A C0                  A  1132    				ret nz
                           A  1133    
01097B 3E88                A  1134    				ld a,088h						01097D CD 83 08 01         A  1135    				call send_byte_to_pic
010981 3EE2                A  1136    				ld a,0e2h
010983 CD 83 08 01         A  1137    				call send_byte_to_pic
010987 3E00                A  1138    				ld a,00h			
010989 CD 83 08 01         A  1139    				call send_byte_to_pic			01098D 3E00                A  1140    				ld a,00h	
01098F CD 83 08 01         A  1141    				call send_byte_to_pic			010993 3E02                A  1142    				ld a,02h
010995 CD 83 08 01         A  1143    				call send_byte_to_pic			                           A  1144    	
010999 CD 62 08 01         A  1145    				call get_byte_from_pic			01099D D8                  A  1146    				ret c
01099E FE00                A  1147    				cp 0
0109A0 C0                  A  1148    				ret nz
                           A  1149    
                           A  1150    
0109A1 3E88                A  1151    				ld a,088h						Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     15:42:43     page:  29


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\ez80p\Code\PROSEB~1\Phil\EXTERN~1\fpgacfg\src\fpgacfg.asm
0109A3 CD 83 08 01         A  1152    				call send_byte_to_pic
0109A7 3EC0                A  1153    				ld a,0c0h
0109A9 CD 83 08 01         A  1154    				call send_byte_to_pic
0109AD CD 62 08 01         A  1155    				call get_byte_from_pic			0109B1 D8                  A  1156    				ret c
0109B2 FE00                A  1157    				cp 0
0109B4 C0                  A  1158    				ret nz
                           A  1159    
0109B5 11000000            A  1160    				ld de,0
0109B9 3E01                A  1161    lpve			ld a,01h
0109BB 01010000            A  1162    				ld bc,port_pic_ctrl
0109BF ED79                A  1163    				out (bc),a						0109C1 CD 62 08 01         A  1164    				call get_byte_from_pic
0109C5 D8                  A  1165    				ret c
0109C6 FEFF                A  1166    				cp 0ffh
0109C8 C0                  A  1167    				ret nz
                           A  1168    
0109C9 3E00                A  1169    				ld a,00h
0109CB 01010000            A  1170    				ld bc,port_pic_ctrl
0109CF ED79                A  1171    				out (bc),a						0109D1 CD 62 08 01         A  1172    				call get_byte_from_pic
0109D5 D8                  A  1173    				ret c
0109D6 FEFF                A  1174    				cp 0ffh
0109D8 C0                  A  1175    				ret nz
                           A  1176    
0109D9 1B                  A  1177    				dec de
0109DA 7A                  A  1178    				ld a,d
0109DB B3                  A  1179    				or e
0109DC 20 DB               A  1180    				jr nz,lpve
0109DE AF                  A  1181    				xor a
0109DF C9                  A  1182    				ret
                           A  1183    
                           A  1184    ;----------------------------------------------
                           A  1185    
                           A  1186    
0109E0 3E88                A  1187    get_fw_version	ld a,088h						0109E2 CD 83 08 01         A  1188    				call send_byte_to_pic
0109E6 3E4E                A  1189    				ld a,04eh
0109E8 CD 83 08 01         A  1190    				call send_byte_to_pic
0109EC CD 62 08 01         A  1191    				call get_byte_from_pic			0109F0 C9                  A  1192    				ret
                           A  1193    
                           A  1194    
                           A  1195    ;==============================================
                           A  1196    
0109F1 000000              A  1197    command_line_arg_ptr	dw24 0
                           A  1198    
0109F4 2A00                A  1199    dl_filename				db '*',0
                           A  1200    
0109F6 00 00 00 00 00 00   A  1201    filename				blkb 18,0
0109FC 00 00 00 00 00 00 
010A02 00 00 00 00 00 00 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     15:42:43     page:  30


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\ez80p\Code\PROSEB~1\Phil\EXTERN~1\fpgacfg\src\fpgacfg.asm
                           A  1202    
010A08 000000              A  1203    fn_addr					dw24 0
                           A  1204    
010A0B 00                  A  1205    page_hi					db 0
010A0C 00                  A  1206    page_med				db 0
010A0D 00                  A  1207    page_lo					db 0
                           A  1208    
010A0E 00                  A  1209    target_slot				db 0
010A0F 01                  A  1210    slot_count				db 1
010A10 00                  A  1211    working_slot			db 0
010A11 00                  A  1212    boot_slot				db 0
                           A  1213    
010A12 4F4B2E0B 00         A  1214    ok_txt					db "OK.",11,0
                           A  1215    
010A17 0B557361 67653A20   A  1216    usage_txt				db 11,"Usage: FPGACFG [
010A1F 46504741 43464720 
010A27 5B572F45 2F422F4C 
010A2F 2F432F50 5D205B53 
010A37 4C4F545D 205B4649 
010A3F 4C454E41 4D455D0B 
010A47 0B 
010A48 57202D20 57726974   A  1217    						db "W - Write new confi
010A50 65206E65 7720636F 
010A58 6E666967 20746F20 
010A60 736C6F74 0B 
010A65 45202D20 45726173   A  1218    						db "E - Erase slot",11
010A6D 6520736C 6F740B 
010A74 42202D20 53657420   A  1219    						db "B - Set boot slot",
010A7C 626F6F74 20736C6F 
010A84 740B 
010A86 4C202D20 4C697374   A  1220    						db "L - List slot conte
010A8E 20736C6F 7420636F 
010A96 6E74656E 74730B 
010A9D 43202D20 436F6E66   A  1221    						db "C - Configure from 
010AA5 69677572 65206672 
010AAD 6F6D2073 6C6F740B 
010AB5 50202D20 53686F77   A  1222    						db "P - Show PIC firwar
010ABD 20504943 20666972 
010AC5 77617265 20766572 
010ACD 73696F6E 0B0B 
010AD3 28465047 41434647   A  1223    						db "(FPGACFG.EZP Versio
010ADB 2E455A50 20566572 
010AE3 73696F6E 20302E30 
010AEB 34290B0B 00 
                           A  1224    
010AF0 4552524F 52202D20   A  1225    unknown_arg_txt			db "ERROR - Unexpected 
010AF8 556E6578 70656374 
010B00 65642061 7267756D 
010B08 656E742E 0B00 
                           A  1226    
010B0E 4552524F 52202D20   A  1227    missing_arg_txt			db "ERROR - Missing arg
010B16 4D697373 696E6720 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     15:42:43     page:  31


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\ez80p\Code\PROSEB~1\Phil\EXTERN~1\fpgacfg\src\fpgacfg.asm
010B1E 61726775 6D656E74 
010B26 2E0B00 
                           A  1228    
010B29 4552524F 52202D20   A  1229    bad_hex_txt				db "ERROR - Bad argumen
010B31 42616420 61726775 
010B39 6D656E74 202D2068 
010B41 65786164 6563696D 
010B49 616C2065 78706563 
010B51 7465642E 0B00 
                           A  1230    
010B57 4552524F 52202D20   A  1231    erase_failed_txt		db "ERROR - Erase faile
010B5F 45726173 65206661 
010B67 696C6564 2E0B00 
                           A  1232    
010B6E 4552524F 52202D20   A  1233    boot_slot_error_txt		db "ERROR - Boot slot d
010B76 426F6F74 20736C6F 
010B7E 74206469 64206E6F 
010B86 74207570 64617465 
010B8E 2E0B00 
                           A  1234    
010B91 4552524F 52202D20   A  1235    invalid_slot_txt		db "ERROR - Invalid slo
010B99 496E7661 6C696420 
010BA1 736C6F74 2E0B00 
                           A  1236    
010BA8 4552524F 52202D20   A  1237    pic_error_txt			db "ERROR - Unexpected 
010BB0 556E6578 70656374 
010BB8 65642050 49432072 
010BC0 6573706F 6E73652E 
010BC8 0B00 
                           A  1238    
010BCA 4552524F 52202D20   A  1239    verify_failed_txt		db "ERROR - Verify fail
010BD2 56657269 66792066 
010BDA 61696C65 642E0B00 
                           A  1240    
010BE2 4552524F 52202D20   A  1241    slot_count_error_txt	db "ERROR - Failed read
010BEA 4661696C 65642072 
010BF2 65616469 6E672045 
010BFA 4550524F 4D207369 
010C02 7A650B00 
                           A  1242    
010C06 4552524F 52202D20   A  1243    com_error_txt			db "ERROR - Serial comm
010C0E 53657269 616C2063 
010C16 6F6D6D73 2070726F 
010C1E 626C656D 0B00 
                           A  1244    
010C24 4552524F 52202D20   A  1245    load_error_txt			db "ERROR - File not fo
010C2C 46696C65 206E6F74 
010C34 20666F75 6E643F0B 
010C3C 00 
                           A  1246    
010C3D 4552524F 52202D20   A  1247    timeout_msg 			db "ERROR - Timed out."
010C45 54696D65 64206F75 
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     15:42:43     page:  32


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\ez80p\Code\PROSEB~1\Phil\EXTERN~1\fpgacfg\src\fpgacfg.asm
010C4D 742E0B00 
                           A  1248    
010C51 436F6E66 69726D65   A  1249    erase_ok_txt			db "Confirmed: Erased O
010C59 643A2045 72617365 
010C61 64204F4B 2E0B00 
                           A  1250    
010C68 41626F72 7465642E   A  1251    aborted_txt				db "Aborted.",11,0
010C70 0B00 
                           A  1252    
010C72 45726173 65204545   A  1253    erase_txt				db "Erase EEPROM slot $
010C7A 50524F4D 20736C6F 
010C82 74202400 
                           A  1254    
010C86 57726974 6520746F   A  1255    write_txt				db "Write to EEPROM slo
010C8E 20454550 524F4D20 
010C96 736C6F74 202400 
                           A  1256    
010C9D 53657420 46504741   A  1257    new_boot_txt			db "Set FPGA boot slot 
010CA5 20626F6F 7420736C 
010CAD 6F742074 6F202400 
                           A  1258    
010CB5 202D2053 7572653F   A  1259    sure_txt				db " - Sure? (y/n)",11,
010CBD 2028792F 6E290B00 
                           A  1260    
010CC5 0B0B506F 7765722D   A  1261    boot_slot_txt			db 11,11,'Power-on boot
010CCD 6F6E2062 6F6F7420 
010CD5 736C6F74 20203A20 
010CDD 2400 
                           A  1262    
010CDF 436F6E66 69677572   A  1263    last_cfg_txt			db 'Configured from slo
010CE7 65642066 726F6D20 
010CEF 736C6F74 3A202400 
                           A  1264    
010CF7 50494320 4669726D   A  1265    firmware_txt			db "PIC Firmware : $",0
010CFF 77617265 203A2024 
010D07 00 
                           A  1266    
010D08 5265636F 6E666967   A  1267    reconfigure_txt			db "Reconfigure from sl
010D10 75726520 66726F6D 
010D18 20736C6F 74202400 
                           A  1268    
010D20 4C6F6164 696E672E   A  1269    loading_txt				db "Loading.. ",11,0
010D28 2E200B00 
                           A  1270    
010D2C 57616974 696E6720   A  1271    download				db "Waiting for config 
010D34 666F7220 636F6E66 
010D3C 69672066 696C6520 
010D44 76696120 73657269 
010D4C 616C206C 696E6B20 
010D54 5B457363 20746F20 
010D5C 71756974 5D0B00 
010D63 52656365 6976696E   A  1272    receiving				db "Receiving file..",1
Zilog eZ80 Macro Assembler Version 4.1 (10060805)07-Sep-11     15:42:43     page:  33


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\ez80p\Code\PROSEB~1\Phil\EXTERN~1\fpgacfg\src\fpgacfg.asm
010D6B 67206669 6C652E2E 
010D73 0B00 
010D75 46696C65 20726563   A  1273    received				db "File received.",11,
010D7D 65697665 642E0B00 
010D85 45726173 696E6720   A  1274    erase					db "Erasing Slot..",11,
010D8D 536C6F74 2E2E0B00 
010D95 43686563 6B696E67   A  1275    chkerase				db "Checking Erasure.."
010D9D 20457261 73757265 
010DA5 2E2E0B00 
010DA9 57726974 696E6720   A  1276    writing   	  			db "Writing data to EEP
010DB1 64617461 20746F20 
010DB9 45455052 4F4D2E2E 
010DC1 0B00 
010DC3 56657269 6679696E   A  1277    verifying				db "Verifying data..",1
010DCB 67206461 74612E2E 
010DD3 0B00 
010DD5 0B457272 6F72202D   A  1278    report_byte				db 11,"Error - Received
010DDD 20526563 65697665 
010DE5 64206279 74652024 
010DED 787800              A  1279    ascii_hex				db "xx",0
                           A  1280    
010DF0 0B536C6F 7420636F   A  1281    slots_txt				db 11,'Slot contents:',
010DF8 6E74656E 74733A0B 
010E00 2D2D2D2D 2D2D2D2D   A  1282    						db '--------------',11,
010E08 2D2D2D2D 2D2D0B00 
010E10 0B787820 2D2000     A  1283    slot_hex				db 11,'xx - ',0
010E17 556E6B6E 6F776E20   A  1284    unknown_txt				db 'Unknown / Blank',0
010E1F 2F20426C 616E6B00 
                           A  1285    
010E27 0B00                A  1286    cr_txt					db 11,0
                           A  1287    
010E29 00 00 00 00 00 00   A  1288    slots_valid				blkb 32,0
010E2F 00 00 00 00 00 00 
010E35 00 00 00 00 00 00 
010E3B 00 00 00 00 00 00 
010E41 00 00 00 00 00 00 
010E47 00 00 
                           A  1289    
                           A  1290    ;----------------------------------------------
010E49 00                  A  1291    buffer					db 0					                           A  1292    ;----------------------------------------------
                           A  1293    


Errors: 0
Warnings: 0
Lines Assembled: 1599
