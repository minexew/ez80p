Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-May-11     00:10:56     page:   1


PC     Object              I  Line    Source 
                           A     1    
                           A     2    ;----------------------------------------------
                           A     3    
       00000000            A     4    amoeba_version_req	equ	0				; 0 = d
       00000021            A     5    prose_version_req	equ 21h				; 0 = d
       00000001            A     6    ADL_mode			equ 1				; 0 if 
       00010000            A     7    load_location		equ 10000h			; anywh
                           A     8    
                           B     0    			include	'PROSE_header.asm'
                           B     1    ;--- EZ80 Internal CPU Ports ------------------
                           B     2    
       0000009A            B     3    PB_DR			equ 09ah
       0000009B            B     4    PB_DDR			equ 09bh
       0000009C            B     5    PB_ALT1			equ 09ch
       0000009D            B     6    PB_ALT2			equ 09dh
                           B     7    
       0000009E            B     8    PC_DR			equ 09eh
       0000009F            B     9    PC_DDR			equ 09fh
       000000A0            B    10    PC_ALT1			equ 0a0h
       000000A1            B    11    PC_ALT2			equ 0a1h
                           B    12    
       000000A2            B    13    PD_DR			equ 0a2h
       000000A3            B    14    PD_DDR			equ 0a3h
       000000A4            B    15    PD_ALT1			equ 0a4h
       000000A5            B    16    PD_ALT2			equ 0a5h
                           B    17    
       000000C0            B    18    UART0_RBR		equ 0c0h
       000000C0            B    19    UART0_THR		equ 0c0h
       000000C0            B    20    UART0_BRG_L		equ 0c0h
       000000C1            B    21    UART0_BRG_H		equ 0c1h
       000000C1            B    22    UART0_IER		equ 0c1h
       000000C2            B    23    UART0_FCTL		equ 0c2h
       000000C3            B    24    UART0_LCTL		equ 0c3h
       000000C4            B    25    UART0_MCTL		equ 0c4h
       000000C5            B    26    UART0_LSR		equ 0c5h
                           B    27    
       000000A8            B    28    CS0_LBR			equ 0a8h			;eZ80 wait 
       000000A9            B    29    CS0_UBR			equ 0a9h
       000000AA            B    30    CS0_CTL			equ 0aah			
       000000AB            B    31    CS1_LBR			equ 0abh			;eZ80 wait 
       000000AC            B    32    CS1_UBR			equ 0ach
       000000AD            B    33    CS1_CTL			equ 0adh
       000000AE            B    34    CS2_LBR			equ 0aeh			;eZ80 wait 
       000000AF            B    35    CS2_UBR			equ 0afh
       000000B0            B    36    CS2_CTL			equ 0b0h
       000000B1            B    37    CS3_LBR			equ 0b1h			;eZ80 wait 
       000000B2            B    38    CS3_UBR			equ 0b2h
       000000B3            B    39    CS3_CTL			equ 0b3h
                           B    40    
       00000080            B    41    TMR0_CTL		equ 080h			;timer 0 eq
       00000081            B    42    TMR0_DR_L		equ 081h
       00000081            B    43    TMR0_RR_L		equ 081h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-May-11     00:10:56     page:   2


PC     Object              I  Line    Source ..\..\..\Includes\PROSE_header.asm
       00000082            B    44    TMR0_DR_H		equ 082h
       00000082            B    45    TMR0_RR_H		equ 082h
       00000092            B    46    TMR_ISS			equ 092h
                           B    47    
       000000ED            B    48    RTC_CTRL		equ 0edh			;RTC equate
       000000EC            B    49    RTC_ACTRL		equ 0ech
       000000E0            B    50    RTC_SEC			equ 0e0h
       000000E1            B    51    RTC_MIN			equ 0e1h
       000000E2            B    52    RTC_HRS			equ 0e2h
       000000E3            B    53    RTC_DOW			equ 0e3h
       000000E4            B    54    RTC_DOM			equ 0e4h
       000000E5            B    55    RTC_MON			equ 0e5h
       000000E6            B    56    RTC_YR			equ 0e6h
       000000E7            B    57    RTC_CEN			equ 0e7h
                           B    58    
                           B    59    ;-- EZ80P Hardware equates --------------------
                           B    60    
       00000000            B    61    port_pic_data  			equ 000h
       00000001            B    62    port_pic_ctrl			equ 001h
       00000001            B    63    port_hw_flags			equ 001h
       00000002            B    64    port_sdc_ctrl			equ 002h	; this is a
       00000002            B    65    port_keyboard_data		equ 002h
       00000003            B    66    port_sdc_data		 	equ 003h	
       00000004            B    67    port_memory_paging		equ 004h
       00000005            B    68    port_irq_ctrl			equ 005h
       00000006            B    69    port_nmi_ack			equ 006h
       00000007            B    70    port_ps2_ctrl			equ 007h
       00000008            B    71    port_selector			equ 008h
       00000006            B    72    port_mouse_data			equ 006h
       00000009            B    73    port_clear_flags		equ 009h
                           B    74    
       00000000            B    75    sdc_power				equ 0		;(port_sd_c
       00000001            B    76    sdc_cs					equ 1		;(port_sd_c
       00000002            B    77    sdc_speed				equ 2 		;(port_sd_c
                           B    78    
       00000004            B    79    sdc_serializer_busy		equ 4 		;(port_hw_f
       00000005            B    80    vrt						equ 5		;(port_hw_f
                           B    81    
                           B    82    
                           B    83    ;-- Memory locations --------------------------
                           B    84    
       00800000            B    85    vram_a_addr				equ 0800000h
       00C00000            B    86    vram_b_addr				equ 0c00000h
                           B    87    
                           B    88    ;-- Hardware registers ------------------------
                           B    89    
       00FF0000            B    90    hw_palette				equ 0ff0000h
       00FF0800            B    91    hw_sprite_registers		equ 0ff0800h
       00FF1000            B    92    hw_video_parameters		equ 0ff1000h
       00FF1400            B    93    hw_audio_registers		equ 0ff1400h
       00FF1800            B    94    hw_video_settings		equ 0ff1800h
                           B    95    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-May-11     00:10:56     page:   3


PC     Object              I  Line    Source ..\..\..\Includes\PROSE_header.asm
       00FF1000            B    96    tilemap_parameters		equ hw_video_parameters
       00FF1020            B    97    bitmap_parameters		equ hw_video_parameters
                           B    98    
       00FF1800            B    99    video_control			equ hw_video_settings+0
       00FF1801            B   100    sprite_control			equ hw_video_settings+0
       00FF1802            B   101    bgnd_palette_select		equ hw_video_settings+0
       00FF1803            B   102    sprite_palette_select	equ hw_video_settings+0
       00FF1804            B   103    right_border_position	equ hw_video_settings+0
                           B   104    
                           B   105    ;----------------------------------------------
                           B   106    
       00000A00            B   107    os_start 	equ 0a00h
                           B   108    
       00000A14            B   109    prose_return equ os_start+14h
       00000A20            B   110    prose_kernal equ os_start+20h
                           B   111    
                           B   112    ;----------------------------------------------
                           B   113    ; Kernal Jump Table values for mode PROSE
                           B   114    ;----------------------------------------------
                           B   115    		
       00000000            B   116    kr_mount_volumes				equ 00h	
       00000001            B   117    kr_get_device_info				equ 01h	
       00000002            B   118    kr_check_volume_format			equ 02h	
       00000003            B   119    kr_change_volume				equ 03h	
       00000004            B   120    kr_get_volume_info				equ 04h	
       00000005            B   121    kr_format_device				equ 05h	
       00000006            B   122    kr_make_dir						equ 06h
                           B   123    
       00000007            B   124    kr_change_dir					equ 07h	
       00000008            B   125    kr_parent_dir					equ 08h	
       00000009            B   126    kr_root_dir						equ 09h
       0000000A            B   127    kr_delete_dir					equ 0ah
       0000000B            B   128    kr_find_file					equ 0bh
       0000000C            B   129    kr_set_file_pointer				equ 0ch
       0000000D            B   130    kr_set_load_length				equ 0dh
       0000000E            B   131    kr_read_file					equ 0eh
                           B   132    
       0000000F            B   133    kr_erase_file					equ 0fh
       00000010            B   134    kr_rename_file					equ 10h
       00000011            B   135    kr_create_file					equ 11h
       00000012            B   136    kr_write_file					equ 12h
       00000013            B   137    kr_get_total_sectors			equ 13h
       00000014            B   138    kr_dir_list_first_entry			equ 14h
       00000015            B   139    kr_dir_list_get_entry			equ 15h
       00000016            B   140    kr_dir_list_next_entry			equ 16h
                           B   141    
       00000017            B   142    kr_read_sector					equ 17h
       00000018            B   143    kr_write_sector					equ 18h
       00000019            B   144    kr_file_sector_list				equ 19h
       0000001A            B   145    kr_get_dir_cluster				equ 1ah
       0000001B            B   146    kr_set_dir_cluster				equ 1bh
       0000001C            B   147    kr_get_dir_name					equ 1ch
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-May-11     00:10:56     page:   4


PC     Object              I  Line    Source ..\..\..\Includes\PROSE_header.asm
       0000001D            B   148    kr_wait_key						equ 1dh
       0000001E            B   149    kr_get_key						equ 1eh
                           B   150    
       0000001F            B   151    kr_get_key_mod_flags			equ 1fh
       00000020            B   152    kr_serial_receive_header		equ 20h
       00000021            B   153    kr_serial_receive_file			equ 21h
       00000022            B   154    kr_serial_send_file				equ 22h
       00000023            B   155    kr_serial_tx_byte				equ 23h
       00000024            B   156    kr_serial_rx_byte				equ 24h
                           B   157    
       00000025            B   158    kr_print_string					equ 25h
       00000026            B   159    kr_clear_screen					equ 26h
       00000027            B   160    kr_wait_vrt						equ 27h
       00000028            B   161    kr_set_cursor_position			equ 28h
       00000029            B   162    kr_plot_char					equ 29h
       0000002A            B   163    kr_set_pen						equ 2ah
       0000002B            B   164    kr_background_colours			equ 2bh
       0000002C            B   165    kr_draw_cursor					equ 2ch
       0000002D            B   166    kr_get_pen						equ 2dh
       0000002E            B   167    kr_scroll_up					equ 2eh
       0000002F            B   168    kr_os_display					equ 2fh
       00000030            B   169    kr_get_display_size				equ 30h
       00000031            B   170    kr_get_charmap_addr_xy			equ 31h
       00000032            B   171    kr_get_cursor_position			equ 32h
                           B   172    
       00000033            B   173    kr_set_envar					equ 33h
       00000034            B   174    kr_get_envar					equ 34h
       00000035            B   175    kr_delete_envar					equ 35h
                           B   176    
       00000036            B   177    kr_set_mouse_window				equ 36h
       00000037            B   178    kr_get_mouse_position			equ 37h
       00000038            B   179    kr_get_mouse_motion				equ 38h
                           B   180    
       00000039            B   181    kr_time_delay					equ 39h
       0000003A            B   182    kr_compare_strings				equ 3ah
       0000003B            B   183    kr_hex_byte_to_ascii			equ 3bh
       0000003C            B   184    kr_ascii_to_hex_word			equ 3ch
       0000003D            B   185    kr_get_string					equ 3dh
                           B   186    
       0000003E            B   187    kr_get_version					equ 3eh
       0000003F            B   188    kr_dont_store_registers			equ 3fh
       00000040            B   189    kr_get_font_info				equ 40h
       00000041            B   190    kr_read_rtc						equ 41h
       00000042            B   191    kr_write_rtc					equ 42h
                           B   192    
       00000043            B   193    kr_get_keymap_location			equ 43h
       00000044            B   194    kr_get_os_high_mem				equ 44h
                           B   195    
                           B   196    ;----------------------------------------------
                           B   197    ; Standard PROSE executable header
                           B   198    ;----------------------------------------------
                           B   199    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-May-11     00:10:56     page:   5


PC     Object              I  Line    Source ..\..\..\Includes\PROSE_header.asm
                           B   200    
                           B   201    	IF ADL_mode = 0
                           B   202    		org load_location&0ffffh	; if Z80 mo
                           B   203    	ELSE
010000                     B   204    		org load_location			; otherwise
                           B   205    	ENDIF
                           B   206    	
                           B   207    		.assume ADL = 1				; All PROSE
                           B   208    
010000 18 0E               B   209    		jr skip_header				; $0 - Jump
010002 50524F              B   210    		db 'PRO'					; $2 - ASCI
010005 000001              B   211    mb_loc	dw24 load_location			; $5 - Desi
010008 000000              B   212    		dw24 0						; $8 - If >
01000B 2100                B   213    		dw prose_version_req		; $B - If >
01000D 0000                B   214    		dw amoeba_version_req		; $D - If >
01000F 01                  B   215    		db ADL_mode					; $F - Z80 
                           B   216    
010010                     B   217    skip_header
                           B   218    	
                           B   219    	IF ADL_mode = 0 
                           B   220    		
                           B   221    mbase_offset equ load_location & 0ff0000h
                           B   222    
                           B   223    		ld a,load_location/65536	; Additiona
                           B   224    		ld MB,a						; Set MBASE
                           B   225    		jp.sis go_z80_mode			; switches 
                           B   226    
                           B   227    go_z80_mode
                           B   228    
                           B   229    		.assume ADL = 0
                           B   230    
                           B   231    	ENDIF
                           B   232    	
                           B   233    ;----------------------------------------------
                           B   234    	
                           A    10    
                           A    11    ;----------------------------------------------
                           A    12    
010010 21 9A 01 01         A    13    			ld hl,app_msg
010014 3E25                A    14    			ld a,kr_print_string
010016 5BCD200A 00         A    15    			call.lil prose_kernal
                           A    16    
                           A    17    
01001B 21 FB 01 01         A    18    mt_loop		ld hl,sysram_txt
01001F 3E25                A    19    			ld a,kr_print_string
010021 5BCD200A 00         A    20    			call.lil prose_kernal			
010026 21 5F 02 01         A    21    			ld hl,free_mem
01002A 01 A1 FC 06         A    22    			ld bc,7ff00h-free_mem			;do
01002E CD D8 00 01         A    23    			call test_mem
010032 C2 A1 00 01         A    24    			jp nz,fail
                           A    25    			
010036 CD B0 00 01         A    26    			call save_font
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-May-11     00:10:56     page:   6


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSEA~1\memtest\src\memtest.asm
01003A 21 18 02 01         A    27    			ld hl,vrama_txt
01003E 3E25                A    28    			ld a,kr_print_string
010040 5BCD200A 00         A    29    			call.lil prose_kernal	
010045 21000080            A    30    			ld hl,vram_a_addr
010049 01000008            A    31    			ld bc,80000h
01004D CD D8 00 01         A    32    			call test_mem
010051 F5                  A    33    			push af
010052 CD C4 00 01         A    34    			call restore_font
010056 3E26                A    35    			ld a,kr_clear_screen
010058 5BCD200A 00         A    36    			call.lil prose_kernal
01005D F1                  A    37    			pop af
01005E C2 A1 00 01         A    38    			jp nz,fail
                           A    39    			
010062 21 2A 02 01         A    40    			ld hl,vramb_txt
010066 3E25                A    41    			ld a,kr_print_string
010068 5BCD200A 00         A    42    			call.lil prose_kernal	
01006D 210000C0            A    43    			ld hl,vram_b_addr
010071 01000008            A    44    			ld bc,80000h
010075 CD D8 00 01         A    45    			call test_mem
010079 C2 A1 00 01         A    46    			jp nz,fail
                           A    47    			
01007D 3A 5E 02 01         A    48    			ld a,(passes)
010081 3C                  A    49    			inc a
010082 32 5E 02 01         A    50    			ld (passes),a
010086 21 4A 02 01         A    51    			ld hl,pass_count_txt
01008A 5F                  A    52    			ld e,a
01008B 3E3B                A    53    			ld a,kr_hex_byte_to_ascii
01008D 5BCD200A 00         A    54    			call.lil prose_kernal
010092 21 3C 02 01         A    55    			ld hl,passes_txt
010096 3E25                A    56    			ld a,kr_print_string
010098 5BCD200A 00         A    57    			call.lil prose_kernal
                           A    58    
01009D C3 1B 00 01         A    59    			jp mt_loop
                           A    60    
                           A    61    ;----------------------------------------------
                           A    62    
0100A1 21 4F 02 01         A    63    fail		ld hl,fail_txt
0100A5 3E25                A    64    			ld a,kr_print_string
0100A7 5BCD200A 00         A    65    			call.lil prose_kernal
0100AC C3 AC 00 01         A    66    stop_here	jp stop_here
                           A    67    			
                           A    68    ;----------------------------------------------
                           A    69    
0100B0 3E40                A    70    save_font	ld a,kr_get_font_info
0100B2 5BCD200A 00         A    71    			call.lil prose_kernal
0100B7 DD2706              A    72    			ld hl,(ix+6)
0100BA DD0709              A    73    			ld bc,(ix+9)
0100BD 11 5F 02 01         A    74    			ld de,free_mem
0100C1 EDB0                A    75    			ldir
0100C3 C9                  A    76    			ret
                           A    77    			
0100C4                     A    78    restore_font
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-May-11     00:10:56     page:   7


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSEA~1\memtest\src\memtest.asm
                           A    79    	
0100C4 3E40                A    80    			ld a,kr_get_font_info
0100C6 5BCD200A 00         A    81    			call.lil prose_kernal
0100CB 21 5F 02 01         A    82    			ld hl,free_mem
0100CF DD0709              A    83    			ld bc,(ix+9)
0100D2 DD1706              A    84    			ld de,(ix+6)
0100D5 EDB0                A    85    			ldir
0100D7 C9                  A    86    			ret
                           A    87    
                           A    88    ;----------------------------------------------
                           A    89    
0100D8                     A    90    test_mem
0100D8 1E00                A    91    			ld e,0								0100DA CD 60 01 01         A    92    			call fill_test
0100DE C0                  A    93    			ret nz
0100DF 1EFF                A    94    			ld e,255
0100E1 CD 60 01 01         A    95    			call fill_test
0100E5 C0                  A    96    			ret nz
0100E6 1E01                A    97    			ld e,1h
0100E8 CD 60 01 01         A    98    			call fill_test
0100EC C0                  A    99    			ret nz
0100ED 1E02                A   100    			ld e,2h
0100EF CD 60 01 01         A   101    			call fill_test
0100F3 C0                  A   102    			ret nz
0100F4 1E04                A   103    			ld e,4h
0100F6 CD 60 01 01         A   104    			call fill_test
0100FA C0                  A   105    			ret nz
0100FB 1E08                A   106    			ld e,8h
0100FD CD 60 01 01         A   107    			call fill_test
010101 C0                  A   108    			ret nz
010102 1E10                A   109    			ld e,10h
010104 CD 60 01 01         A   110    			call fill_test
010108 C0                  A   111    			ret nz
010109 1E20                A   112    			ld e,20h
01010B CD 60 01 01         A   113    			call fill_test
01010F C0                  A   114    			ret nz
010110 1E40                A   115    			ld e,40h
010112 CD 60 01 01         A   116    			call fill_test
010116 C0                  A   117    			ret nz
010117 1E80                A   118    			ld e,80h
010119 CD 60 01 01         A   119    			call fill_test
01011D C0                  A   120    			ret nz
                           A   121    			
                           A   122    
01011E ED5B 58 02 01       A   123    			ld de,(my_seed)
010123 ED53 5B 02 01       A   124    			ld (seed),de
010128 E5                  A   125    			push hl
010129 C5                  A   126    			push bc
01012A CD 7A 01 01         A   127    rt1			call rand16							01012E 3A 5C 02 01         A   128    			ld a,(seed+1)
010132 77                  A   129    			ld (hl),a
010133 EDA1                A   130    			cpi
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-May-11     00:10:56     page:   8


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSEA~1\memtest\src\memtest.asm
010135 EA 2A 01 01         A   131    			jp pe,rt1
010139 C1                  A   132    			pop bc
01013A E1                  A   133    			pop hl
                           A   134    
01013B ED5B 58 02 01       A   135    			ld de,(my_seed)
010140 ED53 5B 02 01       A   136    			ld (seed),de
010145 CD 7A 01 01         A   137    rt2			call rand16
010149 3A 5C 02 01         A   138    			ld a,(seed+1)
01014D EDA1                A   139    			cpi
01014F C0                  A   140    			ret nz
010150 EA 45 01 01         A   141    			jp pe,rt2
                           A   142    			
010154 ED5B 5B 02 01       A   143    			ld de,(seed)
010159 ED53 58 02 01       A   144    			ld (my_seed),de
01015E AF                  A   145    			xor a
01015F C9                  A   146    			ret
                           A   147    			
                           A   148    ;----------------------------------------------
                           A   149    			
                           A   150    			
010160 E5                  A   151    fill_test	push hl
010161 C5                  A   152    			push bc
010162 73                  A   153    mt1			ld (hl),e
010163 EDA1                A   154    			cpi								;us
010165 EA 62 01 01         A   155    			jp pe,mt1
010169 C1                  A   156    			pop bc
01016A E1                  A   157    			pop hl
                           A   158    			
01016B E5                  A   159    			push hl
01016C C5                  A   160    			push bc
01016D 7B                  A   161    			ld a,e
01016E EDA1                A   162    mt2			cpi
010170 20 05               A   163    			jr nz,bad
010172 EA 6E 01 01         A   164    			jp pe,mt2
010176 AF                  A   165    			xor a
010177 C1                  A   166    bad			pop bc
010178 E1                  A   167    			pop hl
010179 C9                  A   168    			ret
                           A   169    			
                           A   170    
                           A   171    ;----------------------------------------------
                           A   172    
                           A   173    
01017A E5                  A   174    rand16		push hl
01017B ED5B 5B 02 01       A   175    			ld	de,(seed)		
010180 7A                  A   176    			ld	a,d
010181 63                  A   177    			ld	h,e
010182 2EFD                A   178    			ld	l,253
010184 B7                  A   179    			or	a
010185 ED52                A   180    			sbc	hl,de
010187 DE00                A   181    			sbc	a,0
010189 ED52                A   182    			sbc	hl,de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-May-11     00:10:56     page:   9


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSEA~1\memtest\src\memtest.asm
01018B 1600                A   183    			ld	d,0
01018D 9A                  A   184    			sbc	a,d
01018E 5F                  A   185    			ld	e,a
01018F ED52                A   186    			sbc	hl,de
010191 30 01               A   187    			jr	nc,rand
010193 23                  A   188    			inc	hl
010194 22 5B 02 01         A   189    rand		ld	(seed),hl		
010198 E1                  A   190    			pop hl
010199 C9                  A   191    			ret
                           A   192    	
                           A   193    ;----------------------------------------------
                           A   194    
01019A 0B4D656D 6F727920   A   195    app_msg			db 11,"Memory test v0.01",11
0101A2 74657374 2076302E 
0101AA 30310B 
0101AD 2D2D2D2D 2D2D2D2D   A   196    				db "-----------------",11,11
0101B5 2D2D2D2D 2D2D2D2D 
0101BD 2D0B0B 
0101C0 28476172 62616765   A   197    				db "(Garbage will appear on scr
0101C8 2077696C 6C206170 
0101D0 70656172 206F6E20 
0101D8 73637265 656E2077 
0101E0 68696C73 74205652 
0101E8 414D2041 20697320 
0101F0 74657374 65642E29 
0101F8 0B0B00 
                           A   198    
0101FB 54657374 696E6720   A   199    sysram_txt		db "Testing (free) System RAM..
010203 28667265 65292053 
01020B 79737465 6D205241 
010213 4D2E2E0B 00 
010218 54657374 696E6720   A   200    vrama_txt		db "Testing VRAM A..",11,0
010220 5652414D 20412E2E 
010228 0B00 
01022A 54657374 696E6720   A   201    vramb_txt		db "Testing VRAM B..",11,0
010232 5652414D 20422E2E 
01023A 0B00 
                           A   202    
01023C 0B506173 7320636F   A   203    passes_txt		db 11,"Pass count: $"
010244 756E743A 2024 
01024A 78780B0B 00         A   204    pass_count_txt	db "xx",11,11,0
                           A   205    
01024F 4661696C 6564210B   A   206    fail_txt		db "Failed!",11,0
010257 00 
                           A   207    
010258 563412              A   208    my_seed			dw24 123456h
01025B 000000              A   209    seed			dw24 0
                           A   210    
01025E 00                  A   211    passes			db 0
                           A   212    
01025F 00                  A   213    free_mem		db 0		; dont put anything
                           A   214    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)05-May-11     00:10:56     page:  10


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\EZ80PR~1\Code\PROSEA~1\memtest\src\memtest.asm
                           A   215    ;----------------------------------------------


Errors: 0
Warnings: 0
Lines Assembled: 450
