Zilog eZ80 Macro Assembler Version 4.1 (10060805)26-Aug-11     21:28:21     page:   1


PC     Object              I  Line    Source 
                           A     1    
                           A     2    ; test deallocate call
                           A     3    
                           A     4    ;----------------------------------------------
                           A     5    
       00000000            A     6    amoeba_version_req	equ	0				; 0 = d
       00000038            A     7    prose_version_req	equ 38h				; 0 = d
       00000001            A     8    ADL_mode			equ 1				; 0 if 
       00010000            A     9    load_location		equ 10000h			; anywh
                           A    10    
                           B     0    			include	'PROSE_header.asm'
                           B     1    
                           B     2    ;----------------------------------------------
                           B     3    
                           C     0    include "ez80_cpu_equates.asm"
                           C     1    ;--- EZ80 Internal Ports ----------------------
                           C     2    
       0000009A            C     3    PB_DR			equ 09ah
       0000009B            C     4    PB_DDR			equ 09bh
       0000009C            C     5    PB_ALT1			equ 09ch
       0000009D            C     6    PB_ALT2			equ 09dh
                           C     7    
       0000009E            C     8    PC_DR			equ 09eh
       0000009F            C     9    PC_DDR			equ 09fh
       000000A0            C    10    PC_ALT1			equ 0a0h
       000000A1            C    11    PC_ALT2			equ 0a1h
                           C    12    
       000000A2            C    13    PD_DR			equ 0a2h
       000000A3            C    14    PD_DDR			equ 0a3h
       000000A4            C    15    PD_ALT1			equ 0a4h
       000000A5            C    16    PD_ALT2			equ 0a5h
                           C    17    
       000000C0            C    18    UART0_RBR		equ 0c0h
       000000C0            C    19    UART0_THR		equ 0c0h
       000000C0            C    20    UART0_BRG_L		equ 0c0h
       000000C1            C    21    UART0_BRG_H		equ 0c1h
       000000C1            C    22    UART0_IER		equ 0c1h
       000000C2            C    23    UART0_FCTL		equ 0c2h
       000000C3            C    24    UART0_LCTL		equ 0c3h
       000000C4            C    25    UART0_MCTL		equ 0c4h
       000000C5            C    26    UART0_LSR		equ 0c5h
       000000C6            C    27    UART0_MSR		equ 0c6h
                           C    28    
       000000A8            C    29    CS0_LBR			equ 0a8h			;eZ80 wait 
       000000A9            C    30    CS0_UBR			equ 0a9h
       000000AA            C    31    CS0_CTL			equ 0aah			
       000000AB            C    32    CS1_LBR			equ 0abh			;eZ80 wait 
       000000AC            C    33    CS1_UBR			equ 0ach
       000000AD            C    34    CS1_CTL			equ 0adh
       000000AE            C    35    CS2_LBR			equ 0aeh			;eZ80 wait 
       000000AF            C    36    CS2_UBR			equ 0afh
       000000B0            C    37    CS2_CTL			equ 0b0h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)26-Aug-11     21:28:21     page:   2


PC     Object              I  Line    Source ..\..\..\..\..\Includes\ez80_cpu_equates.asm
       000000B1            C    38    CS3_LBR			equ 0b1h			;eZ80 wait 
       000000B2            C    39    CS3_UBR			equ 0b2h
       000000B3            C    40    CS3_CTL			equ 0b3h
                           C    41    
       00000080            C    42    TMR0_CTL		equ 080h			;timer 0 eq
       00000081            C    43    TMR0_DR_L		equ 081h
       00000081            C    44    TMR0_RR_L		equ 081h
       00000082            C    45    TMR0_DR_H		equ 082h
       00000082            C    46    TMR0_RR_H		equ 082h
       00000092            C    47    TMR_ISS			equ 092h
                           C    48    
       000000ED            C    49    RTC_CTRL		equ 0edh			;RTC equate
       000000EC            C    50    RTC_ACTRL		equ 0ech
       000000E0            C    51    RTC_SEC			equ 0e0h
       000000E1            C    52    RTC_MIN			equ 0e1h
       000000E2            C    53    RTC_HRS			equ 0e2h
       000000E3            C    54    RTC_DOW			equ 0e3h
       000000E4            C    55    RTC_DOM			equ 0e4h
       000000E5            C    56    RTC_MON			equ 0e5h
       000000E6            C    57    RTC_YR			equ 0e6h
       000000E7            C    58    RTC_CEN			equ 0e7h
                           C    59    
                           C    60    ;----------------------------------------------
                           B     5    
                           B     6    
                           C     0    include "amoeba_hardware_equates.asm"
                           C     1    ;-- AMOEBA Hardware equates -------------------
                           C     2    
       00000000            C     3    port_pic_data  			equ 000h
       00000001            C     4    port_pic_ctrl			equ 001h
       00000001            C     5    port_hw_flags			equ 001h
       00000002            C     6    port_sdc_ctrl			equ 002h	; this is a
       00000002            C     7    port_keyboard_data		equ 002h
       00000003            C     8    port_sdc_data		 	equ 003h	
       00000004            C     9    port_memory_paging		equ 004h
       00000005            C    10    port_irq_ctrl			equ 005h
       00000005            C    11    port_irq_flags			equ 005h
       00000006            C    12    port_nmi_ack			equ 006h
       00000007            C    13    port_ps2_ctrl			equ 007h
       00000008            C    14    port_selector			equ 008h
       00000006            C    15    port_mouse_data			equ 006h
       00000009            C    16    port_clear_flags		equ 009h
                           C    17    
       00000000            C    18    sdc_power				equ 0		;(port_sd_c
       00000001            C    19    sdc_cs					equ 1		;(port_sd_c
       00000002            C    20    sdc_speed				equ 2 		;(port_sd_c
                           C    21    
       00000004            C    22    sdc_serializer_busy		equ 4 		;(port_hw_f
       00000005            C    23    vrt						equ 5		;(port_hw_f
                           C    24    
                           C    25    
                           C    26    ;-- Memory locations --------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)26-Aug-11     21:28:21     page:   3


PC     Object              I  Line    Source ..\..\..\..\..\Includes\amoeba_hardware_equates.asm
                           C    27    
       00000000            C    28    sysram_addr				equ 0000000h
       00800000            C    29    vram_a_addr				equ 0800000h
       00C00000            C    30    vram_b_addr				equ 0c00000h
                           C    31    
                           C    32    ;-- Hardware registers ------------------------
                           C    33    
       00FF0000            C    34    hw_palette				equ 0ff0000h
       00FF0800            C    35    hw_sprite_registers		equ 0ff0800h
       00FF1000            C    36    hw_video_parameters		equ 0ff1000h
       00FF1400            C    37    hw_audio_registers		equ 0ff1400h
       00FF1800            C    38    hw_video_settings		equ 0ff1800h
                           C    39    
       00FF1000            C    40    tilemap_parameters		equ hw_video_parameters
       00FF1020            C    41    bitmap_parameters		equ hw_video_parameters
                           C    42    
       00FF1800            C    43    video_control			equ hw_video_settings+0
       00FF1801            C    44    sprite_control			equ hw_video_settings+0
       00FF1802            C    45    bgnd_palette_select		equ hw_video_settings+0
       00FF1803            C    46    sprite_palette_select	equ hw_video_settings+0
       00FF1804            C    47    right_border_position	equ hw_video_settings+0
       00FF1805            C    48    irq_line_lo				equ hw_video_settings+0
       00FF1806            C    49    irq_line_hi				equ hw_video_settings+0
                           C    50    
                           C    51    ;----------------------------------------------
                           B     8    
                           B     9    
                           C     0    include "prose_kernal_labels.asm"
                           C     1    ;--------- PROSE Kernal Routine labels --------
                           C     2    		
       00000000            C     3    kr_mount_volumes				equ 00h	
       00000001            C     4    kr_get_device_info				equ 01h	
       00000002            C     5    kr_check_volume_format			equ 02h	
       00000003            C     6    kr_change_volume				equ 03h	
       00000004            C     7    kr_get_volume_info				equ 04h	
       00000005            C     8    kr_format_device				equ 05h	
       00000006            C     9    kr_make_dir						equ 06h
                           C    10    
       00000007            C    11    kr_change_dir					equ 07h	
       00000008            C    12    kr_parent_dir					equ 08h	
       00000009            C    13    kr_root_dir						equ 09h
       0000000A            C    14    kr_delete_dir					equ 0ah
       0000000B            C    15    kr_find_file					equ 0bh
       0000000C            C    16    kr_set_file_pointer				equ 0ch
       0000000D            C    17    kr_set_load_length				equ 0dh
       0000000E            C    18    kr_read_file					equ 0eh
                           C    19    
       0000000F            C    20    kr_erase_file					equ 0fh
       00000010            C    21    kr_rename_file					equ 10h
       00000011            C    22    kr_create_file					equ 11h
       00000012            C    23    kr_write_file					equ 12h
       00000013            C    24    kr_get_total_sectors			equ 13h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)26-Aug-11     21:28:21     page:   4


PC     Object              I  Line    Source ..\..\..\..\..\Includes\prose_kernal_labels.asm
       00000014            C    25    kr_dir_list_first_entry			equ 14h
       00000015            C    26    kr_dir_list_get_entry			equ 15h
       00000016            C    27    kr_dir_list_next_entry			equ 16h
                           C    28    
       00000017            C    29    kr_read_sector					equ 17h
       00000018            C    30    kr_write_sector					equ 18h
       00000019            C    31    kr_file_sector_list				equ 19h
       0000001A            C    32    kr_get_dir_cluster				equ 1ah
       0000001B            C    33    kr_set_dir_cluster				equ 1bh
       0000001C            C    34    kr_get_dir_name					equ 1ch
       0000001D            C    35    kr_wait_key						equ 1dh
       0000001E            C    36    kr_get_key						equ 1eh
                           C    37    
       0000001F            C    38    kr_get_key_mod_flags			equ 1fh
       00000020            C    39    kr_serial_receive_header		equ 20h
       00000021            C    40    kr_serial_receive_file			equ 21h
       00000022            C    41    kr_serial_send_file				equ 22h
       00000023            C    42    kr_serial_tx_byte				equ 23h
       00000024            C    43    kr_serial_rx_byte				equ 24h
                           C    44    
       00000025            C    45    kr_print_string					equ 25h
       00000026            C    46    kr_clear_screen					equ 26h
       00000027            C    47    kr_wait_vrt						equ 27h
       00000028            C    48    kr_set_cursor_position			equ 28h
       00000029            C    49    kr_plot_char					equ 29h
       0000002A            C    50    kr_set_pen						equ 2ah
       0000002B            C    51    kr_background_colours			equ 2bh
       0000002C            C    52    kr_draw_cursor					equ 2ch
       0000002D            C    53    kr_get_pen						equ 2dh
       0000002E            C    54    kr_scroll_up					equ 2eh
       0000002F            C    55    kr_os_display					equ 2fh
                           C    56    
       00000030            C    57    kr_get_display_size				equ 30h	
       00000030            C    58    kr_get_video_mode				equ 30h	;prefer
                           C    59    
       00000031            C    60    kr_get_charmap_addr_xy			equ 31h
       00000032            C    61    kr_get_cursor_position			equ 32h
                           C    62    
       00000033            C    63    kr_set_envar					equ 33h
       00000034            C    64    kr_get_envar					equ 34h
       00000035            C    65    kr_delete_envar					equ 35h
                           C    66    
       00000036            C    67    kr_set_mouse_window				equ 36h
       00000037            C    68    kr_get_mouse_position			equ 37h
       00000038            C    69    kr_get_mouse_motion				equ 38h
                           C    70    
       00000039            C    71    kr_time_delay					equ 39h
       0000003A            C    72    kr_compare_strings				equ 3ah
       0000003B            C    73    kr_hex_byte_to_ascii			equ 3bh
       0000003C            C    74    kr_ascii_to_hex_word			equ 3ch
       0000003D            C    75    kr_get_string					equ 3dh
                           C    76    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)26-Aug-11     21:28:21     page:   5


PC     Object              I  Line    Source ..\..\..\..\..\Includes\prose_kernal_labels.asm
       0000003E            C    77    kr_get_version					equ 3eh
       0000003F            C    78    kr_dont_store_registers			equ 3fh
       00000040            C    79    kr_get_font_info				equ 40h
       00000041            C    80    kr_read_rtc						equ 41h
       00000042            C    81    kr_write_rtc					equ 42h
                           C    82    
       00000043            C    83    kr_get_keymap_location			equ 43h
                           C    84    
       00000044            C    85    kr_get_os_high_mem				equ 44h
       00000044            C    86    kr_get_mem_base					equ 44h	;prefer
                           C    87    
       00000045            C    88    kr_play_audio					equ 45h
       00000046            C    89    kr_disable_audio				equ 46h
       00000047            C    90    kr_get_joysticks				equ 47h
       00000048            C    91    kr_set_video_mode				equ 48h
       00000049            C    92    kr_set_cursor_image				equ 49h
       0000004A            C    93    kr_remove_cursor				equ 4ah
       0000004B            C    94    kr_char_to_font					equ 4bh
                           C    95    
       0000004C            C    96    kr_get_disk_sector_ptr			equ 4ch
       0000004D            C    97    kr_set_timeout					equ 4dh
       0000004E            C    98    kr_test_timeout					equ 4eh
       0000004F            C    99    kr_set_pointer					equ 4fh
       00000050            C   100    kr_allocate_ram					equ 50h
       00000051            C   101    kr_deallocate_ram				equ 51h
       00000052            C   102    kr_get_mem_top					equ 52h
                           C   103    
                           C   104    ;----------------------------------------------
                           B    11    
                           B    12    
                           C     0    include "misc_system_equates.asm"
                           C     1    
                           C     2    ;-- System Equates ----------------------------
                           C     3    
       00000A00            C     4    os_location		equ 0a00h
                           C     5    
       00000A14            C     6    prose_return 	equ os_location + 14h
       00000A18            C     7    prose_relativize_hl	equ os_location + 18h
       00000A1C            C     8    prose_relative_call	equ os_location + 1ch
                           C     9    
       00000A20            C    10    prose_kernal 	equ os_location + 20h
                           C    11    
                           C    12    ;----------------------------------------------
                           C    13    
                           C    14    ; Add to sprite locations to position a 0,0 spr
                           C    15    
       0000009A            C    16    x_display_offset	equ 09ah
       00000025            C    17    y_display_offset	equ 025h
                           C    18    
                           C    19    ;----------------------------------------------
                           B    14    
                           B    15    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)26-Aug-11     21:28:21     page:   6


PC     Object              I  Line    Source ..\..\..\..\..\Includes\PROSE_header.asm
                           B    16    ;----------------------------------------------
                           B    17    ; Standard PROSE executable header
                           B    18    ;----------------------------------------------
                           B    19    
                           B    20    
                           B    21    	IF ADL_mode = 0
                           B    22    		org load_location&0ffffh	; if Z80 mo
                           B    23    	ELSE
010000                     B    24    		org load_location			; otherwise
                           B    25    	ENDIF
                           B    26    	
                           B    27    		.assume ADL = 1				; All PROSE
                           B    28    
010000 18 0E               B    29    		jr skip_header				; $0 - Jump
010002 50524F              B    30    		db 'PRO'					; $2 - ASCI
010005 000001              B    31    mb_loc	dw24 load_location			; $5 - Desi
010008 000000              B    32    		dw24 0						; $8 - If >
01000B 3800                B    33    		dw prose_version_req		; $B - If >
01000D 0000                B    34    		dw amoeba_version_req		; $D - If >
01000F 01                  B    35    		db ADL_mode					; $F - Z80 
                           B    36    
010010                     B    37    skip_header
                           B    38    	
                           B    39    	IF ADL_mode = 0 
                           B    40    		
                           B    41    mbase_offset equ load_location & 0ff0000h
                           B    42    
                           B    43    		ld a,load_location/65536	; Additiona
                           B    44    		ld MB,a						; Set MBASE
                           B    45    		jp.sis go_z80_mode			; switches 
                           B    46    
                           B    47    go_z80_mode
                           B    48    
                           B    49    		.assume ADL = 0
                           B    50    
                           B    51    	ENDIF
                           B    52    	
                           B    53    ;----------------------------------------------
                           B    54    	
                           A    12    
                           A    13    ;----------------------------------------------
                           A    14    
010010 21 47 00 01         A    15    			ld hl,msg_text
010014 3E25                A    16    			ld a,kr_print_string
010016 5BCD200A 00         A    17    			call.lil prose_kernal			
                           A    18    
01001B 01000100            A    19    			ld bc,100h
01001F 1E00                A    20    			ld e,0
010021 3E51                A    21    			ld a,kr_deallocate_ram
010023 5BCD200A 00         A    22    			call.lil prose_kernal
                           A    23    			
010028 01000200            A    24    			ld bc,200h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)26-Aug-11     21:28:21     page:   7


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\ez80p\Code\PROSEB~1\Phil\tests\PROSE3~3\src\deallocate.asm
01002C 1E01                A    25    			ld e,1
01002E 3E51                A    26    			ld a,kr_deallocate_ram
010030 5BCD200A 00         A    27    			call.lil prose_kernal
                           A    28    			
010035 01000300            A    29    			ld bc,300h
010039 1E02                A    30    			ld e,2
01003B 3E51                A    31    			ld a,kr_deallocate_ram
01003D 5BCD200A 00         A    32    			call.lil prose_kernal
                           A    33    			
                           A    34    			
010042 5BC3140A 00         A    35    			jp.lil prose_return
                           A    36    
                           A    37    ;----------------------------------------------
                           A    38    
010047 44652D41 6C6C6F63   A    39    msg_text	db "De-Allocate memory test",11,0
01004F 61746520 6D656D6F 
010057 72792074 6573740B 
01005F 00 


Errors: 0
Warnings: 0
Lines Assembled: 328
