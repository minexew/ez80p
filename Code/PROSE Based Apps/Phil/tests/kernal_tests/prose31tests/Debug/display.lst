Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Aug-11     23:43:13     page:   1


PC     Object              I  Line    Source 
                           A     1    ;----------------------------------------------
                           A     2    
       00000000            A     3    amoeba_version_req	equ	0				; 0 = d
       00000031            A     4    prose_version_req	equ 31h				; 0 = d
       00000001            A     5    ADL_mode			equ 1				; 0 if 
       00010000            A     6    load_location		equ 10000h			; anywh
                           A     7    
                           B     0    			include	'PROSE_header.asm'
                           B     1    ;--- EZ80 Internal CPU Ports ------------------
                           B     2    
       0000009A            B     3    PB_DR			equ 09ah
       0000009B            B     4    PB_DDR			equ 09bh
       0000009C            B     5    PB_ALT1			equ 09ch
       0000009D            B     6    PB_ALT2			equ 09dh
                           B     7    
       0000009E            B     8    PC_DR			equ 09eh
       0000009F            B     9    PC_DDR			equ 09fh
       000000A0            B    10    PC_ALT1			equ 0a0h
       000000A1            B    11    PC_ALT2			equ 0a1h
                           B    12    
       000000A2            B    13    PD_DR			equ 0a2h
       000000A3            B    14    PD_DDR			equ 0a3h
       000000A4            B    15    PD_ALT1			equ 0a4h
       000000A5            B    16    PD_ALT2			equ 0a5h
                           B    17    
       000000C0            B    18    UART0_RBR		equ 0c0h
       000000C0            B    19    UART0_THR		equ 0c0h
       000000C0            B    20    UART0_BRG_L		equ 0c0h
       000000C1            B    21    UART0_BRG_H		equ 0c1h
       000000C1            B    22    UART0_IER		equ 0c1h
       000000C2            B    23    UART0_FCTL		equ 0c2h
       000000C3            B    24    UART0_LCTL		equ 0c3h
       000000C4            B    25    UART0_MCTL		equ 0c4h
       000000C5            B    26    UART0_LSR		equ 0c5h
       000000C6            B    27    UART0_MSR		equ 0c6h
                           B    28    
       000000A8            B    29    CS0_LBR			equ 0a8h			;eZ80 wait 
       000000A9            B    30    CS0_UBR			equ 0a9h
       000000AA            B    31    CS0_CTL			equ 0aah			
       000000AB            B    32    CS1_LBR			equ 0abh			;eZ80 wait 
       000000AC            B    33    CS1_UBR			equ 0ach
       000000AD            B    34    CS1_CTL			equ 0adh
       000000AE            B    35    CS2_LBR			equ 0aeh			;eZ80 wait 
       000000AF            B    36    CS2_UBR			equ 0afh
       000000B0            B    37    CS2_CTL			equ 0b0h
       000000B1            B    38    CS3_LBR			equ 0b1h			;eZ80 wait 
       000000B2            B    39    CS3_UBR			equ 0b2h
       000000B3            B    40    CS3_CTL			equ 0b3h
                           B    41    
       00000080            B    42    TMR0_CTL		equ 080h			;timer 0 eq
       00000081            B    43    TMR0_DR_L		equ 081h
       00000081            B    44    TMR0_RR_L		equ 081h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Aug-11     23:43:13     page:   2


PC     Object              I  Line    Source ..\..\..\..\..\Includes\PROSE_header.asm
       00000082            B    45    TMR0_DR_H		equ 082h
       00000082            B    46    TMR0_RR_H		equ 082h
       00000092            B    47    TMR_ISS			equ 092h
                           B    48    
       000000ED            B    49    RTC_CTRL		equ 0edh			;RTC equate
       000000EC            B    50    RTC_ACTRL		equ 0ech
       000000E0            B    51    RTC_SEC			equ 0e0h
       000000E1            B    52    RTC_MIN			equ 0e1h
       000000E2            B    53    RTC_HRS			equ 0e2h
       000000E3            B    54    RTC_DOW			equ 0e3h
       000000E4            B    55    RTC_DOM			equ 0e4h
       000000E5            B    56    RTC_MON			equ 0e5h
       000000E6            B    57    RTC_YR			equ 0e6h
       000000E7            B    58    RTC_CEN			equ 0e7h
                           B    59    
                           B    60    ;-- EZ80P Hardware equates --------------------
                           B    61    
       00000000            B    62    port_pic_data  			equ 000h
       00000001            B    63    port_pic_ctrl			equ 001h
       00000001            B    64    port_hw_flags			equ 001h
       00000002            B    65    port_sdc_ctrl			equ 002h	; this is a
       00000002            B    66    port_keyboard_data		equ 002h
       00000003            B    67    port_sdc_data		 	equ 003h	
       00000004            B    68    port_memory_paging		equ 004h
       00000005            B    69    port_irq_ctrl			equ 005h
       00000006            B    70    port_nmi_ack			equ 006h
       00000007            B    71    port_ps2_ctrl			equ 007h
       00000008            B    72    port_selector			equ 008h
       00000006            B    73    port_mouse_data			equ 006h
       00000009            B    74    port_clear_flags		equ 009h
                           B    75    
       00000000            B    76    sdc_power				equ 0		;(port_sd_c
       00000001            B    77    sdc_cs					equ 1		;(port_sd_c
       00000002            B    78    sdc_speed				equ 2 		;(port_sd_c
                           B    79    
       00000004            B    80    sdc_serializer_busy		equ 4 		;(port_hw_f
       00000005            B    81    vrt						equ 5		;(port_hw_f
                           B    82    
                           B    83    
                           B    84    ;-- Memory locations --------------------------
                           B    85    
       00000000            B    86    sysram_addr				equ 0000000h
       00800000            B    87    vram_a_addr				equ 0800000h
       00C00000            B    88    vram_b_addr				equ 0c00000h
                           B    89    
                           B    90    ;-- Hardware registers ------------------------
                           B    91    
       00FF0000            B    92    hw_palette				equ 0ff0000h
       00FF0800            B    93    hw_sprite_registers		equ 0ff0800h
       00FF1000            B    94    hw_video_parameters		equ 0ff1000h
       00FF1400            B    95    hw_audio_registers		equ 0ff1400h
       00FF1800            B    96    hw_video_settings		equ 0ff1800h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Aug-11     23:43:13     page:   3


PC     Object              I  Line    Source ..\..\..\..\..\Includes\PROSE_header.asm
                           B    97    
       00FF1000            B    98    tilemap_parameters		equ hw_video_parameters
       00FF1020            B    99    bitmap_parameters		equ hw_video_parameters
                           B   100    
       00FF1800            B   101    video_control			equ hw_video_settings+0
       00FF1801            B   102    sprite_control			equ hw_video_settings+0
       00FF1802            B   103    bgnd_palette_select		equ hw_video_settings+0
       00FF1803            B   104    sprite_palette_select	equ hw_video_settings+0
       00FF1804            B   105    right_border_position	equ hw_video_settings+0
                           B   106    
                           B   107    ;----------------------------------------------
                           B   108    
       00000A00            B   109    os_start 	equ 0a00h
                           B   110    
       00000A14            B   111    prose_return equ os_start+14h
       00000A20            B   112    prose_kernal equ os_start+20h
                           B   113    
                           B   114    ;----------------------------------------------
                           B   115    ; Kernal Jump Table values for mode PROSE
                           B   116    ;----------------------------------------------
                           B   117    		
       00000000            B   118    kr_mount_volumes				equ 00h	
       00000001            B   119    kr_get_device_info				equ 01h	
       00000002            B   120    kr_check_volume_format			equ 02h	
       00000003            B   121    kr_change_volume				equ 03h	
       00000004            B   122    kr_get_volume_info				equ 04h	
       00000005            B   123    kr_format_device				equ 05h	
       00000006            B   124    kr_make_dir						equ 06h
                           B   125    
       00000007            B   126    kr_change_dir					equ 07h	
       00000008            B   127    kr_parent_dir					equ 08h	
       00000009            B   128    kr_root_dir						equ 09h
       0000000A            B   129    kr_delete_dir					equ 0ah
       0000000B            B   130    kr_find_file					equ 0bh
       0000000C            B   131    kr_set_file_pointer				equ 0ch
       0000000D            B   132    kr_set_load_length				equ 0dh
       0000000E            B   133    kr_read_file					equ 0eh
                           B   134    
       0000000F            B   135    kr_erase_file					equ 0fh
       00000010            B   136    kr_rename_file					equ 10h
       00000011            B   137    kr_create_file					equ 11h
       00000012            B   138    kr_write_file					equ 12h
       00000013            B   139    kr_get_total_sectors			equ 13h
       00000014            B   140    kr_dir_list_first_entry			equ 14h
       00000015            B   141    kr_dir_list_get_entry			equ 15h
       00000016            B   142    kr_dir_list_next_entry			equ 16h
                           B   143    
       00000017            B   144    kr_read_sector					equ 17h
       00000018            B   145    kr_write_sector					equ 18h
       00000019            B   146    kr_file_sector_list				equ 19h
       0000001A            B   147    kr_get_dir_cluster				equ 1ah
       0000001B            B   148    kr_set_dir_cluster				equ 1bh
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Aug-11     23:43:13     page:   4


PC     Object              I  Line    Source ..\..\..\..\..\Includes\PROSE_header.asm
       0000001C            B   149    kr_get_dir_name					equ 1ch
       0000001D            B   150    kr_wait_key						equ 1dh
       0000001E            B   151    kr_get_key						equ 1eh
                           B   152    
       0000001F            B   153    kr_get_key_mod_flags			equ 1fh
       00000020            B   154    kr_serial_receive_header		equ 20h
       00000021            B   155    kr_serial_receive_file			equ 21h
       00000022            B   156    kr_serial_send_file				equ 22h
       00000023            B   157    kr_serial_tx_byte				equ 23h
       00000024            B   158    kr_serial_rx_byte				equ 24h
                           B   159    
       00000025            B   160    kr_print_string					equ 25h
       00000026            B   161    kr_clear_screen					equ 26h
       00000027            B   162    kr_wait_vrt						equ 27h
       00000028            B   163    kr_set_cursor_position			equ 28h
       00000029            B   164    kr_plot_char					equ 29h
       0000002A            B   165    kr_set_pen						equ 2ah
       0000002B            B   166    kr_background_colours			equ 2bh
       0000002C            B   167    kr_draw_cursor					equ 2ch
       0000002D            B   168    kr_get_pen						equ 2dh
       0000002E            B   169    kr_scroll_up					equ 2eh
       0000002F            B   170    kr_os_display					equ 2fh
                           B   171    
       00000030            B   172    kr_get_display_size				equ 30h	
       00000030            B   173    kr_get_video_mode				equ 30h	;prefer
                           B   174    
       00000031            B   175    kr_get_charmap_addr_xy			equ 31h
       00000032            B   176    kr_get_cursor_position			equ 32h
                           B   177    
       00000033            B   178    kr_set_envar					equ 33h
       00000034            B   179    kr_get_envar					equ 34h
       00000035            B   180    kr_delete_envar					equ 35h
                           B   181    
       00000036            B   182    kr_set_mouse_window				equ 36h
       00000037            B   183    kr_get_mouse_position			equ 37h
       00000038            B   184    kr_get_mouse_motion				equ 38h
                           B   185    
       00000039            B   186    kr_time_delay					equ 39h
       0000003A            B   187    kr_compare_strings				equ 3ah
       0000003B            B   188    kr_hex_byte_to_ascii			equ 3bh
       0000003C            B   189    kr_ascii_to_hex_word			equ 3ch
       0000003D            B   190    kr_get_string					equ 3dh
                           B   191    
       0000003E            B   192    kr_get_version					equ 3eh
       0000003F            B   193    kr_dont_store_registers			equ 3fh
       00000040            B   194    kr_get_font_info				equ 40h
       00000041            B   195    kr_read_rtc						equ 41h
       00000042            B   196    kr_write_rtc					equ 42h
                           B   197    
       00000043            B   198    kr_get_keymap_location			equ 43h
       00000044            B   199    kr_get_os_high_mem				equ 44h
                           B   200    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Aug-11     23:43:13     page:   5


PC     Object              I  Line    Source ..\..\..\..\..\Includes\PROSE_header.asm
       00000045            B   201    kr_play_audio					equ 45h
       00000046            B   202    kr_disable_audio				equ 46h
       00000047            B   203    kr_get_joysticks				equ 47h
       00000048            B   204    kr_set_video_mode				equ 48h
       00000049            B   205    kr_set_cursor_image				equ 49h
       0000004A            B   206    kr_remove_cursor				equ 4ah
       0000004B            B   207    kr_char_to_font				equ 4bh
                           B   208    
                           B   209    ;----------------------------------------------
                           B   210    ; Standard PROSE executable header
                           B   211    ;----------------------------------------------
                           B   212    
                           B   213    
                           B   214    	IF ADL_mode = 0
                           B   215    		org load_location&0ffffh	; if Z80 mo
                           B   216    	ELSE
010000                     B   217    		org load_location			; otherwise
                           B   218    	ENDIF
                           B   219    	
                           B   220    		.assume ADL = 1				; All PROSE
                           B   221    
010000 18 0E               B   222    		jr skip_header				; $0 - Jump
010002 50524F              B   223    		db 'PRO'					; $2 - ASCI
010005 000001              B   224    mb_loc	dw24 load_location			; $5 - Desi
010008 000000              B   225    		dw24 0						; $8 - If >
01000B 3100                B   226    		dw prose_version_req		; $B - If >
01000D 0000                B   227    		dw amoeba_version_req		; $D - If >
01000F 01                  B   228    		db ADL_mode					; $F - Z80 
                           B   229    
010010                     B   230    skip_header
                           B   231    	
                           B   232    	IF ADL_mode = 0 
                           B   233    		
                           B   234    mbase_offset equ load_location & 0ff0000h
                           B   235    
                           B   236    		ld a,load_location/65536	; Additiona
                           B   237    		ld MB,a						; Set MBASE
                           B   238    		jp.sis go_z80_mode			; switches 
                           B   239    
                           B   240    go_z80_mode
                           B   241    
                           B   242    		.assume ADL = 0
                           B   243    
                           B   244    	ENDIF
                           B   245    	
                           B   246    ;----------------------------------------------
                           B   247    	
                           A     9    
                           A    10    ;-----------PART 1-----------------------------
                           A    11    
010010 3E44                A    12    			ld a,kr_get_os_high_mem
010012 5BCD200A 00         A    13    			call.lil prose_kernal			;ge
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Aug-11     23:43:13     page:   6


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\ez80p\Code\PROSEB~1\Phil\tests\PROSE3~1\src\display.asm
010017 ED53 FB 00 01       A    14    			ld (free_vram_start),de
                           A    15    
01001C 21 FE 00 01         A    16    			ld hl,msg1_text
010020 3E25                A    17    			ld a,kr_print_string			; s
010022 5BCD200A 00         A    18    			call.lil prose_kernal			
010027 3E1D                A    19    			ld a,kr_wait_key				; W
010029 5BCD200A 00         A    20    			call.lil prose_kernal
                           A    21    	
01002E CD AF 00 01         A    22    			call go_640x480_bitmap
                           A    23    			
010032 ED5B FB 00 01       A    24    			ld de,(free_vram_start)			; f
010037 21000088            A    25    			ld hl,880000h
01003B AF                  A    26    			xor a
01003C ED52                A    27    			sbc hl,de						
01003E EB                  A    28    			ex de,hl						;DE
01003F D5                  A    29    			push de
010040 C1                  A    30    			pop bc							;BC
010041 0B                  A    31    			dec bc
010042 0B                  A    32    			dec bc
010043 3601                A    33    			ld (hl),1						;fi
010045 23                  A    34    			inc hl
010046 3606                A    35    			ld (hl),6
010048 23                  A    36    			inc hl
010049 E5                  A    37    			push hl
01004A D1                  A    38    			pop de
01004B 2B                  A    39    			dec hl
01004C 2B                  A    40    			dec hl
01004D EDB0                A    41    			ldir
                           A    42    
01004F 3E1D                A    43    			ld a,kr_wait_key				; W
010051 5BCD200A 00         A    44    			call.lil prose_kernal
                           A    45    
                           A    46    
                           A    47    ;-----------PART 2-----------------------------
                           A    48    			
010056 3E2F                A    49    			ld a,kr_os_display				;re
010058 5BCD200A 00         A    50    			call.lil prose_kernal
                           A    51    	
01005D 21 65 01 01         A    52    			ld hl,msg2_text
010061 3E25                A    53    			ld a,kr_print_string			;sh
010063 5BCD200A 00         A    54    			call.lil prose_kernal	
010068 3E1D                A    55    			ld a,kr_wait_key				; W
01006A 5BCD200A 00         A    56    			call.lil prose_kernal
                           A    57    
01006F CD E8 00 01         A    58    			call go_320x240_bitmap			;go
                           A    59    
010073 ED5B FB 00 01       A    60    			ld de,(free_vram_start)
010078 21000088            A    61    			ld hl,880000h
01007C AF                  A    62    			xor a
01007D ED52                A    63    			sbc hl,de						
01007F EB                  A    64    			ex de,hl						;DE
010080 D5                  A    65    			push de
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Aug-11     23:43:13     page:   7


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\ez80p\Code\PROSEB~1\Phil\tests\PROSE3~1\src\display.asm
010081 C1                  A    66    			pop bc							;BC
010082 0B                  A    67    			dec bc
010083 0B                  A    68    			dec bc
010084 3602                A    69    			ld (hl),2						;fi
010086 23                  A    70    			inc hl
010087 3607                A    71    			ld (hl),7
010089 23                  A    72    			inc hl
01008A E5                  A    73    			push hl
01008B D1                  A    74    			pop de
01008C 2B                  A    75    			dec hl
01008D 2B                  A    76    			dec hl
01008E EDB0                A    77    			ldir
                           A    78    
010090 3E1D                A    79    			ld a,kr_wait_key				; W
010092 5BCD200A 00         A    80    			call.lil prose_kernal
                           A    81    
010097 3E2F                A    82    			ld a,kr_os_display				;re
010099 5BCD200A 00         A    83    			call.lil prose_kernal
01009E 21 CD 01 01         A    84    			ld hl,msg3_text
0100A2 3E25                A    85    			ld a,kr_print_string
0100A4 5BCD200A 00         A    86    			call.lil prose_kernal	
                           A    87    	
0100A9 AF                  A    88    			xor a
0100AA 5BC3140A 00         A    89    			jp.lil prose_return
                           A    90    
                           A    91    ;----------------------------------------------
                           A    92    
       00000000            A    93    bm_modulo		equ 0
       00000001            A    94    bm_pixel_step	equ 1
       00000000            A    95    bm_base			equ 0
                           A    96    
0100AF                     A    97    go_640x480_bitmap
                           A    98    
0100AF 3E00                A    99    				ld a,0000b
0100B1 320018FF            A   100    				ld (video_control),a			0100B5 DD212010 FF         A   101    				ld ix,bitmap_parameters			0100BA DD36104F            A   102    				ld (ix+10h),0+(640/8)-1			                           A   103    
0100BE                     A   104    common_parameters
                           A   105    
0100BE 3E00                A   106    				ld a,0
0100C0 320218FF            A   107    				ld (bgnd_palette_select),a
0100C4 3E63                A   108    				ld a,99
0100C6 320418FF            A   109    				ld (right_border_position),a
                           A   110    				
0100CA ED5B FB 00 01       A   111    				ld de,(free_vram_start)
0100CF DD1F00              A   112    				ld (ix),de
0100D2 11010000            A   113    				ld de,bm_pixel_step
0100D6 DD1F04              A   114    				ld (ix+04h),de
0100D9 11000000            A   115    				ld de,0
0100DD DD1F08              A   116    				ld (ix+08h),de
0100E0 11000000            A   117    				ld de,bm_modulo
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Aug-11     23:43:13     page:   8


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\ez80p\Code\PROSEB~1\Phil\tests\PROSE3~1\src\display.asm
0100E4 DD1F0C              A   118    				ld (ix+0ch),de					0100E7 C9                  A   119    				ret
                           A   120    
0100E8                     A   121    go_320x240_bitmap
                           A   122    
0100E8 3E06                A   123    				ld a,0110b
0100EA 320018FF            A   124    				ld (video_control),a			0100EE DD212010 FF         A   125    				ld ix,bitmap_parameters			0100F3 DD361027            A   126    				ld (ix+10h),0+(320/8)-1			0100F7 C3 BE 00 01         A   127    				jp common_parameters
                           A   128    	
                           A   129    
                           A   130    ;----------------------------------------------
                           A   131    
0100FB 000000              A   132    free_vram_start	dw24 0
                           A   133    
                           A   134    
0100FE 36343078 34383020   A   135    msg1_text	db '640x480 - Press a key to fill V
010106 2D205072 65737320 
01010E 61206B65 7920746F 
010116 2066696C 6C205652 
01011E 414D2075 6E757365 
010126 64206279 204F5320 
01012E 77697468 20353520 
010136 696E2036 34307834 
01013E 3830206D 6F64650B 
010146 7468656E 20707265   A   136    			db 'then press key for next part',1
01014E 7373206B 65792066 
010156 6F72206E 65787420 
01015E 70617274 0B0B00 
010165 4F4B2C20 4E6F7720   A   137    msg2_text	db 'OK, Now press a key to fill VRA
01016D 70726573 73206120 
010175 6B657920 746F2066 
01017D 696C6C20 5652414D 
010185 20756E75 73656420 
01018D 6279204F 53207769 
010195 74682041 4120696E 
01019D 20333230 78323430 
0101A5 206D6F64 650B 
0101AB 7468656E 20707265   A   138    			db 'then press key to quit to PROSE
0101B3 7373206B 65792074 
0101BB 6F207175 69742074 
0101C3 6F205052 4F53450B 
0101CB 0B00 
0101CD 416C6C20 646F6E65   A   139    msg3_text	db 'All done',11,0
0101D5 0B00 
                           A   140    
                           A   141    ;----------------------------------------------
Zilog eZ80 Macro Assembler Version 4.1 (10060805)03-Aug-11     23:43:13     page:   9


PC     Object              I  Line    Source 


Errors: 0
Warnings: 0
Lines Assembled: 389
