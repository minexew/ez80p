Zilog eZ80 Macro Assembler Version 4.1 (10060805)25-Aug-11     16:04:35     page:   1


PC     Object              I  Line    Source 
                           A     1    
                           A     2    ; test relative code
                           A     3    
                           A     4    ;----------------------------------------------
                           A     5    
                           B     0    include "ez80_cpu_equates.asm"
                           B     1    ;--- EZ80 Internal Ports ----------------------
                           B     2    
       0000009A            B     3    PB_DR			equ 09ah
       0000009B            B     4    PB_DDR			equ 09bh
       0000009C            B     5    PB_ALT1			equ 09ch
       0000009D            B     6    PB_ALT2			equ 09dh
                           B     7    
       0000009E            B     8    PC_DR			equ 09eh
       0000009F            B     9    PC_DDR			equ 09fh
       000000A0            B    10    PC_ALT1			equ 0a0h
       000000A1            B    11    PC_ALT2			equ 0a1h
                           B    12    
       000000A2            B    13    PD_DR			equ 0a2h
       000000A3            B    14    PD_DDR			equ 0a3h
       000000A4            B    15    PD_ALT1			equ 0a4h
       000000A5            B    16    PD_ALT2			equ 0a5h
                           B    17    
       000000C0            B    18    UART0_RBR		equ 0c0h
       000000C0            B    19    UART0_THR		equ 0c0h
       000000C0            B    20    UART0_BRG_L		equ 0c0h
       000000C1            B    21    UART0_BRG_H		equ 0c1h
       000000C1            B    22    UART0_IER		equ 0c1h
       000000C2            B    23    UART0_FCTL		equ 0c2h
       000000C3            B    24    UART0_LCTL		equ 0c3h
       000000C4            B    25    UART0_MCTL		equ 0c4h
       000000C5            B    26    UART0_LSR		equ 0c5h
       000000C6            B    27    UART0_MSR		equ 0c6h
                           B    28    
       000000A8            B    29    CS0_LBR			equ 0a8h			;eZ80 wait 
       000000A9            B    30    CS0_UBR			equ 0a9h
       000000AA            B    31    CS0_CTL			equ 0aah			
       000000AB            B    32    CS1_LBR			equ 0abh			;eZ80 wait 
       000000AC            B    33    CS1_UBR			equ 0ach
       000000AD            B    34    CS1_CTL			equ 0adh
       000000AE            B    35    CS2_LBR			equ 0aeh			;eZ80 wait 
       000000AF            B    36    CS2_UBR			equ 0afh
       000000B0            B    37    CS2_CTL			equ 0b0h
       000000B1            B    38    CS3_LBR			equ 0b1h			;eZ80 wait 
       000000B2            B    39    CS3_UBR			equ 0b2h
       000000B3            B    40    CS3_CTL			equ 0b3h
                           B    41    
       00000080            B    42    TMR0_CTL		equ 080h			;timer 0 eq
       00000081            B    43    TMR0_DR_L		equ 081h
       00000081            B    44    TMR0_RR_L		equ 081h
       00000082            B    45    TMR0_DR_H		equ 082h
       00000082            B    46    TMR0_RR_H		equ 082h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)25-Aug-11     16:04:35     page:   2


PC     Object              I  Line    Source ..\..\..\..\..\Includes\ez80_cpu_equates.asm
       00000092            B    47    TMR_ISS			equ 092h
                           B    48    
       000000ED            B    49    RTC_CTRL		equ 0edh			;RTC equate
       000000EC            B    50    RTC_ACTRL		equ 0ech
       000000E0            B    51    RTC_SEC			equ 0e0h
       000000E1            B    52    RTC_MIN			equ 0e1h
       000000E2            B    53    RTC_HRS			equ 0e2h
       000000E3            B    54    RTC_DOW			equ 0e3h
       000000E4            B    55    RTC_DOM			equ 0e4h
       000000E5            B    56    RTC_MON			equ 0e5h
       000000E6            B    57    RTC_YR			equ 0e6h
       000000E7            B    58    RTC_CEN			equ 0e7h
                           B    59    
                           B    60    ;----------------------------------------------
                           B     0    include "amoeba_hardware_equates.asm"
                           B     1    ;-- AMOEBA Hardware equates -------------------
                           B     2    
       00000000            B     3    port_pic_data  			equ 000h
       00000001            B     4    port_pic_ctrl			equ 001h
       00000001            B     5    port_hw_flags			equ 001h
       00000002            B     6    port_sdc_ctrl			equ 002h	; this is a
       00000002            B     7    port_keyboard_data		equ 002h
       00000003            B     8    port_sdc_data		 	equ 003h	
       00000004            B     9    port_memory_paging		equ 004h
       00000005            B    10    port_irq_ctrl			equ 005h
       00000005            B    11    port_irq_flags			equ 005h
       00000006            B    12    port_nmi_ack			equ 006h
       00000007            B    13    port_ps2_ctrl			equ 007h
       00000008            B    14    port_selector			equ 008h
       00000006            B    15    port_mouse_data			equ 006h
       00000009            B    16    port_clear_flags		equ 009h
                           B    17    
       00000000            B    18    sdc_power				equ 0		;(port_sd_c
       00000001            B    19    sdc_cs					equ 1		;(port_sd_c
       00000002            B    20    sdc_speed				equ 2 		;(port_sd_c
                           B    21    
       00000004            B    22    sdc_serializer_busy		equ 4 		;(port_hw_f
       00000005            B    23    vrt						equ 5		;(port_hw_f
                           B    24    
                           B    25    
                           B    26    ;-- Memory locations --------------------------
                           B    27    
       00000000            B    28    sysram_addr				equ 0000000h
       00800000            B    29    vram_a_addr				equ 0800000h
       00C00000            B    30    vram_b_addr				equ 0c00000h
                           B    31    
                           B    32    ;-- Hardware registers ------------------------
                           B    33    
       00FF0000            B    34    hw_palette				equ 0ff0000h
       00FF0800            B    35    hw_sprite_registers		equ 0ff0800h
       00FF1000            B    36    hw_video_parameters		equ 0ff1000h
       00FF1400            B    37    hw_audio_registers		equ 0ff1400h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)25-Aug-11     16:04:35     page:   3


PC     Object              I  Line    Source ..\..\..\..\..\Includes\amoeba_hardware_equates.asm
       00FF1800            B    38    hw_video_settings		equ 0ff1800h
                           B    39    
       00FF1000            B    40    tilemap_parameters		equ hw_video_parameters
       00FF1020            B    41    bitmap_parameters		equ hw_video_parameters
                           B    42    
       00FF1800            B    43    video_control			equ hw_video_settings+0
       00FF1801            B    44    sprite_control			equ hw_video_settings+0
       00FF1802            B    45    bgnd_palette_select		equ hw_video_settings+0
       00FF1803            B    46    sprite_palette_select	equ hw_video_settings+0
       00FF1804            B    47    right_border_position	equ hw_video_settings+0
       00FF1805            B    48    irq_line_lo				equ hw_video_settings+0
       00FF1806            B    49    irq_line_hi				equ hw_video_settings+0
                           B    50    
                           B    51    ;----------------------------------------------
                           B     0    include "prose_kernal_labels.asm"
                           B     1    ;--------- PROSE Kernal Routine labels --------
                           B     2    		
       00000000            B     3    kr_mount_volumes				equ 00h	
       00000001            B     4    kr_get_device_info				equ 01h	
       00000002            B     5    kr_check_volume_format			equ 02h	
       00000003            B     6    kr_change_volume				equ 03h	
       00000004            B     7    kr_get_volume_info				equ 04h	
       00000005            B     8    kr_format_device				equ 05h	
       00000006            B     9    kr_make_dir						equ 06h
                           B    10    
       00000007            B    11    kr_change_dir					equ 07h	
       00000008            B    12    kr_parent_dir					equ 08h	
       00000009            B    13    kr_root_dir						equ 09h
       0000000A            B    14    kr_delete_dir					equ 0ah
       0000000B            B    15    kr_find_file					equ 0bh
       0000000C            B    16    kr_set_file_pointer				equ 0ch
       0000000D            B    17    kr_set_load_length				equ 0dh
       0000000E            B    18    kr_read_file					equ 0eh
                           B    19    
       0000000F            B    20    kr_erase_file					equ 0fh
       00000010            B    21    kr_rename_file					equ 10h
       00000011            B    22    kr_create_file					equ 11h
       00000012            B    23    kr_write_file					equ 12h
       00000013            B    24    kr_get_total_sectors			equ 13h
       00000014            B    25    kr_dir_list_first_entry			equ 14h
       00000015            B    26    kr_dir_list_get_entry			equ 15h
       00000016            B    27    kr_dir_list_next_entry			equ 16h
                           B    28    
       00000017            B    29    kr_read_sector					equ 17h
       00000018            B    30    kr_write_sector					equ 18h
       00000019            B    31    kr_file_sector_list				equ 19h
       0000001A            B    32    kr_get_dir_cluster				equ 1ah
       0000001B            B    33    kr_set_dir_cluster				equ 1bh
       0000001C            B    34    kr_get_dir_name					equ 1ch
       0000001D            B    35    kr_wait_key						equ 1dh
       0000001E            B    36    kr_get_key						equ 1eh
                           B    37    
Zilog eZ80 Macro Assembler Version 4.1 (10060805)25-Aug-11     16:04:35     page:   4


PC     Object              I  Line    Source ..\..\..\..\..\Includes\prose_kernal_labels.asm
       0000001F            B    38    kr_get_key_mod_flags			equ 1fh
       00000020            B    39    kr_serial_receive_header		equ 20h
       00000021            B    40    kr_serial_receive_file			equ 21h
       00000022            B    41    kr_serial_send_file				equ 22h
       00000023            B    42    kr_serial_tx_byte				equ 23h
       00000024            B    43    kr_serial_rx_byte				equ 24h
                           B    44    
       00000025            B    45    kr_print_string					equ 25h
       00000026            B    46    kr_clear_screen					equ 26h
       00000027            B    47    kr_wait_vrt						equ 27h
       00000028            B    48    kr_set_cursor_position			equ 28h
       00000029            B    49    kr_plot_char					equ 29h
       0000002A            B    50    kr_set_pen						equ 2ah
       0000002B            B    51    kr_background_colours			equ 2bh
       0000002C            B    52    kr_draw_cursor					equ 2ch
       0000002D            B    53    kr_get_pen						equ 2dh
       0000002E            B    54    kr_scroll_up					equ 2eh
       0000002F            B    55    kr_os_display					equ 2fh
                           B    56    
       00000030            B    57    kr_get_display_size				equ 30h	
       00000030            B    58    kr_get_video_mode				equ 30h	;prefer
                           B    59    
       00000031            B    60    kr_get_charmap_addr_xy			equ 31h
       00000032            B    61    kr_get_cursor_position			equ 32h
                           B    62    
       00000033            B    63    kr_set_envar					equ 33h
       00000034            B    64    kr_get_envar					equ 34h
       00000035            B    65    kr_delete_envar					equ 35h
                           B    66    
       00000036            B    67    kr_set_mouse_window				equ 36h
       00000037            B    68    kr_get_mouse_position			equ 37h
       00000038            B    69    kr_get_mouse_motion				equ 38h
                           B    70    
       00000039            B    71    kr_time_delay					equ 39h
       0000003A            B    72    kr_compare_strings				equ 3ah
       0000003B            B    73    kr_hex_byte_to_ascii			equ 3bh
       0000003C            B    74    kr_ascii_to_hex_word			equ 3ch
       0000003D            B    75    kr_get_string					equ 3dh
                           B    76    
       0000003E            B    77    kr_get_version					equ 3eh
       0000003F            B    78    kr_dont_store_registers			equ 3fh
       00000040            B    79    kr_get_font_info				equ 40h
       00000041            B    80    kr_read_rtc						equ 41h
       00000042            B    81    kr_write_rtc					equ 42h
                           B    82    
       00000043            B    83    kr_get_keymap_location			equ 43h
       00000044            B    84    kr_get_os_high_mem				equ 44h
                           B    85    
       00000045            B    86    kr_play_audio					equ 45h
       00000046            B    87    kr_disable_audio				equ 46h
       00000047            B    88    kr_get_joysticks				equ 47h
       00000048            B    89    kr_set_video_mode				equ 48h
Zilog eZ80 Macro Assembler Version 4.1 (10060805)25-Aug-11     16:04:35     page:   5


PC     Object              I  Line    Source ..\..\..\..\..\Includes\prose_kernal_labels.asm
       00000049            B    90    kr_set_cursor_image				equ 49h
       0000004A            B    91    kr_remove_cursor				equ 4ah
       0000004B            B    92    kr_char_to_font					equ 4bh
                           B    93    
       0000004C            B    94    kr_get_disk_sector_ptr			equ 4ch
       0000004D            B    95    kr_set_timeout					equ 4dh
       0000004E            B    96    kr_test_timeout					equ 4eh
       0000004F            B    97    kr_set_pointer					equ 4fh
                           B    98    	
                           B    99    ;----------------------------------------------
                           B     0    include "misc_system_equates.asm"
                           B     1    
                           B     2    ;-- System Equates ----------------------------
                           B     3    
       00000A00            B     4    os_location		equ 0a00h
                           B     5    
       00000A14            B     6    prose_return 	equ os_location + 14h
       00000A18            B     7    prose_relativize_hl	equ os_location + 18h
       00000A1C            B     8    prose_relative_call	equ os_location + 1ch
                           B     9    
       00000A20            B    10    prose_kernal 	equ os_location + 20h
                           B    11    
                           B    12    ;----------------------------------------------
                           B    13    
                           B    14    ; Add to sprite locations to position a 0,0 spr
                           B    15    
       0000009A            B    16    x_display_offset	equ 09ah
       00000025            B    17    y_display_offset	equ 025h
                           B    18    
                           B    19    ;----------------------------------------------
                           A    10    
                           A    11    
                           A    12    		.assume ADL = 1					; All P
                           A    13    
                           A    14    ;----------------------------------------------
                           A    15    ; MACROS assisting with relative code:
                           A    16    ;----------------------------------------------
                           A    17    ;
                           A    18    ; "LD_HL_RELATIVE" - Relative location pointer 
                           A    19    ;
                           A    20    ; "JP_HL_RELATIVE" - relative version of JP (HL
                           A    21    ;
                           A    22    ; "CALL_HL_RELATIVE" - allows absolute relative
                           A    23    ;
                           A    24    ;----------------------------------------------
                           A    25    
                           A    26    LD_HL_RELATIVE : MACRO abs_hl_loc
                           A    27    	
                           A    28    $$addr	ld hl,abs_hl_loc-$$addr			;these 
                           A    29    		call prose_relativize_hl		;do not
                           A    30    
                           A    31    ENDMACRO
Zilog eZ80 Macro Assembler Version 4.1 (10060805)25-Aug-11     16:04:35     page:   6


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\ez80p\Code\PROSEB~1\Phil\tests\RELATI~1\src\relative.asm
                           A    32    
                           A    33    
                           A    34    JP_HL_RELATIVE : MACRO abs_jp_loc
                           A    35    
                           A    36    $$jaddr	ld hl,abs_jp_loc-$$jaddr		;these 
                           A    37    		call prose_relativize_hl		;do not
                           A    38    		jp (hl)
                           A    39    
                           A    40    ENDMACRO
                           A    41    
                           A    42    
                           A    43    CALL_HL_RELATIVE : MACRO abs_call_loc
                           A    44    	
                           A    45    $$caddr	ld hl,abs_call_loc-$$caddr		;these 
                           A    46    		call prose_relative_call		;do not
                           A    47    				
                           A    48    ENDMACRO
                           A    49    
                           A    50    ;----------------------------------------------
                           A    51    ; Relative code - Remember:
                           A    52    ; Cannot use JP for jumps unless "relativized" 
                           A    53    ; Absolute labels must be adjusted with "prose_
                           A    54    ; CALLs must be indirect (set HL to address, ca
                           A    55    ;----------------------------------------------
                           A    56    
       00020000            A    57    native_location equ 020000h				; this 
                           A    58    
020000                     A    59    			org native_location
                           A    60    						
                           A    61    ;----------------------------------------------
                           A    62    
                           A    63    			LD_HL_RELATIVE msg1
020008 3E25                A    64    			ld a,kr_print_string
02000A 5BCD200A 00         A    65    			call.lil prose_kernal	
                           A    66    			
                           A    67    			CALL_HL_RELATIVE some_routine
                           A    68    			
                           A    69    			JP_HL_RELATIVE cobblers
                           A    70    			
020020 C3 20 00 02         A    71    endloop		jp endloop
                           A    72    			
                           A    73    
020024                     A    74    cobblers	LD_HL_RELATIVE msg2
02002C 3E25                A    75    			ld a,kr_print_string
02002E 5BCD200A 00         A    76    			call.lil prose_kernal	
                           A    77    	
020033 AF                  A    78    			xor a
020034 5BC3140A 00         A    79    			jp.lil prose_return
                           A    80    
                           A    81    ;----------------------------------------------
                           A    82    
020039                     A    83    some_routine
Zilog eZ80 Macro Assembler Version 4.1 (10060805)25-Aug-11     16:04:35     page:   7


PC     Object              I  Line    Source E:\MY_OWN~1\Coding\ez80p\Code\PROSEB~1\Phil\tests\RELATI~1\src\relative.asm
                           A    84    
020039 3EF8                A    85    			ld a,0f8h
02003B 320000FF            A    86    			ld (hw_palette),a
02003F 01000000            A    87    			ld bc,0
020043 0B                  A    88    lp1			dec bc
020044 78                  A    89    			ld a,b
020045 B1                  A    90    			or c
020046 20 FB               A    91    			jr nz,lp1
020048 3E00                A    92    			ld a,0h
02004A 320000FF            A    93    			ld (hw_palette),a
02004E C9                  A    94    			ret
                           A    95    			
                           A    96    
                           A    97    ;----------------------------------------------
                           A    98    
02004F 52656C6F 63617461   A    99    msg1		db "Relocatable code!",11,0
020057 626C6520 636F6465 
02005F 210B00 
                           A   100    
020062 52656C6F 63617461   A   101    msg2		db "Relocatable code - the revenge!
02006A 626C6520 636F6465 
020072 202D2074 68652072 
02007A 6576656E 6765210B 
020082 00 
                           A   102    
                           A   103    ;----------------------------------------------


Errors: 0
Warnings: 0
Lines Assembled: 346
